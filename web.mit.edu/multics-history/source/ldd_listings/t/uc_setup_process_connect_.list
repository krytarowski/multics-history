	COMPILATION LISTING OF SEGMENT uc_setup_process_connect_
	Compiled by: Multics PL/I Compiler, Release 30, of February 16, 1988
	Compiled at: Honeywell Bull, Phoenix AZ, SysM
	Compiled on: 07/13/88  1025.0 mst Wed
	    Options: optimize map

        1 /****^  ********************************************
        2*        *                                          *
        3*        * Copyright, (C) Honeywell Bull Inc., 1987 *
        4*        *                                          *
        5*        ******************************************** */
        6 
        7 /* *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */
        8 /*							       */
        9 /* This module is part of the Multics Network Architecture (MNA) version of  */
       10 /* user control.  MNA user control serves users coming into Multics via      */
       11 /* separate networks (eg, the Distributed Systems Architecture (DSA)	       */
       12 /* network.  MNA user control is not used for logins through the Multics     */
       13 /* Communications System (MCS).  A separate MCS user control system serves   */
       14 /* MCS users.						       */
       15 /*							       */
       16 /* To Be Supplied:						       */
       17 /*  1) Brief module description.  See MDD010 or MTBs 751 and 752 for details */
       18 /*     about this module, and its relationship to modules in the MCS user    */
       19 /*     control system.					       */
       20 /*  2) Operator error message documentation.  This program calls	       */
       21 /*     sys_log_$general but does not contain the required descriptions of    */
       22 /*     these messages.  This omission was waived for initial installation    */
       23 /*     of the subsystem by the auditor, security coordinator, and by MDC     */
       24 /*     management.						       */
       25 /*							       */
       26 /* *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */
       27 
       28 /****^  HISTORY COMMENTS:
       29*  1) change(86-04-04,Swenson), approve(87-07-13,MCR7737),
       30*     audit(87-05-16,GDixon), install(87-08-04,MR12.1-1055):
       31*     Initial coding.
       32*  2) change(87-04-28,GDixon), approve(87-07-13,MCR7737),
       33*     audit(87-07-30,Brunelle), install(87-08-04,MR12.1-1055):
       34*     Updated for change to user_table_entry.incl.pl1.
       35*  3) change(87-05-15,GDixon), approve(87-07-13,MCR7737),
       36*     audit(87-07-30,Brunelle), install(87-08-04,MR12.1-1055):
       37*      A) Add cleanup handler; convert to sys_log_$general.
       38*      B) Add check for process ring below minimum login server ring.
       39*      C) Set ute.line_type.
       40*      D) Allow reconnecting user to respecify ute.outer_module.
       41*  4) change(87-05-20,GDixon), approve(87-07-13,MCR7737),
       42*     audit(87-07-30,Brunelle), install(87-08-04,MR12.1-1055):
       43*     When an MNA user logs in, a UTE is created.  When this user connects to an
       44*     existing process, that proc's UTE is retained and the login UTE is freed;
       45*     but the whotab is never updated to reflect freeing of the login UTE.
       46*      A) Call uc_logout_$reconnect to do all aspects of logging out the login
       47*         UTE except for auditing the LOGOUT.  Instead, we audit a CONNECT
       48*         operation.
       49*  5) change(87-07-28,GDixon), approve(87-07-28,MCR7737),
       50*     audit(87-07-30,Brunelle), install(87-08-04,MR12.1-1055):
       51*      A) Remove redundant statement in Set_Outer_Module proc.
       52*                                                   END HISTORY COMMENTS */
       53 
       54 /* format: style4,indattr */
       55 
       56 uc_setup_process_connect_:
       57      procedure (P_ls_request_server_info_ptr,
       58 	P_ls_request_ptr, P_ls_request_lth,
       59 	P_ls_response_ptr, P_ls_response_lth,
       60 	P_ls_ipc_reply_ptr, P_utep, P_code);
       61 
       62 /* Parameters */
       63 
       64 dcl  P_ls_request_server_info_ptr ptr parameter;
       65 dcl  P_ls_request_ptr       ptr parameter;
       66 dcl  P_ls_request_lth       fixed bin (18) parameter;
       67 dcl  P_ls_response_ptr      ptr parameter;
       68 dcl  P_ls_response_lth      fixed bin (18) parameter;
       69 dcl  P_ls_ipc_reply_ptr     ptr parameter;
       70 dcl  P_utep	        ptr parameter;
       71 dcl  P_code	        fixed bin (35) parameter;
       72 
       73 /* Automatic */
       74 
       75 dcl  added_info	        char(128);
       76 dcl  code		        fixed bin (35) automatic;
       77 dcl  process_number	        fixed bin automatic;
       78 dcl  saved_utep	        ptr automatic;
       79 dcl  temp_utep	        ptr automatic;
       80 dcl  whoptr	        ptr automatic;
       81 
       82 /* Entries */
       83 
       84 dcl  aim_check_$equal       entry (bit (72) aligned, bit (72) aligned) returns (bit (1) aligned);
       85 dcl  as_access_audit_$process entry (ptr, fixed bin, char (*));
       86 dcl  as_access_audit_$process_connect_denied entry (ptr, ptr, char (*));
       87 dcl  as_any_other_handler_$no_cleanup entry (char (*), label);
       88 dcl  asu_$release_suspended_process entry (ptr);
       89 dcl  asu_$setup_login_server_handle entry (ptr);
       90 dcl  display_access_class_  entry (bit(72) aligned) returns(char(32) aligned);
       91 dcl  get_system_free_area_  entry() returns(ptr);
       92 dcl  ioa_$rsnnl	        entry () options (variable);
       93 dcl  ipc_$decl_event_call_chn entry (fixed bin (71), entry, ptr, fixed bin, fixed bin (35));
       94 dcl  uc_list_disconnected_procs_ entry (ptr, ptr, ptr);
       95 dcl  uc_logout_$reconnect   entry (ptr, char(*));
       96 dcl  uc_proc_term_handler_  entry (ptr);
       97 dcl  uc_set_pit_tty_info_   entry (ptr, fixed bin (35));
       98 dcl  user_table_mgr_$free entry (ptr);
       99 dcl  user_table_mgr_$utep_from_handle entry (bit (72) aligned) returns (ptr);
      100 
      101 /* External */
      102 
      103 dcl  as_error_table_$dialup_error fixed bin (35) ext static;
      104 dcl  as_error_table_$illegal_om_arg fixed bin(35) ext static;
      105 dcl  as_error_table_$no_connect_aclass fixed bin (35) ext static;
      106 dcl  as_error_table_$no_disconnected_procs fixed bin (35) ext static;
      107 dcl  as_error_table_$no_such_process_msg fixed bin (35) ext static;
      108 dcl  as_error_table_$ring_too_low fixed bin(35) ext static;
      109 dcl  error_table_$bad_arg   fixed bin (35) ext static;
      110 dcl  error_table_$id_not_found fixed bin (35) ext static;
      111 
      112 /* Based */
      113 
      114 dcl  system_area	        area based (system_area_ptr);
      115 
      116 /* Internal */
      117 
      118 dcl  system_area_ptr        ptr int static init(null);
      119 
      120 /* Constant */
      121 
      122 dcl  FALSE	        bit (1) aligned initial ("0"b) internal static options (constant);
      123 dcl  ME		        char (25) initial ("uc_setup_process_connect_") internal static options (constant);
      124 dcl  TRUE		        bit (1) aligned initial ("1"b) internal static options (constant);
      125 
      126 /* Conditions */
      127 
      128 dcl (any_other, cleanup)    condition;
      129 
      130 /* Builtins */
      131 
      132 dcl (addr, currentsize, max, null, unspec)
      133 		        builtin;
      134 
      135 /* Program */
      136 
      137 	ls_request_server_info_ptr = P_ls_request_server_info_ptr;
      138 	ls_request_ptr = P_ls_request_ptr;
      139 	ls_reply_message_ptr = P_ls_ipc_reply_ptr;
      140 	P_utep = null;
      141 	code = 0;
      142 
      143 	if system_area_ptr = null then
      144 	     system_area_ptr = get_system_free_area_();
      145 	uc_disconnected_process_list_ptr = null ();
      146 	on cleanup begin;
      147 	     if uc_disconnected_process_list_ptr ^= null then
      148 		free uc_disconnected_process_list in (system_area);
      149 	end;
      150 
      151 	on any_other
      152 	     call as_any_other_handler_$no_cleanup (ME, FAULT_LABEL);
      153 
      154 	utep = user_table_mgr_$utep_from_handle (
      155 	     login_server_process_request.handle);
      156 	if utep = null () then
      157 	     call Abort_With_Error (SL_LOG_SILENT,
      158 	     error_table_$id_not_found, 
      159 	     "Could not locate user table entry for handle ^24.3b.",
      160 	     login_server_process_request.handle);
      161 
      162 	if ute.person ^= login_server_process_request.person_id |
      163 	     ute.project ^= login_server_process_request.project_id then
      164 	     call Abort_With_Error (SL_LOG_SILENT, error_table_$bad_arg,
      165 	     "Person.Project in connect request (^a.^a) do not match UTE (^a.^a).",
      166 	     login_server_process_request.person_id,
      167 	     login_server_process_request.project_id, ute.person,
      168 	     ute.project);
      169 
      170 	call uc_list_disconnected_procs_ (utep, addr(system_area),
      171 	     uc_disconnected_process_list_ptr);
      172 
      173 	if uc_disconnected_process_list_ptr = null () then
      174 	     call Abort (as_error_table_$no_disconnected_procs);
      175 
      176 	if uc_disconnected_process_list.n_disconnected_processes = 0 then
      177 	     call Abort (as_error_table_$no_disconnected_procs);
      178 
      179 	process_number = login_server_process_request.process_number;
      180 	if process_number = 0 &
      181 	     uc_disconnected_process_list.n_disconnected_processes = 1 then
      182 	     process_number = 1;
      183 
      184 	if process_number < 1 |
      185 	   process_number >
      186 	     uc_disconnected_process_list.n_disconnected_processes then
      187 	     call Abort (as_error_table_$no_such_process_msg);
      188 
      189 	temp_utep =
      190 	     uc_disconnected_process_list.process (process_number).utep;
      191 
      192 	if ^aim_check_$equal (ute.process_authorization,
      193 	     temp_utep -> ute.process_authorization) then do;
      194 	     call ioa_$rsnnl ("User authorization = ^a, Process authorization = ^a",
      195 		added_info, (0),
      196 		display_access_class_ (ute.process_authorization),
      197 		display_access_class_ (
      198 		temp_utep -> ute.process_authorization));
      199 	     call as_access_audit_$process_connect_denied (utep, temp_utep,
      200 		added_info);
      201 	     call Abort (as_error_table_$no_connect_aclass);
      202 	end;
      203      
      204 	if login_server_process_request.other_flags.minimum_ring_given then
      205 	     if temp_utep -> ute.initial_ring <
      206 		login_server_process_request.minimum_ring then do;
      207 		call ioa_$rsnnl ("Connection minimum ring = ^d, Process initial ring = ^d",
      208 		     added_info, (0),
      209 		     login_server_process_request.minimum_ring,
      210 		     temp_utep -> ute.initial_ring);
      211 		call as_access_audit_$process_connect_denied (utep,
      212 		     temp_utep, added_info);
      213 		call Abort (as_error_table_$ring_too_low);
      214 	     end;
      215 
      216 /**** Make UTE for disconnected process ute associated with this connection.
      217*      This includes copying ute lock state into the disconnected UTE.        */
      218 	temp_utep -> ute.lock_value =
      219 	     temp_utep -> ute.lock_value + ute.lock_value;
      220 	saved_utep = utep;				/* save old UTE pointer */
      221 	utep = temp_utep;				/* switch UTEs */
      222 	P_utep = utep;				/* tell caller where we are */
      223 
      224 /**** Update the connection information into the new UTE.		       */
      225 	ute.tty_name = login_server_process_request.connection_info.connection_name;
      226 	ute.tty_id_code = login_server_process_request.connection_info.terminal_id;
      227 	ute.terminal_type = login_server_process_request.connection_info.terminal_type;
      228 	ute.line_type = login_server_process_request.connection_info.line_type;
      229 
      230 /**** We should allow the user to specify a new outer module.  We must,
      231*      however, validate the user's ability to select one. */
      232 	call Setup_Outer_Module();
      233 
      234 	if login_server_process_request.switch_flags.brief_given then do;
      235 	     ute.at.brief = login_server_process_request.switch_values.brief;
      236 	     ute.ur_at.brief = TRUE;
      237 	end;
      238 
      239 /**** Copy the login_server process_id, event_channel, and handle from
      240*      the new UTE into the old UTE.  Keep the handle which encodes the old
      241*      UTE, however. */
      242 
      243 	ute.login_server_info.his_handle = saved_utep -> ute.login_server_info.his_handle;
      244 	ute.login_server_info.response_event_channel = saved_utep -> ute.login_server_info.response_event_channel;
      245 	ute.login_server_info.termination_event_channel = saved_utep -> ute.login_server_info.termination_event_channel;
      246 	ute.login_server_info.process_id = saved_utep -> ute.login_server_info.process_id;
      247 
      248 /**** If, however, login_server_info.our_handle equals 0, then this UTE was
      249*      created via MCS (not MNA).  We must create a handle. */
      250 
      251 	if ute.login_server_info.our_handle = ""b then
      252 	     call asu_$setup_login_server_handle (utep);
      253 
      254 /**** Here, we re-declare the event channel associated with this UTE to
      255*      be associated with our event call handler, uc_proc_term_handler_.
      256*      This UTE might have been associated with an MCS channel before, and
      257*      hence used another event call handler (presumably dialup_). */
      258 
      259 	call ipc_$decl_event_call_chn (ute.event, uc_proc_term_handler_, utep, 1 /* priority */, code);
      260 	if code ^= 0 then				/* let user reconnect, but they'll be problems later */
      261 	     call Error_No_Abort (SL_LOG_BEEP, code,
      262 	     "Setting event call handler at reconnection for ^a.^a ^a ^w.",
      263 	     ute.person, ute.project, ute.tty_name, ute.proc_id);
      264 
      265 	call as_access_audit_$process (utep, AS_AUDIT_PROCESS_CONNECT,
      266 	     "");
      267 	call uc_logout_$reconnect (saved_utep, "");	/* Remove login UTE from whotab */
      268 	call user_table_mgr_$free (saved_utep);
      269 	call uc_set_pit_tty_info_ (utep, code);
      270 	if code ^= 0 then
      271 	     call Error_No_Abort (SL_LOG_SILENT, code,
      272 	     "Setting pit tty info at reconnection for ^a.^a ^a ^w.",
      273 	     ute.person, ute.project, ute.tty_name, ute.proc_id);
      274 
      275 	call asu_$release_suspended_process (utep);
      276 
      277 	ute.pdtep -> user.n_disconnected =
      278 	     max (0, ute.pdtep -> user.n_disconnected - 1);
      279 	ute.disconnected = FALSE;
      280 	if ute.whotabx > 0 then do;
      281 	     whoptr = as_data_$whoptr;
      282 	     whotab.e (ute.whotabx).disconnected = FALSE;
      283 	     whotab.e (ute.whotabx).idcode = ute.tty_id_code;
      284 	end;
      285 	ute.destroy_flag = WAIT_LOGOUT_SIG;
      286 
      287 /**** Setup login_server_process_response */
      288 	ls_response_ptr = P_ls_response_ptr;
      289 	ls_process_response_accounting_message_length = 0;
      290 	unspec (login_server_process_response) = ""b;
      291 	login_server_process_response.header.message_type = LS_PROCESS_RESPONSE;
      292 	login_server_process_response.header.version = LOGIN_SERVER_PROCESS_RESPONSE_VERSION_1;
      293 	login_server_process_response.status_code = 0;
      294 	login_server_process_response.process_id = ute.proc_id;
      295 	login_server_process_response.new_handle = ute.login_server_info.our_handle;
      296 	login_server_process_response.authorization = ute.process_authorization;
      297 	call ioa_$rsnnl ("^a.^a.^a",
      298 	     login_server_process_response.process_group_id, (0),
      299 	     ute.person, ute.project, ute.tag);
      300 	login_server_process_response.process_number = process_number;
      301 	login_server_process_response.n_disconnected_processes =
      302 	     ute.pdtep -> user.n_disconnected;
      303 	login_server_process_response.start_event_channel = ute.sus_channel;
      304 	login_server_process_response.initial_ring = ute.initial_ring;
      305 
      306 /**** login_server_process_response.flags must be set by our caller since we
      307*      don't know the caller's true intention.  He may be reconnecting to do
      308*      a new_proc, to destroy the process, or to continue operation in the 
      309*      suspended process.  This corresponds to different flag settings.       */
      310 
      311 	P_ls_response_lth = currentsize (login_server_process_response);
      312 RETURN:
      313 	if uc_disconnected_process_list_ptr ^= null () then
      314 	     free uc_disconnected_process_list in (system_area);
      315 	P_code = code;
      316 	return;
      317 
      318 FAULT_LABEL:
      319 	code = as_error_table_$dialup_error;
      320 	goto RETURN;
      321 
      322 /* *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */
      323 /*							       */
      324 /* Abort:  Stop reconnection by returning nonzero code to our caller.  No    */
      325 /* log message is produced.					       */
      326 /*							       */
      327 /* Syntax:  call Abort (code);				       */
      328 /*							       */
      329 /* *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */
      330 
      331 
      332 Abort:
      333      procedure (P_code);
      334 
      335 dcl  P_code	        fixed bin (35) parameter;
      336 
      337 	code = P_code;
      338 	goto RETURN;
      339      end Abort;
      340 
      341 
      342 /* *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */
      343 /*							       */
      344 /* Abort_With_Error:  Stop reconnection by emitting an explanatory as log    */
      345 /* message, and returning nonzero code to our caller.		       */
      346 /*							       */
      347 /* Syntax:  call Abort_With_Error (severity, code, ioa_ctl, args);	       */
      348 /*							       */
      349 /*							       */
      350 /* Error_No_Abort: Add error message to as log, but do not stop	       */
      351 /* reconnection.						       */
      352 /*							       */
      353 /* Syntax:  call Error_No_Abort (severity, code, ioa_ctl, args);	       */
      354 /*							       */
      355 /* *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */
      356 
      357 Abort_With_Error:
      358      procedure options (variable);
      359 
      360 dcl  cu_$arg_list_ptr      entry returns(ptr);
      361 dcl  sys_log_$general      entry (ptr);
      362 
      363      	sl_info = sl_info_sev_code_msg;
      364 	sl_info.arg_list_ptr = cu_$arg_list_ptr();
      365 	sl_info.caller = ME;
      366 	call sys_log_$general (addr(sl_info));
      367 	code = sl_info.code;
      368 	go to RETURN;
      369 
      370 Error_No_Abort:
      371 	entry options (variable);
      372 	
      373      	sl_info = sl_info_sev_code_msg;
      374 	sl_info.arg_list_ptr = cu_$arg_list_ptr();
      375 	sl_info.caller = ME;
      376 	call sys_log_$general (addr(sl_info));
      377      end Abort_With_Error;
      378 
      379 /*  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *   */
      380 
      381 /*  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *   */
      382 
      383 
      384 Setup_Outer_Module:
      385      procedure ();
      386 
      387 	if login_server_process_request.outer_module ^= "" then
      388 	     if ^ute.at.vinitproc then
      389 		call Abort (as_error_table_$illegal_om_arg);
      390 	     else ute.outer_module =
      391 		login_server_process_request.outer_module;
      392 	else if ute.outer_module = ute.pdtep -> user.outer_module then;
      393 	else if ute.outer_module = as_data_$tty_dim then do;
      394 	     if login_server_process_request.default_io_module ^= "" then
      395 		ute.outer_module =
      396 		login_server_process_request.default_io_module;
      397 	end;
      398 	return;
      399      end Setup_Outer_Module;
      400 
      401 /*  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *   */
      402 
      403 
      404 /* format: off */
      405  /* BEGIN INCLUDE FILE ... as_data_.incl.pl1 ... */
  1     2 
  1     3 /* format: style4 */
  1     4 
  1     5 /* This file must be kept in sync with as_data_.alm */
  1     6 
  1     7 /****^  HISTORY COMMENTS:
  1     8*  1) change(86-09-21,Beattie), approve(86-09-22,MCR7542),
  1     9*     audit(86-10-31,Brunelle), install(86-11-12,MR12.0-1211):
  1    10*     Remove references to the 963 and 029 preaccess commands and remove support
  1    11*     for ARDS, 202_ETX, 2741 and 1050 in system interfaces.
  1    12*  2) change(86-09-25,Swenson), approve(87-07-20,MCR7737),
  1    13*     audit(87-07-20,GDixon), install(87-08-04,MR12.1-1056):
  1    14*     Add references to as_data_ entrypoints added for Login Server.
  1    15*  3) change(87-03-03,Brunelle), approve(87-07-20,MCR7697),
  1    16*     audit(87-07-20,GDixon), install(87-08-04,MR12.1-1056):
  1    17*     Added new user signal field of inacrcvd (14) to handle inactivity response
  1    18*     from user.
  1    19*                                                   END HISTORY COMMENTS */
  1    20 
  1    21 dcl  as_data_$BS char (1) aligned ext static;		/* BACKSPACE character */
  1    22 dcl  as_data_$CR char (1) aligned ext static;		/* CARRIAGE RETURN character */
  1    23 dcl  as_data_$abs_dim char (32) ext static;		/* absentee DIM */
  1    24 dcl  as_data_$acct_update_priority fixed bin ext static;	/* accounting update IPC priority */
  1    25 dcl  as_data_$acsdir char (168) ext static;		/* Access Control Segment directory */
  1    26 dcl  as_data_$ansp ptr ext static;			/* answer_table */
  1    27 dcl  as_data_$as_procid bit (36) aligned ext static;	/* Answering Service process id */
  1    28 dcl  as_data_$as_ring fixed bin (3) ext static;		/* AS operating ring */
  1    29 dcl  as_data_$as_tty char (6);			/* AS master tty channel */
  1    30 dcl  as_data_$asmtp ptr ext static;			/* AS meter table */
  1    31 dcl  as_data_$autp ptr ext static;			/* absentee_user_table */
  1    32 dcl  as_data_$buzzardp ptr ext static;			/* dpg_ list of buteo processes */
  1    33 dcl  as_data_$cdtp ptr ext static;			/* CDT */
  1    34 dcl  as_data_$default_weight fixed bin (35) ext;		/* default user process load control weight */
  1    35 dcl  as_data_$devtabp ptr ext static;			/* device_table */
  1    36 dcl  as_data_$dft_user_ring fixed bin (3) ext static;	/* default user ring */
  1    37 dcl  as_data_$dutp ptr ext static;			/* daemon_user_table */
  1    38 dcl  as_data_$g115_dim char (32) ext static;
  1    39 dcl  as_data_$lct_initialized bit (1) aligned ext static;	/* LCT allocated in ring 0 */
  1    40 dcl  as_data_$lct_size fixed bin ext static;		/* CDT tty channels + spares */
  1    41 dcl  as_data_$max_user_ring fixed bin (3) ext static;	/* maximum user ring */
  1    42 dcl  as_data_$mgtp ptr ext static;			/* master group table */
  1    43 dcl  as_data_$mrd_dim char (32) ext static;		/* daemon's message routing DIM */
  1    44 dcl  as_data_$ntty_dim char (32) ext static;		/* network connection DIM */
  1    45 dcl  as_data_$pdtdir char (168) ext static;		/* PDT directory */
  1    46 dcl  as_data_$pit_ptr ptr ext static;			/* pit_temp_ */
  1    47 dcl  as_data_$rcpdir char (168) ext static;		/* RCP directory */
  1    48 dcl  as_data_$request_priority fixed bin ext static;
  1    49 dcl  as_data_$rs_ptrs (0:9) ptr ext static;		/* rate_structures */
  1    50 dcl  as_data_$rtdtp ptr ext static;			/* RTDT */
  1    51 dcl  as_data_$sat_htp ptr ext static;			/* SAT hash table */
  1    52 dcl  as_data_$satp ptr ext static;			/* SAT */
  1    53 dcl  as_data_$suffix (0:9) char (2) unaligned ext static;
  1    54 dcl  as_data_$sysdir char (168) ext static;		/* system control directory */
  1    55 dcl  as_data_$teens_suffix (10:19) char (2) unaligned ext static;
  1    56 dcl  as_data_$terminet_tabs_string char (144) varying ext static;
  1    57 dcl  as_data_$tty_dim char (32) ext static;		/* standard interactive DIM */
  1    58 dcl  as_data_$update_priority fixed bin ext static;	/* ??? */
  1    59 dcl  as_data_$version char (8) ext static;		/* AS version */
  1    60 dcl  as_data_$whoptr ptr ext static;			/* whotab */
  1    61 
  1    62 dcl  1 as_data_$login_args aligned ext static,		/* control arguments for login */
  1    63        2 n_login_args fixed bin,
  1    64        2 pad fixed bin,
  1    65        2 login_args (55 /* as_data_$login_args.n_login_args */) char (24) unaligned;
  1    66 
  1    67 dcl  1 as_data_$signal_types ext static aligned,		/* IPC process control signals */
  1    68        2 n_signals fixed bin,
  1    69        2 pad fixed bin,
  1    70        2 signals (14 /* as_data_$signal_types.n_signals */) char (8) unaligned;
  1    71 
  1    72 dcl  1 as_data_$system_signal_types ext static aligned,	/* IPC process control signals */
  1    73        2 n_system_signals fixed bin,
  1    74        2 pad fixed bin,
  1    75        2 system_signals (10 /* as_data_$system_signal_types.n_system_signals */) char (8) unaligned;
  1    76 
  1    77 dcl  as_data_$login_words fixed bin ext static aligned,
  1    78 						/* interactive login words */
  1    79      1 as_data_login_words aligned based (addr (as_data_$login_words)),
  1    80        2 n_words fixed bin,
  1    81        2 pad fixed bin,
  1    82        2 words (0 refer (as_data_login_words.n_words)) char (16) unaligned;
  1    83 
  1    84 dcl  as_data_$debug_flag bit (1) aligned external static;
  1    85 dcl  as_data_$ls_request_server_info_ptr ptr external static;
  1    86 dcl  as_data_$ls_message_buffer_cur_lth fixed bin (18) external static;
  1    87 dcl  as_data_$ls_message_buffer_max_lth fixed bin (18) external static;
  1    88 dcl  as_data_$ls_message_buffer_ptr ptr external static;
  1    89 
  1    90 /* END INCLUDE FILE ... as_data_.incl.pl1 ... */
      405 
      406  /* BEGIN include file access_audit_bin_header.incl.pl1 */
  2     2 
  2     3 /* format: style4 */
  2     4 
  2     5 /* NOTE: All changes must also be done to access_audit_bin_header.incl.alm */
  2     6 
  2     7 /* 85-01-18 E. Swenson - renamed to access_audit_bin_header.incl.pl1 */
  2     8 /* 85-01-17 E. Swenson - restructured, added session_uid, changed
  2     9*   min and max authorization to authorization range. */
  2    10 /* 85-01-07 EJ Sharpe - added min_authorization, cleanup */
  2    11 /* 84-11-15 EJ Sharpe - added event_flags word */
  2    12 /* 84-11-06 EJ Sharpe - added unaligned attr to version and proxy_flag */
  2    13 /* 84-10-24 EJ Sharpe - added the constants */
  2    14 /* 84-09-04 BIM - created */
  2    15 
  2    16 declare  audit_record_ptr pointer;
  2    17 
  2    18 dcl  1 audit_record_header aligned based (audit_record_ptr),
  2    19        2 header aligned like arh_header_,
  2    20        2 subject aligned like arh_user_info_;
  2    21 
  2    22 dcl  1 audit_record_header_proxy aligned based (audit_record_ptr),
  2    23        2 header aligned like arh_header_,
  2    24        2 subjects (2) aligned like arh_user_info_;
  2    25 
  2    26 dcl  1 arh_header_ aligned based,
  2    27        2 type fixed bin (9) unsigned unaligned,
  2    28        2 version fixed bin (9) unsigned unaligned,
  2    29        2 flags unaligned,
  2    30          3 (
  2    31          subject_is_process,				/* binary data in subject is valid */
  2    32          object_is_valid				/* There is an object */
  2    33          ) bit (1) unaligned,
  2    34          3 pad bit (16) unaligned,
  2    35        2 operation_code bit (36) aligned,		/* like access_audit_encoded_op */
  2    36        2 event_flags bit (36) aligned,			/* like access_audit_eventflags */
  2    37        2 session_uid fixed bin (35);			/* uid for the login session */
  2    38 
  2    39 dcl  1 arh_user_info_ aligned based,
  2    40        2 person char (22) unaligned,			/* see anonymous bit */
  2    41        2 project char (9) unaligned,			/*  blank  for nologin w/out proj */
  2    42        2 tag char (1) unaligned,
  2    43        2 ring fixed bin (3) uns unaligned,
  2    44        2 anonymous bit (1) unaligned,
  2    45        2 pad3 bit (32) unaligned,
  2    46        2 process_id bit (36) aligned,
  2    47        2 authorization bit (72) aligned,
  2    48        2 authorization_range (2) bit (72) aligned;
  2    49 
  2    50 dcl  ARH_TYPE_PROXY fixed bin init (2)
  2    51 	static options (constant);
  2    52 dcl  ARH_TYPE_NO_PROXY fixed bin init (1)
  2    53 	static options (constant);
  2    54 dcl  ACCESS_AUDIT_HEADER_VERSION_3 fixed bin (9) unsigned
  2    55 	init (3) static options (constant);
  2    56 
  2    57 /* End include file access_audit_bin_header.incl.pl1 */
      406  /* not used by needed by PL/I */
      407  /*  BEGIN:   as_audit_structures.incl.pl1		  *  *  *  *  *  */
  3     2 
  3     3 /****^  HISTORY COMMENTS:
  3     4*  1) change(84-01-17,Swenson), approve(), audit(), install():
  3     5*     Initial coding.
  3     6*  2) change(87-06-08,GDixon), approve(87-07-13,MCR7741),
  3     7*     audit(87-07-31,Brunelle), install(87-08-04,MR12.1-1056):
  3     8*      A) Add AS_AUDIT_CHANNEL_ACTIONS, AS_AUDIT_CHANNEL_DIRECTION, and
  3     9*         AS_AUDIT_CHANNEL_SERVICE_INFO arrays.
  3    10*      B) Add channel audit actions for dialin, dialout and dial system.
  3    11*      C) Correct declaration of as_channel_audit_record_.pad2.
  3    12*      D) Revise channel_audit_info.
  3    13*  3) change(87-07-15,GDixon), approve(87-07-15,MCR7741),
  3    14*     audit(87-07-31,Brunelle), install(87-08-04,MR12.1-1056):
  3    15*      A) Add AS_AUDIT_PROCESS_TERMINATE action code.
  3    16*                                                   END HISTORY COMMENTS */
  3    17 
  3    18 /* format: style2 */
  3    19 
  3    20 /* This include file describes the binary data associated with
  3    21*   Answering Service audit records.  */
  3    22 
  3    23 /**** This first structure defines the Identification and Authentication
  3    24*      (I&A) audit records associated with login attempts for interactive
  3    25*      and daemon logins */
  3    26 
  3    27      dcl	   1 as_ia_audit_record_int_dmn
  3    28 			      structure aligned based,
  3    29 	     2 header	      like audit_record_header aligned,
  3    30 	     2 record	      like as_ia_audit_record_;
  3    31 
  3    32 /**** This one is for absentee logins which are not proxy absentees */
  3    33 
  3    34      dcl	   1 as_ia_audit_record_abs
  3    35 			      structure aligned based,
  3    36 	     2 header	      like audit_record_header aligned,
  3    37 	     2 record	      like as_ia_audit_record_,
  3    38 	     2 absentee_input_path
  3    39 			      char (168);
  3    40 
  3    41      dcl	   1 as_ia_audit_record_abs_proxy
  3    42 			      structure aligned based,
  3    43 	     2 header	      like audit_record_header aligned,
  3    44 	     2 record	      like as_ia_audit_record_,
  3    45 	     2 absentee_input_path
  3    46 			      char (168),
  3    47 	     2 proxy_user	      char (32);
  3    48 
  3    49 /**** The following structure is common to all the I&A records.  It
  3    50*      contains the relevant information about the I&A process. */
  3    51 
  3    52      dcl	   1 as_ia_audit_record_  structure aligned based,
  3    53 	     2 type	      fixed bin (9) unsigned unaligned,
  3    54 	     2 version	      fixed bin (9) unsigned unaligned,
  3    55 	     2 process_type	      fixed bin (3) unsigned unaligned,
  3    56 	     2 min_ring	      fixed bin (3) unsigned unaligned,
  3    57 	     2 max_ring	      fixed bin (3) unsigned unaligned,
  3    58 	     2 pad1	      bit (9) unaligned,
  3    59 	     2 attributes	      like user_attributes,
  3    60 	     2 audit_flags	      bit (36) aligned,
  3    61 	     2 channel	      char (32) aligned,
  3    62 	     2 terminal_type      char (32) aligned,
  3    63 	     2 answerback	      char (4) aligned;
  3    64 
  3    65 /**** The following structure represents the binary information 
  3    66*      associated with a communications channel access audit message. */
  3    67 
  3    68      dcl	   1 as_channel_audit_record
  3    69 			      structure aligned based,
  3    70 	     2 header	      like audit_record_header aligned,
  3    71 	     2 record	      like as_channel_audit_record_;
  3    72 
  3    73 
  3    74      dcl	   1 as_channel_audit_record_
  3    75 			      structure aligned based,
  3    76 	     2 type	      fixed bin (9) unsigned unaligned,
  3    77 	     2 version	      fixed bin (9) unsigned unaligned,
  3    78 	     2 flags	      unaligned,
  3    79 	       3 channel_info_valid
  3    80 			      bit (1) unaligned,
  3    81 	       3 current_access_class_valid
  3    82 			      bit (1) unaligned,
  3    83 	       3 pad1	      bit (16) unaligned,
  3    84 	     2 channel_name	      char (32),
  3    85 	     2 current_access_class
  3    86 			      (2) bit (72) aligned,
  3    87 	     2 access_class_range (2) bit (72) aligned,
  3    88 	     2 current_service_type
  3    89 			      fixed bin (17) unaligned,
  3    90 	     2 service_type	      fixed bin (17) unaligned,
  3    91 	     2 terminal_type      char (32),
  3    92 	     2 authenticated_user aligned,
  3    93 	       3 personid	      char (22) unaligned,
  3    94 	       3 projectid	      char (9) unaligned,
  3    95 	       3 pad2	      bit (9) unaligned;
  3    96 
  3    97 /**** The following structure represents the binary information 
  3    98*      associated with a dial service audit record */
  3    99 
  3   100      dcl	   1 as_dial_service_audit_record
  3   101 			      structure aligned based,
  3   102 	     2 header	      like audit_record_header aligned,
  3   103 	     2 record	      like as_dial_service_audit_record_;
  3   104 
  3   105      dcl	   1 as_dial_service_audit_record_
  3   106 			      structure aligned based,
  3   107 	     2 type	      fixed bin (9) unsigned unaligned,
  3   108 	     2 version	      fixed bin (9) unsigned unaligned,
  3   109 	     2 dial_server_ring   fixed bin (3) unsigned unaligned,
  3   110 	     2 flags	      unaligned,
  3   111 	       3 registered_server
  3   112 			      bit (1) unaligned,
  3   113 	       3 privileged_server
  3   114 			      bit (1) unaligned,
  3   115 	       3 pad1	      bit (13) unaligned,
  3   116 	     2 dial_qualifier     char (32);
  3   117 
  3   118 /**** The following structure is used by dial_ctl_ to pass the required
  3   119*      information to as_access_audit_.  This structure is necessary since
  3   120*      the data is not available in the user_table_entry or cdte. */
  3   121 
  3   122      dcl	   dial_server_info_ptr   ptr;		/* pointer to following structure */
  3   123 
  3   124      dcl	   1 dial_server_info     structure aligned based (dial_server_info_ptr),
  3   125 	     2 server_ring	      fixed bin (3) unaligned,
  3   126 	     2 flags	      unaligned,
  3   127 	       3 registered	      bit (1) unaligned,
  3   128 	       3 privileged	      bit (1) unaligned,
  3   129 	       3 pad1	      bit (31) unaligned,
  3   130 	     2 dial_qualifier     char (32);
  3   131 
  3   132 /**** The following structure is used by dial_ctl_ to pass relevant information
  3   133*      to as_access_audit_.  The channel name is passed here when we do not
  3   134*      have a cdtep, for instance. */
  3   135 
  3   136      dcl	   channel_audit_info_ptr ptr;
  3   137 
  3   138      dcl	   1 channel_audit_info   aligned based (channel_audit_info_ptr),
  3   139 	     2 channel_name	      char (32),
  3   140 	     2 valid,
  3   141 	      (3 service_info,
  3   142 	       3 access_class,
  3   143 	       3 access_class_range,
  3   144 	       3 user_validation_level)
  3   145 			      bit(1) unal,
  3   146 	       3 mbz	      bit(32) unal,
  3   147 	     2 service_info	      char (32),
  3   148 	     2 access_class	      bit(72) aligned,
  3   149 	     2 access_class_range (2) bit(72) aligned,
  3   150 	     2 user_validation_level
  3   151 			      fixed bin (3);
  3   152 
  3   153      dcl	   AS_AUDIT_RECORD_IA_VERSION_1
  3   154 			      fixed bin (9) initial (1) internal static options (constant);
  3   155 
  3   156      dcl	   AS_AUDIT_RECORD_CHN_VERSION_1
  3   157 			      fixed bin (9) initial (1) internal static options (constant);
  3   158 
  3   159      dcl	   AS_AUDIT_RECORD_DIALID_VERSION_1
  3   160 			      fixed bin (9) initial (1) internal static options (constant);
  3   161 
  3   162      dcl	   (
  3   163 	   AS_AUDIT_PROCESS_CREATE
  3   164 			      initial (1),
  3   165 	   AS_AUDIT_PROCESS_DESTROY
  3   166 			      initial (2),
  3   167 	   AS_AUDIT_PROCESS_CONNECT
  3   168 			      initial (3),
  3   169 	   AS_AUDIT_PROCESS_DISCONNECT
  3   170 			      initial (4),
  3   171 	   AS_AUDIT_PROCESS_TERMINATE
  3   172 			      initial (5)
  3   173 	   )		      fixed bin (17) internal static options (constant);
  3   174 
  3   175      dcl	   (
  3   176 	   AS_AUDIT_CHANNEL_ATTACH
  3   177 			      initial (1),
  3   178 	   AS_AUDIT_CHANNEL_DETACH
  3   179 			      initial (2),
  3   180 	   AS_AUDIT_CHANNEL_DIALIN
  3   181 			      initial (3),
  3   182 	   AS_AUDIT_CHANNEL_DIALOUT
  3   183 			      initial (4),
  3   184 	   AS_AUDIT_CHANNEL_DIAL_SYSTEM
  3   185 			      initial (5)
  3   186 	   )		      fixed bin (17) internal static options (constant);
  3   187 
  3   188      dcl	   (
  3   189 	   AS_AUDIT_DIALID_START  initial (1),
  3   190 	   AS_AUDIT_DIALID_STOP   initial (2)
  3   191 	   )		      fixed bin (17) internal static options (constant);
  3   192 
  3   193      dcl	   AS_AUDIT_CHANNEL_ACTIONS	
  3   194 			      (5) char (12) internal static options (constant)
  3   195 			      initial ("ATTACH", "DETACH", "DIALIN", "DIALOUT", "DIAL SYSTEM");
  3   196      dcl     AS_AUDIT_CHANNEL_DIRECTION
  3   197 			      (5) char (4) internal static options (constant)
  3   198 			      initial ("to", "from", "to", "from", "to");
  3   199      dcl     AS_AUDIT_CHANNEL_SERVICE_INFO
  3   200 			      (5) char (12) internal static options (constant)
  3   201 			      initial ("Service", "Service", "Dial ID", "Destination", "VChannel");
  3   202      dcl	   AS_AUDIT_PROCESS_ACTIONS
  3   203 			      (5) char (10) internal static options (constant)
  3   204 			      initial ("CREATE", "DESTROY", "CONNECT", "DISCONNECT", "TERMINATE");
  3   205 
  3   206 /*  END OF:  as_audit_structures.incl.pl1		  *  *  *  *  *  */
      407 
      408  /* BEGIN INCLUDE FILE ... dialup_values.incl.pl1 */
  4     2 
  4     3 /* format: style4 */
  4     4 
  4     5 /* Values for "cdte.tra_vec" used by dialup_ and others. */
  4     6 
  4     7 /* Modified by T. Casey April 1976 to add WAIT_NEW_PASSWORD
  4     8*   -		in 1977 and 1978 to add WAIT_(GREETING_MSG DELETE_CHANNEL)
  4     9*   -		and in October 1979 to add WAIT_CONNECT_REQUEST
  4    10*   Modified by Robert Coren in May 1981 to add TANDD_ATTACH values and 
  4    11*		WAIT_DISCARD_WAKEUP
  4    12*   Modified by T. Casey, July 1981, for MR9.0, to add WAIT_BEFORE_HANGUP.
  4    13*   Modified by E. N. Kittlitz, July 1982, to add TTY_MASKED.
  4    14**/
  4    15 
  4    16 /****^  HISTORY COMMENTS:
  4    17*  1) change(87-04-20,GDixon), approve(87-07-13,MCR7741),
  4    18*     audit(87-07-16,Brunelle), install(87-08-04,MR12.1-1056):
  4    19*     Add constant arrays naming cdte.state, cdte.tra_vec and ute.active values.
  4    20*  2) change(87-05-11,GDixon), approve(87-07-13,MCR7741),
  4    21*     audit(87-07-16,Brunelle), install(87-08-04,MR12.1-1056):
  4    22*     Add named constants for instance tags.
  4    23*                                                   END HISTORY COMMENTS */
  4    24 
  4    25 dcl  (WAIT_DIALUP init (1),				/* Channel waiting for dialup. */
  4    26      WAIT_ANSWERBACK initial (2),			/* WRU sent, waiting for reply */
  4    27      WAIT_LOGIN_LINE init (3),			/* Greeting typed, wait for login command. */
  4    28      WAIT_LOGIN_ARGS init (4),			/* Want rest of login line */
  4    29      WAIT_OLD_PASSWORD init (5),			/* "-cpw" was specified. Wait for old password. */
  4    30      WAIT_PASSWORD init (6),				/* Waiting for password. (If "-cpw", repeat of new one.) */
  4    31      WAIT_NEW_PASSWORD init (7),			/* "-cpw" was specified. Wait for new password */
  4    32      WAIT_LOGOUT_SIG init (8),			/* Channel is hooked up. Wait for logout. */
  4    33      WAIT_LOGOUT init (9),				/* A logout has been requested. Wait for process to die */
  4    34      WAIT_LOGOUT_HOLD init (10),			/* As above but don't hang up when it dies. */
  4    35      WAIT_DETACH init (11),				/* As above but ignore channel afterwards. */
  4    36      WAIT_NEW_PROC init (12),				/* As above but make new process and continue. */
  4    37      WAIT_REMOVE init (13),				/* As above but completely expunge channel. */
  4    38      WAIT_FIN_PRIV_ATTACH init (14),			/* When channel dials up, connect it to user */
  4    39      WAIT_DIAL_RELEASE init (15),			/* Waiting for master process to release. */
  4    40      WAIT_DIAL_OUT init (16),				/* Waiting for auto call to complete */
  4    41      WAIT_HANGUP init (17),				/* Wait for the hangup event to occur for a channel */
  4    42      WAIT_SLAVE_REQUEST init (18),			/* Ignore line until someone asks */
  4    43      WAIT_GREETING_MSG init (19),			/* Print greeting message and wait for login line */
  4    44      WAIT_DELETE_CHANNEL init (20),			/* Channel deleted - mark cdte after process is destroyed */
  4    45      WAIT_CONNECT_REQUEST init (21),			/* logged in; awaiting request re disconnected processes */
  4    46      WAIT_TANDD_HANGUP init (22),			/* when channel hangs up, proceed with t & d attachment */
  4    47      WAIT_FIN_TANDD_ATTACH init (23),			/* when channel dials up, finish t & d attachment */
  4    48      WAIT_DISCARD_WAKEUPS init (24),			/* disregard all wakeups on channel */
  4    49      WAIT_BEFORE_HANGUP init (25),			/* allow output to print before hanging up */
  4    50      WAIT_DESTROY_REQUEST init (26),			/* waiting to continue with destroy request after process has destroyed itself */
  4    51      WAIT_NEW_PROC_REQUEST init (27)			/* waiting to continue with new_proc request after process has destroyed itself */
  4    52      ) fixed bin internal static options (constant);
  4    53 
  4    54 dcl  TRA_VEC_VALUES (0:13) char (32) aligned int static options (constant) init
  4    55 						/* names of ute.destroy_flag values */
  4    56 	("", "wait dialup", "wait answerback", "wait login line", /*  0-3  */
  4    57 	"wait login args", "wait old password", "wait password",  /*  4-6  */
  4    58 	"wait new password", "wait logout signal", "wait logout", /*  7-9  */
  4    59 	"wait logout hold", "wait detach", "wait new proc",       /* 10-12 */
  4    60 	"wait remove");				        /*   -13 */
  4    61 
  4    62 /* Values for "cdte.state", typewriter state. */
  4    63 
  4    64 dcl  (TTY_MASKED init (-1),				/* Terminal channel is there, but masked by MCS */
  4    65      TTY_HUNG init (1),				/* Terminal channel is there, but dead. */
  4    66      TTY_KNOWN init (2),				/* Channel being "listened" to, awaiting dialup. */
  4    67      TTY_DIALED init (5)				/* Channel is dialed up. This is normal state. */
  4    68      ) fixed bin internal static options (constant);
  4    69 
  4    70 dcl  STATE_VALUES (-1:5) char (15) aligned int static options (constant) init
  4    71 						/* names of cdte.state values */
  4    72 	("masked", "dead", "hung up", "listening", "", "", "dialed up");
  4    73 
  4    74 /* Values for "cdte.in_use" and "ate.active" */
  4    75 
  4    76 dcl  (NOW_FREE init (0),				/* Entry is empty. */
  4    77      NOW_HUNG_UP init (1),				/* Entry is usable but tty is hung up. */
  4    78      NOW_LISTENING init (2),				/* Entry is waiting for phone call. */
  4    79      NOW_DIALED init (3),				/* Entry is connected but login not complete. */
  4    80      NOW_LOGGED_IN init (4),				/* Entry is logged in but no process. */
  4    81      NOW_HAS_PROCESS init (5),			/* Entry has a valid process. */
  4    82      NOW_DIALING init (6),				/* Entry (auto_call line) is dialing */
  4    83      NOW_DIALED_OUT init (7)				/* Entry (auto_call line) is in use */
  4    84      ) fixed bin internal static options (constant);
  4    85 
  4    86 dcl  ACTIVE_VALUES (0:5) char (18) aligned int static options (constant) init
  4    87 						/* names of ute.active values */
  4    88 	("free", "hung-up", "listening", "dialed", "logged in, no proc", "logged in & proc");
  4    89 
  4    90 
  4    91 /**** Values for ute.tag */
  4    92 
  4    93 dcl (TAG_INTERACTIVE init("a"),
  4    94      TAG_UFT init("f"),
  4    95      TAG_ABSENTEE init("m"),
  4    96      TAG_PROXY init("p"),
  4    97      TAG_DAEMON init("z")
  4    98      ) char(1) int static options(constant);
  4    99 
  4   100 
  4   101 /**** Following are constants used to indicate to the process termination
  4   102*      handler the reason for the process termination.  They are used by
  4   103*      uc_proc_term_handler_, as well as uc_ls_new_proc_request_ and
  4   104*      uc_ls_destroy_request_. */
  4   105 
  4   106 dcl  (
  4   107      PT_FPE initial (1),
  4   108      PT_LOGOUT initial (4),
  4   109      PT_NEW_PROC_AUTH initial (13),
  4   110      PT_HANGUP initial (20),
  4   111      PT_SHUTDOWN initial (21),
  4   112      PT_BUMP initial (22),
  4   113      PT_ALARM initial (23),
  4   114      PT_DETACH initial (24),
  4   115      PT_UNBUMP initial (25),
  4   116      PT_OPERATOR_TERMINATE initial (27),
  4   117      PT_DESTROY_REQUEST initial (30),
  4   118      PT_NEW_PROC_REQUEST initial (31)
  4   119      ) fixed bin (17) internal static options (constant);
  4   120 
  4   121 /**** Values for ute.preempted:
  4   122*  -1  user unbumped after term signal sent
  4   123*   0  user unbumped; ignore alarm___
  4   124*   1  value internally used in load_ctl_
  4   125*   2  user bumped; when alarm___ comes in, send term signal
  4   126*   3  term signal sent; destroy process if termsgnl, alarm___, or cpulimit 
  4   127*      signals come in
  4   128*   4  user bumped; process sick, so destroy without sending term signal
  4   129*   5  trm_ signal sent, termsgnl received; (if still 3, we never got the 
  4   130*      termsgnl).						       */
  4   131 
  4   132 dcl  (
  4   133      PREEMPT_UNBUMP initial (-1),
  4   134      PREEMPT_UNBUMP_IGNORE_ALARM initial (0),
  4   135      PREEMPT_LOAD_CTL initial (1),
  4   136      PREEMPT_BUMPED initial (2),
  4   137      PREEMPT_TERM_SENT initial (3),
  4   138      PREEMPT_BUMPED_NO_TERM initial (4),
  4   139      PREEMPT_TERMSGNL_RECEIVED initial (5)
  4   140      ) fixed bin (17) internal static options(constant);
  4   141 
  4   142 dcl  PREEMPT_VALUES (-1:5) char(28) varying int static options(constant) init(
  4   143 	"unbumped",
  4   144 	"not bumped, ignore alarm___",
  4   145 	"load_ctl_",
  4   146 	"bumped",
  4   147 	"bumped, trm_ sent",
  4   148 	"bumped without trm_",
  4   149 	"bumped, termsgnl received");
  4   150 
  4   151 /* END INCLUDE FILE ... dialup_values.incl.pl1 */
      408 
      409  /* BEGIN INCLUDE FILE ... login_server_messages.incl.pl1 */
  5     2 
  5     3 /****^  HISTORY COMMENTS:
  5     4*  1) change(86-06-30,Coren), approve(86-06-30,MCR7415),
  5     5*     audit(86-07-02,Margolin), install(86-07-11,MR12.0-1092):
  5     6*     Initial implementation.
  5     7*  2) change(87-04-16,GDixon), approve(87-07-13,MCR7679),
  5     8*     audit(87-07-16,Brunelle), install(87-08-04,MR12.1-1056):
  5     9*      A) Add REQUEST_TYPES and RESPONSE_TYPES arrays.
  5    10*      B) Add login_server_validate_response.last_incorrect_password.time.
  5    11*      C) Add user_connection_info.line_type.
  5    12*      D) Add login_server_process_request.minimum_ring.
  5    13*  3) change(87-05-14,GDixon), approve(87-07-13,MCR7737),
  5    14*     audit(87-07-16,Brunelle), install(87-08-04,MR12.1-1056):
  5    15*      A) Add login_server_process_response.brief.
  5    16*      B) Add login_server_list_response.initial_ring.
  5    17*      C) Separate login_server_process_response into fixed and variable parts.
  5    18*      D) Move user_connection_info into login_server_request_header.
  5    19*                                                   END HISTORY COMMENTS */
  5    20 
  5    21 /* This include file defines all the structures passed in message segments
  5    22*   between a login server process and the Initializer (or "answering service")
  5    23*   process. For convenience, messages from the server to the initializer,
  5    24*   passed using the send_ls_request_ subroutine, are called "requests"; 
  5    25*   messages from the initializer to the server, passed using the user_message_ 
  5    26*   mechanism, are called "responses".
  5    27**/
  5    28 
  5    29 /* Request types */
  5    30 
  5    31 dcl  (LS_VALIDATE_REQUEST initial (1),			/* validate user ID and password */
  5    32       LS_PROCESS_REQUEST initial (2),			/* create or connect to a process */
  5    33       LS_LIST_REQUEST initial (3),			/* list disconnected processes */
  5    34       LS_DIAL_REQUEST initial (4),			/* find a dial server */
  5    35       LS_DISCONNECT_REQUEST initial (5),		/* report disconnection of a login channel */
  5    36       LS_LOGOUT_REQUEST initial (6),			/* discard UTE (end of dialogue) */
  5    37       LS_OPERATOR_REQUEST initial (7))			/* log the user in as an operator */
  5    38       fixed bin internal static options (constant);
  5    39 
  5    40 dcl  LS_REQUEST_TYPES        (7) char (10) internal static options (constant) initial
  5    41 		        (
  5    42 		        "validate",
  5    43 		        "process",
  5    44 		        "list",
  5    45 		        "dial",
  5    46 		        "disconnect",
  5    47 		        "logout",
  5    48 		        "operator");
  5    49 
  5    50 dcl  ls_request_ptr pointer;
  5    51 
  5    52 /* common header for all requests */
  5    53 
  5    54 dcl 1 ls_request_header aligned based (ls_request_ptr),
  5    55     2 header_version char (8),			/* version for this header */
  5    56     2 request_version char (8),			/* varies depending on the request */
  5    57     2 request_type fixed bin,
  5    58     2 pad1 bit (36),
  5    59     2 reply_event_channel fixed bin (71),		/* event channel over which reply_message should be sent */
  5    60     2 reply_handle bit (72) aligned,			/* used for dispatching response */
  5    61     2 connection_info like user_connection_info;		/* connection making this request. */
  5    62 
  5    63 dcl  LS_REQUEST_HEADER_VERSION_1 char (8) initial ("lsrh0001") internal static options (constant);
  5    64 
  5    65 dcl 1 user_connection_info aligned based,		/* common info passed in most requests */
  5    66     2 connection_name char (32),
  5    67     2 access_class_range (2) bit (72),
  5    68     2 terminal_type char (32),
  5    69     2 terminal_id char (4),
  5    70     2 line_type fixed bin;
  5    71 
  5    72 
  5    73 
  5    74 /* "validate" request: validate user ID and password */
  5    75 
  5    76 dcl 1 login_server_validate_request aligned based (ls_request_ptr),
  5    77     2 header like ls_request_header,			/* request_type = LS_VALIDATE_REQUEST */
  5    78     2 current_password char (8),			/* scrambled */
  5    79     2 authorization bit (72),				/* only valid if auth_given = "1"b */
  5    80     2 terminate_event_channel fixed bin (71),		/* event channel to notify server when process terminates */
  5    81     2 person_id char (22),				/* as specified in login line */
  5    82     2 project_id char (9),				/* likewise, might be null string */
  5    83     2 network_connection_type fixed bin,		/* see below for values */
  5    84     2 new_password char (8),				/* only valid if change_password = "1"b */
  5    85     2 flags,
  5    86       3 gpw bit (1) unaligned,			/* password generated in response to -generate_password */
  5    87       3 auth_given bit (1) unaligned,			/* -authorization specified */
  5    88       3 anonymous bit (1) unaligned,			/* "enterp" request */
  5    89       3 anon_no_password bit (1) unaligned,		/* "enter" request */
  5    90       3 change_password bit (1) unaligned,		/* gave -cpw or -gpw */
  5    91       3 change_default_auth bit (1) unaligned,		/* gave -change_default_authorization */
  5    92       3 change_default_proj bit (1) unaligned,		/* gave -change_default_project */
  5    93       3 operator bit (1) unaligned,			/* gave -operator */
  5    94       3 pad bit (28) unaligned;
  5    95 
  5    96 
  5    97 dcl  LS_VALIDATE_REQUEST_VERSION_1 char (8) internal static options (constant) initial ("lsvr0001");
  5    98 
  5    99 
  5   100 
  5   101 /* "process" request: create a process or reconnect to an existing process for the specified user */
  5   102 
  5   103 dcl 1 login_server_process_request aligned based (ls_request_ptr),
  5   104     2 fixed_part,					/* to allow for automatic copies */
  5   105       3 header like ls_request_header,			/* request_type = LS_PROCESS_REQUEST */
  5   106       3 handle bit (72),				/* as provided in validate_response */
  5   107       3 person_id char (22),				/* the real one */
  5   108       3 project_id char (9),				/* likewise */
  5   109       3 project_pad fixed bin,
  5   110       3 command_type fixed bin,			/* login, connect, etc.; see below for names */
  5   111       3 process_number fixed bin,			/* 0 if unspecified or irrelevant */
  5   112       3 default_io_module char (32),			/* I/O module to use if no outer_module specified */
  5   113       3 switch_flags,				/* used to indicate if "switch"-type control args were specified */
  5   114         4 warn_given bit (1) unaligned,
  5   115         4 force_given bit (1) unaligned,
  5   116         4 save_given bit (1) unaligned,
  5   117         4 preempt_given bit (1) unaligned,
  5   118         4 brief_given bit (1) unaligned,
  5   119         4 pad2 bit (31) unaligned,
  5   120       3 switch_values,				/* these are only valid if corresponding bit in switch_flags is on */
  5   121         4 warn bit (1) unaligned,
  5   122         4 force bit (1) unaligned,
  5   123         4 save_on_disconnect bit (1) unaligned,
  5   124         4 preempt bit (1) unaligned,
  5   125         4 brief bit (1) unaligned,			/* "0"b & brief_given => -long */
  5   126         4 pad3 bit (31) unaligned,
  5   127       3 other_flags,
  5   128         4 init_ring_given bit (1) unaligned,		/* "1"b if -ring */
  5   129         4 minimum_ring_given bit (1) unaligned,		/* "1"b if MNA terminal interface ring > 1 */
  5   130         4 immediate bit (1) unaligned,			/* "1"b => -new_proc (or -destroy) -immediate */
  5   131         4 no_start_up bit (1) unaligned,		/* "1"b if -no_start_up */
  5   132         4 pad4 bit (32) unaligned,
  5   133       3 initial_ring fixed bin,			/* valid iff init_ring_given = "1"b */
  5   134       3 minimum_ring fixed bin,			/* ring in which MNA terminal mgr operates */
  5   135       3 home_dir char (168),				/* null if not specified */
  5   136       3 outer_module char (32),			/* likewise */
  5   137       3 process_overseer char (168),			/* likewise */
  5   138       3 subsystem char (168),				/* likewise */
  5   139       3 n_args fixed bin,				/* how many arguments specified after -ag; if 0, ignore the rest of the structure */
  5   140     2 login_arguments,				/* variable part, describes stuff after -ag */
  5   141       3 arg_string_length fixed bin (21),
  5   142       3 args (ls_process_request_n_args refer (login_server_process_request.n_args)),
  5   143         4 start_index fixed bin (21),			/* position in arg_string at which arg (i) starts */
  5   144         4 arg_length fixed bin (21),			/* length of arg (i) */
  5   145       3 arg_string char (ls_process_request_arg_string_length refer (login_server_process_request.arg_string_length));
  5   146 
  5   147 dcl ls_process_request_n_args fixed bin;
  5   148 dcl ls_process_request_arg_string_length fixed bin (21);
  5   149 
  5   150 dcl  LS_PROCESS_REQUEST_VERSION_1 char (8) internal static options (constant) initial ("lspr0001");
  5   151 
  5   152 
  5   153 
  5   154 /* "list" request: list the user's disconnected processes, if any */
  5   155 
  5   156 dcl 1 login_server_list_request aligned based (ls_request_ptr),
  5   157     2 header like ls_request_header,			/* request_type = LS_LIST_REQUEST */
  5   158     2 handle bit (72);
  5   159 
  5   160 dcl  LS_LIST_REQUEST_VERSION_1 char (8) internal static options (constant) initial ("lslr0001");
  5   161 
  5   162 
  5   163 
  5   164 /* "dial" request: find a process to accept a dial */
  5   165 
  5   166 /* Note: because a dial request may or may not have been preceded
  5   167*   by a validate request/response, the initializer_handle may be null.
  5   168**/
  5   169 
  5   170 dcl 1 login_server_dial_request aligned based (ls_request_ptr),
  5   171     2 header like ls_request_header,			/* request_type = LS_DIAL_REQUEST */
  5   172     2 initializer_handle bit (72),			/* as provided in validate_response (if any) */
  5   173     2 terminate_event_channel fixed bin (71),		/* event channel to wake up login server when master process terminates */
  5   174     2 dial_qualifier char (22),
  5   175     2 person_id char (22),				/* null if not specified */
  5   176     2 project_id char (9),				/* likewise */
  5   177     2 user_person_id char (22),			/* if -user was specified, otherwise "" */
  5   178     2 user_project_id char (9);			/* likewise */
  5   179 
  5   180 dcl LS_DIAL_REQUEST_VERSION_1 char (8) internal static options (constant) initial ("lsdr0001");
  5   181 
  5   182 
  5   183 
  5   184 /* "disconnect" request: report that a login channel has disconnected */
  5   185 /* Note: this message is sent if the connection is broken either during the login dialogue
  5   186*   or later on when the process was using it */
  5   187 
  5   188 dcl 1 login_server_disconnect_request aligned based (ls_request_ptr),
  5   189     2 header like ls_request_header,			/* request_type = LS_DISCONNECT_REQUEST */
  5   190     2 handle bit (72),				/* from original validate_response */
  5   191     2 process_id bit (36);				/* ""b if no process established */
  5   192 
  5   193 dcl LS_DISCONNECT_REQUEST_VERSION_1 char (8) internal static options (constant) initial ("lsdc0001");
  5   194 
  5   195 
  5   196 
  5   197 /* "logout" request: indicates that user entered the "logout" request, ending the dialogue; does not require any response */
  5   198 
  5   199 dcl 1 login_server_logout_request aligned based (ls_request_ptr),
  5   200     2 header like ls_request_header,			/* request_type = LS_LOGOUT_REQUEST */
  5   201     2 handle bit (72);
  5   202 
  5   203 dcl LS_LOGOUT_REQUEST_VERSION_1 char (8) internal static options (constant) initial ("lslg0001");
  5   204 
  5   205 
  5   206 
  5   207 /* "operator" request: sign the user on as an operator, the result of either
  5   208*   "login -operator" or "dial system". Note that in the latter case, there may
  5   209*   not have been a validate request (if the -user control argument wasn't specified),
  5   210*    in which case initializer_handle is null, and the person_id and project_id
  5   211*    are blank.
  5   212**/
  5   213 
  5   214 dcl 1 login_server_operator_request aligned based (ls_request_ptr),
  5   215     2 header like ls_request_header,			/* request_type = LS_OPERATOR_REQUEST */
  5   216     2 initializer_handle bit (72) aligned,		/* as provided in validate_response (if any) */
  5   217     2 terminate_event_channel fixed bin (71),		/* event channel for wakeup when connection is dropped */
  5   218     2 person_id char (22),				/* likewise */
  5   219     2 project_id char (9),				/* likewise */
  5   220     2 virtual_channel char (32);			/* if -virtual_channel specified, otherwise "" */
  5   221 
  5   222 dcl  LOGIN_SERVER_OPERATOR_REQUEST_VERSION_1 char (8) internal static options (constant) initial ("lsor0001");
  5   223 
  5   224 
  5   225 
  5   226 /* Response types */
  5   227 
  5   228 dcl (LS_UNKNOWN_RESPONSE initial (100),			/* unknown response type. */
  5   229      LS_VALIDATE_RESPONSE initial (101),		/* response to validation request */
  5   230      LS_PROCESS_RESPONSE initial (102),			/* response to process request */
  5   231      LS_LIST_RESPONSE initial (103),			/* response to list request */
  5   232      LS_DIAL_RESPONSE initial (104),			/* response to dial request */
  5   233      LS_TERMINATION_RESPONSE initial (105),		/* to notify server of a logout */
  5   234      LS_NEW_PROC_RESPONSE initial (106),		/* to notify server of process termination */
  5   235      LS_OPERATOR_RESPONSE initial (107))		/* response to operator request */
  5   236 	fixed bin internal static options (constant);
  5   237 
  5   238 dcl  LS_RESPONSE_TYPES        (100:107) char (10) internal static options (constant) initial
  5   239 		        (
  5   240 		        "UNKNOWN",
  5   241 		        "validate",
  5   242 		        "process",
  5   243 		        "list",
  5   244 		        "dial",
  5   245 		        "terminate",
  5   246 		        "new_proc",
  5   247 		        "operator");
  5   248 
  5   249 /* NOTE: the server_handle is not included in the response structures because 
  5   250*   it is provided in the user_message_ structures */
  5   251 
  5   252 
  5   253 
  5   254 dcl ls_response_ptr pointer;
  5   255 
  5   256 /* common header for all responses */
  5   257 
  5   258 dcl 1 login_server_response_header aligned based (ls_response_ptr),
  5   259     2 message_type fixed bin,
  5   260     2 header_pad bit (36),				/* force doubleword alignment */
  5   261     2 version char (8);
  5   262 
  5   263 
  5   264 
  5   265 /* "validate" response: indicate whether user_id/password is valid */
  5   266 
  5   267 dcl 1 login_server_validate_response aligned based (ls_response_ptr),
  5   268     2 header like login_server_response_header,		/* message_type = LS_VALIDATE_RESPONSE */
  5   269     2 handle bit (72),				/* to be provided by the server in subsequent */
  5   270 						/* messages for the same connection */		
  5   271     2 authorization bit (72),				/* default if none was supplied */
  5   272     2 authorization_range (2) bit (72),			/* authorization range permitted for this user */
  5   273     2 status_code fixed bin (35),			/* 0 iff user is validated */
  5   274     2 person_id char (22),				/* primary name from the PNT */
  5   275     2 project_id char (9),				/* primary name from the PNT or PDT */
  5   276     2 n_disconnected_processes fixed bin,		/* number of disconnected processes for specified user */
  5   277     2 validate_pad fixed bin,
  5   278     2 previous_login_info,				/* for printing login message */
  5   279       3 time fixed bin (71),
  5   280       3 terminal_type char (32),
  5   281       3 terminal_id char (4),
  5   282     2 incorrect_passwords fixed bin,			/* number of times password given incorrectly */
  5   283     2 last_incorrect_password,			/* where it came from */
  5   284       3 time fixed bin (71), 
  5   285       3 terminal_type char (32),
  5   286       3 terminal_id char (4),
  5   287     2 password_interval fixed bin,			/* limit (in days) for password use or change */
  5   288     2 flags,
  5   289       3 disconnect bit (1) unaligned,			/* if "1"b, close the connection immediately */
  5   290       3 password_changed bit (1) unal,			/* "1"b => changed password */
  5   291       3 default_auth_changed bit (1) unal,		/* "1"b => changed default authorization */
  5   292       3 default_proj_changed bit (1) unal,		/* "1"b => changed default project */
  5   293       3 password_expired bit (1) unal,			/* "1"b => password not changed recently enough */
  5   294       3 password_unused_too_long bit (1) unal,		/* "1"b => password hasn't been used recently */
  5   295       3 pad bit (30) unaligned;
  5   296 
  5   297 dcl LS_VALIDATE_RESPONSE_VERSION_1 char (8) internal static options (constant) initial ("lsvs0001");
  5   298 
  5   299 
  5   300 
  5   301 /* "process" response: responds to request to create or connect */
  5   302 
  5   303 dcl 1 login_server_process_response aligned based (ls_response_ptr),
  5   304     2 fixed_part,
  5   305       3 header like login_server_response_header,		/* message_type = LS_PROCESS_RESPONSE */
  5   306       3 status_code fixed bin (35),			/* 0 iff process was created or requested process exists */
  5   307       3 process_id bit (36),
  5   308       3 new_handle bit (72),				/* changed if reconnecting, etc. to preexisting process, all 0 otherwise */
  5   309       3 authorization bit (72),			/* authorization of created or existing process */
  5   310       3 process_group_id char (32),			/* Person.Project.tag */
  5   311       3 process_number fixed bin,			/* as in, "Your disconnected process #2..." */
  5   312       3 n_disconnected_processes fixed bin,		/* valid even if code ^= 0, e.g., if request was ambiguous */
  5   313       3 start_event_channel fixed bin (71),		/* event channel to wake up user process on */
  5   314       3 login_instance fixed bin,			/* "This is your Nth interactive login" */
  5   315       3 accounting_info,				/* for destroyed process, if any */
  5   316         4 cpu_usage fixed bin (71),
  5   317         4 cost float bin,
  5   318       3 flags,					/* except for disconnect and logout, invalid if status_code ^= 0 */
  5   319         4 disconnect bit (1) unaligned,			/* "1"b => break the connection immediately */
  5   320         4 logout bit (1) unaligned,			/* "1"b => restart login sequence */
  5   321         4 created bit (1) unaligned,			/* "1"b => new process created */
  5   322         4 connected bit (1) unaligned,			/* "1"b => connected to old process */
  5   323         4 new_proc bit (1) unaligned,			/* "1"b => connected after new_proc */
  5   324         4 destroyed bit (1) unaligned,			/* "1"b => process destroyed */
  5   325         4 anonymous bit (1) unaligned,			/* "1"b => anonymous user ("enter" or "enterp") */
  5   326         4 already_logged_in bit (1) unaligned,		/* "1"b => user can't log in because he already is */
  5   327         4 message_coordinator bit (1) unaligned,		/* "1"b => this connection is going to be used by the message coordinator */
  5   328         4 brief bit (1) unaligned,			/* "1"b => brief user attribute from PDT */
  5   329         4 pad bit (26) unaligned,
  5   330       3 initial_ring fixed bin,			/* ring in which process was created */
  5   331       3 already_logged_in_info,			/* relevant if already_logged_in flag is "1"b */
  5   332         4 connection_name char (32),
  5   333         4 terminal_type char (32),
  5   334         4 terminal_id char (4),
  5   335     2 accounting_message_struc,			/* character string assembled by initializer giving error or warnings about the user's account */
  5   336       3 accounting_message_length fixed bin,
  5   337       3 accounting_message char (ls_process_response_accounting_message_length refer (login_server_process_response.accounting_message_length));
  5   338 
  5   339 dcl  ls_process_response_accounting_message_length fixed bin;
  5   340 
  5   341 dcl LOGIN_SERVER_PROCESS_RESPONSE_VERSION_1 char (8) internal static options (constant) initial ("lsps0001");
  5   342 
  5   343 
  5   344 
  5   345 /* "list" response: used if create request specified "list" command */
  5   346 
  5   347 dcl 1 login_server_list_response aligned based (ls_response_ptr),
  5   348     2 header like login_server_response_header,		/* message_type = LS_LIST_RESPONSE */
  5   349     2 n_processes fixed bin,				/* number of disconnected processes (might be 0) */
  5   350     2 pad_header fixed bin,
  5   351     2 process_info (login_server_list_response_n_processes refer (login_server_list_response.n_processes)),
  5   352       3 creation_time fixed bin (71),
  5   353       3 authorization bit (72),
  5   354       3 initial_ring fixed bin,
  5   355       3 pad_process_info fixed bin,
  5   356       3 connection_info like user_connection_info;
  5   357 
  5   358 dcl login_server_list_response_n_processes fixed bin;
  5   359 
  5   360 dcl LOGIN_SERVER_LIST_RESPONSE_VERSION_1 char (8) internal static options (constant) initial ("lslr0001");
  5   361 
  5   362 
  5   363 
  5   364 /* "dial" response: response to dial request */
  5   365 
  5   366 dcl 1 login_server_dial_response aligned based (ls_response_ptr),
  5   367     2 header like login_server_response_header,		/* message_type = LS_DIAL_RESPONSE */
  5   368     2 status_code fixed bin (35),			/* 0 iff dial server was found and all is OK */
  5   369     2 process_id bit (36),				/* of dial server */
  5   370     2 process_group_id char (32),			/* likewise */
  5   371     2 authorization bit (72),				/* likewise, to make sure connection is usable */
  5   372     2 start_event_channel fixed bin (71),		/* event channel to wake up user process on */
  5   373     2 process_ring fixed bin,				/* initial ring of dial server */
  5   374     2 flags,
  5   375       3 disconnect bit (1) unaligned,			/* "1"b => break connection immediately */
  5   376       3 pad bit (35) unaligned;
  5   377 
  5   378 dcl LOGIN_SERVER_DIAL_RESPONSE_VERSION_1 char (8) internal static options (constant) initial ("lsds0001");
  5   379 
  5   380 
  5   381 
  5   382 /* "termination" response: (not a response to anything): notify server that a
  5   383*   process terminated other than by logout */
  5   384 
  5   385 dcl 1 login_server_termination_response aligned based (ls_response_ptr),
  5   386     2 header like login_server_response_header,		/* message_type =  LS_TERMINATION_RESPONSE */
  5   387     2 accounting_info,				/* for printing in logout message */
  5   388       3 cpu_usage fixed bin (71),
  5   389       3 cost float bin,
  5   390       3 pad bit (33) unaligned,
  5   391     2 process_id bit (36),				/* of the logged-out process */
  5   392     2 process_group_id char (32),
  5   393     2 status_code fixed bin (35),			/* e.g., to indicate reason for fatal error */ 
  5   394     2 flags,
  5   395       3 logout bit (1) aligned,			/* no new process coming */
  5   396       3 automatic_logout bit (1) unaligned,
  5   397       3 hold bit (1) unaligned,
  5   398       3 brief bit (1) unaligned,
  5   399       3 new_proc bit (1) unaligned,			/* user-requested new process */
  5   400       3 fatal_error bit (1) unaligned,			/* process died unexpectedly */
  5   401       3 fpe_caused_logout bit (1) unaligned,		/* fatal error doesn't generate new process */
  5   402       3 fpe_loop bit (1) unaligned,			/* fatal error loop: too many in too short a time */
  5   403       3 fpe_during_init bit (1) unaligned,		/* fatal error during process initialization */
  5   404       3 offer_help bit (1) unaligned,			/* print a message offering "help" */ 
  5   405       3 pad bit (27) unaligned;
  5   406 
  5   407 dcl LOGIN_SERVER_TERMINATION_RESPONSE_VERSION_1 char (8) internal static options (constant) initial ("lstr0001");
  5   408 
  5   409 
  5   410 
  5   411 /* "new_proc" response: (not actually a response to anything) -- describes a 
  5   412*    new process (after a termination_response) */
  5   413 
  5   414 dcl 1 login_server_new_proc_response aligned based (ls_response_ptr),
  5   415     2 header like login_server_response_header,		/* message_type = LS_NEW_PROC_RESPONSE */
  5   416     2 new_authorization bit (72),			/* in case of new_proc -auth */
  5   417     2 new_start_event_channel fixed bin (71),		/* event channel for starting new process */
  5   418     2 new_process_id bit (36);			/* process_id of newly-created process */
  5   419 
  5   420 dcl  LOGIN_SERVER_NEW_PROC_RESPONSE_VERSION_1 char (8) internal static options (constant) initial ("lsnp0001");
  5   421 
  5   422 
  5   423 
  5   424 /* "operator" response: indicates success or failure of operator request */
  5   425 
  5   426 dcl 1 login_server_operator_response aligned based (ls_response_ptr),
  5   427     2 header like login_server_response_header,		/* message_type = LS_OPERATOR_RESPONSE */
  5   428     2 status_code fixed bin (35),			/* indicates success or failure */
  5   429     2 process_id bit (36),				/* process ID of the message coordinator */
  5   430     2 process_group_id char (32),			/* Person.Project.tag */
  5   431     2 event_channel fixed bin (71),			/* event channel over which to send connect/disconnect wakeups */
  5   432     2 ring fixed bin,				/* ring of message coordinator */
  5   433     2 flags,
  5   434       3 disconnect bit (1) unaligned,			/* "1" => break the connection immediately */
  5   435       3 mbz bit (35) unaligned;
  5   436 
  5   437 
  5   438 dcl  LOGIN_SERVER_OPERATOR_RESPONSE_VERSION_1 char (8) internal static options (constant) initial ("lsos0001");
  5   439 
  5   440 
  5   441 /* format of reply message sent to acknowledge receipt of a request */
  5   442 
  5   443 dcl  ls_reply_message_ptr pointer;
  5   444 
  5   445 dcl 1 ls_reply_message aligned based (ls_reply_message_ptr),
  5   446     2 code fixed bin (35),
  5   447     2 flags,
  5   448       3 request_invalid bit (1) unaligned,		/* "1"b => could not process request */
  5   449       3 response_sent bit (1) unaligned,		/* "1"b => there is a response message */
  5   450       3 as_error_code bit (1) unaligned,		/* "1"b => code is from as_error_table_ */
  5   451       3 do_not_reply bit (1) unaligned, /* "1"b => special flag for AS to prevent any reply from being sent to login server */
  5   452       3 mbz bit (32) unaligned;
  5   453 
  5   454 /* The following are values used to identify the various requests internally; those from CREATE_REQ on 
  5   455*   can appear as "command_type" in ls_process_requests. */
  5   456 
  5   457 dcl (LOGIN_REQ initial (1),
  5   458      ENTER_REQ initial (2),
  5   459      ENTERP_REQ initial (3),
  5   460      CREATE_REQ initial (4),
  5   461      DESTROY_REQ initial (5),
  5   462      CONNECT_REQ initial (6),
  5   463      NEW_PROC_REQ initial (7),
  5   464      LIST_REQ initial (8))
  5   465 	fixed bin internal static options (constant);
  5   466 
  5   467 /* The following are the possible values for login_server_validate_request.network_connection_type.
  5   468*   They are used by the initializer to select a default process overseer and an instance tag.
  5   469**/
  5   470 
  5   471 dcl (NETWORK_CONNECTION_LOGIN initial (1),
  5   472      NETWORK_CONNECTION_DSA_FILE_TRANSFER initial (2))
  5   473 	fixed bin internal static options (constant);
  5   474 
  5   475 /* END INCLUDE FILE ... login_server_messages.incl.pl1 */
      409 
      410  /*  BEGIN:   ls_request_server_info.incl.pl1		  *  *  *  *  *  */
  6     2 
  6     3 /****^  HISTORY COMMENTS:
  6     4*  1) change(86-04-05,Swenson), approve(87-07-14,MCR7737),
  6     5*     audit(87-07-14,Parisek), install(87-08-04,MR12.1-1056):
  6     6*     Initial coding.
  6     7*                                                   END HISTORY COMMENTS */
  6     8 
  6     9 /* format: style4,indattr */
  6    10 
  6    11 dcl  ls_request_server_info_ptr ptr automatic;
  6    12 dcl  1 ls_request_server_info structure aligned
  6    13 		        based (ls_request_server_info_ptr),
  6    14        2 version	        char (8),
  6    15        2 reply_ptr	        ptr,
  6    16        2 flags,
  6    17          3 initialized      bit (1) unaligned,
  6    18          3 pad1	        bit (35) unaligned,
  6    19        2 request_ms,
  6    20          3 dirname	        char (168) unaligned,
  6    21          3 entryname        char (32) unaligned,
  6    22          3 index	        fixed bin,
  6    23        2 request_info,				/* only valid while executing a request */
  6    24          3 sender_process_id bit (36) aligned;
  6    25 
  6    26 dcl  LS_REQUEST_SERVER_INFO_VERSION_1 char (8) initial ("lsrsi001") internal static options (constant);
  6    27 
  6    28 /*  END OF:  ls_request_server_info.incl.pl1		  *  *  *  *  *  */
      410 
      411  /* BEGIN INCLUDE FILE ... pdt.incl.pl1 */
  7     2 /* Requires user_attributes.incl.pl1 */
  7     3 
  7     4 /* Modified 740723 by PG to add AIM info */
  7     5 /* Modified 750604 by T. Casey to add priority scheduler parameters */
  7     6 /* Modified May 1976 by T. Casey to add cutoff warning thresholds and change version to 3 */
  7     7 /* Modified May 1977 by John Gintell to add reqfile, projfile, and SAT to header */
  7     8 /* Modified May 1978 by T. Casey to add pdir_quota to user entry */
  7     9 /* Modified June 1978 by T. Casey to add rel ptr to pdt hash table */
  7    10 /* Modified November 1978 by T. Casey to add max_(fore back)ground, n_(fore back)ground and abs_foreground_cpu_limit */
  7    11 /* Modified October 1979 by T. Casey to add counters for interactive and disconnected processes. */
  7    12 /* Modified Feb 1980 by M. B. Armstrong to implement multiple rate structures (UNCA). */
  7    13 /* Modified May 1980 by R. McDonald to use iod cpu time field for page charging (UNCA) */
  7    14 /* Modified December 1981 by E. N. Kittlitz for user_warn fields */
  7    15 /* Modified January 1982 by E. N. Kittlitz for user_attributes.incl.pl1 changes */
  7    16 /* Modified September 1982 by E. N. Kittlitz for default ring. */
  7    17 /* Modified 1984-07-05 BIM for min authorization, version to 4 */
  7    18 
  7    19 dcl (PDT_version init (4),				/* version of this declaration */
  7    20      PDT_header_lth init (256),			/* length in words of PDT head */
  7    21      PDT_entry_lth init (256),			/* length in words of PDT entry */
  7    22 
  7    23      PDT_project_name_length init (9),			/* proper length of pdt.project_name */
  7    24      PDT_person_id_length init (22)			/* proper length of user.person_id */
  7    25      ) fixed bin internal static options (constant);
  7    26 
  7    27 dcl 1 pdt based (pdtp) aligned,
  7    28 
  8     1 /* BEGIN INCLUDE FILE author.incl.pl1 */
  8     2 
  8     3 /* the "author" items must always be the first ones in the table. The
  8     4*   module which moves the converted table to the System Control process
  8     5*   fills in these data items and assumes them to be at the head of the segment
  8     6*   regardless of the specific table's actual declaration. The variables
  8     7*   "lock" and "last_install_time" used to be "process_id" and "ev_channel"
  8     8*    respectively. For tables installed in multiple processes, these
  8     9*    are to be used to lock out multiple installations. */
  8    10 
  8    11 /*  Lock should be used as a modification lock. Since, in general,
  8    12*    entries may not be moved in system tables, even by installations,
  8    13*    it is sufficient for only installers and programs that change threads
  8    14*    to set or respect the lock. Simply updating data in an entry
  8    15*    requires no such protection.
  8    16*
  8    17*    Last_install_time is used by readers of system tables to detect
  8    18*    installations or other serious modifications. By checking it before
  8    19*    and after copying a block of data, they can be protected against
  8    20*    modifications.
  8    21*
  8    22*    Modules that set the lock should save proc_group_id, and then
  8    23*    put their group id there for the time they hold the lock.
  8    24*    if they do not actually install the, they should restore the group id.
  8    25**/
  8    26 
  8    27     2 author aligned,				/* validation data about table's author */
  8    28       3 proc_group_id char (32),			/* process-group-id  (personid.projectid.tag) */
  8    29       3 lock bit (36),				/* installation lock */
  8    30       3 update_attributes bit (1) unal,			/* update/add/delete attributes */
  8    31       3 update_authorization bit (1) unal,		/* update only authorizations */
  8    32       3 deferral_notified bit (1) unal,			/* installer notified of deferral of installation */
  8    33       3 pad bit (33) unaligned,
  8    34       3 last_install_time fixed bin (71),
  8    35       3 table char (4),				/* name of table, e.g., SAT MGT TTT RTDT PDT etc. */
  8    36       3 w_dir char (64),				/* author's working directory */
  8    37 
  8    38 /* END INCLUDE FILE author.incl.pl1 */
  7    29 
  7    30     2 max_size fixed bin,				/* max number of entries table can grow */
  7    31     2 current_size fixed bin,				/* current size of table (in entries) */
  7    32     2 version fixed bin,				/* table version */
  7    33     2 freep fixed bin,				/* relptr to begin of free chain */
  7    34     2 n_users fixed bin,				/* number of entries actually used */
  7    35     2 project_name char (28),				/* name of project */
  7    36     2 project_dir char (64),				/* treename of project's directory */
  7    37     2 projfile_version fixed bin,
  7    38     2 projentry bit (66*36),
  7    39     2 pad3 (5) bit (36) aligned,
  7    40     2 reqfile_version fixed bin,
  7    41     2 reqentry bit (40*36),
  7    42     2 pad4 (9) fixed bin,
  7    43     2 sat_version fixed bin,
  7    44     2 satentry bit (52*36),				/* everything in sat.project from project.at on */
  7    45     2 pad5 (4) bit (36) aligned,
  7    46     2 date_reqfile_copied fixed bin (71),
  7    47     2 rs_number fixed bin (9) unsigned unaligned,		/* rate structure number, easier than looking in satentry */
  7    48     2 pad2l bit (27) unaligned,
  7    49     2 pad2 (16) fixed bin,				/* make header 256 words long */
  7    50     2 ht_relp fixed bin (18) aligned,			/* if nonzero, pdt has hash table at that loc */
  7    51     2 user (1019) aligned,				/* the project definition table entries */
  7    52       3 pad (256) bit (36) aligned;			/* each entry is 256 words long  */
  7    53 
  7    54 /* The hash table, if there is one, is right after the last user, and is described in hashst.incl.pl1 */
  7    55 
  7    56 
  7    57 
  7    58 dcl 1 user based (pdtep) aligned,			/* declaration of a single PDT entry  */
  7    59     2 state fixed bin,				/* 1 = normal, 2 = deleted 0 = free */
  7    60     2 lock bit (36),				/* update lock */
  7    61     2 person_id char (24) aligned,			/* login name of user */
  7    62     2 now_in fixed bin,				/* count of users logged in on this entry */
  7    63     2 password char (8) aligned,			/* password for anonymous user */
  7    64     2 at like user_attributes aligned,			/* include user_attributes.incl.pl1 */
  7    65     2 initial_procedure char (64) aligned,		/* initproc and subsystem name packed into one string */
  7    66     2 home_dir char (64) aligned,			/* user's default working directory */
  7    67     2 bump_grace fixed bin,				/* number of minutes he is protected */
  7    68     2 high_ring fixed bin,				/* highest ring user may use */
  7    69     2 default_ring fixed bin (17) unal,			/* ring user will start in */
  7    70     2 low_ring fixed bin (17) unal,			/* lowest ring user may use */
  7    71     2 outer_module char (32),				/* outer module used if user is interactive */
  7    72     2 lot_size fixed bin,				/* size of linkage offset table */
  7    73     2 kst_size fixed bin,				/* size of known segment table */
  7    74     2 cls_size fixed bin,				/* size of combined linkage */
  7    75     2 uflags,					/* various flags */
  7    76       3 dont_call_init_admin bit (1) unal,		/* call overseer direct */
  7    77       3 ip_given bit (1) unal,			/* ip_len gives length of initproc packed in initial_procedure */
  7    78       3 ss_given bit (1) unal,			/* subsystem name is packed in initial_procedure */
  7    79       3 flagpad bit (33) unal,
  7    80     2 ip_len fixed bin (17) unal,			/* length of initproc name packed in initial_procedure */
  7    81     2 ss_len fixed bin (17) unal,			/* length of subsystem name packed in initial_procedure */
  7    82     2 dollar_limit float bin,
  7    83     2 dollar_charge float bin,			/* total dollars spent this month */
  7    84     2 shift_limit (0: 7) float bin,
  7    85     2 daton fixed bin (71),				/* date user added to system */
  7    86     2 datof fixed bin (71),				/* date user deleted */
  7    87     2 last_login_time fixed bin (71),			/* time of last login */
  7    88     2 last_login_unit char (4),			/* terminal id last used */
  7    89     2 last_login_type fixed bin (17) unal,		/* terminal type */
  7    90     2 last_login_line_type fixed bin (17) unal,		/* terminal line type */
  7    91     2 time_last_bump fixed bin (71),			/* for bump-wait */
  7    92     2 last_update fixed bin (71),			/* time of last transaction */
  7    93     2 logins fixed bin,				/* number of logins */
  7    94     2 crashes fixed bin,				/* sessions abnormally terminated */
  7    95     2 interactive (0: 7),				/* interactive use, shifts 0-7 */
  7    96       3 charge float bin,				/* total dollar charge this shift */
  7    97       3 xxx fixed bin,
  7    98       3 cpu fixed bin (71),				/* cpu usage in microseconds */
  7    99       3 core fixed bin (71),				/* core demand in page-microseconds */
  7   100       3 connect fixed bin (71),			/* total console time in microseconds */
  7   101       3 io_ops fixed bin (71),			/* total i/o ops on terminal */
  7   102     2 absentee (4),					/* absentee use, queues 1-4 */
  7   103       3 charge float bin,				/* dollar charge this queue */
  7   104       3 jobs fixed bin,				/* number of jobs submitted */
  7   105       3 cpu fixed bin (71),				/* total cpu time in microseconds */
  7   106       3 memory fixed bin (71),			/* total memory demand */
  7   107     2 iod (4),					/* io daemon use, queues 1-4 */
  7   108       3 charge float bin,				/* dollar charge this queue */
  7   109       3 pieces fixed bin,				/* pieces of output requested */
  7   110       3 pad fixed bin (35),
  7   111       3 pages fixed bin (35),				/* number of pages output */
  7   112       3 lines fixed bin (71),				/* total record count of output */
  7   113     2 devices (16) float bin,				/* device charges */
  7   114     2 time_last_reset fixed bin (71),			/* time PDT last updated */
  7   115     2 absolute_limit float bin,			/* Limit, not reset monthly */
  7   116     2 absolute_spent float bin,			/* Spending against this */
  7   117     2 absolute_cutoff fixed bin (71),			/* Spending will be reset on this date */
  7   118     2 absolute_increm fixed bin,			/* .. time increment code. 0 = don't reset */
  7   119     2 pad_was_authorization bit (72) aligned,
  7   120     2 group char (8),				/* group for this user (if at.igroup = "1"b) */
  7   121     2 warn_days fixed bin (17) unaligned,		/* warn user if less than this many days to cutoff */
  7   122     2 warn_pct fixed bin (17) unaligned,		/* warn user if less than this percent of funds left */
  7   123     2 warn_dollars float bin,				/* warn user if less than this amount of funds left */
  7   124     2 n_foreground fixed bin (9) unsigned unaligned,	/* number of foreground and background processes */
  7   125     2 n_background fixed bin (9) unsigned unaligned,	/* that this user has. see limits just below */
  7   126     2 max_foreground fixed bin (9) unsigned unaligned,	/* max simultaneous foreground and */
  7   127     2 max_background fixed bin (9) unsigned unaligned,	/* background processes that this user can have */
  7   128     2 n_interactive fixed bin (9) unsigned unaligned,	/* number of interactive processes that user has */
  7   129     2 n_disconnected fixed bin (9) unsigned unaligned,	/* number of disconnected processes that user has */
  7   130     2 pdtupad1 fixed bin (18) unsigned unaligned,
  7   131     2 user_warn_days fixed bin (17) unaligned,		/* warn user if less than this many days to user cutoff */
  7   132     2 user_warn_pct fixed bin (17) unaligned,		/* warn user if less than this percent of user funds left */
  7   133     2 user_warn_dollars float bin,			/* warn user if less than this amount of user funds left */
  7   134     2 user_authorization (2) bit (72) aligned,		/* range */
  7   135     2 pdtupad (5) fixed bin,
  7   136     2 abs_foreground_cpu_limit fixed bin (17) unaligned,	/* time limit (sec) on foreground absentee jobs */
  7   137     2 pdir_quota fixed bin (17) unaligned,		/* quota to put on user's pdir (0 => use default) */
  7   138     2 chain fixed bin;				/* free chain */
  7   139 
  7   140 /* END INCLUDE FILE ... pdt.incl.pl1 */
      411 
      412 
      413 dcl  pdtp		        ptr automatic init (null);	/* pdt needs it. */
      414  /* BEGIN INCLUDE FILE sys_log_constants.incl.pl1 ... 82-09-24 E. N. Kittlitz */
  9     2 
  9     3 
  9     4 /****^  HISTORY COMMENTS:
  9     5*  1) change(87-04-22,GDixon), approve(87-06-10,MCR7708),
  9     6*     audit(87-06-02,Parisek), install(87-08-04,MR12.1-1056):
  9     7*     Added sl_info structure and associated named constants for use in calling
  9     8*     sys_log_$general.
  9     9*                                                   END HISTORY COMMENTS */
  9    10 
  9    11 
  9    12 /* format: style4 */
  9    13 
  9    14 dcl  (
  9    15      SL_TYPE_CRASH init (-3),				/* type message with banner & kill system */
  9    16      SL_TYPE_BEEP init (-2),				/* type message with banner */
  9    17      SL_TYPE init (-1),				/* type message */
  9    18      SL_LOG_SILENT init (0),				/* log message */
  9    19      SL_LOG init (1),				/* log & type message */
  9    20      SL_LOG_BEEP init (2),				/* log & type message with banner */
  9    21      SL_LOG_CRASH init (3)				/* log & type message with banner & kill system */
  9    22      ) fixed bin internal static options (constant);
  9    23 
  9    24 dcl  1 sl_info aligned automatic,
  9    25        2 version char(8),			/* structure version       */
  9    26        2 arg_list_ptr ptr,			/* arg_list with values    */
  9    27        2 loc,
  9    28          3 (mode, severity, code, caller, data, class, ioa_msg) fixed bin,
  9    29            /* These flags control where the corresponding data item is found.*/
  9    30 	 /*  -1: data appears in the corresponding structure element below */
  9    31 	 /*   0: data is not present anywhere			       */
  9    32 	 /*  +N: data is Nth item in argument list pointed to by 	       */
  9    33 	 /*      sl_info.arg_list_ptr.  Upon return, data copied into      */
  9    34 	 /*      corresponding structure element.		       */
  9    35 	 /*  if data = +N:					       */
  9    36 	 /*      argN is data_ptr, argN+1 is data_len		       */
  9    37 	 /*  if ioa_msg = +N:				       */
  9    38 	 /*      argN+1, ... argLAST are arguments substituted into the    */
  9    39 	 /*      ioa_msg control string.  The formatted msg is returned.   */
  9    40        2 flags,
  9    41          3 ioa_msg_is_error_code bit(1) unal,	/* ioa_ctl is error code.  */
  9    42          3 flags_pad bit(35) unal,
  9    43        2 mode fixed bin,			/* as-mode, command-mode   */
  9    44        2 severity fixed bin,			/* error severity	       */
  9    45        2 code fixed bin(35),			/* error table code        */
  9    46        2 caller char(65) varying,		/* caller refname$entryname*/
  9    47        2 data,				/* binary data ptr/length  */
  9    48          3 data_ptr ptr,
  9    49          3 data_lth fixed bin(21),
  9    50        2 class char(10) varying,		/* binary data class       */
  9    51        2 ioa_msg char(500) varying;		/* formatted message text  */
  9    52 
  9    53 /* *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */
  9    54 /*							       */
  9    55 /* If data values (eg, sl_info.caller) are passed in the argument list,      */
  9    56 /* their data types should be as shown in the structure above, except that   */
  9    57 /* character strings should be char(*) nonvarying.		       */
  9    58 /*							       */
  9    59 /* *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */
  9    60 
  9    61 /* value for sl_info.version */
  9    62 dcl  SL_INFO_version_1 char (8) int static options(constant) init("sl_info1");
  9    63 
  9    64 /* values for sl_info.mode */
  9    65 dcl (SL_INFO_as_mode init(1),
  9    66      SL_INFO_command_mode init(2)) fixed bin int static options(constant);
  9    67 
  9    68 /* values for sl_info.loc.(severity code caller data class ioa_ctl arg) */
  9    69 dcl (SL_INFO_arg_given_in_structure init(-1),
  9    70      SL_INFO_arg_not_given init(0)) fixed bin int static options(constant);
  9    71 
  9    72 
  9    73 /* *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */
  9    74 /*							       */
  9    75 /* The following static structures are commonly used in the Login Server     */
  9    76 /* user control software.					       */
  9    77 /*							       */
  9    78 /* *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */
  9    79 
  9    80 /* Syntax: call Abort (severity, code, ioa_ctl, args);		       */
  9    81 
  9    82 dcl  1 sl_info_sev_code_msg		aligned int static options(constant),
  9    83        2 version char(8)		init ("sl_info1"),
  9    84        2 arg_list_ptr ptr		init (null),
  9    85        2 loc,
  9    86          3 (mode			init (-1),
  9    87 	  severity  		init ( 1),
  9    88 	  code 			init ( 2),
  9    89 	  caller 			init (-1),
  9    90 	  data 			init ( 0),
  9    91 	  class 			init ( 0),
  9    92 	  ioa_msg			init ( 3)) fixed bin,
  9    93        2 flags,
  9    94          3 ioa_msg_is_error_code bit(1) unal init ("0"b),
  9    95          3 flags_pad bit(35) unal	init ("0"b),
  9    96        2 mode fixed bin		init ( 1),
  9    97        2 severity fixed bin		init ( 0),
  9    98        2 code fixed bin(35)		init ( 0),
  9    99        2 caller char(65) varying	init (""),
  9   100        2 data,
  9   101          3 data_ptr ptr		init (null),
  9   102          3 data_lth fixed bin(21)	init ( 0),
  9   103        2 class char(10) varying	init (""),
  9   104        2 ioa_msg char(500) varying	init ("");
  9   105 
  9   106 /* Syntax: call Abort (severity, ioa_ctl, args);			       */
  9   107 
  9   108 dcl  1 sl_info_sev_msg		aligned int static options(constant),
  9   109        2 version char(8)		init ("sl_info1"),
  9   110        2 arg_list_ptr ptr		init (null),
  9   111        2 loc,
  9   112          3 (mode			init (-1),
  9   113 	  severity  		init ( 1),
  9   114 	  code 			init ( 0),
  9   115 	  caller 			init (-1),
  9   116 	  data 			init ( 0),
  9   117 	  class 			init ( 0),
  9   118 	  ioa_msg			init ( 2)) fixed bin,
  9   119        2 flags,
  9   120          3 ioa_msg_is_error_code bit(1) unal init ("0"b),
  9   121          3 flags_pad bit(35) unal	init ("0"b),
  9   122        2 mode fixed bin		init ( 1),
  9   123        2 severity fixed bin		init ( 0),
  9   124        2 code fixed bin(35)		init ( 0),
  9   125        2 caller char(65) varying	init (""),
  9   126        2 data,
  9   127          3 data_ptr ptr		init (null),
  9   128          3 data_lth fixed bin(21)	init ( 0),
  9   129        2 class char(10) varying	init (""),
  9   130        2 ioa_msg char(500) varying	init ("");
  9   131 
  9   132 /* Syntax: call Abort (severity, ioa_ctl_as_error_code, args);	       */
  9   133 
  9   134 dcl  1 sl_info_sev_coded_msg		aligned int static options(constant),
  9   135        2 version char(8)		init ("sl_info1"),
  9   136        2 arg_list_ptr ptr		init (null),
  9   137        2 loc,
  9   138          3 (mode			init (-1),
  9   139 	  severity  		init ( 1),
  9   140 	  code 			init ( 0),
  9   141 	  caller 			init (-1),
  9   142 	  data 			init ( 0),
  9   143 	  class 			init ( 0),
  9   144 	  ioa_msg			init ( 2)) fixed bin,
  9   145        2 flags,
  9   146          3 ioa_msg_is_error_code bit(1) unal init ("1"b),
  9   147          3 flags_pad bit(35) unal	init ("0"b),
  9   148        2 mode fixed bin		init ( 1),
  9   149        2 severity fixed bin		init ( 0),
  9   150        2 code fixed bin(35)		init ( 0),
  9   151        2 caller char(65) varying	init (""),
  9   152        2 data,
  9   153          3 data_ptr ptr		init (null),
  9   154          3 data_lth fixed bin(21)	init ( 0),
  9   155        2 class char(10) varying	init (""),
  9   156        2 ioa_msg char(500) varying	init ("");
  9   157 
  9   158 
  9   159 /* Syntax: call Abort (severity, code, error_return_label, ioa_ctl, args);   */
  9   160 
  9   161 dcl  1 sl_info_sev_code_label_msg	aligned int static options(constant),
  9   162        2 version char(8)		init ("sl_info1"),
  9   163        2 arg_list_ptr ptr		init (null),
  9   164        2 loc,
  9   165          3 (mode			init (-1),
  9   166 	  severity  		init ( 1),
  9   167 	  code 			init ( 2),
  9   168 	  caller 			init (-1),
  9   169 	  data 			init ( 0),
  9   170 	  class 			init ( 0),
  9   171 	  ioa_msg			init ( 4)) fixed bin,
  9   172        2 flags,
  9   173          3 ioa_msg_is_error_code bit(1) unal init ("0"b),
  9   174          3 flags_pad bit(35) unal	init ("0"b),
  9   175        2 mode fixed bin		init ( 1),
  9   176        2 severity fixed bin		init ( 0),
  9   177        2 code fixed bin(35)		init ( 0),
  9   178        2 caller char(65) varying	init (""),
  9   179        2 data,
  9   180          3 data_ptr ptr		init (null),
  9   181          3 data_lth fixed bin(21)	init ( 0),
  9   182        2 class char(10) varying	init (""),
  9   183        2 ioa_msg char(500) varying	init ("");
  9   184 
  9   185 /* Syntax:  call Log_error (code, ioa_ctl, args);			       */
  9   186 
  9   187 dcl  1 sl_info_code_msg		aligned int static options(constant),
  9   188        2 version char(8)		init ("sl_info1"),
  9   189        2 arg_list_ptr ptr		init (null),
  9   190        2 loc,
  9   191          3 (mode			init (-1),
  9   192 	  severity  		init (-1),
  9   193 	  code 			init ( 1),
  9   194 	  caller 			init (-1),
  9   195 	  data 			init ( 0),
  9   196 	  class 			init ( 0),
  9   197 	  ioa_msg			init ( 2)) fixed bin,
  9   198        2 flags,
  9   199          3 ioa_msg_is_error_code bit(1) unal init ("0"b),
  9   200          3 flags_pad bit(35) unal	init ("0"b),
  9   201        2 mode fixed bin		init ( 1),
  9   202        2 severity fixed bin		init ( 0),
  9   203        2 code fixed bin(35)		init ( 0),
  9   204        2 caller char(65) varying	init (""),
  9   205        2 data,
  9   206          3 data_ptr ptr		init (null),
  9   207          3 data_lth fixed bin(21)	init ( 0),
  9   208        2 class char(10) varying	init (""),
  9   209        2 ioa_msg char(500) varying	init ("");
  9   210 
  9   211 
  9   212 /* Syntax:  call Trace (ioa_ctl, args);				       */
  9   213 
  9   214 dcl  1 sl_info_msg			aligned int static options(constant),
  9   215        2 version char(8)		init ("sl_info1"),
  9   216        2 arg_list_ptr ptr		init (null),
  9   217        2 loc,
  9   218          3 (mode			init (-1),
  9   219 	  severity  		init (-1),
  9   220 	  code 			init ( 0),
  9   221 	  caller 			init (-1),
  9   222 	  data 			init ( 0),
  9   223 	  class 			init ( 0),
  9   224 	  ioa_msg			init ( 1)) fixed bin,
  9   225        2 flags,
  9   226          3 ioa_msg_is_error_code bit(1) unal init ("0"b),
  9   227          3 flags_pad bit(35) unal	init ("0"b),
  9   228        2 mode fixed bin		init ( 1),
  9   229        2 severity fixed bin		init ( 0),
  9   230        2 code fixed bin(35)		init ( 0),
  9   231        2 caller char(65) varying	init (""),
  9   232        2 data,
  9   233          3 data_ptr ptr		init (null),
  9   234          3 data_lth fixed bin(21)	init ( 0),
  9   235        2 class char(10) varying	init (""),
  9   236        2 ioa_msg char(500) varying	init ("");
  9   237 
  9   238 /* END INCLUDE FILE sys_log_constants.incl.pl1 */
      414 
      415  /*  BEGIN INCLUDE FILE ... uc_disc_proc_list.incl.pl1 */
 10     2 
 10     3 
 10     4 /****^  HISTORY COMMENTS:
 10     5*  1) change(86-04-04,Swenson), approve(87-07-13,MCR7737),
 10     6*     audit(87-05-16,GDixon), install(87-08-04,MR12.1-1056):
 10     7*     Initial coding.
 10     8*  2) change(87-05-16,GDixon), approve(87-07-13,MCR7737),
 10     9*     audit(87-07-16,Brunelle), install(87-08-04,MR12.1-1056):
 10    10*     Explicitly declare pad field.
 10    11*                                                   END HISTORY COMMENTS */
 10    12 
 10    13 /* format: style4,indattr */
 10    14 
 10    15 dcl  uc_disconnected_process_list_ptr ptr automatic;
 10    16 dcl  uc_n_disconnected_processes fixed bin automatic;
 10    17 dcl  1 uc_disconnected_process_list structure aligned
 10    18 		        based (uc_disconnected_process_list_ptr),
 10    19        2 version	        char (8),
 10    20        2 n_disconnected_processes fixed bin,
 10    21        2 pad_header	        fixed bin,
 10    22        2 process	        (uc_n_disconnected_processes refer (uc_disconnected_process_list.n_disconnected_processes)),
 10    23          3 utep	        ptr;
 10    24 
 10    25 dcl  UC_DISCONNECTED_PROCESS_LIST_VERSION_1 char (8) initial ("ucdpl001") internal static options (constant);
 10    26 
 10    27 /*  END INCLUDE FILE ... uc_disc_proc_list.incl.pl1 */
 10    28 
      415 
      416  /* BEGIN INCLUDE FILE ... user_attributes.incl.pl1  TAC 10/79 */
 11     2 
 11     3 
 11     4 /****^  HISTORY COMMENTS:
 11     5*  1) change(86-12-11,Brunelle), approve(87-07-13,MCR7741),
 11     6*     audit(87-04-19,GDixon), install(87-08-04,MR12.1-1056):
 11     7*     Add incl for abs_attributes.incl.pl1 to automatically include absentee
 11     8*     attribute switches.
 11     9*  2) change(87-04-19,GDixon), approve(87-07-13,MCR7741),
 11    10*     audit(87-07-16,Brunelle), install(87-08-04,MR12.1-1056):
 11    11*      A) Add USER_ATTRIBUTE_NAMES arrays.  attribute_names.incl.pl1 can thereby
 11    12*         be deleted.
 11    13*      B) Add constants identifying attributes that can be changed by user at
 11    14*         login, etc.
 11    15*                                                   END HISTORY COMMENTS */
 11    16 
 11    17 
 11    18 /* Modified 82-01-03  E. N. Kittlitz.  to declare a complete level-1 structure */
 11    19 
 11    20 /* format: style4 */
 11    21 dcl  1 user_attributes aligned based,			/* the user user_attributes */
 11    22        (2 administrator bit (1),			/* 1  system administrator privileges */
 11    23        2 primary_line bit (1),			/* 2  user has primary-line privileges  */
 11    24        2 nobump bit (1),				/* 2  user cannot be bumped */
 11    25        2 guaranteed_login bit (1),			/* 4  user has guaranteed login privileges */
 11    26        2 anonymous bit (1),				/* 5  used only in SAT. project may have anon.users */
 11    27        2 nopreempt bit (1),				/* 6  used only in PDT. user not preemptable by others
 11    28*						   .  of same project (distinct from "nobump") */
 11    29        2 nolist bit (1),				/* 7  don't list user on "who" */
 11    30        2 dialok bit (1),				/* 8  user may have multiple consoles */
 11    31        2 multip bit (1),				/* 9  user may have several processes */
 11    32        2 bumping bit (1),				/* 10 in SAT. Can users in project bump each other? */
 11    33        2 brief bit (1),				/* 11 no login or logout message */
 11    34        2 vinitproc bit (1),				/* 12 user may change initial procedure */
 11    35        2 vhomedir bit (1),				/* 13 user may change homedir */
 11    36        2 nostartup bit (1),				/* 14 user does not want start_up.ec */
 11    37        2 sb_ok bit (1),				/* 15 user may be standby */
 11    38        2 pm_ok bit (1),				/* 16 user may be primary */
 11    39        2 eo_ok bit (1),				/* 17 user may be edit_only */
 11    40        2 daemon bit (1),				/* 18 user may login as daemon */
 11    41        2 vdim bit (1),				/* 19 * OBSOLETE * user may change outer mdle */
 11    42        2 no_warning bit (1),				/* 20 no warning message */
 11    43        2 igroup bit (1),				/* 21 in SAT: this project may give its users individual groups
 11    44*						   .  in PDT: this user has an individual load control group */
 11    45        2 save_pdir bit (1),				/* 22 save pdir after fatal process error */
 11    46        2 disconnect_ok bit (1),			/* 23 ok to save user's disconnected processes */
 11    47        2 save_on_disconnect bit (1),			/* 24 save them unless -nosave login arg is given */
 11    48        2 pad bit (12)) unaligned;
 11    49 
 11    50 dcl  USER_ATTRIBUTE_NAMES (0:24) char (20) int static options (constant) init
 11    51     ("none",					/* 0 */
 11    52      "administrator",				/* 1 */
 11    53      "primary_line",				/* 2 */
 11    54      "nobump",					/* 3 */
 11    55      "guaranteed_login",				/* 4 */
 11    56      "anonymous",					/* 5 */
 11    57      "nopreempt",					/* 6 */
 11    58      "nolist",					/* 7 */
 11    59      "dialok",					/* 8 */
 11    60      "multip",					/* 9 */
 11    61      "bumping",					/* 10 */
 11    62      "brief",					/* 11 */
 11    63      "vinitproc",					/* 12 */
 11    64      "vhomedir",					/* 13 */
 11    65      "nostartup",					/* 14 */
 11    66      "no_secondary",				/* 15 */
 11    67      "no_prime",					/* 16 */
 11    68      "no_eo",					/* 17 */
 11    69      "daemon",					/* 18 */
 11    70      "",						/* 19 vdim OBSOLETE */
 11    71      "no_warning",					/* 20 */
 11    72      "igroup",					/* 21 */
 11    73      "save_pdir",					/* 22 */
 11    74      "disconnect_ok",				/* 23 */
 11    75      "save_on_disconnect");				/* 24 */
 11    76 
 11    77 dcl  ALT_USER_ATTRIBUTE_NAMES (0:24) char (20) int static options (constant) init
 11    78     ("null",					/* 0 */
 11    79      "admin",					/* 1 */
 11    80      "", "",					/* 2 - 3 */
 11    81      "guar",					/* 4 */
 11    82      "anon",					/* 5 */
 11    83      "", "",					/* 6 - 7 */
 11    84      "dial",					/* 8 */
 11    85      "multi_login",					/* 9 */
 11    86      "preempting",					/* 10 */
 11    87      "",						/* 11 */
 11    88      "v_process_overseer",				/* 12 */
 11    89      "v_home_dir",					/* 13 */
 11    90      "no_start_up",					/* 14 */
 11    91      "no_sec",					/* 15 */
 11    92      "no_primary",					/* 16 */
 11    93      "no_edit_only",				/* 17 */
 11    94      "op_login",					/* 18 */
 11    95      "",						/* 19 */
 11    96      "nowarn",					/* 20 */
 11    97      "", "", "",					/* 21 - 23 */
 11    98      "save");					/* 24 */
 11    99 
 11   100 dcl  USER_ATTRIBUTES_always_allowed bit (36) aligned int static
 11   101      options(constant) init("000000000010000000010000000000000000"b);
 11   102     /* SAT/PDT attributes not needed for user to give (brief, no_warning) */
 11   103 
 11   104 dcl  USER_ATTRIBUTES_default_in_pdt bit (36) aligned int static
 11   105      options(constant) init("000000000010000000010000000000000000"b);
 11   106     /* PDT value for (brief, no_warning) is default */
 11   107 
 11   108 dcl  USER_ATTRIBUTES_settable_by_user bit (36) aligned int static
 11   109      options(constant) init("000100000110010000010000000000000000"b);	
 11   110     /* user MIGHT set (bump, ns, brief, guar, no_warning) */
 11   111 
 12     1 /* BEGIN INCLUDE FILE ... user_abs_attributes.incl.pl1 */
 12     2 
 12     3 /* *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */
 12     4 /*							       */
 12     5 /* This include file describes the attributes of an absentee job.  It is     */
 12     6 /* used by user_table_entry.incl.pl1, abs_message_format.incl.pl1            */
 12     7 /* and PIT.incl.pl1.   */
 12     8 /*							       */
 12     9 /* *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */
 12    10 
 12    11 /****^  HISTORY COMMENTS:
 12    12*  1) change(86-12-08,GDixon), approve(87-07-13,MCR7741),
 12    13*     audit(87-07-16,Brunelle), install(87-08-04,MR12.1-1056):
 12    14*     Separated abs_attributes from the request structure
 12    15*     (abs_message_format.incl.pl1) so that the identical structure could be
 12    16*     used in the ute structure (user_table_entry.incl.pl1).
 12    17*  2) change(87-04-19,GDixon), approve(87-07-13,MCR7741),
 12    18*     audit(87-07-16,Brunelle), install(87-08-04,MR12.1-1056):
 12    19*     Added ABS_ATTRIBUTE_NAMES array.
 12    20*  3) change(87-11-11,Parisek), approve(88-02-11,MCR7849),
 12    21*     audit(88-03-22,Lippard), install(88-07-13,MR12.2-1047):
 12    22*     Added the no_start_up flag. SCP6367
 12    23*                                                   END HISTORY COMMENTS */
 12    24 
 12    25 dcl 1 user_abs_attributes		aligned based,
 12    26       2 restartable			bit (1) unaligned,	/* 1 if request may be started over from the beginning */
 12    27       2 user_deferred_until_time	bit (1) unaligned,	/* 1 if request was specified as deferred */
 12    28       2 proxy			bit (1) unaligned,	/* 1 if request submitted for someone else */
 12    29       2 set_bit_cnt			bit (1) unaligned,	/* 1 if should set bit count after every write call */
 12    30       2 time_in_gmt			bit (1) unaligned,	/* 1 if deferred_time is in GMT */
 12    31       2 user_deferred_indefinitely	bit (1) unaligned,	/* 1 if operator is to say when to run it */
 12    32       2 secondary_ok		bit (1) unaligned,	/* 1 if ok to log in as secondary foreground user */
 12    33       2 truncate_absout		bit (1) unaligned,	/* 1 if .absout is to be truncated */
 12    34       2 restarted			bit (1) unaligned,	/* 1 if job is restarted */
 12    35       2 no_start_up                     bit (1) unaligned,	/* 1 if requested -ns */
 12    36       2 attributes_pad		bit (26) unaligned;
 12    37 
 12    38 dcl  ABS_ATTRIBUTE_NAMES (10) char (28) varying int static options(constant) init(
 12    39 	"restartable",
 12    40 	"user_deferred_until_time",
 12    41 	"proxy",
 12    42 	"set_bit_cnt",
 12    43 	"time_in_gmt",
 12    44 	"user_deferred_indefinitely",
 12    45 	"secondary_ok",
 12    46 	"truncate_absout",
 12    47 	"restarted",
 12    48 	"no_start_up");
 12    49 
 12    50 /* END INCLUDE FILE ... user_abs_attributes.incl.pl1 */
 12    51 
 11   112 
 11   113 
 11   114 /* END INCLUDE FILE ... user_attributes.incl.pl1 */
      416 
      417  /*  BEGIN INCLUDE FILE ... user_table_entry.incl.pl1 */
 13     2 
 13     3 /* *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */
 13     4 /*							       */
 13     5 /* This include file requires that the user include		       */
 13     6 /* user_attributes.incl.pl1 as well.  It also includes		       */
 13     7 /* abs_attributes.incl.pl1 itself.				       */
 13     8 /*							       */
 13     9 /* This include file must be included to use absentee_user_table.incl.pl1,   */
 13    10 /* answer_table.incl.pl1, and daemon_user_table.incl.pl1.		       */
 13    11 /*							       */
 13    12 /* *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */
 13    13 
 13    14 /****^  HISTORY COMMENTS:
 13    15*  1) change(81-12-21,Gilcrease), approve(86-03-27,MCR7370),
 13    16*     audit(86-06-23,Lippard), install(86-06-30,MR12.0-1082):
 13    17*     This comment for hcom.
 13    18*     81-12-21  E. N. Kittlitz. derived from abs_user_tab.incl.pl1,
 13    19*     anstbl.incl.pl1, and dutbl.incl.pl1.
 13    20*     82-01-02 E. N. Kittlitz. user_attributes.incl.pl1 changes
 13    21*     84-04-04 BIM added privileged_dial_server and dial_server_ring
 13    22*     84-07-12 BIM added min_process_authorization
 13    23*     84-12-31 Keith Loepere added pdir_dir_quota
 13    24*     85-01-16 by E. Swenson to add ute.session_uid
 13    25*  2) change(85-11-16,Swenson), approve(87-07-13,MCR7737),
 13    26*     audit(87-04-14,GDixon), install(87-08-04,MR12.1-1056):
 13    27*     Added fields for DSA login server support.
 13    28*  3) change(86-03-27,Gilcrease), approve(86-03-27,MCR7370),
 13    29*     audit(86-06-23,Lippard), install(86-06-30,MR12.0-1082):
 13    30*     Add truncate_absout and restarted bit for -truncate absout, SCP6297.
 13    31*  4) change(86-04-09,Herbst), approve(87-07-13,MCR7697),
 13    32*     audit(87-04-14,GDixon), install(87-08-04,MR12.1-1056):
 13    33*     Added disconnection_rel_minutes.
 13    34*  5) change(86-12-08,GDixon), approve(87-07-13,MCR7741),
 13    35*     audit(87-07-16,Brunelle), install(87-08-04,MR12.1-1056):
 13    36*     Changed structure under ute.abs_attributes to use like structure in
 13    37*     abs_attributes.incl.pl1.  This allows the same attributes to be used
 13    38*     in abs_message_format.incl.pl1 and pit.incl.pl1 as well as this include
 13    39*     file.
 13    40*  6) change(87-04-14,GDixon), approve(87-07-13,MCR7741),
 13    41*     audit(87-07-16,Brunelle), install(87-08-04,MR12.1-1056):
 13    42*     Move constants for ute.pw_flags.mask_ctl from answer_table.incl.pl1.
 13    43*  7) change(87-04-16,GDixon), approve(87-07-13,MCR7741),
 13    44*     audit(87-07-16,Brunelle), install(87-08-04,MR12.1-1056):
 13    45*      A) Global reorganization to locate things by type of data.
 13    46*      B) Eliminate ute.uflags.logged_in.
 13    47*  8) change(87-05-10,GDixon), approve(87-07-13,MCR7741),
 13    48*     audit(87-07-16,Brunelle), install(87-08-04,MR12.1-1056):
 13    49*      A) Reduced overlength person and project fields to proper length.
 13    50*      B) Adjusted dialed-console section to begin on even word boundary.
 13    51*  9) change(87-05-13,GDixon), approve(87-07-13,MCR7741),
 13    52*     audit(87-07-16,Brunelle), install(87-08-04,MR12.1-1056):
 13    53*     Add ute.line_type.
 13    54* 10) change(87-11-19,Parisek), approve(88-02-11,MCR7849),
 13    55*     audit(88-02-23,Lippard), install(88-07-13,MR12.2-1047):
 13    56*     Added the lowest_ring element. Used the upper half of ute.highest_ring
 13    57*     for the storage.  SCP6367
 13    58*                                                   END HISTORY COMMENTS */
 13    59 
 13    60 /* format: style4 */
 13    61 
 13    62 /* *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */
 13    63 /*							       */
 13    64 /* Each of the named sections below defines a type of data.  Typing comes    */
 13    65 /* from data associated with the ute entry itself, with the person, with     */
 13    66 /* login argument data, from the main user of the data (eg, dialup_,	       */
 13    67 /* load_ctl_, login server).  Each section begins on a double-word boundary  */
 13    68 /* and is an even number of words long.  The total structure is 300 decimal  */
 13    69 /* words long.						       */
 13    70 /*							       */
 13    71 /* *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */
 13    72 
 13    73 
 13    74 dcl  UTE_version_4 fixed bin internal static options (constant) init (4);
 13    75 
 13    76 dcl  utep pointer automatic init (null);
 13    77 
 13    78 dcl  1 ute based (utep) aligned,			/* individual entry in one of the user control tables */
 13    79 
 13    80 /* Variables which give state of this entry */
 13    81        2 active fixed bin,				/* state of entry. 0=>free. see dialup_values.incl.pl1 */
 13    82        2 process_type fixed bin,			/* 1=interactive, 2=absentee, 3=daemon */
 13    83        2 ute_index fixed bin,				/* index of ute in (anstbl autbl dutbl).entry array */
 13    84        2 next_free fixed bin,				/* points to previous free entry */
 13    85 
 13    86 /* Information user gave about person_id associated with this entry. */
 13    87        2 person char (24) unal,			/* user's name */
 13    88        2 project char (12) unal,			/* project of absentee user */
 13    89        2 tag char (1) unal,				/* instance tag - someday will be generated */
 13    90        2 tag_pad bit (27) unal,
 13    91        2 anonymous fixed bin,				/* 1 if anonymous, otherwise 0 */
 13    92        2 login_flags,				/* flags for login data */
 13    93          3 cpw bit (1) unal,				/* flag for wish to change password */
 13    94          3 generate_pw bit (1) unal,			/* flag meaning -generate_pw (-gpw) was used. */
 13    95          3 special_pw unal,				/* dial or slave */
 13    96 	 4 dial_pw bit (1) unal,			/* true if dial -user */
 13    97 	 4 slave_pw bit (1) unal,			/* true if slave -user */
 13    98          3 cdp bit (1) unal,				/* flag for wish to change default project */
 13    99          3 cda bit (1) unal,				/* flag to change default authorization */
 13   100          3 auth_given bit (1) unal,			/* flag to mean -authorization was used. */
 13   101          3 noprint bit (1) unal,			/* used at logout. inhibits printing. */
 13   102          3 operator bit (1) unaligned,			/* user specified -operator on login command line */
 13   103          3 pw_pad bit (25) unal,			/* spare parts */
 13   104          3 mask_ctl bit (2) unal,			/* bits controlling pw mask. See constants, below */
 13   105 						/* Must remain last in pw_flags so it does not */
 13   106 						/* appear in PW_FLAG_VALUES array below. */
 13   107        2 generated_pw char (8) unal,			/* user must type this as new password */
 13   108        2 old_password char (8) unal,			/* must match user's previous password (value scrambled) */
 13   109        2 process_authorization bit (72),		/* access_authorization of this process */
 13   110 
 13   111 /* Information user gave about process associated with this entry. */
 13   112        2 outer_module char (32) unal,			/* Name of console dim */
 13   113        2 home_dir char (64) unal,			/* initial home directory */
 13   114        2 init_proc char (64) unal,			/* name of login responder */
 13   115        2 ip_len fixed bin (17) unal,			/* length of initproc string */
 13   116        2 ss_len fixed bin (17) unal,			/* length of subsystem string */
 13   117        2 ur_at like user_attributes aligned,		/* bits on means attributes given by user */
 13   118        2 at like user_attributes aligned,		/* bits on means attribute is on */
 13   119        2 initial_ring fixed bin,			/* ring process will be started in */
 13   120        2 arg_count fixed bin,				/* number of arguments to absentee control segment */
 13   121        2 ln_args fixed bin,				/* length of string containing arguments */
 13   122        2 arg_lengths_ptr ptr,				/* pointer to array of argument lengths */
 13   123        2 args_ptr ptr,				/* pointer to arguments to absentee control segment */
 13   124 
 13   125 /* Most of the following information is relevant only to absentee processes */
 13   126        2 input_seg char (168) unal,			/* pathname of absentee control segment */
 13   127        2 output_seg char (168) unal,			/* pathname of absentee output file */
 13   128        2 request_id fixed bin (71),			/* time request was entered - used as uid of request */
 13   129        2 reservation_id fixed bin (71),			/* nonzero if job has a resource reservation */
 13   130        2 message_id bit (72),				/* message segment id assoc with absentee request */
 13   131        2 deferred_time fixed bin (71),			/* time at which absentee process should be created */
 13   132        2 max_cpu_time fixed bin (35),			/* maximum number of seconds this process can run */
 13   133        2 queue fixed bin,				/* -1=daemon;0=interactive or foreground;>0=queue no.
 13   134*						   (but see uflags.adjust_abs_q_no). */
 13   135        2 real_queue fixed bin,			/* real queue number; ute.queue gets fudged sometimes */
 13   136        2 abs_attributes aligned like user_abs_attributes,	/* include abs_attributes.incl.pl1 */
 13   137        2 abs_flags,
 13   138          3 abs_run bit (1) unal,			/* on if job was started by abs run command */
 13   139          3 notify bit (1) unal,			/* on if user wants notification at login and logout */
 13   140          3 abs_flags_pad bit (34) unal,
 13   141        2 abs_group char (8) unal,			/* original group before load_ctl_ moves it to absentee group */
 13   142        2 sender char (32) unal,			/* name of RJE station that job is from */
 13   143        2 proxy_person char (28) unal,			/* name of user who actually entered the request, if proxy */
 13   144        2 proxy_project char (9) unal,
 13   145        2 proxy_project_pad char (3) unal,
 13   146        2 abs_pad fixed bin,
 13   147 
 13   148 /* Information about process actually created */
 13   149        2 proc_id bit (36),				/* process id of absentee process */
 13   150        2 session_uid fixed bin (35),			/* Unique authentication session id */
 13   151        2 process_authorization_range (2) bit (72) aligned,
 13   152        2 audit bit (36),				/* audit flags for user */
 13   153        2 lot_size fixed bin,				/* Size of linkage offset table */
 13   154        2 kst_size fixed bin,				/* Size of process known segment table */
 13   155        2 cls_size fixed bin,				/* Size of process combined linkage */
 13   156        2 sus_channel fixed bin (71),			/* event channel on which suspended process is blocked */
 13   157        2 lowest_ring fixed bin (17) unal,		/* lowest ring permitted */
 13   158        2 highest_ring fixed bin (17) unal,		/* highest ring permitted */
 13   159        2 pdir_lvix fixed bin (17) unal,			/* index in disk table of lv where pdir is */
 13   160        2 pdir_quota fixed bin (17) unal,		/* process directory quota */
 13   161        2 pdir_dir_quota fixed bin (17) unal,		/* process directory quota for dirs */
 13   162        2 pdir_pad fixed bin(17) unal,
 13   163        2 process_pad fixed bin,
 13   164 
 13   165 /* Information about primary terminal associated with this entry */
 13   166        2 tty_name char (32) unal,			/* absentee=>"abs1", etc.  daemon=>"bk", etc. */
 13   167        2 terminal_type char (32) unaligned,		/* terminal type */
 13   168        2 line_type fixed bin,				/* line type */
 13   169        2 tty_id_code char (4) unal,			/* "none" for absentee */
 13   170        2 network_connection_type fixed bin,		/* see net_event_message.incl.pl1 */
 13   171        2 channel ptr unal,				/* points to CDT entry for user, if any */
 13   172 
 13   173 /* Variables useful for dialed terminals */
 13   174        2 ndialed_consoles fixed bin,			/* if master, number of slaves */
 13   175        2 dial_qualifier char (22) unal,			/* first argument to dial command */
 13   176        2 dial_server_ring fixed bin (3) unsigned unaligned, /* dial server intends to attach dialing in channels at this ring. */
 13   177        2 dial_server_flags,
 13   178          3 registered_dial_server bit (1) unal,		/* process is a registered dial server */
 13   179          3 privileged_dial_server bit (1) unal,		/* "1"b -> serves range of AIM classes */
 13   180          3 dial_server_flags_pad bit (13) unal,		/* fill out the word */
 13   181        2 dial_ev_chn fixed bin (71),			/* if master, control event channel */
 13   182 
 13   183 /* Information about usage/accounting.  Device usage meters are in a
 13   184*   separate segment, "devtab" */
 13   185        2 pdtep ptr,					/* ptr to user's pdt entry, where usage meters live */
 13   186        2 cpu_this_process fixed bin (71),		/* cpu used so far this process */
 13   187        2 cpu_usage fixed bin (71),			/* total cpu time used in this session */
 13   188        2 mem_usage fixed bin (71),			/* memory usage for previous processes in session */
 13   189        2 mem_this_process fixed bin (71),		/* memory usage at last update */
 13   190        2 last_update_time fixed bin (71),		/* time of last account update */
 13   191        2 session_cost float bin,			/* dollar cost of session, for printing in logout messages */
 13   192        2 ndevices fixed bin,				/* Count of attached devices */
 13   193        2 device_head fixed bin,			/* Table index of head of device chain */
 13   194        2 device_tail fixed bin,			/* Table index of tail of device chain */
 13   195        2 rs_number fixed bin (6) unsigned unal,		/* rate structure number */
 13   196        2 rs_number_pad bit(30) unal,
 13   197        2 usage_pad fixed bin,
 13   198 
 13   199 /* Information for dialup_ (control variables). */
 13   200        2 event fixed bin (71),			/* event associated with channel or user manager */
 13   201        2 uprojp ptr,				/* ptr to user project sat entry */
 13   202        2 login_time fixed bin (71),			/* time when absentee user approved by lg_ctl_ */
 13   203        2 cant_bump_until fixed bin (71),		/* bump-protection clock */
 13   204        2 recent_fatal_error_time fixed bin (71),		/* time of first error in the suspected loop */
 13   205        2 recent_fatal_error_count fixed bin,		/* counter to detect fatal process error loops */
 13   206        2 failure_reason fixed bin,			/* why login refused 1=lg_ctl, 2=act_ctl, 3=load_ctl */
 13   207        2 count fixed bin,				/* counter for logins and dialups */
 13   208        2 n_processes fixed bin,			/* number of processes created in this session */
 13   209        2 lock_value fixed bin,			/* number of locks set for this entry */
 13   210        2 login_result fixed bin,			/* 0=logged in;1=hopeless,hang him up;2=allow another attempt */
 13   211        2 login_code char (8) unal,			/* login command from LOGIN line */
 13   212        2 preempted fixed bin,				/* if ^= 0 user preempted (never for abs) */
 13   213        2 destroy_flag fixed bin,			/* >8 when awaiting destroy */
 13   214        2 logout_type char (4) unal,			/* type of logout */
 13   215        2 logout_index fixed bin,			/* to save logout handler index while waiting for termsgnl */
 13   216        2 disconnection_rel_minutes fixed bin (17) unal,	/* disconnected this many minutes after login_time */
 13   217        2 next_disconnected_ate_index fixed bin (17) unal,	/* thread of list of user's disconnected processes */
 13   218        2 work_class fixed bin,			/* work class used by priority scheduler */
 13   219        2 group char (8) unal,				/* party group identifier */
 13   220        2 whotabx fixed bin,				/* index of user's entry in whotab */
 13   221 
 13   222        2 uflags,					/* Miscellaneous flags */
 13   223          3 dont_call_init_admin bit (1) unal,		/* Call overseer directly */
 13   224          3 ip_given bit (1) unal,			/* user gave an initproc arg on login line */
 13   225          3 ss_given bit (1) unal,			/* initial_procedure contains a subsystem name */
 13   226          3 lvs_attached bit (1) unal,			/* set and used by the lv_request_ procedure */
 13   227          3 send_initial_string bit (1) unal,		/* initial string should be sent after login line read */
 13   228          3 adjust_abs_q_no bit (1) unal,		/* this is an absentee job; user_profile.queue is NOT true Q # */
 13   229          3 foreground_secondary_ok bit (1) unal,		/* ok to login foreground absentee job as secondary */
 13   230          3 foreground_job bit (1) unal,			/* job was originally from foreground queue */
 13   231          3 sus_sent bit (1) unal,			/* sus_ ips signal has been sent to process */
 13   232          3 suspended bit (1) unal,			/* process has responded to sus_ signal */
 13   233          3 ignore_cpulimit bit (1) unal,		/* process is released, but timer can't be turned off */
 13   234          3 deferral_logged bit (1) unal,		/* abs job deferral has already been logged once */
 13   235          3 save_if_disconnected bit (1) unal,		/* user wants process preserved across hangups */
 13   236          3 disconnected bit (1) unal,			/* process is disconnected from terminal */
 13   237          3 disconnected_list bit (1) unal,		/* this ate is on a list of disconnected processes */
 13   238          3 proc_create_ok bit (1) unal,			/* lg_ctl_ has set the process creation variables */
 13   239          3 activity_can_unbump bit (1) unal,		/* only bump pending is for inactivity */
 13   240          3 fpe_causes_logout bit (1) unal,		/* "1"b means don't try to new_proc after fatal process error */
 13   241          3 user_specified_immediate bit (1) unal,		/* "1"b -> don't wait around for process destruction. */
 13   242          3 uflags_pad bit (17) unal,
 13   243 
 13   244 /* Information used by load_ctl_ for the process */
 13   245        2 user_weight fixed bin,			/* usually 10 - used in load control */
 13   246        2 standby_line fixed bin,			/* 0=user has primary line, 1=standby user */
 13   247        2 bump_grace fixed bin (71),			/* bump grace in microseconds */
 13   248 
 13   249 
 13   250 /* Information for login server */
 13   251        2 login_server_info,
 13   252          3 our_handle bit (72) aligned,			/* how LS refers to us. */
 13   253          3 his_handle bit (72) aligned,			/* how we talk to LS */
 13   254          3 termination_event_channel fixed bin (71),	/* for process termination notifications to the LS */
 13   255          3 response_event_channel fixed bin (71),		/* for other communications with the LS */
 13   256          3 process_id bit (36) aligned,			/* process_id of login server */
 13   257        2 ls_pad (5) fixed bin;			/* pad to 300 decimal words */
 13   258 
 13   259 /* values for ute.process_type */
 13   260 
 13   261 dcl  (PT_INTERACTIVE initial (1),
 13   262      PT_ABSENTEE initial (2),
 13   263      PT_DAEMON initial (3)) fixed bin internal static options (constant);
 13   264 
 13   265 dcl  PROCESS_TYPE_NAMES (0:3) char(12) varying int static options(constant) init(
 13   266 	"INVALID-TYPE",
 13   267 	"interactive",
 13   268 	"absentee",
 13   269 	"daemon");
 13   270 
 13   271 dcl  TABLE_NAMES (0:3) char(20) int static options(constant) init(
 13   272 	"UNKNOWN-TABLE",
 13   273 	"answer_table",
 13   274 	"absentee_user_table",
 13   275 	"daemon_user_table");
 13   276 
 13   277 
 13   278 /* values for ute.pw_flags.mask_ctl  */
 13   279 
 13   280 dcl  (DO_MASK init ("00"b),
 13   281      DONT_MASK init ("01"b),
 13   282      DERIVE_MASK init ("10"b)) bit (2) internal static options (constant);
 13   283 
 13   284 dcl  MASK_CTL_NAMES (0:3) char(12) varying int static options(constant) init(
 13   285 	"do_mask", "dont_mask", "derive_mask", "");
 13   286 
 13   287 
 13   288 /* names for ute.pw_flags */
 13   289 
 13   290 dcl  PW_FLAG_NAMES (9) char (12) varying int static options(constant) init(
 13   291 	"cpw",
 13   292 	"generate_pw",
 13   293 	"dial_pw",
 13   294 	"slave_pw",
 13   295 	"cdp",
 13   296 	"cda",
 13   297 	"auth_given",
 13   298 	"noprint",
 13   299 	"operator");
 13   300 
 13   301 /* names for ute.uflags */
 13   302 
 13   303 dcl  UFLAG_NAMES (19) char (24) varying int static options (constant) init (
 13   304 	"dont_call_init_admin",
 13   305 	"ip_given",
 13   306 	"ss_given",
 13   307 	"lvs_attached",
 13   308 	"send_initial_string",
 13   309 	"adjust_abs_q_no",
 13   310 	"foreground_secondary_ok",
 13   311 	"foreground_job",
 13   312 	"sus_sent",
 13   313 	"suspended",
 13   314 	"ignore_cpulimit",
 13   315 	"deferral_logged",
 13   316 	"save_if_disconnected",
 13   317 	"disconnected",
 13   318 	"disconnected_list",
 13   319 	"proc_create_ok",
 13   320 	"activity_can_unbump",
 13   321 	"fpe_causes_logout",
 13   322 	"user_specified_immediate");
 13   323 
 13   324 /* names for ute.abs_flags */
 13   325 
 13   326 dcl  ABS_FLAG_NAMES (2) char (8) varying int static options (constant) init (
 13   327 	"abs_run",
 13   328 	"notify");
 13   329 
 13   330 /* names of ute.dial_server_flags */
 13   331 
 13   332 dcl  DIAL_SERVER_FLAG_NAMES (2) char (12) varying int static options (constant) init (
 13   333 	"registered",
 13   334 	"privileged");
 13   335 
 13   336 /* values of ute.login_result */
 13   337 
 13   338 dcl  LOGIN_RESULT_VALUES (0:2) char(24) varying int static options(constant) init(
 13   339 	"logged in",
 13   340 	"login failed, hangup",
 13   341 	"login failed, try again");
 13   342 
 13   343 /*  END INCLUDE FILE ... user_table_entry.incl.pl1 */
      417 
      418  /* BEGIN INCLUDE FILE ... whotab.incl.pl1 */
 14     2 
 14     3 /* Modified 740723 by PG to add security info */
 14     4 /* Modified April 1976 by T. Casey to add shift and shift start and end times */
 14     5 /* Modified May 1979 by T. Casey for MR7.0a to add foreground absentee variables */
 14     6 /* Modified June 1981 by E. N. Kittlitz to add n_rate_structures. */
 14     7 /* Modified December 1981 by E. N. Kittlitz to expand header. */
 14     8 /* Modified 84-11-14  by E. A. Ranzenbach to add "session" fiedld in  place of obsolete system ID... */
 14     9 
 14    10 dcl 1 whotab based (whoptr) aligned,
 14    11     2 mxusers fixed bin,				/* max. number of users on system */
 14    12     2 n_users fixed bin,				/* current number of users */
 14    13     2 mxunits fixed bin,				/* maximun "load units" allowed */
 14    14     2 n_units fixed bin,				/* current load */
 14    15     2 timeup fixed bin (71),				/* time system was started */
 14    16     2 session char (8),				/* AS state, same as anstbl.session  */
 14    17     2 nextsd fixed bin (71),				/* time we will shutdown */
 14    18     2 until fixed bin (71),				/* projected time we start up again */
 14    19     2 lastsd fixed bin (71),				/* time of last crash or shutdown */
 14    20     2 erfno char (8),				/* if a crash, the error number */
 14    21     2 obsolete_why char (32),				/* reason for last shutdown */
 14    22     2 installation_id char (32),			/* name of installation */
 14    23     2 obsolete_message char (32),			/* message for all users */
 14    24     2 abs_event fixed bin (71),			/* event channel associated with absentee */
 14    25     2 abs_procid bit (36) aligned,			/* process to whom messages about absentee are signalled */
 14    26     2 max_abs_users fixed bin,			/* max number of absentee users */
 14    27     2 abs_users fixed bin,				/* number of absentee users logged-in */
 14    28     2 n_daemons fixed bin,				/* Number of daemon users logged in */
 14    29     2 request_channel fixed bin (71),			/* System master channel for requests to AS. */
 14    30     2 request_process_id bit (36),			/* Process ID of request dispatcher */
 14    31     2 shift fixed bin,				/* current shift (copied from anstbl, for users to see) */
 14    32     2 next_shift_change_time fixed bin (71),		/* time current shift ends */
 14    33     2 last_shift_change_time fixed bin (71),		/* time current shift started */
 14    34     2 fg_abs_users fixed bin (17) unal,			/* number of foreground absentee users */
 14    35     2 n_rate_structures fixed bin (9) unsigned unal,	/* number of rate_structures defined at bootload */
 14    36     2 pad1 bit (9) unal,
 14    37     2 pad (3) fixed bin,
 14    38     2 version fixed bin,				/* structure version */
 14    39     2 header_size fixed bin,				/* length of header in words */
 14    40     2 entry_size fixed bin,				/* length of entry in words */
 14    41 						/* laste_adjust is used only by Answering Service programs */
 14    42     2 laste_adjust fixed bin,				/* count of 32 wd blocks in hdr from header_extension_mbz1 */
 14    43     2 laste fixed bin,				/* index of last entry in use (includes laste_adjust) */
 14    44     2 freep fixed bin (18) unsigned,			/* index of first free entry. chained thru "chain" */
 14    45 
 14    46 /* whotab header extension:  The header is extended from 64 words by
 14    47*   annexing whole user entries from the 'e' array.  Each 'e' entry is 32 words
 14    48*   long. Each annexed block has its first word set to zero, indicating that no user entry is
 14    49*   present.  This allows existing programs to function with old definitions of
 14    50*   whotab.  Obviously no new header field can be more than 31 contiguous words in
 14    51*   length.  In the Answering Service, all programs using whotab must be compiled
 14    52*   with the latest version. Only lg_ctl_ uses laste_adjust. */
 14    53 
 14    54     2 header_extension_mbz1 fixed bin,			/* location 100o */
 14    55     2 n_abs (4) fixed bin,				/* number of processes from each background queue */
 14    56     2 abs_qres (4) fixed bin,				/* number of absentee positions reserved for each queue */
 14    57     2 abs_cpu_limit (4) fixed bin (35),			/* current absentee cpu limits */
 14    58     2 abs_control,					/* see absentee_user_table */
 14    59       3 mnbz bit (1) unal,				/* must not be zero */
 14    60       3 abs_maxu_auto bit (1) unal,			/* 1 if automatic */
 14    61       3 abs_maxq_auto bit (1) unal,			/* 1 if automatic */
 14    62       3 abs_qres_auto bit (1) unal,			/* 1 if automatic */
 14    63       3 abs_cpu_limit_auto bit (1) unal,		/* 1 if automatic */
 14    64       3 queue_dropped (-1:4) bit (1) unal,		/* 1 if queue dropped */
 14    65       3 abs_up bit (1) unal,				/* 1 if absentee facility is running */
 14    66       3 abs_stopped bit (1) unal,			/* 1 if absentee facility is stopped */
 14    67       3 control_pad bit (23) unal,
 14    68     2 installation_request_channel fixed bin (71),	/* IPC channel for install command */
 14    69     2 installation_request_pid bit (36),		/* installation process identifier */
 14    70     2 sysid char (32),				/* current system name */
 14    71     2 header_extension_pad1 (7) fixed bin,		/* pad to size of e element, offset 137o */
 14    72     2 header_extension_mbz2 fixed bin,			/* offset 140o */
 14    73     2 message char (124),				/* message for all users */
 14    74     2 header_extension_mbz3 fixed bin,			/* offset 200o */
 14    75     2 why char (124),				/* reason for last shutdown */
 14    76     2 e (1000),					/* offset 240o */
 14    77       3 active fixed bin,				/* nonzero means logged in */
 14    78       3 person char (28) aligned,			/* person name */
 14    79       3 project char (28),				/* project id */
 14    80       3 anon fixed bin,				/* 1 if anonymous user */
 14    81       3 padding fixed bin (71),
 14    82       3 timeon fixed bin (71),			/* time of login */
 14    83       3 units fixed bin,				/* load units */
 14    84       3 stby fixed bin,				/* 1 if stby */
 14    85       3 idcode char (4),				/* tty id code */
 14    86       3 chain fixed bin (18) unsigned,			/* chain for free list */
 14    87       3 proc_type fixed bin,				/* 1 = interactive, 2 = absentee, 3 = daemon */
 14    88       3 group char (8),				/* party-line group */
 14    89       3 fg_abs bit (1) unal,				/* "1"b if foreground absentee user */
 14    90       3 disconnected bit (1) unaligned,			/* "1"b if process is disconnected */
 14    91       3 suspended bit (1) unaligned,			/* "1"b if process is suspended */
 14    92       3 pad2 bit (33) unal,
 14    93       3 cant_bump_until fixed bin (71),			/* protected from primary bump till here */
 14    94       3 process_authorization bit (72);			/* access authorization of process */
 14    95 
 14    96 dcl  WHOTAB_VERSION_1 fixed bin init (1) static options (constant);
 14    97 
 14    98 /* END INCLUDE FILE ... whotab.incl.pl1 */
      418 
      419 
      420 end uc_setup_process_connect_;
	SOURCE FILES USED IN THIS COMPILATION.

LINE      NUMBER  DATE MODIFIED     NAME			PATHNAME
             0    07/13/88  0938.3  uc_setup_process_connect_.pl1     >special_ldd>install>MR12.2-1047>uc_setup_process_connect_.pl1
405          1    08/06/87  0913.4  as_data_.incl.pl1                 >ldd>include>as_data_.incl.pl1
406          2    02/12/85  1429.5  access_audit_bin_header.incl.pl1  >ldd>include>access_audit_bin_header.incl.pl1
407          3    08/06/87  0913.4  as_audit_structures.incl.pl1      >ldd>include>as_audit_structures.incl.pl1
408          4    08/06/87  0913.4  dialup_values.incl.pl1            >ldd>include>dialup_values.incl.pl1
409          5    08/06/87  0913.4  login_server_messages.incl.pl1    >ldd>include>login_server_messages.incl.pl1
410          6    08/06/87  0913.5  ls_request_server_info.incl.pl1   >ldd>include>ls_request_server_info.incl.pl1
411          7    09/13/84  0921.6  pdt.incl.pl1                      >ldd>include>pdt.incl.pl1
7-29         8    04/21/82  1211.8  author.incl.pl1                   >ldd>include>author.incl.pl1
414          9    08/06/87  0913.5  sys_log_constants.incl.pl1        >ldd>include>sys_log_constants.incl.pl1
415         10    08/06/87  0913.5  uc_disc_proc_list.incl.pl1        >ldd>include>uc_disc_proc_list.incl.pl1
416         11    08/06/87  0913.6  user_attributes.incl.pl1          >ldd>include>user_attributes.incl.pl1
11-112      12    07/13/88  0900.1  user_abs_attributes.incl.pl1      >special_ldd>install>MR12.2-1047>user_abs_attributes.incl.pl1
417         13    07/13/88  0903.2  user_table_entry.incl.pl1         >special_ldd>install>MR12.2-1047>user_table_entry.incl.pl1
418         14    01/18/85  0953.2  whotab.incl.pl1                   >ldd>include>whotab.incl.pl1
	NAMES DECLARED IN THIS COMPILATION.

IDENTIFIER	     OFFSET    LOC STORAGE CLASS   DATA TYPE		ATTRIBUTES AND REFERENCES
								(* indicates a set context)

NAMES DECLARED BY DECLARE STATEMENT.
AS_AUDIT_PROCESS_CONNECT        000312 constant        fixed bin(17,0)          initial dcl 3-162 set ref 265*
FALSE                                  constant        bit(1)                   initial dcl 122 ref 279 282
LOGIN_SERVER_PROCESS_RESPONSE_VERSION_1
                                000250 constant        char(8)                  initial packed unaligned dcl 5-341 ref 292
LS_PROCESS_RESPONSE                    constant        fixed bin(17,0)          initial dcl 5-228 ref 291
ME                              000252 constant        char(25)                 initial packed unaligned dcl 123 set ref 151* 365
                                                                                  375
P_code                                 parameter       fixed bin(35,0)          dcl 335 in procedure "Abort" ref 332 337
P_code                                 parameter       fixed bin(35,0)          dcl 71 in procedure "uc_setup_process_connect_" set
                                                                                  ref 56 315*
P_ls_ipc_reply_ptr                     parameter       pointer                  dcl 69 ref 56 139
P_ls_request_lth                       parameter       fixed bin(18,0)          dcl 66 ref 56
P_ls_request_ptr                       parameter       pointer                  dcl 65 ref 56 138
P_ls_request_server_info_ptr           parameter       pointer                  dcl 64 ref 56 137
P_ls_response_lth                      parameter       fixed bin(18,0)          dcl 68 set ref 56 311*
P_ls_response_ptr                      parameter       pointer                  dcl 67 ref 56 288
P_utep                                 parameter       pointer                  dcl 70 set ref 56 140* 222*
SL_LOG_BEEP                     000314 constant        fixed bin(17,0)          initial dcl 9-14 set ref 260*
SL_LOG_SILENT                   000306 constant        fixed bin(17,0)          initial dcl 9-14 set ref 156* 162* 270*
TRUE                                   constant        bit(1)                   initial dcl 124 ref 236
WAIT_LOGOUT_SIG                        constant        fixed bin(17,0)          initial dcl 4-25 ref 285
accounting_message_length
                         56            based           fixed bin(17,0)          level 3 dcl 5-303 set ref 290 311
accounting_message_struc
                         56            based           structure                level 2 dcl 5-303
added_info                      000100 automatic       char(128)                packed unaligned dcl 75 set ref 194* 199* 207* 211*
addr                                                   builtin function         dcl 132 ref 170 170 366 366 376 376
aim_check_$equal                000012 constant        entry                    external dcl 84 ref 192
any_other                       000150 stack reference condition                dcl 128 ref 151
arg_list_ptr              2     000200 automatic       pointer                  level 2 dcl 9-24 set ref 364* 374*
arh_header_                            based           structure                level 1 dcl 2-26
arh_user_info_                         based           structure                level 1 dcl 2-39
as_access_audit_$process        000014 constant        entry                    external dcl 85 ref 265
as_access_audit_$process_connect_denied
                                000016 constant        entry                    external dcl 86 ref 199 211
as_any_other_handler_$no_cleanup
                                000020 constant        entry                    external dcl 87 ref 151
as_channel_audit_record_               based           structure                level 1 dcl 3-74
as_data_$tty_dim                000072 external static char(32)                 packed unaligned dcl 1-57 ref 393
as_data_$whoptr                 000074 external static pointer                  dcl 1-60 ref 281
as_dial_service_audit_record_          based           structure                level 1 dcl 3-105
as_error_table_$dialup_error    000052 external static fixed bin(35,0)          dcl 103 ref 318
as_error_table_$illegal_om_arg  000054 external static fixed bin(35,0)          dcl 104 set ref 387*
as_error_table_$no_connect_aclass
                                000056 external static fixed bin(35,0)          dcl 105 set ref 201*
as_error_table_$no_disconnected_procs
                                000060 external static fixed bin(35,0)          dcl 106 set ref 173* 176*
as_error_table_$no_such_process_msg
                                000062 external static fixed bin(35,0)          dcl 107 set ref 184*
as_error_table_$ring_too_low    000064 external static fixed bin(35,0)          dcl 108 set ref 213*
as_ia_audit_record_                    based           structure                level 1 dcl 3-52
asu_$release_suspended_process  000022 constant        entry                    external dcl 88 ref 275
asu_$setup_login_server_handle  000024 constant        entry                    external dcl 89 ref 251
at                      100            based           structure                level 2 dcl 13-78
audit_record_header                    based           structure                level 1 dcl 2-18
authorization            10            based           bit(72)                  level 3 dcl 5-303 set ref 296*
brief                    77(10)        based           bit(1)                   level 3 in structure "ute" packed packed unaligned
                                                                                  dcl 13-78 in procedure "uc_setup_process_connect_"
                                                                                  set ref 236*
brief                   100(10)        based           bit(1)                   level 3 in structure "ute" packed packed unaligned
                                                                                  dcl 13-78 in procedure "uc_setup_process_connect_"
                                                                                  set ref 235*
brief                    67(04)        based           bit(1)                   level 4 in structure "login_server_process_request"
                                                                                  packed packed unaligned dcl 5-103 in procedure
                                                                                  "uc_setup_process_connect_" ref 235
brief_given              66(04)        based           bit(1)                   level 4 packed packed unaligned dcl 5-103 ref 234
caller                   17     000200 automatic       varying char(65)         level 2 dcl 9-24 set ref 365* 375*
cleanup                         000156 stack reference condition                dcl 128 ref 146
code                            000140 automatic       fixed bin(35,0)          dcl 76 in procedure "uc_setup_process_connect_" set
                                                                                  ref 141* 259* 260 260* 269* 270 270* 315 318* 337*
                                                                                  367*
code                     16     000200 automatic       fixed bin(35,0)          level 2 in structure "sl_info" dcl 9-24 in procedure
                                                                                  "uc_setup_process_connect_" set ref 367
connection_info          12            based           structure                level 4 dcl 5-103
connection_name          12            based           char(32)                 level 5 dcl 5-103 ref 225
cu_$arg_list_ptr                000076 constant        entry                    external dcl 360 ref 364 374
currentsize                                            builtin function         dcl 132 ref 311
default_io_module        56            based           char(32)                 level 3 dcl 5-103 ref 394 394
destroy_flag            421            based           fixed bin(17,0)          level 2 dcl 13-78 set ref 285*
disconnected            273(01)        based           bit(1)                   array level 3 in structure "whotab" packed packed
                                                                                  unaligned dcl 14-10 in procedure
                                                                                  "uc_setup_process_connect_" set ref 282*
disconnected            431(13)        based           bit(1)                   level 3 in structure "ute" packed packed unaligned
                                                                                  dcl 13-78 in procedure "uc_setup_process_connect_"
                                                                                  set ref 279*
display_access_class_           000026 constant        entry                    external dcl 90 ref 194 194 194 194
e                       240            based           structure                array level 2 dcl 14-10
error_table_$bad_arg            000066 external static fixed bin(35,0)          dcl 109 set ref 162*
error_table_$id_not_found       000070 external static fixed bin(35,0)          dcl 110 set ref 156*
event                   376            based           fixed bin(71,0)          level 2 dcl 13-78 set ref 259*
fixed_part                             based           structure                level 2 in structure "login_server_process_request"
                                                                                  dcl 5-103 in procedure "uc_setup_process_connect_"
fixed_part                             based           structure                level 2 in structure "login_server_process_response"
                                                                                  dcl 5-303 in procedure "uc_setup_process_connect_"
get_system_free_area_           000030 constant        entry                    external dcl 91 ref 143
handle                   40            based           bit(72)                  level 3 dcl 5-103 set ref 154* 156*
header                                 based           structure                level 3 in structure "login_server_process_response"
                                                                                  dcl 5-303 in procedure "uc_setup_process_connect_"
header                                 based           structure                level 3 in structure "login_server_process_request"
                                                                                  dcl 5-103 in procedure "uc_setup_process_connect_"
his_handle              440            based           bit(72)                  level 3 dcl 13-78 set ref 243* 243
idcode                  266            based           char(4)                  array level 3 dcl 14-10 set ref 283*
initial_ring            101            based           fixed bin(17,0)          level 2 in structure "ute" dcl 13-78 in procedure
                                                                                  "uc_setup_process_connect_" set ref 204 207* 304
initial_ring             34            based           fixed bin(17,0)          level 3 in structure "login_server_process_response"
                                                                                  dcl 5-303 in procedure "uc_setup_process_connect_"
                                                                                  set ref 304*
ioa_$rsnnl                      000032 constant        entry                    external dcl 92 ref 194 207 297
ipc_$decl_event_call_chn        000034 constant        entry                    external dcl 93 ref 259
line_type               336            based           fixed bin(17,0)          level 2 in structure "ute" dcl 13-78 in procedure
                                                                                  "uc_setup_process_connect_" set ref 228*
line_type                37            based           fixed bin(17,0)          level 5 in structure "login_server_process_request"
                                                                                  dcl 5-103 in procedure "uc_setup_process_connect_"
                                                                                  ref 228
lock_value              414            based           fixed bin(17,0)          level 2 dcl 13-78 set ref 218* 218 218
login_server_info       436            based           structure                level 2 dcl 13-78
login_server_process_request           based           structure                level 1 dcl 5-103
login_server_process_response          based           structure                level 1 dcl 5-303 set ref 290* 311
login_server_response_header           based           structure                level 1 dcl 5-258
ls_process_response_accounting_message_length
                                000170 automatic       fixed bin(17,0)          dcl 5-339 set ref 289*
ls_reply_message_ptr            000172 automatic       pointer                  dcl 5-443 set ref 139*
ls_request_header                      based           structure                level 1 dcl 5-54
ls_request_ptr                  000164 automatic       pointer                  dcl 5-50 set ref 138* 154 156 162 162 162 162 179
                                                                                  204 204 207 225 226 227 228 234 235 387 390 394
                                                                                  394
ls_request_server_info_ptr      000174 automatic       pointer                  dcl 6-11 set ref 137*
ls_response_ptr                 000166 automatic       pointer                  dcl 5-254 set ref 288* 290 291 292 293 294 295 296
                                                                                  297 300 301 303 304 311
max                                                    builtin function         dcl 132 ref 277
message_type                           based           fixed bin(17,0)          level 4 dcl 5-303 set ref 291*
minimum_ring             72            based           fixed bin(17,0)          level 3 dcl 5-103 set ref 204 207*
minimum_ring_given       70(01)        based           bit(1)                   level 4 packed packed unaligned dcl 5-103 ref 204
n_disconnected          362(09)        based           fixed bin(9,0)           level 2 packed packed unsigned unaligned dcl 7-58
                                                                                  set ref 277* 277 301
n_disconnected_processes
                          2            based           fixed bin(17,0)          level 2 in structure "uc_disconnected_process_list"
                                                                                  dcl 10-17 in procedure "uc_setup_process_connect_"
                                                                                  ref 147 176 180 184 312
n_disconnected_processes
                         23            based           fixed bin(17,0)          level 3 in structure "login_server_process_response"
                                                                                  dcl 5-303 in procedure "uc_setup_process_connect_"
                                                                                  set ref 301*
new_handle                6            based           bit(72)                  level 3 dcl 5-303 set ref 295*
null                                                   builtin function         dcl 132 ref 140 143 145 156 173 312 413 13-76 147
other_flags              70            based           structure                level 3 dcl 5-103
our_handle              436            based           bit(72)                  level 3 dcl 13-78 ref 251 295
outer_module             57            based           char(32)                 level 2 in structure "user" dcl 7-58 in procedure
                                                                                  "uc_setup_process_connect_" ref 392
outer_module             26            based           char(32)                 level 2 in structure "ute" packed packed unaligned
                                                                                  dcl 13-78 in procedure "uc_setup_process_connect_"
                                                                                  set ref 390* 392 393 394*
outer_module            145            based           char(32)                 level 3 in structure "login_server_process_request"
                                                                                  dcl 5-103 in procedure "uc_setup_process_connect_"
                                                                                  ref 387 390
pdtep                   354            based           pointer                  level 2 dcl 13-78 ref 277 277 301 392
pdtp                            000176 automatic       pointer                  initial dcl 413 set ref 413*
person                    4            based           char(24)                 level 2 packed packed unaligned dcl 13-78 set ref
                                                                                  162 162* 260* 270* 297*
person_id                42            based           char(22)                 level 3 dcl 5-103 set ref 162 162*
proc_id                 276            based           bit(36)                  level 2 dcl 13-78 set ref 260* 270* 294
process                   4            based           structure                array level 2 dcl 10-17
process_authorization
                         24            based           bit(72)                  level 2 dcl 13-78 set ref 192* 192* 194* 194* 194*
                                                                                  194* 296
process_group_id         12            based           char(32)                 level 3 dcl 5-303 set ref 297*
process_id              446            based           bit(36)                  level 3 in structure "ute" dcl 13-78 in procedure
                                                                                  "uc_setup_process_connect_" set ref 246* 246
process_id                5            based           bit(36)                  level 3 in structure "login_server_process_response"
                                                                                  dcl 5-303 in procedure "uc_setup_process_connect_"
                                                                                  set ref 294*
process_number           55            based           fixed bin(17,0)          level 3 in structure "login_server_process_request"
                                                                                  dcl 5-103 in procedure "uc_setup_process_connect_"
                                                                                  ref 179
process_number                  000141 automatic       fixed bin(17,0)          dcl 77 in procedure "uc_setup_process_connect_" set
                                                                                  ref 179* 180 180* 184 184 189 300
process_number           22            based           fixed bin(17,0)          level 3 in structure "login_server_process_response"
                                                                                  dcl 5-303 in procedure "uc_setup_process_connect_"
                                                                                  set ref 300*
project                  12            based           char(12)                 level 2 packed packed unaligned dcl 13-78 set ref
                                                                                  162 162* 260* 270* 297*
project_id               50            based           char(9)                  level 3 dcl 5-103 set ref 162 162*
response_event_channel
                        444            based           fixed bin(71,0)          level 3 dcl 13-78 set ref 244* 244
saved_utep                      000142 automatic       pointer                  dcl 78 set ref 220* 243 244 245 246 267* 268*
sl_info                         000200 automatic       structure                level 1 dcl 9-24 set ref 363* 366 366 373* 376 376
sl_info_sev_code_msg            000000 constant        structure                level 1 dcl 9-82 ref 363 373
start_event_channel      24            based           fixed bin(71,0)          level 3 dcl 5-303 set ref 303*
status_code               4            based           fixed bin(35,0)          level 3 dcl 5-303 set ref 293*
sus_channel             310            based           fixed bin(71,0)          level 2 dcl 13-78 ref 303
switch_flags             66            based           structure                level 3 dcl 5-103
switch_values            67            based           structure                level 3 dcl 5-103
sys_log_$general                000100 constant        entry                    external dcl 361 ref 366 376
system_area                            based           area(1024)               dcl 114 set ref 147 170 170 312
system_area_ptr                 000010 internal static pointer                  initial dcl 118 set ref 143 143* 147 170 170 312
tag                      15            based           char(1)                  level 2 packed packed unaligned dcl 13-78 set ref
                                                                                  297*
temp_utep                       000144 automatic       pointer                  dcl 79 set ref 189* 192 194 194 199* 204 207 211*
                                                                                  218 218 221
terminal_id              36            based           char(4)                  level 5 dcl 5-103 ref 226
terminal_type           326            based           char(32)                 level 2 in structure "ute" packed packed unaligned
                                                                                  dcl 13-78 in procedure "uc_setup_process_connect_"
                                                                                  set ref 227*
terminal_type            26            based           char(32)                 level 5 in structure "login_server_process_request"
                                                                                  dcl 5-103 in procedure "uc_setup_process_connect_"
                                                                                  ref 227
termination_event_channel
                        442            based           fixed bin(71,0)          level 3 dcl 13-78 set ref 245* 245
tty_id_code             337            based           char(4)                  level 2 packed packed unaligned dcl 13-78 set ref
                                                                                  226* 283
tty_name                316            based           char(32)                 level 2 packed packed unaligned dcl 13-78 set ref
                                                                                  225* 260* 270*
uc_disconnected_process_list           based           structure                level 1 dcl 10-17 ref 147 312
uc_disconnected_process_list_ptr
                                000450 automatic       pointer                  dcl 10-15 set ref 145* 147 147 170* 173 176 180 184
                                                                                  189 312 312
uc_list_disconnected_procs_     000036 constant        entry                    external dcl 94 ref 170
uc_logout_$reconnect            000040 constant        entry                    external dcl 95 ref 267
uc_proc_term_handler_           000042 constant        entry                    external dcl 96 ref 259 259
uc_set_pit_tty_info_            000044 constant        entry                    external dcl 97 ref 269
uflags                  431            based           structure                level 2 dcl 13-78
unspec                                                 builtin function         dcl 132 set ref 290*
ur_at                    77            based           structure                level 2 dcl 13-78
user                                   based           structure                level 1 dcl 7-58
user_abs_attributes                    based           structure                level 1 dcl 12-25
user_attributes                        based           structure                level 1 dcl 11-21
user_connection_info                   based           structure                level 1 dcl 5-65
user_table_mgr_$free            000046 constant        entry                    external dcl 98 ref 268
user_table_mgr_$utep_from_handle
                                000050 constant        entry                    external dcl 99 ref 154
ute                                    based           structure                level 1 dcl 13-78
utep                            000452 automatic       pointer                  initial dcl 13-76 in procedure
                                                                                  "uc_setup_process_connect_" set ref 154* 156 162
                                                                                  162 162 162 170* 192 194 194 199* 211* 218 220
                                                                                  221* 222 225 226 227 228 235 236 243 244 245 246
                                                                                  251 251* 259 259* 260 260 260 260 265* 269* 270
                                                                                  270 270 270 275* 277 277 279 280 282 283 283 285
                                                                                  294 295 296 297 297 297 301 303 304 13-76* 387 390
                                                                                  392 392 393 394
utep                      4            based           pointer                  array level 3 in structure
                                                                                  "uc_disconnected_process_list" dcl 10-17
                                                                                  in procedure "uc_setup_process_connect_" ref 189
version                   2            based           char(8)                  level 4 dcl 5-303 set ref 292*
vinitproc               100(11)        based           bit(1)                   level 3 packed packed unaligned dcl 13-78 ref 387
whoptr                          000146 automatic       pointer                  dcl 80 set ref 281* 282 283
whotab                                 based           structure                level 1 dcl 14-10
whotabx                 430            based           fixed bin(17,0)          level 2 dcl 13-78 ref 280 282 283

NAMES DECLARED BY DECLARE STATEMENT AND NEVER REFERENCED.
ABS_ATTRIBUTE_NAMES                    internal static varying char(28)         initial array dcl 12-38
ABS_FLAG_NAMES                         internal static varying char(8)          initial array dcl 13-326
ACCESS_AUDIT_HEADER_VERSION_3          internal static fixed bin(9,0)           initial unsigned dcl 2-54
ACTIVE_VALUES                          internal static char(18)                 initial array dcl 4-86
ALT_USER_ATTRIBUTE_NAMES               internal static char(20)                 initial array packed unaligned dcl 11-77
ARH_TYPE_NO_PROXY                      internal static fixed bin(17,0)          initial dcl 2-52
ARH_TYPE_PROXY                         internal static fixed bin(17,0)          initial dcl 2-50
AS_AUDIT_CHANNEL_ACTIONS               internal static char(12)                 initial array packed unaligned dcl 3-193
AS_AUDIT_CHANNEL_ATTACH                internal static fixed bin(17,0)          initial dcl 3-175
AS_AUDIT_CHANNEL_DETACH                internal static fixed bin(17,0)          initial dcl 3-175
AS_AUDIT_CHANNEL_DIALIN                internal static fixed bin(17,0)          initial dcl 3-175
AS_AUDIT_CHANNEL_DIALOUT               internal static fixed bin(17,0)          initial dcl 3-175
AS_AUDIT_CHANNEL_DIAL_SYSTEM           internal static fixed bin(17,0)          initial dcl 3-175
AS_AUDIT_CHANNEL_DIRECTION             internal static char(4)                  initial array packed unaligned dcl 3-196
AS_AUDIT_CHANNEL_SERVICE_INFO          internal static char(12)                 initial array packed unaligned dcl 3-199
AS_AUDIT_DIALID_START                  internal static fixed bin(17,0)          initial dcl 3-188
AS_AUDIT_DIALID_STOP                   internal static fixed bin(17,0)          initial dcl 3-188
AS_AUDIT_PROCESS_ACTIONS               internal static char(10)                 initial array packed unaligned dcl 3-202
AS_AUDIT_PROCESS_CREATE                internal static fixed bin(17,0)          initial dcl 3-162
AS_AUDIT_PROCESS_DESTROY               internal static fixed bin(17,0)          initial dcl 3-162
AS_AUDIT_PROCESS_DISCONNECT            internal static fixed bin(17,0)          initial dcl 3-162
AS_AUDIT_PROCESS_TERMINATE             internal static fixed bin(17,0)          initial dcl 3-162
AS_AUDIT_RECORD_CHN_VERSION_1          internal static fixed bin(9,0)           initial dcl 3-156
AS_AUDIT_RECORD_DIALID_VERSION_1       internal static fixed bin(9,0)           initial dcl 3-159
AS_AUDIT_RECORD_IA_VERSION_1           internal static fixed bin(9,0)           initial dcl 3-153
CONNECT_REQ                            internal static fixed bin(17,0)          initial dcl 5-457
CREATE_REQ                             internal static fixed bin(17,0)          initial dcl 5-457
DERIVE_MASK                            internal static bit(2)                   initial packed unaligned dcl 13-280
DESTROY_REQ                            internal static fixed bin(17,0)          initial dcl 5-457
DIAL_SERVER_FLAG_NAMES                 internal static varying char(12)         initial array dcl 13-332
DONT_MASK                              internal static bit(2)                   initial packed unaligned dcl 13-280
DO_MASK                                internal static bit(2)                   initial packed unaligned dcl 13-280
ENTERP_REQ                             internal static fixed bin(17,0)          initial dcl 5-457
ENTER_REQ                              internal static fixed bin(17,0)          initial dcl 5-457
LIST_REQ                               internal static fixed bin(17,0)          initial dcl 5-457
LOGIN_REQ                              internal static fixed bin(17,0)          initial dcl 5-457
LOGIN_RESULT_VALUES                    internal static varying char(24)         initial array dcl 13-338
LOGIN_SERVER_DIAL_RESPONSE_VERSION_1   internal static char(8)                  initial packed unaligned dcl 5-378
LOGIN_SERVER_LIST_RESPONSE_VERSION_1   internal static char(8)                  initial packed unaligned dcl 5-360
LOGIN_SERVER_NEW_PROC_RESPONSE_VERSION_1
                                       internal static char(8)                  initial packed unaligned dcl 5-420
LOGIN_SERVER_OPERATOR_REQUEST_VERSION_1
                                       internal static char(8)                  initial packed unaligned dcl 5-222
LOGIN_SERVER_OPERATOR_RESPONSE_VERSION_1
                                       internal static char(8)                  initial packed unaligned dcl 5-438
LOGIN_SERVER_TERMINATION_RESPONSE_VERSION_1
                                       internal static char(8)                  initial packed unaligned dcl 5-407
LS_DIAL_REQUEST                        internal static fixed bin(17,0)          initial dcl 5-31
LS_DIAL_REQUEST_VERSION_1              internal static char(8)                  initial packed unaligned dcl 5-180
LS_DIAL_RESPONSE                       internal static fixed bin(17,0)          initial dcl 5-228
LS_DISCONNECT_REQUEST                  internal static fixed bin(17,0)          initial dcl 5-31
LS_DISCONNECT_REQUEST_VERSION_1        internal static char(8)                  initial packed unaligned dcl 5-193
LS_LIST_REQUEST                        internal static fixed bin(17,0)          initial dcl 5-31
LS_LIST_REQUEST_VERSION_1              internal static char(8)                  initial packed unaligned dcl 5-160
LS_LIST_RESPONSE                       internal static fixed bin(17,0)          initial dcl 5-228
LS_LOGOUT_REQUEST                      internal static fixed bin(17,0)          initial dcl 5-31
LS_LOGOUT_REQUEST_VERSION_1            internal static char(8)                  initial packed unaligned dcl 5-203
LS_NEW_PROC_RESPONSE                   internal static fixed bin(17,0)          initial dcl 5-228
LS_OPERATOR_REQUEST                    internal static fixed bin(17,0)          initial dcl 5-31
LS_OPERATOR_RESPONSE                   internal static fixed bin(17,0)          initial dcl 5-228
LS_PROCESS_REQUEST                     internal static fixed bin(17,0)          initial dcl 5-31
LS_PROCESS_REQUEST_VERSION_1           internal static char(8)                  initial packed unaligned dcl 5-150
LS_REQUEST_HEADER_VERSION_1            internal static char(8)                  initial packed unaligned dcl 5-63
LS_REQUEST_SERVER_INFO_VERSION_1       internal static char(8)                  initial packed unaligned dcl 6-26
LS_REQUEST_TYPES                       internal static char(10)                 initial array packed unaligned dcl 5-40
LS_RESPONSE_TYPES                      internal static char(10)                 initial array packed unaligned dcl 5-238
LS_TERMINATION_RESPONSE                internal static fixed bin(17,0)          initial dcl 5-228
LS_UNKNOWN_RESPONSE                    internal static fixed bin(17,0)          initial dcl 5-228
LS_VALIDATE_REQUEST                    internal static fixed bin(17,0)          initial dcl 5-31
LS_VALIDATE_REQUEST_VERSION_1          internal static char(8)                  initial packed unaligned dcl 5-97
LS_VALIDATE_RESPONSE                   internal static fixed bin(17,0)          initial dcl 5-228
LS_VALIDATE_RESPONSE_VERSION_1         internal static char(8)                  initial packed unaligned dcl 5-297
MASK_CTL_NAMES                         internal static varying char(12)         initial array dcl 13-284
NETWORK_CONNECTION_DSA_FILE_TRANSFER   internal static fixed bin(17,0)          initial dcl 5-471
NETWORK_CONNECTION_LOGIN               internal static fixed bin(17,0)          initial dcl 5-471
NEW_PROC_REQ                           internal static fixed bin(17,0)          initial dcl 5-457
NOW_DIALED                             internal static fixed bin(17,0)          initial dcl 4-76
NOW_DIALED_OUT                         internal static fixed bin(17,0)          initial dcl 4-76
NOW_DIALING                            internal static fixed bin(17,0)          initial dcl 4-76
NOW_FREE                               internal static fixed bin(17,0)          initial dcl 4-76
NOW_HAS_PROCESS                        internal static fixed bin(17,0)          initial dcl 4-76
NOW_HUNG_UP                            internal static fixed bin(17,0)          initial dcl 4-76
NOW_LISTENING                          internal static fixed bin(17,0)          initial dcl 4-76
NOW_LOGGED_IN                          internal static fixed bin(17,0)          initial dcl 4-76
PDT_entry_lth                          internal static fixed bin(17,0)          initial dcl 7-19
PDT_header_lth                         internal static fixed bin(17,0)          initial dcl 7-19
PDT_person_id_length                   internal static fixed bin(17,0)          initial dcl 7-19
PDT_project_name_length                internal static fixed bin(17,0)          initial dcl 7-19
PDT_version                            internal static fixed bin(17,0)          initial dcl 7-19
PREEMPT_BUMPED                         internal static fixed bin(17,0)          initial dcl 4-132
PREEMPT_BUMPED_NO_TERM                 internal static fixed bin(17,0)          initial dcl 4-132
PREEMPT_LOAD_CTL                       internal static fixed bin(17,0)          initial dcl 4-132
PREEMPT_TERMSGNL_RECEIVED              internal static fixed bin(17,0)          initial dcl 4-132
PREEMPT_TERM_SENT                      internal static fixed bin(17,0)          initial dcl 4-132
PREEMPT_UNBUMP                         internal static fixed bin(17,0)          initial dcl 4-132
PREEMPT_UNBUMP_IGNORE_ALARM            internal static fixed bin(17,0)          initial dcl 4-132
PREEMPT_VALUES                         internal static varying char(28)         initial array dcl 4-142
PROCESS_TYPE_NAMES                     internal static varying char(12)         initial array dcl 13-265
PT_ABSENTEE                            internal static fixed bin(17,0)          initial dcl 13-261
PT_ALARM                               internal static fixed bin(17,0)          initial dcl 4-106
PT_BUMP                                internal static fixed bin(17,0)          initial dcl 4-106
PT_DAEMON                              internal static fixed bin(17,0)          initial dcl 13-261
PT_DESTROY_REQUEST                     internal static fixed bin(17,0)          initial dcl 4-106
PT_DETACH                              internal static fixed bin(17,0)          initial dcl 4-106
PT_FPE                                 internal static fixed bin(17,0)          initial dcl 4-106
PT_HANGUP                              internal static fixed bin(17,0)          initial dcl 4-106
PT_INTERACTIVE                         internal static fixed bin(17,0)          initial dcl 13-261
PT_LOGOUT                              internal static fixed bin(17,0)          initial dcl 4-106
PT_NEW_PROC_AUTH                       internal static fixed bin(17,0)          initial dcl 4-106
PT_NEW_PROC_REQUEST                    internal static fixed bin(17,0)          initial dcl 4-106
PT_OPERATOR_TERMINATE                  internal static fixed bin(17,0)          initial dcl 4-106
PT_SHUTDOWN                            internal static fixed bin(17,0)          initial dcl 4-106
PT_UNBUMP                              internal static fixed bin(17,0)          initial dcl 4-106
PW_FLAG_NAMES                          internal static varying char(12)         initial array dcl 13-290
SL_INFO_arg_given_in_structure         internal static fixed bin(17,0)          initial dcl 9-69
SL_INFO_arg_not_given                  internal static fixed bin(17,0)          initial dcl 9-69
SL_INFO_as_mode                        internal static fixed bin(17,0)          initial dcl 9-65
SL_INFO_command_mode                   internal static fixed bin(17,0)          initial dcl 9-65
SL_INFO_version_1                      internal static char(8)                  initial packed unaligned dcl 9-62
SL_LOG                                 internal static fixed bin(17,0)          initial dcl 9-14
SL_LOG_CRASH                           internal static fixed bin(17,0)          initial dcl 9-14
SL_TYPE                                internal static fixed bin(17,0)          initial dcl 9-14
SL_TYPE_BEEP                           internal static fixed bin(17,0)          initial dcl 9-14
SL_TYPE_CRASH                          internal static fixed bin(17,0)          initial dcl 9-14
STATE_VALUES                           internal static char(15)                 initial array dcl 4-70
TABLE_NAMES                            internal static char(20)                 initial array packed unaligned dcl 13-271
TAG_ABSENTEE                           internal static char(1)                  initial packed unaligned dcl 4-93
TAG_DAEMON                             internal static char(1)                  initial packed unaligned dcl 4-93
TAG_INTERACTIVE                        internal static char(1)                  initial packed unaligned dcl 4-93
TAG_PROXY                              internal static char(1)                  initial packed unaligned dcl 4-93
TAG_UFT                                internal static char(1)                  initial packed unaligned dcl 4-93
TRA_VEC_VALUES                         internal static char(32)                 initial array dcl 4-54
TTY_DIALED                             internal static fixed bin(17,0)          initial dcl 4-64
TTY_HUNG                               internal static fixed bin(17,0)          initial dcl 4-64
TTY_KNOWN                              internal static fixed bin(17,0)          initial dcl 4-64
TTY_MASKED                             internal static fixed bin(17,0)          initial dcl 4-64
UC_DISCONNECTED_PROCESS_LIST_VERSION_1 internal static char(8)                  initial packed unaligned dcl 10-25
UFLAG_NAMES                            internal static varying char(24)         initial array dcl 13-303
USER_ATTRIBUTES_always_allowed         internal static bit(36)                  initial dcl 11-100
USER_ATTRIBUTES_default_in_pdt         internal static bit(36)                  initial dcl 11-104
USER_ATTRIBUTES_settable_by_user       internal static bit(36)                  initial dcl 11-108
USER_ATTRIBUTE_NAMES                   internal static char(20)                 initial array packed unaligned dcl 11-50
UTE_version_4                          internal static fixed bin(17,0)          initial dcl 13-74
WAIT_ANSWERBACK                        internal static fixed bin(17,0)          initial dcl 4-25
WAIT_BEFORE_HANGUP                     internal static fixed bin(17,0)          initial dcl 4-25
WAIT_CONNECT_REQUEST                   internal static fixed bin(17,0)          initial dcl 4-25
WAIT_DELETE_CHANNEL                    internal static fixed bin(17,0)          initial dcl 4-25
WAIT_DESTROY_REQUEST                   internal static fixed bin(17,0)          initial dcl 4-25
WAIT_DETACH                            internal static fixed bin(17,0)          initial dcl 4-25
WAIT_DIALUP                            internal static fixed bin(17,0)          initial dcl 4-25
WAIT_DIAL_OUT                          internal static fixed bin(17,0)          initial dcl 4-25
WAIT_DIAL_RELEASE                      internal static fixed bin(17,0)          initial dcl 4-25
WAIT_DISCARD_WAKEUPS                   internal static fixed bin(17,0)          initial dcl 4-25
WAIT_FIN_PRIV_ATTACH                   internal static fixed bin(17,0)          initial dcl 4-25
WAIT_FIN_TANDD_ATTACH                  internal static fixed bin(17,0)          initial dcl 4-25
WAIT_GREETING_MSG                      internal static fixed bin(17,0)          initial dcl 4-25
WAIT_HANGUP                            internal static fixed bin(17,0)          initial dcl 4-25
WAIT_LOGIN_ARGS                        internal static fixed bin(17,0)          initial dcl 4-25
WAIT_LOGIN_LINE                        internal static fixed bin(17,0)          initial dcl 4-25
WAIT_LOGOUT                            internal static fixed bin(17,0)          initial dcl 4-25
WAIT_LOGOUT_HOLD                       internal static fixed bin(17,0)          initial dcl 4-25
WAIT_NEW_PASSWORD                      internal static fixed bin(17,0)          initial dcl 4-25
WAIT_NEW_PROC                          internal static fixed bin(17,0)          initial dcl 4-25
WAIT_NEW_PROC_REQUEST                  internal static fixed bin(17,0)          initial dcl 4-25
WAIT_OLD_PASSWORD                      internal static fixed bin(17,0)          initial dcl 4-25
WAIT_PASSWORD                          internal static fixed bin(17,0)          initial dcl 4-25
WAIT_REMOVE                            internal static fixed bin(17,0)          initial dcl 4-25
WAIT_SLAVE_REQUEST                     internal static fixed bin(17,0)          initial dcl 4-25
WAIT_TANDD_HANGUP                      internal static fixed bin(17,0)          initial dcl 4-25
WHOTAB_VERSION_1                       internal static fixed bin(17,0)          initial dcl 14-96
as_channel_audit_record                based           structure                level 1 dcl 3-68
as_data_$BS                            external static char(1)                  dcl 1-21
as_data_$CR                            external static char(1)                  dcl 1-22
as_data_$abs_dim                       external static char(32)                 packed unaligned dcl 1-23
as_data_$acct_update_priority          external static fixed bin(17,0)          dcl 1-24
as_data_$acsdir                        external static char(168)                packed unaligned dcl 1-25
as_data_$ansp                          external static pointer                  dcl 1-26
as_data_$as_procid                     external static bit(36)                  dcl 1-27
as_data_$as_ring                       external static fixed bin(3,0)           dcl 1-28
as_data_$as_tty                        automatic       char(6)                  packed unaligned dcl 1-29
as_data_$asmtp                         external static pointer                  dcl 1-30
as_data_$autp                          external static pointer                  dcl 1-31
as_data_$buzzardp                      external static pointer                  dcl 1-32
as_data_$cdtp                          external static pointer                  dcl 1-33
as_data_$debug_flag                    external static bit(1)                   dcl 1-84
as_data_$default_weight                external static fixed bin(35,0)          dcl 1-34
as_data_$devtabp                       external static pointer                  dcl 1-35
as_data_$dft_user_ring                 external static fixed bin(3,0)           dcl 1-36
as_data_$dutp                          external static pointer                  dcl 1-37
as_data_$g115_dim                      external static char(32)                 packed unaligned dcl 1-38
as_data_$lct_initialized               external static bit(1)                   dcl 1-39
as_data_$lct_size                      external static fixed bin(17,0)          dcl 1-40
as_data_$login_args                    external static structure                level 1 dcl 1-62
as_data_$login_words                   external static fixed bin(17,0)          dcl 1-77
as_data_$ls_message_buffer_cur_lth     external static fixed bin(18,0)          dcl 1-86
as_data_$ls_message_buffer_max_lth     external static fixed bin(18,0)          dcl 1-87
as_data_$ls_message_buffer_ptr         external static pointer                  dcl 1-88
as_data_$ls_request_server_info_ptr    external static pointer                  dcl 1-85
as_data_$max_user_ring                 external static fixed bin(3,0)           dcl 1-41
as_data_$mgtp                          external static pointer                  dcl 1-42
as_data_$mrd_dim                       external static char(32)                 packed unaligned dcl 1-43
as_data_$ntty_dim                      external static char(32)                 packed unaligned dcl 1-44
as_data_$pdtdir                        external static char(168)                packed unaligned dcl 1-45
as_data_$pit_ptr                       external static pointer                  dcl 1-46
as_data_$rcpdir                        external static char(168)                packed unaligned dcl 1-47
as_data_$request_priority              external static fixed bin(17,0)          dcl 1-48
as_data_$rs_ptrs                       external static pointer                  array dcl 1-49
as_data_$rtdtp                         external static pointer                  dcl 1-50
as_data_$sat_htp                       external static pointer                  dcl 1-51
as_data_$satp                          external static pointer                  dcl 1-52
as_data_$signal_types                  external static structure                level 1 dcl 1-67
as_data_$suffix                        external static char(2)                  array packed unaligned dcl 1-53
as_data_$sysdir                        external static char(168)                packed unaligned dcl 1-54
as_data_$system_signal_types           external static structure                level 1 dcl 1-72
as_data_$teens_suffix                  external static char(2)                  array packed unaligned dcl 1-55
as_data_$terminet_tabs_string          external static varying char(144)        dcl 1-56
as_data_$update_priority               external static fixed bin(17,0)          dcl 1-58
as_data_$version                       external static char(8)                  packed unaligned dcl 1-59
as_data_login_words                    based           structure                level 1 dcl 1-77
as_dial_service_audit_record           based           structure                level 1 dcl 3-100
as_ia_audit_record_abs                 based           structure                level 1 dcl 3-34
as_ia_audit_record_abs_proxy           based           structure                level 1 dcl 3-41
as_ia_audit_record_int_dmn             based           structure                level 1 dcl 3-27
audit_record_header_proxy              based           structure                level 1 dcl 2-22
audit_record_ptr                       automatic       pointer                  dcl 2-16
channel_audit_info                     based           structure                level 1 dcl 3-138
channel_audit_info_ptr                 automatic       pointer                  dcl 3-136
dial_server_info                       based           structure                level 1 dcl 3-124
dial_server_info_ptr                   automatic       pointer                  dcl 3-122
login_server_dial_request              based           structure                level 1 dcl 5-170
login_server_dial_response             based           structure                level 1 dcl 5-366
login_server_disconnect_request        based           structure                level 1 dcl 5-188
login_server_list_request              based           structure                level 1 dcl 5-156
login_server_list_response             based           structure                level 1 dcl 5-347
login_server_list_response_n_processes automatic       fixed bin(17,0)          dcl 5-358
login_server_logout_request            based           structure                level 1 dcl 5-199
login_server_new_proc_response         based           structure                level 1 dcl 5-414
login_server_operator_request          based           structure                level 1 dcl 5-214
login_server_operator_response         based           structure                level 1 dcl 5-426
login_server_termination_response      based           structure                level 1 dcl 5-385
login_server_validate_request          based           structure                level 1 dcl 5-76
login_server_validate_response         based           structure                level 1 dcl 5-267
ls_process_request_arg_string_length   automatic       fixed bin(21,0)          dcl 5-148
ls_process_request_n_args              automatic       fixed bin(17,0)          dcl 5-147
ls_reply_message                       based           structure                level 1 dcl 5-445
ls_request_server_info                 based           structure                level 1 dcl 6-12
pdt                                    based           structure                level 1 dcl 7-27
sl_info_code_msg                       internal static structure                level 1 dcl 9-187
sl_info_msg                            internal static structure                level 1 dcl 9-214
sl_info_sev_code_label_msg             internal static structure                level 1 dcl 9-161
sl_info_sev_coded_msg                  internal static structure                level 1 dcl 9-134
sl_info_sev_msg                        internal static structure                level 1 dcl 9-108
uc_n_disconnected_processes            automatic       fixed bin(17,0)          dcl 10-16

NAMES DECLARED BY EXPLICIT CONTEXT.
Abort                           001773 constant        entry                    internal dcl 332 ref 173 176 184 201 213 387
Abort_With_Error                002001 constant        entry                    internal dcl 357 ref 156 162
Error_No_Abort                  002046 constant        entry                    internal dcl 370 ref 260 270
FAULT_LABEL                     001767 constant        label                    dcl 318 ref 151 151
RETURN                          001751 constant        label                    dcl 312 ref 320 338 368
Setup_Outer_Module              002106 constant        entry                    internal dcl 384 ref 232
uc_setup_process_connect_       000464 constant        entry                    external dcl 56

THERE WERE NO NAMES DECLARED BY CONTEXT OR IMPLICATION.

STORAGE REQUIREMENTS FOR THIS PROGRAM.

	Object	Text	Link	Symbol	Defs	Static
Start          0       0      2636        2740    2166        2646
Length      3514    2166       102         540     450           2

BLOCK NAME	         STACK SIZE     TYPE		WHY NONQUICK/WHO SHARES STACK FRAME
uc_setup_process_connect_           418 external procedure  is an external procedure.  
on unit on line 146                  64 on unit               
on unit on line 151                  78 on unit               
Abort                                   internal procedure  shares stack frame of external procedure uc_setup_process_connect_.  
Abort_With_Error                     70 internal procedure  is declared options(variable).  
Setup_Outer_Module                      internal procedure  shares stack frame of external procedure uc_setup_process_connect_.  

STORAGE FOR INTERNAL STATIC VARIABLES.

   LOC IDENTIFIER                  BLOCK NAME
000010 system_area_ptr             uc_setup_process_connect_

STORAGE FOR AUTOMATIC VARIABLES.

STACK FRAME                 LOC IDENTIFIER                  BLOCK NAME
uc_setup_process_connect_
                         000100 added_info                  uc_setup_process_connect_
                         000140 code                        uc_setup_process_connect_
                         000141 process_number              uc_setup_process_connect_
                         000142 saved_utep                  uc_setup_process_connect_
                         000144 temp_utep                   uc_setup_process_connect_
                         000146 whoptr                      uc_setup_process_connect_
                         000164 ls_request_ptr              uc_setup_process_connect_
                         000166 ls_response_ptr             uc_setup_process_connect_
                         000170 ls_process_response_accounting_message_length
                                                            uc_setup_process_connect_
                         000172 ls_reply_message_ptr        uc_setup_process_connect_
                         000174 ls_request_server_info_ptr  uc_setup_process_connect_
                         000176 pdtp                        uc_setup_process_connect_
                         000200 sl_info                     uc_setup_process_connect_
                         000450 uc_disconnected_process_list_ptr
                                                            uc_setup_process_connect_
                         000452 utep                        uc_setup_process_connect_

THE FOLLOWING EXTERNAL OPERATORS ARE USED BY THIS PROGRAM.
call_ext_out_desc   call_ext_out        call_int_this_desc  return_mac          move_label_var      make_label_var
tra_ext_1           enable_op           ext_entry           int_entry           op_freen_

THE FOLLOWING EXTERNAL ENTRIES ARE CALLED BY THIS PROGRAM.
aim_check_$equal              as_access_audit_$process      as_access_audit_$process_connect_denied
as_any_other_handler_$no_cleanup                            asu_$release_suspended_process
asu_$setup_login_server_handle                              cu_$arg_list_ptr              display_access_class_
get_system_free_area_         ioa_$rsnnl                    ipc_$decl_event_call_chn      sys_log_$general
uc_list_disconnected_procs_   uc_logout_$reconnect          uc_proc_term_handler_         uc_set_pit_tty_info_
user_table_mgr_$free          user_table_mgr_$utep_from_handle

THE FOLLOWING EXTERNAL VARIABLES ARE USED BY THIS PROGRAM.
as_data_$tty_dim              as_data_$whoptr               as_error_table_$dialup_error
as_error_table_$illegal_om_arg                              as_error_table_$no_connect_aclass
as_error_table_$no_disconnected_procs                       as_error_table_$no_such_process_msg
as_error_table_$ring_too_low  error_table_$bad_arg          error_table_$id_not_found




   LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC   
     56 000455       413 000471   13   76 000473       137 000474       138 000500       139 000503       140 000506
    141 000507       143 000510       145 000521       146 000523       147 000537       149 000552       151 000553
    154 000611       156 000623       162 000660       170 000736       173 000753       176 000766       179 001000
    180 001003       184 001012       189 001027       192 001034       194 001053       199 001133       201 001153
    204 001162       207 001172       211 001226       213 001246       218 001255       220 001261       221 001262
    222 001263       225 001266       226 001272       227 001274       228 001277       232 001301       234 001302
    235 001306       236 001314       243 001316       244 001324       245 001326       246 001330       251 001332
    259 001345       260 001373       265 001441       267 001462       268 001477       269 001506       270 001517
    275 001565       277 001574       279 001607       280 001611       281 001613       282 001617       283 001623
    285 001625       288 001627       289 001633       290 001634       291 001646       292 001650       293 001653
    294 001654       295 001656       296 001662       297 001666       300 001726       301 001731       303 001737
    304 001741       311 001743       312 001751       315 001763       316 001766       318 001767       320 001772
    332 001773       337 001775       338 001777       357 002000       363 002006       364 002012       365 002020
    366 002026       367 002037       368 002042       370 002045       373 002053       374 002057       375 002066
    376 002074       377 002105       384 002106       387 002107       390 002130       392 002134       393 002143
    394 002151       398 002160


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
