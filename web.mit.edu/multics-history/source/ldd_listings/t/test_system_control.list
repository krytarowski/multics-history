	COMPILATION LISTING OF SEGMENT test_system_control
	Compiled by: Multics PL/I Compiler, Release 29, of July 28, 1986
	Compiled at: Honeywell Bull, Phx. Az., Sys-M 
	Compiled on: 08/04/87  1307.6 mst Tue
	    Options: optimize map

        1 /****^  ********************************************
        2*        *                                          *
        3*        * Copyright, (C) Honeywell Bull Inc., 1987 *
        4*        *                                          *
        5*        ******************************************** */
        6 
        7 /* format: style4,indattr */
        8 
        9 test_system_control:
       10      procedure options (variable);
       11 
       12 /* This command allows a system control (SC) environment to be set up
       13*   from which an answering service (AS) may be started for the purposes
       14*   of debugging the SC and AS software.  The command's only argument is
       15*   the pathname of a test >sc1 directory (do not use the real >sc1
       16*   directory).  In this directory should already be set up all the
       17*   segments needed to run a SC and AS invocation.  If segments are
       18*   missing or incorrectly formatted, error messages will result and the
       19*   SC or AS initialization will fail.  The SC/AS environment is not the most
       20*   robust one, so fatal process errors (although not common) may occur if
       21*   things are improperly setup.  The best way to get a SC/AS running is
       22*   to try to get an >sc1 directory set up with the required segments
       23*   (refer to the acct_start_up.ec to see what needs to be in the >sc1
       24*   directory) and then invoke this command.  Fix all errors which result.
       25*   Another (more frustrating) approach is to invoke this command with
       26*   an empty directory and fix all the errors.
       27*
       28*   WARNING:  The SC environment plays with the I/O switches.  Do not expect
       29*   it to work in anything but a virgin environment (no auditing, no video).
       30*   And don't be surprised if your favorite commands (emacs) won't work once
       31*   you've started SC in your process.  (But then, anyone who knows the SC
       32*   environment running in the Initializer process knows what a limited
       33*   environment there is.  */
       34 
       35 /****^  HISTORY COMMENTS:
       36*  1) change(86-04-18,Swenson), approve(87-07-13,MCR7741),
       37*     audit(87-07-13,GDixon), install(87-08-04,MR12.1-1055):
       38*     Created in order to run system control in a test process.
       39*                                                   END HISTORY COMMENTS */
       40 /* Automatic */
       41 
       42 dcl  code		        fixed bin (35) automatic;
       43 dcl  sci_ptr	        ptr automatic;
       44 dcl  system_control_dirname char (168) automatic;
       45 
       46 /* Entries */
       47 
       48 dcl  absentee_user_manager_$term_aum entry ();
       49 dcl  as_who$as_who_init     entry (char (*));
       50 dcl  com_err_	        entry () options (variable);
       51 dcl  mrdim_$test_mrd        entry (char (*));
       52 dcl  pnt_manager_$test      entry (char (*));
       53 dcl  ssu_$abort_subsystem   entry () options (variable);
       54 dcl  ssu_$destroy_invocation entry (ptr);
       55 dcl  ssu_$standalone_invocation entry (ptr, char (*), char (*), ptr, entry, fixed bin (35));
       56 dcl  system_control_        entry ();
       57 
       58 /* Conditions */
       59 
       60 dcl  cleanup	        condition;
       61 
       62 /* Constant */
       63 
       64 dcl  ME		        char (32) initial ("test_system_control") internal static options (constant);
       65 dcl  TRUE		        bit (1) aligned initial ("1"b) internal static options (constant);
       66 
       67 /* Program */
       68 
       69 	sci_ptr = null ();
       70 	on cleanup
       71 	     call Clean_up ();
       72 
       73 	call ssu_$standalone_invocation (sci_ptr, ME, "1.0", null (),
       74 	     Abort_subsystem, code);
       75 	if code ^= 0 then do;
       76 	     call com_err_ (code, ME, "Creating standalone subsystem invocation.");
       77 	     goto RETURN;
       78 	end;
       79 
       80 	call Process_arguments ();
       81 
       82 	sc_stat_$test_mode = TRUE;
       83 	sc_stat_$sysdir = system_control_dirname;
       84 	sc_stat_$log_dir = rtrim (system_control_dirname) || ">as_logs";
       85 
       86 	/*** No executing of the system_start_up.ec */
       87 
       88 	sc_stat_$did_part1 = TRUE;
       89 	sc_stat_$did_part2 = TRUE;
       90 	sc_stat_$did_part3 = TRUE;
       91 
       92 	/*** No ring-0 MCS initialization */
       93 
       94 	as_data_$lct_initialized = TRUE;
       95 
       96 /**** Ensure we use the test PNT for the admin mode password */
       97 	call pnt_manager_$test (system_control_dirname);
       98 /**** Make sure we don't use the REAL message coordinator */
       99 	call mrdim_$test_mrd (system_control_dirname);
      100 /**** Let's not start up the absentee facility.  If we need to test it,
      101*      we can start it manually. */
      102 	call absentee_user_manager_$term_aum ();
      103 /**** Make as_who in this process use the test answer_table */
      104 	call as_who$as_who_init (system_control_dirname);
      105 	call system_control_ ();
      106 RETURN:
      107 	call Clean_up ();
      108 	return;
      109 
      110 Process_arguments:
      111      procedure ();
      112 
      113 dcl  argument_idx	        fixed bin automatic;
      114 dcl  argument_lth	        fixed bin (21) automatic;
      115 dcl  argument_ptr	        ptr automatic;
      116 dcl  n_arguments	        fixed bin automatic;
      117 
      118 dcl  argument	        char (argument_lth) based (argument_ptr);
      119 
      120 dcl  absolute_pathname_     entry (char (*), char (*), fixed bin (35));
      121 dcl  ssu_$arg_count	        entry (ptr, fixed bin);
      122 dcl  ssu_$arg_ptr	        entry (ptr, fixed bin, ptr, fixed bin (21));
      123 
      124 	call ssu_$arg_count (sci_ptr, n_arguments);
      125 	if n_arguments ^= 1 then
      126 	     call ssu_$abort_subsystem (sci_ptr, code,
      127 		"Syntax is: ^a system_control_dirname.", ME);
      128 
      129 	call ssu_$arg_ptr (sci_ptr, 1, argument_ptr, argument_lth);
      130 
      131 	call absolute_pathname_ (argument, system_control_dirname, code);
      132 	if code ^= 0 then
      133 	     call ssu_$abort_subsystem (sci_ptr, code, "^a", argument);
      134 	return;
      135      end Process_arguments;
      136 
      137 Abort_subsystem:
      138      procedure ();
      139 
      140 	goto RETURN;
      141      end Abort_subsystem;
      142 
      143 Clean_up:
      144      procedure ();
      145 	if sci_ptr ^= null () then
      146 	     call ssu_$destroy_invocation (sci_ptr);
      147 	return;
      148      end Clean_up;
      149 
      150 /* format: off */
      151  /* BEGIN INCLUDE FILE ... as_data_.incl.pl1 ... */
  1     2 
  1     3 /* format: style4 */
  1     4 
  1     5 /* This file must be kept in sync with as_data_.alm */
  1     6 
  1     7 /****^  HISTORY COMMENTS:
  1     8*  1) change(86-09-21,Beattie), approve(86-09-22,MCR7542),
  1     9*     audit(86-10-31,Brunelle), install(86-11-12,MR12.0-1211):
  1    10*     Remove references to the 963 and 029 preaccess commands and remove support
  1    11*     for ARDS, 202_ETX, 2741 and 1050 in system interfaces.
  1    12*  2) change(86-09-25,Swenson), approve(87-07-20,MCR7737),
  1    13*     audit(87-07-20,GDixon), install(87-08-04,MR12.1-1056):
  1    14*     Add references to as_data_ entrypoints added for Login Server.
  1    15*  3) change(87-03-03,Brunelle), approve(87-07-20,MCR7697),
  1    16*     audit(87-07-20,GDixon), install(87-08-04,MR12.1-1056):
  1    17*     Added new user signal field of inacrcvd (14) to handle inactivity response
  1    18*     from user.
  1    19*                                                   END HISTORY COMMENTS */
  1    20 
  1    21 dcl  as_data_$BS char (1) aligned ext static;		/* BACKSPACE character */
  1    22 dcl  as_data_$CR char (1) aligned ext static;		/* CARRIAGE RETURN character */
  1    23 dcl  as_data_$abs_dim char (32) ext static;		/* absentee DIM */
  1    24 dcl  as_data_$acct_update_priority fixed bin ext static;	/* accounting update IPC priority */
  1    25 dcl  as_data_$acsdir char (168) ext static;		/* Access Control Segment directory */
  1    26 dcl  as_data_$ansp ptr ext static;			/* answer_table */
  1    27 dcl  as_data_$as_procid bit (36) aligned ext static;	/* Answering Service process id */
  1    28 dcl  as_data_$as_ring fixed bin (3) ext static;		/* AS operating ring */
  1    29 dcl  as_data_$as_tty char (6);			/* AS master tty channel */
  1    30 dcl  as_data_$asmtp ptr ext static;			/* AS meter table */
  1    31 dcl  as_data_$autp ptr ext static;			/* absentee_user_table */
  1    32 dcl  as_data_$buzzardp ptr ext static;			/* dpg_ list of buteo processes */
  1    33 dcl  as_data_$cdtp ptr ext static;			/* CDT */
  1    34 dcl  as_data_$default_weight fixed bin (35) ext;		/* default user process load control weight */
  1    35 dcl  as_data_$devtabp ptr ext static;			/* device_table */
  1    36 dcl  as_data_$dft_user_ring fixed bin (3) ext static;	/* default user ring */
  1    37 dcl  as_data_$dutp ptr ext static;			/* daemon_user_table */
  1    38 dcl  as_data_$g115_dim char (32) ext static;
  1    39 dcl  as_data_$lct_initialized bit (1) aligned ext static;	/* LCT allocated in ring 0 */
  1    40 dcl  as_data_$lct_size fixed bin ext static;		/* CDT tty channels + spares */
  1    41 dcl  as_data_$max_user_ring fixed bin (3) ext static;	/* maximum user ring */
  1    42 dcl  as_data_$mgtp ptr ext static;			/* master group table */
  1    43 dcl  as_data_$mrd_dim char (32) ext static;		/* daemon's message routing DIM */
  1    44 dcl  as_data_$ntty_dim char (32) ext static;		/* network connection DIM */
  1    45 dcl  as_data_$pdtdir char (168) ext static;		/* PDT directory */
  1    46 dcl  as_data_$pit_ptr ptr ext static;			/* pit_temp_ */
  1    47 dcl  as_data_$rcpdir char (168) ext static;		/* RCP directory */
  1    48 dcl  as_data_$request_priority fixed bin ext static;
  1    49 dcl  as_data_$rs_ptrs (0:9) ptr ext static;		/* rate_structures */
  1    50 dcl  as_data_$rtdtp ptr ext static;			/* RTDT */
  1    51 dcl  as_data_$sat_htp ptr ext static;			/* SAT hash table */
  1    52 dcl  as_data_$satp ptr ext static;			/* SAT */
  1    53 dcl  as_data_$suffix (0:9) char (2) unaligned ext static;
  1    54 dcl  as_data_$sysdir char (168) ext static;		/* system control directory */
  1    55 dcl  as_data_$teens_suffix (10:19) char (2) unaligned ext static;
  1    56 dcl  as_data_$terminet_tabs_string char (144) varying ext static;
  1    57 dcl  as_data_$tty_dim char (32) ext static;		/* standard interactive DIM */
  1    58 dcl  as_data_$update_priority fixed bin ext static;	/* ??? */
  1    59 dcl  as_data_$version char (8) ext static;		/* AS version */
  1    60 dcl  as_data_$whoptr ptr ext static;			/* whotab */
  1    61 
  1    62 dcl  1 as_data_$login_args aligned ext static,		/* control arguments for login */
  1    63        2 n_login_args fixed bin,
  1    64        2 pad fixed bin,
  1    65        2 login_args (55 /* as_data_$login_args.n_login_args */) char (24) unaligned;
  1    66 
  1    67 dcl  1 as_data_$signal_types ext static aligned,		/* IPC process control signals */
  1    68        2 n_signals fixed bin,
  1    69        2 pad fixed bin,
  1    70        2 signals (14 /* as_data_$signal_types.n_signals */) char (8) unaligned;
  1    71 
  1    72 dcl  1 as_data_$system_signal_types ext static aligned,	/* IPC process control signals */
  1    73        2 n_system_signals fixed bin,
  1    74        2 pad fixed bin,
  1    75        2 system_signals (10 /* as_data_$system_signal_types.n_system_signals */) char (8) unaligned;
  1    76 
  1    77 dcl  as_data_$login_words fixed bin ext static aligned,
  1    78 						/* interactive login words */
  1    79      1 as_data_login_words aligned based (addr (as_data_$login_words)),
  1    80        2 n_words fixed bin,
  1    81        2 pad fixed bin,
  1    82        2 words (0 refer (as_data_login_words.n_words)) char (16) unaligned;
  1    83 
  1    84 dcl  as_data_$debug_flag bit (1) aligned external static;
  1    85 dcl  as_data_$ls_request_server_info_ptr ptr external static;
  1    86 dcl  as_data_$ls_message_buffer_cur_lth fixed bin (18) external static;
  1    87 dcl  as_data_$ls_message_buffer_max_lth fixed bin (18) external static;
  1    88 dcl  as_data_$ls_message_buffer_ptr ptr external static;
  1    89 
  1    90 /* END INCLUDE FILE ... as_data_.incl.pl1 ... */
      151 
      152  /*  BEGIN:   sc_stat_.incl.pl1			  *  *  *  *  *  */
  2     2 
  2     3 
  2     4 /****^  HISTORY COMMENTS:
  2     5*  1) change(87-02-04,GDixon), approve(87-05-25,MCR7690),
  2     6*     audit(87-06-02,Parisek), install(87-08-04,MR12.1-1056):
  2     7*     Add sc_stat_$vchn_requires_accept in support of DSA virtual channels.
  2     8*  2) change(87-02-04,GDixon), approve(87-05-25,MCR7680),
  2     9*     audit(87-06-02,Parisek), install(87-08-04,MR12.1-1056):
  2    10*     Reorganized by type of data to improve readability.
  2    11*                                                   END HISTORY COMMENTS */
  2    12 
  2    13 
  2    14 			      /* ACCESS NAMES		       */
  2    15 dcl (
  2    16  sc_stat_$exec_access_name,	      /* check MC access in an exec request    */
  2    17  sc_stat_$unidentified_access_name  /* check access if no one is logged in.  */
  2    18     ) char(32) ext static;
  2    19 
  2    20 		        /* PATHNAMES			       */
  2    21 dcl (
  2    22  sc_stat_$info_dir,	        /* admin info segs directory		       */
  2    23  sc_stat_$log_dir,	        /* as log segs directory		       */
  2    24  sc_stat_$mc_acs_dir,       /* message coordinator ACS segments (.mcacs) dir */
  2    25  sc_stat_$sysdir	        /* system control directory		       */
  2    26     ) char(168) ext static;
  2    27 
  2    28 		        /* OTHER CHAR STRINGS			       */
  2    29 dcl (
  2    30  sc_stat_$master_channel    /* Master TTY channel.		       */
  2    31     )  char(6) aligned ext static;
  2    32 
  2    33 			       /* LABELS			       */
  2    34 dcl (
  2    35  sc_stat_$admin_listener_exit_label, /* GO here to exit admin mode.  Set to  */
  2    36 			       /*    ssu_$null_label unless 	       */
  2    37 			       /*	   admin_listener is active.	       */
  2    38  sc_stat_$master_abort_label,	       /* GO here after fault that is not      */
  2    39 			       /*    attributable to a particular      */
  2    40 			       /*	   command.		       */
  2    41  sc_stat_$system_shutdown_label      /* GO here to shut down system	       */
  2    42     ) label variable ext static;
  2    43 
  2    44 			 /* POINTERS TO			       */
  2    45 dcl (
  2    46  sc_stat_$admin_log_iocb,	 /* IOCB for admin log		       */
  2    47  sc_stat_$admin_log_write_ptr, /* DATA for log_write_ calls on the admin log */
  2    48  sc_stat_$admin_sci_ptr,	 /* DATA ssu_ for terminal currently executing */
  2    49  sc_stat_$as_log_write_ptr,	 /* DATA for log_write_ calls on as log, used  */
  2    50 			 /*      by sys_log_.		       */
  2    51  sc_stat_$initzer_ttyp,	 /* ENT  mc_ate for initializer terminal       */
  2    52  sc_stat_$master_iocb,	 /* IOCB for "master_i/o"		       */
  2    53  sc_stat_$master_sci_ptr,	 /* DATA ssu_ (permanent) for system control   */
  2    54  sc_stat_$mc_ansp,		 /* HEAD of mc_anstbl		       */
  2    55  sc_stat_$mc_iocb,		 /* IOCB ptr for "mc_i/o"		       */
  2    56  sc_stat_$sv1_iocb,		 /* IOCB ptr for "severity1"		       */
  2    57  sc_stat_$sv2_iocb,		 /* IOCB ptr for "severity2"		       */
  2    58  sc_stat_$sv3_iocb		 /* IOCB ptr for "severity3"		       */
  2    59     ) ptr ext static;
  2    60 
  2    61 			   /* SWITCHES			       */
  2    62 dcl (
  2    63  sc_stat_$Go,		   /* TRUE after answering service is listening*/
  2    64  sc_stat_$Go_typed,		   /* TRUE immediately after 'go' is typed     */
  2    65  sc_stat_$Multics,		   /* TRUE after answering service started     */
  2    66  sc_stat_$Multics_typed,	   /* TRUE immediately after 'mult' is typed   */
  2    67  sc_stat_$Star_typed,	   /* TRUE if 'mult' and 'go' came from 'star' */
  2    68  sc_stat_$admin_listener_switch, /* TRUE if in the admin listener	       */
  2    69  sc_stat_$did_part1,	   /* TRUE if part 1 of system startup ec done */
  2    70  sc_stat_$did_part2,	   /* TRUE if part 2 of system startup ec done */
  2    71  sc_stat_$did_part3,	   /* TRUE if part 3 of system startup ec done */
  2    72  sc_stat_$mc_is_on,		   /* TRUE if message coordinator running      */
  2    73  sc_stat_$no_operator_login,	   /* TRUE if operator login not required, or  */
  2    74 			   /*	 if PNT not yet available.	       */
  2    75  sc_stat_$shutdown_typed,	   /* TRUE if 'shutdown' command in progress.  */
  2    76  sc_stat_$test_mode,	   /* TRUE if in test environment	       */
  2    77  sc_stat_$vchn_requires_accept   /* TRUE if vchn may only be used if accepted*/
  2    78 			   /*      by operator signed on system console*/
  2    79     ) bit(1) aligned ext static;
  2    80 
  2    81 
  2    82 /*  END OF:  sc_stat_.incl.pl1			  *  *  *  *  *  */
      152 
      153 /* format: on */
      154      end test_system_control;
	SOURCE FILES USED IN THIS COMPILATION.

LINE      NUMBER  DATE MODIFIED     NAME			PATHNAME
             0    08/04/87  1221.9  test_system_control.pl1           >special_ldd>install>MR12.1-1054>test_system_control.pl1
151          1    08/04/87  1154.5  as_data_.incl.pl1                 >spec>install>1056>as_data_.incl.pl1
152          2    08/04/87  1139.2  sc_stat_.incl.pl1                 >spec>install>1056>sc_stat_.incl.pl1
	NAMES DECLARED IN THIS COMPILATION.

IDENTIFIER	     OFFSET    LOC STORAGE CLASS   DATA TYPE		ATTRIBUTES AND REFERENCES
								(* indicates a set context)

NAMES DECLARED BY DECLARE STATEMENT.
ME                              000000 constant        char(32)                 initial unaligned dcl 64 set ref 73* 76* 125*
TRUE                                   constant        bit(1)                   initial dcl 65 ref 82 88 89 90 94
absentee_user_manager_$term_aum 000010 constant        entry                    external dcl 48 ref 102
absolute_pathname_              000050 constant        entry                    external dcl 120 ref 131
argument                               based           char                     unaligned dcl 118 set ref 131* 132*
argument_lth                    000172 automatic       fixed bin(21,0)          dcl 114 set ref 129* 131 131 132 132
argument_ptr                    000174 automatic       pointer                  dcl 115 set ref 129* 131 132
as_data_$lct_initialized        000032 external static bit(1)                   dcl 1-39 set ref 94*
as_who$as_who_init              000012 constant        entry                    external dcl 49 ref 104
cleanup                         000156 stack reference condition                dcl 60 ref 70
code                            000100 automatic       fixed bin(35,0)          dcl 42 set ref 73* 75 76* 125* 131* 132 132*
com_err_                        000014 constant        entry                    external dcl 50 ref 76
mrdim_$test_mrd                 000016 constant        entry                    external dcl 51 ref 99
n_arguments                     000176 automatic       fixed bin(17,0)          dcl 116 set ref 124* 125
pnt_manager_$test               000020 constant        entry                    external dcl 52 ref 97
sc_stat_$did_part1              000040 external static bit(1)                   dcl 2-62 set ref 88*
sc_stat_$did_part2              000042 external static bit(1)                   dcl 2-62 set ref 89*
sc_stat_$did_part3              000044 external static bit(1)                   dcl 2-62 set ref 90*
sc_stat_$log_dir                000034 external static char(168)                unaligned dcl 2-21 set ref 84*
sc_stat_$sysdir                 000036 external static char(168)                unaligned dcl 2-21 set ref 83*
sc_stat_$test_mode              000046 external static bit(1)                   dcl 2-62 set ref 82*
sci_ptr                         000102 automatic       pointer                  dcl 43 set ref 69* 73* 124* 125* 129* 132* 145 145*
ssu_$abort_subsystem            000022 constant        entry                    external dcl 53 ref 125 132
ssu_$arg_count                  000052 constant        entry                    external dcl 121 ref 124
ssu_$arg_ptr                    000054 constant        entry                    external dcl 122 ref 129
ssu_$destroy_invocation         000024 constant        entry                    external dcl 54 ref 145
ssu_$standalone_invocation      000026 constant        entry                    external dcl 55 ref 73
system_control_                 000030 constant        entry                    external dcl 56 ref 105
system_control_dirname          000104 automatic       char(168)                unaligned dcl 44 set ref 83 84 97* 99* 104* 131*

NAMES DECLARED BY DECLARE STATEMENT AND NEVER REFERENCED.
argument_idx                           automatic       fixed bin(17,0)          dcl 113
as_data_$BS                            external static char(1)                  dcl 1-21
as_data_$CR                            external static char(1)                  dcl 1-22
as_data_$abs_dim                       external static char(32)                 unaligned dcl 1-23
as_data_$acct_update_priority          external static fixed bin(17,0)          dcl 1-24
as_data_$acsdir                        external static char(168)                unaligned dcl 1-25
as_data_$ansp                          external static pointer                  dcl 1-26
as_data_$as_procid                     external static bit(36)                  dcl 1-27
as_data_$as_ring                       external static fixed bin(3,0)           dcl 1-28
as_data_$as_tty                        automatic       char(6)                  unaligned dcl 1-29
as_data_$asmtp                         external static pointer                  dcl 1-30
as_data_$autp                          external static pointer                  dcl 1-31
as_data_$buzzardp                      external static pointer                  dcl 1-32
as_data_$cdtp                          external static pointer                  dcl 1-33
as_data_$debug_flag                    external static bit(1)                   dcl 1-84
as_data_$default_weight                external static fixed bin(35,0)          dcl 1-34
as_data_$devtabp                       external static pointer                  dcl 1-35
as_data_$dft_user_ring                 external static fixed bin(3,0)           dcl 1-36
as_data_$dutp                          external static pointer                  dcl 1-37
as_data_$g115_dim                      external static char(32)                 unaligned dcl 1-38
as_data_$lct_size                      external static fixed bin(17,0)          dcl 1-40
as_data_$login_args                    external static structure                level 1 dcl 1-62
as_data_$login_words                   external static fixed bin(17,0)          dcl 1-77
as_data_$ls_message_buffer_cur_lth     external static fixed bin(18,0)          dcl 1-86
as_data_$ls_message_buffer_max_lth     external static fixed bin(18,0)          dcl 1-87
as_data_$ls_message_buffer_ptr         external static pointer                  dcl 1-88
as_data_$ls_request_server_info_ptr    external static pointer                  dcl 1-85
as_data_$max_user_ring                 external static fixed bin(3,0)           dcl 1-41
as_data_$mgtp                          external static pointer                  dcl 1-42
as_data_$mrd_dim                       external static char(32)                 unaligned dcl 1-43
as_data_$ntty_dim                      external static char(32)                 unaligned dcl 1-44
as_data_$pdtdir                        external static char(168)                unaligned dcl 1-45
as_data_$pit_ptr                       external static pointer                  dcl 1-46
as_data_$rcpdir                        external static char(168)                unaligned dcl 1-47
as_data_$request_priority              external static fixed bin(17,0)          dcl 1-48
as_data_$rs_ptrs                       external static pointer                  array dcl 1-49
as_data_$rtdtp                         external static pointer                  dcl 1-50
as_data_$sat_htp                       external static pointer                  dcl 1-51
as_data_$satp                          external static pointer                  dcl 1-52
as_data_$signal_types                  external static structure                level 1 dcl 1-67
as_data_$suffix                        external static char(2)                  array unaligned dcl 1-53
as_data_$sysdir                        external static char(168)                unaligned dcl 1-54
as_data_$system_signal_types           external static structure                level 1 dcl 1-72
as_data_$teens_suffix                  external static char(2)                  array unaligned dcl 1-55
as_data_$terminet_tabs_string          external static varying char(144)        dcl 1-56
as_data_$tty_dim                       external static char(32)                 unaligned dcl 1-57
as_data_$update_priority               external static fixed bin(17,0)          dcl 1-58
as_data_$version                       external static char(8)                  unaligned dcl 1-59
as_data_$whoptr                        external static pointer                  dcl 1-60
as_data_login_words                    based           structure                level 1 dcl 1-77
sc_stat_$Go                            external static bit(1)                   dcl 2-62
sc_stat_$Go_typed                      external static bit(1)                   dcl 2-62
sc_stat_$Multics                       external static bit(1)                   dcl 2-62
sc_stat_$Multics_typed                 external static bit(1)                   dcl 2-62
sc_stat_$Star_typed                    external static bit(1)                   dcl 2-62
sc_stat_$admin_listener_exit_label     external static label variable           dcl 2-34
sc_stat_$admin_listener_switch         external static bit(1)                   dcl 2-62
sc_stat_$admin_log_iocb                external static pointer                  dcl 2-45
sc_stat_$admin_log_write_ptr           external static pointer                  dcl 2-45
sc_stat_$admin_sci_ptr                 external static pointer                  dcl 2-45
sc_stat_$as_log_write_ptr              external static pointer                  dcl 2-45
sc_stat_$exec_access_name              external static char(32)                 unaligned dcl 2-15
sc_stat_$info_dir                      external static char(168)                unaligned dcl 2-21
sc_stat_$initzer_ttyp                  external static pointer                  dcl 2-45
sc_stat_$master_abort_label            external static label variable           dcl 2-34
sc_stat_$master_channel                external static char(6)                  dcl 2-29
sc_stat_$master_iocb                   external static pointer                  dcl 2-45
sc_stat_$master_sci_ptr                external static pointer                  dcl 2-45
sc_stat_$mc_acs_dir                    external static char(168)                unaligned dcl 2-21
sc_stat_$mc_ansp                       external static pointer                  dcl 2-45
sc_stat_$mc_iocb                       external static pointer                  dcl 2-45
sc_stat_$mc_is_on                      external static bit(1)                   dcl 2-62
sc_stat_$no_operator_login             external static bit(1)                   dcl 2-62
sc_stat_$shutdown_typed                external static bit(1)                   dcl 2-62
sc_stat_$sv1_iocb                      external static pointer                  dcl 2-45
sc_stat_$sv2_iocb                      external static pointer                  dcl 2-45
sc_stat_$sv3_iocb                      external static pointer                  dcl 2-45
sc_stat_$system_shutdown_label         external static label variable           dcl 2-34
sc_stat_$unidentified_access_name      external static char(32)                 unaligned dcl 2-15
sc_stat_$vchn_requires_accept          external static bit(1)                   dcl 2-62

NAMES DECLARED BY EXPLICIT CONTEXT.
Abort_subsystem                 000467 constant        entry                    internal dcl 137 ref 73 73
Clean_up                        000500 constant        entry                    internal dcl 143 ref 70 106
Process_arguments               000321 constant        entry                    internal dcl 110 ref 80
RETURN                          000314 constant        label                    dcl 106 ref 77 140
test_system_control             000060 constant        entry                    external dcl 9

NAMES DECLARED BY CONTEXT OR IMPLICATION.
null                                                   builtin function         ref 69 73 73 145
rtrim                                                  builtin function         ref 84

STORAGE REQUIREMENTS FOR THIS PROGRAM.

	Object	Text	Link	Symbol	Defs	Static
Start          0       0      1010        1066     521        1020
Length      1330     521        56         225     267           0

BLOCK NAME	         STACK SIZE     TYPE		WHY NONQUICK/WHO SHARES STACK FRAME
test_system_control                 210 external procedure  is an external procedure.  
on unit on line 70                   64 on unit               
Process_arguments                       internal procedure  shares stack frame of external procedure test_system_control.  
Abort_subsystem                      64 internal procedure  is assigned to an entry variable.  
Clean_up                             68 internal procedure  is called by several nonquick procedures.  

STORAGE FOR AUTOMATIC VARIABLES.

STACK FRAME                 LOC IDENTIFIER                  BLOCK NAME
test_system_control      000100 code                        test_system_control
                         000102 sci_ptr                     test_system_control
                         000104 system_control_dirname      test_system_control
                         000172 argument_lth                Process_arguments
                         000174 argument_ptr                Process_arguments
                         000176 n_arguments                 Process_arguments

THE FOLLOWING EXTERNAL OPERATORS ARE USED BY THIS PROGRAM.
alloc_char_temp     call_ext_out_desc   call_ext_out        call_int_this       call_int_other      return_mac
tra_ext_1           enable_op           shorten_stack       ext_entry           int_entry

THE FOLLOWING EXTERNAL ENTRIES ARE CALLED BY THIS PROGRAM.
absentee_user_manager_$term_aum                             absolute_pathname_            as_who$as_who_init
com_err_                      mrdim_$test_mrd               pnt_manager_$test             ssu_$abort_subsystem
ssu_$arg_count                ssu_$arg_ptr                  ssu_$destroy_invocation       ssu_$standalone_invocation
system_control_

THE FOLLOWING EXTERNAL VARIABLES ARE USED BY THIS PROGRAM.
as_data_$lct_initialized      sc_stat_$did_part1            sc_stat_$did_part2            sc_stat_$did_part3
sc_stat_$log_dir              sc_stat_$sysdir               sc_stat_$test_mode




   LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC   
      9 000057        69 000065        70 000067        73 000111        75 000154        76 000156        77 000202
     80 000203        82 000204        83 000207        84 000213        88 000242        89 000245        90 000246
     94 000247        97 000250        99 000260       102 000271       104 000276       105 000307       106 000314
    108 000320       110 000321       124 000322       125 000333       129 000366       131 000405       132 000431
    134 000465       137 000466       140 000474       143 000477       145 000505       147 000520


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
