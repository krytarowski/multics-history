Compilation listing of file >2.1spec>online>mib083074>bcpl_trans1.bcpl.
Compilation performed for Martinson.SysMaint.a at 01/24/75  0701.2 mst Fri.
Compiled by BCPL version 3.4, August 1973.  Compiler updated at 09/25/73  0959.1 mst Tue.
Options applied:  source  xref  alist  optimize  6180.

     1	//  This routine walks the command nodes of the tree.
     2	//  Last modified on 06/06/74 at 18:26:24 by R F Mabee.
     3	//  Installed with Version 3.4 for 6180 bootstrap by R F Mabee.
     4	//  First installed as Version 2.7 by R F Mabee.
     5	
     6	//  Copyright (c) 1974 by Massachusetts Institute of Technology and Honeywell Information Systems, Inc.
     7	
     8	//  General permission is granted to copy and use this program, but not to sell it, provided that the above
     9	//  copyright statement is given.  Contact Information Processing Services, MIT, for further information.
    10	//  Please contact R F Mabee at MIT for information on this program and versions for other machines.
    11	
    12	get "bcpl_trans_head"
	     1	//  Declarations for the semantic translator.
	     2	//  Last modified on 07/21/73 at 20:36:10 by R F Mabee.
	     3	//  Revised during 6180 bootstrap, and installed as Version 3.4 by R F Mabee.
	     4	//  First installed as Version 2.7 by R F Mabee.
	     5	
	     6	//  Copyright (c) 1973 by the author, Robert F. Mabee.
	     7	//  This file may only be reproduced or modified with explicit written
	     8	//  permission of the author.  Permission is hereby extended to those
	     9	//  persons responsible for operating the Multics system to make such
	    10	//  copies as are normally required to ensure the integrity of the Multics
	    11	//  file system.  Permission is also hereby extended to those persons
	    12	//  responsible for maintaining the Multics program libraries to make such
	    13	//  copies as are normally required for online installations.
	    14	
	    15	get "bcpl_compiler_head"
		     1	//  Declarations common to the entire BCPL compiler.
		     2	//  Last modified on 07/28/73 at 03:56:32 by R F Mabee.
		     3	//  Installed on 6180 as Version 3.4, R F Mabee.
		     4	//  First installed on 645 as Version 2.7 by R F Mabee.
		     5	
		     6	//  Copyright (c) 1973 by the author, Robert F. Mabee.
		     7	//  This file may only be reproduced or modified with explicit written
		     8	//  permission of the author.  Permission is hereby extended to those
		     9	//  persons responsible for operating the Multics system to make such
		    10	//  copies as are normally required to ensure the integrity of the Multics
		    11	//  file system.  Permission is also hereby extended to those persons
		    12	//  responsible for maintaining the Multics program libraries to make such
		    13	//  copies as are normally required for online installations.
		    14	
		    15	external
		    16	     $(	Readch = "bcpl_machine_code_$Readch"		//  Library routines used by the compiler.
		    17		Writech = "bcpl_machine_code_$Writech"
		    18		WriteS = "bcpl_stream_io_$WriteS"
		    19		WriteN = "bcpl_stream_io_$WriteN"
		    20		Format = "bcpl_stream_io_$Format"
		    21		Packstring = "bcpl_machine_code_$Packstring"
		    22		Unpackstring = "bcpl_machine_code_$Unpackstring"
		    23		RemoveEscapes = "bcpl_conversions_$RemoveEscapes"
		    24		EqualString = "bcpl_strings_$EqualString"
		    25		CompareStrings = "bcpl_strings_$CompareStrings"	//  Alphabetic comparison.
		    26		Concatenate = "bcpl_strings_$Concatenate"
		    27		ConvertStoN = "bcpl_conversions_$ConvertStoN"
		    28		ConvertNtoS = "bcpl_conversions_$ConvertNtoS"
		    29		Length = "bcpl_strings_$Length"		//  Number of characters.
		    30		LengthInWords = "bcpl_strings_$LengthInWords"	//  Length of packed string.
		    31		RandomI = "bcpl_arithmetic_$RandomI"
		    32	
		    33		Newvec = "bcpl_utility$Newvec"		//  Utility routines used throughout the compiler.
		    34		Freevec = "bcpl_utility$Freevec"
		    35		List1 = "bcpl_utility$List1"
		    36		List2 = "bcpl_utility$List2"
		    37		List3 = "bcpl_utility$List3"
		    38		List4 = "bcpl_utility$List4"
		    39		List5 = "bcpl_utility$List5"
		    40		List6 = "bcpl_utility$List6"
		    41		StoreString = "bcpl_utility$StoreString"
		    42		PushInput = "bcpl_utility$PushInput"
		    43		PopInput = "bcpl_utility$PopInput"
		    44		MakeTimeString = "bcpl_utility$MakeTimeString"
		    45		Nextparam = "bcpl_utility$Nextparam"
		    46		FormCharconst = "bcpl_utility$FormCharconst"
		    47		FormStringconst = "bcpl_utility$FormStringconst"
		    48	
		    49		CaeReport = "bcpl_report$CaeReport"
		    50		Transreport = "bcpl_report$Transreport"
		    51		CGreport = "bcpl_report$CGreport"
		    52	
		    53		Nextsymb = "bcpl_lex0$Nextsymb"
		    54	
		    55		SymbolName = "bcpl_plist$SymbolName"
		    56		FindPrintName = "bcpl_plist$FindPrintName"
		    57		EnterIntoCrossreference = "bcpl_plist$EnterIntoCrossreference"
		    58	
		    59		GetVersion = "bcpl_version$GetVersion"		//  Routines used only by the driver.
		    60		UtilitiesInit = "bcpl_utility$UtilitiesInit"
		    61		Cleanup = "bcpl_utility$Cleanup"
		    62		GetStream = "bcpl_utility$GetStream"
		    63	
		    64		CAE = "bcpl_cae0$CAE"
		    65		LexInit = "bcpl_lex0$LexInit"
		    66	
		    67		Pname = "bcpl_plist$Pname"
		    68		Plist = "bcpl_plist$Plist"
		    69	
		    70		Trans = "bcpl_trans0$Trans"
		    71		CgInit = "bcpl_cg0$CgInit"
		    72		BuildObject = "bcpl_cg0$BuildObject"
		    73		WriteObjectListing = "bcpl_cg0$WriteObjectListing"
		    74	     $)
		    75	
		    76	global		//  Globals are reserved in blocks as follows:
		    77	     $(	//    0 -  31	system
		    78		//   32 -  99	library
		    79		//  100 - 149	options and other common cells
		    80		//  150 - 159	metering cells
		    81		//  160 - 169	bcpl_utility
		    82		//  170 - 199	to be assigned
		    83		//  200 - 229	lexical phase
		    84		//  230 - 249	syntax analyzer
		    85		//  250 - 299	translator
		    86		//  300 - 399	code generator
		    87	
		    88			//  Cells used for communication with the library.
		    89		OUTPUT		: 32
		    90		INPUT		: 33
		    91		MONITOR		: 34
		    92		Ch		: 36
		    93	
		    94			//  Options for this compilation.
		    95		Listing		: 100
		    96		UpperCase		: 101
		    97		PPrep		: 102
		    98		Crep		: 103
		    99		Symbols		: 104
		   100		LineMap		: 105
		   101		Optimize		: 106
		   102		Machine		: 107
		   103		Xref		: 108
		   104		OcodeSw		: 109
		   105		HaveListingFile	: 110
		   106		QuietSw		: 111
		   107	
		   108			//  Other information about this compilation.
		   109		CompilerVersionString : 120
		   110		CompilerVersionNumber : 121
		   111		CompilerDTMString	: 122
		   112		CompilerDTM	: 123
		   113		TimeNowString	: 124
		   114		TimeNow		: 125
		   115		OptionString	: 126
		   116		FileNames		: 127
		   117		FilesInfo		: 128
		   118		FileCount		: 129
		   119		ProgramName	: 130
		   120		UserID		: 131
		   121	
		   122			//  Working variables needing global scope.
		   123		LineCount		: 140
		   124		Errorsw		: 141
		   125		NAMECHAIN		: 142
		   126		Symb		: 143
		   127		DictionaryEntry	: 144
		   128		Column		: 145
		   129	     $)
		   130	manifest
		   131	     $(	GlobalTemp = 199  $)	//  Number of cell available for local, temporary use.
		   132	
		   133	manifest
		   134	     $(	Left = 18; Right = $8777777
		   135		Endofstreamch = $87777
		   136		Even = $87777777777776
		   137		Vmax = 511
		   138		LineMask = $817777; FileShift = 13	//  Breakdown of line count.
		   139		UnexpectedCase = 99		//  Error code for use throughout compiler.
		   140	     $)
	    16	get "bcpl_symbols"
		     1	//  All symbols used in the interface between any two phases of the compiler are defined here.
		     2	//  This includes all canonical symbols, syntax tree nodes, and XOCODE operators.
		     3	//  Last modified on 07/08/73 at 22:55:31 by R F Mabee.
		     4	//  Revisions installed in Version 3.4 on 6180, R F Mabee.
		     5	//  First installed with Version 2.7 by R F Mabee.
		     6	
		     7	//  Copyright (c) 1973 by the author, Robert F. Mabee.
		     8	//  This file may only be reproduced or modified with explicit written
		     9	//  permission of the author.  Permission is hereby extended to those
		    10	//  persons responsible for operating the Multics system to make such
		    11	//  copies as are normally required to ensure the integrity of the Multics
		    12	//  file system.  Permission is also hereby extended to those persons
		    13	//  responsible for maintaining the Multics program libraries to make such
		    14	//  copies as are normally required for online installations.
		    15	
		    16	manifest
		    17	     $(	AND_S = 1
		    18		ASSIGN_S = 2
		    19		BE_S = 3
		    20		BIT_S = 4
		    21		BREAK_S = 5
		    22		BY_S = 6
		    23		CALL_S = 07
		    24		CASE_S = 08
		    25	
		    26		CHAR_S = 10
		    27		CHARCONST_S = 11
		    28		COLON_S = 12
		    29		COMMA_S = 13
		    30		COND_S = 14
		    31		CONSTANT_S = 15
		    32		CONSTDEF_S = 16
		    33		DEFAULT_S = 17
		    34		DIV_F = 18
		    35	
		    36		DIV_S = 20
		    37		DO_S = 21
		    38		DOUBLE_S = 22
		    39		ENDCASE_S = 23
		    40		ENDPROG_S = 24
		    41		ERROR_S = 25
		    42		EQ_F = 26
		    43		EQ_S = 27
		    44		EQV_S = 28
		    45	
		    46		EXTERNAL_S = 30
		    47		FALSE_S = 31
		    48		FINISH_S = 32
		    49		FIXED_S = 33
		    50		FLOAT_S = 34
		    51		FNAP_S = 35
		    52		FNDEF_S = 36
		    53		FOR_S = 37
		    54		GE_F = 38
		    55	
		    56		GE_S = 40
		    57		GET_S = 41
		    58		GLOBAL_S = 42
		    59		GOTO_S = 43
		    60		GR_F = 44
		    61		GR_S = 45
		    62		IF_S = 46
		    63		IFNOT_S = 47
		    64		IFSO_S = 48
		    65	
		    66		INTO_S = 50
		    67		LABDEF_S = 51
		    68		LABEL_S = 52
		    69		LE_F = 53
		    70		LE_S = 54
		    71		LENGTH_S = 55
		    72		LET_S = 56
		    73		LIST_S = 57
		    74		LOCAL_S = 58
		    75	
		    76		LOGAND_S = 60
		    77		LOGOR_S = 61
		    78		LOOP_S = 62
		    79		LS_F = 63
		    80		LS_S = 64
		    81		LSHIFT_S = 65
		    82		LV_S = 66
		    83		LVECAP_S = 67
		    84		LV_ARG_OUT = 68
		    85	
		    86		LV_FNAP_RESULT = 70
		    87		LV_GLOBAL = 71
		    88		LV_LOCAL = 72
		    89		LV_STATIC = 73
		    90		LV_TEMP = 74
		    91		MAIN_S = 75
		    92		MANIFEST_S = 76
		    93		MINUS_F = 77
		    94		MINUS_S = 78
		    95	
		    96		MULT_F = 80
		    97		MULT_S = 81
		    98		NAME_S = 82
		    99		NEG_F = 83
		   100		NEG_S = 84
		   101		NEQV_S = 85
		   102		NE_F = 86
		   103		NE_S = 87
		   104		NIL_S = 88
		   105	
		   106		NOT_S = 90
		   107		NUMBER_S = 91
		   108		OFFSET_S = 92
		   109		OR_S = 93
		   110		PLUS_F = 94
		   111		PLUS_S = 95
		   112		POINTER_S = 96
		   113		POS_F = 97
		   114		POS_S = 98
		   115	
		   116		RBRA_S = 100
		   117		REGISTER_S = 101
		   118		REL_S = 102
		   119		REM_S = 103
		   120		REP_S = 104
		   121		REPEAT_S = 105
		   122		REPEATUNTIL_S = 106
		   123		REPEATWHILE_S = 107
		   124		RESULTIS_S = 108
		   125	
		   126		RETURN_S = 110
		   127		RKET_S = 111
		   128		RSHIFT_S = 112
		   129		RTAP_S = 113
		   130		RTDEF_S = 114
		   131		RV_S = 115
		   132		SBRA_S = 116
		   133		SECTBEGIN_S = 117
		   134		SECTBRA_S = 118
		   135	
		   136		SECTEND_S = 120
		   137		SECTKET_S = 121
		   138		SEMICOLON_S = 122
		   139		SKET_S = 123
		   140		STATIC_S = 124
		   141		STRING_S = 125
		   142		STRINGCONST_S = 126
		   143		STRUCTURE_S = 127
		   144		SWITCHON_S = 128
		   145	
		   146		TABLE_S = 130
		   147		TEMP_S = 131
		   148		TEST_S = 132
		   149		TO_S = 133
		   150		TRUE_S = 134
		   151		TYPE_S = 135
		   152		UNLESS_S = 136
		   153		UNTIL_S = 137
		   154		VALDEF_S = 138
		   155	
		   156		VALOF_S = 140
		   157		VEC_S = 141
		   158		VECAP_S = 142
		   159		WHILE_S = 143
		   160	     $)
	    17	get "bcpl_trans_codes"
		     1	//  Report codes for the translator phase.
		     2	//  Last modified on 07/21/73 at 22:14:49 by R F Mabee.
		     3	//  Revisions for 6180 bootstrap installed with Version 3.4, R F Mabee.
		     4	//  First installed in Version 2.7 by R F Mabee.
		     5	
		     6	//  Copyright (c) 1973 by the author, Robert F. Mabee.
		     7	//  This file may only be reproduced or modified with explicit written
		     8	//  permission of the author.  Permission is hereby extended to those
		     9	//  persons responsible for operating the Multics system to make such
		    10	//  copies as are normally required to ensure the integrity of the Multics
		    11	//  file system.  Permission is also hereby extended to those persons
		    12	//  responsible for maintaining the Multics program libraries to make such
		    13	//  copies as are normally required for online installations.
		    14	
		    15	manifest		//  200 - 299 are reserved for Trans.
		    16	     $(	BadCall		= 200
		    17		BadDescriptors	= 201
		    18		BadLink		= 202
		    19		Conformality	= 203
		    20		DupDefault	= 204
		    21		DupName		= 205
		    22		FreeVar		= 206
		    23		LmodeRequired	= 207
		    24		NegVector		= 208
		    25	
		    26		NoLoop		= 210
		    27		NoSwitch		= 211
		    28		NotConstant	= 212
		    29		NotInsideRtdef	= 213
		    30		NotName		= 214
		    31		NoValof		= 215
		    32		UndefName		= 216
		    33		UnrecognizedExpression= 217
		    34	     $)
	    18	
	    19	external
	    20	     $(	Transbody = "bcpl_trans1$Transbody"		//  The routines of Trans.
	    21	
	    22		Transdef = "bcpl_trans2$Transdef"
	    23		Addlocal = "bcpl_trans2$Addlocal"
	    24		Declitem = "bcpl_trans2$Declitem"
	    25		Declnames = "bcpl_trans2$Declnames"
	    26		Decllabels = "bcpl_trans2$Decllabels"
	    27		Checkdistinct = "bcpl_trans2$Checkdistinct"
	    28		Cellwithname = "bcpl_trans2$Cellwithname"
	    29		Removenames = "bcpl_trans2$Removenames"
	    30	
	    31		TransConditional = "bcpl_trans3$TransConditional"
	    32		TransFor = "bcpl_trans3$TransFor"
	    33		WalkList = "bcpl_trans3$WalkList"
	    34		ListSize = "bcpl_trans3$ListSize"
	    35		Assignlist = "bcpl_trans3$Assignlist"
	    36		Target = "bcpl_trans3$Target"
	    37		TransLoop = "bcpl_trans3$TransLoop"
	    38	
	    39		CompileExpression = "bcpl_trans4$CompileExpression"
	    40		CompileOperand = "bcpl_trans4$CompileOperand"
	    41		SetResult = "bcpl_trans4$SetResult"
	    42	
	    43		Evalconst = "bcpl_trans5$Evalconst"
	    44		PartialEvalconst = "bcpl_trans5$PartialEvalconst"
	    45		IsConst = "bcpl_trans5$IsConst"
	    46		EvaluateOperator = "bcpl_trans5$EvaluateOperator"
	    47		CountTemporaries = "bcpl_trans5$CountTemporaries"
	    48		IsRelational = "bcpl_trans5$IsRelational"
	    49	
	    50		ResetSSP = "bcpl_trans6$ResetSSP"
	    51		AllocateLocal = "bcpl_trans6$AllocateLocal"
	    52		DeallocateLocal = "bcpl_trans6$DeallocateLocal"
	    53		MakeTemp = "bcpl_trans6$MakeTemp"
	    54		MakeCopy = "bcpl_trans6$MakeCopy"
	    55		PutBackTemps = "bcpl_trans6$PutBackTemps"
	    56		TransFnap = "bcpl_trans6$TransFnap"
	    57		TransSystemCall = "bcpl_trans6$TransSystemCall"
	    58	
	    59		GenerateLabel = "bcpl_cg_interface$GenerateLabel"
	    60		GenerateJump = "bcpl_cg_interface$GenerateJump"
	    61		GenerateRtdefBegin = "bcpl_cg_interface$GenerateRtdefBegin"
	    62		GenerateRtdefEnd = "bcpl_cg_interface$GenerateRtdefEnd"
	    63		ReserveArglist = "bcpl_cg_interface$ReserveArglist"
	    64		GenerateArg = "bcpl_cg_interface$GenerateArg"
	    65		GenerateFnap = "bcpl_cg_interface$GenerateFnap"
	    66		ReserveSystemArglist = "bcpl_cg_interface$ReserveSystemArglist"
	    67		GenerateSystemArg = "bcpl_cg_interface$GenerateSystemArg"
	    68		GenerateSystemCall = "bcpl_cg_interface$GenerateSystemCall"
	    69		GenerateResultBlock = "bcpl_cg_interface$GenerateResultBlock"
	    70		GenerateResultValue = "bcpl_cg_interface$GenerateResultValue"
	    71		GenerateClaimResult = "bcpl_cg_interface$GenerateClaimResult"
	    72		GenerateGoto = "bcpl_cg_interface$GenerateGoto"
	    73		GenerateFinish = "bcpl_cg_interface$GenerateFinish"
	    74		GenerateSwitch = "bcpl_cg_interface$GenerateSwitch"
	    75		GenerateMonadicOperator = "bcpl_cg_interface$GenerateMonadicOperator"
	    76		GenerateDiadicOperator = "bcpl_cg_interface$GenerateDiadicOperator"
	    77		GenerateOffsetOperator = "bcpl_cg_interface$GenerateOffsetOperator"
	    78		GenerateMonadicConditional = "bcpl_cg_interface$GenerateMonadicConditional"
	    79		GenerateDiadicConditional = "bcpl_cg_interface$GenerateDiadicConditional"
	    80		GenerateSSP = "bcpl_cg_interface$GenerateSSP"
	    81		GenerateLineNumber = "bcpl_cg_interface$GenerateLineNumber"
	    82		StoreAll = "bcpl_cg_interface$StoreAll"
	    83		CgFinish = "bcpl_cg_interface$CgFinish"
	    84	     $)
	    85	global		//  250 - 299 are reserved for Trans.
	    86	     $(	ArgInfo		: 250
	    87		BreakLabel	: 251
	    88		CaseFirst	: 252
	    89		CaseList		: 253
	    90		DefaultLabel	: 254
	    91		DefList		: 255
	    92		DvecC		: 246
	    93		DvecP		: 257
	    94		EndcaseLabel	: 258
	    95	
	    96		EnvBase		: 260
	    97		FreeLocalList	: 261
	    98		InsideRtdef	: 262
	    99		LHSpointer	: 263
	   100		LoopFlag		: 264
	   101		LoopLabel		: 265
	   102		PendingTemps	: 266
	   103		ReturnLabel	: 267
	   104		RtdefList		: 268
	   105	
	   106		RtdefNesting	: 270
	   107		SSP		: 271
	   108		StaticAllocationCounter : 272
	   109		StaticFirst	: 273
	   110		StaticList	: 274
	   111		SwitchFlag	: 275
	   112		TableCell		: 276
	   113		ValofFlag		: 277
	   114		ValofLabel	: 278
	   115	     $)
	   116	manifest
	   117	     $(	DescSize = 2
	   118		DvecSize = 4
	   119	     $)
    13	
    14	let Transbody (x) be
    15	     $(
    16	  Top:	if x = 0 return
    17		let Op = x!0
    18		     $(	let NewLine = Op rshift Left
    19			if NewLine ne LineCount & (NewLine rshift FileShift) = 0 do GenerateLineNumber (NewLine)
    20			LineCount := NewLine
    21		     $)
    22		Op := Op & Right
    23		let a, b = x!1, x!2
    24		let s, p = nil, nil
    25		switchon Op into
    26		     $(	default:	CGreport (UnexpectedCase, Op, "Transbody")
    27				return
    28	
    29			case LET_S:
    30				s, p := SSP, DvecP
    31				Declnames (a)
    32				Checkdistinct ()
    33				Transdef (a)
    34				Transbody (b)
    35				Removenames (p)
    36				ResetSSP (s)
    37				return
    38	
    39			case MANIFEST_S:
    40			case EXTERNAL_S:
    41			case STATIC_S:
    42			case GLOBAL_S:
    43				p := DvecP
    44				until a = 0 do
    45				     $(	Declitem (Op, a!1, a!2)
    46					a := a!3
    47				     $)
    48				Checkdistinct ()
    49				Transbody (b)
    50				Removenames (p)
    51				return
    52	
    53			case LABDEF_S:
    54				p := DvecP
    55				Decllabels (b)
    56				Checkdistinct ()
    57				Transbody (a)
    58				Removenames (p)
    59				return
    60	
    61			case ASSIGN_S:
    62				Assignlist (a, b)
    63				return
    64	
    65			case SEMICOLON_S:
    66				Transbody (a)
    67				x := b			//  Same as "Transbody (b); return" but saves stack space.
    68				goto Top
    69	
    70			case RTAP_S:
    71				TransFnap (0, a, b)
    72				return
    73	
    74			case CALL_S:
    75				TransSystemCall (a)
    76				return
    77	
    78			case GOTO_S:
    79				p := Target (x)
    80				test p ne 0
    81				then GenerateJump (p)		//  Optimize common hop.
    82				or   $(	let PT, Desc = PendingTemps, vec DescSize
    83					CompileOperand (a, Desc)
    84					GenerateGoto (Desc)
    85					PutBackTemps (PT)
    86				     $)
    87				return
    88	
    89			case COLON_S:
    90				GenerateLabel (x!4)
    91				Transbody (b)
    92				return
    93	
    94			case FINISH_S:
    95				GenerateFinish ()
    96				return
    97	
    98			case LOOP_S:
    99			case BREAK_S:
   100			case RETURN_S:
   101			case ENDCASE_S:
   102				GenerateJump (Target (x))
   103				return
   104	
   105			case RESULTIS_S:
   106				test ValofFlag
   107				then $(	p := PendingTemps
   108					SetResult (a)
   109					GenerateJump (ValofLabel)
   110					PutBackTemps (p)
   111				     $)
   112				or Transreport (NoValof, x)
   113				return
   114	
   115			case IF_S:
   116			case UNLESS_S: $(	let Sense = (Op = IF_S)
   117					if Optimize do
   118					     $(	if IsConst (a) do
   119						     $(	if Evalconst (a) eqv Sense do Transbody (b)
   120							return
   121						     $)
   122						let M = Target (b)
   123						if M ne 0 do	//  b is a loop, break, return, or goto command.
   124						     $(	TransConditional (a, Sense, M)
   125							return
   126						     $)
   127					     $)
   128					let L = Nextparam ()
   129					TransConditional (a, not Sense, L)
   130					Transbody (b)
   131					GenerateLabel (L)
   132					return
   133				     $)
   134	
   135			case TEST_S:   $(	let c = x!3
   136					if Optimize then if IsConst (a) do
   137					     $(	Transbody (Evalconst (a) -> b, c)
   138						return
   139					     $)
   140					let L, M = Nextparam (), Nextparam ()
   141					TransConditional (a, false, L)
   142					Transbody (b)
   143					GenerateJump (M)
   144					GenerateLabel (L)
   145					Transbody (c)
   146					GenerateLabel (M)
   147					return
   148				     $)
   149	
   150			case WHILE_S:
   151			case UNTIL_S:
   152				TransLoop (b, a, Op = WHILE_S, Nextparam ())
   153				return
   154	
   155			case REPEAT_S:
   156				TransLoop (a, 0, 0, 0)
   157				return
   158	
   159			case REPEATWHILE_S:
   160			case REPEATUNTIL_S:
   161				TransLoop (a, b, Op = REPEATWHILE_S, 0)
   162				return
   163	
   164			case FOR_S:
   165				TransFor (x)
   166				return
   167	
   168			case SWITCHON_S:
   169				     $(	s := SSP
   170					let El, Dl = EndcaseLabel, DefaultLabel
   171					let Cf, Cl, Sf = CaseFirst, CaseList, SwitchFlag
   172					EndcaseLabel, DefaultLabel := Nextparam (), 0
   173					CaseFirst, CaseList, SwitchFlag := 0, 0, true
   174	
   175					let Begin = Nextparam ()
   176					GenerateJump (Begin)
   177					Transbody (x!2)
   178					GenerateJump (EndcaseLabel)
   179	
   180					GenerateLabel (Begin)
   181					let PT, Val = PendingTemps, vec DescSize
   182					CompileOperand (x!1, Val)
   183					GenerateSwitch (Val, CaseFirst, DefaultLabel, EndcaseLabel)
   184					PutBackTemps (PT)
   185					GenerateLabel (EndcaseLabel)
   186	
   187					EndcaseLabel, DefaultLabel := El, Dl
   188					CaseFirst, CaseList, SwitchFlag := Cf, Cl, Sf
   189					ResetSSP (s)
   190					return
   191				     $)
   192	
   193			case CASE_S:
   194				p := Nextparam ()
   195				GenerateLabel (p)
   196				unless SwitchFlag do Transreport (NoSwitch, x)
   197				     $(	let t = Newvec (5)
   198					t!0, t!1 := 0, p
   199					PartialEvalconst (x!1, lv t!2)
   200					test x!2 = 0
   201					then t!4, t!5 := t!2, t!3		//  Limit same as first value.
   202					or PartialEvalconst (x!2, lv t!4)
   203					test CaseList = 0
   204					then CaseFirst := t
   205					or CaseList!0 := t
   206					CaseList := t
   207					x := x!3
   208					if x = 0 break
   209				     $)	repeatwhile (x!0 & Right) = CASE_S	//  This is to economize on labels.
   210				Transbody (x)
   211				return
   212	
   213			case DEFAULT_S:
   214				test SwitchFlag
   215				then $(	unless DefaultLabel = 0 do Transreport (DupDefault, x)
   216					DefaultLabel := Nextparam ()
   217					GenerateLabel (DefaultLabel)
   218				     $)
   219				or Transreport (NoSwitch, x)
   220				Transbody (a)
   221				return
   222		     $)
   223	     $)



CAE time 5.2, 129 source lines per second.
cross reference table

a			bcpl_trans1:  23, 31, 33, 44, 45, 45, 46, 46, 57, 62, 66, 71, 75, 83, 108, 118, 119, 124, 
			129, 136, 137, 141, 152, 156, 161, 220

Addlocal			bcpl_trans_head:  23

AllocateLocal		bcpl_trans_head:  51

AND_S			bcpl_symbols:  17

ArgInfo			bcpl_trans_head:  86

Assignlist		bcpl_trans_head:  35, bcpl_trans1:  62

ASSIGN_S			bcpl_symbols:  18, bcpl_trans1:  61

b			bcpl_trans1:  23, 34, 49, 55, 62, 67, 71, 91, 119, 122, 130, 137, 142, 152, 161

BadCall			bcpl_trans_codes:  16

BadDescriptors		bcpl_trans_codes:  17

BadLink			bcpl_trans_codes:  18

Begin			bcpl_trans1:  175, 176, 180

BE_S			bcpl_symbols:  19

BIT_S			bcpl_symbols:  20

BreakLabel		bcpl_trans_head:  87

BREAK_S			bcpl_symbols:  21, bcpl_trans1:  99

BuildObject		bcpl_compiler_head:  72

BY_S			bcpl_symbols:  22

c			bcpl_trans1:  135, 137, 145

CAE			bcpl_compiler_head:  64

CaeReport			bcpl_compiler_head:  49

CALL_S			bcpl_symbols:  23, bcpl_trans1:  74

CaseFirst			bcpl_trans_head:  88, bcpl_trans1:  171, 173, 183, 188, 204

CaseList			bcpl_trans_head:  89, bcpl_trans1:  171, 173, 188, 203, 205, 206

CASE_S			bcpl_symbols:  24, bcpl_trans1:  193, 209

Cellwithname		bcpl_trans_head:  28

Cf			bcpl_trans1:  171, 188

CgFinish			bcpl_trans_head:  83

CgInit			bcpl_compiler_head:  71

CGreport			bcpl_compiler_head:  51, bcpl_trans1:  26

Ch			bcpl_compiler_head:  92

CHARCONST_S		bcpl_symbols:  27

CHAR_S			bcpl_symbols:  26

Checkdistinct		bcpl_trans_head:  27, bcpl_trans1:  32, 48, 56

Cl			bcpl_trans1:  171, 188

Cleanup			bcpl_compiler_head:  61

COLON_S			bcpl_symbols:  28, bcpl_trans1:  89

Column			bcpl_compiler_head:  128

COMMA_S			bcpl_symbols:  29

CompareStrings		bcpl_compiler_head:  25

CompileExpression		bcpl_trans_head:  39

CompileOperand		bcpl_trans_head:  40, bcpl_trans1:  83, 182

CompilerDTM		bcpl_compiler_head:  112

CompilerDTMString		bcpl_compiler_head:  111

CompilerVersionNumber	bcpl_compiler_head:  110

CompilerVersionString	bcpl_compiler_head:  109

Concatenate		bcpl_compiler_head:  26

COND_S			bcpl_symbols:  30

Conformality		bcpl_trans_codes:  19

CONSTANT_S		bcpl_symbols:  31

CONSTDEF_S		bcpl_symbols:  32

ConvertNtoS		bcpl_compiler_head:  28

ConvertStoN		bcpl_compiler_head:  27

CountTemporaries		bcpl_trans_head:  47

Crep			bcpl_compiler_head:  98

DeallocateLocal		bcpl_trans_head:  52

Declitem			bcpl_trans_head:  24, bcpl_trans1:  45

Decllabels		bcpl_trans_head:  26, bcpl_trans1:  55

Declnames			bcpl_trans_head:  25, bcpl_trans1:  31

DefaultLabel		bcpl_trans_head:  90, bcpl_trans1:  170, 172, 183, 187, 215, 216, 217

DEFAULT_S			bcpl_symbols:  33, bcpl_trans1:  213

DefList			bcpl_trans_head:  91

Desc			bcpl_trans1:  82, 83, 84

DescSize			bcpl_trans_head:  117, bcpl_trans1:  82, 181

DictionaryEntry		bcpl_compiler_head:  127

DIV_F			bcpl_symbols:  34

DIV_S			bcpl_symbols:  36

Dl			bcpl_trans1:  170, 187

DOUBLE_S			bcpl_symbols:  38

DO_S			bcpl_symbols:  37

DupDefault		bcpl_trans_codes:  20, bcpl_trans1:  215

DupName			bcpl_trans_codes:  21

DvecC			bcpl_trans_head:  92

DvecP			bcpl_trans_head:  93, bcpl_trans1:  30, 43, 54

DvecSize			bcpl_trans_head:  118

El			bcpl_trans1:  170, 187

EndcaseLabel		bcpl_trans_head:  94, bcpl_trans1:  170, 172, 178, 183, 185, 187

ENDCASE_S			bcpl_symbols:  39, bcpl_trans1:  101

Endofstreamch		bcpl_compiler_head:  135

ENDPROG_S			bcpl_symbols:  40

EnterIntoCrossreference	bcpl_compiler_head:  57

EnvBase			bcpl_trans_head:  96

EqualString		bcpl_compiler_head:  24

EQV_S			bcpl_symbols:  44

EQ_F			bcpl_symbols:  42

EQ_S			bcpl_symbols:  43

Errorsw			bcpl_compiler_head:  124

ERROR_S			bcpl_symbols:  41

Evalconst			bcpl_trans_head:  43, bcpl_trans1:  119, 137

EvaluateOperator		bcpl_trans_head:  46

Even			bcpl_compiler_head:  136

EXTERNAL_S		bcpl_symbols:  46, bcpl_trans1:  40

FALSE_S			bcpl_symbols:  47

FileCount			bcpl_compiler_head:  118

FileNames			bcpl_compiler_head:  116

FileShift			bcpl_compiler_head:  138, bcpl_trans1:  19

FilesInfo			bcpl_compiler_head:  117

FindPrintName		bcpl_compiler_head:  56

FINISH_S			bcpl_symbols:  48, bcpl_trans1:  94

FIXED_S			bcpl_symbols:  49

FLOAT_S			bcpl_symbols:  50

FNAP_S			bcpl_symbols:  51

FNDEF_S			bcpl_symbols:  52

Format			bcpl_compiler_head:  20

FormCharconst		bcpl_compiler_head:  46

FormStringconst		bcpl_compiler_head:  47

FOR_S			bcpl_symbols:  53, bcpl_trans1:  164

FreeLocalList		bcpl_trans_head:  97

FreeVar			bcpl_trans_codes:  22

Freevec			bcpl_compiler_head:  34

GenerateArg		bcpl_trans_head:  64

GenerateClaimResult		bcpl_trans_head:  71

GenerateDiadicConditional	bcpl_trans_head:  79

GenerateDiadicOperator	bcpl_trans_head:  76

GenerateFinish		bcpl_trans_head:  73, bcpl_trans1:  95

GenerateFnap		bcpl_trans_head:  65

GenerateGoto		bcpl_trans_head:  72, bcpl_trans1:  84

GenerateJump		bcpl_trans_head:  60, bcpl_trans1:  81, 102, 109, 143, 176, 178

GenerateLabel		bcpl_trans_head:  59, bcpl_trans1:  90, 131, 144, 146, 180, 185, 195, 217

GenerateLineNumber		bcpl_trans_head:  81, bcpl_trans1:  19

GenerateMonadicConditional	bcpl_trans_head:  78

GenerateMonadicOperator	bcpl_trans_head:  75

GenerateOffsetOperator	bcpl_trans_head:  77

GenerateResultBlock		bcpl_trans_head:  69

GenerateResultValue		bcpl_trans_head:  70

GenerateRtdefBegin		bcpl_trans_head:  61

GenerateRtdefEnd		bcpl_trans_head:  62

GenerateSSP		bcpl_trans_head:  80

GenerateSwitch		bcpl_trans_head:  74, bcpl_trans1:  183

GenerateSystemArg		bcpl_trans_head:  67

GenerateSystemCall		bcpl_trans_head:  68

GetStream			bcpl_compiler_head:  62

GetVersion		bcpl_compiler_head:  59

GET_S			bcpl_symbols:  57

GE_F			bcpl_symbols:  54

GE_S			bcpl_symbols:  56

GlobalTemp		bcpl_compiler_head:  131

GLOBAL_S			bcpl_symbols:  58, bcpl_trans1:  42

GOTO_S			bcpl_symbols:  59, bcpl_trans1:  78

GR_F			bcpl_symbols:  60

GR_S			bcpl_symbols:  61

HaveListingFile		bcpl_compiler_head:  105

IFNOT_S			bcpl_symbols:  63

IFSO_S			bcpl_symbols:  64

IF_S			bcpl_symbols:  62, bcpl_trans1:  115, 116

INPUT			bcpl_compiler_head:  90

InsideRtdef		bcpl_trans_head:  98

INTO_S			bcpl_symbols:  66

IsConst			bcpl_trans_head:  45, bcpl_trans1:  118, 136

IsRelational		bcpl_trans_head:  48

L			bcpl_trans1:  128, 129, 131, 140, 141, 144

LABDEF_S			bcpl_symbols:  67, bcpl_trans1:  53

LABEL_S			bcpl_symbols:  68

Left			bcpl_compiler_head:  134, bcpl_trans1:  18

Length			bcpl_compiler_head:  29

LengthInWords		bcpl_compiler_head:  30

LENGTH_S			bcpl_symbols:  71

LET_S			bcpl_symbols:  72, bcpl_trans1:  29

LexInit			bcpl_compiler_head:  65

LE_F			bcpl_symbols:  69

LE_S			bcpl_symbols:  70

LHSpointer		bcpl_trans_head:  99

LineCount			bcpl_compiler_head:  123, bcpl_trans1:  19, 20

LineMap			bcpl_compiler_head:  100

LineMask			bcpl_compiler_head:  138

List1			bcpl_compiler_head:  35

List2			bcpl_compiler_head:  36

List3			bcpl_compiler_head:  37

List4			bcpl_compiler_head:  38

List5			bcpl_compiler_head:  39

List6			bcpl_compiler_head:  40

Listing			bcpl_compiler_head:  95

ListSize			bcpl_trans_head:  34

LIST_S			bcpl_symbols:  73

LmodeRequired		bcpl_trans_codes:  23

LOCAL_S			bcpl_symbols:  74

LOGAND_S			bcpl_symbols:  76

LOGOR_S			bcpl_symbols:  77

LoopFlag			bcpl_trans_head:  100

LoopLabel			bcpl_trans_head:  101

LOOP_S			bcpl_symbols:  78, bcpl_trans1:  98

LSHIFT_S			bcpl_symbols:  81

LS_F			bcpl_symbols:  79

LS_S			bcpl_symbols:  80

LVECAP_S			bcpl_symbols:  83

LV_ARG_OUT		bcpl_symbols:  84

LV_FNAP_RESULT		bcpl_symbols:  86

LV_GLOBAL			bcpl_symbols:  87

LV_LOCAL			bcpl_symbols:  88

LV_S			bcpl_symbols:  82

LV_STATIC			bcpl_symbols:  89

LV_TEMP			bcpl_symbols:  90

M			bcpl_trans1:  122, 123, 124, 140, 143, 146

Machine			bcpl_compiler_head:  102

MAIN_S			bcpl_symbols:  91

MakeCopy			bcpl_trans_head:  54

MakeTemp			bcpl_trans_head:  53

MakeTimeString		bcpl_compiler_head:  44

MANIFEST_S		bcpl_symbols:  92, bcpl_trans1:  39

MINUS_F			bcpl_symbols:  93

MINUS_S			bcpl_symbols:  94

MONITOR			bcpl_compiler_head:  91

MULT_F			bcpl_symbols:  96

MULT_S			bcpl_symbols:  97

NAMECHAIN			bcpl_compiler_head:  125

NAME_S			bcpl_symbols:  98

NegVector			bcpl_trans_codes:  24

NEG_F			bcpl_symbols:  99

NEG_S			bcpl_symbols:  100

NEQV_S			bcpl_symbols:  101

NewLine			bcpl_trans1:  18, 19, 19, 19, 20

Newvec			bcpl_compiler_head:  33, bcpl_trans1:  197

Nextparam			bcpl_compiler_head:  45, bcpl_trans1:  128, 140, 140, 152, 172, 175, 194, 216

Nextsymb			bcpl_compiler_head:  53

NE_F			bcpl_symbols:  102

NE_S			bcpl_symbols:  103

NIL_S			bcpl_symbols:  104

NoLoop			bcpl_trans_codes:  26

NoSwitch			bcpl_trans_codes:  27, bcpl_trans1:  196, 219

NotConstant		bcpl_trans_codes:  28

NotInsideRtdef		bcpl_trans_codes:  29

NotName			bcpl_trans_codes:  30

NOT_S			bcpl_symbols:  106

NoValof			bcpl_trans_codes:  31, bcpl_trans1:  112

NUMBER_S			bcpl_symbols:  107

OcodeSw			bcpl_compiler_head:  104

OFFSET_S			bcpl_symbols:  108

Op			bcpl_trans1:  17, 18, 22, 22, 25, 26, 45, 116, 152, 161

Optimize			bcpl_compiler_head:  101, bcpl_trans1:  117, 136

OptionString		bcpl_compiler_head:  115

OR_S			bcpl_symbols:  109

OUTPUT			bcpl_compiler_head:  89

p			bcpl_trans1:  24, 30, 35, 43, 50, 54, 58, 79, 80, 81, 107, 110, 194, 195, 198

Packstring		bcpl_compiler_head:  21

PartialEvalconst		bcpl_trans_head:  44, bcpl_trans1:  199, 202

PendingTemps		bcpl_trans_head:  102, bcpl_trans1:  82, 107, 181

Plist			bcpl_compiler_head:  68

PLUS_F			bcpl_symbols:  110

PLUS_S			bcpl_symbols:  111

Pname			bcpl_compiler_head:  67

POINTER_S			bcpl_symbols:  112

PopInput			bcpl_compiler_head:  43

POS_F			bcpl_symbols:  113

POS_S			bcpl_symbols:  114

PPrep			bcpl_compiler_head:  97

ProgramName		bcpl_compiler_head:  119

PT			bcpl_trans1:  82, 85, 181, 184

PushInput			bcpl_compiler_head:  42

PutBackTemps		bcpl_trans_head:  55, bcpl_trans1:  85, 110, 184

QuietSw			bcpl_compiler_head:  106

RandomI			bcpl_compiler_head:  31

RBRA_S			bcpl_symbols:  116

Readch			bcpl_compiler_head:  16

REGISTER_S		bcpl_symbols:  117

REL_S			bcpl_symbols:  118

RemoveEscapes		bcpl_compiler_head:  23

Removenames		bcpl_trans_head:  29, bcpl_trans1:  35, 50, 58

REM_S			bcpl_symbols:  119

REPEATUNTIL_S		bcpl_symbols:  122, bcpl_trans1:  160

REPEATWHILE_S		bcpl_symbols:  123, bcpl_trans1:  159, 161

REPEAT_S			bcpl_symbols:  121, bcpl_trans1:  155

REP_S			bcpl_symbols:  120

ReserveArglist		bcpl_trans_head:  63

ReserveSystemArglist	bcpl_trans_head:  66

ResetSSP			bcpl_trans_head:  50, bcpl_trans1:  36, 189

RESULTIS_S		bcpl_symbols:  124, bcpl_trans1:  105

ReturnLabel		bcpl_trans_head:  103

RETURN_S			bcpl_symbols:  126, bcpl_trans1:  100

Right			bcpl_compiler_head:  134, bcpl_trans1:  22, 209

RKET_S			bcpl_symbols:  127

RSHIFT_S			bcpl_symbols:  128

RTAP_S			bcpl_symbols:  129, bcpl_trans1:  70

RtdefList			bcpl_trans_head:  104

RtdefNesting		bcpl_trans_head:  106

RTDEF_S			bcpl_symbols:  130

RV_S			bcpl_symbols:  131

s			bcpl_trans1:  24, 30, 36, 169, 189

SBRA_S			bcpl_symbols:  132

SECTBEGIN_S		bcpl_symbols:  133

SECTBRA_S			bcpl_symbols:  134

SECTEND_S			bcpl_symbols:  136

SECTKET_S			bcpl_symbols:  137

SEMICOLON_S		bcpl_symbols:  138, bcpl_trans1:  65

Sense			bcpl_trans1:  116, 119, 124, 129

SetResult			bcpl_trans_head:  41, bcpl_trans1:  108

Sf			bcpl_trans1:  171, 188

SKET_S			bcpl_symbols:  139

SSP			bcpl_trans_head:  107, bcpl_trans1:  30, 169

StaticAllocationCounter	bcpl_trans_head:  108

StaticFirst		bcpl_trans_head:  109

StaticList		bcpl_trans_head:  110

STATIC_S			bcpl_symbols:  140, bcpl_trans1:  41

StoreAll			bcpl_trans_head:  82

StoreString		bcpl_compiler_head:  41

STRINGCONST_S		bcpl_symbols:  142

STRING_S			bcpl_symbols:  141

STRUCTURE_S		bcpl_symbols:  143

SwitchFlag		bcpl_trans_head:  111, bcpl_trans1:  171, 173, 188, 196, 214

SWITCHON_S		bcpl_symbols:  144, bcpl_trans1:  168

Symb			bcpl_compiler_head:  126

SymbolName		bcpl_compiler_head:  55

Symbols			bcpl_compiler_head:  99

t			bcpl_trans1:  197, 198, 198, 199, 201, 201, 201, 201, 202, 204, 205, 206

TableCell			bcpl_trans_head:  112

TABLE_S			bcpl_symbols:  146

Target			bcpl_trans_head:  36, bcpl_trans1:  79, 102, 122

TEMP_S			bcpl_symbols:  147

TEST_S			bcpl_symbols:  148, bcpl_trans1:  135

TimeNow			bcpl_compiler_head:  114

TimeNowString		bcpl_compiler_head:  113

Top			bcpl_trans1:  16, 68

TO_S			bcpl_symbols:  149

Trans			bcpl_compiler_head:  70

Transbody			bcpl_trans_head:  20, bcpl_trans1:  14, 34, 49, 57, 66, 91, 119, 130, 137, 142, 145, 177, 
			210, 220

TransConditional		bcpl_trans_head:  31, bcpl_trans1:  124, 129, 141

Transdef			bcpl_trans_head:  22, bcpl_trans1:  33

TransFnap			bcpl_trans_head:  56, bcpl_trans1:  71

TransFor			bcpl_trans_head:  32, bcpl_trans1:  165

TransLoop			bcpl_trans_head:  37, bcpl_trans1:  152, 156, 161

Transreport		bcpl_compiler_head:  50, bcpl_trans1:  112, 196, 215, 219

TransSystemCall		bcpl_trans_head:  57, bcpl_trans1:  75

TRUE_S			bcpl_symbols:  150

TYPE_S			bcpl_symbols:  151

UndefName			bcpl_trans_codes:  32

UnexpectedCase		bcpl_compiler_head:  139, bcpl_trans1:  26

UNLESS_S			bcpl_symbols:  152, bcpl_trans1:  116

Unpackstring		bcpl_compiler_head:  22

UnrecognizedExpression	bcpl_trans_codes:  33

UNTIL_S			bcpl_symbols:  153, bcpl_trans1:  151

UpperCase			bcpl_compiler_head:  96

UserID			bcpl_compiler_head:  120

UtilitiesInit		bcpl_compiler_head:  60

Val			bcpl_trans1:  181, 182, 183

VALDEF_S			bcpl_symbols:  154

ValofFlag			bcpl_trans_head:  113, bcpl_trans1:  106

ValofLabel		bcpl_trans_head:  114, bcpl_trans1:  109

VALOF_S			bcpl_symbols:  156

VECAP_S			bcpl_symbols:  158

VEC_S			bcpl_symbols:  157

Vmax			bcpl_compiler_head:  137

WalkList			bcpl_trans_head:  33

WHILE_S			bcpl_symbols:  159, bcpl_trans1:  150, 152

Writech			bcpl_compiler_head:  17

WriteN			bcpl_compiler_head:  19

WriteObjectListing		bcpl_compiler_head:  73

WriteS			bcpl_compiler_head:  18

x			bcpl_trans1:  14, 16, 17, 23, 23, 67, 79, 90, 102, 112, 135, 165, 177, 182, 196, 199, 
			200, 202, 207, 207, 208, 209, 210, 215, 219

Xref			bcpl_compiler_head:  103




Trans time 1.8, 652 object words per second.
	"	Begin text of Transbody

aa 000000  000011 124162		zero	9,43122		" Transbody
aa 000001  141156 163142		zero	49774,58978
aa 000002  157144 171000		zero	56932,61952
			L1:
aa 000003  000000 213000  14		epaq	0		" set lp to linkage section
aa 000004  700026 764161		lprplp	sb|22,*au
aa 000005  200000 021100		adlx1	bp|0		" BCPL save
aa 000006  700000 542111		sprpbp	sb|0,x1
aa 000007  700001 544111		sprplp	sb|1,x1
aa 000010  700425 620111		eax0	sb|277,x1
aa 000011  777760 360003		anx0	-16,du
aa 000012  700025 740100		stx0	sb|21		" end of save sequence

			L2:
aa 000013  700002 234111  16		szn	sb|2,x1		" x
aa 000014  001274 600004		tze	L5
aa 000015  700002 760111  17		lprpap	sb|2,x1		" x
aa 000016  000000 236100		ldq	ap|0
aa 000017  700003 756111		stq	sb|3,x1		" Op
aa 000020  700003 236111  18		ldq	sb|3,x1		" Op
aa 000021  000022 772000		qrl	18
aa 000022  700004 756111		stq	sb|4,x1		" NewLine
aa 000023  700004 236111  19		ldq	sb|4,x1		" NewLine
aa 000024  600214 116100		cmpq	sp|140		" LineCount
aa 000025  000010 600004		tze	L6
aa 000026  700004 235111		lda	sb|4,x1		" NewLine
aa 000027  000015 771000		arl	13
aa 000030  000005 601004		tnz	L6
aa 000031  700004 235111		lda	sb|4,x1		" NewLine
aa 000032  700026 755111		sta	sb|22,x1
4a 000033  400102 272120		tsbbp	lp|L7,*		" GenerateLineNumber
aa 000034  000024 000001		zero	20,1
			L6:
aa 000035  700004 235111  20		lda	sb|4,x1		" NewLine
aa 000036  600214 755100		sta	sp|140		" LineCount
aa 000037  777777 235007  22		lda	-1,dl		" Right
aa 000040  700003 355111		ansa	sb|3,x1		" Op
aa 000041  700002 762111  23		lprpbp	sb|2,x1		" x
aa 000042  200002 235100		lda	bp|2
aa 000043  700004 755111		sta	sb|4,x1		" b
aa 000044  700002 761111		lprpab	sb|2,x1		" x
aa 000045  100001 235100		lda	ab|1
aa 000046  700005 755111		sta	sb|5,x1		" a
aa 000047  001061 710004  26		tra	L9
			L10:
aa 000050  000143 235007		lda	99,dl		" UnexpectedCase
aa 000051  700026 755111		sta	sb|22,x1
aa 000052  700003 235111		lda	sb|3,x1		" Op
aa 000053  700027 755111		sta	sb|23,x1
aa 000054  001240 353404		eapbb	L11		" "Transbody"
aa 000055  700030 543111		sprpbb	sb|24,x1
4a 000056  400100 272120		tsbbp	lp|L12,*		" CGreport
aa 000057  000024 000003		zero	20,3
aa 000060  001230 710004  29		tra	L5
			L13:
aa 000061  600417 235100  30		lda	sp|271		" SSP
aa 000062  700006 755111		sta	sb|6,x1		" s
aa 000063  600401 235100		lda	sp|257		" DvecP
aa 000064  700007 755111		sta	sb|7,x1		" p
aa 000065  700005 235111  31		lda	sb|5,x1		" a
aa 000066  700026 755111		sta	sb|22,x1
4a 000067  400076 272120		tsbbp	lp|L14,*		" Declnames
aa 000070  000024 000001		zero	20,1
4a 000071  400074 272120  32		tsbbp	lp|L15,*		" Checkdistinct
aa 000072  000024 000000		zero	20
aa 000073  700005 235111  33		lda	sb|5,x1		" a
aa 000074  700026 755111		sta	sb|22,x1
4a 000075  400072 272120		tsbbp	lp|L16,*		" Transdef
aa 000076  000024 000001		zero	20,1
aa 000077  700004 235111  34		lda	sb|4,x1		" b
aa 000100  700026 755111		sta	sb|22,x1
aa 000101  777704 272004		tsbbp	L1+2		" Transbody
aa 000102  000024 000001		zero	20,1
aa 000103  700007 235111  35		lda	sb|7,x1		" p
aa 000104  700026 755111		sta	sb|22,x1
4a 000105  400070 272120		tsbbp	lp|L17,*		" Removenames
aa 000106  000024 000001		zero	20,1
aa 000107  700006 235111  36		lda	sb|6,x1		" s
aa 000110  700026 755111		sta	sb|22,x1
4a 000111  400066 272120		tsbbp	lp|L18,*		" ResetSSP
aa 000112  000024 000001		zero	20,1
aa 000113  001175 710004  39		tra	L5
			L19:
aa 000114  600401 235100  43		lda	sp|257		" DvecP
aa 000115  700007 755111		sta	sb|7,x1		" p
aa 000116  000016 710004  44		tra	L20
			L21:
aa 000117  700003 235111  45		lda	sb|3,x1		" Op
aa 000120  700026 755111		sta	sb|22,x1
aa 000121  700005 763111		lprpbb	sb|5,x1		" a
aa 000122  300001 235100		lda	bb|1
aa 000123  700027 755111		sta	sb|23,x1
aa 000124  700005 765111		lprplb	sb|5,x1		" a
aa 000125  500002 235100		lda	lb|2
aa 000126  700030 755111		sta	sb|24,x1
4a 000127  400064 272120		tsbbp	lp|L22,*		" Declitem
aa 000130  000024 000003		zero	20,3
aa 000131  700005 760111  46		lprpap	sb|5,x1		" a
aa 000132  000003 235100		lda	ap|3
aa 000133  700005 755111		sta	sb|5,x1		" a
			L20:
aa 000134  700005 234111		szn	sb|5,x1		" a
aa 000135  777762 601004		tnz	L21
4a 000136  400074 272120  48		tsbbp	lp|L15,*		" Checkdistinct
aa 000137  000024 000000		zero	20
aa 000140  700004 235111  49		lda	sb|4,x1		" b
aa 000141  700026 755111		sta	sb|22,x1
aa 000142  777643 272004		tsbbp	L1+2		" Transbody
aa 000143  000024 000001		zero	20,1
aa 000144  700007 235111  50		lda	sb|7,x1		" p
aa 000145  700026 755111		sta	sb|22,x1
4a 000146  400070 272120		tsbbp	lp|L17,*		" Removenames
aa 000147  000024 000001		zero	20,1
aa 000150  001140 710004  53		tra	L5
			L23:
aa 000151  600401 235100  54		lda	sp|257		" DvecP
aa 000152  700007 755111		sta	sb|7,x1		" p
aa 000153  700004 235111  55		lda	sb|4,x1		" b
aa 000154  700026 755111		sta	sb|22,x1
4a 000155  400062 272120		tsbbp	lp|L24,*		" Decllabels
aa 000156  000024 000001		zero	20,1
4a 000157  400074 272120  56		tsbbp	lp|L15,*		" Checkdistinct
aa 000160  000024 000000		zero	20
aa 000161  700005 235111  57		lda	sb|5,x1		" a
aa 000162  700026 755111		sta	sb|22,x1
aa 000163  777622 272004		tsbbp	L1+2		" Transbody
aa 000164  000024 000001		zero	20,1
aa 000165  700007 235111  58		lda	sb|7,x1		" p
aa 000166  700026 755111		sta	sb|22,x1
4a 000167  400070 272120		tsbbp	lp|L17,*		" Removenames
aa 000170  000024 000001		zero	20,1
aa 000171  001117 710004  61		tra	L5
			L25:
aa 000172  700005 235111  62		lda	sb|5,x1		" a
aa 000173  700026 755111		sta	sb|22,x1
aa 000174  700004 235111		lda	sb|4,x1		" b
aa 000175  700027 755111		sta	sb|23,x1
4a 000176  400060 272120		tsbbp	lp|L26,*		" Assignlist
aa 000177  000024 000002		zero	20,2
aa 000200  001110 710004  65		tra	L5
			L27:
aa 000201  700005 235111  66		lda	sb|5,x1		" a
aa 000202  700026 755111		sta	sb|22,x1
aa 000203  777602 272004		tsbbp	L1+2		" Transbody
aa 000204  000024 000001		zero	20,1
aa 000205  700004 235111  67		lda	sb|4,x1		" b
aa 000206  700002 755111		sta	sb|2,x1		" x
aa 000207  777604 710004  70		tra	L2
			L28:
aa 000210  700026 450111  71		stz	sb|22,x1
aa 000211  700005 235111		lda	sb|5,x1		" a
aa 000212  700027 755111		sta	sb|23,x1
aa 000213  700004 235111		lda	sb|4,x1		" b
aa 000214  700030 755111		sta	sb|24,x1
4a 000215  400056 272120		tsbbp	lp|L29,*		" TransFnap
aa 000216  000024 000003		zero	20,3
aa 000217  001071 710004  74		tra	L5
			L30:
aa 000220  700005 235111  75		lda	sb|5,x1		" a
aa 000221  700026 755111		sta	sb|22,x1
4a 000222  400054 272120		tsbbp	lp|L31,*		" TransSystemCall
aa 000223  000024 000001		zero	20,1
aa 000224  001064 710004  78		tra	L5
			L32:
aa 000225  700002 235111  79		lda	sb|2,x1		" x
aa 000226  700026 755111		sta	sb|22,x1
4a 000227  400052 272120		tsbbp	lp|L33,*		" Target
aa 000230  000024 000001		zero	20,1
aa 000231  700007 756111		stq	sb|7,x1		" p
aa 000232  700007 234111  80		szn	sb|7,x1		" p
aa 000233  000006 600004		tze	L34
aa 000234  700007 236111  81		ldq	sb|7,x1		" p
aa 000235  700026 756111		stq	sb|22,x1
4a 000236  400050 272120		tsbbp	lp|L36,*		" GenerateJump
aa 000237  000024 000001		zero	20,1
aa 000240  000023 710004		tra	L35
			L34:
aa 000241  600412 236100  82		ldq	sp|266		" PendingTemps
aa 000242  700011 756111		stq	sb|9,x1		" PT
aa 000243  700012 352111		eapbp	sb|10,x1		" a vector
aa 000244  700010 542111		sprpbp	sb|8,x1		" Desc
aa 000245  700005 236111  83		ldq	sb|5,x1		" a
aa 000246  700026 756111		stq	sb|22,x1
aa 000247  700010 236111		ldq	sb|8,x1		" Desc
aa 000250  700027 756111		stq	sb|23,x1
4a 000251  400046 272120		tsbbp	lp|L37,*		" CompileOperand
aa 000252  000024 000002		zero	20,2
aa 000253  700010 236111  84		ldq	sb|8,x1		" Desc
aa 000254  700026 756111		stq	sb|22,x1
4a 000255  400044 272120		tsbbp	lp|L38,*		" GenerateGoto
aa 000256  000024 000001		zero	20,1
aa 000257  700011 236111  85		ldq	sb|9,x1		" PT
aa 000260  700026 756111		stq	sb|22,x1
4a 000261  400042 272120		tsbbp	lp|L39,*		" PutBackTemps
aa 000262  000024 000001		zero	20,1
			L35:
aa 000263  001025 710004  89		tra	L5
			L40:
aa 000264  700002 762111  90		lprpbp	sb|2,x1		" x
aa 000265  200004 236100		ldq	bp|4
aa 000266  700026 756111		stq	sb|22,x1
4a 000267  400040 272120		tsbbp	lp|L41,*		" GenerateLabel
aa 000270  000024 000001		zero	20,1
aa 000271  700004 236111  91		ldq	sb|4,x1		" b
aa 000272  700026 756111		stq	sb|22,x1
aa 000273  777512 272004		tsbbp	L1+2		" Transbody
aa 000274  000024 000001		zero	20,1
aa 000275  001013 710004  94		tra	L5
			L42:
4a 000276  400036 272120  95		tsbbp	lp|L43,*		" GenerateFinish
aa 000277  000024 000000		zero	20
aa 000300  001010 710004  98		tra	L5
			L44:
aa 000301  700002 236111  102		ldq	sb|2,x1		" x
aa 000302  700026 756111		stq	sb|22,x1
4a 000303  400052 272120		tsbbp	lp|L33,*		" Target
aa 000304  000024 000001		zero	20,1
aa 000305  700010 756111		stq	sb|8,x1
aa 000306  700010 236111		ldq	sb|8,x1
aa 000307  700026 756111		stq	sb|22,x1
4a 000310  400050 272120		tsbbp	lp|L36,*		" GenerateJump
aa 000311  000024 000001		zero	20,1
aa 000312  000776 710004  105		tra	L5
			L45:
aa 000313  600425 234100  106		szn	sp|277		" ValofFlag
aa 000314  000020 600004		tze	L46
aa 000315  600412 236100  107		ldq	sp|266		" PendingTemps
aa 000316  700007 756111		stq	sb|7,x1		" p
aa 000317  700005 236111  108		ldq	sb|5,x1		" a
aa 000320  700026 756111		stq	sb|22,x1
4a 000321  400034 272120		tsbbp	lp|L48,*		" SetResult
aa 000322  000024 000001		zero	20,1
aa 000323  600426 236100  109		ldq	sp|278		" ValofLabel
aa 000324  700026 756111		stq	sb|22,x1
4a 000325  400050 272120		tsbbp	lp|L36,*		" GenerateJump
aa 000326  000024 000001		zero	20,1
aa 000327  700007 236111  110		ldq	sb|7,x1		" p
aa 000330  700026 756111		stq	sb|22,x1
4a 000331  400042 272120		tsbbp	lp|L39,*		" PutBackTemps
aa 000332  000024 000001		zero	20,1
aa 000333  000007 710004		tra	L47
			L46:
aa 000334  000327 236007  112		ldq	215,dl		" NoValof
aa 000335  700026 756111		stq	sb|22,x1
aa 000336  700002 236111		ldq	sb|2,x1		" x
aa 000337  700027 756111		stq	sb|23,x1
4a 000340  400032 272120		tsbbp	lp|L49,*		" Transreport
aa 000341  000024 000002		zero	20,2
			L47:
aa 000342  000746 710004  115		tra	L5
			L50:
aa 000343  700003 236111  116		ldq	sb|3,x1		" Op
aa 000344  000056 116007		cmpq	46,dl		" IF_S
aa 000345  000003 601004		tnz	L51
aa 000346  000001 335007		lca	1,dl		" true
aa 000347  000002 710004		tra	L52
			L51:
aa 000350  000000 235007		lda	0,dl		" false
			L52:
aa 000351  700011 755111		sta	sb|9,x1
aa 000352  700011 235111		lda	sb|9,x1
aa 000353  700010 755111		sta	sb|8,x1		" Sense
aa 000354  600152 234100  117		szn	sp|106		" Optimize
aa 000355  000042 600004		tze	L53
aa 000356  700005 235111  118		lda	sb|5,x1		" a
aa 000357  700026 755111		sta	sb|22,x1
4a 000360  400030 272120		tsbbp	lp|L55,*		" IsConst
aa 000361  000024 000001		zero	20,1
aa 000362  000000 116007		cmpq	0,dl
aa 000363  000014 600004		tze	L54
aa 000364  700005 236111  119		ldq	sb|5,x1		" a
aa 000365  700026 756111		stq	sb|22,x1
4a 000366  400026 272120		tsbbp	lp|L57,*		" Evalconst
aa 000367  000024 000001		zero	20,1
aa 000370  700010 676111		erq	sb|8,x1		" Sense
aa 000371  000005 601004		tnz	L56
aa 000372  700004 236111		ldq	sb|4,x1		" b
aa 000373  700026 756111		stq	sb|22,x1
aa 000374  777411 272004		tsbbp	L1+2		" Transbody
aa 000375  000024 000001		zero	20,1
			L56:
aa 000376  000712 710004  120		tra	L5
			L54:
aa 000377  700004 236111  122		ldq	sb|4,x1		" b
aa 000400  700026 756111		stq	sb|22,x1
4a 000401  400052 272120		tsbbp	lp|L33,*		" Target
aa 000402  000024 000001		zero	20,1
aa 000403  700011 756111		stq	sb|9,x1		" M
aa 000404  700011 234111  123		szn	sb|9,x1		" M
aa 000405  000012 600004		tze	L58
aa 000406  700005 236111  124		ldq	sb|5,x1		" a
aa 000407  700026 756111		stq	sb|22,x1
aa 000410  700010 236111		ldq	sb|8,x1		" Sense
aa 000411  700027 756111		stq	sb|23,x1
aa 000412  700011 236111		ldq	sb|9,x1		" M
aa 000413  700030 756111		stq	sb|24,x1
4a 000414  400024 272120		tsbbp	lp|L59,*		" TransConditional
aa 000415  000024 000003		zero	20,3
aa 000416  000672 710004  125		tra	L5
			L58:
			L53:
4a 000417  400022 272120  128		tsbbp	lp|L60,*		" Nextparam
aa 000420  000024 000000		zero	20
aa 000421  700011 756111		stq	sb|9,x1		" L
aa 000422  700005 236111  129		ldq	sb|5,x1		" a
aa 000423  700026 756111		stq	sb|22,x1
aa 000424  000001 336007		lcq	1,dl		" true
aa 000425  700010 676111		erq	sb|8,x1		" Sense
aa 000426  700027 756111		stq	sb|23,x1
aa 000427  700011 236111		ldq	sb|9,x1		" L
aa 000430  700030 756111		stq	sb|24,x1
4a 000431  400024 272120		tsbbp	lp|L59,*		" TransConditional
aa 000432  000024 000003		zero	20,3
aa 000433  700004 236111  130		ldq	sb|4,x1		" b
aa 000434  700026 756111		stq	sb|22,x1
aa 000435  777350 272004		tsbbp	L1+2		" Transbody
aa 000436  000024 000001		zero	20,1
aa 000437  700011 236111  131		ldq	sb|9,x1		" L
aa 000440  700026 756111		stq	sb|22,x1
4a 000441  400040 272120		tsbbp	lp|L41,*		" GenerateLabel
aa 000442  000024 000001		zero	20,1
aa 000443  000645 710004  135		tra	L5
			L61:
aa 000444  700002 761111		lprpab	sb|2,x1		" x
aa 000445  100003 236100		ldq	ab|3
aa 000446  700010 756111		stq	sb|8,x1		" c
aa 000447  600152 234100  136		szn	sp|106		" Optimize
aa 000450  000030 600004		tze	L62
aa 000451  700005 236111		ldq	sb|5,x1		" a
aa 000452  700026 756111		stq	sb|22,x1
4a 000453  400030 272120		tsbbp	lp|L55,*		" IsConst
aa 000454  000024 000001		zero	20,1
aa 000455  000000 116007		cmpq	0,dl
aa 000456  000022 600004		tze	L63
aa 000457  700005 236111  137		ldq	sb|5,x1		" a
aa 000460  700026 756111		stq	sb|22,x1
4a 000461  400026 272120		tsbbp	lp|L57,*		" Evalconst
aa 000462  000024 000001		zero	20,1
aa 000463  000000 116007		cmpq	0,dl
aa 000464  000003 600004		tze	L64
aa 000465  700004 236111		ldq	sb|4,x1		" b
aa 000466  000002 710004		tra	L65
			L64:
aa 000467  700010 236111		ldq	sb|8,x1		" c
			L65:
aa 000470  700012 756111		stq	sb|10,x1
aa 000471  700012 236111		ldq	sb|10,x1
aa 000472  700011 756111		stq	sb|9,x1
aa 000473  700011 236111		ldq	sb|9,x1
aa 000474  700026 756111		stq	sb|22,x1
aa 000475  777310 272004		tsbbp	L1+2		" Transbody
aa 000476  000024 000001		zero	20,1
aa 000477  000611 710004  138		tra	L5
			L63:
			L62:
4a 000500  400022 272120  140		tsbbp	lp|L60,*		" Nextparam
aa 000501  000024 000000		zero	20
aa 000502  700012 756111		stq	sb|10,x1		" L
4a 000503  400022 272120		tsbbp	lp|L60,*		" Nextparam
aa 000504  000024 000000		zero	20
aa 000505  700011 756111		stq	sb|9,x1		" M
aa 000506  700005 236111  141		ldq	sb|5,x1		" a
aa 000507  700026 756111		stq	sb|22,x1
aa 000510  700027 450111		stz	sb|23,x1
aa 000511  700012 236111		ldq	sb|10,x1		" L
aa 000512  700030 756111		stq	sb|24,x1
4a 000513  400024 272120		tsbbp	lp|L59,*		" TransConditional
aa 000514  000024 000003		zero	20,3
aa 000515  700004 236111  142		ldq	sb|4,x1		" b
aa 000516  700026 756111		stq	sb|22,x1
aa 000517  777266 272004		tsbbp	L1+2		" Transbody
aa 000520  000024 000001		zero	20,1
aa 000521  700011 236111  143		ldq	sb|9,x1		" M
aa 000522  700026 756111		stq	sb|22,x1
4a 000523  400050 272120		tsbbp	lp|L36,*		" GenerateJump
aa 000524  000024 000001		zero	20,1
aa 000525  700012 236111  144		ldq	sb|10,x1		" L
aa 000526  700026 756111		stq	sb|22,x1
4a 000527  400040 272120		tsbbp	lp|L41,*		" GenerateLabel
aa 000530  000024 000001		zero	20,1
aa 000531  700010 236111  145		ldq	sb|8,x1		" c
aa 000532  700026 756111		stq	sb|22,x1
aa 000533  777252 272004		tsbbp	L1+2		" Transbody
aa 000534  000024 000001		zero	20,1
aa 000535  700011 236111  146		ldq	sb|9,x1		" M
aa 000536  700026 756111		stq	sb|22,x1
4a 000537  400040 272120		tsbbp	lp|L41,*		" GenerateLabel
aa 000540  000024 000001		zero	20,1
aa 000541  000547 710004  150		tra	L5
			L66:
4a 000542  400022 272120  152		tsbbp	lp|L60,*		" Nextparam
aa 000543  000024 000000		zero	20
aa 000544  700010 756111		stq	sb|8,x1
aa 000545  700003 236111		ldq	sb|3,x1		" Op
aa 000546  000217 116007		cmpq	143,dl		" WHILE_S
aa 000547  000003 601004		tnz	L67
aa 000550  000001 335007		lca	1,dl		" true
aa 000551  000002 710004		tra	L68
			L67:
aa 000552  000000 235007		lda	0,dl		" false
			L68:
aa 000553  700013 755111		sta	sb|11,x1
aa 000554  700013 235111		lda	sb|11,x1
aa 000555  700012 755111		sta	sb|10,x1
aa 000556  700004 235111		lda	sb|4,x1		" b
aa 000557  700026 755111		sta	sb|22,x1
aa 000560  700005 235111		lda	sb|5,x1		" a
aa 000561  700027 755111		sta	sb|23,x1
aa 000562  700012 235111		lda	sb|10,x1
aa 000563  700030 755111		sta	sb|24,x1
aa 000564  700010 235111		lda	sb|8,x1
aa 000565  700031 755111		sta	sb|25,x1
4a 000566  400020 272120		tsbbp	lp|L69,*		" TransLoop
aa 000567  000024 000004		zero	20,4
aa 000570  000520 710004  155		tra	L5
			L70:
aa 000571  700005 235111  156		lda	sb|5,x1		" a
aa 000572  700026 755111		sta	sb|22,x1
aa 000573  700027 450111		stz	sb|23,x1
aa 000574  700030 450111		stz	sb|24,x1
aa 000575  700031 450111		stz	sb|25,x1
4a 000576  400020 272120		tsbbp	lp|L69,*		" TransLoop
aa 000577  000024 000004		zero	20,4
aa 000600  000510 710004  159		tra	L5
			L71:
aa 000601  700003 235111  161		lda	sb|3,x1		" Op
aa 000602  000153 115007		cmpa	107,dl		" REPEATWHILE_S
aa 000603  000003 601004		tnz	L72
aa 000604  000001 336007		lcq	1,dl		" true
aa 000605  000002 710004		tra	L73
			L72:
aa 000606  000000 236007		ldq	0,dl		" false
			L73:
aa 000607  700011 756111		stq	sb|9,x1
aa 000610  700011 236111		ldq	sb|9,x1
aa 000611  700010 756111		stq	sb|8,x1
aa 000612  700005 236111		ldq	sb|5,x1		" a
aa 000613  700026 756111		stq	sb|22,x1
aa 000614  700004 236111		ldq	sb|4,x1		" b
aa 000615  700027 756111		stq	sb|23,x1
aa 000616  700010 236111		ldq	sb|8,x1
aa 000617  700030 756111		stq	sb|24,x1
aa 000620  700031 450111		stz	sb|25,x1
4a 000621  400020 272120		tsbbp	lp|L69,*		" TransLoop
aa 000622  000024 000004		zero	20,4
aa 000623  000465 710004  164		tra	L5
			L74:
aa 000624  700002 236111  165		ldq	sb|2,x1		" x
aa 000625  700026 756111		stq	sb|22,x1
4a 000626  400016 272120		tsbbp	lp|L75,*		" TransFor
aa 000627  000024 000001		zero	20,1
aa 000630  000460 710004  168		tra	L5
			L76:
aa 000631  600417 236100  169		ldq	sp|271		" SSP
aa 000632  700006 756111		stq	sb|6,x1		" s
aa 000633  600402 236100  170		ldq	sp|258		" EndcaseLabel
aa 000634  700010 756111		stq	sb|8,x1		" El
aa 000635  600376 236100		ldq	sp|254		" DefaultLabel
aa 000636  700011 756111		stq	sb|9,x1		" Dl
aa 000637  600375 236100  171		ldq	sp|253		" CaseList
aa 000640  700012 756111		stq	sb|10,x1		" Cl
aa 000641  600423 236100		ldq	sp|275		" SwitchFlag
aa 000642  700014 756111		stq	sb|12,x1		" Sf
aa 000643  600374 236100		ldq	sp|252		" CaseFirst
aa 000644  700013 756111		stq	sb|11,x1		" Cf
aa 000645  600376 450100  172		stz	sp|254		" DefaultLabel
4a 000646  400022 272120		tsbbp	lp|L60,*		" Nextparam
aa 000647  000024 000000		zero	20
aa 000650  600402 756100		stq	sp|258		" EndcaseLabel
aa 000651  600375 450100  173		stz	sp|253		" CaseList
aa 000652  000001 336007		lcq	1,dl		" true
aa 000653  600423 756100		stq	sp|275		" SwitchFlag
aa 000654  600374 450100		stz	sp|252		" CaseFirst
4a 000655  400022 272120  175		tsbbp	lp|L60,*		" Nextparam
aa 000656  000024 000000		zero	20
aa 000657  700015 756111		stq	sb|13,x1		" Begin
aa 000660  700015 236111  176		ldq	sb|13,x1		" Begin
aa 000661  700026 756111		stq	sb|22,x1
4a 000662  400050 272120		tsbbp	lp|L36,*		" GenerateJump
aa 000663  000024 000001		zero	20,1
aa 000664  700002 763111  177		lprpbb	sb|2,x1		" x
aa 000665  300002 236100		ldq	bb|2
aa 000666  700026 756111		stq	sb|22,x1
aa 000667  777116 272004		tsbbp	L1+2		" Transbody
aa 000670  000024 000001		zero	20,1
aa 000671  600402 236100  178		ldq	sp|258		" EndcaseLabel
aa 000672  700026 756111		stq	sb|22,x1
4a 000673  400050 272120		tsbbp	lp|L36,*		" GenerateJump
aa 000674  000024 000001		zero	20,1
aa 000675  700015 236111  180		ldq	sb|13,x1		" Begin
aa 000676  700026 756111		stq	sb|22,x1
4a 000677  400040 272120		tsbbp	lp|L41,*		" GenerateLabel
aa 000700  000024 000001		zero	20,1
aa 000701  600412 236100  181		ldq	sp|266		" PendingTemps
aa 000702  700016 756111		stq	sb|14,x1		" PT
aa 000703  700020 371511		eaplb	sb|16,x1		" a vector
aa 000704  700017 545111		sprplb	sb|15,x1		" Val
aa 000705  700002 765111  182		lprplb	sb|2,x1		" x
aa 000706  500001 236100		ldq	lb|1
aa 000707  700026 756111		stq	sb|22,x1
aa 000710  700017 236111		ldq	sb|15,x1		" Val
aa 000711  700027 756111		stq	sb|23,x1
4a 000712  400046 272120		tsbbp	lp|L37,*		" CompileOperand
aa 000713  000024 000002		zero	20,2
aa 000714  700017 236111  183		ldq	sb|15,x1		" Val
aa 000715  700026 756111		stq	sb|22,x1
aa 000716  600374 236100		ldq	sp|252		" CaseFirst
aa 000717  700027 756111		stq	sb|23,x1
aa 000720  600376 236100		ldq	sp|254		" DefaultLabel
aa 000721  700030 756111		stq	sb|24,x1
aa 000722  600402 236100		ldq	sp|258		" EndcaseLabel
aa 000723  700031 756111		stq	sb|25,x1
4a 000724  400014 272120		tsbbp	lp|L77,*		" GenerateSwitch
aa 000725  000024 000004		zero	20,4
aa 000726  700016 236111  184		ldq	sb|14,x1		" PT
aa 000727  700026 756111		stq	sb|22,x1
4a 000730  400042 272120		tsbbp	lp|L39,*		" PutBackTemps
aa 000731  000024 000001		zero	20,1
aa 000732  600402 236100  185		ldq	sp|258		" EndcaseLabel
aa 000733  700026 756111		stq	sb|22,x1
4a 000734  400040 272120		tsbbp	lp|L41,*		" GenerateLabel
aa 000735  000024 000001		zero	20,1
aa 000736  700010 236111  187		ldq	sb|8,x1		" El
aa 000737  600402 756100		stq	sp|258		" EndcaseLabel
aa 000740  700011 236111		ldq	sb|9,x1		" Dl
aa 000741  600376 756100		stq	sp|254		" DefaultLabel
aa 000742  700014 236111  188		ldq	sb|12,x1		" Sf
aa 000743  600423 756100		stq	sp|275		" SwitchFlag
aa 000744  700012 236111		ldq	sb|10,x1		" Cl
aa 000745  600375 756100		stq	sp|253		" CaseList
aa 000746  700013 236111		ldq	sb|11,x1		" Cf
aa 000747  600374 756100		stq	sp|252		" CaseFirst
aa 000750  700006 236111  189		ldq	sb|6,x1		" s
aa 000751  700026 756111		stq	sb|22,x1
4a 000752  400066 272120		tsbbp	lp|L18,*		" ResetSSP
aa 000753  000024 000001		zero	20,1
aa 000754  000334 710004  193		tra	L5
			L78:
4a 000755  400022 272120  194		tsbbp	lp|L60,*		" Nextparam
aa 000756  000024 000000		zero	20
aa 000757  700007 756111		stq	sb|7,x1		" p
aa 000760  700007 236111  195		ldq	sb|7,x1		" p
aa 000761  700026 756111		stq	sb|22,x1
4a 000762  400040 272120		tsbbp	lp|L41,*		" GenerateLabel
aa 000763  000024 000001		zero	20,1
aa 000764  600423 234100  196		szn	sp|275		" SwitchFlag
aa 000765  000007 601004		tnz	L79
aa 000766  000323 236007		ldq	211,dl		" NoSwitch
aa 000767  700026 756111		stq	sb|22,x1
aa 000770  700002 236111		ldq	sb|2,x1		" x
aa 000771  700027 756111		stq	sb|23,x1
4a 000772  400032 272120		tsbbp	lp|L49,*		" Transreport
aa 000773  000024 000002		zero	20,2
			L79:
			L80:
aa 000774  000005 236007  197		ldq	5,dl		" 5
aa 000775  700026 756111		stq	sb|22,x1
4a 000776  400012 272120		tsbbp	lp|L81,*		" Newvec
aa 000777  000024 000001		zero	20,1
aa 001000  700010 756111		stq	sb|8,x1		" t
aa 001001  700010 760111  198		lprpap	sb|8,x1		" t
aa 001002  000000 450100		stz	ap|0
aa 001003  700007 236111		ldq	sb|7,x1		" p
aa 001004  700010 762111		lprpbp	sb|8,x1		" t
aa 001005  200001 756100		stq	bp|1
aa 001006  700002 761111  199		lprpab	sb|2,x1		" x
aa 001007  100001 236100		ldq	ab|1
aa 001010  700026 756111		stq	sb|22,x1
aa 001011  700010 763111		lprpbb	sb|8,x1		" t
aa 001012  300002 353500		eapbb	bb|2
aa 001013  700027 543111		sprpbb	sb|23,x1
4a 001014  400010 272120		tsbbp	lp|L82,*		" PartialEvalconst
aa 001015  000024 000002		zero	20,2
aa 001016  700002 763111  200		lprpbb	sb|2,x1		" x
aa 001017  300002 234100		szn	bb|2
aa 001020  000012 601004		tnz	L83
aa 001021  700010 765111  201		lprplb	sb|8,x1		" t
aa 001022  500002 236100		ldq	lb|2
aa 001023  700010 760111		lprpap	sb|8,x1		" t
aa 001024  000004 756100		stq	ap|4
aa 001025  700010 762111		lprpbp	sb|8,x1		" t
aa 001026  200003 236100		ldq	bp|3
aa 001027  700010 761111		lprpab	sb|8,x1		" t
aa 001030  100005 756100		stq	ab|5
aa 001031  000011 710004		tra	L84
			L83:
aa 001032  700002 763111  202		lprpbb	sb|2,x1		" x
aa 001033  300002 236100		ldq	bb|2
aa 001034  700026 756111		stq	sb|22,x1
aa 001035  700010 765111		lprplb	sb|8,x1		" t
aa 001036  500004 371500		eaplb	lb|4
aa 001037  700027 545111		sprplb	sb|23,x1
4a 001040  400010 272120		tsbbp	lp|L82,*		" PartialEvalconst
aa 001041  000024 000002		zero	20,2
			L84:
aa 001042  600375 234100  203		szn	sp|253		" CaseList
aa 001043  000004 601004		tnz	L85
aa 001044  700010 236111  204		ldq	sb|8,x1		" t
aa 001045  600374 756100		stq	sp|252		" CaseFirst
aa 001046  000004 710004		tra	L86
			L85:
aa 001047  700010 236111  205		ldq	sb|8,x1		" t
aa 001050  600375 765100		lprplb	sp|253		" CaseList
aa 001051  500000 756100		stq	lb|0
			L86:
aa 001052  700010 236111  206		ldq	sb|8,x1		" t
aa 001053  600375 756100		stq	sp|253		" CaseList
aa 001054  700002 760111  207		lprpap	sb|2,x1		" x
aa 001055  000003 236100		ldq	ap|3
aa 001056  700002 756111		stq	sb|2,x1		" x
aa 001057  700002 234111  208		szn	sb|2,x1		" x
aa 001060  000006 600004		tze	L87
aa 001061  700002 762111		lprpbp	sb|2,x1		" x
aa 001062  200000 236100		ldq	bp|0
aa 001063  777777 376007		anq	-1,dl		" Right
aa 001064  000010 116007		cmpq	8,dl		" CASE_S
aa 001065  777707 600004		tze	L80
			L87:
aa 001066  700002 236111  210		ldq	sb|2,x1		" x
aa 001067  700026 756111		stq	sb|22,x1
aa 001070  776715 272004		tsbbp	L1+2		" Transbody
aa 001071  000024 000001		zero	20,1
aa 001072  000216 710004  213		tra	L5
			L88:
aa 001073  600423 234100  214		szn	sp|275		" SwitchFlag
aa 001074  000021 600004		tze	L89
aa 001075  600376 234100  215		szn	sp|254		" DefaultLabel
aa 001076  000007 600004		tze	L91
aa 001077  000314 236007		ldq	204,dl		" DupDefault
aa 001100  700026 756111		stq	sb|22,x1
aa 001101  700002 236111		ldq	sb|2,x1		" x
aa 001102  700027 756111		stq	sb|23,x1
4a 001103  400032 272120		tsbbp	lp|L49,*		" Transreport
aa 001104  000024 000002		zero	20,2
			L91:
4a 001105  400022 272120  216		tsbbp	lp|L60,*		" Nextparam
aa 001106  000024 000000		zero	20
aa 001107  600376 756100		stq	sp|254		" DefaultLabel
aa 001110  600376 236100  217		ldq	sp|254		" DefaultLabel
aa 001111  700026 756111		stq	sb|22,x1
4a 001112  400040 272120		tsbbp	lp|L41,*		" GenerateLabel
aa 001113  000024 000001		zero	20,1
aa 001114  000007 710004		tra	L90
			L89:
aa 001115  000323 236007  219		ldq	211,dl		" NoSwitch
aa 001116  700026 756111		stq	sb|22,x1
aa 001117  700002 236111		ldq	sb|2,x1		" x
aa 001120  700027 756111		stq	sb|23,x1
4a 001121  400032 272120		tsbbp	lp|L49,*		" Transreport
aa 001122  000024 000002		zero	20,2
			L90:
aa 001123  700005 236111  220		ldq	sb|5,x1		" a
aa 001124  700026 756111		stq	sb|22,x1
aa 001125  776660 272004		tsbbp	L1+2		" Transbody
aa 001126  000024 000001		zero	20,1
aa 001127  000161 710004  221		tra	L5
			L9:

	"	Begin switchon

aa 001130  700003 235111		lda	sb|3,x1		" Op
aa 001131  000152 115007		cmpa	106,dl
aa 001132  000052 604004		tmi	L92
aa 001133  000154 115007		cmpa	108,dl
aa 001134  777445 604004		tmi	L71
aa 001135  000043 773000		lrl	35
aa 001136  000021 507007		dvf	17,dl		" hash table size
0a 001137  001163 115006		cmpa	L93,ql
aa 001140  776710 601004		tnz	L10
0a 001141  001142 710006		tra	L94,ql
			L94:
aa 001142  777201 710004		tra	L50
aa 001143  777377 710004		tra	L66
aa 001144  776704 710004		tra	L10
aa 001145  777034 710004		tra	L27
aa 001146  776702 710004		tra	L10
aa 001147  776745 710004		tra	L19
aa 001150  777143 710004		tra	L45
aa 001151  777371 710004		tra	L66
aa 001152  777127 710004		tra	L44
aa 001153  777456 710004		tra	L76
aa 001154  776674 710004		tra	L10
aa 001155  777033 710004		tra	L28
aa 001156  776672 710004		tra	L10
aa 001157  777265 710004		tra	L61
aa 001160  776670 710004		tra	L10
aa 001161  776667 710004		tra	L10
aa 001162  776666 710004		tra	L10
			L93:
aa 001163  000000 000010		zero	0,8
aa 001164  000000 000010		zero	0,8
aa 001165  000000 000000		zero	0
aa 001166  000000 000007		zero	0,7
aa 001167  000000 000000		zero	0
aa 001170  000000 000007		zero	0,7
aa 001171  000000 000006		zero	0,6
aa 001172  000000 000010		zero	0,8
aa 001173  000000 000006		zero	0,6
aa 001174  000000 000007		zero	0,7
aa 001175  000000 000000		zero	0
aa 001176  000000 000006		zero	0,6
aa 001177  000000 000000		zero	0
aa 001200  000000 000007		zero	0,7
aa 001201  000000 000000		zero	0
aa 001202  000000 000000		zero	0
aa 001203  000000 000000		zero	0
			L92:
aa 001204  000151 115007		cmpa	105,dl
aa 001205  000002 604004		tmi	L95
aa 001206  777363 710004		tra	L70
			L95:
aa 001207  000040 115007		cmpa	32,dl
aa 001210  000037 604004		tmi	L96
aa 001211  777065 600004		tze	L42
aa 001212  000043 773000		lrl	35
aa 001213  000014 507007		dvf	12,dl		" hash table size
0a 001214  001233 115006		cmpa	L97,ql
aa 001215  776633 601004		tnz	L10
0a 001216  001217 710006		tra	L98,ql
			L98:
aa 001217  776631 710004		tra	L10
aa 001220  777404 710004		tra	L74
aa 001221  777060 710004		tra	L44
aa 001222  776727 710004		tra	L23
aa 001223  776671 710004		tra	L19
aa 001224  776624 710004		tra	L10
aa 001225  776667 710004		tra	L19
aa 001226  776777 710004		tra	L32
aa 001227  776632 710004		tra	L13
aa 001230  776620 710004		tra	L10
aa 001231  777112 710004		tra	L50
aa 001232  776616 710004		tra	L10
			L97:
aa 001233  000000 000000		zero	0
aa 001234  000000 000003		zero	0,3
aa 001235  000000 000005		zero	0,5
aa 001236  000000 000004		zero	0,4
aa 001237  000000 000006		zero	0,6
aa 001240  000000 000000		zero	0
aa 001241  000000 000003		zero	0,3
aa 001242  000000 000003		zero	0,3
aa 001243  000000 000004		zero	0,4
aa 001244  000000 000000		zero	0
aa 001245  000000 000003		zero	0,3
aa 001246  000000 000000		zero	0
			L96:
aa 001247  000002 115007		cmpa	2,dl
aa 001250  776600 604004		tmi	L10
0a 001251  001250 710005		tra	L99-2,al
			L99:
aa 001252  776720 710004		tra	L25
aa 001253  776575 710004		tra	L10
aa 001254  776574 710004		tra	L10
aa 001255  777024 710004		tra	L44
aa 001256  776572 710004		tra	L10
aa 001257  776741 710004		tra	L30
aa 001260  777475 710004		tra	L78
aa 001261  776567 710004		tra	L10
aa 001262  776566 710004		tra	L10
aa 001263  776565 710004		tra	L10
aa 001264  777000 710004		tra	L40
aa 001265  776563 710004		tra	L10
aa 001266  776562 710004		tra	L10
aa 001267  776561 710004		tra	L10
aa 001270  776560 710004		tra	L10
aa 001271  777602 710004		tra	L88
aa 001272  776556 710004		tra	L10
aa 001273  776555 710004		tra	L10
aa 001274  776554 710004		tra	L10
aa 001275  776553 710004		tra	L10
aa 001276  776552 710004		tra	L10
aa 001277  777002 710004		tra	L44
aa 001300  776550 710004		tra	L10
aa 001301  776547 710004		tra	L10
aa 001302  776546 710004		tra	L10
aa 001303  776545 710004		tra	L10
aa 001304  776544 710004		tra	L10
aa 001305  776543 710004		tra	L10
aa 001306  776606 710004		tra	L19
aa 001307  776541 710004		tra	L10
			L8:
			L5:
aa 001310  700000 762111		lprpbp	sb|0,x1		" bcpl return
aa 001311  200000 121100		sblx1	bp|0
aa 001312  700001 764111		lprplp	sb|1,x1
aa 001313  200001 710100		tra	bp|1		" end of return sequence

	"	Literal pool

			L11:
aa 001314  000011 124162		zero	9,43122		" "Transbody"
aa 001315  141156 163142		zero	49774,58978
aa 001316  157144 171000		zero	56932,61952
aa 001317  000000 000000		" padding
	"	Definition section part one - external entry points

5a 000000  000015 000000		" pointer to first definition
aa 000001  000000 600000		" flags: new format, ignore header
aa 000002  000000 000000		" list terminator

aa 000003  013142 143160		" "bcpl_trans1"
aa 000004  154137 164162
aa 000005  141156 163061
aa 000006  011124 162141		" "Transbody"
aa 000007  156163 142157
aa 000010  144171 000000
aa 000011  014163 171155		" "symbol_table"
aa 000012  142157 154137
aa 000013  164141 142154
aa 000014  145000 000000

	"	Segname definition for bcpl_trans1

55 000015  000020 000002		" forward, backward threads
5a 000016  000002 400003		" value defined, class flags
55 000017  000003 000020		" name pointer, first entry def

	"	Definition for Transbody

55 000020  000023 000015		" forward, backward threads
0a 000021  000003 500000		" value defined, class flags
55 000022  000006 000015		" name pointer, segname def pointer

	"	Definition for symbol_table

55 000023  000002 000020		" forward, backward threads
6a 000024  000000 400002		" value defined, class flags
55 000025  000011 000015		" name pointer, segname def pointer
	"	Definition section part two - symbolic info for external references

aa 000026  013142 143160		" "bcpl_trans5"
aa 000027  154137 164162
aa 000030  141156 163065
aa 000031  020120 141162		" "PartialEvalconst"
aa 000032  164151 141154
aa 000033  105166 141154
aa 000034  143157 156163
aa 000035  164000 000000
5a 000036  000037 000000
aa 000037  000004 000000
55 000040  000026 000031
aa 000041  014142 143160		" "bcpl_utility"
aa 000042  154137 165164
aa 000043  151154 151164
aa 000044  171000 000000
aa 000045  006116 145167		" "Newvec"
aa 000046  166145 143000
5a 000047  000050 000000
aa 000050  000004 000000
55 000051  000041 000045
aa 000052  021142 143160		" "bcpl_cg_interface"
aa 000053  154137 143147
aa 000054  137151 156164
aa 000055  145162 146141
aa 000056  143145 000000
aa 000057  016107 145156		" "GenerateSwitch"
aa 000060  145162 141164
aa 000061  145123 167151
aa 000062  164143 150000
5a 000063  000064 000000
aa 000064  000004 000000
55 000065  000052 000057
aa 000066  013142 143160		" "bcpl_trans3"
aa 000067  154137 164162
aa 000070  141156 163063
aa 000071  010124 162141		" "TransFor"
aa 000072  156163 106157
aa 000073  162000 000000
5a 000074  000075 000000
aa 000075  000004 000000
55 000076  000066 000071
aa 000077  011124 162141		" "TransLoop"
aa 000100  156163 114157
aa 000101  157160 000000
5a 000102  000103 000000
aa 000103  000004 000000
55 000104  000066 000077
aa 000105  011116 145170		" "Nextparam"
aa 000106  164160 141162
aa 000107  141155 000000
5a 000110  000111 000000
aa 000111  000004 000000
55 000112  000041 000105
aa 000113  020124 162141		" "TransConditional"
aa 000114  156163 103157
aa 000115  156144 151164
aa 000116  151157 156141
aa 000117  154000 000000
5a 000120  000121 000000
aa 000121  000004 000000
55 000122  000066 000113
aa 000123  011105 166141		" "Evalconst"
aa 000124  154143 157156
aa 000125  163164 000000
5a 000126  000127 000000
aa 000127  000004 000000
55 000130  000026 000123
aa 000131  007111 163103		" "IsConst"
aa 000132  157156 163164
5a 000133  000134 000000
aa 000134  000004 000000
55 000135  000026 000131
aa 000136  013142 143160		" "bcpl_report"
aa 000137  154137 162145
aa 000140  160157 162164
aa 000141  013124 162141		" "Transreport"
aa 000142  156163 162145
aa 000143  160157 162164
5a 000144  000145 000000
aa 000145  000004 000000
55 000146  000136 000141
aa 000147  013142 143160		" "bcpl_trans4"
aa 000150  154137 164162
aa 000151  141156 163064
aa 000152  011123 145164		" "SetResult"
aa 000153  122145 163165
aa 000154  154164 000000
5a 000155  000156 000000
aa 000156  000004 000000
55 000157  000147 000152
aa 000160  016107 145156		" "GenerateFinish"
aa 000161  145162 141164
aa 000162  145106 151156
aa 000163  151163 150000
5a 000164  000165 000000
aa 000165  000004 000000
55 000166  000052 000160
aa 000167  015107 145156		" "GenerateLabel"
aa 000170  145162 141164
aa 000171  145114 141142
aa 000172  145154 000000
5a 000173  000174 000000
aa 000174  000004 000000
55 000175  000052 000167
aa 000176  013142 143160		" "bcpl_trans6"
aa 000177  154137 164162
aa 000200  141156 163066
aa 000201  014120 165164		" "PutBackTemps"
aa 000202  102141 143153
aa 000203  124145 155160
aa 000204  163000 000000
5a 000205  000206 000000
aa 000206  000004 000000
55 000207  000176 000201
aa 000210  014107 145156		" "GenerateGoto"
aa 000211  145162 141164
aa 000212  145107 157164
aa 000213  157000 000000
5a 000214  000215 000000
aa 000215  000004 000000
55 000216  000052 000210
aa 000217  016103 157155		" "CompileOperand"
aa 000220  160151 154145
aa 000221  117160 145162
aa 000222  141156 144000
5a 000223  000224 000000
aa 000224  000004 000000
55 000225  000147 000217
aa 000226  014107 145156		" "GenerateJump"
aa 000227  145162 141164
aa 000230  145112 165155
aa 000231  160000 000000
5a 000232  000233 000000
aa 000233  000004 000000
55 000234  000052 000226
aa 000235  006124 141162		" "Target"
aa 000236  147145 164000
5a 000237  000240 000000
aa 000240  000004 000000
55 000241  000066 000235
aa 000242  017124 162141		" "TransSystemCall"
aa 000243  156163 123171
aa 000244  163164 145155
aa 000245  103141 154154
5a 000246  000247 000000
aa 000247  000004 000000
55 000250  000176 000242
aa 000251  011124 162141		" "TransFnap"
aa 000252  156163 106156
aa 000253  141160 000000
5a 000254  000255 000000
aa 000255  000004 000000
55 000256  000176 000251
aa 000257  012101 163163		" "Assignlist"
aa 000260  151147 156154
aa 000261  151163 164000
5a 000262  000263 000000
aa 000263  000004 000000
55 000264  000066 000257
aa 000265  013142 143160		" "bcpl_trans2"
aa 000266  154137 164162
aa 000267  141156 163062
aa 000270  012104 145143		" "Decllabels"
aa 000271  154154 141142
aa 000272  145154 163000
5a 000273  000274 000000
aa 000274  000004 000000
55 000275  000265 000270
aa 000276  010104 145143		" "Declitem"
aa 000277  154151 164145
aa 000300  155000 000000
5a 000301  000302 000000
aa 000302  000004 000000
55 000303  000265 000276
aa 000304  010122 145163		" "ResetSSP"
aa 000305  145164 123123
aa 000306  120000 000000
5a 000307  000310 000000
aa 000310  000004 000000
55 000311  000176 000304
aa 000312  013122 145155		" "Removenames"
aa 000313  157166 145156
aa 000314  141155 145163
5a 000315  000316 000000
aa 000316  000004 000000
55 000317  000265 000312
aa 000320  010124 162141		" "Transdef"
aa 000321  156163 144145
aa 000322  146000 000000
5a 000323  000324 000000
aa 000324  000004 000000
55 000325  000265 000320
aa 000326  015103 150145		" "Checkdistinct"
aa 000327  143153 144151
aa 000330  163164 151156
aa 000331  143164 000000
5a 000332  000333 000000
aa 000333  000004 000000
55 000334  000265 000326
aa 000335  011104 145143		" "Declnames"
aa 000336  154156 141155
aa 000337  145163 000000
5a 000340  000341 000000
aa 000341  000004 000000
55 000342  000265 000335
aa 000343  010103 107162		" "CGreport"
aa 000344  145160 157162
aa 000345  164000 000000
5a 000346  000347 000000
aa 000347  000004 000000
55 000350  000136 000343
aa 000351  022107 145156		" "GenerateLineNumber"
aa 000352  145162 141164
aa 000353  145114 151156
aa 000354  145116 165155
aa 000355  142145 162000
5a 000356  000357 000000
aa 000357  000004 000000
55 000360  000052 000351
aa 000361  000000 000000		" padding
	"	Linkage section - static variables and external links

aa 000000  000000 000000		" linkage header
0a 000001  001320 000000		" address of defs
aa 000002  000000 000000
aa 000003  000000 000000
aa 000004  000000 000000
aa 000005  000000 000000
2a 000006  000010 000104		" offset to links, total length
aa 000007  000000 000104		" obsolete length

	"	External link pairs

			L82:
3a 000010  777770 000046		" "bcpl_trans5$PartialEvalconst"
5a 000011  000036 000000
			L81:
3a 000012  777766 000046		" "bcpl_utility$Newvec"
5a 000013  000047 000000
			L77:
3a 000014  777764 000046		" "bcpl_cg_interface$GenerateSwitch"
5a 000015  000063 000000
			L75:
3a 000016  777762 000046		" "bcpl_trans3$TransFor"
5a 000017  000074 000000
			L69:
3a 000020  777760 000046		" "bcpl_trans3$TransLoop"
5a 000021  000102 000000
			L60:
3a 000022  777756 000046		" "bcpl_utility$Nextparam"
5a 000023  000110 000000
			L59:
3a 000024  777754 000046		" "bcpl_trans3$TransConditional"
5a 000025  000120 000000
			L57:
3a 000026  777752 000046		" "bcpl_trans5$Evalconst"
5a 000027  000126 000000
			L55:
3a 000030  777750 000046		" "bcpl_trans5$IsConst"
5a 000031  000133 000000
			L49:
3a 000032  777746 000046		" "bcpl_report$Transreport"
5a 000033  000144 000000
			L48:
3a 000034  777744 000046		" "bcpl_trans4$SetResult"
5a 000035  000155 000000
			L43:
3a 000036  777742 000046		" "bcpl_cg_interface$GenerateFinish"
5a 000037  000164 000000
			L41:
3a 000040  777740 000046		" "bcpl_cg_interface$GenerateLabel"
5a 000041  000173 000000
			L39:
3a 000042  777736 000046		" "bcpl_trans6$PutBackTemps"
5a 000043  000205 000000
			L38:
3a 000044  777734 000046		" "bcpl_cg_interface$GenerateGoto"
5a 000045  000214 000000
			L37:
3a 000046  777732 000046		" "bcpl_trans4$CompileOperand"
5a 000047  000223 000000
			L36:
3a 000050  777730 000046		" "bcpl_cg_interface$GenerateJump"
5a 000051  000232 000000
			L33:
3a 000052  777726 000046		" "bcpl_trans3$Target"
5a 000053  000237 000000
			L31:
3a 000054  777724 000046		" "bcpl_trans6$TransSystemCall"
5a 000055  000246 000000
			L29:
3a 000056  777722 000046		" "bcpl_trans6$TransFnap"
5a 000057  000254 000000
			L26:
3a 000060  777720 000046		" "bcpl_trans3$Assignlist"
5a 000061  000262 000000
			L24:
3a 000062  777716 000046		" "bcpl_trans2$Decllabels"
5a 000063  000273 000000
			L22:
3a 000064  777714 000046		" "bcpl_trans2$Declitem"
5a 000065  000301 000000
			L18:
3a 000066  777712 000046		" "bcpl_trans6$ResetSSP"
5a 000067  000307 000000
			L17:
3a 000070  777710 000046		" "bcpl_trans2$Removenames"
5a 000071  000315 000000
			L16:
3a 000072  777706 000046		" "bcpl_trans2$Transdef"
5a 000073  000323 000000
			L15:
3a 000074  777704 000046		" "bcpl_trans2$Checkdistinct"
5a 000075  000332 000000
			L14:
3a 000076  777702 000046		" "bcpl_trans2$Declnames"
5a 000077  000340 000000
			L12:
3a 000100  777700 000046		" "bcpl_report$CGreport"
5a 000101  000346 000000
			L7:
3a 000102  777676 000046		" "bcpl_cg_interface$GenerateLineNumber"
5a 000103  000356 000000
	"	Symbol section header

aa 000000  000000 000001		" version number of header structure
aa 000001  163171 155142		" "symbtree"
aa 000002  164162 145145
aa 000003  000000 000003		" compiler version number
aa 000004  000000 101170		" date/time compiler modified
aa 000005  533311 032072		" 09/25/73  0959.1 mst Tue
aa 000006  000000 102333		" time of this compilation
aa 000007  440563 406304		" 01/24/75  0701.2 mst Fri
aa 000010  142143 160154		" "bcpl    "
aa 000011  040040 040040
aa 000012  000052 000035		" compiler version name - pointer, length
aa 000013  000062 000024		" user id - pointer, length
aa 000014  000067 000043		" comment string - pointer, length
aa 000015  000002 000002		" text and linkage boundaries
aa 000016  000024 000000		" source map, symbol tree root
7a 000017  000000 000163		" section header pointer, block size
aa 000020  000000 000163		" next block pointer, rel_text
aa 000021  000000 000230		" rel_def, rel_link
aa 000022  000245 000163		" rel_symbol, default truncate
aa 000023  000024 000000		" optional truncate, unused
aa 000024  000000 000001		" source files map: version number
aa 000025  000000 000005		"                   number of files
aa 000026  000100 000052		" bcpl_trans1
aa 000027  023333 611433		" last modified on
aa 000030  000000 102333		" 01/24/75  0647.2 mst Fri
aa 000031  432367 000000
aa 000032  000113 000046		" bcpl_trans_head
aa 000033  021607 540225		" last modified on
aa 000034  000000 101621		" 05/06/74  1740.8 mst Mon
aa 000035  351476 000000
aa 000036  000125 000051		" bcpl_compiler_head
aa 000037  021607 540214		" last modified on
aa 000040  000000 101621		" 05/06/74  1740.6 mst Mon
aa 000041  351403 200000
aa 000042  000140 000043		" bcpl_symbols
aa 000043  021607 540223		" last modified on
aa 000044  000000 101621		" 05/06/74  1740.8 mst Mon
aa 000045  351474 000000
aa 000046  000151 000047		" bcpl_trans_codes
aa 000047  021607 540224		" last modified on
aa 000050  000000 101621		" 05/06/74  1740.8 mst Mon
aa 000051  351475 000000
aa 000052  102103 120114		" "BCPL version 3.4, August 1973"
aa 000053  040166 145162
aa 000054  163151 157156
aa 000055  040063 056064
aa 000056  054040 101165
aa 000057  147165 163164
aa 000060  040061 071067
aa 000061  063040 040040
aa 000062  115141 162164		" "Martinson.SysMaint.a"
aa 000063  151156 163157
aa 000064  156056 123171
aa 000065  163115 141151
aa 000066  156164 056141
aa 000067  163157 165162		" "source  xref  alist  optimize  6180"
aa 000070  143145 040040
aa 000071  170162 145146
aa 000072  040040 141154
aa 000073  151163 164040
aa 000074  040157 160164
aa 000075  151155 151172
aa 000076  145040 040066
aa 000077  061070 060040
aa 000100  076062 056061		" ">2.1spec>online>mib083074>bcpl_trans1.bcpl"
aa 000101  163160 145143
aa 000102  076157 156154
aa 000103  151156 145076
aa 000104  155151 142060
aa 000105  070063 060067
aa 000106  064076 142143
aa 000107  160154 137164
aa 000110  162141 156163
aa 000111  061056 142143
aa 000112  160154 040040
aa 000113  076154 144144		" ">ldd>include>bcpl_trans_head.incl.bcpl"
aa 000114  076151 156143
aa 000115  154165 144145
aa 000116  076142 143160
aa 000117  154137 164162
aa 000120  141156 163137
aa 000121  150145 141144
aa 000122  056151 156143
aa 000123  154056 142143
aa 000124  160154 040040
aa 000125  076154 144144		" ">ldd>include>bcpl_compiler_head.incl.bcpl"
aa 000126  076151 156143
aa 000127  154165 144145
aa 000130  076142 143160
aa 000131  154137 143157
aa 000132  155160 151154
aa 000133  145162 137150
aa 000134  145141 144056
aa 000135  151156 143154
aa 000136  056142 143160
aa 000137  154040 040040
aa 000140  076154 144144		" ">ldd>include>bcpl_symbols.incl.bcpl"
aa 000141  076151 156143
aa 000142  154165 144145
aa 000143  076142 143160
aa 000144  154137 163171
aa 000145  155142 157154
aa 000146  163056 151156
aa 000147  143154 056142
aa 000150  143160 154040
aa 000151  076154 144144		" ">ldd>include>bcpl_trans_codes.incl.bcpl"
aa 000152  076151 156143
aa 000153  154165 144145
aa 000154  076142 143160
aa 000155  154137 164162
aa 000156  141156 163137
aa 000157  143157 144145
aa 000160  163056 151156
aa 000161  143154 056142
aa 000162  143160 154040
	"	Relocation information


	"	text section relocation bits

aa 000163  000000 000002		" version number of rel-bits structure
aa 000164  000000 002317		" length in bits
aa 000165  740665 170113
aa 000166  236010 640500
aa 000167  050000 012001
aa 000170  236015 640000
aa 000171  240000 050000
aa 000172  050120 000024
aa 000173  000024 740355
aa 000174  000120 002400
aa 000175  002474 025500
aa 000176  050005 000024
aa 000177  000024 000500
aa 000200  012360 106400
aa 000201  240024 000024
aa 000202  740375 000024
aa 000203  740255 170053
aa 000204  200517 004720
aa 000205  000024 740235
aa 000206  000024 740355
aa 000207  002400 000500
aa 000210  000120 012000
aa 000211  002401 236023
aa 000212  640000 051701
aa 000213  132000 247403
aa 000214  750000 050001
aa 000215  236010 640024
aa 000216  740255 170047
aa 000217  200120 012360
aa 000220  156401 200024
aa 000221  000005 000517
aa 000222  006723 602364
aa 000223  741055 012000
aa 000224  240000 247403
aa 000225  340103 605260
aa 000226  041701 530360
aa 000227  464000 000000
l	"	inkage relocation bits

aa 000230  000000 000002		" version number of rel-bits structure
aa 000231  000000 000600		" length in bits
aa 000232  100002 204652
aa 000233  465246 524652
aa 000234  465246 524652
aa 000235  465246 524652
aa 000236  465246 524652
aa 000237  465246 524652
aa 000240  465246 524652
aa 000241  465246 524652
aa 000242  465246 524652
aa 000243  465246 524652
aa 000244  465246 520000
s	"	ymbol relocation bits

aa 000245  000000 000002		" version number of rel-bits structure
aa 000246  000000 000043		" length in bits
aa 000247  740365 770616
	"	Object map

aa 002256  000000 000001		" version number of object_map structure
aa 002257  157142 152137		" "obj_map "
aa 002260  155141 160040
aa 002261  000000 001317		" text offset, length
aa 002262  001320 000361		" def offset, length
aa 002263  001702 000104		" link offset, length
aa 002264  002006 000250		" symbol offset, length
aa 002265  000000 000000		" break map offset, length
aa 002266  340000 000000		" flags: ^bound, relocatable, procedure, standard
aa 002267  002256 000000		" object map pointer, unused


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
