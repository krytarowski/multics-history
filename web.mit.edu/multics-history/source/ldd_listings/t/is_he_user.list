	COMPILATION LISTING OF SEGMENT is_he_user
	Compiled by: Multics PL/I Compiler, Release 27d, of October 11, 1982
	Compiled at: Honeywell LISD Phoenix, System M
	Compiled on: 11/12/82  1237.2 mst Fri
	    Options: optimize map

        1 /* ***********************************************************
        2*   *                                                         *
        3*   * Copyright, (C) Honeywell Information Systems Inc., 1982 *
        4*   *                                                         *
        5*   * Copyright (c) 1972 by Massachusetts Institute of        *
        6*   * Technology and Honeywell Information Systems, Inc.      *
        7*   *                                                         *
        8*   *********************************************************** */
        9 
       10 
       11 is_he_user: proc (name, ans);
       12 
       13 /* IS_HE_USER - active function to tell if user ID is in current URF hash table. */
       14 /* Modified August 1979 by C. Hornig for new URF format */
       15 
       16 dcl  name char (*) unal,
       17      ans char (*) varying,
       18      val fixed bin,
       19      ec fixed bin (35);
       20 
       21 dcl (error_table_$wrong_no_of_args,
       22      error_table_$id_not_found) external fixed bin (35);
       23 
       24 dcl  active_fnc_err_ entry options (variable),
       25      cu_$af_arg_count entry (fixed bin, fixed bin (35)),
       26      urf_manager_$get_entry entry (character (*), pointer, fixed bin (35));
       27 
       28 dcl  null builtin;
       29 
       30 	call cu_$af_arg_count (val, ec);
       31 	if ec = 0 & val ^= 1 then ec = error_table_$wrong_no_of_args;
       32 	if ec ^= 0 then do;
       33 er:	     call active_fnc_err_ (ec, "is_he_user");
       34 	     return;
       35 	end;
       36 
       37 	ans = "false";
       38 	call urf_manager_$get_entry (name, null (), ec);
       39 	if ec = 0 then ans = "true";
       40 	else if ec ^= error_table_$id_not_found then goto er;
       41 	return;
       42      end is_he_user;
	SOURCE FILES USED IN THIS COMPILATION.

LINE      NUMBER  DATE MODIFIED     NAME			PATHNAME
             0    11/12/82  1109.5  is_he_user.pl1                    >spec>on>11/12/82>is_he_user.pl1
	NAMES DECLARED IN THIS COMPILATION.

IDENTIFIER	     OFFSET    LOC STORAGE CLASS   DATA TYPE		ATTRIBUTES AND REFERENCES
								(* indicates a set context)

NAMES DECLARED BY DECLARE STATEMENT.
active_fnc_err_                 000014 constant        entry                    external dcl 24 ref 33
ans                                    parameter       varying char             dcl 16 set ref 11 37* 39*
cu_$af_arg_count                000016 constant        entry                    external dcl 24 ref 30
ec                              000101 automatic       fixed bin(35,0)          dcl 16 set ref 30* 31 31* 32 33* 38* 39 40
error_table_$id_not_found       000012 external static fixed bin(35,0)          dcl 21 ref 40
error_table_$wrong_no_of_args   000010 external static fixed bin(35,0)          dcl 21 ref 31
name                                   parameter       char                     unaligned dcl 16 set ref 11 38*
null                                                   builtin function         dcl 28 ref 38 38
urf_manager_$get_entry          000020 constant        entry                    external dcl 24 ref 38
val                             000100 automatic       fixed bin(17,0)          dcl 16 set ref 30* 31

NAMES DECLARED BY EXPLICIT CONTEXT.
er                              000063 constant        label                    dcl 33 ref 40
is_he_user                      000021 constant        entry                    external dcl 11

THERE WERE NO NAMES DECLARED BY CONTEXT OR IMPLICATION.

STORAGE REQUIREMENTS FOR THIS PROGRAM.

	Object	Text	Link	Symbol	Defs	Static
Start          0       0       264         306     164         274
Length       454     164        22         132     100           0

BLOCK NAME	         STACK SIZE     TYPE		WHY NONQUICK/WHO SHARES STACK FRAME
is_he_user                          100 external procedure  is an external procedure.  

STORAGE FOR AUTOMATIC VARIABLES.

STACK FRAME                 LOC IDENTIFIER                  BLOCK NAME
is_he_user               000100 val                         is_he_user
                         000101 ec                          is_he_user

THE FOLLOWING EXTERNAL OPERATORS ARE USED BY THIS PROGRAM.
call_ext_out_desc   call_ext_out        return              ext_entry_desc

THE FOLLOWING EXTERNAL ENTRIES ARE CALLED BY THIS PROGRAM.
active_fnc_err_               cu_$af_arg_count              urf_manager_$get_entry

THE FOLLOWING EXTERNAL VARIABLES ARE USED BY THIS PROGRAM.
error_table_$id_not_found     error_table_$wrong_no_of_args




   LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC   
     11 000015        30 000041        31 000051        32 000061        33 000063        34 000104        37 000105
     38 000117        39 000143        40 000160        41 000163


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
