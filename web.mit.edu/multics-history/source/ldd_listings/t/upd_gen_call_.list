	COMPILATION LISTING OF SEGMENT upd_gen_call_
	Compiled by: Multics PL/I Compiler, Release 27d, of October 11, 1982
	Compiled at: Honeywell LISD Phoenix, System M
	Compiled on: 11/15/82  1723.5 mst Mon
	    Options: optimize map

        1 /* ***********************************************************
        2*   *                                                         *
        3*   * Copyright, (C) Honeywell Information Systems Inc., 1982 *
        4*   *                                                         *
        5*   * Copyright (c) 1972 by Massachusetts Institute of        *
        6*   * Technology and Honeywell Information Systems, Inc.      *
        7*   *                                                         *
        8*   *********************************************************** */
        9 
       10 
       11 upd_gen_call_:	procedure (lp, ap);
       12 
       13 
       14 /*
       15*
       16*	This procedure is used within the Multics Online Updater
       17*	to call all user-ring task procedures.  The interface is
       18*	identical to that of cu_$gen_call, except that the procedure
       19*	pointer is indirect, pointing to the true procedure pointer
       20*	in the entry table maintained by upd_make_ptr_.  This allows
       21*	task calls to be made in a new process without regenerating
       22*	pointers in the task elements, by simply re-initializing
       23*	the entry table.
       24*
       25*	P. Bos, May 1972
       26*
       27**/
       28 
       29      dcl	lp			ptr,		/* task linkage pointer */
       30 	ap			ptr;		/* task arglist pointer */
       31 
       32      dcl	cu_$gen_call		entry (ptr, ptr),
       33 	hcs_$make_ptr		entry (ptr, char(*), char(*), ptr, fixed bin(35)),
       34 	signal_			entry (char(*), ptr, ptr, ptr);
       35 
       36      dcl (addr, null)		builtin;
       37 
       38      dcl	1 l			based (lp),	/* task linkage table entry */
       39 	  2 procp			ptr,		/* procedure pointer or null */
       40 	  2 rname			char(32),		/* refname of procedure to be called */
       41 	  2 ename			char(32);		/* entry point name to be called */
       42 
       43      dcl	1 s			aligned,		/* status block for "task_linkage_err_" */
       44 	  2 proc			char(32),		/* name of procedure causing error */
       45 	  2 entry			char(32),		/* entry point name */
       46 	  2 code			fixed bin(35),	/* status code */
       47 	  2 sev			fixed bin,	/* severity code */
       48 	  2 rname			char(32),		/* refname of called procedure */
       49 	  2 ename			char(32);		/* entry point name of called procedure */
       50 
       51 /**/
       52 
       53 /*  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  */
       54 
       55 
       56 	if l.procp = null then do;			/* has procedure entry pointer been set up? */
       57 retry:	     call hcs_$make_ptr (null, l.rname, l.ename, l.procp, s.code);	/* no, do it */
       58 	     if s.code ^= 0 then do;			/* error? */
       59 		s.proc, s.entry = "upd_gen_call_";	/* that's us! */
       60 		s.sev = 4;			/* very fatal error */
       61 		s.rname = l.rname;			/* fill in name of called procedure */
       62 		s.ename = l.ename;			/* and entry point */
       63 		call signal_("task_linkage_err_", null, addr (s), null);	/* signal error */
       64 		go to retry;			/* retry call if signal_ returns */
       65 		end;
       66 	     end;
       67 	call cu_$gen_call (l.procp, ap);		/* call task procedure with specified arglist */
       68 
       69 	return;					/* back to task dispatcher */
       70 
       71 
       72 	end upd_gen_call_;
	SOURCE FILES USED IN THIS COMPILATION.

LINE      NUMBER  DATE MODIFIED     NAME			PATHNAME
             0    11/15/82  1513.9  upd_gen_call_.pl1                 >dumps>old>recomp>upd_gen_call_.pl1
	NAMES DECLARED IN THIS COMPILATION.

IDENTIFIER	     OFFSET    LOC STORAGE CLASS   DATA TYPE		ATTRIBUTES AND REFERENCES
								(* indicates a set context)

NAMES DECLARED BY DECLARE STATEMENT.
addr                                                   builtin function         dcl 36 ref 63 63
ap                                     parameter       pointer                  dcl 29 set ref 11 67*
code                     20     000100 automatic       fixed bin(35,0)          level 2 dcl 43 set ref 57* 58
cu_$gen_call                    000010 constant        entry                    external dcl 32 ref 67
ename                    32     000100 automatic       char(32)                 level 2 in structure "s" dcl 43 in procedure
                                                                                  "upd_gen_call_" set ref 62*
ename                    12            based           char(32)                 level 2 in structure "l" packed unaligned dcl 38
                                                                                  in procedure "upd_gen_call_" set ref 57* 62
entry                    10     000100 automatic       char(32)                 level 2 dcl 43 set ref 59*
hcs_$make_ptr                   000012 constant        entry                    external dcl 32 ref 57
l                                      based           structure                level 1 unaligned dcl 38
lp                                     parameter       pointer                  dcl 29 ref 11 56 57 57 57 61 62 67
null                                                   builtin function         dcl 36 ref 56 57 57 63 63 63 63
proc                            000100 automatic       char(32)                 level 2 dcl 43 set ref 59*
procp                                  based           pointer                  level 2 dcl 38 set ref 56 57* 67*
rname                    22     000100 automatic       char(32)                 level 2 in structure "s" dcl 43 in procedure
                                                                                  "upd_gen_call_" set ref 61*
rname                     2            based           char(32)                 level 2 in structure "l" packed unaligned dcl 38
                                                                                  in procedure "upd_gen_call_" set ref 57* 61
s                               000100 automatic       structure                level 1 dcl 43 set ref 63 63
sev                      21     000100 automatic       fixed bin(17,0)          level 2 dcl 43 set ref 60*
signal_                         000014 constant        entry                    external dcl 32 ref 63

NAMES DECLARED BY EXPLICIT CONTEXT.
retry                           000036 constant        label                    dcl 57 ref 64
upd_gen_call_                   000023 constant        entry                    external dcl 11

THERE WERE NO NAMES DECLARED BY CONTEXT OR IMPLICATION.

STORAGE REQUIREMENTS FOR THIS PROGRAM.

	Object	Text	Link	Symbol	Defs	Static
Start          0       0       242         260     170         252
Length       426     170        16         131      51           0

BLOCK NAME	         STACK SIZE     TYPE		WHY NONQUICK/WHO SHARES STACK FRAME
upd_gen_call_                       144 external procedure  is an external procedure.  

STORAGE FOR AUTOMATIC VARIABLES.

STACK FRAME                 LOC IDENTIFIER                  BLOCK NAME
upd_gen_call_            000100 s                           upd_gen_call_

THE FOLLOWING EXTERNAL OPERATORS ARE USED BY THIS PROGRAM.
call_ext_out_desc   call_ext_out        return              ext_entry

THE FOLLOWING EXTERNAL ENTRIES ARE CALLED BY THIS PROGRAM.
cu_$gen_call                  hcs_$make_ptr                 signal_

NO EXTERNAL VARIABLES ARE USED BY THIS PROGRAM.




   LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC   
     11 000017        56 000030        57 000036        58 000072        59 000074        60 000102        61 000104
     62 000112        63 000115        64 000153        67 000154        69 000167


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
