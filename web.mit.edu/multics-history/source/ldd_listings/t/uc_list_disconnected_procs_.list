	COMPILATION LISTING OF SEGMENT uc_list_disconnected_procs_
	Compiled by: Multics PL/I Compiler, Release 30, of February 16, 1988
	Compiled at: Honeywell Bull, Phoenix AZ, SysM
	Compiled on: 07/13/88  1028.7 mst Wed
	    Options: optimize map

        1 /****^  ********************************************
        2*        *                                          *
        3*        * Copyright, (C) Honeywell Bull Inc., 1987 *
        4*        *                                          *
        5*        ******************************************** */
        6 
        7 /* *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */
        8 /*							       */
        9 /* This module is part of the Multics Network Architecture (MNA) version of  */
       10 /* user control.  MNA user control serves users coming into Multics via      */
       11 /* separate networks (eg, the Distributed Systems Architecture (DSA)	       */
       12 /* network.  MNA user control is not used for logins through the Multics     */
       13 /* Communications System (MCS).  A separate MCS user control system serves   */
       14 /* MCS users.						       */
       15 /*							       */
       16 /* To Be Supplied:						       */
       17 /*  1) Brief module description.  See MDD010 or MTBs 751 and 752 for details */
       18 /*     about this module, and its relationship to modules in the MCS user    */
       19 /*     control system.					       */
       20 /*  2) Operator error message documentation.  This program calls	       */
       21 /*     sys_log_$general but does not contain the required descriptions of    */
       22 /*     these messages.  This omission was waived for initial installation    */
       23 /*     of the subsystem by the auditor, security coordinator, and by MDC     */
       24 /*     management.						       */
       25 /*							       */
       26 /* *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */
       27 
       28 /****^  HISTORY COMMENTS:
       29*  1) change(86-04-27,Swenson), approve(87-07-13,MCR7737),
       30*     audit(87-05-16,GDixon), install(87-08-04,MR12.1-1055):
       31*     Initial coding.
       32*  2) change(87-04-27,GDixon), approve(87-07-13,MCR7737),
       33*     audit(87-07-30,Brunelle), install(87-08-04,MR12.1-1055):
       34*     Upgraded for change to answer_table.incl.pl1 and user_table_entry.incl.pl1
       35*  3) change(87-05-16,GDixon), approve(87-07-13,MCR7737),
       36*     audit(87-07-30,Brunelle), install(87-08-04,MR12.1-1055):
       37*      A) Add cleanup handler.
       38*      B) Convert to sys_log_$general.
       39*  4) change(87-05-20,GDixon), approve(87-07-13,MCR7737),
       40*     audit(87-07-30,Brunelle), install(87-08-04,MR12.1-1055):
       41*      A) Correct problem which damaged ute.ute_index.
       42*  5) change(87-07-29,GDixon), approve(87-07-29,MCR7737),
       43*     audit(87-07-30,Brunelle), install(87-08-04,MR12.1-1055):
       44*      A) Correctly handle case where number of disconnected processes exceeds
       45*         user.n_disconnected.
       46*                                                   END HISTORY COMMENTS */
       47 
       48 /* format: style4,indattr */
       49 
       50 uc_list_disconnected_procs_:
       51      procedure (P_utep, P_area_ptr, P_uc_disconnected_process_list_ptr);
       52 
       53 /* Parameters */
       54 
       55 dcl  P_utep	        ptr parameter;
       56 dcl  P_area_ptr	        ptr parameter;
       57 dcl  P_uc_disconnected_process_list_ptr ptr parameter;
       58 
       59 /* Automatic */
       60 
       61 dcl  area_ptr	        ptr automatic;
       62 dcl  code		        fixed bin (35) automatic;
       63 dcl  processes_found        fixed bin automatic;
       64 dcl  temp_list	        ptr automatic;
       65 dcl  temp_utep	        ptr automatic;
       66 dcl  ute_index	        fixed bin;
       67 
       68 /* Based */
       69 
       70 dcl  system_area	        area based (area_ptr);
       71 
       72 /* Entries */
       73 
       74 dcl  get_system_free_area_  entry () returns (ptr);
       75 
       76 /* External */
       77 
       78 dcl  error_table_$null_info_ptr fixed bin (35) ext static;
       79 
       80 /* Constant */
       81 
       82 dcl  ME		        char (27) initial ("uc_list_disconnected_procs_") internal static options (constant);
       83 
       84 /* Builtins */
       85 
       86 dcl  (addr, null)	        builtin;
       87 
       88 
       89 /* Conditions */
       90 
       91 dcl  cleanup	        condition;
       92 
       93 /* Program */
       94 
       95 	utep = P_utep;
       96 	area_ptr = P_area_ptr;
       97 	uc_disconnected_process_list_ptr = null ();
       98 	code = 0;
       99 
      100 	if utep = null () then
      101 	     call Abort (error_table_$null_info_ptr,
      102 		"Pointer to UTE is null.");
      103 
      104 	pdtep = ute.pdtep;
      105 	if pdtep = null () then
      106 	     call Abort (-1, "Null PDT entry pointer for ^a.^a ^a.",
      107 		ute.person, ute.project, ute.tty_name);
      108 
      109 /**** If the user has no disconnected processes, save ourselves a lot of
      110*      work and time by just returning a null pointer to the disconnected
      111*      process list information. */
      112 
      113 	if user.n_disconnected = 0 then
      114 	     goto RETURN;
      115 
      116 	if area_ptr = null () then
      117 	     area_ptr = get_system_free_area_ ();
      118 
      119 	temp_list = null;
      120 	on cleanup begin;
      121 	     if temp_list ^= null &
      122 		temp_list ^= uc_disconnected_process_list_ptr
      123 	     then free temp_list -> uc_disconnected_process_list in (system_area);
      124 	     if uc_disconnected_process_list_ptr ^= null
      125 	     then free uc_disconnected_process_list in (system_area);
      126 	end;
      127 
      128 	uc_n_disconnected_processes = user.n_disconnected;
      129 	allocate uc_disconnected_process_list in (system_area);
      130 	uc_disconnected_process_list.version =
      131 	     UC_DISCONNECTED_PROCESS_LIST_VERSION_1;
      132 	uc_disconnected_process_list.n_disconnected_processes =
      133 	     uc_n_disconnected_processes;
      134 
      135 	ansp = as_data_$ansp;
      136 	processes_found = 0;
      137 
      138 	do ute_index = 1 to anstbl.current_size;
      139 	     temp_utep = addr (anstbl.entry (ute_index));
      140 	     if temp_utep -> ute.active > NOW_LOGGED_IN &
      141 		temp_utep ^= utep &
      142 		temp_utep -> ute.anonymous = 0 &
      143 		temp_utep -> ute.person = ute.person &
      144 		temp_utep -> ute.project = ute.project &
      145 		temp_utep -> ute.disconnected then do;
      146 		processes_found = processes_found + 1;	/* count */
      147 		if processes_found >
      148 		     uc_disconnected_process_list.n_disconnected_processes
      149 		     then do;
      150 		     uc_n_disconnected_processes = processes_found;
      151 		     allocate uc_disconnected_process_list in (system_area)
      152 			set (temp_list);
      153 		     temp_list -> uc_disconnected_process_list.n_disconnected_processes =
      154 			uc_disconnected_process_list.n_disconnected_processes;
      155 		     temp_list -> uc_disconnected_process_list = uc_disconnected_process_list;
      156 		     free uc_disconnected_process_list in (system_area);
      157 		     uc_disconnected_process_list_ptr = temp_list;
      158 		     temp_list = null;
      159 		     uc_disconnected_process_list.n_disconnected_processes = processes_found;
      160 		end;
      161 		uc_disconnected_process_list.process (processes_found).utep = temp_utep;
      162 	     end;
      163 	end;
      164 
      165 	if processes_found ^= user.n_disconnected then do;
      166 	     call Error_No_Abort (
      167 		"Disconnected process count = ^d; PDT entry = ^d.",
      168 		processes_found, user.n_disconnected);
      169 	end;
      170 
      171 RETURN:
      172 	P_uc_disconnected_process_list_ptr =
      173 	     uc_disconnected_process_list_ptr;
      174 	return;
      175 
      176 ABORT_RETURN:
      177 	if uc_disconnected_process_list_ptr ^= null () then do;
      178 	     free uc_disconnected_process_list in (system_area);
      179 	     uc_disconnected_process_list_ptr = null ();
      180 	end;
      181 	goto RETURN;
      182 
      183 /* *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */
      184 /*							       */
      185 /* Abort: Stop disconnected process list operation by emitting an	       */
      186 /* explanatory as log message, and returning nonzero code to our caller.     */
      187 /*							       */
      188 /* Syntax:  call Abort (code, ioa_ctl, args);			       */
      189 /*							       */
      190 /*							       */
      191 /* Error_No_Abort: Add error message to as log, but do not stop	       */
      192 /* the list operation.					       */
      193 /*							       */
      194 /* Syntax:  call Error_No_Abort (ioa_ctl, args);			       */
      195 /*							       */
      196 /* *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */
      197 
      198 Abort:
      199      procedure options (variable);
      200 
      201 dcl  cu_$arg_list_ptr       entry returns (ptr);
      202 dcl  sys_log_$general       entry (ptr);
      203 
      204 	sl_info = sl_info_code_msg;
      205 	sl_info.arg_list_ptr = cu_$arg_list_ptr ();
      206 	sl_info.severity = SL_LOG_SILENT;
      207 	sl_info.caller = ME;
      208 	call sys_log_$general (addr (sl_info));
      209 	code = sl_info.code;
      210 	go to ABORT_RETURN;
      211 
      212 Error_No_Abort:
      213      entry options (variable);
      214 
      215 	sl_info = sl_info_msg;
      216 	sl_info.arg_list_ptr = cu_$arg_list_ptr ();
      217 	sl_info.severity = SL_LOG_SILENT;
      218 	sl_info.caller = ME;
      219 	call sys_log_$general (addr (sl_info));
      220 	return;
      221 
      222      end Abort;
      223 
      224 /*  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *   */
      225 
      226 /* format: off */
      227  /* BEGIN INCLUDE FILE ... answer_table.incl.pl1 */
  1     2 
  1     3 /* *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */
  1     4 /*							       */
  1     5 /* The answer table has one entry per "login instance" whether completed or  */
  1     6 /* not.  It is connected to the Channel Definition Table by the pointer      */
  1     7 /* "channel".  The header is used mostly by dialup_.		       */
  1     8 /*							       */
  1     9 /* Programs which use this file must also include user_table_header.incl.pl1 */
  1    10 /*							       */
  1    11 /* *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */
  1    12 
  1    13 /****^  HISTORY COMMENTS:
  1    14*  1) change(81-09-10,Kittlitz), approve(), audit(), install():
  1    15*     Replace anstbl.incl.pl1.
  1    16*  2) change(85-01-15,Swenson), approve(), audit(), install():
  1    17*     Add anstbl.session_uid_counter.
  1    18*  3) change(85-08-21,Coren), approve(), audit(), install():
  1    19*     Add anstbl.message_update_time and named constants for values of
  1    20*     anstbl.session, and to make all padding explicit.
  1    21*  4) change(85-08-23,Coren), approve(), audit(), install():
  1    22*     Change "entry" to a placeholder so as not to require
  1    23*     user_table_entry.incl.pl1.
  1    24*  5) change(86-06-29,Swenson), approve(87-07-13,MCR7741),
  1    25*     audit(87-04-14,GDixon), install(87-08-04,MR12.1-1056):
  1    26*     Added the flag login_server_present which indicates whether a login
  1    27*     server request has been received.  This is used to determine whether
  1    28*     dial_ctl_ should call uc_cleanup_network_dials_ (and thus
  1    29*     hpriv_connection_list_, which only exists with the MNA RPQ software).
  1    30*  6) change(87-04-14,GDixon), approve(87-07-13,MCR7741),
  1    31*     audit(87-07-16,Brunelle), install(87-08-04,MR12.1-1056):
  1    32*      A) Moved constants for ute.pw_flags.mask_ctl into
  1    33*         user_table_entry.incl.pl1.
  1    34*      B) Added common table header to all user tables.
  1    35*                                                   END HISTORY COMMENTS */
  1    36 
  1    37 /* *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */
  1    38 /*							       */
  1    39 /* The anstbl structure below is divided into sections.  Each section begins */
  1    40 /* with a comment describing the elements in the section.  Elements are      */
  1    41 /* placed within a section, based upon their function or the programs that   */
  1    42 /* use them.  Each section begins on a double word and is an even number of  */
  1    43 /* words long.						       */
  1    44 /*							       */
  1    45 /* *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */
  1    46 
  1    47 
  1    48 
  1    49 /* format: style4 */
  1    50 
  1    51 dcl  ANSTBL_version_4 static options (constant) init (4);	/* version of this declaration */
  1    52 
  1    53 dcl  ansp ptr automatic init (null);
  1    54 
  1    55 dcl  1 anstbl based (ansp) aligned,			/* Structure of answer table */
  1    56        2 header like ut_header,			/* Header common to all user tables. */
  1    57 
  1    58 /* Counter elements. */
  1    59        2 nlin fixed bin,				/* number of active lines */
  1    60        2 mxlin fixed bin,				/* maximum number of active lines */
  1    61        2 n_users fixed bin,				/* number of logged-in users */
  1    62        2 max_users fixed bin,				/* maximum number of users allowed */
  1    63        2 n_units fixed bin,				/* number of logged in units */
  1    64        2 max_units fixed bin,				/* maximum number of units */
  1    65        2 n_sessions fixed bin,			/* number of Multics sessions */
  1    66        2 n_pad fixed bin,
  1    67 
  1    68 /* Name elements. */
  1    69        2 sysdir char (64) unal,			/* name of main system control directory */
  1    70        2 as_tty char (8) unal,			/* name of main answering service device. */
  1    71 
  1    72 /* Login elements. */
  1    73        2 login_word char (8) unal,			/* login word if special_session=1  */
  1    74        2 session char (8) unal,			/* session indicator */
  1    75        2 special_message char (128) unal,		/* message to be printed for special session */
  1    76        2 message_update_time fixed bin (71),		/* time at which special_message was last updated */
  1    77        2 message_lng fixed bin,			/* length of special message */
  1    78        2 login_pad fixed bin,
  1    79 
  1    80 /* Table update elements. */
  1    81        2 lock_count fixed bin,			/* global lock for all system control tables */
  1    82        2 update_pending bit (1) aligned,		/* flag indicating that update is required */
  1    83        2 update_channel fixed binary (71),		/* event channel of update procedure */
  1    84        2 acct_update_chn fixed bin (71) aligned,		/* Timer IPC channel */
  1    85        2 acct_last_update_time fixed bin (71) aligned,	/* Time of last accounting update */
  1    86        2 acct_alarm_fail fixed bin,			/* non-zero if alarm has failed */
  1    87        2 update_pad fixed bin,
  1    88 
  1    89 /* dialup_ data values. */
  1    90        2 current_time fixed bin (71),			/* Time of last transaction */
  1    91        2 processid_index fixed bin (18),		/* unique index for process id generation */
  1    92        2 session_uid_counter fixed bin (35),		/* current session_uid */
  1    93 
  1    94 /* load_ctl_ elements. */
  1    95        2 shift fixed bin,				/* Shift, set by act_ctl_ */
  1    96        2 auto_maxu fixed bin,				/* 0 = manual, 1 = config, 2 = load-level */
  1    97        2 extra_units fixed bin,			/* Total daemon and abs units. */
  1    98 						/* load_ctl_ load leveling desired response range: */
  1    99        2 response_high fixed bin,			/* bad if user response time slower than this */
  1   100        2 response_low fixed bin,			/* bad if user response time faster than this */
  1   101        2 load_ctl_pad fixed bin,
  1   102 
  1   103 /* Login server request server data. */
  1   104        2 ls_request_server_event_channel fixed bin (71),	/* channel for login server requests */
  1   105        2 ls_request_server_process_id bit (36) aligned,	/* process serving login server requests */
  1   106        2 login_server_present bit (1) aligned,		/* On IFF a login server request has been processed */
  1   107 
  1   108        2 entry_pad (28) fixed bin,			/* pad to 128 words */
  1   109        2 entry (0 refer (anstbl.current_size)),		/* user entries */
  1   110          3 contents (UTE_SIZE) fixed bin;
  1   111 
  1   112 /* constants */
  1   113 
  1   114 /* values for anstbl.session */
  1   115 
  1   116 dcl  (AT_NORMAL init ("normal  "),
  1   117      AT_SPECIAL init ("special "),
  1   118      AT_SHUTDOWN init ("shutdown")) char (8) internal static options (constant);
  1   119 
  1   120 dcl  UTE_SIZE fixed bin internal static initial (300);
  1   121 
  1   122 /* END INCLUDE FILE ... answer_table.incl.pl1 */
      227 
      228  /* BEGIN INCLUDE FILE ... as_data_.incl.pl1 ... */
  2     2 
  2     3 /* format: style4 */
  2     4 
  2     5 /* This file must be kept in sync with as_data_.alm */
  2     6 
  2     7 /****^  HISTORY COMMENTS:
  2     8*  1) change(86-09-21,Beattie), approve(86-09-22,MCR7542),
  2     9*     audit(86-10-31,Brunelle), install(86-11-12,MR12.0-1211):
  2    10*     Remove references to the 963 and 029 preaccess commands and remove support
  2    11*     for ARDS, 202_ETX, 2741 and 1050 in system interfaces.
  2    12*  2) change(86-09-25,Swenson), approve(87-07-20,MCR7737),
  2    13*     audit(87-07-20,GDixon), install(87-08-04,MR12.1-1056):
  2    14*     Add references to as_data_ entrypoints added for Login Server.
  2    15*  3) change(87-03-03,Brunelle), approve(87-07-20,MCR7697),
  2    16*     audit(87-07-20,GDixon), install(87-08-04,MR12.1-1056):
  2    17*     Added new user signal field of inacrcvd (14) to handle inactivity response
  2    18*     from user.
  2    19*                                                   END HISTORY COMMENTS */
  2    20 
  2    21 dcl  as_data_$BS char (1) aligned ext static;		/* BACKSPACE character */
  2    22 dcl  as_data_$CR char (1) aligned ext static;		/* CARRIAGE RETURN character */
  2    23 dcl  as_data_$abs_dim char (32) ext static;		/* absentee DIM */
  2    24 dcl  as_data_$acct_update_priority fixed bin ext static;	/* accounting update IPC priority */
  2    25 dcl  as_data_$acsdir char (168) ext static;		/* Access Control Segment directory */
  2    26 dcl  as_data_$ansp ptr ext static;			/* answer_table */
  2    27 dcl  as_data_$as_procid bit (36) aligned ext static;	/* Answering Service process id */
  2    28 dcl  as_data_$as_ring fixed bin (3) ext static;		/* AS operating ring */
  2    29 dcl  as_data_$as_tty char (6);			/* AS master tty channel */
  2    30 dcl  as_data_$asmtp ptr ext static;			/* AS meter table */
  2    31 dcl  as_data_$autp ptr ext static;			/* absentee_user_table */
  2    32 dcl  as_data_$buzzardp ptr ext static;			/* dpg_ list of buteo processes */
  2    33 dcl  as_data_$cdtp ptr ext static;			/* CDT */
  2    34 dcl  as_data_$default_weight fixed bin (35) ext;		/* default user process load control weight */
  2    35 dcl  as_data_$devtabp ptr ext static;			/* device_table */
  2    36 dcl  as_data_$dft_user_ring fixed bin (3) ext static;	/* default user ring */
  2    37 dcl  as_data_$dutp ptr ext static;			/* daemon_user_table */
  2    38 dcl  as_data_$g115_dim char (32) ext static;
  2    39 dcl  as_data_$lct_initialized bit (1) aligned ext static;	/* LCT allocated in ring 0 */
  2    40 dcl  as_data_$lct_size fixed bin ext static;		/* CDT tty channels + spares */
  2    41 dcl  as_data_$max_user_ring fixed bin (3) ext static;	/* maximum user ring */
  2    42 dcl  as_data_$mgtp ptr ext static;			/* master group table */
  2    43 dcl  as_data_$mrd_dim char (32) ext static;		/* daemon's message routing DIM */
  2    44 dcl  as_data_$ntty_dim char (32) ext static;		/* network connection DIM */
  2    45 dcl  as_data_$pdtdir char (168) ext static;		/* PDT directory */
  2    46 dcl  as_data_$pit_ptr ptr ext static;			/* pit_temp_ */
  2    47 dcl  as_data_$rcpdir char (168) ext static;		/* RCP directory */
  2    48 dcl  as_data_$request_priority fixed bin ext static;
  2    49 dcl  as_data_$rs_ptrs (0:9) ptr ext static;		/* rate_structures */
  2    50 dcl  as_data_$rtdtp ptr ext static;			/* RTDT */
  2    51 dcl  as_data_$sat_htp ptr ext static;			/* SAT hash table */
  2    52 dcl  as_data_$satp ptr ext static;			/* SAT */
  2    53 dcl  as_data_$suffix (0:9) char (2) unaligned ext static;
  2    54 dcl  as_data_$sysdir char (168) ext static;		/* system control directory */
  2    55 dcl  as_data_$teens_suffix (10:19) char (2) unaligned ext static;
  2    56 dcl  as_data_$terminet_tabs_string char (144) varying ext static;
  2    57 dcl  as_data_$tty_dim char (32) ext static;		/* standard interactive DIM */
  2    58 dcl  as_data_$update_priority fixed bin ext static;	/* ??? */
  2    59 dcl  as_data_$version char (8) ext static;		/* AS version */
  2    60 dcl  as_data_$whoptr ptr ext static;			/* whotab */
  2    61 
  2    62 dcl  1 as_data_$login_args aligned ext static,		/* control arguments for login */
  2    63        2 n_login_args fixed bin,
  2    64        2 pad fixed bin,
  2    65        2 login_args (55 /* as_data_$login_args.n_login_args */) char (24) unaligned;
  2    66 
  2    67 dcl  1 as_data_$signal_types ext static aligned,		/* IPC process control signals */
  2    68        2 n_signals fixed bin,
  2    69        2 pad fixed bin,
  2    70        2 signals (14 /* as_data_$signal_types.n_signals */) char (8) unaligned;
  2    71 
  2    72 dcl  1 as_data_$system_signal_types ext static aligned,	/* IPC process control signals */
  2    73        2 n_system_signals fixed bin,
  2    74        2 pad fixed bin,
  2    75        2 system_signals (10 /* as_data_$system_signal_types.n_system_signals */) char (8) unaligned;
  2    76 
  2    77 dcl  as_data_$login_words fixed bin ext static aligned,
  2    78 						/* interactive login words */
  2    79      1 as_data_login_words aligned based (addr (as_data_$login_words)),
  2    80        2 n_words fixed bin,
  2    81        2 pad fixed bin,
  2    82        2 words (0 refer (as_data_login_words.n_words)) char (16) unaligned;
  2    83 
  2    84 dcl  as_data_$debug_flag bit (1) aligned external static;
  2    85 dcl  as_data_$ls_request_server_info_ptr ptr external static;
  2    86 dcl  as_data_$ls_message_buffer_cur_lth fixed bin (18) external static;
  2    87 dcl  as_data_$ls_message_buffer_max_lth fixed bin (18) external static;
  2    88 dcl  as_data_$ls_message_buffer_ptr ptr external static;
  2    89 
  2    90 /* END INCLUDE FILE ... as_data_.incl.pl1 ... */
      228 
      229  /* BEGIN INCLUDE FILE ... dialup_values.incl.pl1 */
  3     2 
  3     3 /* format: style4 */
  3     4 
  3     5 /* Values for "cdte.tra_vec" used by dialup_ and others. */
  3     6 
  3     7 /* Modified by T. Casey April 1976 to add WAIT_NEW_PASSWORD
  3     8*   -		in 1977 and 1978 to add WAIT_(GREETING_MSG DELETE_CHANNEL)
  3     9*   -		and in October 1979 to add WAIT_CONNECT_REQUEST
  3    10*   Modified by Robert Coren in May 1981 to add TANDD_ATTACH values and 
  3    11*		WAIT_DISCARD_WAKEUP
  3    12*   Modified by T. Casey, July 1981, for MR9.0, to add WAIT_BEFORE_HANGUP.
  3    13*   Modified by E. N. Kittlitz, July 1982, to add TTY_MASKED.
  3    14**/
  3    15 
  3    16 /****^  HISTORY COMMENTS:
  3    17*  1) change(87-04-20,GDixon), approve(87-07-13,MCR7741),
  3    18*     audit(87-07-16,Brunelle), install(87-08-04,MR12.1-1056):
  3    19*     Add constant arrays naming cdte.state, cdte.tra_vec and ute.active values.
  3    20*  2) change(87-05-11,GDixon), approve(87-07-13,MCR7741),
  3    21*     audit(87-07-16,Brunelle), install(87-08-04,MR12.1-1056):
  3    22*     Add named constants for instance tags.
  3    23*                                                   END HISTORY COMMENTS */
  3    24 
  3    25 dcl  (WAIT_DIALUP init (1),				/* Channel waiting for dialup. */
  3    26      WAIT_ANSWERBACK initial (2),			/* WRU sent, waiting for reply */
  3    27      WAIT_LOGIN_LINE init (3),			/* Greeting typed, wait for login command. */
  3    28      WAIT_LOGIN_ARGS init (4),			/* Want rest of login line */
  3    29      WAIT_OLD_PASSWORD init (5),			/* "-cpw" was specified. Wait for old password. */
  3    30      WAIT_PASSWORD init (6),				/* Waiting for password. (If "-cpw", repeat of new one.) */
  3    31      WAIT_NEW_PASSWORD init (7),			/* "-cpw" was specified. Wait for new password */
  3    32      WAIT_LOGOUT_SIG init (8),			/* Channel is hooked up. Wait for logout. */
  3    33      WAIT_LOGOUT init (9),				/* A logout has been requested. Wait for process to die */
  3    34      WAIT_LOGOUT_HOLD init (10),			/* As above but don't hang up when it dies. */
  3    35      WAIT_DETACH init (11),				/* As above but ignore channel afterwards. */
  3    36      WAIT_NEW_PROC init (12),				/* As above but make new process and continue. */
  3    37      WAIT_REMOVE init (13),				/* As above but completely expunge channel. */
  3    38      WAIT_FIN_PRIV_ATTACH init (14),			/* When channel dials up, connect it to user */
  3    39      WAIT_DIAL_RELEASE init (15),			/* Waiting for master process to release. */
  3    40      WAIT_DIAL_OUT init (16),				/* Waiting for auto call to complete */
  3    41      WAIT_HANGUP init (17),				/* Wait for the hangup event to occur for a channel */
  3    42      WAIT_SLAVE_REQUEST init (18),			/* Ignore line until someone asks */
  3    43      WAIT_GREETING_MSG init (19),			/* Print greeting message and wait for login line */
  3    44      WAIT_DELETE_CHANNEL init (20),			/* Channel deleted - mark cdte after process is destroyed */
  3    45      WAIT_CONNECT_REQUEST init (21),			/* logged in; awaiting request re disconnected processes */
  3    46      WAIT_TANDD_HANGUP init (22),			/* when channel hangs up, proceed with t & d attachment */
  3    47      WAIT_FIN_TANDD_ATTACH init (23),			/* when channel dials up, finish t & d attachment */
  3    48      WAIT_DISCARD_WAKEUPS init (24),			/* disregard all wakeups on channel */
  3    49      WAIT_BEFORE_HANGUP init (25),			/* allow output to print before hanging up */
  3    50      WAIT_DESTROY_REQUEST init (26),			/* waiting to continue with destroy request after process has destroyed itself */
  3    51      WAIT_NEW_PROC_REQUEST init (27)			/* waiting to continue with new_proc request after process has destroyed itself */
  3    52      ) fixed bin internal static options (constant);
  3    53 
  3    54 dcl  TRA_VEC_VALUES (0:13) char (32) aligned int static options (constant) init
  3    55 						/* names of ute.destroy_flag values */
  3    56 	("", "wait dialup", "wait answerback", "wait login line", /*  0-3  */
  3    57 	"wait login args", "wait old password", "wait password",  /*  4-6  */
  3    58 	"wait new password", "wait logout signal", "wait logout", /*  7-9  */
  3    59 	"wait logout hold", "wait detach", "wait new proc",       /* 10-12 */
  3    60 	"wait remove");				        /*   -13 */
  3    61 
  3    62 /* Values for "cdte.state", typewriter state. */
  3    63 
  3    64 dcl  (TTY_MASKED init (-1),				/* Terminal channel is there, but masked by MCS */
  3    65      TTY_HUNG init (1),				/* Terminal channel is there, but dead. */
  3    66      TTY_KNOWN init (2),				/* Channel being "listened" to, awaiting dialup. */
  3    67      TTY_DIALED init (5)				/* Channel is dialed up. This is normal state. */
  3    68      ) fixed bin internal static options (constant);
  3    69 
  3    70 dcl  STATE_VALUES (-1:5) char (15) aligned int static options (constant) init
  3    71 						/* names of cdte.state values */
  3    72 	("masked", "dead", "hung up", "listening", "", "", "dialed up");
  3    73 
  3    74 /* Values for "cdte.in_use" and "ate.active" */
  3    75 
  3    76 dcl  (NOW_FREE init (0),				/* Entry is empty. */
  3    77      NOW_HUNG_UP init (1),				/* Entry is usable but tty is hung up. */
  3    78      NOW_LISTENING init (2),				/* Entry is waiting for phone call. */
  3    79      NOW_DIALED init (3),				/* Entry is connected but login not complete. */
  3    80      NOW_LOGGED_IN init (4),				/* Entry is logged in but no process. */
  3    81      NOW_HAS_PROCESS init (5),			/* Entry has a valid process. */
  3    82      NOW_DIALING init (6),				/* Entry (auto_call line) is dialing */
  3    83      NOW_DIALED_OUT init (7)				/* Entry (auto_call line) is in use */
  3    84      ) fixed bin internal static options (constant);
  3    85 
  3    86 dcl  ACTIVE_VALUES (0:5) char (18) aligned int static options (constant) init
  3    87 						/* names of ute.active values */
  3    88 	("free", "hung-up", "listening", "dialed", "logged in, no proc", "logged in & proc");
  3    89 
  3    90 
  3    91 /**** Values for ute.tag */
  3    92 
  3    93 dcl (TAG_INTERACTIVE init("a"),
  3    94      TAG_UFT init("f"),
  3    95      TAG_ABSENTEE init("m"),
  3    96      TAG_PROXY init("p"),
  3    97      TAG_DAEMON init("z")
  3    98      ) char(1) int static options(constant);
  3    99 
  3   100 
  3   101 /**** Following are constants used to indicate to the process termination
  3   102*      handler the reason for the process termination.  They are used by
  3   103*      uc_proc_term_handler_, as well as uc_ls_new_proc_request_ and
  3   104*      uc_ls_destroy_request_. */
  3   105 
  3   106 dcl  (
  3   107      PT_FPE initial (1),
  3   108      PT_LOGOUT initial (4),
  3   109      PT_NEW_PROC_AUTH initial (13),
  3   110      PT_HANGUP initial (20),
  3   111      PT_SHUTDOWN initial (21),
  3   112      PT_BUMP initial (22),
  3   113      PT_ALARM initial (23),
  3   114      PT_DETACH initial (24),
  3   115      PT_UNBUMP initial (25),
  3   116      PT_OPERATOR_TERMINATE initial (27),
  3   117      PT_DESTROY_REQUEST initial (30),
  3   118      PT_NEW_PROC_REQUEST initial (31)
  3   119      ) fixed bin (17) internal static options (constant);
  3   120 
  3   121 /**** Values for ute.preempted:
  3   122*  -1  user unbumped after term signal sent
  3   123*   0  user unbumped; ignore alarm___
  3   124*   1  value internally used in load_ctl_
  3   125*   2  user bumped; when alarm___ comes in, send term signal
  3   126*   3  term signal sent; destroy process if termsgnl, alarm___, or cpulimit 
  3   127*      signals come in
  3   128*   4  user bumped; process sick, so destroy without sending term signal
  3   129*   5  trm_ signal sent, termsgnl received; (if still 3, we never got the 
  3   130*      termsgnl).						       */
  3   131 
  3   132 dcl  (
  3   133      PREEMPT_UNBUMP initial (-1),
  3   134      PREEMPT_UNBUMP_IGNORE_ALARM initial (0),
  3   135      PREEMPT_LOAD_CTL initial (1),
  3   136      PREEMPT_BUMPED initial (2),
  3   137      PREEMPT_TERM_SENT initial (3),
  3   138      PREEMPT_BUMPED_NO_TERM initial (4),
  3   139      PREEMPT_TERMSGNL_RECEIVED initial (5)
  3   140      ) fixed bin (17) internal static options(constant);
  3   141 
  3   142 dcl  PREEMPT_VALUES (-1:5) char(28) varying int static options(constant) init(
  3   143 	"unbumped",
  3   144 	"not bumped, ignore alarm___",
  3   145 	"load_ctl_",
  3   146 	"bumped",
  3   147 	"bumped, trm_ sent",
  3   148 	"bumped without trm_",
  3   149 	"bumped, termsgnl received");
  3   150 
  3   151 /* END INCLUDE FILE ... dialup_values.incl.pl1 */
      229 
      230  /* BEGIN INCLUDE FILE ... pdt.incl.pl1 */
  4     2 /* Requires user_attributes.incl.pl1 */
  4     3 
  4     4 /* Modified 740723 by PG to add AIM info */
  4     5 /* Modified 750604 by T. Casey to add priority scheduler parameters */
  4     6 /* Modified May 1976 by T. Casey to add cutoff warning thresholds and change version to 3 */
  4     7 /* Modified May 1977 by John Gintell to add reqfile, projfile, and SAT to header */
  4     8 /* Modified May 1978 by T. Casey to add pdir_quota to user entry */
  4     9 /* Modified June 1978 by T. Casey to add rel ptr to pdt hash table */
  4    10 /* Modified November 1978 by T. Casey to add max_(fore back)ground, n_(fore back)ground and abs_foreground_cpu_limit */
  4    11 /* Modified October 1979 by T. Casey to add counters for interactive and disconnected processes. */
  4    12 /* Modified Feb 1980 by M. B. Armstrong to implement multiple rate structures (UNCA). */
  4    13 /* Modified May 1980 by R. McDonald to use iod cpu time field for page charging (UNCA) */
  4    14 /* Modified December 1981 by E. N. Kittlitz for user_warn fields */
  4    15 /* Modified January 1982 by E. N. Kittlitz for user_attributes.incl.pl1 changes */
  4    16 /* Modified September 1982 by E. N. Kittlitz for default ring. */
  4    17 /* Modified 1984-07-05 BIM for min authorization, version to 4 */
  4    18 
  4    19 dcl (PDT_version init (4),				/* version of this declaration */
  4    20      PDT_header_lth init (256),			/* length in words of PDT head */
  4    21      PDT_entry_lth init (256),			/* length in words of PDT entry */
  4    22 
  4    23      PDT_project_name_length init (9),			/* proper length of pdt.project_name */
  4    24      PDT_person_id_length init (22)			/* proper length of user.person_id */
  4    25      ) fixed bin internal static options (constant);
  4    26 
  4    27 dcl 1 pdt based (pdtp) aligned,
  4    28 
  5     1 /* BEGIN INCLUDE FILE author.incl.pl1 */
  5     2 
  5     3 /* the "author" items must always be the first ones in the table. The
  5     4*   module which moves the converted table to the System Control process
  5     5*   fills in these data items and assumes them to be at the head of the segment
  5     6*   regardless of the specific table's actual declaration. The variables
  5     7*   "lock" and "last_install_time" used to be "process_id" and "ev_channel"
  5     8*    respectively. For tables installed in multiple processes, these
  5     9*    are to be used to lock out multiple installations. */
  5    10 
  5    11 /*  Lock should be used as a modification lock. Since, in general,
  5    12*    entries may not be moved in system tables, even by installations,
  5    13*    it is sufficient for only installers and programs that change threads
  5    14*    to set or respect the lock. Simply updating data in an entry
  5    15*    requires no such protection.
  5    16*
  5    17*    Last_install_time is used by readers of system tables to detect
  5    18*    installations or other serious modifications. By checking it before
  5    19*    and after copying a block of data, they can be protected against
  5    20*    modifications.
  5    21*
  5    22*    Modules that set the lock should save proc_group_id, and then
  5    23*    put their group id there for the time they hold the lock.
  5    24*    if they do not actually install the, they should restore the group id.
  5    25**/
  5    26 
  5    27     2 author aligned,				/* validation data about table's author */
  5    28       3 proc_group_id char (32),			/* process-group-id  (personid.projectid.tag) */
  5    29       3 lock bit (36),				/* installation lock */
  5    30       3 update_attributes bit (1) unal,			/* update/add/delete attributes */
  5    31       3 update_authorization bit (1) unal,		/* update only authorizations */
  5    32       3 deferral_notified bit (1) unal,			/* installer notified of deferral of installation */
  5    33       3 pad bit (33) unaligned,
  5    34       3 last_install_time fixed bin (71),
  5    35       3 table char (4),				/* name of table, e.g., SAT MGT TTT RTDT PDT etc. */
  5    36       3 w_dir char (64),				/* author's working directory */
  5    37 
  5    38 /* END INCLUDE FILE author.incl.pl1 */
  4    29 
  4    30     2 max_size fixed bin,				/* max number of entries table can grow */
  4    31     2 current_size fixed bin,				/* current size of table (in entries) */
  4    32     2 version fixed bin,				/* table version */
  4    33     2 freep fixed bin,				/* relptr to begin of free chain */
  4    34     2 n_users fixed bin,				/* number of entries actually used */
  4    35     2 project_name char (28),				/* name of project */
  4    36     2 project_dir char (64),				/* treename of project's directory */
  4    37     2 projfile_version fixed bin,
  4    38     2 projentry bit (66*36),
  4    39     2 pad3 (5) bit (36) aligned,
  4    40     2 reqfile_version fixed bin,
  4    41     2 reqentry bit (40*36),
  4    42     2 pad4 (9) fixed bin,
  4    43     2 sat_version fixed bin,
  4    44     2 satentry bit (52*36),				/* everything in sat.project from project.at on */
  4    45     2 pad5 (4) bit (36) aligned,
  4    46     2 date_reqfile_copied fixed bin (71),
  4    47     2 rs_number fixed bin (9) unsigned unaligned,		/* rate structure number, easier than looking in satentry */
  4    48     2 pad2l bit (27) unaligned,
  4    49     2 pad2 (16) fixed bin,				/* make header 256 words long */
  4    50     2 ht_relp fixed bin (18) aligned,			/* if nonzero, pdt has hash table at that loc */
  4    51     2 user (1019) aligned,				/* the project definition table entries */
  4    52       3 pad (256) bit (36) aligned;			/* each entry is 256 words long  */
  4    53 
  4    54 /* The hash table, if there is one, is right after the last user, and is described in hashst.incl.pl1 */
  4    55 
  4    56 
  4    57 
  4    58 dcl 1 user based (pdtep) aligned,			/* declaration of a single PDT entry  */
  4    59     2 state fixed bin,				/* 1 = normal, 2 = deleted 0 = free */
  4    60     2 lock bit (36),				/* update lock */
  4    61     2 person_id char (24) aligned,			/* login name of user */
  4    62     2 now_in fixed bin,				/* count of users logged in on this entry */
  4    63     2 password char (8) aligned,			/* password for anonymous user */
  4    64     2 at like user_attributes aligned,			/* include user_attributes.incl.pl1 */
  4    65     2 initial_procedure char (64) aligned,		/* initproc and subsystem name packed into one string */
  4    66     2 home_dir char (64) aligned,			/* user's default working directory */
  4    67     2 bump_grace fixed bin,				/* number of minutes he is protected */
  4    68     2 high_ring fixed bin,				/* highest ring user may use */
  4    69     2 default_ring fixed bin (17) unal,			/* ring user will start in */
  4    70     2 low_ring fixed bin (17) unal,			/* lowest ring user may use */
  4    71     2 outer_module char (32),				/* outer module used if user is interactive */
  4    72     2 lot_size fixed bin,				/* size of linkage offset table */
  4    73     2 kst_size fixed bin,				/* size of known segment table */
  4    74     2 cls_size fixed bin,				/* size of combined linkage */
  4    75     2 uflags,					/* various flags */
  4    76       3 dont_call_init_admin bit (1) unal,		/* call overseer direct */
  4    77       3 ip_given bit (1) unal,			/* ip_len gives length of initproc packed in initial_procedure */
  4    78       3 ss_given bit (1) unal,			/* subsystem name is packed in initial_procedure */
  4    79       3 flagpad bit (33) unal,
  4    80     2 ip_len fixed bin (17) unal,			/* length of initproc name packed in initial_procedure */
  4    81     2 ss_len fixed bin (17) unal,			/* length of subsystem name packed in initial_procedure */
  4    82     2 dollar_limit float bin,
  4    83     2 dollar_charge float bin,			/* total dollars spent this month */
  4    84     2 shift_limit (0: 7) float bin,
  4    85     2 daton fixed bin (71),				/* date user added to system */
  4    86     2 datof fixed bin (71),				/* date user deleted */
  4    87     2 last_login_time fixed bin (71),			/* time of last login */
  4    88     2 last_login_unit char (4),			/* terminal id last used */
  4    89     2 last_login_type fixed bin (17) unal,		/* terminal type */
  4    90     2 last_login_line_type fixed bin (17) unal,		/* terminal line type */
  4    91     2 time_last_bump fixed bin (71),			/* for bump-wait */
  4    92     2 last_update fixed bin (71),			/* time of last transaction */
  4    93     2 logins fixed bin,				/* number of logins */
  4    94     2 crashes fixed bin,				/* sessions abnormally terminated */
  4    95     2 interactive (0: 7),				/* interactive use, shifts 0-7 */
  4    96       3 charge float bin,				/* total dollar charge this shift */
  4    97       3 xxx fixed bin,
  4    98       3 cpu fixed bin (71),				/* cpu usage in microseconds */
  4    99       3 core fixed bin (71),				/* core demand in page-microseconds */
  4   100       3 connect fixed bin (71),			/* total console time in microseconds */
  4   101       3 io_ops fixed bin (71),			/* total i/o ops on terminal */
  4   102     2 absentee (4),					/* absentee use, queues 1-4 */
  4   103       3 charge float bin,				/* dollar charge this queue */
  4   104       3 jobs fixed bin,				/* number of jobs submitted */
  4   105       3 cpu fixed bin (71),				/* total cpu time in microseconds */
  4   106       3 memory fixed bin (71),			/* total memory demand */
  4   107     2 iod (4),					/* io daemon use, queues 1-4 */
  4   108       3 charge float bin,				/* dollar charge this queue */
  4   109       3 pieces fixed bin,				/* pieces of output requested */
  4   110       3 pad fixed bin (35),
  4   111       3 pages fixed bin (35),				/* number of pages output */
  4   112       3 lines fixed bin (71),				/* total record count of output */
  4   113     2 devices (16) float bin,				/* device charges */
  4   114     2 time_last_reset fixed bin (71),			/* time PDT last updated */
  4   115     2 absolute_limit float bin,			/* Limit, not reset monthly */
  4   116     2 absolute_spent float bin,			/* Spending against this */
  4   117     2 absolute_cutoff fixed bin (71),			/* Spending will be reset on this date */
  4   118     2 absolute_increm fixed bin,			/* .. time increment code. 0 = don't reset */
  4   119     2 pad_was_authorization bit (72) aligned,
  4   120     2 group char (8),				/* group for this user (if at.igroup = "1"b) */
  4   121     2 warn_days fixed bin (17) unaligned,		/* warn user if less than this many days to cutoff */
  4   122     2 warn_pct fixed bin (17) unaligned,		/* warn user if less than this percent of funds left */
  4   123     2 warn_dollars float bin,				/* warn user if less than this amount of funds left */
  4   124     2 n_foreground fixed bin (9) unsigned unaligned,	/* number of foreground and background processes */
  4   125     2 n_background fixed bin (9) unsigned unaligned,	/* that this user has. see limits just below */
  4   126     2 max_foreground fixed bin (9) unsigned unaligned,	/* max simultaneous foreground and */
  4   127     2 max_background fixed bin (9) unsigned unaligned,	/* background processes that this user can have */
  4   128     2 n_interactive fixed bin (9) unsigned unaligned,	/* number of interactive processes that user has */
  4   129     2 n_disconnected fixed bin (9) unsigned unaligned,	/* number of disconnected processes that user has */
  4   130     2 pdtupad1 fixed bin (18) unsigned unaligned,
  4   131     2 user_warn_days fixed bin (17) unaligned,		/* warn user if less than this many days to user cutoff */
  4   132     2 user_warn_pct fixed bin (17) unaligned,		/* warn user if less than this percent of user funds left */
  4   133     2 user_warn_dollars float bin,			/* warn user if less than this amount of user funds left */
  4   134     2 user_authorization (2) bit (72) aligned,		/* range */
  4   135     2 pdtupad (5) fixed bin,
  4   136     2 abs_foreground_cpu_limit fixed bin (17) unaligned,	/* time limit (sec) on foreground absentee jobs */
  4   137     2 pdir_quota fixed bin (17) unaligned,		/* quota to put on user's pdir (0 => use default) */
  4   138     2 chain fixed bin;				/* free chain */
  4   139 
  4   140 /* END INCLUDE FILE ... pdt.incl.pl1 */
      230 
      231 
      232 dcl  pdtp		        ptr automatic init (null);	/* pdt needs it. */
      233  /* BEGIN INCLUDE FILE sys_log_constants.incl.pl1 ... 82-09-24 E. N. Kittlitz */
  6     2 
  6     3 
  6     4 /****^  HISTORY COMMENTS:
  6     5*  1) change(87-04-22,GDixon), approve(87-06-10,MCR7708),
  6     6*     audit(87-06-02,Parisek), install(87-08-04,MR12.1-1056):
  6     7*     Added sl_info structure and associated named constants for use in calling
  6     8*     sys_log_$general.
  6     9*                                                   END HISTORY COMMENTS */
  6    10 
  6    11 
  6    12 /* format: style4 */
  6    13 
  6    14 dcl  (
  6    15      SL_TYPE_CRASH init (-3),				/* type message with banner & kill system */
  6    16      SL_TYPE_BEEP init (-2),				/* type message with banner */
  6    17      SL_TYPE init (-1),				/* type message */
  6    18      SL_LOG_SILENT init (0),				/* log message */
  6    19      SL_LOG init (1),				/* log & type message */
  6    20      SL_LOG_BEEP init (2),				/* log & type message with banner */
  6    21      SL_LOG_CRASH init (3)				/* log & type message with banner & kill system */
  6    22      ) fixed bin internal static options (constant);
  6    23 
  6    24 dcl  1 sl_info aligned automatic,
  6    25        2 version char(8),			/* structure version       */
  6    26        2 arg_list_ptr ptr,			/* arg_list with values    */
  6    27        2 loc,
  6    28          3 (mode, severity, code, caller, data, class, ioa_msg) fixed bin,
  6    29            /* These flags control where the corresponding data item is found.*/
  6    30 	 /*  -1: data appears in the corresponding structure element below */
  6    31 	 /*   0: data is not present anywhere			       */
  6    32 	 /*  +N: data is Nth item in argument list pointed to by 	       */
  6    33 	 /*      sl_info.arg_list_ptr.  Upon return, data copied into      */
  6    34 	 /*      corresponding structure element.		       */
  6    35 	 /*  if data = +N:					       */
  6    36 	 /*      argN is data_ptr, argN+1 is data_len		       */
  6    37 	 /*  if ioa_msg = +N:				       */
  6    38 	 /*      argN+1, ... argLAST are arguments substituted into the    */
  6    39 	 /*      ioa_msg control string.  The formatted msg is returned.   */
  6    40        2 flags,
  6    41          3 ioa_msg_is_error_code bit(1) unal,	/* ioa_ctl is error code.  */
  6    42          3 flags_pad bit(35) unal,
  6    43        2 mode fixed bin,			/* as-mode, command-mode   */
  6    44        2 severity fixed bin,			/* error severity	       */
  6    45        2 code fixed bin(35),			/* error table code        */
  6    46        2 caller char(65) varying,		/* caller refname$entryname*/
  6    47        2 data,				/* binary data ptr/length  */
  6    48          3 data_ptr ptr,
  6    49          3 data_lth fixed bin(21),
  6    50        2 class char(10) varying,		/* binary data class       */
  6    51        2 ioa_msg char(500) varying;		/* formatted message text  */
  6    52 
  6    53 /* *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */
  6    54 /*							       */
  6    55 /* If data values (eg, sl_info.caller) are passed in the argument list,      */
  6    56 /* their data types should be as shown in the structure above, except that   */
  6    57 /* character strings should be char(*) nonvarying.		       */
  6    58 /*							       */
  6    59 /* *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */
  6    60 
  6    61 /* value for sl_info.version */
  6    62 dcl  SL_INFO_version_1 char (8) int static options(constant) init("sl_info1");
  6    63 
  6    64 /* values for sl_info.mode */
  6    65 dcl (SL_INFO_as_mode init(1),
  6    66      SL_INFO_command_mode init(2)) fixed bin int static options(constant);
  6    67 
  6    68 /* values for sl_info.loc.(severity code caller data class ioa_ctl arg) */
  6    69 dcl (SL_INFO_arg_given_in_structure init(-1),
  6    70      SL_INFO_arg_not_given init(0)) fixed bin int static options(constant);
  6    71 
  6    72 
  6    73 /* *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */
  6    74 /*							       */
  6    75 /* The following static structures are commonly used in the Login Server     */
  6    76 /* user control software.					       */
  6    77 /*							       */
  6    78 /* *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */
  6    79 
  6    80 /* Syntax: call Abort (severity, code, ioa_ctl, args);		       */
  6    81 
  6    82 dcl  1 sl_info_sev_code_msg		aligned int static options(constant),
  6    83        2 version char(8)		init ("sl_info1"),
  6    84        2 arg_list_ptr ptr		init (null),
  6    85        2 loc,
  6    86          3 (mode			init (-1),
  6    87 	  severity  		init ( 1),
  6    88 	  code 			init ( 2),
  6    89 	  caller 			init (-1),
  6    90 	  data 			init ( 0),
  6    91 	  class 			init ( 0),
  6    92 	  ioa_msg			init ( 3)) fixed bin,
  6    93        2 flags,
  6    94          3 ioa_msg_is_error_code bit(1) unal init ("0"b),
  6    95          3 flags_pad bit(35) unal	init ("0"b),
  6    96        2 mode fixed bin		init ( 1),
  6    97        2 severity fixed bin		init ( 0),
  6    98        2 code fixed bin(35)		init ( 0),
  6    99        2 caller char(65) varying	init (""),
  6   100        2 data,
  6   101          3 data_ptr ptr		init (null),
  6   102          3 data_lth fixed bin(21)	init ( 0),
  6   103        2 class char(10) varying	init (""),
  6   104        2 ioa_msg char(500) varying	init ("");
  6   105 
  6   106 /* Syntax: call Abort (severity, ioa_ctl, args);			       */
  6   107 
  6   108 dcl  1 sl_info_sev_msg		aligned int static options(constant),
  6   109        2 version char(8)		init ("sl_info1"),
  6   110        2 arg_list_ptr ptr		init (null),
  6   111        2 loc,
  6   112          3 (mode			init (-1),
  6   113 	  severity  		init ( 1),
  6   114 	  code 			init ( 0),
  6   115 	  caller 			init (-1),
  6   116 	  data 			init ( 0),
  6   117 	  class 			init ( 0),
  6   118 	  ioa_msg			init ( 2)) fixed bin,
  6   119        2 flags,
  6   120          3 ioa_msg_is_error_code bit(1) unal init ("0"b),
  6   121          3 flags_pad bit(35) unal	init ("0"b),
  6   122        2 mode fixed bin		init ( 1),
  6   123        2 severity fixed bin		init ( 0),
  6   124        2 code fixed bin(35)		init ( 0),
  6   125        2 caller char(65) varying	init (""),
  6   126        2 data,
  6   127          3 data_ptr ptr		init (null),
  6   128          3 data_lth fixed bin(21)	init ( 0),
  6   129        2 class char(10) varying	init (""),
  6   130        2 ioa_msg char(500) varying	init ("");
  6   131 
  6   132 /* Syntax: call Abort (severity, ioa_ctl_as_error_code, args);	       */
  6   133 
  6   134 dcl  1 sl_info_sev_coded_msg		aligned int static options(constant),
  6   135        2 version char(8)		init ("sl_info1"),
  6   136        2 arg_list_ptr ptr		init (null),
  6   137        2 loc,
  6   138          3 (mode			init (-1),
  6   139 	  severity  		init ( 1),
  6   140 	  code 			init ( 0),
  6   141 	  caller 			init (-1),
  6   142 	  data 			init ( 0),
  6   143 	  class 			init ( 0),
  6   144 	  ioa_msg			init ( 2)) fixed bin,
  6   145        2 flags,
  6   146          3 ioa_msg_is_error_code bit(1) unal init ("1"b),
  6   147          3 flags_pad bit(35) unal	init ("0"b),
  6   148        2 mode fixed bin		init ( 1),
  6   149        2 severity fixed bin		init ( 0),
  6   150        2 code fixed bin(35)		init ( 0),
  6   151        2 caller char(65) varying	init (""),
  6   152        2 data,
  6   153          3 data_ptr ptr		init (null),
  6   154          3 data_lth fixed bin(21)	init ( 0),
  6   155        2 class char(10) varying	init (""),
  6   156        2 ioa_msg char(500) varying	init ("");
  6   157 
  6   158 
  6   159 /* Syntax: call Abort (severity, code, error_return_label, ioa_ctl, args);   */
  6   160 
  6   161 dcl  1 sl_info_sev_code_label_msg	aligned int static options(constant),
  6   162        2 version char(8)		init ("sl_info1"),
  6   163        2 arg_list_ptr ptr		init (null),
  6   164        2 loc,
  6   165          3 (mode			init (-1),
  6   166 	  severity  		init ( 1),
  6   167 	  code 			init ( 2),
  6   168 	  caller 			init (-1),
  6   169 	  data 			init ( 0),
  6   170 	  class 			init ( 0),
  6   171 	  ioa_msg			init ( 4)) fixed bin,
  6   172        2 flags,
  6   173          3 ioa_msg_is_error_code bit(1) unal init ("0"b),
  6   174          3 flags_pad bit(35) unal	init ("0"b),
  6   175        2 mode fixed bin		init ( 1),
  6   176        2 severity fixed bin		init ( 0),
  6   177        2 code fixed bin(35)		init ( 0),
  6   178        2 caller char(65) varying	init (""),
  6   179        2 data,
  6   180          3 data_ptr ptr		init (null),
  6   181          3 data_lth fixed bin(21)	init ( 0),
  6   182        2 class char(10) varying	init (""),
  6   183        2 ioa_msg char(500) varying	init ("");
  6   184 
  6   185 /* Syntax:  call Log_error (code, ioa_ctl, args);			       */
  6   186 
  6   187 dcl  1 sl_info_code_msg		aligned int static options(constant),
  6   188        2 version char(8)		init ("sl_info1"),
  6   189        2 arg_list_ptr ptr		init (null),
  6   190        2 loc,
  6   191          3 (mode			init (-1),
  6   192 	  severity  		init (-1),
  6   193 	  code 			init ( 1),
  6   194 	  caller 			init (-1),
  6   195 	  data 			init ( 0),
  6   196 	  class 			init ( 0),
  6   197 	  ioa_msg			init ( 2)) fixed bin,
  6   198        2 flags,
  6   199          3 ioa_msg_is_error_code bit(1) unal init ("0"b),
  6   200          3 flags_pad bit(35) unal	init ("0"b),
  6   201        2 mode fixed bin		init ( 1),
  6   202        2 severity fixed bin		init ( 0),
  6   203        2 code fixed bin(35)		init ( 0),
  6   204        2 caller char(65) varying	init (""),
  6   205        2 data,
  6   206          3 data_ptr ptr		init (null),
  6   207          3 data_lth fixed bin(21)	init ( 0),
  6   208        2 class char(10) varying	init (""),
  6   209        2 ioa_msg char(500) varying	init ("");
  6   210 
  6   211 
  6   212 /* Syntax:  call Trace (ioa_ctl, args);				       */
  6   213 
  6   214 dcl  1 sl_info_msg			aligned int static options(constant),
  6   215        2 version char(8)		init ("sl_info1"),
  6   216        2 arg_list_ptr ptr		init (null),
  6   217        2 loc,
  6   218          3 (mode			init (-1),
  6   219 	  severity  		init (-1),
  6   220 	  code 			init ( 0),
  6   221 	  caller 			init (-1),
  6   222 	  data 			init ( 0),
  6   223 	  class 			init ( 0),
  6   224 	  ioa_msg			init ( 1)) fixed bin,
  6   225        2 flags,
  6   226          3 ioa_msg_is_error_code bit(1) unal init ("0"b),
  6   227          3 flags_pad bit(35) unal	init ("0"b),
  6   228        2 mode fixed bin		init ( 1),
  6   229        2 severity fixed bin		init ( 0),
  6   230        2 code fixed bin(35)		init ( 0),
  6   231        2 caller char(65) varying	init (""),
  6   232        2 data,
  6   233          3 data_ptr ptr		init (null),
  6   234          3 data_lth fixed bin(21)	init ( 0),
  6   235        2 class char(10) varying	init (""),
  6   236        2 ioa_msg char(500) varying	init ("");
  6   237 
  6   238 /* END INCLUDE FILE sys_log_constants.incl.pl1 */
      233 
      234  /*  BEGIN INCLUDE FILE ... uc_disc_proc_list.incl.pl1 */
  7     2 
  7     3 
  7     4 /****^  HISTORY COMMENTS:
  7     5*  1) change(86-04-04,Swenson), approve(87-07-13,MCR7737),
  7     6*     audit(87-05-16,GDixon), install(87-08-04,MR12.1-1056):
  7     7*     Initial coding.
  7     8*  2) change(87-05-16,GDixon), approve(87-07-13,MCR7737),
  7     9*     audit(87-07-16,Brunelle), install(87-08-04,MR12.1-1056):
  7    10*     Explicitly declare pad field.
  7    11*                                                   END HISTORY COMMENTS */
  7    12 
  7    13 /* format: style4,indattr */
  7    14 
  7    15 dcl  uc_disconnected_process_list_ptr ptr automatic;
  7    16 dcl  uc_n_disconnected_processes fixed bin automatic;
  7    17 dcl  1 uc_disconnected_process_list structure aligned
  7    18 		        based (uc_disconnected_process_list_ptr),
  7    19        2 version	        char (8),
  7    20        2 n_disconnected_processes fixed bin,
  7    21        2 pad_header	        fixed bin,
  7    22        2 process	        (uc_n_disconnected_processes refer (uc_disconnected_process_list.n_disconnected_processes)),
  7    23          3 utep	        ptr;
  7    24 
  7    25 dcl  UC_DISCONNECTED_PROCESS_LIST_VERSION_1 char (8) initial ("ucdpl001") internal static options (constant);
  7    26 
  7    27 /*  END INCLUDE FILE ... uc_disc_proc_list.incl.pl1 */
  7    28 
      234 
      235  /* BEGIN INCLUDE FILE ... user_attributes.incl.pl1  TAC 10/79 */
  8     2 
  8     3 
  8     4 /****^  HISTORY COMMENTS:
  8     5*  1) change(86-12-11,Brunelle), approve(87-07-13,MCR7741),
  8     6*     audit(87-04-19,GDixon), install(87-08-04,MR12.1-1056):
  8     7*     Add incl for abs_attributes.incl.pl1 to automatically include absentee
  8     8*     attribute switches.
  8     9*  2) change(87-04-19,GDixon), approve(87-07-13,MCR7741),
  8    10*     audit(87-07-16,Brunelle), install(87-08-04,MR12.1-1056):
  8    11*      A) Add USER_ATTRIBUTE_NAMES arrays.  attribute_names.incl.pl1 can thereby
  8    12*         be deleted.
  8    13*      B) Add constants identifying attributes that can be changed by user at
  8    14*         login, etc.
  8    15*                                                   END HISTORY COMMENTS */
  8    16 
  8    17 
  8    18 /* Modified 82-01-03  E. N. Kittlitz.  to declare a complete level-1 structure */
  8    19 
  8    20 /* format: style4 */
  8    21 dcl  1 user_attributes aligned based,			/* the user user_attributes */
  8    22        (2 administrator bit (1),			/* 1  system administrator privileges */
  8    23        2 primary_line bit (1),			/* 2  user has primary-line privileges  */
  8    24        2 nobump bit (1),				/* 2  user cannot be bumped */
  8    25        2 guaranteed_login bit (1),			/* 4  user has guaranteed login privileges */
  8    26        2 anonymous bit (1),				/* 5  used only in SAT. project may have anon.users */
  8    27        2 nopreempt bit (1),				/* 6  used only in PDT. user not preemptable by others
  8    28*						   .  of same project (distinct from "nobump") */
  8    29        2 nolist bit (1),				/* 7  don't list user on "who" */
  8    30        2 dialok bit (1),				/* 8  user may have multiple consoles */
  8    31        2 multip bit (1),				/* 9  user may have several processes */
  8    32        2 bumping bit (1),				/* 10 in SAT. Can users in project bump each other? */
  8    33        2 brief bit (1),				/* 11 no login or logout message */
  8    34        2 vinitproc bit (1),				/* 12 user may change initial procedure */
  8    35        2 vhomedir bit (1),				/* 13 user may change homedir */
  8    36        2 nostartup bit (1),				/* 14 user does not want start_up.ec */
  8    37        2 sb_ok bit (1),				/* 15 user may be standby */
  8    38        2 pm_ok bit (1),				/* 16 user may be primary */
  8    39        2 eo_ok bit (1),				/* 17 user may be edit_only */
  8    40        2 daemon bit (1),				/* 18 user may login as daemon */
  8    41        2 vdim bit (1),				/* 19 * OBSOLETE * user may change outer mdle */
  8    42        2 no_warning bit (1),				/* 20 no warning message */
  8    43        2 igroup bit (1),				/* 21 in SAT: this project may give its users individual groups
  8    44*						   .  in PDT: this user has an individual load control group */
  8    45        2 save_pdir bit (1),				/* 22 save pdir after fatal process error */
  8    46        2 disconnect_ok bit (1),			/* 23 ok to save user's disconnected processes */
  8    47        2 save_on_disconnect bit (1),			/* 24 save them unless -nosave login arg is given */
  8    48        2 pad bit (12)) unaligned;
  8    49 
  8    50 dcl  USER_ATTRIBUTE_NAMES (0:24) char (20) int static options (constant) init
  8    51     ("none",					/* 0 */
  8    52      "administrator",				/* 1 */
  8    53      "primary_line",				/* 2 */
  8    54      "nobump",					/* 3 */
  8    55      "guaranteed_login",				/* 4 */
  8    56      "anonymous",					/* 5 */
  8    57      "nopreempt",					/* 6 */
  8    58      "nolist",					/* 7 */
  8    59      "dialok",					/* 8 */
  8    60      "multip",					/* 9 */
  8    61      "bumping",					/* 10 */
  8    62      "brief",					/* 11 */
  8    63      "vinitproc",					/* 12 */
  8    64      "vhomedir",					/* 13 */
  8    65      "nostartup",					/* 14 */
  8    66      "no_secondary",				/* 15 */
  8    67      "no_prime",					/* 16 */
  8    68      "no_eo",					/* 17 */
  8    69      "daemon",					/* 18 */
  8    70      "",						/* 19 vdim OBSOLETE */
  8    71      "no_warning",					/* 20 */
  8    72      "igroup",					/* 21 */
  8    73      "save_pdir",					/* 22 */
  8    74      "disconnect_ok",				/* 23 */
  8    75      "save_on_disconnect");				/* 24 */
  8    76 
  8    77 dcl  ALT_USER_ATTRIBUTE_NAMES (0:24) char (20) int static options (constant) init
  8    78     ("null",					/* 0 */
  8    79      "admin",					/* 1 */
  8    80      "", "",					/* 2 - 3 */
  8    81      "guar",					/* 4 */
  8    82      "anon",					/* 5 */
  8    83      "", "",					/* 6 - 7 */
  8    84      "dial",					/* 8 */
  8    85      "multi_login",					/* 9 */
  8    86      "preempting",					/* 10 */
  8    87      "",						/* 11 */
  8    88      "v_process_overseer",				/* 12 */
  8    89      "v_home_dir",					/* 13 */
  8    90      "no_start_up",					/* 14 */
  8    91      "no_sec",					/* 15 */
  8    92      "no_primary",					/* 16 */
  8    93      "no_edit_only",				/* 17 */
  8    94      "op_login",					/* 18 */
  8    95      "",						/* 19 */
  8    96      "nowarn",					/* 20 */
  8    97      "", "", "",					/* 21 - 23 */
  8    98      "save");					/* 24 */
  8    99 
  8   100 dcl  USER_ATTRIBUTES_always_allowed bit (36) aligned int static
  8   101      options(constant) init("000000000010000000010000000000000000"b);
  8   102     /* SAT/PDT attributes not needed for user to give (brief, no_warning) */
  8   103 
  8   104 dcl  USER_ATTRIBUTES_default_in_pdt bit (36) aligned int static
  8   105      options(constant) init("000000000010000000010000000000000000"b);
  8   106     /* PDT value for (brief, no_warning) is default */
  8   107 
  8   108 dcl  USER_ATTRIBUTES_settable_by_user bit (36) aligned int static
  8   109      options(constant) init("000100000110010000010000000000000000"b);	
  8   110     /* user MIGHT set (bump, ns, brief, guar, no_warning) */
  8   111 
  9     1 /* BEGIN INCLUDE FILE ... user_abs_attributes.incl.pl1 */
  9     2 
  9     3 /* *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */
  9     4 /*							       */
  9     5 /* This include file describes the attributes of an absentee job.  It is     */
  9     6 /* used by user_table_entry.incl.pl1, abs_message_format.incl.pl1            */
  9     7 /* and PIT.incl.pl1.   */
  9     8 /*							       */
  9     9 /* *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */
  9    10 
  9    11 /****^  HISTORY COMMENTS:
  9    12*  1) change(86-12-08,GDixon), approve(87-07-13,MCR7741),
  9    13*     audit(87-07-16,Brunelle), install(87-08-04,MR12.1-1056):
  9    14*     Separated abs_attributes from the request structure
  9    15*     (abs_message_format.incl.pl1) so that the identical structure could be
  9    16*     used in the ute structure (user_table_entry.incl.pl1).
  9    17*  2) change(87-04-19,GDixon), approve(87-07-13,MCR7741),
  9    18*     audit(87-07-16,Brunelle), install(87-08-04,MR12.1-1056):
  9    19*     Added ABS_ATTRIBUTE_NAMES array.
  9    20*  3) change(87-11-11,Parisek), approve(88-02-11,MCR7849),
  9    21*     audit(88-03-22,Lippard), install(88-07-13,MR12.2-1047):
  9    22*     Added the no_start_up flag. SCP6367
  9    23*                                                   END HISTORY COMMENTS */
  9    24 
  9    25 dcl 1 user_abs_attributes		aligned based,
  9    26       2 restartable			bit (1) unaligned,	/* 1 if request may be started over from the beginning */
  9    27       2 user_deferred_until_time	bit (1) unaligned,	/* 1 if request was specified as deferred */
  9    28       2 proxy			bit (1) unaligned,	/* 1 if request submitted for someone else */
  9    29       2 set_bit_cnt			bit (1) unaligned,	/* 1 if should set bit count after every write call */
  9    30       2 time_in_gmt			bit (1) unaligned,	/* 1 if deferred_time is in GMT */
  9    31       2 user_deferred_indefinitely	bit (1) unaligned,	/* 1 if operator is to say when to run it */
  9    32       2 secondary_ok		bit (1) unaligned,	/* 1 if ok to log in as secondary foreground user */
  9    33       2 truncate_absout		bit (1) unaligned,	/* 1 if .absout is to be truncated */
  9    34       2 restarted			bit (1) unaligned,	/* 1 if job is restarted */
  9    35       2 no_start_up                     bit (1) unaligned,	/* 1 if requested -ns */
  9    36       2 attributes_pad		bit (26) unaligned;
  9    37 
  9    38 dcl  ABS_ATTRIBUTE_NAMES (10) char (28) varying int static options(constant) init(
  9    39 	"restartable",
  9    40 	"user_deferred_until_time",
  9    41 	"proxy",
  9    42 	"set_bit_cnt",
  9    43 	"time_in_gmt",
  9    44 	"user_deferred_indefinitely",
  9    45 	"secondary_ok",
  9    46 	"truncate_absout",
  9    47 	"restarted",
  9    48 	"no_start_up");
  9    49 
  9    50 /* END INCLUDE FILE ... user_abs_attributes.incl.pl1 */
  9    51 
  8   112 
  8   113 
  8   114 /* END INCLUDE FILE ... user_attributes.incl.pl1 */
      235 
      236  /*  BEGIN INCLUDE FILE ... user_table_entry.incl.pl1 */
 10     2 
 10     3 /* *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */
 10     4 /*							       */
 10     5 /* This include file requires that the user include		       */
 10     6 /* user_attributes.incl.pl1 as well.  It also includes		       */
 10     7 /* abs_attributes.incl.pl1 itself.				       */
 10     8 /*							       */
 10     9 /* This include file must be included to use absentee_user_table.incl.pl1,   */
 10    10 /* answer_table.incl.pl1, and daemon_user_table.incl.pl1.		       */
 10    11 /*							       */
 10    12 /* *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */
 10    13 
 10    14 /****^  HISTORY COMMENTS:
 10    15*  1) change(81-12-21,Gilcrease), approve(86-03-27,MCR7370),
 10    16*     audit(86-06-23,Lippard), install(86-06-30,MR12.0-1082):
 10    17*     This comment for hcom.
 10    18*     81-12-21  E. N. Kittlitz. derived from abs_user_tab.incl.pl1,
 10    19*     anstbl.incl.pl1, and dutbl.incl.pl1.
 10    20*     82-01-02 E. N. Kittlitz. user_attributes.incl.pl1 changes
 10    21*     84-04-04 BIM added privileged_dial_server and dial_server_ring
 10    22*     84-07-12 BIM added min_process_authorization
 10    23*     84-12-31 Keith Loepere added pdir_dir_quota
 10    24*     85-01-16 by E. Swenson to add ute.session_uid
 10    25*  2) change(85-11-16,Swenson), approve(87-07-13,MCR7737),
 10    26*     audit(87-04-14,GDixon), install(87-08-04,MR12.1-1056):
 10    27*     Added fields for DSA login server support.
 10    28*  3) change(86-03-27,Gilcrease), approve(86-03-27,MCR7370),
 10    29*     audit(86-06-23,Lippard), install(86-06-30,MR12.0-1082):
 10    30*     Add truncate_absout and restarted bit for -truncate absout, SCP6297.
 10    31*  4) change(86-04-09,Herbst), approve(87-07-13,MCR7697),
 10    32*     audit(87-04-14,GDixon), install(87-08-04,MR12.1-1056):
 10    33*     Added disconnection_rel_minutes.
 10    34*  5) change(86-12-08,GDixon), approve(87-07-13,MCR7741),
 10    35*     audit(87-07-16,Brunelle), install(87-08-04,MR12.1-1056):
 10    36*     Changed structure under ute.abs_attributes to use like structure in
 10    37*     abs_attributes.incl.pl1.  This allows the same attributes to be used
 10    38*     in abs_message_format.incl.pl1 and pit.incl.pl1 as well as this include
 10    39*     file.
 10    40*  6) change(87-04-14,GDixon), approve(87-07-13,MCR7741),
 10    41*     audit(87-07-16,Brunelle), install(87-08-04,MR12.1-1056):
 10    42*     Move constants for ute.pw_flags.mask_ctl from answer_table.incl.pl1.
 10    43*  7) change(87-04-16,GDixon), approve(87-07-13,MCR7741),
 10    44*     audit(87-07-16,Brunelle), install(87-08-04,MR12.1-1056):
 10    45*      A) Global reorganization to locate things by type of data.
 10    46*      B) Eliminate ute.uflags.logged_in.
 10    47*  8) change(87-05-10,GDixon), approve(87-07-13,MCR7741),
 10    48*     audit(87-07-16,Brunelle), install(87-08-04,MR12.1-1056):
 10    49*      A) Reduced overlength person and project fields to proper length.
 10    50*      B) Adjusted dialed-console section to begin on even word boundary.
 10    51*  9) change(87-05-13,GDixon), approve(87-07-13,MCR7741),
 10    52*     audit(87-07-16,Brunelle), install(87-08-04,MR12.1-1056):
 10    53*     Add ute.line_type.
 10    54* 10) change(87-11-19,Parisek), approve(88-02-11,MCR7849),
 10    55*     audit(88-02-23,Lippard), install(88-07-13,MR12.2-1047):
 10    56*     Added the lowest_ring element. Used the upper half of ute.highest_ring
 10    57*     for the storage.  SCP6367
 10    58*                                                   END HISTORY COMMENTS */
 10    59 
 10    60 /* format: style4 */
 10    61 
 10    62 /* *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */
 10    63 /*							       */
 10    64 /* Each of the named sections below defines a type of data.  Typing comes    */
 10    65 /* from data associated with the ute entry itself, with the person, with     */
 10    66 /* login argument data, from the main user of the data (eg, dialup_,	       */
 10    67 /* load_ctl_, login server).  Each section begins on a double-word boundary  */
 10    68 /* and is an even number of words long.  The total structure is 300 decimal  */
 10    69 /* words long.						       */
 10    70 /*							       */
 10    71 /* *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */
 10    72 
 10    73 
 10    74 dcl  UTE_version_4 fixed bin internal static options (constant) init (4);
 10    75 
 10    76 dcl  utep pointer automatic init (null);
 10    77 
 10    78 dcl  1 ute based (utep) aligned,			/* individual entry in one of the user control tables */
 10    79 
 10    80 /* Variables which give state of this entry */
 10    81        2 active fixed bin,				/* state of entry. 0=>free. see dialup_values.incl.pl1 */
 10    82        2 process_type fixed bin,			/* 1=interactive, 2=absentee, 3=daemon */
 10    83        2 ute_index fixed bin,				/* index of ute in (anstbl autbl dutbl).entry array */
 10    84        2 next_free fixed bin,				/* points to previous free entry */
 10    85 
 10    86 /* Information user gave about person_id associated with this entry. */
 10    87        2 person char (24) unal,			/* user's name */
 10    88        2 project char (12) unal,			/* project of absentee user */
 10    89        2 tag char (1) unal,				/* instance tag - someday will be generated */
 10    90        2 tag_pad bit (27) unal,
 10    91        2 anonymous fixed bin,				/* 1 if anonymous, otherwise 0 */
 10    92        2 login_flags,				/* flags for login data */
 10    93          3 cpw bit (1) unal,				/* flag for wish to change password */
 10    94          3 generate_pw bit (1) unal,			/* flag meaning -generate_pw (-gpw) was used. */
 10    95          3 special_pw unal,				/* dial or slave */
 10    96 	 4 dial_pw bit (1) unal,			/* true if dial -user */
 10    97 	 4 slave_pw bit (1) unal,			/* true if slave -user */
 10    98          3 cdp bit (1) unal,				/* flag for wish to change default project */
 10    99          3 cda bit (1) unal,				/* flag to change default authorization */
 10   100          3 auth_given bit (1) unal,			/* flag to mean -authorization was used. */
 10   101          3 noprint bit (1) unal,			/* used at logout. inhibits printing. */
 10   102          3 operator bit (1) unaligned,			/* user specified -operator on login command line */
 10   103          3 pw_pad bit (25) unal,			/* spare parts */
 10   104          3 mask_ctl bit (2) unal,			/* bits controlling pw mask. See constants, below */
 10   105 						/* Must remain last in pw_flags so it does not */
 10   106 						/* appear in PW_FLAG_VALUES array below. */
 10   107        2 generated_pw char (8) unal,			/* user must type this as new password */
 10   108        2 old_password char (8) unal,			/* must match user's previous password (value scrambled) */
 10   109        2 process_authorization bit (72),		/* access_authorization of this process */
 10   110 
 10   111 /* Information user gave about process associated with this entry. */
 10   112        2 outer_module char (32) unal,			/* Name of console dim */
 10   113        2 home_dir char (64) unal,			/* initial home directory */
 10   114        2 init_proc char (64) unal,			/* name of login responder */
 10   115        2 ip_len fixed bin (17) unal,			/* length of initproc string */
 10   116        2 ss_len fixed bin (17) unal,			/* length of subsystem string */
 10   117        2 ur_at like user_attributes aligned,		/* bits on means attributes given by user */
 10   118        2 at like user_attributes aligned,		/* bits on means attribute is on */
 10   119        2 initial_ring fixed bin,			/* ring process will be started in */
 10   120        2 arg_count fixed bin,				/* number of arguments to absentee control segment */
 10   121        2 ln_args fixed bin,				/* length of string containing arguments */
 10   122        2 arg_lengths_ptr ptr,				/* pointer to array of argument lengths */
 10   123        2 args_ptr ptr,				/* pointer to arguments to absentee control segment */
 10   124 
 10   125 /* Most of the following information is relevant only to absentee processes */
 10   126        2 input_seg char (168) unal,			/* pathname of absentee control segment */
 10   127        2 output_seg char (168) unal,			/* pathname of absentee output file */
 10   128        2 request_id fixed bin (71),			/* time request was entered - used as uid of request */
 10   129        2 reservation_id fixed bin (71),			/* nonzero if job has a resource reservation */
 10   130        2 message_id bit (72),				/* message segment id assoc with absentee request */
 10   131        2 deferred_time fixed bin (71),			/* time at which absentee process should be created */
 10   132        2 max_cpu_time fixed bin (35),			/* maximum number of seconds this process can run */
 10   133        2 queue fixed bin,				/* -1=daemon;0=interactive or foreground;>0=queue no.
 10   134*						   (but see uflags.adjust_abs_q_no). */
 10   135        2 real_queue fixed bin,			/* real queue number; ute.queue gets fudged sometimes */
 10   136        2 abs_attributes aligned like user_abs_attributes,	/* include abs_attributes.incl.pl1 */
 10   137        2 abs_flags,
 10   138          3 abs_run bit (1) unal,			/* on if job was started by abs run command */
 10   139          3 notify bit (1) unal,			/* on if user wants notification at login and logout */
 10   140          3 abs_flags_pad bit (34) unal,
 10   141        2 abs_group char (8) unal,			/* original group before load_ctl_ moves it to absentee group */
 10   142        2 sender char (32) unal,			/* name of RJE station that job is from */
 10   143        2 proxy_person char (28) unal,			/* name of user who actually entered the request, if proxy */
 10   144        2 proxy_project char (9) unal,
 10   145        2 proxy_project_pad char (3) unal,
 10   146        2 abs_pad fixed bin,
 10   147 
 10   148 /* Information about process actually created */
 10   149        2 proc_id bit (36),				/* process id of absentee process */
 10   150        2 session_uid fixed bin (35),			/* Unique authentication session id */
 10   151        2 process_authorization_range (2) bit (72) aligned,
 10   152        2 audit bit (36),				/* audit flags for user */
 10   153        2 lot_size fixed bin,				/* Size of linkage offset table */
 10   154        2 kst_size fixed bin,				/* Size of process known segment table */
 10   155        2 cls_size fixed bin,				/* Size of process combined linkage */
 10   156        2 sus_channel fixed bin (71),			/* event channel on which suspended process is blocked */
 10   157        2 lowest_ring fixed bin (17) unal,		/* lowest ring permitted */
 10   158        2 highest_ring fixed bin (17) unal,		/* highest ring permitted */
 10   159        2 pdir_lvix fixed bin (17) unal,			/* index in disk table of lv where pdir is */
 10   160        2 pdir_quota fixed bin (17) unal,		/* process directory quota */
 10   161        2 pdir_dir_quota fixed bin (17) unal,		/* process directory quota for dirs */
 10   162        2 pdir_pad fixed bin(17) unal,
 10   163        2 process_pad fixed bin,
 10   164 
 10   165 /* Information about primary terminal associated with this entry */
 10   166        2 tty_name char (32) unal,			/* absentee=>"abs1", etc.  daemon=>"bk", etc. */
 10   167        2 terminal_type char (32) unaligned,		/* terminal type */
 10   168        2 line_type fixed bin,				/* line type */
 10   169        2 tty_id_code char (4) unal,			/* "none" for absentee */
 10   170        2 network_connection_type fixed bin,		/* see net_event_message.incl.pl1 */
 10   171        2 channel ptr unal,				/* points to CDT entry for user, if any */
 10   172 
 10   173 /* Variables useful for dialed terminals */
 10   174        2 ndialed_consoles fixed bin,			/* if master, number of slaves */
 10   175        2 dial_qualifier char (22) unal,			/* first argument to dial command */
 10   176        2 dial_server_ring fixed bin (3) unsigned unaligned, /* dial server intends to attach dialing in channels at this ring. */
 10   177        2 dial_server_flags,
 10   178          3 registered_dial_server bit (1) unal,		/* process is a registered dial server */
 10   179          3 privileged_dial_server bit (1) unal,		/* "1"b -> serves range of AIM classes */
 10   180          3 dial_server_flags_pad bit (13) unal,		/* fill out the word */
 10   181        2 dial_ev_chn fixed bin (71),			/* if master, control event channel */
 10   182 
 10   183 /* Information about usage/accounting.  Device usage meters are in a
 10   184*   separate segment, "devtab" */
 10   185        2 pdtep ptr,					/* ptr to user's pdt entry, where usage meters live */
 10   186        2 cpu_this_process fixed bin (71),		/* cpu used so far this process */
 10   187        2 cpu_usage fixed bin (71),			/* total cpu time used in this session */
 10   188        2 mem_usage fixed bin (71),			/* memory usage for previous processes in session */
 10   189        2 mem_this_process fixed bin (71),		/* memory usage at last update */
 10   190        2 last_update_time fixed bin (71),		/* time of last account update */
 10   191        2 session_cost float bin,			/* dollar cost of session, for printing in logout messages */
 10   192        2 ndevices fixed bin,				/* Count of attached devices */
 10   193        2 device_head fixed bin,			/* Table index of head of device chain */
 10   194        2 device_tail fixed bin,			/* Table index of tail of device chain */
 10   195        2 rs_number fixed bin (6) unsigned unal,		/* rate structure number */
 10   196        2 rs_number_pad bit(30) unal,
 10   197        2 usage_pad fixed bin,
 10   198 
 10   199 /* Information for dialup_ (control variables). */
 10   200        2 event fixed bin (71),			/* event associated with channel or user manager */
 10   201        2 uprojp ptr,				/* ptr to user project sat entry */
 10   202        2 login_time fixed bin (71),			/* time when absentee user approved by lg_ctl_ */
 10   203        2 cant_bump_until fixed bin (71),		/* bump-protection clock */
 10   204        2 recent_fatal_error_time fixed bin (71),		/* time of first error in the suspected loop */
 10   205        2 recent_fatal_error_count fixed bin,		/* counter to detect fatal process error loops */
 10   206        2 failure_reason fixed bin,			/* why login refused 1=lg_ctl, 2=act_ctl, 3=load_ctl */
 10   207        2 count fixed bin,				/* counter for logins and dialups */
 10   208        2 n_processes fixed bin,			/* number of processes created in this session */
 10   209        2 lock_value fixed bin,			/* number of locks set for this entry */
 10   210        2 login_result fixed bin,			/* 0=logged in;1=hopeless,hang him up;2=allow another attempt */
 10   211        2 login_code char (8) unal,			/* login command from LOGIN line */
 10   212        2 preempted fixed bin,				/* if ^= 0 user preempted (never for abs) */
 10   213        2 destroy_flag fixed bin,			/* >8 when awaiting destroy */
 10   214        2 logout_type char (4) unal,			/* type of logout */
 10   215        2 logout_index fixed bin,			/* to save logout handler index while waiting for termsgnl */
 10   216        2 disconnection_rel_minutes fixed bin (17) unal,	/* disconnected this many minutes after login_time */
 10   217        2 next_disconnected_ate_index fixed bin (17) unal,	/* thread of list of user's disconnected processes */
 10   218        2 work_class fixed bin,			/* work class used by priority scheduler */
 10   219        2 group char (8) unal,				/* party group identifier */
 10   220        2 whotabx fixed bin,				/* index of user's entry in whotab */
 10   221 
 10   222        2 uflags,					/* Miscellaneous flags */
 10   223          3 dont_call_init_admin bit (1) unal,		/* Call overseer directly */
 10   224          3 ip_given bit (1) unal,			/* user gave an initproc arg on login line */
 10   225          3 ss_given bit (1) unal,			/* initial_procedure contains a subsystem name */
 10   226          3 lvs_attached bit (1) unal,			/* set and used by the lv_request_ procedure */
 10   227          3 send_initial_string bit (1) unal,		/* initial string should be sent after login line read */
 10   228          3 adjust_abs_q_no bit (1) unal,		/* this is an absentee job; user_profile.queue is NOT true Q # */
 10   229          3 foreground_secondary_ok bit (1) unal,		/* ok to login foreground absentee job as secondary */
 10   230          3 foreground_job bit (1) unal,			/* job was originally from foreground queue */
 10   231          3 sus_sent bit (1) unal,			/* sus_ ips signal has been sent to process */
 10   232          3 suspended bit (1) unal,			/* process has responded to sus_ signal */
 10   233          3 ignore_cpulimit bit (1) unal,		/* process is released, but timer can't be turned off */
 10   234          3 deferral_logged bit (1) unal,		/* abs job deferral has already been logged once */
 10   235          3 save_if_disconnected bit (1) unal,		/* user wants process preserved across hangups */
 10   236          3 disconnected bit (1) unal,			/* process is disconnected from terminal */
 10   237          3 disconnected_list bit (1) unal,		/* this ate is on a list of disconnected processes */
 10   238          3 proc_create_ok bit (1) unal,			/* lg_ctl_ has set the process creation variables */
 10   239          3 activity_can_unbump bit (1) unal,		/* only bump pending is for inactivity */
 10   240          3 fpe_causes_logout bit (1) unal,		/* "1"b means don't try to new_proc after fatal process error */
 10   241          3 user_specified_immediate bit (1) unal,		/* "1"b -> don't wait around for process destruction. */
 10   242          3 uflags_pad bit (17) unal,
 10   243 
 10   244 /* Information used by load_ctl_ for the process */
 10   245        2 user_weight fixed bin,			/* usually 10 - used in load control */
 10   246        2 standby_line fixed bin,			/* 0=user has primary line, 1=standby user */
 10   247        2 bump_grace fixed bin (71),			/* bump grace in microseconds */
 10   248 
 10   249 
 10   250 /* Information for login server */
 10   251        2 login_server_info,
 10   252          3 our_handle bit (72) aligned,			/* how LS refers to us. */
 10   253          3 his_handle bit (72) aligned,			/* how we talk to LS */
 10   254          3 termination_event_channel fixed bin (71),	/* for process termination notifications to the LS */
 10   255          3 response_event_channel fixed bin (71),		/* for other communications with the LS */
 10   256          3 process_id bit (36) aligned,			/* process_id of login server */
 10   257        2 ls_pad (5) fixed bin;			/* pad to 300 decimal words */
 10   258 
 10   259 /* values for ute.process_type */
 10   260 
 10   261 dcl  (PT_INTERACTIVE initial (1),
 10   262      PT_ABSENTEE initial (2),
 10   263      PT_DAEMON initial (3)) fixed bin internal static options (constant);
 10   264 
 10   265 dcl  PROCESS_TYPE_NAMES (0:3) char(12) varying int static options(constant) init(
 10   266 	"INVALID-TYPE",
 10   267 	"interactive",
 10   268 	"absentee",
 10   269 	"daemon");
 10   270 
 10   271 dcl  TABLE_NAMES (0:3) char(20) int static options(constant) init(
 10   272 	"UNKNOWN-TABLE",
 10   273 	"answer_table",
 10   274 	"absentee_user_table",
 10   275 	"daemon_user_table");
 10   276 
 10   277 
 10   278 /* values for ute.pw_flags.mask_ctl  */
 10   279 
 10   280 dcl  (DO_MASK init ("00"b),
 10   281      DONT_MASK init ("01"b),
 10   282      DERIVE_MASK init ("10"b)) bit (2) internal static options (constant);
 10   283 
 10   284 dcl  MASK_CTL_NAMES (0:3) char(12) varying int static options(constant) init(
 10   285 	"do_mask", "dont_mask", "derive_mask", "");
 10   286 
 10   287 
 10   288 /* names for ute.pw_flags */
 10   289 
 10   290 dcl  PW_FLAG_NAMES (9) char (12) varying int static options(constant) init(
 10   291 	"cpw",
 10   292 	"generate_pw",
 10   293 	"dial_pw",
 10   294 	"slave_pw",
 10   295 	"cdp",
 10   296 	"cda",
 10   297 	"auth_given",
 10   298 	"noprint",
 10   299 	"operator");
 10   300 
 10   301 /* names for ute.uflags */
 10   302 
 10   303 dcl  UFLAG_NAMES (19) char (24) varying int static options (constant) init (
 10   304 	"dont_call_init_admin",
 10   305 	"ip_given",
 10   306 	"ss_given",
 10   307 	"lvs_attached",
 10   308 	"send_initial_string",
 10   309 	"adjust_abs_q_no",
 10   310 	"foreground_secondary_ok",
 10   311 	"foreground_job",
 10   312 	"sus_sent",
 10   313 	"suspended",
 10   314 	"ignore_cpulimit",
 10   315 	"deferral_logged",
 10   316 	"save_if_disconnected",
 10   317 	"disconnected",
 10   318 	"disconnected_list",
 10   319 	"proc_create_ok",
 10   320 	"activity_can_unbump",
 10   321 	"fpe_causes_logout",
 10   322 	"user_specified_immediate");
 10   323 
 10   324 /* names for ute.abs_flags */
 10   325 
 10   326 dcl  ABS_FLAG_NAMES (2) char (8) varying int static options (constant) init (
 10   327 	"abs_run",
 10   328 	"notify");
 10   329 
 10   330 /* names of ute.dial_server_flags */
 10   331 
 10   332 dcl  DIAL_SERVER_FLAG_NAMES (2) char (12) varying int static options (constant) init (
 10   333 	"registered",
 10   334 	"privileged");
 10   335 
 10   336 /* values of ute.login_result */
 10   337 
 10   338 dcl  LOGIN_RESULT_VALUES (0:2) char(24) varying int static options(constant) init(
 10   339 	"logged in",
 10   340 	"login failed, hangup",
 10   341 	"login failed, try again");
 10   342 
 10   343 /*  END INCLUDE FILE ... user_table_entry.incl.pl1 */
      236 
      237  /* BEGIN INCLUDE FILE ... user_table_header.incl.pl1 */
 11     2 
 11     3 /* *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */
 11     4 /*							       */
 11     5 /* This include file declares the header shared by the answer_table,	       */
 11     6 /* absentee_user_table and daemon_user_table include files.		       */
 11     7 /*							       */
 11     8 /* *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */
 11     9 
 11    10 /****^  HISTORY COMMENTS:
 11    11*  1) change(87-04-26,GDixon), approve(87-07-13,MCR7741),
 11    12*     audit(87-07-16,Brunelle), install(87-08-04,MR12.1-1056):
 11    13*     Initial coding.
 11    14*                                                   END HISTORY COMMENTS */
 11    15 
 11    16 dcl  1 ut_header			aligned based,	/* header shared by all user control tables. */
 11    17        2 header_version fixed bin,			/* version of the header (3) */
 11    18        2 entry_version fixed bin,			/* version of user table entries */
 11    19        2 user_table_type fixed bin,			/* 1 interactive, 2 absentee, 3 daemon */
 11    20        2 header_length fixed bin,			/* length of the header */
 11    21        2 max_size fixed bin,				/* max number of entries in this table */
 11    22        2 current_size fixed bin,			/* actual size of table (in entries) */
 11    23        2 number_free fixed bin,			/* number of free entries in the table. */
 11    24        2 first_free fixed bin,			/* index of first entry in the free list. */
 11    25        2 as_procid bit (36),				/* process ID of user table manager process */
 11    26        2 ut_header_pad fixed bin;
 11    27 
 11    28 /* END INCLUDE FILE ... user_table_header.incl.pl1 */
      237 
      238 
      239 end uc_list_disconnected_procs_;
	SOURCE FILES USED IN THIS COMPILATION.

LINE      NUMBER  DATE MODIFIED     NAME			PATHNAME
             0    07/13/88  0938.2  uc_list_disconnected_procs_.pl1   >special_ldd>install>MR12.2-1047>uc_list_disconnected_procs_.pl1
227          1    08/06/87  0913.0  answer_table.incl.pl1             >ldd>include>answer_table.incl.pl1
228          2    08/06/87  0913.4  as_data_.incl.pl1                 >ldd>include>as_data_.incl.pl1
229          3    08/06/87  0913.4  dialup_values.incl.pl1            >ldd>include>dialup_values.incl.pl1
230          4    09/13/84  0921.6  pdt.incl.pl1                      >ldd>include>pdt.incl.pl1
4-29         5    04/21/82  1211.8  author.incl.pl1                   >ldd>include>author.incl.pl1
233          6    08/06/87  0913.5  sys_log_constants.incl.pl1        >ldd>include>sys_log_constants.incl.pl1
234          7    08/06/87  0913.5  uc_disc_proc_list.incl.pl1        >ldd>include>uc_disc_proc_list.incl.pl1
235          8    08/06/87  0913.6  user_attributes.incl.pl1          >ldd>include>user_attributes.incl.pl1
8-112        9    07/13/88  0900.1  user_abs_attributes.incl.pl1      >special_ldd>install>MR12.2-1047>user_abs_attributes.incl.pl1
236         10    07/13/88  0903.2  user_table_entry.incl.pl1         >special_ldd>install>MR12.2-1047>user_table_entry.incl.pl1
237         11    08/06/87  0913.6  user_table_header.incl.pl1        >ldd>include>user_table_header.incl.pl1
	NAMES DECLARED IN THIS COMPILATION.

IDENTIFIER	     OFFSET    LOC STORAGE CLASS   DATA TYPE		ATTRIBUTES AND REFERENCES
								(* indicates a set context)

NAMES DECLARED BY DECLARE STATEMENT.
ME                              000522 constant        char(27)                 initial packed unaligned dcl 82 ref 207 218
NOW_LOGGED_IN                          constant        fixed bin(17,0)          initial dcl 3-76 ref 140
P_area_ptr                             parameter       pointer                  dcl 56 ref 50 96
P_uc_disconnected_process_list_ptr     parameter       pointer                  dcl 57 set ref 50 171*
P_utep                                 parameter       pointer                  dcl 55 ref 50 95
SL_LOG_SILENT                          constant        fixed bin(17,0)          initial dcl 6-14 ref 206 217
UC_DISCONNECTED_PROCESS_LIST_VERSION_1
                                000520 constant        char(8)                  initial packed unaligned dcl 7-25 ref 130
UTE_SIZE                               constant        fixed bin(17,0)          initial dcl 1-120 ref 139 139
active                                 based           fixed bin(17,0)          level 2 dcl 10-78 ref 140
addr                                                   builtin function         dcl 86 ref 139 208 208 219 219
anonymous                16            based           fixed bin(17,0)          level 2 dcl 10-78 ref 140
ansp                            000120 automatic       pointer                  initial dcl 1-53 set ref 135* 138 139 1-53*
anstbl                                 based           structure                level 1 dcl 1-55
area_ptr                        000100 automatic       pointer                  dcl 61 set ref 96* 116 116* 121 124 129 151 156 178
arg_list_ptr              2     000124 automatic       pointer                  level 2 dcl 6-24 set ref 205* 216*
as_data_$ansp                   000014 external static pointer                  dcl 2-26 ref 135
caller                   17     000124 automatic       varying char(65)         level 2 dcl 6-24 set ref 207* 218*
cleanup                         000112 stack reference condition                dcl 91 ref 120
code                     16     000124 automatic       fixed bin(35,0)          level 2 in structure "sl_info" dcl 6-24 in procedure
                                                                                  "uc_list_disconnected_procs_" set ref 209
code                            000102 automatic       fixed bin(35,0)          dcl 62 in procedure "uc_list_disconnected_procs_"
                                                                                  set ref 98* 209*
cu_$arg_list_ptr                000016 constant        entry                    external dcl 201 ref 205 216
current_size              5            based           fixed bin(17,0)          level 3 dcl 1-55 ref 138
disconnected            431(13)        based           bit(1)                   level 3 packed packed unaligned dcl 10-78 ref 140
entry                   200            based           structure                array level 2 dcl 1-55 set ref 139
error_table_$null_info_ptr      000012 external static fixed bin(35,0)          dcl 78 set ref 100*
get_system_free_area_           000010 constant        entry                    external dcl 74 ref 116
header                                 based           structure                level 2 dcl 1-55
n_disconnected          362(09)        based           fixed bin(9,0)           level 2 packed packed unsigned unaligned dcl 4-58
                                                                                  set ref 113 128 165 166*
n_disconnected_processes
                          2            based           fixed bin(17,0)          level 2 dcl 7-17 set ref 121 124 129* 132* 147 151*
                                                                                  153* 153 155 156 159* 178
null                                                   builtin function         dcl 86 ref 97 100 105 116 119 158 176 179 1-53 232
                                                                                  10-76 121 124
pdtep                   354            based           pointer                  level 2 dcl 10-78 set ref 104* 104 105 113 128 165
                                                                                  166
pdtp                            000122 automatic       pointer                  initial dcl 232 set ref 232*
person                    4            based           char(24)                 level 2 packed packed unaligned dcl 10-78 set ref
                                                                                  105* 140 140
process                   4            based           structure                array level 2 dcl 7-17
processes_found                 000103 automatic       fixed bin(17,0)          dcl 63 set ref 136* 146* 146 147 150 159 161 165
                                                                                  166*
project                  12            based           char(12)                 level 2 packed packed unaligned dcl 10-78 set ref
                                                                                  105* 140 140
severity                 15     000124 automatic       fixed bin(17,0)          level 2 dcl 6-24 set ref 206* 217*
sl_info                         000124 automatic       structure                level 1 dcl 6-24 set ref 204* 208 208 215* 219 219
sl_info_code_msg                000000 constant        structure                level 1 dcl 6-187 ref 204
sl_info_msg                     000250 constant        structure                level 1 dcl 6-214 ref 215
sys_log_$general                000020 constant        entry                    external dcl 202 ref 208 219
system_area                            based           area(1024)               dcl 70 ref 121 124 129 151 156 178
temp_list                       000104 automatic       pointer                  dcl 64 set ref 119* 121 121 121 151* 153 155 157
                                                                                  158*
temp_utep                       000106 automatic       pointer                  dcl 65 set ref 139* 140 140 140 140 140 140 161
tty_name                316            based           char(32)                 level 2 packed packed unaligned dcl 10-78 set ref
                                                                                  105*
uc_disconnected_process_list           based           structure                level 1 dcl 7-17 set ref 121 124 129 151 155* 155
                                                                                  156 178
uc_disconnected_process_list_ptr
                                000374 automatic       pointer                  dcl 7-15 set ref 97* 121 124 124 129* 130 132 147
                                                                                  153 155 156 157* 159 161 171 176 178 179*
uc_n_disconnected_processes     000376 automatic       fixed bin(17,0)          dcl 7-16 set ref 128* 129 129 132 150* 151 151
uflags                  431            based           structure                level 2 dcl 10-78
user                                   based           structure                level 1 dcl 4-58
user_abs_attributes                    based           structure                level 1 dcl 9-25
user_attributes                        based           structure                level 1 dcl 8-21
ut_header                              based           structure                level 1 dcl 11-16
ute                                    based           structure                level 1 dcl 10-78
ute_index                       000110 automatic       fixed bin(17,0)          dcl 66 set ref 138* 139*
utep                            000400 automatic       pointer                  initial dcl 10-76 in procedure
                                                                                  "uc_list_disconnected_procs_" set ref 95* 100 104
                                                                                  104 105 105 105 105 113 128 140 140 140 165 166
                                                                                  10-76*
utep                      4            based           pointer                  array level 3 in structure
                                                                                  "uc_disconnected_process_list" dcl 7-17
                                                                                  in procedure "uc_list_disconnected_procs_" set ref
                                                                                  161*
version                                based           char(8)                  level 2 dcl 7-17 set ref 130*

NAMES DECLARED BY DECLARE STATEMENT AND NEVER REFERENCED.
ABS_ATTRIBUTE_NAMES                    internal static varying char(28)         initial array dcl 9-38
ABS_FLAG_NAMES                         internal static varying char(8)          initial array dcl 10-326
ACTIVE_VALUES                          internal static char(18)                 initial array dcl 3-86
ALT_USER_ATTRIBUTE_NAMES               internal static char(20)                 initial array packed unaligned dcl 8-77
ANSTBL_version_4                       internal static fixed bin(17,0)          initial dcl 1-51
AT_NORMAL                              internal static char(8)                  initial packed unaligned dcl 1-116
AT_SHUTDOWN                            internal static char(8)                  initial packed unaligned dcl 1-116
AT_SPECIAL                             internal static char(8)                  initial packed unaligned dcl 1-116
DERIVE_MASK                            internal static bit(2)                   initial packed unaligned dcl 10-280
DIAL_SERVER_FLAG_NAMES                 internal static varying char(12)         initial array dcl 10-332
DONT_MASK                              internal static bit(2)                   initial packed unaligned dcl 10-280
DO_MASK                                internal static bit(2)                   initial packed unaligned dcl 10-280
LOGIN_RESULT_VALUES                    internal static varying char(24)         initial array dcl 10-338
MASK_CTL_NAMES                         internal static varying char(12)         initial array dcl 10-284
NOW_DIALED                             internal static fixed bin(17,0)          initial dcl 3-76
NOW_DIALED_OUT                         internal static fixed bin(17,0)          initial dcl 3-76
NOW_DIALING                            internal static fixed bin(17,0)          initial dcl 3-76
NOW_FREE                               internal static fixed bin(17,0)          initial dcl 3-76
NOW_HAS_PROCESS                        internal static fixed bin(17,0)          initial dcl 3-76
NOW_HUNG_UP                            internal static fixed bin(17,0)          initial dcl 3-76
NOW_LISTENING                          internal static fixed bin(17,0)          initial dcl 3-76
PDT_entry_lth                          internal static fixed bin(17,0)          initial dcl 4-19
PDT_header_lth                         internal static fixed bin(17,0)          initial dcl 4-19
PDT_person_id_length                   internal static fixed bin(17,0)          initial dcl 4-19
PDT_project_name_length                internal static fixed bin(17,0)          initial dcl 4-19
PDT_version                            internal static fixed bin(17,0)          initial dcl 4-19
PREEMPT_BUMPED                         internal static fixed bin(17,0)          initial dcl 3-132
PREEMPT_BUMPED_NO_TERM                 internal static fixed bin(17,0)          initial dcl 3-132
PREEMPT_LOAD_CTL                       internal static fixed bin(17,0)          initial dcl 3-132
PREEMPT_TERMSGNL_RECEIVED              internal static fixed bin(17,0)          initial dcl 3-132
PREEMPT_TERM_SENT                      internal static fixed bin(17,0)          initial dcl 3-132
PREEMPT_UNBUMP                         internal static fixed bin(17,0)          initial dcl 3-132
PREEMPT_UNBUMP_IGNORE_ALARM            internal static fixed bin(17,0)          initial dcl 3-132
PREEMPT_VALUES                         internal static varying char(28)         initial array dcl 3-142
PROCESS_TYPE_NAMES                     internal static varying char(12)         initial array dcl 10-265
PT_ABSENTEE                            internal static fixed bin(17,0)          initial dcl 10-261
PT_ALARM                               internal static fixed bin(17,0)          initial dcl 3-106
PT_BUMP                                internal static fixed bin(17,0)          initial dcl 3-106
PT_DAEMON                              internal static fixed bin(17,0)          initial dcl 10-261
PT_DESTROY_REQUEST                     internal static fixed bin(17,0)          initial dcl 3-106
PT_DETACH                              internal static fixed bin(17,0)          initial dcl 3-106
PT_FPE                                 internal static fixed bin(17,0)          initial dcl 3-106
PT_HANGUP                              internal static fixed bin(17,0)          initial dcl 3-106
PT_INTERACTIVE                         internal static fixed bin(17,0)          initial dcl 10-261
PT_LOGOUT                              internal static fixed bin(17,0)          initial dcl 3-106
PT_NEW_PROC_AUTH                       internal static fixed bin(17,0)          initial dcl 3-106
PT_NEW_PROC_REQUEST                    internal static fixed bin(17,0)          initial dcl 3-106
PT_OPERATOR_TERMINATE                  internal static fixed bin(17,0)          initial dcl 3-106
PT_SHUTDOWN                            internal static fixed bin(17,0)          initial dcl 3-106
PT_UNBUMP                              internal static fixed bin(17,0)          initial dcl 3-106
PW_FLAG_NAMES                          internal static varying char(12)         initial array dcl 10-290
SL_INFO_arg_given_in_structure         internal static fixed bin(17,0)          initial dcl 6-69
SL_INFO_arg_not_given                  internal static fixed bin(17,0)          initial dcl 6-69
SL_INFO_as_mode                        internal static fixed bin(17,0)          initial dcl 6-65
SL_INFO_command_mode                   internal static fixed bin(17,0)          initial dcl 6-65
SL_INFO_version_1                      internal static char(8)                  initial packed unaligned dcl 6-62
SL_LOG                                 internal static fixed bin(17,0)          initial dcl 6-14
SL_LOG_BEEP                            internal static fixed bin(17,0)          initial dcl 6-14
SL_LOG_CRASH                           internal static fixed bin(17,0)          initial dcl 6-14
SL_TYPE                                internal static fixed bin(17,0)          initial dcl 6-14
SL_TYPE_BEEP                           internal static fixed bin(17,0)          initial dcl 6-14
SL_TYPE_CRASH                          internal static fixed bin(17,0)          initial dcl 6-14
STATE_VALUES                           internal static char(15)                 initial array dcl 3-70
TABLE_NAMES                            internal static char(20)                 initial array packed unaligned dcl 10-271
TAG_ABSENTEE                           internal static char(1)                  initial packed unaligned dcl 3-93
TAG_DAEMON                             internal static char(1)                  initial packed unaligned dcl 3-93
TAG_INTERACTIVE                        internal static char(1)                  initial packed unaligned dcl 3-93
TAG_PROXY                              internal static char(1)                  initial packed unaligned dcl 3-93
TAG_UFT                                internal static char(1)                  initial packed unaligned dcl 3-93
TRA_VEC_VALUES                         internal static char(32)                 initial array dcl 3-54
TTY_DIALED                             internal static fixed bin(17,0)          initial dcl 3-64
TTY_HUNG                               internal static fixed bin(17,0)          initial dcl 3-64
TTY_KNOWN                              internal static fixed bin(17,0)          initial dcl 3-64
TTY_MASKED                             internal static fixed bin(17,0)          initial dcl 3-64
UFLAG_NAMES                            internal static varying char(24)         initial array dcl 10-303
USER_ATTRIBUTES_always_allowed         internal static bit(36)                  initial dcl 8-100
USER_ATTRIBUTES_default_in_pdt         internal static bit(36)                  initial dcl 8-104
USER_ATTRIBUTES_settable_by_user       internal static bit(36)                  initial dcl 8-108
USER_ATTRIBUTE_NAMES                   internal static char(20)                 initial array packed unaligned dcl 8-50
UTE_version_4                          internal static fixed bin(17,0)          initial dcl 10-74
WAIT_ANSWERBACK                        internal static fixed bin(17,0)          initial dcl 3-25
WAIT_BEFORE_HANGUP                     internal static fixed bin(17,0)          initial dcl 3-25
WAIT_CONNECT_REQUEST                   internal static fixed bin(17,0)          initial dcl 3-25
WAIT_DELETE_CHANNEL                    internal static fixed bin(17,0)          initial dcl 3-25
WAIT_DESTROY_REQUEST                   internal static fixed bin(17,0)          initial dcl 3-25
WAIT_DETACH                            internal static fixed bin(17,0)          initial dcl 3-25
WAIT_DIALUP                            internal static fixed bin(17,0)          initial dcl 3-25
WAIT_DIAL_OUT                          internal static fixed bin(17,0)          initial dcl 3-25
WAIT_DIAL_RELEASE                      internal static fixed bin(17,0)          initial dcl 3-25
WAIT_DISCARD_WAKEUPS                   internal static fixed bin(17,0)          initial dcl 3-25
WAIT_FIN_PRIV_ATTACH                   internal static fixed bin(17,0)          initial dcl 3-25
WAIT_FIN_TANDD_ATTACH                  internal static fixed bin(17,0)          initial dcl 3-25
WAIT_GREETING_MSG                      internal static fixed bin(17,0)          initial dcl 3-25
WAIT_HANGUP                            internal static fixed bin(17,0)          initial dcl 3-25
WAIT_LOGIN_ARGS                        internal static fixed bin(17,0)          initial dcl 3-25
WAIT_LOGIN_LINE                        internal static fixed bin(17,0)          initial dcl 3-25
WAIT_LOGOUT                            internal static fixed bin(17,0)          initial dcl 3-25
WAIT_LOGOUT_HOLD                       internal static fixed bin(17,0)          initial dcl 3-25
WAIT_LOGOUT_SIG                        internal static fixed bin(17,0)          initial dcl 3-25
WAIT_NEW_PASSWORD                      internal static fixed bin(17,0)          initial dcl 3-25
WAIT_NEW_PROC                          internal static fixed bin(17,0)          initial dcl 3-25
WAIT_NEW_PROC_REQUEST                  internal static fixed bin(17,0)          initial dcl 3-25
WAIT_OLD_PASSWORD                      internal static fixed bin(17,0)          initial dcl 3-25
WAIT_PASSWORD                          internal static fixed bin(17,0)          initial dcl 3-25
WAIT_REMOVE                            internal static fixed bin(17,0)          initial dcl 3-25
WAIT_SLAVE_REQUEST                     internal static fixed bin(17,0)          initial dcl 3-25
WAIT_TANDD_HANGUP                      internal static fixed bin(17,0)          initial dcl 3-25
as_data_$BS                            external static char(1)                  dcl 2-21
as_data_$CR                            external static char(1)                  dcl 2-22
as_data_$abs_dim                       external static char(32)                 packed unaligned dcl 2-23
as_data_$acct_update_priority          external static fixed bin(17,0)          dcl 2-24
as_data_$acsdir                        external static char(168)                packed unaligned dcl 2-25
as_data_$as_procid                     external static bit(36)                  dcl 2-27
as_data_$as_ring                       external static fixed bin(3,0)           dcl 2-28
as_data_$as_tty                        automatic       char(6)                  packed unaligned dcl 2-29
as_data_$asmtp                         external static pointer                  dcl 2-30
as_data_$autp                          external static pointer                  dcl 2-31
as_data_$buzzardp                      external static pointer                  dcl 2-32
as_data_$cdtp                          external static pointer                  dcl 2-33
as_data_$debug_flag                    external static bit(1)                   dcl 2-84
as_data_$default_weight                external static fixed bin(35,0)          dcl 2-34
as_data_$devtabp                       external static pointer                  dcl 2-35
as_data_$dft_user_ring                 external static fixed bin(3,0)           dcl 2-36
as_data_$dutp                          external static pointer                  dcl 2-37
as_data_$g115_dim                      external static char(32)                 packed unaligned dcl 2-38
as_data_$lct_initialized               external static bit(1)                   dcl 2-39
as_data_$lct_size                      external static fixed bin(17,0)          dcl 2-40
as_data_$login_args                    external static structure                level 1 dcl 2-62
as_data_$login_words                   external static fixed bin(17,0)          dcl 2-77
as_data_$ls_message_buffer_cur_lth     external static fixed bin(18,0)          dcl 2-86
as_data_$ls_message_buffer_max_lth     external static fixed bin(18,0)          dcl 2-87
as_data_$ls_message_buffer_ptr         external static pointer                  dcl 2-88
as_data_$ls_request_server_info_ptr    external static pointer                  dcl 2-85
as_data_$max_user_ring                 external static fixed bin(3,0)           dcl 2-41
as_data_$mgtp                          external static pointer                  dcl 2-42
as_data_$mrd_dim                       external static char(32)                 packed unaligned dcl 2-43
as_data_$ntty_dim                      external static char(32)                 packed unaligned dcl 2-44
as_data_$pdtdir                        external static char(168)                packed unaligned dcl 2-45
as_data_$pit_ptr                       external static pointer                  dcl 2-46
as_data_$rcpdir                        external static char(168)                packed unaligned dcl 2-47
as_data_$request_priority              external static fixed bin(17,0)          dcl 2-48
as_data_$rs_ptrs                       external static pointer                  array dcl 2-49
as_data_$rtdtp                         external static pointer                  dcl 2-50
as_data_$sat_htp                       external static pointer                  dcl 2-51
as_data_$satp                          external static pointer                  dcl 2-52
as_data_$signal_types                  external static structure                level 1 dcl 2-67
as_data_$suffix                        external static char(2)                  array packed unaligned dcl 2-53
as_data_$sysdir                        external static char(168)                packed unaligned dcl 2-54
as_data_$system_signal_types           external static structure                level 1 dcl 2-72
as_data_$teens_suffix                  external static char(2)                  array packed unaligned dcl 2-55
as_data_$terminet_tabs_string          external static varying char(144)        dcl 2-56
as_data_$tty_dim                       external static char(32)                 packed unaligned dcl 2-57
as_data_$update_priority               external static fixed bin(17,0)          dcl 2-58
as_data_$version                       external static char(8)                  packed unaligned dcl 2-59
as_data_$whoptr                        external static pointer                  dcl 2-60
as_data_login_words                    based           structure                level 1 dcl 2-77
pdt                                    based           structure                level 1 dcl 4-27
sl_info_sev_code_label_msg             internal static structure                level 1 dcl 6-161
sl_info_sev_code_msg                   internal static structure                level 1 dcl 6-82
sl_info_sev_coded_msg                  internal static structure                level 1 dcl 6-134
sl_info_sev_msg                        internal static structure                level 1 dcl 6-108

NAMES DECLARED BY EXPLICIT CONTEXT.
ABORT_RETURN                    001222 constant        label                    dcl 176 ref 210
Abort                           001240 constant        entry                    internal dcl 198 ref 100 105
Error_No_Abort                  001307 constant        entry                    internal dcl 212 ref 166
RETURN                          001216 constant        label                    dcl 171 ref 113 181
uc_list_disconnected_procs_     000607 constant        entry                    external dcl 50

THERE WERE NO NAMES DECLARED BY CONTEXT OR IMPLICATION.

STORAGE REQUIREMENTS FOR THIS PROGRAM.

	Object	Text	Link	Symbol	Defs	Static
Start          0       0      1500        1522    1351        1510
Length      2146    1351        22         407     126           0

BLOCK NAME	         STACK SIZE     TYPE		WHY NONQUICK/WHO SHARES STACK FRAME
uc_list_disconnected_procs_         302 external procedure  is an external procedure.  
on unit on line 120                  64 on unit               
Abort                                70 internal procedure  is declared options(variable).  

STORAGE FOR AUTOMATIC VARIABLES.

STACK FRAME                 LOC IDENTIFIER                  BLOCK NAME
uc_list_disconnected_procs_
                         000100 area_ptr                    uc_list_disconnected_procs_
                         000102 code                        uc_list_disconnected_procs_
                         000103 processes_found             uc_list_disconnected_procs_
                         000104 temp_list                   uc_list_disconnected_procs_
                         000106 temp_utep                   uc_list_disconnected_procs_
                         000110 ute_index                   uc_list_disconnected_procs_
                         000120 ansp                        uc_list_disconnected_procs_
                         000122 pdtp                        uc_list_disconnected_procs_
                         000124 sl_info                     uc_list_disconnected_procs_
                         000374 uc_disconnected_process_list_ptr
                                                            uc_list_disconnected_procs_
                         000376 uc_n_disconnected_processes uc_list_disconnected_procs_
                         000400 utep                        uc_list_disconnected_procs_

THE FOLLOWING EXTERNAL OPERATORS ARE USED BY THIS PROGRAM.
call_ext_out        call_int_this_desc  return_mac          tra_ext_1           enable_op           ext_entry
int_entry           op_alloc_           op_freen_

THE FOLLOWING EXTERNAL ENTRIES ARE CALLED BY THIS PROGRAM.
cu_$arg_list_ptr              get_system_free_area_         sys_log_$general

THE FOLLOWING EXTERNAL VARIABLES ARE USED BY THIS PROGRAM.
as_data_$ansp                 error_table_$null_info_ptr




   LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC   
     50 000603    1   53 000614       232 000616   10   76 000617        95 000620        96 000624        97 000627
     98 000630       100 000631       104 000656       105 000662       113 000723       116 000731       119 000744
    120 000746       121 000762       124 001001       126 001014       128 001015       129 001023       130 001034
    135 001037       136 001043       138 001044       139 001055       140 001062       146 001107       147 001110
    150 001114       151 001115       153 001126       155 001131       156 001140       157 001145       158 001147
    159 001151       161 001154       163 001160       165 001162       166 001171       171 001216       174 001221
    176 001222       178 001226       179 001234       181 001236       198 001237       204 001245       205 001251
    206 001257       207 001262       208 001267       209 001300       210 001303       212 001306       215 001314
    216 001320       217 001327       218 001332       219 001337       220 001350


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
