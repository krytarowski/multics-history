Compilation listing of file >2.1spec>online>mib083074>bcpl_cg9.bcpl.
Compilation performed for Martinson.SysMaint.a at 01/24/75  0657.1 mst Fri.
Compiled by BCPL version 3.4, August 1973.  Compiler updated at 09/25/73  0959.1 mst Tue.
Options applied:  source  xref  alist  optimize  6180.

     1	//  These routines write the assembly-format listing.
     2	//  Last modified on 06/06/74 at 18:24:47 by R F Mabee.
     3	//  Changes for 6180 code generation installed with Version 3.4 by R F Mabee.
     4	//  First installed with Version 2.7 of the compiler, R F Mabee.
     5	
     6	//  Copyright (c) 1974 by Massachusetts Institute of Technology and Honeywell Information Systems, Inc.
     7	
     8	//  General permission is granted to copy and use this program, but not to sell it, provided that the above
     9	//  copyright statement is given.  Contact Information Processing Services, MIT, for further information.
    10	//  Please contact R F Mabee at MIT for information on this program and versions for other machines.
    11	
    12	get "bcpl_cg_head"
	     1	//  Declarations for the code generator.
	     2	//  Last modified on 08/15/73 at 00:31:50 by R F Mabee.
	     3	//  Code generator substantially modified during 6180 bootstrap, and installed with Version 3.4, R F Mabee.
	     4	//  First installed as Version 2.7, R F Mabee.
	     5	
	     6	//  Copyright (c) 1973 by the author, Robert F. Mabee.
	     7	//  This file may only be reproduced or modified with explicit written
	     8	//  permission of the author.  Permission is hereby extended to those
	     9	//  persons responsible for operating the Multics system to make such
	    10	//  copies as are normally required to ensure the integrity of the Multics
	    11	//  file system.  Permission is also hereby extended to those persons
	    12	//  responsible for maintaining the Multics program libraries to make such
	    13	//  copies as are normally required for online installations.
	    14	
	    15	get "bcpl_compiler_head"
		     1	//  Declarations common to the entire BCPL compiler.
		     2	//  Last modified on 07/28/73 at 03:56:32 by R F Mabee.
		     3	//  Installed on 6180 as Version 3.4, R F Mabee.
		     4	//  First installed on 645 as Version 2.7 by R F Mabee.
		     5	
		     6	//  Copyright (c) 1973 by the author, Robert F. Mabee.
		     7	//  This file may only be reproduced or modified with explicit written
		     8	//  permission of the author.  Permission is hereby extended to those
		     9	//  persons responsible for operating the Multics system to make such
		    10	//  copies as are normally required to ensure the integrity of the Multics
		    11	//  file system.  Permission is also hereby extended to those persons
		    12	//  responsible for maintaining the Multics program libraries to make such
		    13	//  copies as are normally required for online installations.
		    14	
		    15	external
		    16	     $(	Readch = "bcpl_machine_code_$Readch"		//  Library routines used by the compiler.
		    17		Writech = "bcpl_machine_code_$Writech"
		    18		WriteS = "bcpl_stream_io_$WriteS"
		    19		WriteN = "bcpl_stream_io_$WriteN"
		    20		Format = "bcpl_stream_io_$Format"
		    21		Packstring = "bcpl_machine_code_$Packstring"
		    22		Unpackstring = "bcpl_machine_code_$Unpackstring"
		    23		RemoveEscapes = "bcpl_conversions_$RemoveEscapes"
		    24		EqualString = "bcpl_strings_$EqualString"
		    25		CompareStrings = "bcpl_strings_$CompareStrings"	//  Alphabetic comparison.
		    26		Concatenate = "bcpl_strings_$Concatenate"
		    27		ConvertStoN = "bcpl_conversions_$ConvertStoN"
		    28		ConvertNtoS = "bcpl_conversions_$ConvertNtoS"
		    29		Length = "bcpl_strings_$Length"		//  Number of characters.
		    30		LengthInWords = "bcpl_strings_$LengthInWords"	//  Length of packed string.
		    31		RandomI = "bcpl_arithmetic_$RandomI"
		    32	
		    33		Newvec = "bcpl_utility$Newvec"		//  Utility routines used throughout the compiler.
		    34		Freevec = "bcpl_utility$Freevec"
		    35		List1 = "bcpl_utility$List1"
		    36		List2 = "bcpl_utility$List2"
		    37		List3 = "bcpl_utility$List3"
		    38		List4 = "bcpl_utility$List4"
		    39		List5 = "bcpl_utility$List5"
		    40		List6 = "bcpl_utility$List6"
		    41		StoreString = "bcpl_utility$StoreString"
		    42		PushInput = "bcpl_utility$PushInput"
		    43		PopInput = "bcpl_utility$PopInput"
		    44		MakeTimeString = "bcpl_utility$MakeTimeString"
		    45		Nextparam = "bcpl_utility$Nextparam"
		    46		FormCharconst = "bcpl_utility$FormCharconst"
		    47		FormStringconst = "bcpl_utility$FormStringconst"
		    48	
		    49		CaeReport = "bcpl_report$CaeReport"
		    50		Transreport = "bcpl_report$Transreport"
		    51		CGreport = "bcpl_report$CGreport"
		    52	
		    53		Nextsymb = "bcpl_lex0$Nextsymb"
		    54	
		    55		SymbolName = "bcpl_plist$SymbolName"
		    56		FindPrintName = "bcpl_plist$FindPrintName"
		    57		EnterIntoCrossreference = "bcpl_plist$EnterIntoCrossreference"
		    58	
		    59		GetVersion = "bcpl_version$GetVersion"		//  Routines used only by the driver.
		    60		UtilitiesInit = "bcpl_utility$UtilitiesInit"
		    61		Cleanup = "bcpl_utility$Cleanup"
		    62		GetStream = "bcpl_utility$GetStream"
		    63	
		    64		CAE = "bcpl_cae0$CAE"
		    65		LexInit = "bcpl_lex0$LexInit"
		    66	
		    67		Pname = "bcpl_plist$Pname"
		    68		Plist = "bcpl_plist$Plist"
		    69	
		    70		Trans = "bcpl_trans0$Trans"
		    71		CgInit = "bcpl_cg0$CgInit"
		    72		BuildObject = "bcpl_cg0$BuildObject"
		    73		WriteObjectListing = "bcpl_cg0$WriteObjectListing"
		    74	     $)
		    75	
		    76	global		//  Globals are reserved in blocks as follows:
		    77	     $(	//    0 -  31	system
		    78		//   32 -  99	library
		    79		//  100 - 149	options and other common cells
		    80		//  150 - 159	metering cells
		    81		//  160 - 169	bcpl_utility
		    82		//  170 - 199	to be assigned
		    83		//  200 - 229	lexical phase
		    84		//  230 - 249	syntax analyzer
		    85		//  250 - 299	translator
		    86		//  300 - 399	code generator
		    87	
		    88			//  Cells used for communication with the library.
		    89		OUTPUT		: 32
		    90		INPUT		: 33
		    91		MONITOR		: 34
		    92		Ch		: 36
		    93	
		    94			//  Options for this compilation.
		    95		Listing		: 100
		    96		UpperCase		: 101
		    97		PPrep		: 102
		    98		Crep		: 103
		    99		Symbols		: 104
		   100		LineMap		: 105
		   101		Optimize		: 106
		   102		Machine		: 107
		   103		Xref		: 108
		   104		OcodeSw		: 109
		   105		HaveListingFile	: 110
		   106		QuietSw		: 111
		   107	
		   108			//  Other information about this compilation.
		   109		CompilerVersionString : 120
		   110		CompilerVersionNumber : 121
		   111		CompilerDTMString	: 122
		   112		CompilerDTM	: 123
		   113		TimeNowString	: 124
		   114		TimeNow		: 125
		   115		OptionString	: 126
		   116		FileNames		: 127
		   117		FilesInfo		: 128
		   118		FileCount		: 129
		   119		ProgramName	: 130
		   120		UserID		: 131
		   121	
		   122			//  Working variables needing global scope.
		   123		LineCount		: 140
		   124		Errorsw		: 141
		   125		NAMECHAIN		: 142
		   126		Symb		: 143
		   127		DictionaryEntry	: 144
		   128		Column		: 145
		   129	     $)
		   130	manifest
		   131	     $(	GlobalTemp = 199  $)	//  Number of cell available for local, temporary use.
		   132	
		   133	manifest
		   134	     $(	Left = 18; Right = $8777777
		   135		Endofstreamch = $87777
		   136		Even = $87777777777776
		   137		Vmax = 511
		   138		LineMask = $817777; FileShift = 13	//  Breakdown of line count.
		   139		UnexpectedCase = 99		//  Error code for use throughout compiler.
		   140	     $)
	    16	get "bcpl_symbols"
		     1	//  All symbols used in the interface between any two phases of the compiler are defined here.
		     2	//  This includes all canonical symbols, syntax tree nodes, and XOCODE operators.
		     3	//  Last modified on 07/08/73 at 22:55:31 by R F Mabee.
		     4	//  Revisions installed in Version 3.4 on 6180, R F Mabee.
		     5	//  First installed with Version 2.7 by R F Mabee.
		     6	
		     7	//  Copyright (c) 1973 by the author, Robert F. Mabee.
		     8	//  This file may only be reproduced or modified with explicit written
		     9	//  permission of the author.  Permission is hereby extended to those
		    10	//  persons responsible for operating the Multics system to make such
		    11	//  copies as are normally required to ensure the integrity of the Multics
		    12	//  file system.  Permission is also hereby extended to those persons
		    13	//  responsible for maintaining the Multics program libraries to make such
		    14	//  copies as are normally required for online installations.
		    15	
		    16	manifest
		    17	     $(	AND_S = 1
		    18		ASSIGN_S = 2
		    19		BE_S = 3
		    20		BIT_S = 4
		    21		BREAK_S = 5
		    22		BY_S = 6
		    23		CALL_S = 07
		    24		CASE_S = 08
		    25	
		    26		CHAR_S = 10
		    27		CHARCONST_S = 11
		    28		COLON_S = 12
		    29		COMMA_S = 13
		    30		COND_S = 14
		    31		CONSTANT_S = 15
		    32		CONSTDEF_S = 16
		    33		DEFAULT_S = 17
		    34		DIV_F = 18
		    35	
		    36		DIV_S = 20
		    37		DO_S = 21
		    38		DOUBLE_S = 22
		    39		ENDCASE_S = 23
		    40		ENDPROG_S = 24
		    41		ERROR_S = 25
		    42		EQ_F = 26
		    43		EQ_S = 27
		    44		EQV_S = 28
		    45	
		    46		EXTERNAL_S = 30
		    47		FALSE_S = 31
		    48		FINISH_S = 32
		    49		FIXED_S = 33
		    50		FLOAT_S = 34
		    51		FNAP_S = 35
		    52		FNDEF_S = 36
		    53		FOR_S = 37
		    54		GE_F = 38
		    55	
		    56		GE_S = 40
		    57		GET_S = 41
		    58		GLOBAL_S = 42
		    59		GOTO_S = 43
		    60		GR_F = 44
		    61		GR_S = 45
		    62		IF_S = 46
		    63		IFNOT_S = 47
		    64		IFSO_S = 48
		    65	
		    66		INTO_S = 50
		    67		LABDEF_S = 51
		    68		LABEL_S = 52
		    69		LE_F = 53
		    70		LE_S = 54
		    71		LENGTH_S = 55
		    72		LET_S = 56
		    73		LIST_S = 57
		    74		LOCAL_S = 58
		    75	
		    76		LOGAND_S = 60
		    77		LOGOR_S = 61
		    78		LOOP_S = 62
		    79		LS_F = 63
		    80		LS_S = 64
		    81		LSHIFT_S = 65
		    82		LV_S = 66
		    83		LVECAP_S = 67
		    84		LV_ARG_OUT = 68
		    85	
		    86		LV_FNAP_RESULT = 70
		    87		LV_GLOBAL = 71
		    88		LV_LOCAL = 72
		    89		LV_STATIC = 73
		    90		LV_TEMP = 74
		    91		MAIN_S = 75
		    92		MANIFEST_S = 76
		    93		MINUS_F = 77
		    94		MINUS_S = 78
		    95	
		    96		MULT_F = 80
		    97		MULT_S = 81
		    98		NAME_S = 82
		    99		NEG_F = 83
		   100		NEG_S = 84
		   101		NEQV_S = 85
		   102		NE_F = 86
		   103		NE_S = 87
		   104		NIL_S = 88
		   105	
		   106		NOT_S = 90
		   107		NUMBER_S = 91
		   108		OFFSET_S = 92
		   109		OR_S = 93
		   110		PLUS_F = 94
		   111		PLUS_S = 95
		   112		POINTER_S = 96
		   113		POS_F = 97
		   114		POS_S = 98
		   115	
		   116		RBRA_S = 100
		   117		REGISTER_S = 101
		   118		REL_S = 102
		   119		REM_S = 103
		   120		REP_S = 104
		   121		REPEAT_S = 105
		   122		REPEATUNTIL_S = 106
		   123		REPEATWHILE_S = 107
		   124		RESULTIS_S = 108
		   125	
		   126		RETURN_S = 110
		   127		RKET_S = 111
		   128		RSHIFT_S = 112
		   129		RTAP_S = 113
		   130		RTDEF_S = 114
		   131		RV_S = 115
		   132		SBRA_S = 116
		   133		SECTBEGIN_S = 117
		   134		SECTBRA_S = 118
		   135	
		   136		SECTEND_S = 120
		   137		SECTKET_S = 121
		   138		SEMICOLON_S = 122
		   139		SKET_S = 123
		   140		STATIC_S = 124
		   141		STRING_S = 125
		   142		STRINGCONST_S = 126
		   143		STRUCTURE_S = 127
		   144		SWITCHON_S = 128
		   145	
		   146		TABLE_S = 130
		   147		TEMP_S = 131
		   148		TEST_S = 132
		   149		TO_S = 133
		   150		TRUE_S = 134
		   151		TYPE_S = 135
		   152		UNLESS_S = 136
		   153		UNTIL_S = 137
		   154		VALDEF_S = 138
		   155	
		   156		VALOF_S = 140
		   157		VEC_S = 141
		   158		VECAP_S = 142
		   159		WHILE_S = 143
		   160	     $)
	    17	get "bcpl_cg_codes"
		     1	//  Report codes for the code generation phase.
		     2	//  Last modified on 08/15/73 at 00:33:36 by R F Mabee.
		     3	//  First installed in Version 3.4 by R F Mabee.
		     4	//  Code generation error codes separated from bcpl_trans_codes in April 1973.
		     5	
		     6	//  Copyright (c) 1973 by the author, Robert F. Mabee.
		     7	//  This file may only be reproduced or modified with explicit written
		     8	//  permission of the author.  Permission is hereby extended to those
		     9	//  persons responsible for operating the Multics system to make such
		    10	//  copies as are normally required to ensure the integrity of the Multics
		    11	//  file system.  Permission is also hereby extended to those persons
		    12	//  responsible for maintaining the Multics program libraries to make such
		    13	//  copies as are normally required for online installations.
		    14	
		    15	manifest		//  300 - 399 are reserved for CG.
		    16	     $(	BadAddress	= 300
		    17		BadLabel		= 301
		    18		BadRegOpPair	= 302
		    19		DupCase		= 303
		    20		DupLabel		= 304
		    21		LinkRefersThis	= 305
		    22		OverCase		= 306
		    23		PhaseError	= 307
		    24		UndefLab		= 308
		    25	     $)
	    18	
	    19	external
	    20	     $(	FinishText = "bcpl_cg0$FinishText"
	    21	
	    22		ApplyMonadicOperator = "bcpl_cg1$ApplyMonadicOperator"
	    23		ApplyDiadicOperator = "bcpl_cg1$ApplyDiadicOperator"
	    24		ApplyOffsetOperator = "bcpl_cg1$ApplyOffsetOperator"
	    25		MonadicJumpcond = "bcpl_cg1$MonadicJumpcond"
	    26		DiadicJumpcond = "bcpl_cg1$DiadicJumpcond"
	    27	
	    28		IsNumber = "bcpl_cg2$IsNumber"
	    29		EvalNumber = "bcpl_cg2$EvalNumber"
	    30		IsZero = "bcpl_cg2$IsZero"
	    31		IsAddress = "bcpl_cg2$IsAddress"
	    32		IsStored = "bcpl_cg2$IsStored"
	    33		LookupTemp = "bcpl_cg2$LookupTemp"
	    34		MakeCgTemp = "bcpl_cg2$MakeCgTemp"
	    35		ClaimRegister = "bcpl_cg2$ClaimRegister"
	    36		DisclaimRegister = "bcpl_cg2$DisclaimRegister"
	    37		InRegister = "bcpl_cg2$InRegister"
	    38		FindInRegister = "bcpl_cg2$FindInRegister"
	    39		CombineAddress = "bcpl_cg2$CombineAddress"
	    40		Compjump = "bcpl_cg2$Compjump"
	    41		Complab = "bcpl_cg2$Complab"
	    42		DefineLab = "bcpl_cg2$DefineLab"
	    43		LookupLabel = "bcpl_cg2$LookupLabel"
	    44		ClearRegisters = "bcpl_cg2$ClearRegisters"
	    45		ClearMemory = "bcpl_cg2$ClearMemory"
	    46		AddLiteral = "bcpl_cg2$AddLiteral"
	    47		OutLiterals = "bcpl_cg2$OutLiterals"
	    48		Outstring = "bcpl_cg2$Outstring"
	    49	
	    50		LoadRegister = "bcpl_cg3$LoadRegister"
	    51		LoadPointer = "bcpl_cg3$LoadPointer"
	    52		LoadIndex = "bcpl_cg3$LoadIndex"
	    53		LoadAppropriateRegister = "bcpl_cg3$LoadAppropriateRegister"
	    54		LoadNumber = "bcpl_cg3$LoadNumber"
	    55		SetupAddr = "bcpl_cg3$SetupAddr"
	    56		CompareToZero = "bcpl_cg3$CompareToZero"
	    57		Makeaddressable = "bcpl_cg3$Makeaddressable"
	    58		SwapAandQ = "bcpl_cg3$SwapAandQ"
	    59		Preserve = "bcpl_cg3$Preserve"
	    60		Store = "bcpl_cg3$Store"
	    61		StoreRegister = "bcpl_cg3$StoreRegister"
	    62		GetRegister = "bcpl_cg3$GetRegister"
	    63		Satisfactory = "bcpl_cg3$Satisfactory"
	    64		Literal = "bcpl_cg3$Literal"
	    65	
	    66		NewSSP = "bcpl_cg4$NewSSP"
	    67		Compentry = "bcpl_cg4$Compentry"
	    68		Compreturn = "bcpl_cg4$Compreturn"
	    69		CreateArglist = "bcpl_cg4$CreateArglist"
	    70		StoreArg = "bcpl_cg4$StoreArg"
	    71		Compfnap = "bcpl_cg4$Compfnap"
	    72		CreateSystemArglist = "bcpl_cg4$CreateSystemArglist"
	    73		StoreSystemArg = "bcpl_cg4$StoreSystemArg"
	    74		CompSystemCall = "bcpl_cg4$CompSystemCall"
	    75		ResultBlockBegin = "bcpl_cg4$ResultBlockBegin"
	    76		ResultSet = "bcpl_cg4$ResultSet"
	    77		ResultGet = "bcpl_cg4$ResultGet"
	    78		Compfinish = "bcpl_cg4$Compfinish"
	    79		Compgoto = "bcpl_cg4$Compgoto"
	    80		Compstring = "bcpl_cg4$Compstring"
	    81		Comptable = "bcpl_cg4$Comptable"
	    82		Compexternal = "bcpl_cg4$Compexternal"
	    83	
	    84		OutData = "bcpl_cg5$OutData"
	    85		Outop = "bcpl_cg5$Outop"
	    86		Outop2 = "bcpl_cg5$Outop2"
	    87		Outop3 = "bcpl_cg5$Outop3"
	    88		Outop4 = "bcpl_cg5$Outop4"
	    89		OutW = "bcpl_cg5$OutW"
	    90		OutW2 = "bcpl_cg5$OutW2"
	    91		PutCode = "bcpl_cg5$PutCode"
	    92		PutAbsBits = "bcpl_cg5$PutAbsBits"
	    93		SetLineNumber = "bcpl_cg5$SetLineNumber"
	    94		SectionHeader = "bcpl_cg5$SectionHeader"
	    95		FormOpcode = "bcpl_cg5$FormOpcode"
	    96		FormTag = "bcpl_cg5$FormTag"
	    97		CheckAddr = "bcpl_cg5$CheckAddr"
	    98	
	    99		Compswitch = "bcpl_cg6$Compswitch"
	   100	
	   101		WriteGetlp = "bcpl_cg7$WriteGetlp"
	   102		WriteEntry = "bcpl_cg7$WriteEntry"
	   103		WriteDefs = "bcpl_cg7$WriteDefs"
	   104		WriteLinkage = "bcpl_cg7$WriteLinkage"
	   105	
	   106		WriteSymbol = "bcpl_cg8$WriteSymbol"
	   107		WriteRelBits = "bcpl_cg8$WriteRelBits"
	   108		WriteObjectMap = "bcpl_cg8$WriteObjectMap"
	   109	
	   110		WriteData = "bcpl_cg9$WriteData"
	   111		WriteInstruction = "bcpl_cg9$WriteInstruction"
	   112		ListCodeItem = "bcpl_cg9$ListCodeItem"
	   113	     $)
	   114	global		//  300 - 399 are reserved for the code generator.
	   115	     $(	AbsRelBits	: 300
	   116		Address		: 301
	   117		ArgCount		: 302
	   118		ArgLen		: 303
	   119		CgTempList	: 304
	   120		CodeFirst		: 305
	   121		CodeP		: 306
	   122		CodeV		: 307
	   123		Comment		: 308
	   124	
	   125		DeferredJumpLabel	: 310
	   126		DefsLength	: 311
	   127		DefsRelbits	: 312
	   128		EntryLabel	: 313
	   129		GetLpLabel	: 314
	   130		IndicatorsSetBy	: 315
	   131		Jumpsw		: 316
	   132		LabMaxArg		: 317
	   133		LabMaxSSP		: 318
	   134	
	   135		LabTable		: 320
	   136		LC		: 321
	   137		LineMapFirst	: 322
	   138		LineMapLength	: 323
	   139		LineMapList	: 324
	   140		LinkageLength	: 325
	   141		LinkageRelbits	: 326
	   142		LinkList		: 327
	   143		Lrand		: 328
	   144	
	   145		MainEntriesList	: 330
	   146		MaxArgOffset	: 331
	   147		MaxSSP		: 332
	   148		NewLiteralsList	: 333
	   149		OldLabel		: 334
	   150		OldLiteralsList	: 335
	   151		Param		: 336
	   152		Rrand		: 337
	   153		RegisterTemps	: 338
	   154	
	   155		RegisterUsage	: 340
	   156		RelbitsFirst	: 341
	   157		RelbitsLength	: 342
	   158		RelbitsList	: 343
	   159		RelbitsOffset	: 344
	   160		Reloc		: 345
	   161		ResultInfo	: 346
	   162		ResultInfoList	: 347
	   163		SaveSpaceSize	: 348
	   164	
	   165		SymbolLength	: 350
	   166		SymbolRelbits	: 351
	   167		StackRefTag	: 352
	   168		SymtabFirst	: 353
	   169		SymtabP		: 354
	   170		SymtabV		: 355
	   171		Tag		: 356
	   172		TextLength	: 357
	   173		TextRelbits	: 358
	   174	
	   175		UsageCounter	: 360
	   176	     $)
	   177	manifest
	   178	     $(	CgTempSize = 9
	   179		CodeSize = 1000
	   180		LabTableSize = 100
	   181		SymtabSize = 200
	   182	     $)
	   183	manifest		//  Flags for listing.
	   184	     $(	CodeSwitch	= 1
	   185		InstructionSwitch	= 2
	   186		DataSwitch	= 3
	   187		LabelSwitch	= 4
	   188		LineCountSwitch	= 5
	   189		SectionSwitch	= 6
	   190		HeaderSwitch	= 7
	   191	     $)
	   192	manifest		//  Relocation codes.
	   193	     $(	RelText		= $820
	   194		RelLink18		= $822
	   195		RelNegLink18	= $823
	   196		RelLink15		= $824
	   197		RelDef		= $825
	   198		RelSymbol		= $826
	   199		RelNegSymbol	= $827
	   200		RelStat18		= $830
	   201		RelStat15		= $831
	   202		RelExtendedAbs	= $836		//  Ten bit count follows this code.
	   203	     $)
	   204	manifest
	   205	     $(	TagXrMask = $817
	   206		TagPrMask = $8700000000100
	   207	
	   208		Mod16 = $8777777777760
	   209	     $)
	   210	
	   211	manifest			//  Modifiers and tags used in the code generator.
	   212	     $(	Ap = $8000000000100
	   213		Ab = $8100000000100
	   214		Bp = $8200000000100
	   215		Bb = $8300000000100
	   216		Lp = $8400000000100
	   217		Lb = $8500000000100
	   218		Sp = $8600000000100
	   219		Sb = $8700000000100
	   220	
	   221		Al = $805
	   222		Au = $801
	   223		Dl = $807
	   224		Du = $803
	   225		Ql = $806
	   226		Qu = $802
	   227	
	   228		X0 = $810
	   229		X1 = $811
	   230		X2 = $812
	   231		X3 = $813
	   232		X4 = $814
	   233		X5 = $815
	   234		X6 = $816
	   235		X7 = $817
	   236	
	   237		Ft2 = $846
	   238		Ic = $804
	   239		Star = $820
	   240		StarThenReg = $860
	   241	     $)
	   242	manifest			//  Internal codes for all machine registers used.
	   243	     $(	Ar	= 1
	   244		Qr	= 2
	   245	
	   246		Xr0	= 3
	   247		Xr1	= 4
	   248		Xr2	= 5
	   249		Xr3	= 6
	   250		Xr4	= 7
	   251		Xr5	= 8
	   252		Xr6	= 9
	   253		Xr7	= 10
	   254	
	   255		Apr	= 11
	   256		Abr	= 12
	   257		Bpr	= 13
	   258		Bbr	= 14
	   259		Lpr	= 15
	   260		Lbr	= 16
	   261		Spr	= 17
	   262		Sbr	= 18
	   263	
	   264		EAQr	= 19
	   265	
	   266		NumberOfRegisters = 20
	   267	
	   268		AorQr	= 22
	   269		AnyPr	= 23
	   270		AnyXr	= 24
	   271	     $)
    13	get "bcpl_opcodes"
	     1	//  Definitions for 645 and 6180 machine instructions.  See FormOpcode.
	     2	//  Last modified on 07/20/73 at 23:35:00 by R F Mabee.
	     3	//  6180 instructions added and installed as Version 3.4 by R F Mabee.
	     4	//  First installed as Version 2.7 by R F Mabee
	     5	
	     6	//  Copyright (c) 1973 by the author, Robert F. Mabee.
	     7	//  This file may only be reproduced or modified with explicit written
	     8	//  permission of the author.  Permission is hereby extended to those
	     9	//  persons responsible for operating the Multics system to make such
	    10	//  copies as are normally required to ensure the integrity of the Multics
	    11	//  file system.  Permission is also hereby extended to those persons
	    12	//  responsible for maintaining the Multics program libraries to make such
	    13	//  copies as are normally required for online installations.
	    14	
	    15	manifest		//  Note: low order bit of ten bit opcode is here represented by high order bit,
	    16	     $(		//  so remaining bits will retain proper representation as octal numbers.
	    17		Abd	= $81503
	    18		Ada	= $80075
	    19		Adlx1	= $80021
	    20		Als	= $80735
	    21		Ana	= $80375
	    22		Ansa	= $80355
	    23		Anx0	= $80360
	    24		Aos	= $80054
	    25		Arl	= $80771
	    26		Asa	= $80055
	    27		Cmpa	= $80115
	    28		Div	= $80506
	    29		Dvf	= $80507
	    30		Eabap	= $80310
	    31		Eablb	= $80331
	    32		Eablp	= $80330
	    33		Eapab	= $81351
	    34		Eapap	= $80350
	    35		Eapbp	= $80352
	    36		Eaplb	= $81371
	    37		Eaplp	= $80370
	    38		Eax0	= $80620
	    39		Eax1	= $80621
	    40		Eax7	= $80627
	    41		Epaq	= $80213
	    42		Era	= $80675
	    43		Ersa	= $80655
	    44		Fad	= $80475
	    45		Fcmp	= $80515
	    46		Fdi	= $80525
	    47		Fdv	= $80565
	    48		Fld	= $80431
	    49		Fmp	= $80461
	    50		Fneg	= $80513
	    51		Fsb	= $80575
	    52		Fstr	= $80470
	    53		Fszn	= $80430
	    54		Lca	= $80335
	    55		Lda	= $80235
	    56		Ldaq	= $80237
	    57		Ldx7	= $80227
	    58		Llr	= $80777
	    59		Lprpap	= $80760
	    60		Lprpbp	= $80762
	    61		Lprplp	= $80764
	    62		Lrl	= $80773
	    63		Lxl0	= $80720
	    64		Lxl1	= $80721
	    65		Mpy	= $80402
	    66		Neg	= $80531
	    67		Negl	= $80533
	    68		Ora	= $80275
	    69		Orsa	= $80255
	    70		Sba	= $80175
	    71		Sblx1	= $80121
	    72		Sprpap	= $80540
	    73		Sprpbp	= $80542
	    74		Sprplp	= $80544
	    75		Sreg	= $80753
	    76		Ssa	= $80155
	    77		Sta	= $80755
	    78		Staq	= $80757
	    79		Stb	= $80254
	    80		Stc1	= $80554
	    81		Stcd	= $80357
	    82		Stpab	= $81251
	    83		Stpap	= $80250
	    84		Stpbp	= $80252
	    85		Stplb	= $81651
	    86		Stplp	= $80650
	    87		Stx0	= $80740
	    88		Stz	= $80450
	    89		Sxl0	= $80440
	    90		Sxl1	= $80441
	    91		Szn	= $80234
	    92		Tmi	= $80604
	    93		Tmoz	= $81604
	    94		Tnz	= $80601
	    95		Tpl	= $80605
	    96		Tpnz	= $81605
	    97		Tra	= $80710
	    98		Trc	= $80603
	    99		Tsbap	= $80270
	   100		Tsbbp	= $80272
	   101		Tsblp	= $80670
	   102		Tsx0	= $80700
	   103		Tze	= $80600
	   104	     $)
    14	
    15	let OpcodeName (Op) = valof
    16	  switchon Op into
    17	     $(	default:		CGreport (UnexpectedCase, Op, "OpcodeName")
    18				resultis "<error>"
    19	
    20		case Abd:		resultis "abd"
    21		case Ada:		resultis "ada"
    22		case Ada + 1:	resultis "adq"
    23		case Adlx1:	resultis "adlx1"
    24		case Als:		resultis "als"
    25		case Als + 1:	resultis "qls"
    26		case Ana:		resultis "ana"
    27		case Ana + 1:	resultis "anq"
    28		case Ansa:	resultis "ansa"
    29		case Ansa + 1:	resultis "ansq"
    30		case Anx0:	resultis "anx0"
    31		case Aos:		resultis "aos"
    32		case Arl:		resultis "arl"
    33		case Arl + 1:	resultis "qrl"
    34		case Asa:		resultis "asa"
    35		case Asa + 1:	resultis "asq"
    36		case Cmpa:	resultis "cmpa"
    37		case Cmpa + 1:	resultis "cmpq"
    38		case Div:		resultis "div"
    39		case Dvf:		resultis "dvf"
    40		case Eabap:	resultis "eabap"
    41		case Eabap + 1:	resultis "eabab"
    42		case Eabap + 2:	resultis "eabbp"
    43		case Eabap + 3:	resultis "eabbb"
    44		case Eablp:	resultis "eablp"
    45		case Eablp + 1:	resultis "eablb"
    46		case Eapap:	resultis "eapap"
    47		case Eapab:	resultis "eapab"
    48		case Eapap + 2:	resultis "eapbp"
    49		case Eapab + 2:	resultis "eapbb"
    50		case Eaplp:	resultis "eaplp"
    51		case Eaplb:	resultis "eaplb"
    52		case Eaplp + 2:	resultis "eapsp"
    53		case Eaplb + 2:	resultis "eapsb"
    54		case Eax0:	resultis "eax0"
    55		case Eax0 + 1:	resultis "eax1"
    56		case Eax0 + 2:	resultis "eax2"
    57		case Eax0 + 3:	resultis "eax3"
    58		case Eax0 + 4:	resultis "eax4"
    59		case Eax0 + 5:	resultis "eax5"
    60		case Eax0 + 6:	resultis "eax6"
    61		case Eax0 + 7:	resultis "eax7"
    62		case Epaq:	resultis "epaq"
    63		case Era:		resultis "era"
    64		case Era + 1:	resultis "erq"
    65		case Ersa:	resultis "ersa"
    66		case Ersa + 1:	resultis "ersq"
    67		case Fad:		resultis "fad"
    68		case Fcmp:	resultis "fcmp"
    69		case Fdi:		resultis "fdi"
    70		case Fdv:		resultis "fdv"
    71		case Fld:		resultis "fld"
    72		case Fmp:		resultis "fmp"
    73		case Fneg:	resultis "fneg"
    74		case Fsb:		resultis "fsb"
    75		case Fstr:	resultis "fstr"
    76		case Fszn:	resultis "fszn"
    77		case Lca:		resultis "lca"
    78		case Lca + 1:	resultis "lcq"
    79		case Lda:		resultis "lda"
    80		case Lda + 1:	resultis "ldq"
    81		case Ldaq:	resultis "ldaq"
    82		case Ldx7:	resultis "ldx7"
    83		case Llr:		resultis "llr"
    84		case Lprpap:	resultis "lprpap"
    85		case Lprpap + 1:	resultis "lprpab"
    86		case Lprpap + 2:	resultis "lprpbp"
    87		case Lprpap + 3:	resultis "lprpbb"
    88		case Lprplp:	resultis "lprplp"
    89		case Lprplp + 1:	resultis "lprplb"
    90		case Lprplp + 2:	resultis "lprpsp"
    91		case Lprplp + 3:	resultis "lprpsb"
    92		case Lrl:		resultis "lrl"
    93		case Lxl0:	resultis "lxl0"
    94		case Lxl0 + 1:	resultis "lxl1"
    95		case Lxl0 + 2:	resultis "lxl2"
    96		case Lxl0 + 3:	resultis "lxl3"
    97		case Lxl0 + 4:	resultis "lxl4"
    98		case Lxl0 + 5:	resultis "lxl5"
    99		case Lxl0 + 6:	resultis "lxl6"
   100		case Lxl0 + 7:	resultis "lxl7"
   101		case Mpy:		resultis "mpy"
   102		case Neg:		resultis "neg"
   103		case Negl:	resultis "negl"
   104		case Ora:		resultis "ora"
   105		case Ora + 1:	resultis "orq"
   106		case Orsa:	resultis "orsa"
   107		case Orsa + 1:	resultis "orsq"
   108		case Sba:		resultis "sba"
   109		case Sba + 1:	resultis "sbq"
   110		case Sblx1:	resultis "sblx1"
   111		case Sprpap:	resultis "sprpap"
   112		case Sprpap + 1:	resultis "sprpab"
   113		case Sprpap + 2:	resultis "sprpbp"
   114		case Sprpap + 3:	resultis "sprpbb"
   115		case Sprplp:	resultis "sprplp"
   116		case Sprplp + 1:	resultis "sprplb"
   117		case Sprplp + 2:	resultis "sprpsp"
   118		case Sprplp + 3:	resultis "sprpsb"
   119		case Sreg:	resultis "sreg"
   120		case Ssa:		resultis "ssa"
   121		case Ssa + 1:	resultis "ssq"
   122		case Sta:		resultis "sta"
   123		case Sta + 1:	resultis "stq"
   124		case Staq:	resultis "staq"
   125		case Stb:		resultis "stb"
   126		case Stc1:	resultis "stc1"
   127		case Stcd:	resultis "stcd"
   128		case Stpap:	resultis "stpap"
   129		case Stpab:	resultis "stpab"
   130		case Stpap + 2:	resultis "stpbp"
   131		case Stpab + 2:	resultis "stpbb"
   132		case Stplp:	resultis "stplp"
   133		case Stplb:	resultis "stplb"
   134		case Stplp + 2:	resultis "stpsp"
   135		case Stplb + 2:	resultis "stpsb"
   136		case Stx0:	resultis "stx0"
   137		case Stz:		resultis "stz"
   138		case Sxl0:	resultis "sxl0"
   139		case Sxl1:	resultis "sxl1"
   140		case Szn:		resultis "szn"
   141		case Tmi:		resultis "tmi"
   142		case Tmoz:	resultis "tmoz"
   143		case Tnz:		resultis "tnz"
   144		case Tpl:		resultis "tpl"
   145		case Tpnz:	resultis "tpnz"
   146		case Tra:		resultis "tra"
   147		case Trc:		resultis "trc"
   148		case Tsbap:	resultis "tsbap"
   149		case Tsbbp:	resultis "tsbbp"
   150		case Tsblp:	resultis "tsblp"
   151		case Tsx0:	resultis "tsx0"
   152		case Tze:		resultis "tze"
   153	     $)
   154	and RegisterName (Reg) = valof
   155	  switchon Reg & TagXrMask into
   156	     $(	case 0:	resultis "n"
   157		case Au:	resultis "au"
   158		case Al:	resultis "al"
   159		case Qu:	resultis "qu"
   160		case Ql:	resultis "ql"
   161		case Du:	resultis "du"
   162		case Dl:	resultis "dl"
   163		case Ic:	resultis "ic"
   164		case X0:	resultis "x0"
   165		case X1:	resultis "x1"
   166		case X2:	resultis "x2"
   167		case X3:	resultis "x3"
   168		case X4:	resultis "x4"
   169		case X5:	resultis "x5"
   170		case X6:	resultis "x6"
   171		case X7:	resultis "x7"
   172	     $)
   173	and BaseName (Base) = valof
   174	  switchon Base & TagPrMask into
   175	     $(	case Ap:	resultis "ap"
   176		case Ab:	resultis "ab"
   177		case Bp:	resultis "bp"
   178		case Bb:	resultis "bb"
   179		case Lp:	resultis "lp"
   180		case Lb:	resultis "lb"
   181		case Sp:	resultis "sp"
   182		case Sb:	resultis "sb"
   183	     $)
   184	
   185	let WriteH (x) be
   186	     $(	Writech (OUTPUT, '*s')
   187		for i = 15 to 0 by -3 do
   188			Writech (OUTPUT, '0' + ((x rshift i) & 7))
   189	     $)
   190	and WriteNcount (n) be
   191	     $(	let v = vec 20
   192		ConvertNtoS (n, v, 10)
   193		WriteS (OUTPUT, v)
   194		Column := Column + Length (v)
   195	     $)
   196	and WriteAddress (Address, Param) be
   197	     $(	if Param ne 0 do
   198		     $(	Writech (OUTPUT, 'L')
   199			Column := Column + 1
   200			WriteNcount (Param)
   201			if Address = 0 return
   202			if (Address & (1 lshift 17)) = 0 do
   203			     $(	Writech (OUTPUT, '+')
   204				Column := Column + 1
   205			     $)
   206		     $)
   207		if (Address & (1 lshift 17)) ne 0 do
   208		     $(	Writech (OUTPUT, '-')
   209			Column := Column + 1
   210			Address := - (Address | (true lshift 18))
   211		     $)
   212		WriteNcount (Address)
   213	     $)
   214	
   215	let WriteInstruction (Word, Param) be
   216	     $(	Format (OUTPUT, "*t^s*t", OpcodeName ((Word rshift 9) & $8777 | (Word lshift 1) & $81000))
   217		if (Word & $8100) ne 0 do
   218		     $(	Format (OUTPUT, "^s|", BaseName (Word))
   219			Column := Column + 3
   220			test (Word & (1 lshift 32)) = 0
   221			then Word := Word & (true rshift 3)
   222			or Word := Word | (true lshift 33)
   223		     $)
   224		if (Word & $877) = Ic do Word := Word + (LC lshift 18) - Ic	//  Simulate ic modifier.
   225		WriteAddress (Word rshift Left, Param)
   226		if (Word & $877) ne 0 do
   227		     $(	let Reg = RegisterName (Word & $817)
   228			switchon Word & $860 into
   229			     $(	case $800:
   230					Format (OUTPUT, ",^s", Reg)
   231					Column := Column + Length (Reg) + 1
   232					endcase
   233				case $820:
   234					if (Word & $817) = 0 do Reg := ""
   235					Format (OUTPUT, ",^s**", Reg)
   236					Column := Column + Length (Reg) + 2
   237					endcase
   238				case $840:
   239					Format (OUTPUT, ",^o", Word & $877)
   240					Column := Column + 3
   241					endcase
   242				case $860:
   243					Format (OUTPUT, ",**^s", Reg)
   244					Column := Column + Length (Reg) + 2
   245			     $)
   246		     $)
   247	     $)
   248	and WriteData (Word, Param) be
   249	     $(	WriteS (OUTPUT, "*tzero*t")
   250		WriteAddress (Word rshift Left, Param)
   251		if (Word & Right) ne 0 do
   252		     $(	Writech (OUTPUT, ',')
   253			Column := Column + 1
   254			WriteAddress (Word & Right, 0)
   255		     $)
   256	     $)
   257	
   258	let ListCodeItem (p) be
   259	     $(	let Flags, Word, Comment = p!0, p!1, p!2
   260		switchon Flags & Right into
   261		     $(	case CodeSwitch:
   262			case InstructionSwitch:
   263			case DataSwitch:
   264			Writech (OUTPUT, GetRelCode ())
   265				Writech (OUTPUT, GetRelCode ())
   266				WriteH (LC)
   267				Writech (OUTPUT, '*s')
   268				WriteH (Word rshift 18)
   269				WriteH (Word & $8777777)
   270				Column := 0
   271				test (Flags & Right) = InstructionSwitch
   272				then $(	if LineCount ne 0 do
   273					     $(	Format (OUTPUT, "  ^d", LineCount)
   274						LineCount := 0
   275					     $)
   276					Writech (OUTPUT, '*t')
   277					let Param = Flags rshift Left
   278					if Param ne 0 test (Word & TagXrMask) = X1
   279						then Param := 0
   280						or Word := Word - (LookupLabel (Param) lshift 18)
   281					WriteInstruction (Word, Param)
   282				     $)
   283				or if (Flags & Right) = DataSwitch do
   284				     $(	Writech (OUTPUT, '*t')
   285					WriteData (Word, 0)
   286				     $)
   287				if Comment ne 0 do
   288				     $(	if Column < 10 do Writech (OUTPUT, '*t')
   289					Format (OUTPUT, "*t*" ^s", Comment)
   290				     $)
   291				Writech (OUTPUT, '*n')
   292				LC := LC + 1
   293				return
   294	
   295			case LabelSwitch:
   296				Format (OUTPUT, "*t*t*tL^d:*n", Word)
   297				return
   298	
   299			case LineCountSwitch:
   300				LineCount := Word
   301				return
   302	
   303			case HeaderSwitch:
   304				let v = vec Vmax
   305				Unpackstring (Comment, v)
   306				Format (OUTPUT, "^c*t*"*t", v!1)
   307				for i = 2 to v!0 do Writech (OUTPUT, v!i)
   308				WriteS (OUTPUT, "*n*n")
   309				return
   310	
   311			case SectionSwitch:
   312				LC := Word
   313				RelbitsList, RelbitsOffset, AbsRelBits := Comment, 0, 0
   314				return
   315	
   316			default:	CGreport (UnexpectedCase, Flags, "ListCodeItem")
   317		     $)
   318	     $)
   319	and GetRelCode () = valof
   320	     $(	if AbsRelBits > 0 do
   321		     $(	AbsRelBits := AbsRelBits - 1
   322			resultis 'a'
   323		     $)
   324		if GetBits (1) = 0 resultis 'a'
   325		let c = GetBits (4)
   326		if c = (RelExtendedAbs & $817) do
   327		     $(	AbsRelBits := GetBits (10) - 1
   328			resultis 'a'
   329		     $)
   330		resultis '0' + c
   331	     $)
   332	and GetBits (n) = valof
   333	     $(	RelbitsOffset := RelbitsOffset + n
   334		if RelbitsList = 0 do
   335		     $(	CGreport (PhaseError, "GetBits")
   336			resultis 0
   337		     $)
   338		let r = nil
   339		test RelbitsOffset le 36
   340		then r := RelbitsList!0 rshift (36 - RelbitsOffset)
   341		or   $(	RelbitsOffset := RelbitsOffset - 36
   342			r := RelbitsList!0 lshift RelbitsOffset
   343			RelbitsList := RelbitsList!1
   344			r := r | RelbitsList!0 rshift (36 - RelbitsOffset)
   345		     $)
   346		resultis r & true rshift (36 - n)
   347	     $)



CAE time 8.4, 123 source lines per second.
cross reference table

Ab			bcpl_cg_head:  213, bcpl_cg9:  176

Abd			bcpl_opcodes:  17, bcpl_cg9:  20

Abr			bcpl_cg_head:  256

AbsRelBits		bcpl_cg_head:  115, bcpl_cg9:  313, 320, 321, 321, 327

Ada			bcpl_opcodes:  18, bcpl_cg9:  21, 22

AddLiteral		bcpl_cg_head:  46

Address			bcpl_cg_head:  116, bcpl_cg9:  196, 201, 202, 207, 210, 210, 212

Adlx1			bcpl_opcodes:  19, bcpl_cg9:  23

Al			bcpl_cg_head:  221, bcpl_cg9:  158

Als			bcpl_opcodes:  20, bcpl_cg9:  24, 25

Ana			bcpl_opcodes:  21, bcpl_cg9:  26, 27

AND_S			bcpl_symbols:  17

Ansa			bcpl_opcodes:  22, bcpl_cg9:  28, 29

Anx0			bcpl_opcodes:  23, bcpl_cg9:  30

AnyPr			bcpl_cg_head:  269

AnyXr			bcpl_cg_head:  270

AorQr			bcpl_cg_head:  268

Aos			bcpl_opcodes:  24, bcpl_cg9:  31

Ap			bcpl_cg_head:  212, bcpl_cg9:  175

ApplyDiadicOperator		bcpl_cg_head:  23

ApplyMonadicOperator	bcpl_cg_head:  22

ApplyOffsetOperator		bcpl_cg_head:  24

Apr			bcpl_cg_head:  255

Ar			bcpl_cg_head:  243

ArgCount			bcpl_cg_head:  117

ArgLen			bcpl_cg_head:  118

Arl			bcpl_opcodes:  25, bcpl_cg9:  32, 33

Asa			bcpl_opcodes:  26, bcpl_cg9:  34, 35

ASSIGN_S			bcpl_symbols:  18

Au			bcpl_cg_head:  222, bcpl_cg9:  157

BadAddress		bcpl_cg_codes:  16

BadLabel			bcpl_cg_codes:  17

BadRegOpPair		bcpl_cg_codes:  18

Base			bcpl_cg9:  173, 174

BaseName			bcpl_cg9:  173, 218

Bb			bcpl_cg_head:  215, bcpl_cg9:  178

Bbr			bcpl_cg_head:  258

BE_S			bcpl_symbols:  19

BIT_S			bcpl_symbols:  20

Bp			bcpl_cg_head:  214, bcpl_cg9:  177

Bpr			bcpl_cg_head:  257

BREAK_S			bcpl_symbols:  21

BuildObject		bcpl_compiler_head:  72

BY_S			bcpl_symbols:  22

c			bcpl_cg9:  325, 326, 330

CAE			bcpl_compiler_head:  64

CaeReport			bcpl_compiler_head:  49

CALL_S			bcpl_symbols:  23

CASE_S			bcpl_symbols:  24

CgInit			bcpl_compiler_head:  71

CGreport			bcpl_compiler_head:  51, bcpl_cg9:  17, 316, 335

CgTempList		bcpl_cg_head:  119

CgTempSize		bcpl_cg_head:  178

Ch			bcpl_compiler_head:  92

CHARCONST_S		bcpl_symbols:  27

CHAR_S			bcpl_symbols:  26

CheckAddr			bcpl_cg_head:  97

ClaimRegister		bcpl_cg_head:  35

Cleanup			bcpl_compiler_head:  61

ClearMemory		bcpl_cg_head:  45

ClearRegisters		bcpl_cg_head:  44

Cmpa			bcpl_opcodes:  27, bcpl_cg9:  36, 37

CodeFirst			bcpl_cg_head:  120

CodeP			bcpl_cg_head:  121

CodeSize			bcpl_cg_head:  179

CodeSwitch		bcpl_cg_head:  184, bcpl_cg9:  261

CodeV			bcpl_cg_head:  122

COLON_S			bcpl_symbols:  28

Column			bcpl_compiler_head:  128, bcpl_cg9:  194, 194, 199, 199, 204, 204, 209, 209, 219, 219, 
			231, 231, 236, 236, 240, 240, 244, 244, 253, 253, 270, 288

CombineAddress		bcpl_cg_head:  39

COMMA_S			bcpl_symbols:  29

Comment			bcpl_cg_head:  123, bcpl_cg9:  259, 287, 289, 305, 313

CompareStrings		bcpl_compiler_head:  25

CompareToZero		bcpl_cg_head:  56

Compentry			bcpl_cg_head:  67

Compexternal		bcpl_cg_head:  82

Compfinish		bcpl_cg_head:  78

Compfnap			bcpl_cg_head:  71

Compgoto			bcpl_cg_head:  79

CompilerDTM		bcpl_compiler_head:  112

CompilerDTMString		bcpl_compiler_head:  111

CompilerVersionNumber	bcpl_compiler_head:  110

CompilerVersionString	bcpl_compiler_head:  109

Compjump			bcpl_cg_head:  40

Complab			bcpl_cg_head:  41

Compreturn		bcpl_cg_head:  68

Compstring		bcpl_cg_head:  80

Compswitch		bcpl_cg_head:  99

CompSystemCall		bcpl_cg_head:  74

Comptable			bcpl_cg_head:  81

Concatenate		bcpl_compiler_head:  26

COND_S			bcpl_symbols:  30

CONSTANT_S		bcpl_symbols:  31

CONSTDEF_S		bcpl_symbols:  32

ConvertNtoS		bcpl_compiler_head:  28, bcpl_cg9:  192

ConvertStoN		bcpl_compiler_head:  27

CreateArglist		bcpl_cg_head:  69

CreateSystemArglist		bcpl_cg_head:  72

Crep			bcpl_compiler_head:  98

DataSwitch		bcpl_cg_head:  186, bcpl_cg9:  263, 283

DEFAULT_S			bcpl_symbols:  33

DeferredJumpLabel		bcpl_cg_head:  125

DefineLab			bcpl_cg_head:  42

DefsLength		bcpl_cg_head:  126

DefsRelbits		bcpl_cg_head:  127

DiadicJumpcond		bcpl_cg_head:  26

DictionaryEntry		bcpl_compiler_head:  127

DisclaimRegister		bcpl_cg_head:  36

Div			bcpl_opcodes:  28, bcpl_cg9:  38

DIV_F			bcpl_symbols:  34

DIV_S			bcpl_symbols:  36

Dl			bcpl_cg_head:  223, bcpl_cg9:  162

DOUBLE_S			bcpl_symbols:  38

DO_S			bcpl_symbols:  37

Du			bcpl_cg_head:  224, bcpl_cg9:  161

DupCase			bcpl_cg_codes:  19

DupLabel			bcpl_cg_codes:  20

Dvf			bcpl_opcodes:  29, bcpl_cg9:  39

Eabap			bcpl_opcodes:  30, bcpl_cg9:  40, 41, 42, 43

Eablb			bcpl_opcodes:  31

Eablp			bcpl_opcodes:  32, bcpl_cg9:  44, 45

Eapab			bcpl_opcodes:  33, bcpl_cg9:  47, 49

Eapap			bcpl_opcodes:  34, bcpl_cg9:  46, 48

Eapbp			bcpl_opcodes:  35

Eaplb			bcpl_opcodes:  36, bcpl_cg9:  51, 53

Eaplp			bcpl_opcodes:  37, bcpl_cg9:  50, 52

EAQr			bcpl_cg_head:  264

Eax0			bcpl_opcodes:  38, bcpl_cg9:  54, 55, 56, 57, 58, 59, 60, 61

Eax1			bcpl_opcodes:  39

Eax7			bcpl_opcodes:  40

ENDCASE_S			bcpl_symbols:  39

Endofstreamch		bcpl_compiler_head:  135

ENDPROG_S			bcpl_symbols:  40

EnterIntoCrossreference	bcpl_compiler_head:  57

EntryLabel		bcpl_cg_head:  128

Epaq			bcpl_opcodes:  41, bcpl_cg9:  62

EqualString		bcpl_compiler_head:  24

EQV_S			bcpl_symbols:  44

EQ_F			bcpl_symbols:  42

EQ_S			bcpl_symbols:  43

Era			bcpl_opcodes:  42, bcpl_cg9:  63, 64

Errorsw			bcpl_compiler_head:  124

ERROR_S			bcpl_symbols:  41

Ersa			bcpl_opcodes:  43, bcpl_cg9:  65, 66

EvalNumber		bcpl_cg_head:  29

Even			bcpl_compiler_head:  136

EXTERNAL_S		bcpl_symbols:  46

Fad			bcpl_opcodes:  44, bcpl_cg9:  67

FALSE_S			bcpl_symbols:  47

Fcmp			bcpl_opcodes:  45, bcpl_cg9:  68

Fdi			bcpl_opcodes:  46, bcpl_cg9:  69

Fdv			bcpl_opcodes:  47, bcpl_cg9:  70

FileCount			bcpl_compiler_head:  118

FileNames			bcpl_compiler_head:  116

FileShift			bcpl_compiler_head:  138

FilesInfo			bcpl_compiler_head:  117

FindInRegister		bcpl_cg_head:  38

FindPrintName		bcpl_compiler_head:  56

FinishText		bcpl_cg_head:  20

FINISH_S			bcpl_symbols:  48

FIXED_S			bcpl_symbols:  49

Flags			bcpl_cg9:  259, 260, 271, 277, 283, 316

Fld			bcpl_opcodes:  48, bcpl_cg9:  71

FLOAT_S			bcpl_symbols:  50

Fmp			bcpl_opcodes:  49, bcpl_cg9:  72

FNAP_S			bcpl_symbols:  51

FNDEF_S			bcpl_symbols:  52

Fneg			bcpl_opcodes:  50, bcpl_cg9:  73

Format			bcpl_compiler_head:  20, bcpl_cg9:  216, 218, 230, 235, 239, 243, 273, 289, 296, 306

FormCharconst		bcpl_compiler_head:  46

FormOpcode		bcpl_cg_head:  95

FormStringconst		bcpl_compiler_head:  47

FormTag			bcpl_cg_head:  96

FOR_S			bcpl_symbols:  53

Freevec			bcpl_compiler_head:  34

Fsb			bcpl_opcodes:  51, bcpl_cg9:  74

Fstr			bcpl_opcodes:  52, bcpl_cg9:  75

Fszn			bcpl_opcodes:  53, bcpl_cg9:  76

Ft2			bcpl_cg_head:  237

GetBits			bcpl_cg9:  324, 325, 327, 332

GetLpLabel		bcpl_cg_head:  129

GetRegister		bcpl_cg_head:  62

GetRelCode		bcpl_cg9:  264, 265, 319

GetStream			bcpl_compiler_head:  62

GetVersion		bcpl_compiler_head:  59

GET_S			bcpl_symbols:  57

GE_F			bcpl_symbols:  54

GE_S			bcpl_symbols:  56

GlobalTemp		bcpl_compiler_head:  131

GLOBAL_S			bcpl_symbols:  58

GOTO_S			bcpl_symbols:  59

GR_F			bcpl_symbols:  60

GR_S			bcpl_symbols:  61

HaveListingFile		bcpl_compiler_head:  105

HeaderSwitch		bcpl_cg_head:  190, bcpl_cg9:  303

i			bcpl_cg9:  187, 188, 307, 307

Ic			bcpl_cg_head:  238, bcpl_cg9:  163, 224, 224

IFNOT_S			bcpl_symbols:  63

IFSO_S			bcpl_symbols:  64

IF_S			bcpl_symbols:  62

IndicatorsSetBy		bcpl_cg_head:  130

INPUT			bcpl_compiler_head:  90

InRegister		bcpl_cg_head:  37

InstructionSwitch		bcpl_cg_head:  185, bcpl_cg9:  262, 271

INTO_S			bcpl_symbols:  66

IsAddress			bcpl_cg_head:  31

IsNumber			bcpl_cg_head:  28

IsStored			bcpl_cg_head:  32

IsZero			bcpl_cg_head:  30

Jumpsw			bcpl_cg_head:  131

LABDEF_S			bcpl_symbols:  67

LabelSwitch		bcpl_cg_head:  187, bcpl_cg9:  295

LABEL_S			bcpl_symbols:  68

LabMaxArg			bcpl_cg_head:  132

LabMaxSSP			bcpl_cg_head:  133

LabTable			bcpl_cg_head:  135

LabTableSize		bcpl_cg_head:  180

Lb			bcpl_cg_head:  217, bcpl_cg9:  180

Lbr			bcpl_cg_head:  260

LC			bcpl_cg_head:  136, bcpl_cg9:  224, 266, 292, 292, 312

Lca			bcpl_opcodes:  54, bcpl_cg9:  77, 78

Lda			bcpl_opcodes:  55, bcpl_cg9:  79, 80

Ldaq			bcpl_opcodes:  56, bcpl_cg9:  81

Ldx7			bcpl_opcodes:  57, bcpl_cg9:  82

Left			bcpl_compiler_head:  134, bcpl_cg9:  225, 250, 277

Length			bcpl_compiler_head:  29, bcpl_cg9:  194, 231, 236, 244

LengthInWords		bcpl_compiler_head:  30

LENGTH_S			bcpl_symbols:  71

LET_S			bcpl_symbols:  72

LexInit			bcpl_compiler_head:  65

LE_F			bcpl_symbols:  69

LE_S			bcpl_symbols:  70

LineCount			bcpl_compiler_head:  123, bcpl_cg9:  272, 273, 274, 300

LineCountSwitch		bcpl_cg_head:  188, bcpl_cg9:  299

LineMap			bcpl_compiler_head:  100

LineMapFirst		bcpl_cg_head:  137

LineMapLength		bcpl_cg_head:  138

LineMapList		bcpl_cg_head:  139

LineMask			bcpl_compiler_head:  138

LinkageLength		bcpl_cg_head:  140

LinkageRelbits		bcpl_cg_head:  141

LinkList			bcpl_cg_head:  142

LinkRefersThis		bcpl_cg_codes:  21

List1			bcpl_compiler_head:  35

List2			bcpl_compiler_head:  36

List3			bcpl_compiler_head:  37

List4			bcpl_compiler_head:  38

List5			bcpl_compiler_head:  39

List6			bcpl_compiler_head:  40

ListCodeItem		bcpl_cg_head:  112, bcpl_cg9:  258

Listing			bcpl_compiler_head:  95

LIST_S			bcpl_symbols:  73

Literal			bcpl_cg_head:  64

Llr			bcpl_opcodes:  58, bcpl_cg9:  83

LoadAppropriateRegister	bcpl_cg_head:  53

LoadIndex			bcpl_cg_head:  52

LoadNumber		bcpl_cg_head:  54

LoadPointer		bcpl_cg_head:  51

LoadRegister		bcpl_cg_head:  50

LOCAL_S			bcpl_symbols:  74

LOGAND_S			bcpl_symbols:  76

LOGOR_S			bcpl_symbols:  77

LookupLabel		bcpl_cg_head:  43, bcpl_cg9:  280

LookupTemp		bcpl_cg_head:  33

LOOP_S			bcpl_symbols:  78

Lp			bcpl_cg_head:  216, bcpl_cg9:  179

Lpr			bcpl_cg_head:  259

Lprpap			bcpl_opcodes:  59, bcpl_cg9:  84, 85, 86, 87

Lprpbp			bcpl_opcodes:  60

Lprplp			bcpl_opcodes:  61, bcpl_cg9:  88, 89, 90, 91

Lrand			bcpl_cg_head:  143

Lrl			bcpl_opcodes:  62, bcpl_cg9:  92

LSHIFT_S			bcpl_symbols:  81

LS_F			bcpl_symbols:  79

LS_S			bcpl_symbols:  80

LVECAP_S			bcpl_symbols:  83

LV_ARG_OUT		bcpl_symbols:  84

LV_FNAP_RESULT		bcpl_symbols:  86

LV_GLOBAL			bcpl_symbols:  87

LV_LOCAL			bcpl_symbols:  88

LV_S			bcpl_symbols:  82

LV_STATIC			bcpl_symbols:  89

LV_TEMP			bcpl_symbols:  90

Lxl0			bcpl_opcodes:  63, bcpl_cg9:  93, 94, 95, 96, 97, 98, 99, 100

Lxl1			bcpl_opcodes:  64

Machine			bcpl_compiler_head:  102

MainEntriesList		bcpl_cg_head:  145

MAIN_S			bcpl_symbols:  91

Makeaddressable		bcpl_cg_head:  57

MakeCgTemp		bcpl_cg_head:  34

MakeTimeString		bcpl_compiler_head:  44

MANIFEST_S		bcpl_symbols:  92

MaxArgOffset		bcpl_cg_head:  146

MaxSSP			bcpl_cg_head:  147

MINUS_F			bcpl_symbols:  93

MINUS_S			bcpl_symbols:  94

Mod16			bcpl_cg_head:  208

MonadicJumpcond		bcpl_cg_head:  25

MONITOR			bcpl_compiler_head:  91

Mpy			bcpl_opcodes:  65, bcpl_cg9:  101

MULT_F			bcpl_symbols:  96

MULT_S			bcpl_symbols:  97

n			bcpl_cg9:  190, 192, 332, 333, 346

NAMECHAIN			bcpl_compiler_head:  125

NAME_S			bcpl_symbols:  98

Neg			bcpl_opcodes:  66, bcpl_cg9:  102

Negl			bcpl_opcodes:  67, bcpl_cg9:  103

NEG_F			bcpl_symbols:  99

NEG_S			bcpl_symbols:  100

NEQV_S			bcpl_symbols:  101

NewLiteralsList		bcpl_cg_head:  148

NewSSP			bcpl_cg_head:  66

Newvec			bcpl_compiler_head:  33

Nextparam			bcpl_compiler_head:  45

Nextsymb			bcpl_compiler_head:  53

NE_F			bcpl_symbols:  102

NE_S			bcpl_symbols:  103

NIL_S			bcpl_symbols:  104

NOT_S			bcpl_symbols:  106

NumberOfRegisters		bcpl_cg_head:  266

NUMBER_S			bcpl_symbols:  107

OcodeSw			bcpl_compiler_head:  104

OFFSET_S			bcpl_symbols:  108

OldLabel			bcpl_cg_head:  149

OldLiteralsList		bcpl_cg_head:  150

Op			bcpl_cg9:  15, 16, 17

OpcodeName		bcpl_cg9:  15, 216

Optimize			bcpl_compiler_head:  101

OptionString		bcpl_compiler_head:  115

Ora			bcpl_opcodes:  68, bcpl_cg9:  104, 105

Orsa			bcpl_opcodes:  69, bcpl_cg9:  106, 107

OR_S			bcpl_symbols:  109

OutData			bcpl_cg_head:  84

OutLiterals		bcpl_cg_head:  47

Outop			bcpl_cg_head:  85

Outop2			bcpl_cg_head:  86

Outop3			bcpl_cg_head:  87

Outop4			bcpl_cg_head:  88

OUTPUT			bcpl_compiler_head:  89, bcpl_cg9:  186, 188, 193, 198, 203, 208, 216, 218, 230, 235, 
			239, 243, 249, 252, 264, 265, 267, 273, 276, 284, 288, 289, 291, 296, 306, 307, 308

Outstring			bcpl_cg_head:  48

OutW			bcpl_cg_head:  89

OutW2			bcpl_cg_head:  90

OverCase			bcpl_cg_codes:  22

p			bcpl_cg9:  258, 259, 259, 259

Packstring		bcpl_compiler_head:  21

Param			bcpl_cg_head:  151, bcpl_cg9:  196, 197, 200, 215, 225, 248, 250, 277, 278, 279, 280, 
			281

PhaseError		bcpl_cg_codes:  23, bcpl_cg9:  335

Plist			bcpl_compiler_head:  68

PLUS_F			bcpl_symbols:  110

PLUS_S			bcpl_symbols:  111

Pname			bcpl_compiler_head:  67

POINTER_S			bcpl_symbols:  112

PopInput			bcpl_compiler_head:  43

POS_F			bcpl_symbols:  113

POS_S			bcpl_symbols:  114

PPrep			bcpl_compiler_head:  97

Preserve			bcpl_cg_head:  59

ProgramName		bcpl_compiler_head:  119

PushInput			bcpl_compiler_head:  42

PutAbsBits		bcpl_cg_head:  92

PutCode			bcpl_cg_head:  91

Ql			bcpl_cg_head:  225, bcpl_cg9:  160

Qr			bcpl_cg_head:  244

Qu			bcpl_cg_head:  226, bcpl_cg9:  159

QuietSw			bcpl_compiler_head:  106

r			bcpl_cg9:  338, 340, 342, 344, 344, 346

RandomI			bcpl_compiler_head:  31

RBRA_S			bcpl_symbols:  116

Readch			bcpl_compiler_head:  16

Reg			bcpl_cg9:  154, 155, 227, 230, 231, 234, 235, 236, 243, 244

RegisterName		bcpl_cg9:  154, 227

RegisterTemps		bcpl_cg_head:  153

RegisterUsage		bcpl_cg_head:  155

REGISTER_S		bcpl_symbols:  117

RelbitsFirst		bcpl_cg_head:  156

RelbitsLength		bcpl_cg_head:  157

RelbitsList		bcpl_cg_head:  158, bcpl_cg9:  313, 334, 340, 342, 343, 343, 344

RelbitsOffset		bcpl_cg_head:  159, bcpl_cg9:  313, 333, 333, 339, 340, 341, 341, 342, 344

RelDef			bcpl_cg_head:  197

RelExtendedAbs		bcpl_cg_head:  202, bcpl_cg9:  326

RelLink15			bcpl_cg_head:  196

RelLink18			bcpl_cg_head:  194

RelNegLink18		bcpl_cg_head:  195

RelNegSymbol		bcpl_cg_head:  199

Reloc			bcpl_cg_head:  160

RelStat15			bcpl_cg_head:  201

RelStat18			bcpl_cg_head:  200

RelSymbol			bcpl_cg_head:  198

RelText			bcpl_cg_head:  193

REL_S			bcpl_symbols:  118

RemoveEscapes		bcpl_compiler_head:  23

REM_S			bcpl_symbols:  119

REPEATUNTIL_S		bcpl_symbols:  122

REPEATWHILE_S		bcpl_symbols:  123

REPEAT_S			bcpl_symbols:  121

REP_S			bcpl_symbols:  120

ResultBlockBegin		bcpl_cg_head:  75

ResultGet			bcpl_cg_head:  77

ResultInfo		bcpl_cg_head:  161

ResultInfoList		bcpl_cg_head:  162

RESULTIS_S		bcpl_symbols:  124

ResultSet			bcpl_cg_head:  76

RETURN_S			bcpl_symbols:  126

Right			bcpl_compiler_head:  134, bcpl_cg9:  251, 254, 260, 271, 283

RKET_S			bcpl_symbols:  127

Rrand			bcpl_cg_head:  152

RSHIFT_S			bcpl_symbols:  128

RTAP_S			bcpl_symbols:  129

RTDEF_S			bcpl_symbols:  130

RV_S			bcpl_symbols:  131

Satisfactory		bcpl_cg_head:  63

SaveSpaceSize		bcpl_cg_head:  163

Sb			bcpl_cg_head:  219, bcpl_cg9:  182

Sba			bcpl_opcodes:  70, bcpl_cg9:  108, 109

Sblx1			bcpl_opcodes:  71, bcpl_cg9:  110

Sbr			bcpl_cg_head:  262

SBRA_S			bcpl_symbols:  132

SECTBEGIN_S		bcpl_symbols:  133

SECTBRA_S			bcpl_symbols:  134

SECTEND_S			bcpl_symbols:  136

SectionHeader		bcpl_cg_head:  94

SectionSwitch		bcpl_cg_head:  189, bcpl_cg9:  311

SECTKET_S			bcpl_symbols:  137

SEMICOLON_S		bcpl_symbols:  138

SetLineNumber		bcpl_cg_head:  93

SetupAddr			bcpl_cg_head:  55

SKET_S			bcpl_symbols:  139

Sp			bcpl_cg_head:  218, bcpl_cg9:  181

Spr			bcpl_cg_head:  261

Sprpap			bcpl_opcodes:  72, bcpl_cg9:  111, 112, 113, 114

Sprpbp			bcpl_opcodes:  73

Sprplp			bcpl_opcodes:  74, bcpl_cg9:  115, 116, 117, 118

Sreg			bcpl_opcodes:  75, bcpl_cg9:  119

Ssa			bcpl_opcodes:  76, bcpl_cg9:  120, 121

Sta			bcpl_opcodes:  77, bcpl_cg9:  122, 123

StackRefTag		bcpl_cg_head:  167

Staq			bcpl_opcodes:  78, bcpl_cg9:  124

Star			bcpl_cg_head:  239

StarThenReg		bcpl_cg_head:  240

STATIC_S			bcpl_symbols:  140

Stb			bcpl_opcodes:  79, bcpl_cg9:  125

Stc1			bcpl_opcodes:  80, bcpl_cg9:  126

Stcd			bcpl_opcodes:  81, bcpl_cg9:  127

Store			bcpl_cg_head:  60

StoreArg			bcpl_cg_head:  70

StoreRegister		bcpl_cg_head:  61

StoreString		bcpl_compiler_head:  41

StoreSystemArg		bcpl_cg_head:  73

Stpab			bcpl_opcodes:  82, bcpl_cg9:  129, 131

Stpap			bcpl_opcodes:  83, bcpl_cg9:  128, 130

Stpbp			bcpl_opcodes:  84

Stplb			bcpl_opcodes:  85, bcpl_cg9:  133, 135

Stplp			bcpl_opcodes:  86, bcpl_cg9:  132, 134

STRINGCONST_S		bcpl_symbols:  142

STRING_S			bcpl_symbols:  141

STRUCTURE_S		bcpl_symbols:  143

Stx0			bcpl_opcodes:  87, bcpl_cg9:  136

Stz			bcpl_opcodes:  88, bcpl_cg9:  137

SwapAandQ			bcpl_cg_head:  58

SWITCHON_S		bcpl_symbols:  144

Sxl0			bcpl_opcodes:  89, bcpl_cg9:  138

Sxl1			bcpl_opcodes:  90, bcpl_cg9:  139

Symb			bcpl_compiler_head:  126

SymbolLength		bcpl_cg_head:  165

SymbolName		bcpl_compiler_head:  55

SymbolRelbits		bcpl_cg_head:  166

Symbols			bcpl_compiler_head:  99

SymtabFirst		bcpl_cg_head:  168

SymtabP			bcpl_cg_head:  169

SymtabSize		bcpl_cg_head:  181

SymtabV			bcpl_cg_head:  170

Szn			bcpl_opcodes:  91, bcpl_cg9:  140

TABLE_S			bcpl_symbols:  146

Tag			bcpl_cg_head:  171

TagPrMask			bcpl_cg_head:  206, bcpl_cg9:  174

TagXrMask			bcpl_cg_head:  205, bcpl_cg9:  155, 278

TEMP_S			bcpl_symbols:  147

TEST_S			bcpl_symbols:  148

TextLength		bcpl_cg_head:  172

TextRelbits		bcpl_cg_head:  173

TimeNow			bcpl_compiler_head:  114

TimeNowString		bcpl_compiler_head:  113

Tmi			bcpl_opcodes:  92, bcpl_cg9:  141

Tmoz			bcpl_opcodes:  93, bcpl_cg9:  142

Tnz			bcpl_opcodes:  94, bcpl_cg9:  143

TO_S			bcpl_symbols:  149

Tpl			bcpl_opcodes:  95, bcpl_cg9:  144

Tpnz			bcpl_opcodes:  96, bcpl_cg9:  145

Tra			bcpl_opcodes:  97, bcpl_cg9:  146

Trans			bcpl_compiler_head:  70

Transreport		bcpl_compiler_head:  50

Trc			bcpl_opcodes:  98, bcpl_cg9:  147

TRUE_S			bcpl_symbols:  150

Tsbap			bcpl_opcodes:  99, bcpl_cg9:  148

Tsbbp			bcpl_opcodes:  100, bcpl_cg9:  149

Tsblp			bcpl_opcodes:  101, bcpl_cg9:  150

Tsx0			bcpl_opcodes:  102, bcpl_cg9:  151

TYPE_S			bcpl_symbols:  151

Tze			bcpl_opcodes:  103, bcpl_cg9:  152

UndefLab			bcpl_cg_codes:  24

UnexpectedCase		bcpl_compiler_head:  139, bcpl_cg9:  17, 316

UNLESS_S			bcpl_symbols:  152

Unpackstring		bcpl_compiler_head:  22, bcpl_cg9:  305

UNTIL_S			bcpl_symbols:  153

UpperCase			bcpl_compiler_head:  96

UsageCounter		bcpl_cg_head:  175

UserID			bcpl_compiler_head:  120

UtilitiesInit		bcpl_compiler_head:  60

v			bcpl_cg9:  191, 192, 193, 194, 304, 305, 306, 307, 307

VALDEF_S			bcpl_symbols:  154

VALOF_S			bcpl_symbols:  156

VECAP_S			bcpl_symbols:  158

VEC_S			bcpl_symbols:  157

Vmax			bcpl_compiler_head:  137, bcpl_cg9:  304

WHILE_S			bcpl_symbols:  159

Word			bcpl_cg9:  215, 216, 216, 217, 218, 220, 221, 221, 222, 222, 224, 224, 224, 225, 226, 
			227, 228, 234, 239, 248, 250, 251, 254, 259, 268, 269, 278, 280, 280, 281, 285, 296, 300, 
			312

WriteAddress		bcpl_cg9:  196, 225, 250, 254

Writech			bcpl_compiler_head:  17, bcpl_cg9:  186, 188, 198, 203, 208, 252, 264, 265, 267, 276, 
			284, 288, 291, 307

WriteData			bcpl_cg_head:  110, bcpl_cg9:  248, 285

WriteDefs			bcpl_cg_head:  103

WriteEntry		bcpl_cg_head:  102

WriteGetlp		bcpl_cg_head:  101

WriteH			bcpl_cg9:  185, 266, 268, 269

WriteInstruction		bcpl_cg_head:  111, bcpl_cg9:  215, 281

WriteLinkage		bcpl_cg_head:  104

WriteN			bcpl_compiler_head:  19

WriteNcount		bcpl_cg9:  190, 200, 212

WriteObjectListing		bcpl_compiler_head:  73

WriteObjectMap		bcpl_cg_head:  108

WriteRelBits		bcpl_cg_head:  107

WriteS			bcpl_compiler_head:  18, bcpl_cg9:  193, 249, 308

WriteSymbol		bcpl_cg_head:  106

x			bcpl_cg9:  185, 188

X0			bcpl_cg_head:  228, bcpl_cg9:  164

X1			bcpl_cg_head:  229, bcpl_cg9:  165, 278

X2			bcpl_cg_head:  230, bcpl_cg9:  166

X3			bcpl_cg_head:  231, bcpl_cg9:  167

X4			bcpl_cg_head:  232, bcpl_cg9:  168

X5			bcpl_cg_head:  233, bcpl_cg9:  169

X6			bcpl_cg_head:  234, bcpl_cg9:  170

X7			bcpl_cg_head:  235, bcpl_cg9:  171

Xr0			bcpl_cg_head:  246

Xr1			bcpl_cg_head:  247

Xr2			bcpl_cg_head:  248

Xr3			bcpl_cg_head:  249

Xr4			bcpl_cg_head:  250

Xr5			bcpl_cg_head:  251

Xr6			bcpl_cg_head:  252

Xr7			bcpl_cg_head:  253

Xref			bcpl_compiler_head:  103




Trans time 10.2, 213 object words per second.
	"	Begin text of RegisterName

aa 000000  000014 122145		zero	12,42085		" RegisterName
aa 000001  147151 163164		zero	52841,58996
aa 000002  145162 116141		zero	51826,40033
aa 000003  155145 000000		zero	55909
			L2:
aa 000004  000000 213000  154		epaq	0		" set lp to linkage section
aa 000005  700026 764161		lprplp	sb|22,*au
aa 000006  200000 021100		adlx1	bp|0		" BCPL save
aa 000007  700000 542111		sprpbp	sb|0,x1
aa 000010  700001 544111		sprplp	sb|1,x1
aa 000011  700417 620111		eax0	sb|271,x1
aa 000012  777760 360003		anx0	-16,du
aa 000013  700025 740100		stx0	sb|21		" end of save sequence

aa 000014  000041 710004  156		tra	L8
			L9:
aa 000015  000114 350004		eapap	L10		" "n"
aa 000016  000064 710004  157		tra	L6
			L11:
aa 000017  000111 350004		eapap	L12		" "au"
aa 000020  000062 710004  158		tra	L6
			L13:
aa 000021  000106 350004		eapap	L14		" "al"
aa 000022  000060 710004  159		tra	L6
			L15:
aa 000023  000103 350004		eapap	L16		" "qu"
aa 000024  000056 710004  160		tra	L6
			L17:
aa 000025  000100 350004		eapap	L18		" "ql"
aa 000026  000054 710004  161		tra	L6
			L19:
aa 000027  000075 350004		eapap	L20		" "du"
aa 000030  000052 710004  162		tra	L6
			L21:
aa 000031  000072 350004		eapap	L22		" "dl"
aa 000032  000050 710004  163		tra	L6
			L23:
aa 000033  000067 350004		eapap	L24		" "ic"
aa 000034  000046 710004  164		tra	L6
			L25:
aa 000035  000064 350004		eapap	L26		" "x0"
aa 000036  000044 710004  165		tra	L6
			L27:
aa 000037  000061 350004		eapap	L28		" "x1"
aa 000040  000042 710004  166		tra	L6
			L29:
aa 000041  000056 350004		eapap	L30		" "x2"
aa 000042  000040 710004  167		tra	L6
			L31:
aa 000043  000053 350004		eapap	L32		" "x3"
aa 000044  000036 710004  168		tra	L6
			L33:
aa 000045  000050 350004		eapap	L34		" "x4"
aa 000046  000034 710004  169		tra	L6
			L35:
aa 000047  000045 350004		eapap	L36		" "x5"
aa 000050  000032 710004  170		tra	L6
			L37:
aa 000051  000042 350004		eapap	L38		" "x6"
aa 000052  000030 710004  171		tra	L6
			L39:
aa 000053  000037 350004		eapap	L40		" "x7"
aa 000054  000026 710004		tra	L6
			L8:
aa 000055  700002 236111		ldq	sb|2,x1		" Reg
aa 000056  000017 376007		anq	15,dl		" TagXrMask

	"	Begin switchon

aa 000057  000044 777000		llr	36		" exchange A and Q
0a 000060  000062 710005		tra	L41,al
aa 000061  700004 755111		sta	sb|4,x1		" temporary
			L41:
aa 000062  777733 710004		tra	L9
aa 000063  777734 710004		tra	L11
aa 000064  777737 710004		tra	L15
aa 000065  777742 710004		tra	L19
aa 000066  777745 710004		tra	L23
aa 000067  777732 710004		tra	L13
aa 000070  777735 710004		tra	L17
aa 000071  777740 710004		tra	L21
aa 000072  777743 710004		tra	L25
aa 000073  777744 710004		tra	L27
aa 000074  777745 710004		tra	L29
aa 000075  777746 710004		tra	L31
aa 000076  777747 710004		tra	L33
aa 000077  777750 710004		tra	L35
aa 000100  777751 710004		tra	L37
aa 000101  777752 710004		tra	L39
			L7:
			L6:
aa 000102  700004 540111		sprpap	sb|4,x1
aa 000103  700004 235111		lda	sb|4,x1
aa 000104  000044 777000		llr	36		" exchange A and Q
aa 000105  700000 762111		lprpbp	sb|0,x1		" bcpl return
aa 000106  200000 121100		sblx1	bp|0
aa 000107  700001 764111		lprplp	sb|1,x1
aa 000110  200001 710100		tra	bp|1		" end of return sequence
aa 000111  700003 756111		stq	sb|3,x1		" temporary

	"	Literal pool

			L40:
aa 000112  000002 170067		zero	2,61495		" "x7"
			L38:
aa 000113  000002 170066		zero	2,61494		" "x6"
			L36:
aa 000114  000002 170065		zero	2,61493		" "x5"
			L34:
aa 000115  000002 170064		zero	2,61492		" "x4"
			L32:
aa 000116  000002 170063		zero	2,61491		" "x3"
			L30:
aa 000117  000002 170062		zero	2,61490		" "x2"
			L28:
aa 000120  000002 170061		zero	2,61489		" "x1"
			L26:
aa 000121  000002 170060		zero	2,61488		" "x0"
			L24:
aa 000122  000002 151143		zero	2,53859		" "ic"
			L22:
aa 000123  000002 144154		zero	2,51308		" "dl"
			L20:
aa 000124  000002 144165		zero	2,51317		" "du"
			L18:
aa 000125  000002 161154		zero	2,57964		" "ql"
			L16:
aa 000126  000002 161165		zero	2,57973		" "qu"
			L14:
aa 000127  000002 141154		zero	2,49772		" "al"
			L12:
aa 000130  000002 141165		zero	2,49781		" "au"
			L10:
aa 000131  000001 156000		zero	1,56320		" "n"
	"	Begin text of BaseName

aa 000132  000010 102141		zero	8,33889		" BaseName
aa 000133  163145 116141		zero	58981,40033
aa 000134  155145 000000		zero	55909
			L3:
aa 000135  000000 213000  173		epaq	0		" set lp to linkage section
aa 000136  700026 764161		lprplp	sb|22,*au
aa 000137  200000 021100		adlx1	bp|0		" BCPL save
aa 000140  700000 542111		sprpbp	sb|0,x1
aa 000141  700001 544111		sprplp	sb|1,x1
aa 000142  700417 620111		eax0	sb|271,x1
aa 000143  777760 360003		anx0	-16,du
aa 000144  700025 740100		stx0	sb|21		" end of save sequence

aa 000145  000021 710004  175		tra	L46
			L47:
aa 000146  000060 350004		eapap	L48		" "ap"
aa 000147  000037 710004  176		tra	L44
			L49:
aa 000150  000055 350004		eapap	L50		" "ab"
aa 000151  000035 710004  177		tra	L44
			L51:
aa 000152  000052 350004		eapap	L52		" "bp"
aa 000153  000033 710004  178		tra	L44
			L53:
aa 000154  000047 350004		eapap	L54		" "bb"
aa 000155  000031 710004  179		tra	L44
			L55:
aa 000156  000044 350004		eapap	L56		" "lp"
aa 000157  000027 710004  180		tra	L44
			L57:
aa 000160  000041 350004		eapap	L58		" "lb"
aa 000161  000025 710004  181		tra	L44
			L59:
aa 000162  000036 350004		eapap	L60		" "sp"
aa 000163  000023 710004  182		tra	L44
			L61:
aa 000164  000033 350004		eapap	L62		" "sb"
aa 000165  000021 710004		tra	L44
			L46:
aa 000166  700002 236111		ldq	sb|2,x1		" Base
aa 000167  000027 376004		anq	L63		" TagPrMask

	"	Begin switchon

aa 000170  000044 777000		llr	36		" exchange A and Q
aa 000171  000043 773000		lrl	35
aa 000172  000011 507007		dvf	9,dl		" hash table size
0a 000173  000175 710006		tra	L64,ql
aa 000174  700004 755111		sta	sb|4,x1		" temporary
			L64:
aa 000175  777753 710004		tra	L49
aa 000176  777750 710004		tra	L47
aa 000177  000007 710004		tra	L45
aa 000200  777764 710004		tra	L61
aa 000201  777761 710004		tra	L59
aa 000202  777756 710004		tra	L57
aa 000203  777753 710004		tra	L55
aa 000204  777750 710004		tra	L53
aa 000205  777745 710004		tra	L51
			L45:
			L44:
aa 000206  700004 540111		sprpap	sb|4,x1
aa 000207  700004 235111		lda	sb|4,x1
aa 000210  000044 777000		llr	36		" exchange A and Q
aa 000211  700000 762111		lprpbp	sb|0,x1		" bcpl return
aa 000212  200000 121100		sblx1	bp|0
aa 000213  700001 764111		lprplp	sb|1,x1
aa 000214  200001 710100		tra	bp|1		" end of return sequence
aa 000215  700003 756111		stq	sb|3,x1		" temporary

	"	Literal pool

			L63:
aa 000216  700000 000100		zero	-32768,64		" TagPrMask
			L62:
aa 000217  000002 163142		zero	2,58978		" "sb"
			L60:
aa 000220  000002 163160		zero	2,58992		" "sp"
			L58:
aa 000221  000002 154142		zero	2,55394		" "lb"
			L56:
aa 000222  000002 154160		zero	2,55408		" "lp"
			L54:
aa 000223  000002 142142		zero	2,50274		" "bb"
			L52:
aa 000224  000002 142160		zero	2,50288		" "bp"
			L50:
aa 000225  000002 141142		zero	2,49762		" "ab"
			L48:
aa 000226  000002 141160		zero	2,49776		" "ap"
	"	Begin text of OpcodeName

aa 000227  000012 117160		zero	10,40560		" OpcodeName
aa 000230  143157 144145		zero	50799,51301
aa 000231  116141 155145		zero	40033,55909
			L1:
aa 000232  000000 213000  15		epaq	0		" set lp to linkage section
aa 000233  700026 764161		lprplp	sb|22,*au
aa 000234  200000 021100		adlx1	bp|0		" BCPL save
aa 000235  700000 542111		sprpbp	sb|0,x1
aa 000236  700001 544111		sprplp	sb|1,x1
aa 000237  700424 620111		eax0	sb|276,x1
aa 000240  777760 360003		anx0	-16,du
aa 000241  700025 740100		stx0	sb|21		" end of save sequence

aa 000242  000425 710004  17		tra	L69
			L70:
aa 000243  000143 236007		ldq	99,dl		" UnexpectedCase
aa 000244  700010 756111		stq	sb|8,x1
aa 000245  700002 236111		ldq	sb|2,x1		" Op
aa 000246  700011 756111		stq	sb|9,x1
aa 000247  001726 350004		eapap	L71		" "OpcodeName"
aa 000250  700012 540111		sprpap	sb|10,x1
4a 000251  400026 272120		tsbbp	lp|L72,*		" CGreport
aa 000252  000006 000003		zero	6,3
aa 000253  001717 350004  18		eapap	L73		" "<error>"
aa 000254  001275 710004  20		tra	L67
			L74:
aa 000255  001713 350004		eapap	L75		" "abd"
aa 000256  001273 710004  21		tra	L67
			L76:
aa 000257  001707 350004		eapap	L77		" "ada"
aa 000260  001271 710004  22		tra	L67
			L78:
aa 000261  001703 350004		eapap	L79		" "adq"
aa 000262  001267 710004  23		tra	L67
			L80:
aa 000263  001677 350004		eapap	L81		" "adlx1"
aa 000264  001265 710004  24		tra	L67
			L82:
aa 000265  001673 350004		eapap	L83		" "als"
aa 000266  001263 710004  25		tra	L67
			L84:
aa 000267  001667 350004		eapap	L85		" "qls"
aa 000270  001261 710004  26		tra	L67
			L86:
aa 000271  001663 350004		eapap	L87		" "ana"
aa 000272  001257 710004  27		tra	L67
			L88:
aa 000273  001657 350004		eapap	L89		" "anq"
aa 000274  001255 710004  28		tra	L67
			L90:
aa 000275  001653 350004		eapap	L91		" "ansa"
aa 000276  001253 710004  29		tra	L67
			L92:
aa 000277  001647 350004		eapap	L93		" "ansq"
aa 000300  001251 710004  30		tra	L67
			L94:
aa 000301  001643 350004		eapap	L95		" "anx0"
aa 000302  001247 710004  31		tra	L67
			L96:
aa 000303  001637 350004		eapap	L97		" "aos"
aa 000304  001245 710004  32		tra	L67
			L98:
aa 000305  001633 350004		eapap	L99		" "arl"
aa 000306  001243 710004  33		tra	L67
			L100:
aa 000307  001627 350004		eapap	L101		" "qrl"
aa 000310  001241 710004  34		tra	L67
			L102:
aa 000311  001623 350004		eapap	L103		" "asa"
aa 000312  001237 710004  35		tra	L67
			L104:
aa 000313  001617 350004		eapap	L105		" "asq"
aa 000314  001235 710004  36		tra	L67
			L106:
aa 000315  001613 350004		eapap	L107		" "cmpa"
aa 000316  001233 710004  37		tra	L67
			L108:
aa 000317  001607 350004		eapap	L109		" "cmpq"
aa 000320  001231 710004  38		tra	L67
			L110:
aa 000321  001603 350004		eapap	L111		" "div"
aa 000322  001227 710004  39		tra	L67
			L112:
aa 000323  001577 350004		eapap	L113		" "dvf"
aa 000324  001225 710004  40		tra	L67
			L114:
aa 000325  001573 350004		eapap	L115		" "eabap"
aa 000326  001223 710004  41		tra	L67
			L116:
aa 000327  001567 350004		eapap	L117		" "eabab"
aa 000330  001221 710004  42		tra	L67
			L118:
aa 000331  001563 350004		eapap	L119		" "eabbp"
aa 000332  001217 710004  43		tra	L67
			L120:
aa 000333  001557 350004		eapap	L121		" "eabbb"
aa 000334  001215 710004  44		tra	L67
			L122:
aa 000335  001553 350004		eapap	L123		" "eablp"
aa 000336  001213 710004  45		tra	L67
			L124:
aa 000337  001547 350004		eapap	L125		" "eablb"
aa 000340  001211 710004  46		tra	L67
			L126:
aa 000341  001543 350004		eapap	L127		" "eapap"
aa 000342  001207 710004  47		tra	L67
			L128:
aa 000343  001537 350004		eapap	L129		" "eapab"
aa 000344  001205 710004  48		tra	L67
			L130:
aa 000345  001533 350004		eapap	L131		" "eapbp"
aa 000346  001203 710004  49		tra	L67
			L132:
aa 000347  001527 350004		eapap	L133		" "eapbb"
aa 000350  001201 710004  50		tra	L67
			L134:
aa 000351  001523 350004		eapap	L135		" "eaplp"
aa 000352  001177 710004  51		tra	L67
			L136:
aa 000353  001517 350004		eapap	L137		" "eaplb"
aa 000354  001175 710004  52		tra	L67
			L138:
aa 000355  001513 350004		eapap	L139		" "eapsp"
aa 000356  001173 710004  53		tra	L67
			L140:
aa 000357  001507 350004		eapap	L141		" "eapsb"
aa 000360  001171 710004  54		tra	L67
			L142:
aa 000361  001503 350004		eapap	L143		" "eax0"
aa 000362  001167 710004  55		tra	L67
			L144:
aa 000363  001477 350004		eapap	L145		" "eax1"
aa 000364  001165 710004  56		tra	L67
			L146:
aa 000365  001473 350004		eapap	L147		" "eax2"
aa 000366  001163 710004  57		tra	L67
			L148:
aa 000367  001467 350004		eapap	L149		" "eax3"
aa 000370  001161 710004  58		tra	L67
			L150:
aa 000371  001463 350004		eapap	L151		" "eax4"
aa 000372  001157 710004  59		tra	L67
			L152:
aa 000373  001457 350004		eapap	L153		" "eax5"
aa 000374  001155 710004  60		tra	L67
			L154:
aa 000375  001453 350004		eapap	L155		" "eax6"
aa 000376  001153 710004  61		tra	L67
			L156:
aa 000377  001447 350004		eapap	L157		" "eax7"
aa 000400  001151 710004  62		tra	L67
			L158:
aa 000401  001443 350004		eapap	L159		" "epaq"
aa 000402  001147 710004  63		tra	L67
			L160:
aa 000403  001437 350004		eapap	L161		" "era"
aa 000404  001145 710004  64		tra	L67
			L162:
aa 000405  001433 350004		eapap	L163		" "erq"
aa 000406  001143 710004  65		tra	L67
			L164:
aa 000407  001427 350004		eapap	L165		" "ersa"
aa 000410  001141 710004  66		tra	L67
			L166:
aa 000411  001423 350004		eapap	L167		" "ersq"
aa 000412  001137 710004  67		tra	L67
			L168:
aa 000413  001417 350004		eapap	L169		" "fad"
aa 000414  001135 710004  68		tra	L67
			L170:
aa 000415  001413 350004		eapap	L171		" "fcmp"
aa 000416  001133 710004  69		tra	L67
			L172:
aa 000417  001407 350004		eapap	L173		" "fdi"
aa 000420  001131 710004  70		tra	L67
			L174:
aa 000421  001403 350004		eapap	L175		" "fdv"
aa 000422  001127 710004  71		tra	L67
			L176:
aa 000423  001377 350004		eapap	L177		" "fld"
aa 000424  001125 710004  72		tra	L67
			L178:
aa 000425  001373 350004		eapap	L179		" "fmp"
aa 000426  001123 710004  73		tra	L67
			L180:
aa 000427  001367 350004		eapap	L181		" "fneg"
aa 000430  001121 710004  74		tra	L67
			L182:
aa 000431  001363 350004		eapap	L183		" "fsb"
aa 000432  001117 710004  75		tra	L67
			L184:
aa 000433  001357 350004		eapap	L185		" "fstr"
aa 000434  001115 710004  76		tra	L67
			L186:
aa 000435  001353 350004		eapap	L187		" "fszn"
aa 000436  001113 710004  77		tra	L67
			L188:
aa 000437  001347 350004		eapap	L189		" "lca"
aa 000440  001111 710004  78		tra	L67
			L190:
aa 000441  001343 350004		eapap	L191		" "lcq"
aa 000442  001107 710004  79		tra	L67
			L192:
aa 000443  001337 350004		eapap	L193		" "lda"
aa 000444  001105 710004  80		tra	L67
			L194:
aa 000445  001333 350004		eapap	L195		" "ldq"
aa 000446  001103 710004  81		tra	L67
			L196:
aa 000447  001327 350004		eapap	L197		" "ldaq"
aa 000450  001101 710004  82		tra	L67
			L198:
aa 000451  001323 350004		eapap	L199		" "ldx7"
aa 000452  001077 710004  83		tra	L67
			L200:
aa 000453  001317 350004		eapap	L201		" "llr"
aa 000454  001075 710004  84		tra	L67
			L202:
aa 000455  001313 350004		eapap	L203		" "lprpap"
aa 000456  001073 710004  85		tra	L67
			L204:
aa 000457  001307 350004		eapap	L205		" "lprpab"
aa 000460  001071 710004  86		tra	L67
			L206:
aa 000461  001303 350004		eapap	L207		" "lprpbp"
aa 000462  001067 710004  87		tra	L67
			L208:
aa 000463  001277 350004		eapap	L209		" "lprpbb"
aa 000464  001065 710004  88		tra	L67
			L210:
aa 000465  001273 350004		eapap	L211		" "lprplp"
aa 000466  001063 710004  89		tra	L67
			L212:
aa 000467  001267 350004		eapap	L213		" "lprplb"
aa 000470  001061 710004  90		tra	L67
			L214:
aa 000471  001263 350004		eapap	L215		" "lprpsp"
aa 000472  001057 710004  91		tra	L67
			L216:
aa 000473  001257 350004		eapap	L217		" "lprpsb"
aa 000474  001055 710004  92		tra	L67
			L218:
aa 000475  001253 350004		eapap	L219		" "lrl"
aa 000476  001053 710004  93		tra	L67
			L220:
aa 000477  001247 350004		eapap	L221		" "lxl0"
aa 000500  001051 710004  94		tra	L67
			L222:
aa 000501  001243 350004		eapap	L223		" "lxl1"
aa 000502  001047 710004  95		tra	L67
			L224:
aa 000503  001237 350004		eapap	L225		" "lxl2"
aa 000504  001045 710004  96		tra	L67
			L226:
aa 000505  001233 350004		eapap	L227		" "lxl3"
aa 000506  001043 710004  97		tra	L67
			L228:
aa 000507  001227 350004		eapap	L229		" "lxl4"
aa 000510  001041 710004  98		tra	L67
			L230:
aa 000511  001223 350004		eapap	L231		" "lxl5"
aa 000512  001037 710004  99		tra	L67
			L232:
aa 000513  001217 350004		eapap	L233		" "lxl6"
aa 000514  001035 710004  100		tra	L67
			L234:
aa 000515  001213 350004		eapap	L235		" "lxl7"
aa 000516  001033 710004  101		tra	L67
			L236:
aa 000517  001207 350004		eapap	L237		" "mpy"
aa 000520  001031 710004  102		tra	L67
			L238:
aa 000521  001203 350004		eapap	L239		" "neg"
aa 000522  001027 710004  103		tra	L67
			L240:
aa 000523  001177 350004		eapap	L241		" "negl"
aa 000524  001025 710004  104		tra	L67
			L242:
aa 000525  001173 350004		eapap	L243		" "ora"
aa 000526  001023 710004  105		tra	L67
			L244:
aa 000527  001167 350004		eapap	L245		" "orq"
aa 000530  001021 710004  106		tra	L67
			L246:
aa 000531  001163 350004		eapap	L247		" "orsa"
aa 000532  001017 710004  107		tra	L67
			L248:
aa 000533  001157 350004		eapap	L249		" "orsq"
aa 000534  001015 710004  108		tra	L67
			L250:
aa 000535  001153 350004		eapap	L251		" "sba"
aa 000536  001013 710004  109		tra	L67
			L252:
aa 000537  001147 350004		eapap	L253		" "sbq"
aa 000540  001011 710004  110		tra	L67
			L254:
aa 000541  001143 350004		eapap	L255		" "sblx1"
aa 000542  001007 710004  111		tra	L67
			L256:
aa 000543  001137 350004		eapap	L257		" "sprpap"
aa 000544  001005 710004  112		tra	L67
			L258:
aa 000545  001133 350004		eapap	L259		" "sprpab"
aa 000546  001003 710004  113		tra	L67
			L260:
aa 000547  001127 350004		eapap	L261		" "sprpbp"
aa 000550  001001 710004  114		tra	L67
			L262:
aa 000551  001123 350004		eapap	L263		" "sprpbb"
aa 000552  000777 710004  115		tra	L67
			L264:
aa 000553  001117 350004		eapap	L265		" "sprplp"
aa 000554  000775 710004  116		tra	L67
			L266:
aa 000555  001113 350004		eapap	L267		" "sprplb"
aa 000556  000773 710004  117		tra	L67
			L268:
aa 000557  001107 350004		eapap	L269		" "sprpsp"
aa 000560  000771 710004  118		tra	L67
			L270:
aa 000561  001103 350004		eapap	L271		" "sprpsb"
aa 000562  000767 710004  119		tra	L67
			L272:
aa 000563  001077 350004		eapap	L273		" "sreg"
aa 000564  000765 710004  120		tra	L67
			L274:
aa 000565  001073 350004		eapap	L275		" "ssa"
aa 000566  000763 710004  121		tra	L67
			L276:
aa 000567  001067 350004		eapap	L277		" "ssq"
aa 000570  000761 710004  122		tra	L67
			L278:
aa 000571  001063 350004		eapap	L279		" "sta"
aa 000572  000757 710004  123		tra	L67
			L280:
aa 000573  001057 350004		eapap	L281		" "stq"
aa 000574  000755 710004  124		tra	L67
			L282:
aa 000575  001053 350004		eapap	L283		" "staq"
aa 000576  000753 710004  125		tra	L67
			L284:
aa 000577  001047 350004		eapap	L285		" "stb"
aa 000600  000751 710004  126		tra	L67
			L286:
aa 000601  001043 350004		eapap	L287		" "stc1"
aa 000602  000747 710004  127		tra	L67
			L288:
aa 000603  001037 350004		eapap	L289		" "stcd"
aa 000604  000745 710004  128		tra	L67
			L290:
aa 000605  001033 350004		eapap	L291		" "stpap"
aa 000606  000743 710004  129		tra	L67
			L292:
aa 000607  001027 350004		eapap	L293		" "stpab"
aa 000610  000741 710004  130		tra	L67
			L294:
aa 000611  001023 350004		eapap	L295		" "stpbp"
aa 000612  000737 710004  131		tra	L67
			L296:
aa 000613  001017 350004		eapap	L297		" "stpbb"
aa 000614  000735 710004  132		tra	L67
			L298:
aa 000615  001013 350004		eapap	L299		" "stplp"
aa 000616  000733 710004  133		tra	L67
			L300:
aa 000617  001007 350004		eapap	L301		" "stplb"
aa 000620  000731 710004  134		tra	L67
			L302:
aa 000621  001003 350004		eapap	L303		" "stpsp"
aa 000622  000727 710004  135		tra	L67
			L304:
aa 000623  000777 350004		eapap	L305		" "stpsb"
aa 000624  000725 710004  136		tra	L67
			L306:
aa 000625  000773 350004		eapap	L307		" "stx0"
aa 000626  000723 710004  137		tra	L67
			L308:
aa 000627  000767 350004		eapap	L309		" "stz"
aa 000630  000721 710004  138		tra	L67
			L310:
aa 000631  000763 350004		eapap	L311		" "sxl0"
aa 000632  000717 710004  139		tra	L67
			L312:
aa 000633  000757 350004		eapap	L313		" "sxl1"
aa 000634  000715 710004  140		tra	L67
			L314:
aa 000635  000753 350004		eapap	L315		" "szn"
aa 000636  000713 710004  141		tra	L67
			L316:
aa 000637  000747 350004		eapap	L317		" "tmi"
aa 000640  000711 710004  142		tra	L67
			L318:
aa 000641  000743 350004		eapap	L319		" "tmoz"
aa 000642  000707 710004  143		tra	L67
			L320:
aa 000643  000737 350004		eapap	L321		" "tnz"
aa 000644  000705 710004  144		tra	L67
			L322:
aa 000645  000733 350004		eapap	L323		" "tpl"
aa 000646  000703 710004  145		tra	L67
			L324:
aa 000647  000727 350004		eapap	L325		" "tpnz"
aa 000650  000701 710004  146		tra	L67
			L326:
aa 000651  000723 350004		eapap	L327		" "tra"
aa 000652  000677 710004  147		tra	L67
			L328:
aa 000653  000717 350004		eapap	L329		" "trc"
aa 000654  000675 710004  148		tra	L67
			L330:
aa 000655  000713 350004		eapap	L331		" "tsbap"
aa 000656  000673 710004  149		tra	L67
			L332:
aa 000657  000707 350004		eapap	L333		" "tsbbp"
aa 000660  000671 710004  150		tra	L67
			L334:
aa 000661  000703 350004		eapap	L335		" "tsblp"
aa 000662  000667 710004  151		tra	L67
			L336:
aa 000663  000677 350004		eapap	L337		" "tsx0"
aa 000664  000665 710004  152		tra	L67
			L338:
aa 000665  000673 350004		eapap	L339		" "tze"
aa 000666  000663 710004		tra	L67
			L69:

	"	Begin switchon

aa 000667  700002 235111		lda	sb|2,x1		" Op
aa 000670  001251 115007		cmpa	681,dl
aa 000671  000043 604004		tmi	L340
aa 000672  777715 600004		tze	L292
aa 000673  001503 115007		cmpa	835,dl
aa 000674  000021 604004		tmi	L341
aa 000675  777360 600004		tze	L74
aa 000676  000043 773000		lrl	35
aa 000677  000005 507007		dvf	5,dl		" hash table size
0a 000700  000710 115006		cmpa	L342,ql
aa 000701  777342 601004		tnz	L70
0a 000702  000703 710006		tra	L343,ql
			L343:
aa 000703  777736 710004		tra	L318
aa 000704  777743 710004		tra	L324
aa 000705  777712 710004		tra	L300
aa 000706  777335 710004		tra	L70
aa 000707  777714 710004		tra	L304
			L342:
aa 000710  000000 000264		zero	0,180
aa 000711  000000 000264		zero	0,180
aa 000712  000000 000273		zero	0,187
aa 000713  000000 000000		zero	0
aa 000714  000000 000273		zero	0,187
			L341:
aa 000715  001351 115007		cmpa	745,dl
aa 000716  000013 604004		tmi	L344
aa 000717  777424 600004		tze	L128
aa 000720  001371 115007		cmpa	761,dl
aa 000721  000005 604004		tmi	L345
aa 000722  777431 600004		tze	L136
aa 000723  001373 115007		cmpa	763,dl
aa 000724  777433 600004		tze	L140
aa 000725  777316 710004		tra	L70
			L345:
aa 000726  001353 115007		cmpa	747,dl
aa 000727  777420 600004		tze	L132
aa 000730  777313 710004		tra	L70
			L344:
aa 000731  001253 115007		cmpa	683,dl
aa 000732  777661 600004		tze	L296
aa 000733  777310 710004		tra	L70
			L340:
aa 000734  000533 115007		cmpa	347,dl
aa 000735  000251 604004		tmi	L346
aa 000736  777565 600004		tze	L240
aa 000737  001000 115007		cmpa	512,dl
aa 000740  777303 605004		tpl	L70
0a 000741  000206 710005		tra	L347-348,al
			L347:
aa 000742  777301 710004		tra	L70
aa 000743  777300 710004		tra	L70
aa 000744  777277 710004		tra	L70
aa 000745  777276 710004		tra	L70
aa 000746  777575 710004		tra	L256
aa 000747  777576 710004		tra	L258
aa 000750  777577 710004		tra	L260
aa 000751  777600 710004		tra	L262
aa 000752  777601 710004		tra	L264
aa 000753  777602 710004		tra	L266
aa 000754  777603 710004		tra	L268
aa 000755  777604 710004		tra	L270
aa 000756  777265 710004		tra	L70
aa 000757  777264 710004		tra	L70
aa 000760  777263 710004		tra	L70
aa 000761  777262 710004		tra	L70
aa 000762  777617 710004		tra	L286
aa 000763  777260 710004		tra	L70
aa 000764  777257 710004		tra	L70
aa 000765  777256 710004		tra	L70
aa 000766  777255 710004		tra	L70
aa 000767  777254 710004		tra	L70
aa 000770  777253 710004		tra	L70
aa 000771  777252 710004		tra	L70
aa 000772  777251 710004		tra	L70
aa 000773  777426 710004		tra	L174
aa 000774  777247 710004		tra	L70
aa 000775  777246 710004		tra	L70
aa 000776  777245 710004		tra	L70
aa 000777  777244 710004		tra	L70
aa 001000  777243 710004		tra	L70
aa 001001  777242 710004		tra	L70
aa 001002  777241 710004		tra	L70
aa 001003  777426 710004		tra	L182
aa 001004  777237 710004		tra	L70
aa 001005  777236 710004		tra	L70
aa 001006  777657 710004		tra	L338
aa 001007  777634 710004		tra	L320
aa 001010  777233 710004		tra	L70
aa 001011  777642 710004		tra	L328
aa 001012  777625 710004		tra	L316
aa 001013  777632 710004		tra	L322
aa 001014  777227 710004		tra	L70
aa 001015  777226 710004		tra	L70
aa 001016  777225 710004		tra	L70
aa 001017  777224 710004		tra	L70
aa 001020  777223 710004		tra	L70
aa 001021  777222 710004		tra	L70
aa 001022  777221 710004		tra	L70
aa 001023  777220 710004		tra	L70
aa 001024  777217 710004		tra	L70
aa 001025  777216 710004		tra	L70
aa 001026  777333 710004		tra	L142
aa 001027  777334 710004		tra	L144
aa 001030  777335 710004		tra	L146
aa 001031  777336 710004		tra	L148
aa 001032  777337 710004		tra	L150
aa 001033  777340 710004		tra	L152
aa 001034  777341 710004		tra	L154
aa 001035  777342 710004		tra	L156
aa 001036  777205 710004		tra	L70
aa 001037  777204 710004		tra	L70
aa 001040  777203 710004		tra	L70
aa 001041  777202 710004		tra	L70
aa 001042  777201 710004		tra	L70
aa 001043  777200 710004		tra	L70
aa 001044  777177 710004		tra	L70
aa 001045  777176 710004		tra	L70
aa 001046  777175 710004		tra	L70
aa 001047  777174 710004		tra	L70
aa 001050  777173 710004		tra	L70
aa 001051  777172 710004		tra	L70
aa 001052  777171 710004		tra	L70
aa 001053  777170 710004		tra	L70
aa 001054  777167 710004		tra	L70
aa 001055  777166 710004		tra	L70
aa 001056  777537 710004		tra	L298
aa 001057  777164 710004		tra	L70
aa 001060  777541 710004		tra	L302
aa 001061  777162 710004		tra	L70
aa 001062  777161 710004		tra	L70
aa 001063  777324 710004		tra	L164
aa 001064  777325 710004		tra	L166
aa 001065  777156 710004		tra	L70
aa 001066  777155 710004		tra	L70
aa 001067  777154 710004		tra	L70
aa 001070  777153 710004		tra	L70
aa 001071  777152 710004		tra	L70
aa 001072  777151 710004		tra	L70
aa 001073  777150 710004		tra	L70
aa 001074  777147 710004		tra	L70
aa 001075  777146 710004		tra	L70
aa 001076  777563 710004		tra	L334
aa 001077  777144 710004		tra	L70
aa 001100  777143 710004		tra	L70
aa 001101  777142 710004		tra	L70
aa 001102  777141 710004		tra	L70
aa 001103  777300 710004		tra	L160
aa 001104  777301 710004		tra	L162
aa 001105  777136 710004		tra	L70
aa 001106  777555 710004		tra	L336
aa 001107  777134 710004		tra	L70
aa 001110  777133 710004		tra	L70
aa 001111  777132 710004		tra	L70
aa 001112  777131 710004		tra	L70
aa 001113  777130 710004		tra	L70
aa 001114  777127 710004		tra	L70
aa 001115  777126 710004		tra	L70
aa 001116  777533 710004		tra	L326
aa 001117  777124 710004		tra	L70
aa 001120  777123 710004		tra	L70
aa 001121  777122 710004		tra	L70
aa 001122  777121 710004		tra	L70
aa 001123  777120 710004		tra	L70
aa 001124  777117 710004		tra	L70
aa 001125  777116 710004		tra	L70
aa 001126  777351 710004		tra	L220
aa 001127  777352 710004		tra	L222
aa 001130  777353 710004		tra	L224
aa 001131  777354 710004		tra	L226
aa 001132  777355 710004		tra	L228
aa 001133  777356 710004		tra	L230
aa 001134  777357 710004		tra	L232
aa 001135  777360 710004		tra	L234
aa 001136  777105 710004		tra	L70
aa 001137  777104 710004		tra	L70
aa 001140  777103 710004		tra	L70
aa 001141  777102 710004		tra	L70
aa 001142  777101 710004		tra	L70
aa 001143  777122 710004		tra	L82
aa 001144  777123 710004		tra	L84
aa 001145  777076 710004		tra	L70
aa 001146  777457 710004		tra	L306
aa 001147  777074 710004		tra	L70
aa 001150  777073 710004		tra	L70
aa 001151  777072 710004		tra	L70
aa 001152  777071 710004		tra	L70
aa 001153  777070 710004		tra	L70
aa 001154  777067 710004		tra	L70
aa 001155  777066 710004		tra	L70
aa 001156  777065 710004		tra	L70
aa 001157  777064 710004		tra	L70
aa 001160  777063 710004		tra	L70
aa 001161  777402 710004		tra	L272
aa 001162  777061 710004		tra	L70
aa 001163  777406 710004		tra	L278
aa 001164  777407 710004		tra	L280
aa 001165  777410 710004		tra	L282
aa 001166  777267 710004		tra	L202
aa 001167  777270 710004		tra	L204
aa 001170  777271 710004		tra	L206
aa 001171  777272 710004		tra	L208
aa 001172  777273 710004		tra	L210
aa 001173  777274 710004		tra	L212
aa 001174  777275 710004		tra	L214
aa 001175  777276 710004		tra	L216
aa 001176  777045 710004		tra	L70
aa 001177  777106 710004		tra	L98
aa 001200  777107 710004		tra	L100
aa 001201  777274 710004		tra	L218
aa 001202  777041 710004		tra	L70
aa 001203  777040 710004		tra	L70
aa 001204  777037 710004		tra	L70
aa 001205  777246 710004		tra	L200
			L346:
aa 001206  000312 115007		cmpa	202,dl
aa 001207  000170 604004		tmi	L348
aa 001210  777121 600004		tze	L118
aa 001211  000402 115007		cmpa	258,dl
aa 001212  000075 604004		tmi	L349
aa 001213  777304 600004		tze	L236
aa 001214  000043 773000		lrl	35
aa 001215  000033 507007		dvf	27,dl		" hash table size
0a 001216  001254 115006		cmpa	L350,ql
aa 001217  777024 601004		tnz	L70
0a 001220  001221 710006		tra	L351,ql
			L351:
aa 001221  777022 710004		tra	L70
aa 001222  777021 710004		tra	L70
aa 001223  777076 710004		tra	L110
aa 001224  777077 710004		tra	L112
aa 001225  777016 710004		tra	L70
aa 001226  777015 710004		tra	L70
aa 001227  777014 710004		tra	L70
aa 001230  777177 710004		tra	L180
aa 001231  777174 710004		tra	L178
aa 001232  777163 710004		tra	L170
aa 001233  777202 710004		tra	L186
aa 001234  777167 710004		tra	L176
aa 001235  777006 710004		tra	L70
aa 001236  777005 710004		tra	L70
aa 001237  777004 710004		tra	L70
aa 001240  777173 710004		tra	L184
aa 001241  777002 710004		tra	L70
aa 001242  777155 710004		tra	L172
aa 001243  777366 710004		tra	L310
aa 001244  777367 710004		tra	L312
aa 001245  777146 710004		tra	L168
aa 001246  777253 710004		tra	L238
aa 001247  776774 710004		tra	L70
aa 001250  776773 710004		tra	L70
aa 001251  776772 710004		tra	L70
aa 001252  776771 710004		tra	L70
aa 001253  777354 710004		tra	L308
			L350:
aa 001254  000000 000000		zero	0
aa 001255  000000 000000		zero	0
aa 001256  000000 000014		zero	0,12
aa 001257  000000 000014		zero	0,12
aa 001260  000000 000000		zero	0
aa 001261  000000 000000		zero	0
aa 001262  000000 000000		zero	0
aa 001263  000000 000014		zero	0,12
aa 001264  000000 000013		zero	0,11
aa 001265  000000 000014		zero	0,12
aa 001266  000000 000012		zero	0,10
aa 001267  000000 000012		zero	0,10
aa 001270  000000 000000		zero	0
aa 001271  000000 000000		zero	0
aa 001272  000000 000000		zero	0
aa 001273  000000 000013		zero	0,11
aa 001274  000000 000000		zero	0
aa 001275  000000 000014		zero	0,12
aa 001276  000000 000012		zero	0,10
aa 001277  000000 000012		zero	0,10
aa 001300  000000 000013		zero	0,11
aa 001301  000000 000014		zero	0,12
aa 001302  000000 000000		zero	0
aa 001303  000000 000000		zero	0
aa 001304  000000 000000		zero	0
aa 001305  000000 000000		zero	0
aa 001306  000000 000012		zero	0,10
			L349:
0a 001307  000775 710005		tra	L352-203,al
			L352:
aa 001310  777023 710004		tra	L120
aa 001311  776732 710004		tra	L70
aa 001312  776731 710004		tra	L70
aa 001313  776730 710004		tra	L70
aa 001314  776727 710004		tra	L70
aa 001315  776726 710004		tra	L70
aa 001316  776725 710004		tra	L70
aa 001317  776724 710004		tra	L70
aa 001320  776723 710004		tra	L70
aa 001321  776722 710004		tra	L70
aa 001322  776721 710004		tra	L70
aa 001323  776720 710004		tra	L70
aa 001324  776717 710004		tra	L70
aa 001325  777010 710004		tra	L122
aa 001326  777011 710004		tra	L124
aa 001327  776714 710004		tra	L70
aa 001330  776713 710004		tra	L70
aa 001331  776712 710004		tra	L70
aa 001332  777105 710004		tra	L188
aa 001333  777106 710004		tra	L190
aa 001334  776707 710004		tra	L70
aa 001335  776706 710004		tra	L70
aa 001336  776705 710004		tra	L70
aa 001337  776704 710004		tra	L70
aa 001340  776703 710004		tra	L70
aa 001341  776702 710004		tra	L70
aa 001342  776701 710004		tra	L70
aa 001343  776700 710004		tra	L70
aa 001344  776677 710004		tra	L70
aa 001345  776774 710004		tra	L126
aa 001346  776675 710004		tra	L70
aa 001347  776776 710004		tra	L130
aa 001350  776673 710004		tra	L70
aa 001351  776672 710004		tra	L70
aa 001352  776723 710004		tra	L90
aa 001353  776724 710004		tra	L92
aa 001354  777227 710004		tra	L288
aa 001355  776724 710004		tra	L94
aa 001356  776665 710004		tra	L70
aa 001357  776664 710004		tra	L70
aa 001360  776663 710004		tra	L70
aa 001361  776662 710004		tra	L70
aa 001362  776661 710004		tra	L70
aa 001363  776660 710004		tra	L70
aa 001364  776657 710004		tra	L70
aa 001365  776764 710004		tra	L134
aa 001366  776655 710004		tra	L70
aa 001367  776766 710004		tra	L138
aa 001370  776653 710004		tra	L70
aa 001371  776652 710004		tra	L70
aa 001372  776677 710004		tra	L86
aa 001373  776700 710004		tra	L88
aa 001374  776647 710004		tra	L70
aa 001375  776646 710004		tra	L70
aa 001376  776645 710004		tra	L70
			L348:
aa 001377  000234 115007		cmpa	156,dl
aa 001400  000060 604004		tmi	L353
aa 001401  777234 600004		tze	L314
0a 001402  001146 710005		tra	L354-157,al
			L354:
aa 001403  777040 710004		tra	L192
aa 001404  777041 710004		tra	L194
aa 001405  777042 710004		tra	L196
aa 001406  776635 710004		tra	L70
aa 001407  776634 710004		tra	L70
aa 001410  776633 710004		tra	L70
aa 001411  776632 710004		tra	L70
aa 001412  776631 710004		tra	L70
aa 001413  776630 710004		tra	L70
aa 001414  776627 710004		tra	L70
aa 001415  776626 710004		tra	L70
aa 001416  777167 710004		tra	L290
aa 001417  776624 710004		tra	L70
aa 001420  777171 710004		tra	L294
aa 001421  776622 710004		tra	L70
aa 001422  777155 710004		tra	L284
aa 001423  777106 710004		tra	L246
aa 001424  777107 710004		tra	L248
aa 001425  776616 710004		tra	L70
aa 001426  776615 710004		tra	L70
aa 001427  776614 710004		tra	L70
aa 001430  776613 710004		tra	L70
aa 001431  776612 710004		tra	L70
aa 001432  776611 710004		tra	L70
aa 001433  776610 710004		tra	L70
aa 001434  776607 710004		tra	L70
aa 001435  776606 710004		tra	L70
aa 001436  777217 710004		tra	L330
aa 001437  776604 710004		tra	L70
aa 001440  777217 710004		tra	L332
aa 001441  776602 710004		tra	L70
aa 001442  776601 710004		tra	L70
aa 001443  777062 710004		tra	L242
aa 001444  777063 710004		tra	L244
aa 001445  776576 710004		tra	L70
aa 001446  776575 710004		tra	L70
aa 001447  776574 710004		tra	L70
aa 001450  776573 710004		tra	L70
aa 001451  776572 710004		tra	L70
aa 001452  776571 710004		tra	L70
aa 001453  776570 710004		tra	L70
aa 001454  776567 710004		tra	L70
aa 001455  776566 710004		tra	L70
aa 001456  776647 710004		tra	L114
aa 001457  776650 710004		tra	L116
			L353:
aa 001460  000155 115007		cmpa	109,dl
aa 001461  000031 604004		tmi	L355
aa 001462  777103 600004		tze	L274
aa 001463  000043 773000		lrl	35
aa 001464  000011 507007		dvf	9,dl		" hash table size
0a 001465  001501 115006		cmpa	L356,ql
aa 001466  776555 601004		tnz	L70
0a 001467  001470 710006		tra	L357,ql
			L357:
aa 001470  777047 710004		tra	L252
aa 001471  776552 710004		tra	L70
aa 001472  777075 710004		tra	L276
aa 001473  776550 710004		tra	L70
aa 001474  776705 710004		tra	L158
aa 001475  776546 710004		tra	L70
aa 001476  776545 710004		tra	L70
aa 001477  776752 710004		tra	L198
aa 001500  777035 710004		tra	L250
			L356:
aa 001501  000000 000016		zero	0,14
aa 001502  000000 000000		zero	0
aa 001503  000000 000014		zero	0,12
aa 001504  000000 000000		zero	0
aa 001505  000000 000017		zero	0,15
aa 001506  000000 000000		zero	0
aa 001507  000000 000000		zero	0
aa 001510  000000 000020		zero	0,16
aa 001511  000000 000015		zero	0,13
			L355:
aa 001512  000043 773000		lrl	35
aa 001513  000015 507007		dvf	13,dl		" hash table size
0a 001514  001534 115006		cmpa	L358,ql
aa 001515  776526 601004		tnz	L70
0a 001516  001517 710006		tra	L359,ql
			L359:
aa 001517  776600 710004		tra	L108
aa 001520  776523 710004		tra	L70
aa 001521  776522 710004		tra	L70
aa 001522  777017 710004		tra	L254
aa 001523  776540 710004		tra	L80
aa 001524  776557 710004		tra	L96
aa 001525  776564 710004		tra	L102
aa 001526  776565 710004		tra	L104
aa 001527  776514 710004		tra	L70
aa 001530  776527 710004		tra	L76
aa 001531  776530 710004		tra	L78
aa 001532  776511 710004		tra	L70
aa 001533  776562 710004		tra	L106
			L358:
aa 001534  000000 000006		zero	0,6
aa 001535  000000 000000		zero	0
aa 001536  000000 000000		zero	0
aa 001537  000000 000006		zero	0,6
aa 001540  000000 000001		zero	0,1
aa 001541  000000 000003		zero	0,3
aa 001542  000000 000003		zero	0,3
aa 001543  000000 000003		zero	0,3
aa 001544  000000 000000		zero	0
aa 001545  000000 000004		zero	0,4
aa 001546  000000 000004		zero	0,4
aa 001547  000000 000000		zero	0
aa 001550  000000 000005		zero	0,5
			L68:
			L67:
aa 001551  700004 540111		sprpap	sb|4,x1
aa 001552  700004 236111		ldq	sb|4,x1
aa 001553  700000 762111		lprpbp	sb|0,x1		" bcpl return
aa 001554  200000 121100		sblx1	bp|0
aa 001555  700001 764111		lprplp	sb|1,x1
aa 001556  200001 710100		tra	bp|1		" end of return sequence
aa 001557  700003 756111		stq	sb|3,x1		" temporary

	"	Literal pool

			L339:
aa 001560  000003 164172		zero	3,59514		" "tze"
aa 001561  145000 000000		zero	51712
			L337:
aa 001562  000004 164163		zero	4,59507		" "tsx0"
aa 001563  170060 000000		zero	61488
			L335:
aa 001564  000005 164163		zero	5,59507		" "tsblp"
aa 001565  142154 160000		zero	50284,57344
			L333:
aa 001566  000005 164163		zero	5,59507		" "tsbbp"
aa 001567  142142 160000		zero	50274,57344
			L331:
aa 001570  000005 164163		zero	5,59507		" "tsbap"
aa 001571  142141 160000		zero	50273,57344
			L329:
aa 001572  000003 164162		zero	3,59506		" "trc"
aa 001573  143000 000000		zero	50688
			L327:
aa 001574  000003 164162		zero	3,59506		" "tra"
aa 001575  141000 000000		zero	49664
			L325:
aa 001576  000004 164160		zero	4,59504		" "tpnz"
aa 001577  156172 000000		zero	56442
			L323:
aa 001600  000003 164160		zero	3,59504		" "tpl"
aa 001601  154000 000000		zero	55296
			L321:
aa 001602  000003 164156		zero	3,59502		" "tnz"
aa 001603  172000 000000		zero	62464
			L319:
aa 001604  000004 164155		zero	4,59501		" "tmoz"
aa 001605  157172 000000		zero	56954
			L317:
aa 001606  000003 164155		zero	3,59501		" "tmi"
aa 001607  151000 000000		zero	53760
			L315:
aa 001610  000003 163172		zero	3,59002		" "szn"
aa 001611  156000 000000		zero	56320
			L313:
aa 001612  000004 163170		zero	4,59000		" "sxl1"
aa 001613  154061 000000		zero	55345
			L311:
aa 001614  000004 163170		zero	4,59000		" "sxl0"
aa 001615  154060 000000		zero	55344
			L309:
aa 001616  000003 163164		zero	3,58996		" "stz"
aa 001617  172000 000000		zero	62464
			L307:
aa 001620  000004 163164		zero	4,58996		" "stx0"
aa 001621  170060 000000		zero	61488
			L305:
aa 001622  000005 163164		zero	5,58996		" "stpsb"
aa 001623  160163 142000		zero	57459,50176
			L303:
aa 001624  000005 163164		zero	5,58996		" "stpsp"
aa 001625  160163 160000		zero	57459,57344
			L301:
aa 001626  000005 163164		zero	5,58996		" "stplb"
aa 001627  160154 142000		zero	57452,50176
			L299:
aa 001630  000005 163164		zero	5,58996		" "stplp"
aa 001631  160154 160000		zero	57452,57344
			L297:
aa 001632  000005 163164		zero	5,58996		" "stpbb"
aa 001633  160142 142000		zero	57442,50176
			L295:
aa 001634  000005 163164		zero	5,58996		" "stpbp"
aa 001635  160142 160000		zero	57442,57344
			L293:
aa 001636  000005 163164		zero	5,58996		" "stpab"
aa 001637  160141 142000		zero	57441,50176
			L291:
aa 001640  000005 163164		zero	5,58996		" "stpap"
aa 001641  160141 160000		zero	57441,57344
			L289:
aa 001642  000004 163164		zero	4,58996		" "stcd"
aa 001643  143144 000000		zero	50788
			L287:
aa 001644  000004 163164		zero	4,58996		" "stc1"
aa 001645  143061 000000		zero	50737
			L285:
aa 001646  000003 163164		zero	3,58996		" "stb"
aa 001647  142000 000000		zero	50176
			L283:
aa 001650  000004 163164		zero	4,58996		" "staq"
aa 001651  141161 000000		zero	49777
			L281:
aa 001652  000003 163164		zero	3,58996		" "stq"
aa 001653  161000 000000		zero	57856
			L279:
aa 001654  000003 163164		zero	3,58996		" "sta"
aa 001655  141000 000000		zero	49664
			L277:
aa 001656  000003 163163		zero	3,58995		" "ssq"
aa 001657  161000 000000		zero	57856
			L275:
aa 001660  000003 163163		zero	3,58995		" "ssa"
aa 001661  141000 000000		zero	49664
			L273:
aa 001662  000004 163162		zero	4,58994		" "sreg"
aa 001663  145147 000000		zero	51815
			L271:
aa 001664  000006 163160		zero	6,58992		" "sprpsb"
aa 001665  162160 163142		zero	58480,58978
			L269:
aa 001666  000006 163160		zero	6,58992		" "sprpsp"
aa 001667  162160 163160		zero	58480,58992
			L267:
aa 001670  000006 163160		zero	6,58992		" "sprplb"
aa 001671  162160 154142		zero	58480,55394
			L265:
aa 001672  000006 163160		zero	6,58992		" "sprplp"
aa 001673  162160 154160		zero	58480,55408
			L263:
aa 001674  000006 163160		zero	6,58992		" "sprpbb"
aa 001675  162160 142142		zero	58480,50274
			L261:
aa 001676  000006 163160		zero	6,58992		" "sprpbp"
aa 001677  162160 142160		zero	58480,50288
			L259:
aa 001700  000006 163160		zero	6,58992		" "sprpab"
aa 001701  162160 141142		zero	58480,49762
			L257:
aa 001702  000006 163160		zero	6,58992		" "sprpap"
aa 001703  162160 141160		zero	58480,49776
			L255:
aa 001704  000005 163142		zero	5,58978		" "sblx1"
aa 001705  154170 061000		zero	55416,25088
			L253:
aa 001706  000003 163142		zero	3,58978		" "sbq"
aa 001707  161000 000000		zero	57856
			L251:
aa 001710  000003 163142		zero	3,58978		" "sba"
aa 001711  141000 000000		zero	49664
			L249:
aa 001712  000004 157162		zero	4,56946		" "orsq"
aa 001713  163161 000000		zero	58993
			L247:
aa 001714  000004 157162		zero	4,56946		" "orsa"
aa 001715  163141 000000		zero	58977
			L245:
aa 001716  000003 157162		zero	3,56946		" "orq"
aa 001717  161000 000000		zero	57856
			L243:
aa 001720  000003 157162		zero	3,56946		" "ora"
aa 001721  141000 000000		zero	49664
			L241:
aa 001722  000004 156145		zero	4,56421		" "negl"
aa 001723  147154 000000		zero	52844
			L239:
aa 001724  000003 156145		zero	3,56421		" "neg"
aa 001725  147000 000000		zero	52736
			L237:
aa 001726  000003 155160		zero	3,55920		" "mpy"
aa 001727  171000 000000		zero	61952
			L235:
aa 001730  000004 154170		zero	4,55416		" "lxl7"
aa 001731  154067 000000		zero	55351
			L233:
aa 001732  000004 154170		zero	4,55416		" "lxl6"
aa 001733  154066 000000		zero	55350
			L231:
aa 001734  000004 154170		zero	4,55416		" "lxl5"
aa 001735  154065 000000		zero	55349
			L229:
aa 001736  000004 154170		zero	4,55416		" "lxl4"
aa 001737  154064 000000		zero	55348
			L227:
aa 001740  000004 154170		zero	4,55416		" "lxl3"
aa 001741  154063 000000		zero	55347
			L225:
aa 001742  000004 154170		zero	4,55416		" "lxl2"
aa 001743  154062 000000		zero	55346
			L223:
aa 001744  000004 154170		zero	4,55416		" "lxl1"
aa 001745  154061 000000		zero	55345
			L221:
aa 001746  000004 154170		zero	4,55416		" "lxl0"
aa 001747  154060 000000		zero	55344
			L219:
aa 001750  000003 154162		zero	3,55410		" "lrl"
aa 001751  154000 000000		zero	55296
			L217:
aa 001752  000006 154160		zero	6,55408		" "lprpsb"
aa 001753  162160 163142		zero	58480,58978
			L215:
aa 001754  000006 154160		zero	6,55408		" "lprpsp"
aa 001755  162160 163160		zero	58480,58992
			L213:
aa 001756  000006 154160		zero	6,55408		" "lprplb"
aa 001757  162160 154142		zero	58480,55394
			L211:
aa 001760  000006 154160		zero	6,55408		" "lprplp"
aa 001761  162160 154160		zero	58480,55408
			L209:
aa 001762  000006 154160		zero	6,55408		" "lprpbb"
aa 001763  162160 142142		zero	58480,50274
			L207:
aa 001764  000006 154160		zero	6,55408		" "lprpbp"
aa 001765  162160 142160		zero	58480,50288
			L205:
aa 001766  000006 154160		zero	6,55408		" "lprpab"
aa 001767  162160 141142		zero	58480,49762
			L203:
aa 001770  000006 154160		zero	6,55408		" "lprpap"
aa 001771  162160 141160		zero	58480,49776
			L201:
aa 001772  000003 154154		zero	3,55404		" "llr"
aa 001773  162000 000000		zero	58368
			L199:
aa 001774  000004 154144		zero	4,55396		" "ldx7"
aa 001775  170067 000000		zero	61495
			L197:
aa 001776  000004 154144		zero	4,55396		" "ldaq"
aa 001777  141161 000000		zero	49777
			L195:
aa 002000  000003 154144		zero	3,55396		" "ldq"
aa 002001  161000 000000		zero	57856
			L193:
aa 002002  000003 154144		zero	3,55396		" "lda"
aa 002003  141000 000000		zero	49664
			L191:
aa 002004  000003 154143		zero	3,55395		" "lcq"
aa 002005  161000 000000		zero	57856
			L189:
aa 002006  000003 154143		zero	3,55395		" "lca"
aa 002007  141000 000000		zero	49664
			L187:
aa 002010  000004 146163		zero	4,52339		" "fszn"
aa 002011  172156 000000		zero	62574
			L185:
aa 002012  000004 146163		zero	4,52339		" "fstr"
aa 002013  164162 000000		zero	59506
			L183:
aa 002014  000003 146163		zero	3,52339		" "fsb"
aa 002015  142000 000000		zero	50176
			L181:
aa 002016  000004 146156		zero	4,52334		" "fneg"
aa 002017  145147 000000		zero	51815
			L179:
aa 002020  000003 146155		zero	3,52333		" "fmp"
aa 002021  160000 000000		zero	57344
			L177:
aa 002022  000003 146154		zero	3,52332		" "fld"
aa 002023  144000 000000		zero	51200
			L175:
aa 002024  000003 146144		zero	3,52324		" "fdv"
aa 002025  166000 000000		zero	60416
			L173:
aa 002026  000003 146144		zero	3,52324		" "fdi"
aa 002027  151000 000000		zero	53760
			L171:
aa 002030  000004 146143		zero	4,52323		" "fcmp"
aa 002031  155160 000000		zero	55920
			L169:
aa 002032  000003 146141		zero	3,52321		" "fad"
aa 002033  144000 000000		zero	51200
			L167:
aa 002034  000004 145162		zero	4,51826		" "ersq"
aa 002035  163161 000000		zero	58993
			L165:
aa 002036  000004 145162		zero	4,51826		" "ersa"
aa 002037  163141 000000		zero	58977
			L163:
aa 002040  000003 145162		zero	3,51826		" "erq"
aa 002041  161000 000000		zero	57856
			L161:
aa 002042  000003 145162		zero	3,51826		" "era"
aa 002043  141000 000000		zero	49664
			L159:
aa 002044  000004 145160		zero	4,51824		" "epaq"
aa 002045  141161 000000		zero	49777
			L157:
aa 002046  000004 145141		zero	4,51809		" "eax7"
aa 002047  170067 000000		zero	61495
			L155:
aa 002050  000004 145141		zero	4,51809		" "eax6"
aa 002051  170066 000000		zero	61494
			L153:
aa 002052  000004 145141		zero	4,51809		" "eax5"
aa 002053  170065 000000		zero	61493
			L151:
aa 002054  000004 145141		zero	4,51809		" "eax4"
aa 002055  170064 000000		zero	61492
			L149:
aa 002056  000004 145141		zero	4,51809		" "eax3"
aa 002057  170063 000000		zero	61491
			L147:
aa 002060  000004 145141		zero	4,51809		" "eax2"
aa 002061  170062 000000		zero	61490
			L145:
aa 002062  000004 145141		zero	4,51809		" "eax1"
aa 002063  170061 000000		zero	61489
			L143:
aa 002064  000004 145141		zero	4,51809		" "eax0"
aa 002065  170060 000000		zero	61488
			L141:
aa 002066  000005 145141		zero	5,51809		" "eapsb"
aa 002067  160163 142000		zero	57459,50176
			L139:
aa 002070  000005 145141		zero	5,51809		" "eapsp"
aa 002071  160163 160000		zero	57459,57344
			L137:
aa 002072  000005 145141		zero	5,51809		" "eaplb"
aa 002073  160154 142000		zero	57452,50176
			L135:
aa 002074  000005 145141		zero	5,51809		" "eaplp"
aa 002075  160154 160000		zero	57452,57344
			L133:
aa 002076  000005 145141		zero	5,51809		" "eapbb"
aa 002077  160142 142000		zero	57442,50176
			L131:
aa 002100  000005 145141		zero	5,51809		" "eapbp"
aa 002101  160142 160000		zero	57442,57344
			L129:
aa 002102  000005 145141		zero	5,51809		" "eapab"
aa 002103  160141 142000		zero	57441,50176
			L127:
aa 002104  000005 145141		zero	5,51809		" "eapap"
aa 002105  160141 160000		zero	57441,57344
			L125:
aa 002106  000005 145141		zero	5,51809		" "eablb"
aa 002107  142154 142000		zero	50284,50176
			L123:
aa 002110  000005 145141		zero	5,51809		" "eablp"
aa 002111  142154 160000		zero	50284,57344
			L121:
aa 002112  000005 145141		zero	5,51809		" "eabbb"
aa 002113  142142 142000		zero	50274,50176
			L119:
aa 002114  000005 145141		zero	5,51809		" "eabbp"
aa 002115  142142 160000		zero	50274,57344
			L117:
aa 002116  000005 145141		zero	5,51809		" "eabab"
aa 002117  142141 142000		zero	50273,50176
			L115:
aa 002120  000005 145141		zero	5,51809		" "eabap"
aa 002121  142141 160000		zero	50273,57344
			L113:
aa 002122  000003 144166		zero	3,51318		" "dvf"
aa 002123  146000 000000		zero	52224
			L111:
aa 002124  000003 144151		zero	3,51305		" "div"
aa 002125  166000 000000		zero	60416
			L109:
aa 002126  000004 143155		zero	4,50797		" "cmpq"
aa 002127  160161 000000		zero	57457
			L107:
aa 002130  000004 143155		zero	4,50797		" "cmpa"
aa 002131  160141 000000		zero	57441
			L105:
aa 002132  000003 141163		zero	3,49779		" "asq"
aa 002133  161000 000000		zero	57856
			L103:
aa 002134  000003 141163		zero	3,49779		" "asa"
aa 002135  141000 000000		zero	49664
			L101:
aa 002136  000003 161162		zero	3,57970		" "qrl"
aa 002137  154000 000000		zero	55296
			L99:
aa 002140  000003 141162		zero	3,49778		" "arl"
aa 002141  154000 000000		zero	55296
			L97:
aa 002142  000003 141157		zero	3,49775		" "aos"
aa 002143  163000 000000		zero	58880
			L95:
aa 002144  000004 141156		zero	4,49774		" "anx0"
aa 002145  170060 000000		zero	61488
			L93:
aa 002146  000004 141156		zero	4,49774		" "ansq"
aa 002147  163161 000000		zero	58993
			L91:
aa 002150  000004 141156		zero	4,49774		" "ansa"
aa 002151  163141 000000		zero	58977
			L89:
aa 002152  000003 141156		zero	3,49774		" "anq"
aa 002153  161000 000000		zero	57856
			L87:
aa 002154  000003 141156		zero	3,49774		" "ana"
aa 002155  141000 000000		zero	49664
			L85:
aa 002156  000003 161154		zero	3,57964		" "qls"
aa 002157  163000 000000		zero	58880
			L83:
aa 002160  000003 141154		zero	3,49772		" "als"
aa 002161  163000 000000		zero	58880
			L81:
aa 002162  000005 141144		zero	5,49764		" "adlx1"
aa 002163  154170 061000		zero	55416,25088
			L79:
aa 002164  000003 141144		zero	3,49764		" "adq"
aa 002165  161000 000000		zero	57856
			L77:
aa 002166  000003 141144		zero	3,49764		" "ada"
aa 002167  141000 000000		zero	49664
			L75:
aa 002170  000003 141142		zero	3,49762		" "abd"
aa 002171  144000 000000		zero	51200
			L73:
aa 002172  000007 074145		zero	7,30821		" "<error>"
aa 002173  162162 157162		zero	58482,56946
aa 002174  076000 000000		zero	31744
			L71:
aa 002175  000012 117160		zero	10,40560		" "OpcodeName"
aa 002176  143157 144145		zero	50799,51301
aa 002177  116141 155145		zero	40033,55909
	"	Begin text of WriteAddress

aa 002200  000014 127162		zero	12,44658		" WriteAddress
aa 002201  151164 145101		zero	53876,51777
aa 002202  144144 162145		zero	51300,58469
aa 002203  163163 000000		zero	58995
			L362:
aa 002204  000000 213000  196		epaq	0		" set lp to linkage section
aa 002205  700026 764161		lprplp	sb|22,*au
aa 002206  200000 021100		adlx1	bp|0		" BCPL save
aa 002207  700000 542111		sprpbp	sb|0,x1
aa 002210  700001 544111		sprplp	sb|1,x1
aa 002211  700423 620111		eax0	sb|275,x1
aa 002212  777760 360003		anx0	-16,du
aa 002213  700025 740100		stx0	sb|21		" end of save sequence

aa 002214  700003 234111  197		szn	sb|3,x1		" Param
aa 002215  000030 600004		tze	L366
aa 002216  600040 236100  198		ldq	sp|32		" OUTPUT
aa 002217  700010 756111		stq	sb|8,x1
aa 002220  000114 236007		ldq	76,dl		" 'L'
aa 002221  700011 756111		stq	sb|9,x1
4a 002222  400024 272120		tsbbp	lp|L367,*		" Writech
aa 002223  000006 000002		zero	6,2
aa 002224  600221 054100  199		aos	sp|145		" Column
aa 002225  700003 236111  200		ldq	sb|3,x1		" Param
aa 002226  700010 756111		stq	sb|8,x1
aa 002227  000052 272004		tsbbp	L361+2		" WriteNcount
aa 002230  000006 000001		zero	6,1
aa 002231  700002 234111  201		szn	sb|2,x1		" Address
aa 002232  000035 600004		tze	L365
aa 002233  700002 236111  202		ldq	sb|2,x1		" Address
aa 002234  400000 376007		anq	-131072,dl
aa 002235  000010 601004		tnz	L368
aa 002236  600040 236100  203		ldq	sp|32		" OUTPUT
aa 002237  700010 756111		stq	sb|8,x1
aa 002240  000053 236007		ldq	43,dl		" '+'
aa 002241  700011 756111		stq	sb|9,x1
4a 002242  400024 272120		tsbbp	lp|L367,*		" Writech
aa 002243  000006 000002		zero	6,2
aa 002244  600221 054100  204		aos	sp|145		" Column
			L368:
			L366:
aa 002245  700002 236111  207		ldq	sb|2,x1		" Address
aa 002246  400000 376007		anq	-131072,dl
aa 002247  000014 600004		tze	L369
aa 002250  600040 236100  208		ldq	sp|32		" OUTPUT
aa 002251  700010 756111		stq	sb|8,x1
aa 002252  000055 236007		ldq	45,dl		" '-'
aa 002253  700011 756111		stq	sb|9,x1
4a 002254  400024 272120		tsbbp	lp|L367,*		" Writech
aa 002255  000006 000002		zero	6,2
aa 002256  600221 054100  209		aos	sp|145		" Column
aa 002257  700002 236111  210		ldq	sb|2,x1		" Address
aa 002260  777777 276003		orq	-1,du
aa 002261  000000 533007		negl	0,dl
aa 002262  700002 756111		stq	sb|2,x1		" Address
			L369:
aa 002263  700002 236111  212		ldq	sb|2,x1		" Address
aa 002264  700010 756111		stq	sb|8,x1
aa 002265  000014 272004		tsbbp	L361+2		" WriteNcount
aa 002266  000006 000001		zero	6,1
			L365:
aa 002267  700000 762111		lprpbp	sb|0,x1		" bcpl return
aa 002270  200000 121100		sblx1	bp|0
aa 002271  700001 764111		lprplp	sb|1,x1
aa 002272  200001 710100		tra	bp|1		" end of return sequence
	"	Begin text of WriteNcount

aa 002273  000013 127162		zero	11,44658		" WriteNcount
aa 002274  151164 145116		zero	53876,51790
aa 002275  143157 165156		zero	50799,60014
aa 002276  164000 000000		zero	59392
			L361:
aa 002277  000000 213000  190		epaq	0		" set lp to linkage section
aa 002300  700026 764161		lprplp	sb|22,*au
aa 002301  200000 021100		adlx1	bp|0		" BCPL save
aa 002302  700000 542111		sprpbp	sb|0,x1
aa 002303  700001 544111		sprplp	sb|1,x1
aa 002304  700424 620111		eax0	sb|276,x1
aa 002305  777760 360003		anx0	-16,du
aa 002306  700025 740100		stx0	sb|21		" end of save sequence

aa 002307  700004 350111  191		eapap	sb|4,x1		" a vector
aa 002310  700003 540111		sprpap	sb|3,x1		" v
aa 002311  700002 236111  192		ldq	sb|2,x1		" n
aa 002312  700036 756111		stq	sb|30,x1
aa 002313  700003 236111		ldq	sb|3,x1		" v
aa 002314  700037 756111		stq	sb|31,x1
aa 002315  000012 236007		ldq	10,dl		" 10
aa 002316  700040 756111		stq	sb|32,x1
4a 002317  400022 272120		tsbbp	lp|L373,*		" ConvertNtoS
aa 002320  000034 000003		zero	28,3
aa 002321  600040 236100  193		ldq	sp|32		" OUTPUT
aa 002322  700036 756111		stq	sb|30,x1
aa 002323  700003 236111		ldq	sb|3,x1		" v
aa 002324  700037 756111		stq	sb|31,x1
4a 002325  400020 272120		tsbbp	lp|L374,*		" WriteS
aa 002326  000034 000002		zero	28,2
aa 002327  700003 236111  194		ldq	sb|3,x1		" v
aa 002330  700036 756111		stq	sb|30,x1
4a 002331  400016 272120		tsbbp	lp|L375,*		" Length
aa 002332  000034 000001		zero	28,1
aa 002333  600221 056100		asq	sp|145		" Column
			L372:
aa 002334  700000 762111		lprpbp	sb|0,x1		" bcpl return
aa 002335  200000 121100		sblx1	bp|0
aa 002336  700001 764111		lprplp	sb|1,x1
aa 002337  200001 710100		tra	bp|1		" end of return sequence
	"	Begin text of WriteH

aa 002340  000006 127162		zero	6,44658		" WriteH
aa 002341  151164 145110		zero	53876,51784
			L360:
aa 002342  000000 213000  185		epaq	0		" set lp to linkage section
aa 002343  700026 764161		lprplp	sb|22,*au
aa 002344  200000 021100		adlx1	bp|0		" BCPL save
aa 002345  700000 542111		sprpbp	sb|0,x1
aa 002346  700001 544111		sprplp	sb|1,x1
aa 002347  700423 620111		eax0	sb|275,x1
aa 002350  777760 360003		anx0	-16,du
aa 002351  700025 740100		stx0	sb|21		" end of save sequence

aa 002352  600040 236100  186		ldq	sp|32		" OUTPUT
aa 002353  700012 756111		stq	sb|10,x1
aa 002354  000040 236007		ldq	32,dl		" '*s'
aa 002355  700013 756111		stq	sb|11,x1
4a 002356  400024 272120		tsbbp	lp|L367,*		" Writech
aa 002357  000010 000002		zero	8,2
aa 002360  000017 236007  187		ldq	15,dl		" 15
aa 002361  700003 756111		stq	sb|3,x1		" i
aa 002362  000015 710004		tra	L379
			L380:
aa 002363  600040 236100  188		ldq	sp|32		" OUTPUT
aa 002364  700012 756111		stq	sb|10,x1
aa 002365  700002 236111		ldq	sb|2,x1		" x
aa 002366  700003 722111		lxl2	sb|3,x1		" i
aa 002367  000000 772012		qrl	0,x2
aa 002370  000007 376007		anq	7,dl		" 7
aa 002371  000060 076007		adq	48,dl		" '0'
aa 002372  700013 756111		stq	sb|11,x1
4a 002373  400024 272120		tsbbp	lp|L367,*		" Writech
aa 002374  000010 000002		zero	8,2
aa 002375  000003 336007		lcq	3,dl
aa 002376  700003 056111		asq	sb|3,x1		" i
			L379:
aa 002377  700003 234111		szn	sb|3,x1		" i
aa 002400  777763 605004		tpl	L380
			L378:
aa 002401  700000 762111		lprpbp	sb|0,x1		" bcpl return
aa 002402  200000 121100		sblx1	bp|0
aa 002403  700001 764111		lprplp	sb|1,x1
aa 002404  200001 710100		tra	bp|1		" end of return sequence
	"	Begin text of WriteInstruction

aa 002405  000020 127162		zero	16,44658		" WriteInstruction
aa 002406  151164 145111		zero	53876,51785
aa 002407  156163 164162		zero	56435,59506
aa 002410  165143 164151		zero	60003,59497
aa 002411  157156 000000		zero	56942
			L381:
aa 002412  000000 213000  215		epaq	0		" set lp to linkage section
aa 002413  700026 764161		lprplp	sb|22,*au
aa 002414  200000 021100		adlx1	bp|0		" BCPL save
aa 002415  700000 542111		sprpbp	sb|0,x1
aa 002416  700001 544111		sprplp	sb|1,x1
aa 002417  700424 620111		eax0	sb|276,x1
aa 002420  777760 360003		anx0	-16,du
aa 002421  700025 740100		stx0	sb|21		" end of save sequence

aa 002422  700002 236111  216		ldq	sb|2,x1		" Word
aa 002423  000001 736000		qls	1
aa 002424  001000 376007		anq	512,dl		" $81000
aa 002425  700002 235111		lda	sb|2,x1		" Word
aa 002426  000011 771000		arl	9
aa 002427  000777 375007		ana	511,dl		" $8777
aa 002430  600000 755100		sta	sp|0
aa 002431  600000 276100		orq	sp|0
aa 002432  700016 756111		stq	sb|14,x1
aa 002433  775601 272004		tsbbp	L1+2		" OpcodeName
aa 002434  000014 000001		zero	12,1
aa 002435  700004 756111		stq	sb|4,x1
aa 002436  600040 236100		ldq	sp|32		" OUTPUT
aa 002437  700016 756111		stq	sb|14,x1
aa 002440  000227 350004		eapap	L386		" "*t^s*t"
aa 002441  700017 540111		sprpap	sb|15,x1
aa 002442  700004 236111		ldq	sb|4,x1
aa 002443  700020 756111		stq	sb|16,x1
4a 002444  400014 272120		tsbbp	lp|L387,*		" Format
aa 002445  000014 000003		zero	12,3
aa 002446  700002 236111  217		ldq	sb|2,x1		" Word
aa 002447  000100 376007		anq	64,dl		" $8100
aa 002450  000030 600004		tze	L388
aa 002451  700002 236111  218		ldq	sb|2,x1		" Word
aa 002452  700016 756111		stq	sb|14,x1
aa 002453  775464 272004		tsbbp	L3+2		" BaseName
aa 002454  000014 000001		zero	12,1
aa 002455  700004 756111		stq	sb|4,x1
aa 002456  600040 236100		ldq	sp|32		" OUTPUT
aa 002457  700016 756111		stq	sb|14,x1
aa 002460  000205 350004		eapap	L389		" "^s|"
aa 002461  700017 540111		sprpap	sb|15,x1
aa 002462  700004 236111		ldq	sb|4,x1
aa 002463  700020 756111		stq	sb|16,x1
4a 002464  400014 272120		tsbbp	lp|L387,*		" Format
aa 002465  000014 000003		zero	12,3
aa 002466  000003 236007  219		ldq	3,dl		" 3
aa 002467  600221 056100		asq	sp|145		" Column
aa 002470  700002 236111  220		ldq	sb|2,x1		" Word
aa 002471  040000 376003		anq	16384,du
aa 002472  000004 601004		tnz	L390
aa 002473  000171 236004  221		ldq	L392
aa 002474  700002 356111		ansq	sb|2,x1		" Word
aa 002475  000003 710004		tra	L391
			L390:
aa 002476  100000 336003  222		lcq	32768,du
aa 002477  700002 256111		orsq	sb|2,x1		" Word
			L391:
			L388:
aa 002500  700002 236111  224		ldq	sb|2,x1		" Word
aa 002501  000077 376007		anq	63,dl		" $877
aa 002502  000004 116007		cmpq	4,dl		" Ic
aa 002503  000006 601004		tnz	L393
aa 002504  600501 236100		ldq	sp|321		" LC
aa 002505  000022 736000		qls	18
aa 002506  700002 076111		adq	sb|2,x1		" Word
aa 002507  000004 176007		sbq	4,dl		" Ic
aa 002510  700002 756111		stq	sb|2,x1		" Word
			L393:
aa 002511  700002 236111  225		ldq	sb|2,x1		" Word
aa 002512  000022 772000		qrl	18
aa 002513  700016 756111		stq	sb|14,x1
aa 002514  700003 236111		ldq	sb|3,x1		" Param
aa 002515  700017 756111		stq	sb|15,x1
aa 002516  777470 272004		tsbbp	L362+2		" WriteAddress
aa 002517  000014 000002		zero	12,2
aa 002520  700002 236111  226		ldq	sb|2,x1		" Word
aa 002521  000077 376007		anq	63,dl		" $877
aa 002522  000125 600004		tze	L394
aa 002523  700002 236111  227		ldq	sb|2,x1		" Word
aa 002524  000017 376007		anq	15,dl		" $817
aa 002525  700016 756111		stq	sb|14,x1
aa 002526  775260 272004		tsbbp	L2+2		" RegisterName
aa 002527  000014 000001		zero	12,1
aa 002530  700004 756111		stq	sb|4,x1		" Reg
aa 002531  000102 710004  229		tra	L396
			L397:
aa 002532  600040 236100  230		ldq	sp|32		" OUTPUT
aa 002533  700016 756111		stq	sb|14,x1
aa 002534  000126 350004		eapap	L398		" ",^s"
aa 002535  700017 540111		sprpap	sb|15,x1
aa 002536  700004 236111		ldq	sb|4,x1		" Reg
aa 002537  700020 756111		stq	sb|16,x1
4a 002540  400014 272120		tsbbp	lp|L387,*		" Format
aa 002541  000014 000003		zero	12,3
aa 002542  700004 236111  231		ldq	sb|4,x1		" Reg
aa 002543  700016 756111		stq	sb|14,x1
4a 002544  400016 272120		tsbbp	lp|L375,*		" Length
aa 002545  000014 000001		zero	12,1
aa 002546  600221 076100		adq	sp|145		" Column
aa 002547  000001 076007		adq	1,dl		" 1
aa 002550  600221 756100		stq	sp|145		" Column
aa 002551  000076 710004  233		tra	L395
			L399:
aa 002552  700002 236111  234		ldq	sb|2,x1		" Word
aa 002553  000017 376007		anq	15,dl		" $817
aa 002554  000003 601004		tnz	L400
aa 002555  000104 350004		eapap	L401		" ""
aa 002556  700004 540111		sprpap	sb|4,x1		" Reg
			L400:
aa 002557  600040 236100  235		ldq	sp|32		" OUTPUT
aa 002560  700016 756111		stq	sb|14,x1
aa 002561  000076 350004		eapap	L402		" ",^s**"
aa 002562  700017 540111		sprpap	sb|15,x1
aa 002563  700004 236111		ldq	sb|4,x1		" Reg
aa 002564  700020 756111		stq	sb|16,x1
4a 002565  400014 272120		tsbbp	lp|L387,*		" Format
aa 002566  000014 000003		zero	12,3
aa 002567  700004 236111  236		ldq	sb|4,x1		" Reg
aa 002570  700016 756111		stq	sb|14,x1
4a 002571  400016 272120		tsbbp	lp|L375,*		" Length
aa 002572  000014 000001		zero	12,1
aa 002573  600221 076100		adq	sp|145		" Column
aa 002574  000002 076007		adq	2,dl		" 2
aa 002575  600221 756100		stq	sp|145		" Column
aa 002576  000051 710004  238		tra	L395
			L403:
aa 002577  600040 236100  239		ldq	sp|32		" OUTPUT
aa 002600  700016 756111		stq	sb|14,x1
aa 002601  000054 350004		eapap	L404		" ",^o"
aa 002602  700017 540111		sprpap	sb|15,x1
aa 002603  700002 236111		ldq	sb|2,x1		" Word
aa 002604  000077 376007		anq	63,dl		" $877
aa 002605  700020 756111		stq	sb|16,x1
4a 002606  400014 272120		tsbbp	lp|L387,*		" Format
aa 002607  000014 000003		zero	12,3
aa 002610  000003 236007  240		ldq	3,dl		" 3
aa 002611  600221 056100		asq	sp|145		" Column
aa 002612  000035 710004  242		tra	L395
			L405:
aa 002613  600040 236100  243		ldq	sp|32		" OUTPUT
aa 002614  700016 756111		stq	sb|14,x1
aa 002615  000036 350004		eapap	L406		" ",**^s"
aa 002616  700017 540111		sprpap	sb|15,x1
aa 002617  700004 236111		ldq	sb|4,x1		" Reg
aa 002620  700020 756111		stq	sb|16,x1
4a 002621  400014 272120		tsbbp	lp|L387,*		" Format
aa 002622  000014 000003		zero	12,3
aa 002623  700004 236111  244		ldq	sb|4,x1		" Reg
aa 002624  700016 756111		stq	sb|14,x1
4a 002625  400016 272120		tsbbp	lp|L375,*		" Length
aa 002626  000014 000001		zero	12,1
aa 002627  600221 076100		adq	sp|145		" Column
aa 002630  000002 076007		adq	2,dl		" 2
aa 002631  600221 756100		stq	sp|145		" Column
aa 002632  000015 710004		tra	L395
			L396:
aa 002633  700002 236111		ldq	sb|2,x1		" Word
aa 002634  000060 376007		anq	48,dl		" $860

	"	Begin switchon

aa 002635  000044 777000		llr	36		" exchange A and Q
aa 002636  000043 773000		lrl	35
aa 002637  000005 507007		dvf	5,dl		" hash table size
0a 002640  002642 710006		tra	L407,ql
aa 002641  700005 755111		sta	sb|5,x1		" temporary
			L407:
aa 002642  777670 710004		tra	L397
aa 002643  777707 710004		tra	L399
aa 002644  777733 710004		tra	L403
aa 002645  777746 710004		tra	L405
aa 002646  000001 710004		tra	L395
			L395:
			L394:
			L385:
aa 002647  700000 762111		lprpbp	sb|0,x1		" bcpl return
aa 002650  200000 121100		sblx1	bp|0
aa 002651  700001 764111		lprplp	sb|1,x1
aa 002652  200001 710100		tra	bp|1		" end of return sequence

	"	Literal pool

			L406:
aa 002653  000004 054052		zero	4,22570		" ",**^s"
aa 002654  136163 000000		zero	48243
			L404:
aa 002655  000003 054136		zero	3,22622		" ",^o"
aa 002656  157000 000000		zero	56832
			L402:
aa 002657  000004 054136		zero	4,22622		" ",^s**"
aa 002660  163052 000000		zero	58922
			L401:
aa 002661  000000 000000		zero	0		" ""
			L398:
aa 002662  000003 054136		zero	3,22622		" ",^s"
aa 002663  163000 000000		zero	58880
			L392:
aa 002664  077777 777777		zero	32767,-1
			L389:
aa 002665  000003 136163		zero	3,48243		" "^s|"
aa 002666  174000 000000		zero	63488
			L386:
aa 002667  000004 011136		zero	4,4702		" "*t^s*t"
aa 002670  163011 000000		zero	58889
	"	Begin text of WriteData

aa 002671  000011 127162		zero	9,44658		" WriteData
aa 002672  151164 145104		zero	53876,51780
aa 002673  141164 141000		zero	49780,49664
			L382:
aa 002674  000000 213000  248		epaq	0		" set lp to linkage section
aa 002675  700026 764161		lprplp	sb|22,*au
aa 002676  200000 021100		adlx1	bp|0		" BCPL save
aa 002677  700000 542111		sprpbp	sb|0,x1
aa 002700  700001 544111		sprplp	sb|1,x1
aa 002701  700423 620111		eax0	sb|275,x1
aa 002702  777760 360003		anx0	-16,du
aa 002703  700025 740100		stx0	sb|21		" end of save sequence

aa 002704  600040 235100  249		lda	sp|32		" OUTPUT
aa 002705  700010 755111		sta	sb|8,x1
aa 002706  000037 350004		eapap	L411		" "*tzero*t"
aa 002707  700011 540111		sprpap	sb|9,x1
4a 002710  400020 272120		tsbbp	lp|L374,*		" WriteS
aa 002711  000006 000002		zero	6,2
aa 002712  700002 235111  250		lda	sb|2,x1		" Word
aa 002713  000022 771000		arl	18
aa 002714  700010 755111		sta	sb|8,x1
aa 002715  700003 235111		lda	sb|3,x1		" Param
aa 002716  700011 755111		sta	sb|9,x1
aa 002717  777267 272004		tsbbp	L362+2		" WriteAddress
aa 002720  000006 000002		zero	6,2
aa 002721  700002 235111  251		lda	sb|2,x1		" Word
aa 002722  777777 375007		ana	-1,dl		" Right
aa 002723  000016 600004		tze	L412
aa 002724  600040 235100  252		lda	sp|32		" OUTPUT
aa 002725  700010 755111		sta	sb|8,x1
aa 002726  000054 235007		lda	44,dl		" ','
aa 002727  700011 755111		sta	sb|9,x1
4a 002730  400024 272120		tsbbp	lp|L367,*		" Writech
aa 002731  000006 000002		zero	6,2
aa 002732  600221 054100  253		aos	sp|145		" Column
aa 002733  700002 235111  254		lda	sb|2,x1		" Word
aa 002734  777777 375007		ana	-1,dl		" Right
aa 002735  700010 755111		sta	sb|8,x1
aa 002736  700011 450111		stz	sb|9,x1
aa 002737  777247 272004		tsbbp	L362+2		" WriteAddress
aa 002740  000006 000002		zero	6,2
			L412:
			L410:
aa 002741  700000 762111		lprpbp	sb|0,x1		" bcpl return
aa 002742  200000 121100		sblx1	bp|0
aa 002743  700001 764111		lprplp	sb|1,x1
aa 002744  200001 710100		tra	bp|1		" end of return sequence

	"	Literal pool

			L411:
aa 002745  000006 011172		zero	6,4730		" "*tzero*t"
aa 002746  145162 157011		zero	51826,56841
	"	Begin text of ListCodeItem

aa 002747  000014 114151		zero	12,39017		" ListCodeItem
aa 002750  163164 103157		zero	58996,34415
aa 002751  144145 111164		zero	51301,37492
aa 002752  145155 000000		zero	51821
			L413:
aa 002753  000000 213000  258		epaq	0		" set lp to linkage section
aa 002754  700026 764161		lprplp	sb|22,*au
aa 002755  200000 021100		adlx1	bp|0		" BCPL save
aa 002756  700000 542111		sprpbp	sb|0,x1
aa 002757  700001 544111		sprplp	sb|1,x1
aa 002760  701036 620111		eax0	sb|542,x1
aa 002761  777760 360003		anx0	-16,du
aa 002762  700025 740100		stx0	sb|21		" end of save sequence

aa 002763  700002 760111  259		lprpap	sb|2,x1		" p
aa 002764  000000 235100		lda	ap|0
aa 002765  700005 755111		sta	sb|5,x1		" Flags
aa 002766  700002 762111		lprpbp	sb|2,x1		" p
aa 002767  200001 235100		lda	bp|1
aa 002770  700003 755111		sta	sb|3,x1		" Word
aa 002771  700002 761111		lprpab	sb|2,x1		" p
aa 002772  100002 235100		lda	ab|2
aa 002773  700004 755111		sta	sb|4,x1		" Comment
aa 002774  000306 710004  261		tra	L420
			L421:
aa 002775  000353 272004  264		tsbbp	L414+2		" GetRelCode
aa 002776  001012 000000		zero	522
aa 002777  700006 756111		stq	sb|6,x1
aa 003000  600040 236100		ldq	sp|32		" OUTPUT
aa 003001  701014 756111		stq	sb|524,x1
aa 003002  700006 236111		ldq	sb|6,x1
aa 003003  701015 756111		stq	sb|525,x1
4a 003004  400024 272120		tsbbp	lp|L367,*		" Writech
aa 003005  001012 000002		zero	522,2
aa 003006  000342 272004  265		tsbbp	L414+2		" GetRelCode
aa 003007  001012 000000		zero	522
aa 003010  700006 756111		stq	sb|6,x1
aa 003011  600040 236100		ldq	sp|32		" OUTPUT
aa 003012  701014 756111		stq	sb|524,x1
aa 003013  700006 236111		ldq	sb|6,x1
aa 003014  701015 756111		stq	sb|525,x1
4a 003015  400024 272120		tsbbp	lp|L367,*		" Writech
aa 003016  001012 000002		zero	522,2
aa 003017  600501 236100  266		ldq	sp|321		" LC
aa 003020  701014 756111		stq	sb|524,x1
aa 003021  777323 272004		tsbbp	L360+2		" WriteH
aa 003022  001012 000001		zero	522,1
aa 003023  600040 236100  267		ldq	sp|32		" OUTPUT
aa 003024  701014 756111		stq	sb|524,x1
aa 003025  000040 236007		ldq	32,dl		" '*s'
aa 003026  701015 756111		stq	sb|525,x1
4a 003027  400024 272120		tsbbp	lp|L367,*		" Writech
aa 003030  001012 000002		zero	522,2
aa 003031  700003 236111  268		ldq	sb|3,x1		" Word
aa 003032  000022 772000		qrl	18
aa 003033  701014 756111		stq	sb|524,x1
aa 003034  777310 272004		tsbbp	L360+2		" WriteH
aa 003035  001012 000001		zero	522,1
aa 003036  700003 236111  269		ldq	sb|3,x1		" Word
aa 003037  777777 376007		anq	-1,dl		" $8777777
aa 003040  701014 756111		stq	sb|524,x1
aa 003041  777303 272004		tsbbp	L360+2		" WriteH
aa 003042  001012 000001		zero	522,1
aa 003043  600221 450100  270		stz	sp|145		" Column
aa 003044  700005 236111  271		ldq	sb|5,x1		" Flags
aa 003045  777777 376007		anq	-1,dl		" Right
aa 003046  000002 116007		cmpq	2,dl		" InstructionSwitch
aa 003047  000053 601004		tnz	L422
aa 003050  600214 234100  272		szn	sp|140		" LineCount
aa 003051  000012 600004		tze	L424
aa 003052  600040 236100  273		ldq	sp|32		" OUTPUT
aa 003053  701014 756111		stq	sb|524,x1
aa 003054  000265 353404		eapbb	L425		" "  ^d"
aa 003055  701015 543111		sprpbb	sb|525,x1
aa 003056  600214 236100		ldq	sp|140		" LineCount
aa 003057  701016 756111		stq	sb|526,x1
4a 003060  400014 272120		tsbbp	lp|L387,*		" Format
aa 003061  001012 000003		zero	522,3
aa 003062  600214 450100  274		stz	sp|140		" LineCount
			L424:
aa 003063  600040 236100  276		ldq	sp|32		" OUTPUT
aa 003064  701014 756111		stq	sb|524,x1
aa 003065  000011 236007		ldq	9,dl		" '*t'
aa 003066  701015 756111		stq	sb|525,x1
4a 003067  400024 272120		tsbbp	lp|L367,*		" Writech
aa 003070  001012 000002		zero	522,2
aa 003071  700005 236111  277		ldq	sb|5,x1		" Flags
aa 003072  000022 772000		qrl	18
aa 003073  700006 756111		stq	sb|6,x1		" Param
aa 003074  700006 234111  278		szn	sb|6,x1		" Param
aa 003075  000016 600004		tze	L426
aa 003076  700003 236111		ldq	sb|3,x1		" Word
aa 003077  000017 376007		anq	15,dl		" TagXrMask
aa 003100  000011 116007		cmpq	9,dl		" X1
aa 003101  000003 601004		tnz	L427
aa 003102  700006 450111  279		stz	sb|6,x1		" Param
aa 003103  000010 710004		tra	L428
			L427:
aa 003104  700006 236111  280		ldq	sb|6,x1		" Param
aa 003105  701014 756111		stq	sb|524,x1
4a 003106  400012 272120		tsbbp	lp|L429,*		" LookupLabel
aa 003107  001012 000001		zero	522,1
aa 003110  000022 736000		qls	18
aa 003111  000000 533007		negl	0,dl
aa 003112  700003 056111		asq	sb|3,x1		" Word
			L428:
			L426:
aa 003113  700003 236111  281		ldq	sb|3,x1		" Word
aa 003114  701014 756111		stq	sb|524,x1
aa 003115  700006 236111		ldq	sb|6,x1		" Param
aa 003116  701015 756111		stq	sb|525,x1
aa 003117  777275 272004		tsbbp	L381+2		" WriteInstruction
aa 003120  001012 000002		zero	522,2
aa 003121  000020 710004		tra	L423
			L422:
aa 003122  700005 236111  283		ldq	sb|5,x1		" Flags
aa 003123  777777 376007		anq	-1,dl		" Right
aa 003124  000003 116007		cmpq	3,dl		" DataSwitch
aa 003125  000014 601004		tnz	L430
aa 003126  600040 236100  284		ldq	sp|32		" OUTPUT
aa 003127  701014 756111		stq	sb|524,x1
aa 003130  000011 236007		ldq	9,dl		" '*t'
aa 003131  701015 756111		stq	sb|525,x1
4a 003132  400024 272120		tsbbp	lp|L367,*		" Writech
aa 003133  001012 000002		zero	522,2
aa 003134  700003 236111  285		ldq	sb|3,x1		" Word
aa 003135  701014 756111		stq	sb|524,x1
aa 003136  701015 450111		stz	sb|525,x1
aa 003137  777537 272004		tsbbp	L382+2		" WriteData
aa 003140  001012 000002		zero	522,2
			L430:
			L423:
aa 003141  700004 234111  287		szn	sb|4,x1		" Comment
aa 003142  000022 600004		tze	L431
aa 003143  600221 236100  288		ldq	sp|145		" Column
aa 003144  000012 116007		cmpq	10,dl		" 10
aa 003145  000007 605004		tpl	L432
aa 003146  600040 235100		lda	sp|32		" OUTPUT
aa 003147  701014 755111		sta	sb|524,x1
aa 003150  000011 235007		lda	9,dl		" '*t'
aa 003151  701015 755111		sta	sb|525,x1
4a 003152  400024 272120		tsbbp	lp|L367,*		" Writech
aa 003153  001012 000002		zero	522,2
			L432:
aa 003154  600040 235100  289		lda	sp|32		" OUTPUT
aa 003155  701014 755111		sta	sb|524,x1
aa 003156  000161 353404		eapbb	L433		" "*t*" ^s"
aa 003157  701015 543111		sprpbb	sb|525,x1
aa 003160  700004 235111		lda	sb|4,x1		" Comment
aa 003161  701016 755111		sta	sb|526,x1
4a 003162  400014 272120		tsbbp	lp|L387,*		" Format
aa 003163  001012 000003		zero	522,3
			L431:
aa 003164  600040 235100  291		lda	sp|32		" OUTPUT
aa 003165  701014 755111		sta	sb|524,x1
aa 003166  000012 235007		lda	10,dl		" '*n'
aa 003167  701015 755111		sta	sb|525,x1
4a 003170  400024 272120		tsbbp	lp|L367,*		" Writech
aa 003171  001012 000002		zero	522,2
aa 003172  600501 054100  292		aos	sp|321		" LC
aa 003173  000126 710004  295		tra	L418
			L434:
aa 003174  600040 235100  296		lda	sp|32		" OUTPUT
aa 003175  701014 755111		sta	sb|524,x1
aa 003176  000136 353404		eapbb	L435		" "*t*t*tL^d:*n"
aa 003177  701015 543111		sprpbb	sb|525,x1
aa 003200  700003 235111		lda	sb|3,x1		" Word
aa 003201  701016 755111		sta	sb|526,x1
4a 003202  400014 272120		tsbbp	lp|L387,*		" Format
aa 003203  001012 000003		zero	522,3
aa 003204  000115 710004  299		tra	L418
			L436:
aa 003205  700003 235111  300		lda	sb|3,x1		" Word
aa 003206  600214 755100		sta	sp|140		" LineCount
aa 003207  000112 710004  303		tra	L418
			L437:
aa 003210  700010 353511  304		eapbb	sb|8,x1		" a vector
aa 003211  700006 543111		sprpbb	sb|6,x1		" v
aa 003212  700004 235111  305		lda	sb|4,x1		" Comment
aa 003213  701014 755111		sta	sb|524,x1
aa 003214  700006 235111		lda	sb|6,x1		" v
aa 003215  701015 755111		sta	sb|525,x1
4a 003216  400010 272120		tsbbp	lp|L438,*		" Unpackstring
aa 003217  001012 000002		zero	522,2
aa 003220  600040 235100  306		lda	sp|32		" OUTPUT
aa 003221  701014 755111		sta	sb|524,x1
aa 003222  000110 353404		eapbb	L439		" "^c*t*"*t"
aa 003223  701015 543111		sprpbb	sb|525,x1
aa 003224  700006 763111		lprpbb	sb|6,x1		" v
aa 003225  300001 235100		lda	bb|1
aa 003226  701016 755111		sta	sb|526,x1
4a 003227  400014 272120		tsbbp	lp|L387,*		" Format
aa 003230  001012 000003		zero	522,3
aa 003231  000002 235007  307		lda	2,dl		" 2
aa 003232  700007 755111		sta	sb|7,x1		" i
aa 003233  700006 765111		lprplb	sb|6,x1		" v
aa 003234  500000 235100		lda	lb|0
aa 003235  701010 755111		sta	sb|520,x1
aa 003236  000012 710004		tra	L440
			L441:
aa 003237  600040 235100		lda	sp|32		" OUTPUT
aa 003240  701014 755111		sta	sb|524,x1
aa 003241  700007 723111		lxl3	sb|7,x1		" i
aa 003242  700006 760111		lprpap	sb|6,x1		" v
aa 003243  000000 235113		lda	ap|0,x3
aa 003244  701015 755111		sta	sb|525,x1
4a 003245  400024 272120		tsbbp	lp|L367,*		" Writech
aa 003246  001012 000002		zero	522,2
aa 003247  700007 054111		aos	sb|7,x1		" i
			L440:
aa 003250  700007 235111		lda	sb|7,x1		" i
aa 003251  701010 115111		cmpa	sb|520,x1
aa 003252  777765 604404		tmoz	L441
aa 003253  600040 236100  308		ldq	sp|32		" OUTPUT
aa 003254  701014 756111		stq	sb|524,x1
aa 003255  000054 352004		eapbp	L442		" "*n*n"
aa 003256  701015 542111		sprpbp	sb|525,x1
4a 003257  400020 272120		tsbbp	lp|L374,*		" WriteS
aa 003260  001012 000002		zero	522,2
aa 003261  000040 710004  311		tra	L418
			L443:
aa 003262  700003 236111  312		ldq	sb|3,x1		" Word
aa 003263  600501 756100		stq	sp|321		" LC
aa 003264  700004 236111  313		ldq	sb|4,x1		" Comment
aa 003265  600527 756100		stq	sp|343		" RelbitsList
aa 003266  600454 450100		stz	sp|300		" AbsRelBits
aa 003267  600530 450100		stz	sp|344		" RelbitsOffset
aa 003270  000031 710004  316		tra	L418
			L444:
aa 003271  000143 236007		ldq	99,dl		" UnexpectedCase
aa 003272  701014 756111		stq	sb|524,x1
aa 003273  700005 236111		ldq	sb|5,x1		" Flags
aa 003274  701015 756111		stq	sb|525,x1
aa 003275  000030 352004		eapbp	L445		" "ListCodeItem"
aa 003276  701016 542111		sprpbp	sb|526,x1
4a 003277  400026 272120		tsbbp	lp|L72,*		" CGreport
aa 003300  001012 000003		zero	522,3
aa 003301  000020 710004		tra	L419
			L420:
aa 003302  700005 236111		ldq	sb|5,x1		" Flags
aa 003303  777777 376007		anq	-1,dl		" Right

	"	Begin switchon

aa 003304  000044 777000		llr	36		" exchange A and Q
aa 003305  000001 115007		cmpa	1,dl
aa 003306  777763 604004		tmi	L444
aa 003307  000004 115007		cmpa	4,dl
aa 003310  777465 604004		tmi	L421
aa 003311  000010 115007		cmpa	8,dl
aa 003312  777757 605004		tpl	L444
0a 003313  003311 710005		tra	L446-4,al
aa 003314  700006 755111		sta	sb|6,x1		" temporary
			L446:
aa 003315  777657 710004		tra	L434
aa 003316  777667 710004		tra	L436
aa 003317  777743 710004		tra	L443
aa 003320  777670 710004		tra	L437
			L419:
			L418:
aa 003321  700000 762111		lprpbp	sb|0,x1		" bcpl return
aa 003322  200000 121100		sblx1	bp|0
aa 003323  700001 764111		lprplp	sb|1,x1
aa 003324  200001 710100		tra	bp|1		" end of return sequence

	"	Literal pool

			L445:
aa 003325  000014 114151		zero	12,39017		" "ListCodeItem"
aa 003326  163164 103157		zero	58996,34415
aa 003327  144145 111164		zero	51301,37492
aa 003330  145155 000000		zero	51821
			L442:
aa 003331  000002 012012		zero	2,5130		" "*n*n"
			L439:
aa 003332  000005 136143		zero	5,48227		" "^c*t*"*t"
aa 003333  011042 011000		zero	4642,4608
			L435:
aa 003334  000010 011011		zero	8,4617		" "*t*t*tL^d:*n"
aa 003335  011114 136144		zero	4684,48228
aa 003336  072012 000000		zero	29706
			L433:
aa 003337  000005 011042		zero	5,4642		" "*t*" ^s"
aa 003340  040136 163000		zero	16478,58880
			L425:
aa 003341  000004 040040		zero	4,16416		" "  ^d"
aa 003342  136144 000000		zero	48228
	"	Begin text of GetRelCode

aa 003343  000012 107145		zero	10,36453		" GetRelCode
aa 003344  164122 145154		zero	59474,51820
aa 003345  103157 144145		zero	34415,51301
			L414:
aa 003346  000000 213000  319		epaq	0		" set lp to linkage section
aa 003347  700026 764161		lprplp	sb|22,*au
aa 003350  200000 021100		adlx1	bp|0		" BCPL save
aa 003351  700000 542111		sprpbp	sb|0,x1
aa 003352  700001 544111		sprplp	sb|1,x1
aa 003353  700422 620111		eax0	sb|274,x1
aa 003354  777760 360003		anx0	-16,du
aa 003355  700025 740100		stx0	sb|21		" end of save sequence

aa 003356  600454 234100  320		szn	sp|300		" AbsRelBits
aa 003357  000005 604404		tmoz	L450
aa 003360  000001 335007  321		lca	1,dl		" 1
aa 003361  600454 055100		asa	sp|300		" AbsRelBits
aa 003362  000141 235007  322		lda	97,dl		" 'a'
aa 003363  000034 710004		tra	L449
			L450:
aa 003364  000001 236007  324		ldq	1,dl		" 1
aa 003365  700010 756111		stq	sb|8,x1
aa 003366  000046 272004		tsbbp	L415+2		" GetBits
aa 003367  000006 000001		zero	6,1
aa 003370  000000 116007		cmpq	0,dl
aa 003371  000003 601004		tnz	L451
aa 003372  000141 235007		lda	97,dl		" 'a'
aa 003373  000024 710004		tra	L449
			L451:
aa 003374  000004 236007  325		ldq	4,dl		" 4
aa 003375  700010 756111		stq	sb|8,x1
aa 003376  000036 272004		tsbbp	L415+2		" GetBits
aa 003377  000006 000001		zero	6,1
aa 003400  700003 756111		stq	sb|3,x1		" c
aa 003401  700003 236111  326		ldq	sb|3,x1		" c
aa 003402  000016 116007		cmpq	14,dl
aa 003403  000011 601004		tnz	L452
aa 003404  000012 235007  327		lda	10,dl		" 10
aa 003405  700010 755111		sta	sb|8,x1
aa 003406  000026 272004		tsbbp	L415+2		" GetBits
aa 003407  000006 000001		zero	6,1
aa 003410  000001 176007		sbq	1,dl		" 1
aa 003411  600454 756100		stq	sp|300		" AbsRelBits
aa 003412  000141 235007  328		lda	97,dl		" 'a'
aa 003413  000004 710004		tra	L449
			L452:
aa 003414  000060 236007  330		ldq	48,dl		" '0'
aa 003415  700003 076111		adq	sb|3,x1		" c
aa 003416  000044 777000		llr	36		" exchange A and Q
			L449:
aa 003417  700003 755111		sta	sb|3,x1
aa 003420  700003 235111		lda	sb|3,x1
aa 003421  000044 777000		llr	36		" exchange A and Q
aa 003422  700000 762111		lprpbp	sb|0,x1		" bcpl return
aa 003423  200000 121100		sblx1	bp|0
aa 003424  700001 764111		lprplp	sb|1,x1
aa 003425  200001 710100		tra	bp|1		" end of return sequence
	"	Begin text of GetBits

aa 003426  000007 107145		zero	7,36453		" GetBits
aa 003427  164102 151164		zero	59458,53876
aa 003430  163000 000000		zero	58880
aa 003431  700002 756111  332		stq	sb|2,x1		" temporary
			L415:
aa 003432  000000 213000		epaq	0		" set lp to linkage section
aa 003433  700026 764161		lprplp	sb|22,*au
aa 003434  200000 021100		adlx1	bp|0		" BCPL save
aa 003435  700000 542111		sprpbp	sb|0,x1
aa 003436  700001 544111		sprplp	sb|1,x1
aa 003437  700423 620111		eax0	sb|275,x1
aa 003440  777760 360003		anx0	-16,du
aa 003441  700025 740100		stx0	sb|21		" end of save sequence

aa 003442  700002 236111  333		ldq	sb|2,x1		" n
aa 003443  600530 056100		asq	sp|344		" RelbitsOffset
aa 003444  600527 234100  334		szn	sp|343		" RelbitsList
aa 003445  000011 601004		tnz	L456
aa 003446  000463 236007  335		ldq	307,dl		" PhaseError
aa 003447  700012 756111		stq	sb|10,x1
aa 003450  000055 352004		eapbp	L457		" "GetBits"
aa 003451  700013 542111		sprpbp	sb|11,x1
4a 003452  400026 272120		tsbbp	lp|L72,*		" CGreport
aa 003453  000010 000002		zero	8,2
aa 003454  000000 236007  336		ldq	0,dl		" 0
aa 003455  000041 710004		tra	L455
			L456:
aa 003456  600530 235100  339		lda	sp|344		" RelbitsOffset
aa 003457  000044 115007		cmpa	36,dl		" 36
aa 003460  000010 605404		tpnz	L458
aa 003461  000044 236007  340		ldq	36,dl		" 36
aa 003462  600530 176100		sbq	sp|344		" RelbitsOffset
aa 003463  600527 762100		lprpbp	sp|343		" RelbitsList
aa 003464  200000 235100		lda	bp|0
aa 003465  000000 771006		arl	0,ql
aa 003466  700004 755111		sta	sb|4,x1		" r
aa 003467  000021 710004		tra	L459
			L458:
aa 003470  000044 336007  341		lcq	36,dl		" 36
aa 003471  600530 056100		asq	sp|344		" RelbitsOffset
aa 003472  600527 761100  342		lprpab	sp|343		" RelbitsList
aa 003473  100000 236100		ldq	ab|0
aa 003474  600530 724100		lxl4	sp|344		" RelbitsOffset
aa 003475  000000 736014		qls	0,x4
aa 003476  700004 756111		stq	sb|4,x1		" r
aa 003477  600527 763100  343		lprpbb	sp|343		" RelbitsList
aa 003500  300001 236100		ldq	bb|1
aa 003501  600527 756100		stq	sp|343		" RelbitsList
aa 003502  000044 236007  344		ldq	36,dl		" 36
aa 003503  600530 176100		sbq	sp|344		" RelbitsOffset
aa 003504  600527 765100		lprplb	sp|343		" RelbitsList
aa 003505  500000 235100		lda	lb|0
aa 003506  000000 771006		arl	0,ql
aa 003507  700004 255111		orsa	sb|4,x1		" r
			L459:
aa 003510  000044 236007  346		ldq	36,dl		" 36
aa 003511  700002 176111		sbq	sb|2,x1		" n
aa 003512  000001 335007		lca	1,dl		" true
aa 003513  000000 771006		arl	0,ql
aa 003514  700004 375111		ana	sb|4,x1		" r
aa 003515  000044 777000		llr	36		" exchange A and Q
			L455:
aa 003516  700004 756111		stq	sb|4,x1
aa 003517  700004 236111		ldq	sb|4,x1
aa 003520  700000 762111		lprpbp	sb|0,x1		" bcpl return
aa 003521  200000 121100		sblx1	bp|0
aa 003522  700001 764111		lprplp	sb|1,x1
aa 003523  200001 710100		tra	bp|1		" end of return sequence
aa 003524  700003 756111		stq	sb|3,x1		" temporary

	"	Literal pool

			L457:
aa 003525  000007 107145		zero	7,36453		" "GetBits"
aa 003526  164102 151164		zero	59458,53876
aa 003527  163000 000000		zero	58880
	"	Definition section part one - external entry points

5a 000000  000026 000000		" pointer to first definition
aa 000001  000000 600000		" flags: new format, ignore header
aa 000002  000000 000000		" list terminator

aa 000003  010142 143160		" "bcpl_cg9"
aa 000004  154137 143147
aa 000005  071000 000000
aa 000006  014114 151163		" "ListCodeItem"
aa 000007  164103 157144
aa 000010  145111 164145
aa 000011  155000 000000
aa 000012  011127 162151		" "WriteData"
aa 000013  164145 104141
aa 000014  164141 000000
aa 000015  020127 162151		" "WriteInstruction"
aa 000016  164145 111156
aa 000017  163164 162165
aa 000020  143164 151157
aa 000021  156000 000000
aa 000022  014163 171155		" "symbol_table"
aa 000023  142157 154137
aa 000024  164141 142154
aa 000025  145000 000000

	"	Segname definition for bcpl_cg9

55 000026  000031 000002		" forward, backward threads
5a 000027  000002 400003		" value defined, class flags
55 000030  000003 000031		" name pointer, first entry def

	"	Definition for ListCodeItem

55 000031  000034 000026		" forward, backward threads
0a 000032  002753 500000		" value defined, class flags
55 000033  000006 000026		" name pointer, segname def pointer

	"	Definition for WriteData

55 000034  000037 000031		" forward, backward threads
0a 000035  002674 500000		" value defined, class flags
55 000036  000012 000026		" name pointer, segname def pointer

	"	Definition for WriteInstruction

55 000037  000042 000034		" forward, backward threads
0a 000040  002412 500000		" value defined, class flags
55 000041  000015 000026		" name pointer, segname def pointer

	"	Definition for symbol_table

55 000042  000002 000037		" forward, backward threads
6a 000043  000000 400002		" value defined, class flags
55 000044  000022 000026		" name pointer, segname def pointer
	"	Definition section part two - symbolic info for external references

aa 000045  022142 143160		" "bcpl_machine_code_"
aa 000046  154137 155141
aa 000047  143150 151156
aa 000050  145137 143157
aa 000051  144145 137000
aa 000052  014125 156160		" "Unpackstring"
aa 000053  141143 153163
aa 000054  164162 151156
aa 000055  147000 000000
5a 000056  000057 000000
aa 000057  000004 000000
55 000060  000045 000052
aa 000061  010142 143160		" "bcpl_cg2"
aa 000062  154137 143147
aa 000063  062000 000000
aa 000064  013114 157157		" "LookupLabel"
aa 000065  153165 160114
aa 000066  141142 145154
5a 000067  000070 000000
aa 000070  000004 000000
55 000071  000061 000064
aa 000072  017142 143160		" "bcpl_stream_io_"
aa 000073  154137 163164
aa 000074  162145 141155
aa 000075  137151 157137
aa 000076  006106 157162		" "Format"
aa 000077  155141 164000
5a 000100  000101 000000
aa 000101  000004 000000
55 000102  000072 000076
aa 000103  015142 143160		" "bcpl_strings_"
aa 000104  154137 163164
aa 000105  162151 156147
aa 000106  163137 000000
aa 000107  006114 145156		" "Length"
aa 000110  147164 150000
5a 000111  000112 000000
aa 000112  000004 000000
55 000113  000103 000107
aa 000114  006127 162151		" "WriteS"
aa 000115  164145 123000
5a 000116  000117 000000
aa 000117  000004 000000
55 000120  000072 000114
aa 000121  021142 143160		" "bcpl_conversions_"
aa 000122  154137 143157
aa 000123  156166 145162
aa 000124  163151 157156
aa 000125  163137 000000
aa 000126  013103 157156		" "ConvertNtoS"
aa 000127  166145 162164
aa 000130  116164 157123
5a 000131  000132 000000
aa 000132  000004 000000
55 000133  000121 000126
aa 000134  007127 162151		" "Writech"
aa 000135  164145 143150
5a 000136  000137 000000
aa 000137  000004 000000
55 000140  000045 000134
aa 000141  013142 143160		" "bcpl_report"
aa 000142  154137 162145
aa 000143  160157 162164
aa 000144  010103 107162		" "CGreport"
aa 000145  145160 157162
aa 000146  164000 000000
5a 000147  000150 000000
aa 000150  000004 000000
55 000151  000141 000144
	"	Linkage section - static variables and external links

aa 000000  000000 000000		" linkage header
0a 000001  003530 000000		" address of defs
aa 000002  000000 000000
aa 000003  000000 000000
aa 000004  000000 000000
aa 000005  000000 000000
2a 000006  000010 000030		" offset to links, total length
aa 000007  000000 000030		" obsolete length

	"	External link pairs

			L438:
3a 000010  777770 000046		" "bcpl_machine_code_$Unpackstring"
5a 000011  000056 000000
			L429:
3a 000012  777766 000046		" "bcpl_cg2$LookupLabel"
5a 000013  000067 000000
			L387:
3a 000014  777764 000046		" "bcpl_stream_io_$Format"
5a 000015  000100 000000
			L375:
3a 000016  777762 000046		" "bcpl_strings_$Length"
5a 000017  000111 000000
			L374:
3a 000020  777760 000046		" "bcpl_stream_io_$WriteS"
5a 000021  000116 000000
			L373:
3a 000022  777756 000046		" "bcpl_conversions_$ConvertNtoS"
5a 000023  000131 000000
			L367:
3a 000024  777754 000046		" "bcpl_machine_code_$Writech"
5a 000025  000136 000000
			L72:
3a 000026  777752 000046		" "bcpl_report$CGreport"
5a 000027  000147 000000
	"	Symbol section header

aa 000000  000000 000001		" version number of header structure
aa 000001  163171 155142		" "symbtree"
aa 000002  164162 145145
aa 000003  000000 000003		" compiler version number
aa 000004  000000 101170		" date/time compiler modified
aa 000005  533311 032072		" 09/25/73  0959.1 mst Tue
aa 000006  000000 102333		" time of this compilation
aa 000007  436700 416246		" 01/24/75  0657.1 mst Fri
aa 000010  142143 160154		" "bcpl    "
aa 000011  040040 040040
aa 000012  000056 000035		" compiler version name - pointer, length
aa 000013  000066 000024		" user id - pointer, length
aa 000014  000073 000043		" comment string - pointer, length
aa 000015  000002 000002		" text and linkage boundaries
aa 000016  000024 000000		" source map, symbol tree root
7a 000017  000000 000175		" section header pointer, block size
aa 000020  000000 000175		" next block pointer, rel_text
aa 000021  000000 000232		" rel_def, rel_link
aa 000022  000240 000175		" rel_symbol, default truncate
aa 000023  000024 000000		" optional truncate, unused
aa 000024  000000 000001		" source files map: version number
aa 000025  000000 000006		"                   number of files
aa 000026  000104 000047		" bcpl_cg9
aa 000027  023333 611413		" last modified on
aa 000030  000000 102333		" 01/24/75  0647.2 mst Fri
aa 000031  432366 600000
aa 000032  000116 000043		" bcpl_cg_head
aa 000033  021607 540213		" last modified on
aa 000034  000000 101621		" 05/06/74  1740.6 mst Mon
aa 000035  351403 200000
aa 000036  000127 000051		" bcpl_compiler_head
aa 000037  021607 540214		" last modified on
aa 000040  000000 101621		" 05/06/74  1740.6 mst Mon
aa 000041  351403 200000
aa 000042  000142 000043		" bcpl_symbols
aa 000043  021607 540223		" last modified on
aa 000044  000000 101621		" 05/06/74  1740.8 mst Mon
aa 000045  351474 000000
aa 000046  000153 000044		" bcpl_cg_codes
aa 000047  021607 540212		" last modified on
aa 000050  000000 101621		" 05/06/74  1740.6 mst Mon
aa 000051  351402 400000
aa 000052  000164 000043		" bcpl_opcodes
aa 000053  021607 540221		" last modified on
aa 000054  000000 101621		" 05/06/74  1740.8 mst Mon
aa 000055  351474 000000
aa 000056  102103 120114		" "BCPL version 3.4, August 1973"
aa 000057  040166 145162
aa 000060  163151 157156
aa 000061  040063 056064
aa 000062  054040 101165
aa 000063  147165 163164
aa 000064  040061 071067
aa 000065  063040 040040
aa 000066  115141 162164		" "Martinson.SysMaint.a"
aa 000067  151156 163157
aa 000070  156056 123171
aa 000071  163115 141151
aa 000072  156164 056141
aa 000073  163157 165162		" "source  xref  alist  optimize  6180"
aa 000074  143145 040040
aa 000075  170162 145146
aa 000076  040040 141154
aa 000077  151163 164040
aa 000100  040157 160164
aa 000101  151155 151172
aa 000102  145040 040066
aa 000103  061070 060040
aa 000104  076062 056061		" ">2.1spec>online>mib083074>bcpl_cg9.bcpl"
aa 000105  163160 145143
aa 000106  076157 156154
aa 000107  151156 145076
aa 000110  155151 142060
aa 000111  070063 060067
aa 000112  064076 142143
aa 000113  160154 137143
aa 000114  147071 056142
aa 000115  143160 154040
aa 000116  076154 144144		" ">ldd>include>bcpl_cg_head.incl.bcpl"
aa 000117  076151 156143
aa 000120  154165 144145
aa 000121  076142 143160
aa 000122  154137 143147
aa 000123  137150 145141
aa 000124  144056 151156
aa 000125  143154 056142
aa 000126  143160 154040
aa 000127  076154 144144		" ">ldd>include>bcpl_compiler_head.incl.bcpl"
aa 000130  076151 156143
aa 000131  154165 144145
aa 000132  076142 143160
aa 000133  154137 143157
aa 000134  155160 151154
aa 000135  145162 137150
aa 000136  145141 144056
aa 000137  151156 143154
aa 000140  056142 143160
aa 000141  154040 040040
aa 000142  076154 144144		" ">ldd>include>bcpl_symbols.incl.bcpl"
aa 000143  076151 156143
aa 000144  154165 144145
aa 000145  076142 143160
aa 000146  154137 163171
aa 000147  155142 157154
aa 000150  163056 151156
aa 000151  143154 056142
aa 000152  143160 154040
aa 000153  076154 144144		" ">ldd>include>bcpl_cg_codes.incl.bcpl"
aa 000154  076151 156143
aa 000155  154165 144145
aa 000156  076142 143160
aa 000157  154137 143147
aa 000160  137143 157144
aa 000161  145163 056151
aa 000162  156143 154056
aa 000163  142143 160154
aa 000164  076154 144144		" ">ldd>include>bcpl_opcodes.incl.bcpl"
aa 000165  076151 156143
aa 000166  154165 144145
aa 000167  076142 143160
aa 000170  154137 157160
aa 000171  143157 144145
aa 000172  163056 151156
aa 000173  143154 056142
aa 000174  143160 154040
	"	Relocation information


	"	text section relocation bits

aa 000175  000000 000002		" version number of rel-bits structure
aa 000176  000000 001705		" length in bits
aa 000177  741404 170453
aa 000200  036055 647505
aa 000201  540103 603660
aa 000202  745314 010360
aa 000203  666074 165417
aa 000204  031300 207405
aa 000205  140103 650364
aa 000206  740375 170047
aa 000207  236042 640001
aa 000210  200123 602464
aa 000211  740315 170243
aa 000212  236017 647412
aa 000213  750005 170103
aa 000214  200123 601464
aa 000215  740255 000517
aa 000216  005303 604764
aa 000217  740375 170257
aa 000220  236010 647402
aa 000221  351701 432000
aa 000222  012360 166474
aa 000223  047517 007720
aa 000224  000024 000123
aa 000225  601164 740275
aa 000226  170043 236015
aa 000227  647402 351700
aa 000230  772360 136074
aa 000231  275517 026600
l	"	inkage relocation bits

aa 000232  000000 000002		" version number of rel-bits structure
aa 000233  000000 000170		" length in bits
aa 000234  100002 204652
aa 000235  465246 524652
aa 000236  465246 524652
aa 000237  465200 000000
s	"	ymbol relocation bits

aa 000240  000000 000002		" version number of rel-bits structure
aa 000241  000000 000043		" length in bits
aa 000242  740365 770666
	"	Object map

aa 004175  000000 000001		" version number of object_map structure
aa 004176  157142 152137		" "obj_map "
aa 004177  155141 160040
aa 004200  000000 003530		" text offset, length
aa 004201  003530 000152		" def offset, length
aa 004202  003702 000030		" link offset, length
aa 004203  003732 000243		" symbol offset, length
aa 004204  000000 000000		" break map offset, length
aa 004205  340000 000000		" flags: ^bound, relocatable, procedure, standard
aa 004206  004175 000000		" object map pointer, unused


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
