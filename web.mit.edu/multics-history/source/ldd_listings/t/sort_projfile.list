	COMPILATION LISTING OF SEGMENT sort_projfile
	Compiled by: Multics PL/I Compiler, Release 28d, of October 4, 1983
	Compiled at: Honeywell Multics Op. - System M
	Compiled on: 09/18/84  1232.1 mst Tue
	    Options: optimize map

        1 /* ***********************************************************
        2*   *                                                         *
        3*   * Copyright, (C) Honeywell Information Systems Inc., 1982 *
        4*   *                                                         *
        5*   *********************************************************** */
        6 
        7 /* ******************************************************
        8*   *                                                    *
        9*   *                                                    *
       10*   * Copyright (c) 1972 by Massachusetts Institute of   *
       11*   * Technology and Honeywell Information Systems, Inc. *
       12*   *                                                    *
       13*   *                                                    *
       14*   ****************************************************** */
       15 
       16 sort_projfile: proc;
       17 
       18 dcl  (path, dn) char (168) aligned,
       19      en char (32) aligned,
       20     (i, j, k, l, m, n) fixed bin,
       21      movelen fixed bin,
       22      ap ptr,
       23      al fixed bin,
       24      bchr char (al) unaligned based (ap),
       25      ec fixed bin,
       26     (p, q, p1, q1, pp, hp) ptr;
       27 
       28 dcl  cu_$arg_ptr entry (fixed bin, ptr, fixed bin, fixed bin),
       29      expand_path_ entry (ptr, fixed bin, ptr, ptr, fixed bin),
       30      com_err_ entry options (variable);
       31 
       32 dcl (addr, null, substr) builtin;
       33 
       34 dcl  hcs_$initiate entry (char (*) aligned, char (*) aligned, char (*) aligned, fixed bin (1),
       35      fixed bin (2), ptr, fixed bin),
       36      hcs_$make_seg entry (char (*) aligned, char (*) aligned, char (*) aligned, fixed bin (5), ptr, fixed bin),
       37      hcs_$set_bc entry (char (*) aligned, char (*) aligned, fixed bin (24), fixed bin),
       38      hcs_$terminate_noname entry (ptr, fixed bin),
       39      hcs_$delentry_seg entry (ptr, fixed bin),
       40      hcs_$truncate_seg entry (ptr, fixed bin, fixed bin);
       41 
       42 dcl  idsort_ entry ((*) char (32) aligned, (*) fixed bin, fixed bin);
       43 
       44 dcl 1 movetable based aligned,
       45     2 moveary (movelen) fixed bin (35);
       46 
  1     1 /* BEGIN INCLUDE FILE .. projfile.incl.pl1 */
  1     2 /* Modified by T. Casey April 1976 to change disk_infs (obsolete) to dir_disk_use */
  1     3 /* Modified 1984-07-09 BIM for dir_disk_quota, version */
  1     4 /* Modified 1984-09-14 BIM for reasonable array size */
  1     5 
  1     6 dcl 1 projfile based (pp) aligned,			/* Project history file */
  1     7     2 nproj fixed bin (35),				/* number of entries */
  1     8     2 version fixed bin,
  1     9     2 projfilexx0 (6) bit (36) aligned,
  1    10     2 projfiletab (3000),				/* in seg limit */
  1    11       3 id char (12) unal,				/* project ID */
  1    12       3 title char (52) unal,				/* project title */
  1    13       3 inv char (32) unal,				/* name of principal investigator */
  1    14       3 inv_addr char (32) unal,			/* address */
  1    15       3 sup char (32) unal,				/* name of supervisor */
  1    16       3 sup_addr char (32) unal,			/* address */
  1    17       3 sup_phone char (16) unal,			/* telephone */
  1    18       3 on fixed bin (71),				/* date on */
  1    19       3 off fixed bin (71),				/* date off */
  1    20       3 disk_psec fixed bin (71),			/* project disk page-seconds */
  1    21       3 disk_quota fixed bin (35),			/* project disk quota */
  1    22       3 dir_disk_quota fixed bin (35),			/* project dir disk quota */
  1    23       3 disk_use fixed bin (35),			/* total segment pages used */
  1    24       3 dir_disk_use fixed bin (35),			/* total directory pages used */
  1    25       3 misc_charges float bin,			/* manuals, etc */
  1    26       3 n_misc fixed bin,				/* number of entries */
  1    27       3 processed fixed bin,				/* temp for usage-report */
  1    28       3 pad bit (36) aligned;				/* out to even number of words */
  1    29 
  1    30 dcl  loph int static fixed bin (17) options (constant) init (8), /* lth of projfile header */
  1    31      lope int static fixed bin (17) options (constant) init (66); /* lth of projflile entry */
  1    32 
  1    33 dcl PROJFILE_VERSION fixed bin init (3) int static options (constant);
  1    34 
  1    35 /* END INCLUDE FILE ... projfile.incl.pl1 */
       47 
       48 
       49 /* ====================================================== */
       50 
       51 	call cu_$arg_ptr (1, ap, al, ec);
       52 	if ec ^= 0 then do;
       53 	     path = "projfile";
       54 	     al = 8;
       55 	end;
       56 	else path = bchr;
       57 	call expand_path_ (addr (path), al, addr (dn), addr (en), ec);
       58 	if ec ^= 0 then do;
       59 er:	     call com_err_ (ec, "sort_projfile", path);
       60 	     return;
       61 	end;
       62 
       63 	call hcs_$initiate (dn, en, "", 0, 1, pp, ec);
       64 	if pp = null then go to er;
       65 
       66 	call hcs_$make_seg ("", "", "", 1011b, p, ec);
       67 	if p = null then go to er;
       68 
       69 	movelen = loph;
       70 	p -> movetable = pp -> movetable;
       71 
       72 	movelen = lope;
       73 
       74 	m = nproj;
       75 
       76 	begin;
       77 
       78 dcl  key (m) char (32) aligned;
       79 dcl  ord (m) fixed bin;
       80 
       81 	     do i = 1 to m;
       82 		key (i) = id (i);
       83 		ord (i) = i;
       84 	     end;
       85 
       86 	     call idsort_ (key, ord, m);
       87 
       88 	     do i = 1 to m;
       89 		p1 = addr (projfiletab (ord (i)));
       90 		q1 = addr (p -> projfiletab (i));
       91 		q1 -> movetable = p1 -> movetable;
       92 	     end;
       93 
       94 	end;
       95 
       96 	movelen = loph + m * lope;
       97 
       98 	call hcs_$truncate_seg (pp, 0, ec);
       99 	pp -> movetable = p -> movetable;
      100 
      101 	call hcs_$terminate_noname (pp, ec);
      102 	call hcs_$delentry_seg (p, ec);
      103 
      104      end;
	SOURCE FILES USED IN THIS COMPILATION.

LINE      NUMBER  DATE MODIFIED     NAME			PATHNAME
             0    09/18/84  0759.0  sort_projfile.pl1                 >special_ldd>online>09/18/84>sort_projfile.pl1
47           1    09/18/84  1000.6  projfile.incl.pl1                 >special_ldd>online>09/18/84>projfile.incl.pl1
	NAMES DECLARED IN THIS COMPILATION.

IDENTIFIER	     OFFSET    LOC STORAGE CLASS   DATA TYPE		ATTRIBUTES AND REFERENCES
								(* indicates a set context)

NAMES DECLARED BY DECLARE STATEMENT.
addr                                                   builtin function         dcl 32 ref 57 57 57 57 57 57 89 90
al                              000242 automatic       fixed bin(17,0)          dcl 18 set ref 51* 54* 56 57*
ap                              000240 automatic       pointer                  dcl 18 set ref 51* 56
bchr                                   based           char                     unaligned dcl 18 ref 56
com_err_                        000014 constant        entry                    external dcl 28 ref 59
cu_$arg_ptr                     000010 constant        entry                    external dcl 28 ref 51
dn                              000152 automatic       char(168)                dcl 18 set ref 57 57 63*
ec                              000243 automatic       fixed bin(17,0)          dcl 18 set ref 51* 52 57* 58 59* 63* 66* 98* 101*
                                                                                  102*
en                              000224 automatic       char(32)                 dcl 18 set ref 57 57 63*
expand_path_                    000012 constant        entry                    external dcl 28 ref 57
hcs_$delentry_seg               000024 constant        entry                    external dcl 34 ref 102
hcs_$initiate                   000016 constant        entry                    external dcl 34 ref 63
hcs_$make_seg                   000020 constant        entry                    external dcl 34 ref 66
hcs_$terminate_noname           000022 constant        entry                    external dcl 34 ref 101
hcs_$truncate_seg               000026 constant        entry                    external dcl 34 ref 98
i                               000234 automatic       fixed bin(17,0)          dcl 18 set ref 81* 82 82 83 83* 88* 89 90*
id                       10            based           char(12)                 array level 3 packed unaligned dcl 1-6 set ref 82
idsort_                         000030 constant        entry                    external dcl 42 ref 86
key                             000100 automatic       char(32)                 array dcl 78 set ref 82* 86*
lope                                   constant        fixed bin(17,0)          initial dcl 1-30 ref 72 96
loph                                   constant        fixed bin(17,0)          initial dcl 1-30 ref 69 96
m                               000235 automatic       fixed bin(17,0)          dcl 18 set ref 74* 78 79 81 86* 88 96
movelen                         000236 automatic       fixed bin(17,0)          dcl 18 set ref 69* 70 72* 91 96* 99
movetable                              based           structure                level 1 dcl 44 set ref 70* 70 91* 91 99* 99
nproj                                  based           fixed bin(35,0)          level 2 dcl 1-6 ref 74
null                                                   builtin function         dcl 32 ref 64 67
ord                             000100 automatic       fixed bin(17,0)          array dcl 79 set ref 83* 86* 89
p                               000244 automatic       pointer                  dcl 18 set ref 66* 67 70 90 99 102*
p1                              000246 automatic       pointer                  dcl 18 set ref 89* 91
path                            000100 automatic       char(168)                dcl 18 set ref 53* 56* 57 57 59*
pp                              000252 automatic       pointer                  dcl 18 set ref 63* 64 70 74 82 89 98* 99 101*
projfile                               based           structure                level 1 dcl 1-6
projfiletab              10            based           structure                array level 2 dcl 1-6 set ref 89 90
q1                              000250 automatic       pointer                  dcl 18 set ref 90* 91

NAMES DECLARED BY DECLARE STATEMENT AND NEVER REFERENCED.
PROJFILE_VERSION                       internal static fixed bin(17,0)          initial dcl 1-33
hcs_$set_bc                     000000 constant        entry                    external dcl 34
hp                                     automatic       pointer                  dcl 18
j                                      automatic       fixed bin(17,0)          dcl 18
k                                      automatic       fixed bin(17,0)          dcl 18
l                                      automatic       fixed bin(17,0)          dcl 18
n                                      automatic       fixed bin(17,0)          dcl 18
q                                      automatic       pointer                  dcl 18
substr                                                 builtin function         dcl 32

NAMES DECLARED BY EXPLICIT CONTEXT.
er                              000114 constant        label                    dcl 59 ref 64 67
sort_projfile                   000025 constant        entry                    external dcl 16

THERE WERE NO NAMES DECLARED BY CONTEXT OR IMPLICATION.

STORAGE REQUIREMENTS FOR THIS PROGRAM.

	Object	Text	Link	Symbol	Defs	Static
Start          0       0       630         662     507         640
Length      1064     507        32         165     121           0

BLOCK NAME	         STACK SIZE     TYPE		WHY NONQUICK/WHO SHARES STACK FRAME
sort_projfile                       248 external procedure  is an external procedure.  
begin block on line 76               98 begin block         uses auto adjustable storage.  

STORAGE FOR AUTOMATIC VARIABLES.

STACK FRAME                 LOC IDENTIFIER                  BLOCK NAME
begin block on line 76   000100 key                         begin block on line 76
                         000100 ord                         begin block on line 76
sort_projfile            000100 path                        sort_projfile
                         000152 dn                          sort_projfile
                         000224 en                          sort_projfile
                         000234 i                           sort_projfile
                         000235 m                           sort_projfile
                         000236 movelen                     sort_projfile
                         000240 ap                          sort_projfile
                         000242 al                          sort_projfile
                         000243 ec                          sort_projfile
                         000244 p                           sort_projfile
                         000246 p1                          sort_projfile
                         000250 q1                          sort_projfile
                         000252 pp                          sort_projfile

THE FOLLOWING EXTERNAL OPERATORS ARE USED BY THIS PROGRAM.
enter_begin         leave_begin         call_ext_out_desc   call_ext_out        return              alloc_auto_adj
ext_entry

THE FOLLOWING EXTERNAL ENTRIES ARE CALLED BY THIS PROGRAM.
com_err_                      cu_$arg_ptr                   expand_path_                  hcs_$delentry_seg
hcs_$initiate                 hcs_$make_seg                 hcs_$terminate_noname         hcs_$truncate_seg
idsort_

NO EXTERNAL VARIABLES ARE USED BY THIS PROGRAM.




   LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC   
     16 000024        51 000032        52 000050        53 000052        54 000055        55 000057        56 000060
     57 000065        58 000112        59 000114        60 000141        63 000142        64 000206        66 000212
     67 000247        69 000253        70 000255        72 000263        74 000265        76 000267        78 000272
     79 000301        86 000305        81 000325        82 000336        83 000351        84 000354        86 000356
     88 000377        89 000410        90 000416        91 000423        92 000430        94 000432        96 000433
     98 000441        99 000455       101 000464       102 000475       104 000506


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
