	COMPILATION LISTING OF SEGMENT up_ctr
	Compiled by: Multics PL/I Compiler, Release 28d, of October 4, 1983
	Compiled at: Honeywell Multics Op. - System M
	Compiled on: 09/18/84  1239.0 mst Tue
	    Options: optimize map

        1 /* ***********************************************************
        2*   *                                                         *
        3*   * Copyright, (C) Honeywell Information Systems Inc., 1982 *
        4*   *                                                         *
        5*   *********************************************************** */
        6 
        7 /* ******************************************************
        8*   *                                                    *
        9*   *                                                    *
       10*   * Copyright (c) 1972 by Massachusetts Institute of   *
       11*   * Technology and Honeywell Information Systems, Inc. *
       12*   *                                                    *
       13*   *                                                    *
       14*   ****************************************************** */
       15 
       16 up_ctr: proc;
       17 
       18 /* print reqfile */
       19 
       20 dcl (path, dn) char (168) aligned,
       21      en char (32) aligned,
       22     (i, nq, ec) fixed bin,
       23      qp ptr,
       24      total float bin init (0.0e0),
       25      cv_$mwvf ext entry (float bin) returns (char (15)),
       26      expand_path_ entry (ptr, fixed bin, ptr, ptr, fixed bin),
       27      ioa_ entry options (variable),
       28      com_err_ entry options (variable),
       29      hcs_$initiate entry (char (*) aligned, char (*) aligned, char (*) aligned, fixed bin (1),
       30      fixed bin (2), ptr, fixed bin),
       31      hcs_$terminate_noname entry (ptr, fixed bin);
       32 
       33 
       34 dcl  null builtin;
       35 
  1     1 /* Requisition file declaration */
  1     2 /* Modified BIM 1984-07-10 for unaligned strings */
  1     3 /* Modified BIM 1984-09-14 foor 3000 size-array */
  1     4 
  1     5 dcl 1 reqfile based (qp) aligned,			/* MIT accounting data */
  1     6     2 nacts fixed,
  1     7     2 version fixed bin,
  1     8     2 pad (6) bit (36) aligned,
  1     9     2 reqfiletab (3000),				/* one entry per Multics account */
  1    10 						/* same size as projfile */
  1    11       3 acctid char (12) unal,			/* account id. usually same as Proj */
  1    12       3 mitacct char (12) unal,			/* MIT account no. */
  1    13       3 reqno char (12) unal,				/* requisition or PO no. */
  1    14       3 qflag char (8),				/* class & activity */
  1    15       3 procssd fixed bin,				/* temp for usage report */
  1    16       3 qdn fixed bin (71),				/* date on for account */
  1    17       3 qdf fixed bin (71),				/* date off */
  1    18       3 billing_name char (32) unal,			/* where to send bill */
  1    19       3 billing_addr char (32) unal,
  1    20       3 chg_mo float bin (63),			/* charges this month */
  1    21       3 chg_tr float bin (63),			/* charges this req */
  1    22       3 req_amt float bin (63),			/* req face value */
  1    23       3 cutoff fixed bin (71);			/* term date for req */
  1    24 
  1    25 dcl  loqh int static fixed bin (17) init (8),		/* length of reqfile head */
  1    26      loqe int static fixed bin (17) init (40);		/* lth of reqfile entry */
  1    27 
  1    28 declare REQFILE_VERSION fixed bin init (2) int static options (constant);
  1    29 
  1    30 /* End include file reqfile.incl.pl1 */
       36 
       37 
       38 /* ============================================== */
       39 
       40 	path = "reqfile";
       41 	call expand_path_ (addr (path), 7, addr (dn), addr (en), ec);
       42 	call hcs_$initiate (dn, en, "", 0, 1, qp, ec);
       43 	if qp = null then do;
       44 er:	     call com_err_ (ec, "up_ctr", path);
       45 	     return;
       46 	end;
       47 
       48 	nq = qp -> reqfile.nacts;
       49 
       50 	do i = 1 to nq;
       51 	     chg_tr (i) = chg_tr (i) + chg_mo (i);
       52 	     total = total + chg_mo (i);
       53 	     chg_mo (i) = 0;
       54 	end;
       55 
       56 	call ioa_ ("^a", cv_$mwvf (total));
       57 
       58 	call hcs_$terminate_noname (qp, ec);
       59 
       60      end;
	SOURCE FILES USED IN THIS COMPILATION.

LINE      NUMBER  DATE MODIFIED     NAME			PATHNAME
             0    09/18/84  0801.7  up_ctr.pl1                        >special_ldd>online>09/18/84>up_ctr.pl1
36           1    09/18/84  1000.6  reqfile.incl.pl1                  >special_ldd>online>09/18/84>reqfile.incl.pl1
	NAMES DECLARED IN THIS COMPILATION.

IDENTIFIER	     OFFSET    LOC STORAGE CLASS   DATA TYPE		ATTRIBUTES AND REFERENCES
								(* indicates a set context)

NAMES DECLARED BY DECLARE STATEMENT.
chg_mo                   50            based           float bin(63)            array level 3 dcl 1-5 set ref 51 52 53*
chg_tr                   52            based           float bin(63)            array level 3 dcl 1-5 set ref 51* 51
com_err_                        000016 constant        entry                    external dcl 20 ref 44
cv_$mwvf                        000010 constant        entry                    external dcl 20 ref 56 56
dn                              000152 automatic       char(168)                dcl 20 set ref 41 41 42*
ec                              000236 automatic       fixed bin(17,0)          dcl 20 set ref 41* 42* 44* 58*
en                              000224 automatic       char(32)                 dcl 20 set ref 41 41 42*
expand_path_                    000012 constant        entry                    external dcl 20 ref 41
hcs_$initiate                   000020 constant        entry                    external dcl 20 ref 42
hcs_$terminate_noname           000022 constant        entry                    external dcl 20 ref 58
i                               000234 automatic       fixed bin(17,0)          dcl 20 set ref 50* 51 51 51 52 53*
ioa_                            000014 constant        entry                    external dcl 20 ref 56
nacts                                  based           fixed bin(17,0)          level 2 dcl 1-5 ref 48
nq                              000235 automatic       fixed bin(17,0)          dcl 20 set ref 48* 50
null                                                   builtin function         dcl 34 ref 43
path                            000100 automatic       char(168)                dcl 20 set ref 40* 41 41 44*
qp                              000240 automatic       pointer                  dcl 20 set ref 42* 43 48 51 51 51 52 53 58*
reqfile                                based           structure                level 1 dcl 1-5
reqfiletab               10            based           structure                array level 2 dcl 1-5
total                           000242 automatic       float bin(27)            initial dcl 20 set ref 20* 52* 52 56* 56*

NAMES DECLARED BY DECLARE STATEMENT AND NEVER REFERENCED.
REQFILE_VERSION                        internal static fixed bin(17,0)          initial dcl 1-28
loqe                                   internal static fixed bin(17,0)          initial dcl 1-25
loqh                                   internal static fixed bin(17,0)          initial dcl 1-25

NAMES DECLARED BY EXPLICIT CONTEXT.
er                              000135 constant        label                    dcl 44
up_ctr                          000025 constant        entry                    external dcl 16

NAME DECLARED BY CONTEXT OR IMPLICATION.
addr                                                   builtin function         ref 41 41 41 41 41 41

STORAGE REQUIREMENTS FOR THIS PROGRAM.

	Object	Text	Link	Symbol	Defs	Static
Start          0       0       344         370     250         354
Length       562     250        24         155      73           0

BLOCK NAME	         STACK SIZE     TYPE		WHY NONQUICK/WHO SHARES STACK FRAME
up_ctr                              216 external procedure  is an external procedure.  

STORAGE FOR AUTOMATIC VARIABLES.

STACK FRAME                 LOC IDENTIFIER                  BLOCK NAME
up_ctr                   000100 path                        up_ctr
                         000152 dn                          up_ctr
                         000224 en                          up_ctr
                         000234 i                           up_ctr
                         000235 nq                          up_ctr
                         000236 ec                          up_ctr
                         000240 qp                          up_ctr
                         000242 total                       up_ctr

THE FOLLOWING EXTERNAL OPERATORS ARE USED BY THIS PROGRAM.
call_ext_out_desc   call_ext_out        return              ext_entry

THE FOLLOWING EXTERNAL ENTRIES ARE CALLED BY THIS PROGRAM.
com_err_                      cv_$mwvf                      expand_path_                  hcs_$initiate
hcs_$terminate_noname         ioa_

NO EXTERNAL VARIABLES ARE USED BY THIS PROGRAM.




   LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC   
     16 000024        20 000032        40 000034        41 000037        42 000065        43 000131        44 000135
     45 000160        48 000161        50 000163        51 000171        52 000177        53 000202        54 000204
     56 000206        58 000236        60 000247


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
