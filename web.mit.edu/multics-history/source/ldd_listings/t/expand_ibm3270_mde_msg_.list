	COMPILATION LISTING OF SEGMENT expand_ibm3270_mde_msg_
	Compiled by: Multics PL/I Compiler, Release 28e, of February 14, 1985
	Compiled at: Honeywell Multics Op. - System M
	Compiled on: 03/13/85  1141.5 mst Wed
	    Options: optimize map

        1 /* ***********************************************************
        2*   *                                                         *
        3*   * Copyright, (C) Honeywell Information Systems Inc., 1984 *
        4*   *                                                         *
        5*   *********************************************************** */
        6 
        7 /* format: style4 */
        8 
        9 expand_ibm3270_mde_msg_:
       10      procedure ();
       11 
       12 /* *      EXPAND_IBM3270_MDE_MSG_
       13*   *
       14*   *	Expander for message from ibm3270_mpx when a queue operation is attempted
       15*   *	on a channel which already has a write operation queued.
       16*   *
       17*   *	85-02-21, EJ Sharpe: initial coding
       18**/
       19 
       20 declare  P_log_message_format_ptr pointer parameter;
       21 declare  P_log_message_ptr pointer parameter;
       22 declare  P_expand_mode_ptr pointer parameter;
       23 declare  P_expansion char (*) varying parameter;
       24 declare  P_code fixed bin (35) parameter;
       25 
       26 declare  temp char (2000) varying;
       27 
       28 declare  expand_log_message_$unknown_syserr entry (pointer, pointer, pointer, char (*) varying, fixed bin (35));
       29 declare  expand_log_message_$unknown entry (pointer, pointer, pointer, char (*) varying, fixed bin (35));
       30 declare  ioa_$rsnnl entry options (variable);
       31 
       32 declare  (addr, binary, dimension, size) builtin;
       33 
       34 
       35 expand_ibm3270_mde_msg_$format:
       36      entry (P_log_message_format_ptr, P_log_message_ptr, P_expand_mode_ptr, P_expansion, P_code);
       37 
       38 	log_message_ptr = P_log_message_ptr;
       39 
       40 	mdep = addr (log_message.data (1));
       41 
       42 	if (size (mde) = dimension (log_message.data, 1))
       43 	then call expand_ibm3270_mde ();
       44 	else call expand_log_message_$unknown
       45 		(P_log_message_format_ptr, log_message_ptr, P_expand_mode_ptr, P_expansion, P_code);
       46 
       47 	return;
       48 
       49 
       50 /* This is a compatibility entrypoint-- it processes an old-format "syserr" class
       51*   message, which has the syserr binary code in the first word of the data. */
       52 
       53 expand_ibm3270_mde_msg_$syserr:
       54      entry (P_log_message_format_ptr, P_log_message_ptr, P_expand_mode_ptr, P_expansion, P_code);
       55 
       56 	log_message_ptr = P_log_message_ptr;
       57 
       58 	mdep = addr (log_message.data (2));
       59 
       60 	if (binary (log_message.data (1)) = SB_ibm3270_mde)
       61 	     & (size (mde) = dimension (log_message.data, 1) - 1)
       62 	then call expand_ibm3270_mde ();
       63 	else call expand_log_message_$unknown_syserr
       64 		(P_log_message_format_ptr, log_message_ptr, P_expand_mode_ptr, P_expansion, P_code);
       65 
       66 	return;
       67 
       68 expand_ibm3270_mde:
       69      procedure ();
       70 
       71 
       72 	call ioa_$rsnnl ("^/Device index=^d, name=""^a"", addr=""^a"",", temp, (0),
       73 	     mde.devx, mde.name, mde.device_address);
       74 	P_expansion = P_expansion || temp;
       75 	call ioa_$rsnnl ("^/screen size=^d, line size=^d, position=^d,", temp, (0),
       76 	     mde.screen_size, mde.line_size, mde.position);
       77 	P_expansion = P_expansion || temp;
       78 	call ioa_$rsnnl ("^/next_write_chan=^d, next_poll_chan=^d, next_control_chan=^d,", temp, (0),
       79 	     mde.next_write_chan, mde.next_poll_chan, mde.next_control_chan);
       80 	P_expansion = P_expansion || temp;
       81 	call ioa_$rsnnl ("^/Flags=^[^;^^^]listen,^[^;^^^]dialed,^[^;^^^]printer,^[^;^^^]hndlquit,^[^;^^^]waiting_for_ready,^[^;^^^]erase_req,",
       82 	     temp, (0), mde.listen, mde.dialed, mde.printer, mde.hndlquit, mde.waiting_for_ready, mde.erase_req);
       83 	P_expansion = P_expansion || temp;
       84 	call ioa_$rsnnl ("^[^;^^^]sound_alarm,^[^;^^^]control_queued,^[^;^^^]end_of_page,^[^;^^^]keyboard_restore,^[^;^^^]rawo,^[^;^^^]rawi,^[^;^^^]raw3270,^[^;^^^]raw3270_in_effect,^[^;^^^]write_queued.",
       85 	     mde.sound_alarm, mde.control_queued, mde.end_of_page, mde.keyboard_restore, mde.rawo, mde.rawi,
       86 	     mde.raw3270, mde.raw3270_in_effect, mde.write_queued);
       87 	P_expansion = P_expansion || temp;
       88 
       89 	return;
       90 
       91      end expand_ibm3270_mde;
       92 
       93 /* format: off */
       94  /* BEGIN INCLUDE FILE ... log_message.incl.pl1 ... 84-04-25 ... W. Olin Sibert */
  1     2 
  1     3 declare 1 log_message_header  aligned based,                /* Items marked "(SET)" are set by $create_message */
  1     4           2 sentinel          bit (36) aligned,             /* Proper value declared in log_segment.incl.pl1 */
  1     5           2 sequence          fixed bin (35),               /* Sequence number for this message (SET) */
  1     6           2 severity          fixed bin (8) unaligned,      /* Severity of message */
  1     7           2 data_class_lth    fixed bin (9) unaligned unsigned, /* Length of data class-- 0 to 16 (SET) */
  1     8           2 time              fixed bin (53) unaligned,     /* Time message originated */
  1     9           2 text_lth          fixed bin (17) unaligned,     /* Length of message text. Must be nonzero (SET) */
  1    10           2 data_lth          fixed bin (17) unaligned,     /* Length of binary data. May be zero (SET) */
  1    11           2 process_id        bit (36) aligned;             /* Process id of process writing message */
  1    12 
  1    13 declare 1 log_message         aligned based (log_message_ptr),
  1    14           2 header            aligned like log_message_header,
  1    15           2 text              char (log_message_text_lth         refer (log_message.text_lth)) unaligned,
  1    16           2 data_class        char (log_message_data_class_lth   refer (log_message.data_class_lth)) unaligned,
  1    17           2 data              dim (log_message_data_lth          refer (log_message.data_lth)) bit (36) aligned;
  1    18 
  1    19 declare   log_message_ptr pointer;
  1    20 declare   log_message_text_lth fixed bin;
  1    21 declare   log_message_data_class_lth fixed bin;
  1    22 declare   log_message_data_lth fixed bin;
  1    23 
  1    24 /* END INCLUDE FILE ... log_message.incl.pl1 */
       94 
       95  /* BEGIN INCLUDE FILE ... log_message_format.incl.pl1 ... 84-07-03 ... W. Olin Sibert */
  2     2 
  2     3 declare 1 log_message_format            aligned based (log_message_format_ptr),
  2     4           2 caller                      char (32) unaligned, /* Caller name to use when printing error messages */
  2     5           2 line_lth                    fixed bin,          /* Max length of output lines; longer messages are folded */
  2     6           2 indentation                 fixed bin,          /* Number of spaces at beginning of each output line */
  2     7           2 equal_sw                    bit (1) aligned,    /* Whether to suppress messages with identical text */
  2     8           2 error_sw                    bit (1) aligned,    /* Whether to print error messages via com_err_ */
  2     9           2 prefix                      char (40) varying,  /* Prefix for printing messages */
  2    10           2 number_format               char (20) varying,  /* ioa_ format for printing message numbers */
  2    11           2 time_format                 char (40) varying,  /* date_time_$format string for message times */
  2    12           2 date_format                 char (40) varying,  /* date_time_$format string for when date changes */
  2    13           2 continuation_indent	fixed bin,	/* If >= zero, value for continuation lines */
  2    14 						/* Otherwise, lined up under the text by default */
  2    15 
  2    16           2 pad (59)                    bit (36) aligned,
  2    17 
  2    18 /* ONLY format_log_message_$adjust ever changes the values below */
  2    19 
  2    20           2 internal_info               aligned,            /* Internal info, set by $adjust-- DO NOT CHANGE */
  2    21             3 area_ptr                  pointer,            /* Where this structure is allocated */
  2    22             3 date_ioa_string           char (100) varying, /* Format for date breaks,if any */
  2    23             3 message_ioa_string        char (100) varying, /* Format for first lines of messages */
  2    24             3 real_continuation_indent  fixed bin,          /* Indentation for continuation lines */
  2    25             3 prefix_lth                fixed bin,          /* Length of indent + prefix + time + sequence + severity */
  2    26             3 date_modulus              fixed bin (36),     /* Modulus for checking whether dates are equal */
  2    27 
  2    28           2 end                         fixed bin;
  2    29 
  2    30 declare   log_message_format_ptr pointer;
  2    31 
  2    32 /* END INCLUDE FILE ... log_message_format.incl.pl1 */
       95 
       96  /* BEGIN INCLUDE FILE .. syserr_binary_def.incl.pl1 */
  3     2 
  3     3 /* This include file has an ALM version, keep 'em in sync. */
  3     4 
  3     5 /* format: off */
  3     6 
  3     7 /* Modified January 1984 by Paul Farley to add an array of entry values
  3     8*   to be examined by display_cpu_error. */
  3     9 /* Modified October 1984 by EJ Sharpe to include SB_audit_message */
  3    10 /* Modified January 1985 by EJ Sharpe for SB_char_data_classes */
  3    11 /* Modified 1985-01-25, BIM: added ring alarm audit support. */
  3    12 /* Modified 1985-02-20, EJ Sharpe: added SB_ibm3270_mde, syserr_binary_(seg vol)damage_class,
  3    13*		also changed some codes to "SB_unused_NN" - see line comments */
  3    14 
  3    15 /* In the future, these will be the only constants needed in this include
  3    16*file.  They are the binary data class strings for messages in the new format
  3    17*syserr logs.  The names are all of the form SB_ZZZZZZZ_data_class where
  3    18*ZZZZZZZ is the value of the data class string.  Message expanders are named
  3    19*expand_ZZZZZZZ_msg_ and are referenced by the log perusal tools. */
  3    20 
  3    21 dcl (						/* include file name */
  3    22 SB_io_status_data_class	init ("io_status"),		/* io_syserr_msg */
  3    23 SB_hwfault_data_class	init ("hwfault"),		/* syserr_fault_msg */
  3    24 SB_mos_data_class		init ("mos"),		/* scr */
  3    25 SB_segdamage_data_class	init ("segdamage"),		/* segdamage_msg */
  3    26 SB_voldamage_data_class	init ("voldamage"),		/* segdamage_msg (first two words) */
  3    27 SB_mdc_del_uidpath_data_class	init ("mdc_del_uidpath"),	/* none - 16 word UID path */
  3    28 SB_mmdam_data_class		init ("mmdam"),		/* syserr_mmdam_msg */
  3    29 SB_mpc_poll_data_class	init ("mpc_poll"),		/* poll_mpc_data */
  3    30 SB_fnp_poll_data_class	init ("fnp_poll"),		/* poll_fnp_data */
  3    31 SB_config_deck_data_class	init ("config_deck"),	/* config_deck */
  3    32 SB_vtoce_data_class		init ("vtoce"),		/* vtoce */
  3    33 SB_access_audit_data_class	init ("access_audit"),	/* access_audit_bin_header */
  3    34 SB_ibm3270_mde_data_class	init ("ibm3270_mde")	/* ibm3270_mpx_data */
  3    35 ) static internal char (16) varying options (constant);
  3    36 
  3    37 
  3    38 /************************
  3    39*Once the syserr$binary is replaced with something that takes real data classes
  3    40*and all system modules and tools are upgraded to use the new interface, the
  3    41*rest of this include file may be discarded.
  3    42*************************/
  3    43 
  3    44 /* The limit of 36 is arbitrary- there is no reason that it can not be
  3    45*   extended at any time. */
  3    46 
  3    47 dcl (
  3    48 SB_disk_err	init (1),		SBL_disk_err	init (5),
  3    49 SB_hw_fault	init (2),		SBL_hw_fault	init (176),
  3    50 SB_io_err		init (3),		SBL_io_err	init (5),
  3    51 SB_unused_4	init (4),		SBL_unused_4	init (1),	/* was "mos_poll" (mos poll time) */
  3    52 SB_mos_err	init (5),		SBL_mos_err	init (2),	/* mos memory error data */
  3    53 SB_unused_6	init (6),		SBL_unused_6	init (1),	/* was "bulk_status" (bulk dcb status) */
  3    54 SB_unused_7	init (7),		SBL_unused_7	init (1), /* was "bulk_csb" (bulk csb status) */
  3    55 SB_unused_8	init (8),		SBL_unused_8	init (3), /* was "free_st_1" */
  3    56 SB_unused_9	init (9),		SBL_unused_9	init (2), /* was "free_st_2" */
  3    57 SB_unused_10	init (10),	SBL_unused_10	init (21), /* was "unpr_add" */
  3    58 SB_zerpag		init (11),	SBL_zerpag	init (20),
  3    59 SB_unused_12	init (12),	SBL_unused_12	init (20), /* was "unpr_add" */
  3    60 SB_vtoc_salv_dam	init (13),	SBL_vtoc_salv_dam	init (20),
  3    61 SB_unused_14	init (14),	SBL_unused_14	init (20), /* was "page_rw_err" */
  3    62 SB_unused_15	init (15),	SBL_unused_15	init (3), /* was "ruad" */
  3    63 SB_random_segdamage	init (16),	SBL_random_segdamage init (20),
  3    64 SB_read_nc	init (17),	SBL_read_nc	init (2),
  3    65 SB_unused_18	init (18),	SBL_unused_18	init (2), /* was "vtoc_err" */
  3    66 SB_mdc_del_uidpath	init (19),	SBL_mdc_del_uidpath	init (16),
  3    67 SB_ocdcm_err	init (20),	SBL_ocdcm_err	init (5),
  3    68 SB_mmdam		init (21),	SBL_mmdam		init (2),
  3    69 SB_verify_lock	init (22),	SBL_verify_lock	init (176),
  3    70 SB_io_err_detail	init (23),	SBL_io_err_detail	init (11),
  3    71 SB_mpc_poll	init (24),	SBL_mpc_poll	init (256) /* max */,
  3    72 SB_fnp_poll	init (25),	SBL_fnp_poll	init (256) /* max */,
  3    73 SB_config_deck	init (26),	SBL_config_deck	init (256) /* 16 cards at 16 words */,
  3    74 SB_vtoce		init (27),	SBL_vtoce		init (192),    /* 1 VTOCE */
  3    75 SB_access_audit	init (28),	SBL_access_audit	init (256), /* max */
  3    76 SB_ibm3270_mde	init (35),	SBL_ibm3270_mde	init (256), /* max */
  3    77 SB_end_of_table	init (36),	SBL_end_of_table	init (1)
  3    78   ) internal static options (constant) fixed bin;
  3    79 
  3    80 
  3    81 /* The following array is a mapping of the old syserr$binary codes into the
  3    82*new data classes for MR11.  It is primarily used by syserr_copy to translate
  3    83*the binary data codes stored in the wired syserr log (see above) into the data
  3    84*classes needed by the ring-0 paged syserr log which is a new format log.  It
  3    85*is also used by syserr_log_util_ to translate the data classes back into the
  3    86*corresponding binary code (for tools not yet upgraded to deal with the new
  3    87*format log messages). */
  3    88 
  3    89 dcl SB_char_data_classes (36) char (16) varying internal static options (constant)
  3    90 	init (	"io_status",		/* 1 */
  3    91 		"hwfault",		/* 2 */
  3    92 		"io_status",		/* 3 */
  3    93 		"unused_4",		/* 4 */
  3    94 		"mos",			/* 5 */
  3    95 
  3    96 		"unused_6",		/* 6 */
  3    97 		"unused_7",		/* 7 */
  3    98 		"unused_8",		/* 8 */
  3    99 		"unused_9",		/* 9 */ 
  3   100 		"unused_10",		/* 10 */
  3   101 
  3   102 		"segdamage",		/* 11 */
  3   103 		"unused_12",		/* 12 */
  3   104 		"segdamage",		/* 13 */
  3   105 		"unused_14",		/* 14 */
  3   106 		"unused_15",		/* 15 */
  3   107 
  3   108 		"segdamage",		/* 16 */
  3   109 		"voldamage",		/* 17 */
  3   110 		"unused_18",		/* 18 */
  3   111 		"mdc_del_uidpath",		/* 19 */
  3   112 		"io_status",		/* 20 */
  3   113 
  3   114 		"mmdam",			/* 21 */
  3   115 		"hwfault",		/* 22 */
  3   116 		"io_status",		/* 23 */
  3   117 		"mpc_poll",		/* 24 */
  3   118 		"fnp_poll",		/* 25 */
  3   119 
  3   120 		"config_deck",		/* 26 */
  3   121 		"vtoce",			/* 27 */
  3   122 		"access_audit",		/* 28 */
  3   123 		"unused_29",		/* 29 */
  3   124 		"unused_30",		/* 30 */
  3   125 		"unused_31",		/* 31 */
  3   126 		"unused_32",		/* 32 */
  3   127 		"unused_33",		/* 33 */
  3   128 		"unused_34",		/* 34 */
  3   129 		"ibm3270_mde",		/* 35 */
  3   130 		"unused_36"		/* 36 */
  3   131 	);
  3   132 
  3   133 
  3   134 /* format: on */
  3   135 
  3   136 /* These constants are used by various tools which analyze syserr messages and
  3   137*still call the old interface "syserr_log_util_". */
  3   138 
  3   139      dcl	   syserr_binary_mos_mask init ("060000000000"b3) bit (36) static options (constant);
  3   140      dcl	   syserr_binary_seg_damage_mask init ("000374000000"b3) bit (36) static options (constant);
  3   141      dcl	   syserr_binary_vol_damage_mask init ("003413000000"b3) bit (36) static options (constant);
  3   142      dcl	   syserr_binary_address_damage_mask init ("002010000000"b3) bit (36) static options (constant);
  3   143 
  3   144      dcl	   display_cpu_error_binary_defs (2) init (
  3   145 			      2,			/** SB_hw_fault */
  3   146 			      22			/** SB_verify_lock */
  3   147 			      ) internal static options (constant) fixed bin;
  3   148 
  3   149 /* END INCLUDE FILE syserr_binary_def.incl.pl1 */
       96 
       97  /* Begin include file ..... ibm3270_mpx_data.incl.pl1 */
  4     2 
  4     3 /* Describes ring-0 data bases used by the ibm3270 demultiplexer */
  4     4 /* Prepared May 1979 by Larry Johnson */
  4     5 
  4     6 dcl  mdp ptr;
  4     7 dcl  md_nchan fixed bin;
  4     8 
  4     9 dcl 1 md aligned based (mdp),				/* Global data */
  4    10 
  4    11 /* Static items */
  4    12 
  4    13     2 event_channel fixed bin (71),			/* Event channel to talk to AS over */
  4    14     2 processid bit (36),				/* AS processid */
  4    15     2 devx fixed bin,				/* Devx of major channel */
  4    16     2 name char (32),				/* Name of major channel */
  4    17     2 nchan fixed bin,				/* Count of subchannels */
  4    18     2 controller_address fixed bin,			/* Address of controler, defaults to 0 */
  4    19     2 controller_poll_address char (1),
  4    20     2 controller_select_address char (1),
  4    21     2 general_poll_address char (1),
  4    22     2 dialup_info,					/* Data saved from dialup interrupt */
  4    23       3 line_type fixed bin,
  4    24       3 baud_rate fixed bin,
  4    25       3 max_buf_size fixed bin,
  4    26       3 buffer_pad fixed bin,
  4    27     2 chars unal,					/* Various ascii/ebcdic dependent chars */
  4    28       3 nl char (1),				/* Newline character */
  4    29       3 sba char (1),				/* Set-buffer-address code */
  4    30       3 stx char (1),				/* Start of text code */
  4    31       3 esc char (1),				/* Escape code */
  4    32       3 write char (1),				/* Function code for write */
  4    33       3 erase_write char (1),				/* Function code for erase-write */
  4    34       3 ic char (1),				/* Insert cursor */
  4    35       3 etx char (1),				/* End of text */
  4    36       3 soh char (1),				/* Start of header */
  4    37       3 eot char (1),				/* End of transmission */
  4    38       3 percent char (1),				/* A "%" */
  4    39       3 slash char (1),				/* A "/" */
  4    40       3 letter_R char (1),				/* A "R" */
  4    41       3 etb char (1),				/* End of text block */
  4    42       3 enter char (1),				/* AID field for enter */
  4    43       3 clear char (1),				/* AID field for clear */
  4    44       3 pa1 char (1),				/* AID field for PA1 */
  4    45       3 pa2 char (1),				/* AID field for PA2 */
  4    46       3 pa3 char (1),				/* AID field for PA3 */
  4    47       3 bs char (1),				/* Backspace */
  4    48       3 cr char (1),				/* Carriage return */
  4    49       3 em char (1),				/* End of media */
  4    50       3 copy char (1),				/* Function code to copy a screen */
  4    51     2 action_chars unal,
  4    52       3 quit_key char (1),				/* Function code to interpret as quit */
  4    53       3 formfeed_key char (1),			/* Function code to interpret as formfeed */
  4    54     2 address_tablep ptr,				/* Pointer to ebcdic or ascii table */
  4    55     2 chan_map (0:31) fixed bin (8) unal,		/* Maps poll address into mde index */
  4    56 
  4    57 /* Dynamic items */
  4    58 
  4    59     2 last_poll_address char (1),			/* Last poll address sent to FNP */
  4    60     2 first_control_chan fixed bin,			/* First channal in control function queue */
  4    61     2 last_control_chan fixed bin,			/* The last */
  4    62     2 last_select_address char (1),			/* Likewise for select */
  4    63     2 first_write_chan fixed bin,			/* First channel in write queue */
  4    64     2 last_write_chan fixed bin,			/* Last channel in write queue */
  4    65     2 cur_write_chan fixed bin,			/* If output in progres */
  4    66     2 write_chain_ptr ptr unal,			/* For cur_write_chan */
  4    67     2 first_poll_chan fixed bin,			/* First channel in poll queue */
  4    68     2 last_poll_chan fixed bin,			/* Last channel in poll queue */
  4    69     2 input_chain_ptr ptr,				/* Currently accumulating input chain */
  4    70     2 input_count fixed bin,				/* Its length */
  4    71     2 error_stat like ibm3270_meters,			/* Error statstics */
  4    72     2 saved_meters_ptr ptr,				/* address of savedf copy of meters */
  4    73     2 flags,
  4    74       3 ascii bit (1) unal,				/* Use ascii protocol */
  4    75       3 debug bit (1) unal,
  4    76       3 loading bit (1) unal,				/* Load in progress */
  4    77       3 loaded bit (1) unal,				/* Load complete */
  4    78       3 started bit (1) unal,				/* In started state */
  4    79       3 poll_in_progress bit (1) unal,			/* FNP has device poll in progress */
  4    80       3 output_in_progress bit (1) unal,		/* Working on output, goes off with line status */
  4    81       3 message_in_progress bit (1) unal,		/* Working on output, goes off when data passed on */
  4    82       3 eot_sent bit (1) unal,			/* If eot has been entor current output */
  4    83       3 send_output bit (1) unal,			/* Mpx has been told send output */
  4    84       3 allow_raw3270 bit (1) unal,			/* Sub-channels may use raw3270 mode */
  4    85       3 allow_copy bit (1) unal,			/* Sub-channels may use copy feature */
  4    86       3 pad bit (24) unal,
  4    87     2 mde_entry (md_nchan refer (md.nchan)) like mde;	/* Per-channel data */
  4    88 
  4    89 dcl  address_table (0:63) char (1) unal based (md.address_tablep);
  4    90 
  4    91 dcl  mdep ptr;
  4    92 
  4    93 dcl 1 mde aligned based (mdep),			/* Per channel data */
  4    94     2 devx fixed bin,				/* Devx of sub-channel */
  4    95     2 name char (3),				/* Last component of name, {p|d}NN */
  4    96     2 device_address char (1),			/* Address for poll and selects */
  4    97     2 screen_size fixed bin,				/* Number of characters on screen, 480/1920 */
  4    98     2 line_size fixed bin,				/* Number of characters on line, 40/80 */
  4    99     2 position fixed bin,				/* Where cursor should be */
  4   100     2 next_write_chan fixed bin,			/* Next channel in the write queue */
  4   101     2 next_poll_chan fixed bin,			/* Next channel in the poll queue */
  4   102     2 next_control_chan fixed bin,			/* Next channel in control function queue */
  4   103     2 write_chain_ptr ptr unal,			/* Pointer to write chain for this device */
  4   104     2 flags,
  4   105       3 listen bit (1) unal,
  4   106       3 dialed bit (1) unal,
  4   107       3 printer bit (1) unal,
  4   108       3 hndlquit bit (1) unal,			/* Setting of the mode */
  4   109       3 waiting_for_ready bit (1) unal,			/* Waiting for prinnr to finish */
  4   110       3 erase_req bit (1) unal,			/* Erase screen on next write */
  4   111       3 sound_alarm bit (1) unal,			/* Turn on beeper on next chance */
  4   112       3 control_queued bit (1) unal,			/* Channel in unlock queue */
  4   113       3 end_of_page bit (1) unal,			/* Waiting for responce to start output */
  4   114       3 keyboard_restore bit (1) unal,			/* Must unlock keyboard */
  4   115       3 rawo bit (1) unal,				/* Current state of channels rawo mode */
  4   116       3 rawi bit (1) unal,				/* Current state of channels rawi mode */
  4   117       3 raw3270 bit (1) unal,				/* Special raw mode for 3270's */
  4   118       3 raw3270_in_effect bit (1) unal,			/* Equals rawi & rawo & raw3270 */
  4   119       3 write_queued bit (1) unal,
  4   120       3 pad bit (21) unal;
  4   121 
  4   122 /* End include file ..... ibm3270_mpx_data.incl.pl1 */
       97 
       98  /* BEGIN INCLUDE FILE ... ibm3270_meters.incl.pl1 */
  5     2 
  5     3 /* defines metering structures used for ibm3270 multiplexer channel */
  5     4 
  5     5 /* Written June 1981 by Robert Coren */
  5     6 
  5     7 dcl 1 ibm3270_meter_struc aligned based,
  5     8     2 version fixed bin,
  5     9     2 pad bit (36),
  5    10     2 current_meters like ibm3270_meters,
  5    11     2 saved_meters like ibm3270_meters;
  5    12 
  5    13 dcl 1 ibm3270_meters aligned based (meter_ptr),
  5    14     2 poll_failed fixed bin (35),			/* No response to poll */
  5    15     2 bad_output fixed bin (35),			/* Bsc control tables rejected output */
  5    16     2 write_eot fixed bin (35),			/* Got eot in responseto write */
  5    17     2 write_abort fixed bin (35),			/* FNP send eot because of nothing to write */
  5    18     2 select_failed fixed bin (35),			/* No response to select */
  5    19     2 wack_select fixed bin (35),			/* Wack in respnse to select */
  5    20     2 nak_output fixed bin (35),			/* Our output got nakked */
  5    21     2 input_reject fixed bin (35),			/* Count of input reject interrupts */
  5    22     2 needs_space fixed bin (35),			/* Count of times space available interrupt req */
  5    23     2 space_available fixed bin (35),			/* Count of space available interrupts */
  5    24     2 write_format_error fixed bin (35),		/* Count of bad calls to write entry */
  5    25     2 bad_input fixed bin (35),			/* Count of ill-formatted input messages */
  5    26     2 bad_device fixed bin (35);			/* Count of unrecognized device identifications */
  5    27 
  5    28 dcl  meter_ptr ptr;
  5    29 
  5    30 dcl  IBM3270_METERS_VERSION_1 internal static options (constant) init (1);
  5    31 
  5    32 /* END INCLUDE FILE ... ibm3270_meters.incl.pl1 */
       98  /* because ibm3270_mpx_data wants it */
       99 
      100           end expand_ibm3270_mde_msg_;
	SOURCE FILES USED IN THIS COMPILATION.

LINE      NUMBER  DATE MODIFIED     NAME			PATHNAME
             0    03/13/85  1026.7  expand_ibm3270_mde_msg_.pl1       >spec>on>41-11>expand_ibm3270_mde_msg_.pl1
94           1    01/21/85  0912.2  log_message.incl.pl1              >ldd>include>log_message.incl.pl1
95           2    01/21/85  0912.2  log_message_format.incl.pl1       >ldd>include>log_message_format.incl.pl1
96           3    03/12/85  1556.6  syserr_binary_def.incl.pl1        >spec>on>41-11>syserr_binary_def.incl.pl1
97           4    08/10/81  1843.6  ibm3270_mpx_data.incl.pl1         >ldd>include>ibm3270_mpx_data.incl.pl1
98           5    03/27/82  0430.3  ibm3270_meters.incl.pl1           >ldd>include>ibm3270_meters.incl.pl1
	NAMES DECLARED IN THIS COMPILATION.

IDENTIFIER	     OFFSET    LOC STORAGE CLASS   DATA TYPE		ATTRIBUTES AND REFERENCES
								(* indicates a set context)

NAMES DECLARED BY DECLARE STATEMENT.
P_code                                 parameter       fixed bin(35,0)          dcl 24 set ref 35 44* 53 63*
P_expand_mode_ptr                      parameter       pointer                  dcl 22 set ref 35 44* 53 63*
P_expansion                            parameter       varying char             dcl 23 set ref 35 44* 53 63* 74* 74 77* 77 80* 80
                                                                                  83* 83 87* 87
P_log_message_format_ptr               parameter       pointer                  dcl 20 set ref 35 44* 53 63*
P_log_message_ptr                      parameter       pointer                  dcl 21 ref 35 38 53 56
SB_ibm3270_mde                         constant        fixed bin(17,0)          initial dcl 3-47 ref 60
addr                                                   builtin function         dcl 32 ref 40 58
binary                                                 builtin function         dcl 32 ref 60
control_queued           12(07)        based           bit(1)                   level 3 packed unaligned dcl 4-93 set ref 84*
data                                   based           bit(36)                  array level 2 dcl 1-13 set ref 40 42 58 60 60
data_class_lth            2(09)        based           fixed bin(9,0)           level 3 packed unsigned unaligned dcl 1-13 ref 40 42
                                                                                  58 60 60
data_lth                  4(18)        based           fixed bin(17,0)          level 3 packed unaligned dcl 1-13 ref 42 60
device_address            2            based           char(1)                  level 2 dcl 4-93 set ref 72*
devx                                   based           fixed bin(17,0)          level 2 dcl 4-93 set ref 72*
dialed                   12(01)        based           bit(1)                   level 3 packed unaligned dcl 4-93 set ref 81*
dimension                                              builtin function         dcl 32 ref 42 60
end_of_page              12(08)        based           bit(1)                   level 3 packed unaligned dcl 4-93 set ref 84*
erase_req                12(05)        based           bit(1)                   level 3 packed unaligned dcl 4-93 set ref 81*
expand_log_message_$unknown     000012 constant        entry                    external dcl 29 ref 44
expand_log_message_$unknown_syserr
                                000010 constant        entry                    external dcl 28 ref 63
flags                    12            based           structure                level 2 dcl 4-93
header                                 based           structure                level 2 dcl 1-13
hndlquit                 12(03)        based           bit(1)                   level 3 packed unaligned dcl 4-93 set ref 81*
ibm3270_meters                         based           structure                level 1 dcl 5-13
ioa_$rsnnl                      000014 constant        entry                    external dcl 30 ref 72 75 78 81 84
keyboard_restore         12(09)        based           bit(1)                   level 3 packed unaligned dcl 4-93 set ref 84*
line_size                 4            based           fixed bin(17,0)          level 2 dcl 4-93 set ref 75*
listen                   12            based           bit(1)                   level 3 packed unaligned dcl 4-93 set ref 81*
log_message                            based           structure                level 1 dcl 1-13
log_message_header                     based           structure                level 1 dcl 1-3
log_message_ptr                 001066 automatic       pointer                  dcl 1-19 set ref 38* 40 42 44* 56* 58 60 60 63*
mde                                    based           structure                level 1 dcl 4-93 set ref 42 60
mdep                            001070 automatic       pointer                  dcl 4-91 set ref 40* 42 58* 60 72 72 72 75 75 75 78
                                                                                  78 78 81 81 81 81 81 81 84 84 84 84 84 84 84 84 84
name                      1            based           char(3)                  level 2 dcl 4-93 set ref 72*
next_control_chan        10            based           fixed bin(17,0)          level 2 dcl 4-93 set ref 78*
next_poll_chan            7            based           fixed bin(17,0)          level 2 dcl 4-93 set ref 78*
next_write_chan           6            based           fixed bin(17,0)          level 2 dcl 4-93 set ref 78*
position                  5            based           fixed bin(17,0)          level 2 dcl 4-93 set ref 75*
printer                  12(02)        based           bit(1)                   level 3 packed unaligned dcl 4-93 set ref 81*
raw3270                  12(12)        based           bit(1)                   level 3 packed unaligned dcl 4-93 set ref 84*
raw3270_in_effect        12(13)        based           bit(1)                   level 3 packed unaligned dcl 4-93 set ref 84*
rawi                     12(11)        based           bit(1)                   level 3 packed unaligned dcl 4-93 set ref 84*
rawo                     12(10)        based           bit(1)                   level 3 packed unaligned dcl 4-93 set ref 84*
screen_size               3            based           fixed bin(17,0)          level 2 dcl 4-93 set ref 75*
size                                                   builtin function         dcl 32 ref 42 60
sound_alarm              12(06)        based           bit(1)                   level 3 packed unaligned dcl 4-93 set ref 84*
temp                            000100 automatic       varying char(2000)       dcl 26 set ref 72* 74 75* 77 78* 80 81* 83 87
text_lth                  4            based           fixed bin(17,0)          level 3 packed unaligned dcl 1-13 ref 40 42 58 60 60
waiting_for_ready        12(04)        based           bit(1)                   level 3 packed unaligned dcl 4-93 set ref 81*
write_queued             12(14)        based           bit(1)                   level 3 packed unaligned dcl 4-93 set ref 84*

NAMES DECLARED BY DECLARE STATEMENT AND NEVER REFERENCED.
IBM3270_METERS_VERSION_1               internal static fixed bin(17,0)          initial dcl 5-30
SBL_access_audit                       internal static fixed bin(17,0)          initial dcl 3-47
SBL_config_deck                        internal static fixed bin(17,0)          initial dcl 3-47
SBL_disk_err                           internal static fixed bin(17,0)          initial dcl 3-47
SBL_end_of_table                       internal static fixed bin(17,0)          initial dcl 3-47
SBL_fnp_poll                           internal static fixed bin(17,0)          initial dcl 3-47
SBL_hw_fault                           internal static fixed bin(17,0)          initial dcl 3-47
SBL_ibm3270_mde                        internal static fixed bin(17,0)          initial dcl 3-47
SBL_io_err                             internal static fixed bin(17,0)          initial dcl 3-47
SBL_io_err_detail                      internal static fixed bin(17,0)          initial dcl 3-47
SBL_mdc_del_uidpath                    internal static fixed bin(17,0)          initial dcl 3-47
SBL_mmdam                              internal static fixed bin(17,0)          initial dcl 3-47
SBL_mos_err                            internal static fixed bin(17,0)          initial dcl 3-47
SBL_mpc_poll                           internal static fixed bin(17,0)          initial dcl 3-47
SBL_ocdcm_err                          internal static fixed bin(17,0)          initial dcl 3-47
SBL_random_segdamage                   internal static fixed bin(17,0)          initial dcl 3-47
SBL_read_nc                            internal static fixed bin(17,0)          initial dcl 3-47
SBL_unused_10                          internal static fixed bin(17,0)          initial dcl 3-47
SBL_unused_12                          internal static fixed bin(17,0)          initial dcl 3-47
SBL_unused_14                          internal static fixed bin(17,0)          initial dcl 3-47
SBL_unused_15                          internal static fixed bin(17,0)          initial dcl 3-47
SBL_unused_18                          internal static fixed bin(17,0)          initial dcl 3-47
SBL_unused_4                           internal static fixed bin(17,0)          initial dcl 3-47
SBL_unused_6                           internal static fixed bin(17,0)          initial dcl 3-47
SBL_unused_7                           internal static fixed bin(17,0)          initial dcl 3-47
SBL_unused_8                           internal static fixed bin(17,0)          initial dcl 3-47
SBL_unused_9                           internal static fixed bin(17,0)          initial dcl 3-47
SBL_verify_lock                        internal static fixed bin(17,0)          initial dcl 3-47
SBL_vtoc_salv_dam                      internal static fixed bin(17,0)          initial dcl 3-47
SBL_vtoce                              internal static fixed bin(17,0)          initial dcl 3-47
SBL_zerpag                             internal static fixed bin(17,0)          initial dcl 3-47
SB_access_audit                        internal static fixed bin(17,0)          initial dcl 3-47
SB_access_audit_data_class             internal static varying char(16)         initial dcl 3-21
SB_char_data_classes                   internal static varying char(16)         initial array dcl 3-89
SB_config_deck                         internal static fixed bin(17,0)          initial dcl 3-47
SB_config_deck_data_class              internal static varying char(16)         initial dcl 3-21
SB_disk_err                            internal static fixed bin(17,0)          initial dcl 3-47
SB_end_of_table                        internal static fixed bin(17,0)          initial dcl 3-47
SB_fnp_poll                            internal static fixed bin(17,0)          initial dcl 3-47
SB_fnp_poll_data_class                 internal static varying char(16)         initial dcl 3-21
SB_hw_fault                            internal static fixed bin(17,0)          initial dcl 3-47
SB_hwfault_data_class                  internal static varying char(16)         initial dcl 3-21
SB_ibm3270_mde_data_class              internal static varying char(16)         initial dcl 3-21
SB_io_err                              internal static fixed bin(17,0)          initial dcl 3-47
SB_io_err_detail                       internal static fixed bin(17,0)          initial dcl 3-47
SB_io_status_data_class                internal static varying char(16)         initial dcl 3-21
SB_mdc_del_uidpath                     internal static fixed bin(17,0)          initial dcl 3-47
SB_mdc_del_uidpath_data_class          internal static varying char(16)         initial dcl 3-21
SB_mmdam                               internal static fixed bin(17,0)          initial dcl 3-47
SB_mmdam_data_class                    internal static varying char(16)         initial dcl 3-21
SB_mos_data_class                      internal static varying char(16)         initial dcl 3-21
SB_mos_err                             internal static fixed bin(17,0)          initial dcl 3-47
SB_mpc_poll                            internal static fixed bin(17,0)          initial dcl 3-47
SB_mpc_poll_data_class                 internal static varying char(16)         initial dcl 3-21
SB_ocdcm_err                           internal static fixed bin(17,0)          initial dcl 3-47
SB_random_segdamage                    internal static fixed bin(17,0)          initial dcl 3-47
SB_read_nc                             internal static fixed bin(17,0)          initial dcl 3-47
SB_segdamage_data_class                internal static varying char(16)         initial dcl 3-21
SB_unused_10                           internal static fixed bin(17,0)          initial dcl 3-47
SB_unused_12                           internal static fixed bin(17,0)          initial dcl 3-47
SB_unused_14                           internal static fixed bin(17,0)          initial dcl 3-47
SB_unused_15                           internal static fixed bin(17,0)          initial dcl 3-47
SB_unused_18                           internal static fixed bin(17,0)          initial dcl 3-47
SB_unused_4                            internal static fixed bin(17,0)          initial dcl 3-47
SB_unused_6                            internal static fixed bin(17,0)          initial dcl 3-47
SB_unused_7                            internal static fixed bin(17,0)          initial dcl 3-47
SB_unused_8                            internal static fixed bin(17,0)          initial dcl 3-47
SB_unused_9                            internal static fixed bin(17,0)          initial dcl 3-47
SB_verify_lock                         internal static fixed bin(17,0)          initial dcl 3-47
SB_voldamage_data_class                internal static varying char(16)         initial dcl 3-21
SB_vtoc_salv_dam                       internal static fixed bin(17,0)          initial dcl 3-47
SB_vtoce                               internal static fixed bin(17,0)          initial dcl 3-47
SB_vtoce_data_class                    internal static varying char(16)         initial dcl 3-21
SB_zerpag                              internal static fixed bin(17,0)          initial dcl 3-47
address_table                          based           char(1)                  array unaligned dcl 4-89
display_cpu_error_binary_defs          internal static fixed bin(17,0)          initial array dcl 3-144
ibm3270_meter_struc                    based           structure                level 1 dcl 5-7
log_message_data_class_lth             automatic       fixed bin(17,0)          dcl 1-21
log_message_data_lth                   automatic       fixed bin(17,0)          dcl 1-22
log_message_format                     based           structure                level 1 dcl 2-3
log_message_format_ptr                 automatic       pointer                  dcl 2-30
log_message_text_lth                   automatic       fixed bin(17,0)          dcl 1-20
md                                     based           structure                level 1 dcl 4-9
md_nchan                               automatic       fixed bin(17,0)          dcl 4-7
mdp                                    automatic       pointer                  dcl 4-6
meter_ptr                              automatic       pointer                  dcl 5-28
syserr_binary_address_damage_mask      internal static bit(36)                  initial unaligned dcl 3-142
syserr_binary_mos_mask                 internal static bit(36)                  initial unaligned dcl 3-139
syserr_binary_seg_damage_mask          internal static bit(36)                  initial unaligned dcl 3-140
syserr_binary_vol_damage_mask          internal static bit(36)                  initial unaligned dcl 3-141

NAMES DECLARED BY EXPLICIT CONTEXT.
expand_ibm3270_mde              000410 constant        entry                    internal dcl 68 ref 42 60
expand_ibm3270_mde_msg_         000176 constant        entry                    external dcl 9
expand_ibm3270_mde_msg_$format  000211 constant        entry                    external dcl 35
expand_ibm3270_mde_msg_$syserr  000305 constant        entry                    external dcl 53

THERE WERE NO NAMES DECLARED BY CONTEXT OR IMPLICATION.

STORAGE REQUIREMENTS FOR THIS PROGRAM.

	Object	Text	Link	Symbol	Defs	Static
Start          0       0      1146        1164    1026        1156
Length      1452    1026        16         252     117           0

BLOCK NAME	         STACK SIZE     TYPE		WHY NONQUICK/WHO SHARES STACK FRAME
expand_ibm3270_mde_msg_             822 external procedure  is an external procedure.  
expand_ibm3270_mde                      internal procedure  shares stack frame of external procedure expand_ibm3270_mde_msg_.  

STORAGE FOR AUTOMATIC VARIABLES.

STACK FRAME                 LOC IDENTIFIER                  BLOCK NAME
expand_ibm3270_mde_msg_  000100 temp                        expand_ibm3270_mde_msg_
                         001066 log_message_ptr             expand_ibm3270_mde_msg_
                         001070 mdep                        expand_ibm3270_mde_msg_

THE FOLLOWING EXTERNAL OPERATORS ARE USED BY THIS PROGRAM.
call_ext_out_desc   return              ext_entry           ext_entry_desc

THE FOLLOWING EXTERNAL ENTRIES ARE CALLED BY THIS PROGRAM.
expand_log_message_$unknown   expand_log_message_$unknown_syserr                          ioa_$rsnnl

NO EXTERNAL VARIABLES ARE USED BY THIS PROGRAM.




   LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC   
      9 000175        35 000203        38 000224        40 000230        42 000244        44 000253        47 000302
     53 000303        56 000320        58 000324        60 000340        63 000357        66 000407        68 000410
     72 000411        74 000453        75 000467        77 000527        78 000543        80 000603        81 000617
     83 000702        84 000716        87 001011        89 001025


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
