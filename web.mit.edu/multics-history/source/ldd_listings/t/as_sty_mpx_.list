	COMPILATION LISTING OF SEGMENT as_sty_mpx_
	Compiled by: Multics PL/I Compiler, Release 27d, of October 11, 1982
	Compiled at: Honeywell LISD Phoenix, System M
	Compiled on: 11/15/82  1555.7 mst Mon
	    Options: optimize map

        1 /* ***********************************************************
        2*   *                                                         *
        3*   * Copyright, (C) Honeywell Information Systems Inc., 1982 *
        4*   *                                                         *
        5*   * Copyright (c) 1972 by Massachusetts Institute of        *
        6*   * Technology and Honeywell Information Systems, Inc.      *
        7*   *                                                         *
        8*   *********************************************************** */
        9 
       10 
       11 as_sty_mpx_:
       12      procedure;
       13 
       14 /* AS interface for Pseudo-Terminal Multiplexer */
       15 /* Written By C. Hornig, July 1979 */
       16 
       17 declare (
       18         (Cdtp, Cdtep, Cdt_listp) pointer,
       19         Mpx_name character (*),
       20         Mpx_error variable entry (fixed bin, fixed bin, character (*), character (*), character (*), character (*)),
       21         Check_sw bit aligned,
       22         Code fixed bin (35)
       23         ) parameter;
       24 
       25 declare multiplexer_mgr_$mpx_loaded entry (character (*), fixed bin (35));
       26 
       27 dcl addr builtin;
       28 
       29 /* * * * * * * * * * STY_CV_CMF * * * * * * * * * */
       30 
       31 pty_cv_cmf:
       32 sty_cv_cmf:
       33      entry (Cdtp, Cdtep, Mpx_name, Cdt_listp, Mpx_error);
       34 
       35 	return;
       36 
       37 /* * * * * * * * * * STY_LOAD  * * * * * * * * * */
       38 
       39 pty_load:
       40 sty_load:
       41      entry (Mpx_name, Cdtp, Cdtep, Cdt_listp, Check_sw, Code);
       42 
       43 	Code = 0;
       44 	call multiplexer_mgr_$mpx_loaded (Mpx_name, Code);
       45 	return;
       46 
       47 /* * * * * * * * * * STY_DUMP * * * * * * * * * */
       48 
       49 pty_dump:
       50 sty_dump:
       51      entry (Mpx_name, Cdtp, Cdtep, Code);
       52 
       53 	Code = 0;
       54 	return;
       55 
       56 /* * * * * * * * * * STY_DUMP_ * * * * * * * * * */
       57 
       58 pty_dump_:
       59 sty_dump_:
       60      entry (Ttybp, Areap, Dp, Sc, Brief);
       61 
       62 declare (Ttybp, Areap, Dp) pointer parameter;
       63 declare Sc fixed bin parameter;
       64 declare Brief bit aligned parameter;
       65 
       66 declare (
       67         ioa_,
       68         ioa_$nnl
       69         ) entry options (variable);
       70 declare tty_dump$print_chain entry (ptr, char (*), fixed bin, bit (1));
       71 
       72 declare 1 pd aligned based (pdp),
       73 	2 lctep pointer,
       74 	2 devx fixed bin,				/* my devx */
       75 	2 nchan fixed bin,
       76 	2 pdes (pd_nchan refer (pd.nchan)) like pde;
       77 
       78 declare 1 pde aligned based (pdep),			/* for each STY channel */
       79 	2 my,
       80 	  3 lctep pointer,				/* pointer to LCT entry */
       81 	  3 devx fixed bin,				/* this channel's devx */
       82 	  3 sc fixed bin,
       83 	2 her aligned like pde.my,			/* same stuff for spouse */
       84 	2 flags unaligned,
       85 	  3 listen bit,
       86 	2 words unsigned fixed bin (18),
       87 	2 (head, tail) unsigned fixed bin (18) unaligned;
       88 
       89 dcl (pdp, pdep) pointer;
       90 
       91 	pdp = Dp;
       92 	if Sc > 0
       93 	then call print_entry (Sc);
       94 	else do;
       95 	     call ioa_ ("STY MPX devx ^o, ^d channels.", pd.devx, pd.nchan);
       96 	     end;
       97 	call ioa_ ("");
       98 	return;
       99 
      100 print_entry:
      101      proc (Sc);
      102 declare Sc fixed bin;
      103 
      104 	pdep = addr (pd.pdes (Sc));
      105 	call ioa_$nnl ("^/^d(^o) -> ^d(^o): ^d words^[ listening^].", pde.my.sc, pde.my.devx, pde.her.sc, pde.her.devx,
      106 	     pde.words, pde.flags.listen);
      107 	call tty_dump$print_chain (Ttybp, "", (pde.head), (Brief));
      108      end;
      109      end as_sty_mpx_;
	SOURCE FILES USED IN THIS COMPILATION.

LINE      NUMBER  DATE MODIFIED     NAME			PATHNAME
             0    11/15/82  1458.0  as_sty_mpx_.pl1                   >dumps>old>recomp>as_sty_mpx_.pl1
	NAMES DECLARED IN THIS COMPILATION.

IDENTIFIER	     OFFSET    LOC STORAGE CLASS   DATA TYPE		ATTRIBUTES AND REFERENCES
								(* indicates a set context)

NAMES DECLARED BY DECLARE STATEMENT.
Areap                                  parameter       pointer                  dcl 62 ref 58 58
Brief                                  parameter       bit(1)                   dcl 64 ref 58 58 107
Cdt_listp                              parameter       pointer                  dcl 17 ref 31 31 39 39
Cdtep                                  parameter       pointer                  dcl 17 ref 31 31 39 39 49 49
Cdtp                                   parameter       pointer                  dcl 17 ref 31 31 39 39 49 49
Check_sw                               parameter       bit(1)                   dcl 17 ref 39 39
Code                                   parameter       fixed bin(35,0)          dcl 17 set ref 39 39 43* 44* 49 49 53*
Dp                                     parameter       pointer                  dcl 62 ref 58 58 91
Mpx_error                              parameter       entry variable           dcl 17 ref 31 31
Mpx_name                               parameter       char                     unaligned dcl 17 set ref 31 31 39 39 44* 49 49
Sc                                     parameter       fixed bin(17,0)          dcl 63 in procedure "as_sty_mpx_" set ref 58 58 92
                                                                                  92*
Sc                                     parameter       fixed bin(17,0)          dcl 102 in procedure "print_entry" ref 100 104
Ttybp                                  parameter       pointer                  dcl 62 set ref 58 58 107*
addr                                                   builtin function         dcl 27 ref 104
devx                      6            based           fixed bin(17,0)          level 3 in structure "pde" dcl 78 in procedure
                                                                                  "as_sty_mpx_" set ref 105*
devx                      2            based           fixed bin(17,0)          level 2 in structure "pd" dcl 72 in procedure
                                                                                  "as_sty_mpx_" set ref 95*
devx                      2            based           fixed bin(17,0)          level 3 in structure "pde" dcl 78 in procedure
                                                                                  "as_sty_mpx_" set ref 105*
flags                    10            based           structure                level 2 packed unaligned dcl 78
head                     12            based           fixed bin(18,0)          level 2 packed unsigned unaligned dcl 78 ref 107
her                       4            based           structure                level 2 dcl 78
ioa_                            000012 constant        entry                    external dcl 66 ref 95 97
ioa_$nnl                        000014 constant        entry                    external dcl 66 ref 105
listen                   10            based           bit(1)                   level 3 packed unaligned dcl 78 set ref 105*
multiplexer_mgr_$mpx_loaded     000010 constant        entry                    external dcl 25 ref 44
my                                     based           structure                level 2 in structure "pde" dcl 78 in procedure
                                                                                  "as_sty_mpx_"
my                        4            based           structure                array level 3 in structure "pd" dcl 72 in procedure
                                                                                  "as_sty_mpx_"
nchan                     3            based           fixed bin(17,0)          level 2 dcl 72 set ref 95*
pd                                     based           structure                level 1 dcl 72
pde                                    based           structure                level 1 dcl 78
pdep                            000102 automatic       pointer                  dcl 89 set ref 104* 105 105 105 105 105 105 107
pdes                      4            based           structure                array level 2 dcl 72 set ref 104
pdp                             000100 automatic       pointer                  dcl 89 set ref 91* 95 95 104
sc                        3            based           fixed bin(17,0)          level 3 in structure "pde" dcl 78 in procedure
                                                                                  "as_sty_mpx_" set ref 105*
sc                        7            based           fixed bin(17,0)          level 3 in structure "pde" dcl 78 in procedure
                                                                                  "as_sty_mpx_" set ref 105*
tty_dump$print_chain            000016 constant        entry                    external dcl 70 ref 107
words                    11            based           fixed bin(18,0)          level 2 unsigned dcl 78 set ref 105*

NAMES DECLARED BY EXPLICIT CONTEXT.
as_sty_mpx_                     000037 constant        entry                    external dcl 11
print_entry                     000356 constant        entry                    internal dcl 100 ref 92
pty_cv_cmf                      000074 constant        entry                    external dcl 31
pty_dump                        000237 constant        entry                    external dcl 49
pty_dump_                       000277 constant        entry                    external dcl 58
pty_load                        000146 constant        entry                    external dcl 39
sty_cv_cmf                      000052 constant        entry                    external dcl 31
sty_dump                        000213 constant        entry                    external dcl 49
sty_dump_                       000267 constant        entry                    external dcl 58
sty_load                        000122 constant        entry                    external dcl 39

THERE WERE NO NAMES DECLARED BY CONTEXT OR IMPLICATION.

STORAGE REQUIREMENTS FOR THIS PROGRAM.

	Object	Text	Link	Symbol	Defs	Static
Start          0       0       626         646     464         636
Length      1032     464        20         150     141           0

BLOCK NAME	         STACK SIZE     TYPE		WHY NONQUICK/WHO SHARES STACK FRAME
as_sty_mpx_                         153 external procedure  is an external procedure.  
print_entry                             internal procedure  shares stack frame of external procedure as_sty_mpx_.  

STORAGE FOR AUTOMATIC VARIABLES.

STACK FRAME                 LOC IDENTIFIER                  BLOCK NAME
as_sty_mpx_              000100 pdp                         as_sty_mpx_
                         000102 pdep                        as_sty_mpx_

THE FOLLOWING EXTERNAL OPERATORS ARE USED BY THIS PROGRAM.
call_ext_out_desc   return              ext_entry           ext_entry_desc

THE FOLLOWING EXTERNAL ENTRIES ARE CALLED BY THIS PROGRAM.
ioa_                          ioa_$nnl                      multiplexer_mgr_$mpx_loaded   tty_dump$print_chain

NO EXTERNAL VARIABLES ARE USED BY THIS PROGRAM.




   LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC   
     11 000036        31 000044        35 000113        39 000114        43 000167        44 000170        45 000205
     49 000206        53 000260        54 000261        58 000262        91 000304        92 000310        95 000321
     97 000344        98 000355       100 000356       104 000360       105 000365       107 000426       108 000463


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
