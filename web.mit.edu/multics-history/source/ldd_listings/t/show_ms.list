	COMPILATION LISTING OF SEGMENT show_ms
	Compiled by: Multics PL/I Compiler, Release 27d, of October 11, 1982
	Compiled at: Honeywell LISD Phoenix, System M
	Compiled on: 11/15/82  1625.6 mst Mon
	    Options: optimize map

        1 /* ***********************************************************
        2*   *                                                         *
        3*   * Copyright, (C) Honeywell Information Systems Inc., 1982 *
        4*   *                                                         *
        5*   * Copyright (c) 1972 by Massachusetts Institute of        *
        6*   * Technology and Honeywell Information Systems, Inc.      *
        7*   *                                                         *
        8*   *********************************************************** */
        9 
       10 
       11 show_ms:	proc;
       12 
       13 dcl	(i,n) fixed bin,
       14 	p ptr unal,
       15 	lword char(8),
       16 	ioa_ entry options(variable);
       17 
       18 dcl	(abs,null) builtin;
       19 
       20 
  1     1 /* BEGIN INCLUDE FILE ... machine_state.incl.pl1 */
  1     2 
  1     3 dcl	cg_static_$m_s_p ptr ext static,
  1     4 	m_s_p ptr init(cg_static_$m_s_p);
  1     5 
  1     6 dcl	1 machine_state	aligned based(m_s_p),
  1     7 	2 node_type	bit(9),
  1     8 	2 indicators	fixed bin,
  1     9 	2 next		ptr unal,
  1    10 	2 a_reg,
  1    11 	  3 variable(10)	ptr unal,
  1    12 	  3 number	fixed bin(17),
  1    13 	  3 size		fixed bin(8),
  1    14 	  3 length	fixed bin(8),
  1    15 	  3 offset	fixed bin(8),
  1    16 	  3 constant	fixed bin(24),
  1    17 	  3 changed	fixed bin(18),
  1    18 	  3 instruction	bit(36),
  1    19 	  3 locked	bit(1) aligned,
  1    20 	  3 number_h_o	fixed bin,
  1    21 	  3 has_offset(3)	ptr unal,
  1    22 	2 q_reg,
  1    23 	  3 variable(10)	ptr unal,
  1    24 	  3 number	fixed bin(17),
  1    25 	  3 size		fixed bin(8),
  1    26 	  3 length	fixed bin(8),
  1    27 	  3 offset	fixed bin(8),
  1    28 	  3 constant	fixed bin(24),
  1    29 	  3 changed	fixed bin(18),
  1    30 	  3 instruction	bit(36),
  1    31 	  3 locked	bit(1) aligned,
  1    32 	  3 number_h_o	fixed bin,
  1    33 	  3 has_offset(3)	ptr unal,
  1    34 	2 string_reg,
  1    35 	  3 variable	ptr unal,
  1    36 	  3 size		fixed bin(8),
  1    37 	  3 offset	fixed bin(8),
  1    38 	2 complex_reg,
  1    39 	  3 variable	ptr unal,
  1    40 	  3 size		fixed bin(8),
  1    41 	  3 scale		fixed bin(8),
  1    42 	2 decimal_reg,
  1    43 	  3 variable	ptr unal,
  1    44 	  3 size		fixed bin(8),
  1    45 	  3 scale		fixed bin(8),
  1    46 	2 index_regs(0:7),
  1    47 	  3 variable	ptr unal,
  1    48 	  3 constant	fixed bin,
  1    49 	  3 type		fixed bin(8),
  1    50 	  3 used		fixed bin(18),
  1    51 	  3 changed	fixed bin(18),
  1    52 	  3 instruction	bit(36),
  1    53 	  3 filler	fixed bin,
  1    54 	2 base_regs(0:7),
  1    55 	  3 variable	ptr unal,
  1    56 	  3 constant	fixed bin,
  1    57 	  3 type		fixed bin(8),
  1    58 	  3 pad (12)	fixed bin,	/* future...room to make 5 element array for variable, constant, type */
  1    59 	  3 number	fixed bin (17),	/* future...number of valid elements in array */
  1    60 	  3 used		fixed bin(18),
  1    61 	  3 changed	fixed bin(18),
  1    62 	  3 instruction	bit(36),
  1    63 	  3 locked	fixed bin(2),
  1    64 	2 indicators_ref(2:3) ptr unal;
  1    65 
  1    66 /* Permissible values for machine_state.indicators. */
  1    67 
  1    68 dcl (	ind_known_refs	init (-2),		/* set by comparison of known, nonzero, references */
  1    69 	ind_invalid	init (-1),
  1    70 	ind_string_aq	init (0),			/* logical value in storage */
  1    71 	ind_logical	init (1),			/* logical value in A or AQ */
  1    72 	ind_arithmetic	init (2),			/* arith value in Q, AQ, or EAQ */
  1    73 	ind_x (0:7)	init (6, 7, 8, 9, 10, 11, 12, 13),
  1    74 	ind_decimal_reg	init (14)
  1    75 	) fixed bin internal static options (constant);
  1    76 
  1    77 /* END INCLUDE FILE ... machine_state.incl.pl1 */
       21 
       22 
       23 show:	if m_s_p = null
       24 	then do;
       25 	     call ioa_("Machine state pointer is null");
       26 	     return;
       27 	     end;
       28 
       29 	call ioa_("MACHINE STATE ^p: indicators = ^d, next = ^p",m_s_p,indicators,next);
       30 
       31 	if indicators = -2
       32 	then do;
       33 	     call ioa_("^/INDICATOR REFERENCES:");
       34 	     call prt(indicators_ref(2));
       35 	     call prt(indicators_ref(3));
       36 	     end;
       37 
       38 	if a_reg.number ^= 0
       39 	then do;
       40 	     call ioa_("^/A REGISTER: # = ^d, size = ^d, length = ^d, offset = ^d, constant = ^d",
       41 	      a_reg.number,a_reg.size,a_reg.length,a_reg.offset,a_reg.constant);
       42 	     call ioa_("changed by ^12w at ^o",a_reg.instruction,a_reg.changed);
       43 
       44 	     do i = 1 to a_reg.number;
       45 		call prt(a_reg.variable(i));
       46 		end;
       47 
       48 	     if a_reg.locked
       49 	     then do;
       50 		call ioa_("locked");
       51 		if a_reg.number_h_o ^= 0
       52 		then do;
       53 		     call ioa_("has offset of ^d references",a_reg.number_h_o);
       54 		     do i = 1 to a_reg.number_h_o;
       55 			call prt(a_reg.has_offset(i));
       56 			end;
       57 		     end;
       58 		end;
       59 
       60 	     end;
       61 
       62 	if q_reg.number ^= 0
       63 	then do;
       64 	     call ioa_("^/Q REGISTER: # = ^d, size = ^d, length = ^d, offset = ^d, constant = ^d",
       65 	      q_reg.number,q_reg.size,q_reg.length,q_reg.offset,q_reg.constant);
       66 	     call ioa_("changed by ^12w at ^o",q_reg.instruction,q_reg.changed);
       67 
       68 	     do i = 1 to q_reg.number;
       69 		call prt(q_reg.variable(i));
       70 		end;
       71 
       72 	     if q_reg.locked
       73 	     then do;
       74 		call ioa_("locked");
       75 		if q_reg.number_h_o ^= 0
       76 		then do;
       77 		     call ioa_("has offset of ^d references",q_reg.number_h_o);
       78 		     do i = 1 to q_reg.number_h_o;
       79 			call prt(q_reg.has_offset(i));
       80 			end;
       81 		     end;
       82 		end;
       83 
       84 	     end;
       85 
       86 	p = string_reg.variable;
       87 	if p ^= null
       88 	then do;
       89 	     call ioa_("^/STRING REGISTER: size = ^d, offset = ^d",string_reg.size,string_reg.offset);
       90 	     call prt(p);
       91 	     end;
       92 
       93 	p = complex_reg.variable;
       94 	if p ^= null
       95 	then do;
       96 	     call ioa_("^/COMPLEX REGISTER: size = ^d, scale = ^d",complex_reg.size,complex_reg.scale);
       97 	     call prt(p);
       98 	     end;
       99 
      100 	p = decimal_reg.variable;
      101 	if p ^= null
      102 	then do;
      103 	     call ioa_("^/DECIMAL REGISTER: size = ^d, scale = ^d",decimal_reg.size,decimal_reg.scale);
      104 	     call prt(p);
      105 	     end;
      106 
      107 	do i = 0 to 7;
      108 	     n = index_regs(i).type;
      109 	     if n ^= 0
      110 	     then do;
      111 		call ioa_("^/INDEX REGISTER ^d: type = ^d, constant = ^o",i,
      112 		 n,index_regs(i).constant);
      113 		call ioa_("used at ^o, changed by ^12w at ^o",index_regs(i).used,
      114 		 index_regs(i).instruction,index_regs(i).changed);
      115 		if abs(n) >= 2 then call prt(index_regs(i).variable);
      116 		end;
      117 	     end;
      118 
      119 	do i = 1 to 6;
      120 	     n = base_regs(i).type;
      121 	     if n ^= 0
      122 	     then do;
      123 		call ioa_("^/BASE REGISTER ^d: type = ^d, constant = ^o",i,
      124 		 n,base_regs(i).constant);
      125 		call ioa_("used at ^o, changed by ^12w at ^o",base_regs(i).used,
      126 		 base_regs(i).instruction,base_regs(i).changed);
      127 		p = base_regs(i).variable;
      128 		if n < 3 then call prt(p);
      129 		else if substr("110001101100"b,n,1)
      130 		     then call ioa_("variable is ^p",p);
      131 		if base_regs(i).locked ^= 0
      132 		     then call ioa_("locked = ^d",base_regs(i).locked);
      133 		end;
      134 
      135 	     end;
      136 
      137 	call ioa_("^/END MACHINE STATE ^p^/",m_s_p);
      138 	return;
      139 
      140 show_ms$pt: entry(pt);
      141 
      142 dcl	pt ptr;
      143 
      144 	m_s_p = pt;
      145 	goto show;
      146 
      147 prt:	     proc(q);
      148 
  2     1 /* BEGIN INCLUDE FILE ... reference.incl.pl1 */
  2     2 
  2     3 dcl	1 reference		based aligned,
  2     4 	2 node_type		bit(9) unaligned,
  2     5 	2 array_ref		bit(1) unaligned,
  2     6 	2 varying_ref		bit(1) unaligned,
  2     7 	2 shared			bit(1) unaligned,
  2     8 	2 put_data_sw		bit(1) unaligned,
  2     9 	2 processed		bit(1) unaligned,
  2    10 	2 units			fixed(3) unaligned,
  2    11 	2 ref_count		fixed(17) unaligned,
  2    12 	2 c_offset		fixed(24),
  2    13 	2 c_length		fixed(24),
  2    14 	2 symbol			ptr unaligned,
  2    15 	2 qualifier		ptr unaligned,
  2    16 	2 offset			ptr unaligned,
  2    17 	2 length			ptr unaligned,
  2    18 	2 subscript_list		ptr unaligned,
  2    19 						/* these fields are used by the 645 code generator */
  2    20 	2 address			structure unaligned,
  2    21 	  3 base			bit(3),
  2    22 	  3 offset		bit(15),
  2    23 	  3 op			bit(9),
  2    24 	  3 no_address		bit(1),
  2    25 	  3 inhibit		bit(1),
  2    26 	  3 ext_base		bit(1),
  2    27 	  3 tag			bit(6),
  2    28 	2 info			structure unaligned,
  2    29 	  3 address_in		structure,
  2    30 	    4 b			dimension(0:7) bit(1),
  2    31 	    4 storage		bit(1),
  2    32 	  3 value_in		structure,
  2    33 	    4 a			bit(1),
  2    34 	    4 q			bit(1),
  2    35 	    4 aq			bit(1),
  2    36 	    4 string_aq		bit(1),
  2    37 	    4 complex_aq		bit(1),
  2    38 	    4 decimal_aq		bit(1),
  2    39 	    4 b			dimension(0:7) bit(1),
  2    40 	    4 storage		bit(1),
  2    41 	    4 indicators		bit(1),
  2    42 	    4 x			dimension(0:7) bit(1),
  2    43 	  3 other			structure,
  2    44 	    4 big_offset		bit(1),
  2    45 	    4 big_length		bit(1),
  2    46 	    4 modword_in_offset	bit(1),
  2    47 	2 data_type		fixed(5) unaligned,
  2    48 	2 bits			structure unaligned,
  2    49 	  3 padded_ref		bit(1),
  2    50 	  3 aligned_ref		bit(1),
  2    51 	  3 long_ref		bit(1),
  2    52 	  3 forward_ref		bit(1),
  2    53 	  3 ic_ref		bit(1),
  2    54 	  3 temp_ref		bit(1),
  2    55 	  3 defined_ref		bit(1),
  2    56 	  3 evaluated		bit(1),
  2    57 	  3 allocate		bit(1),
  2    58 	  3 allocated		bit(1),
  2    59 	  3 aliasable		bit(1),
  2    60 	  3 even			bit(1),
  2    61 	  3 perm_address		bit(1),
  2    62 	  3 aggregate		bit(1),
  2    63 	  3 hit_zero		bit(1),
  2    64 	  3 dont_save		bit(1),
  2    65 	  3 fo_in_qual		bit(1),
  2    66 	  3 hard_to_load		bit(1),
  2    67 	2 relocation		bit(12) unaligned,
  2    68 	2 more_bits		structure unaligned,
  2    69 	  3 substr		bit(1),
  2    70 	  3 padded_for_store_ref	bit(1),
  2    71 	  3 aligned_for_store_ref	bit(1),
  2    72 	  3 mbz			bit(15),
  2    73 	2 store_ins		bit(18) unaligned;
  2    74 
  2    75 /* END INCLUDE FILE ... reference.incl.pl1 */
      149 
  3     1 /* BEGIN INCLUDE FILE ... symbol.incl.pl1 */
  3     2 
  3     3 dcl	1 symbol			based aligned,
  3     4 	2 node_type		bit(9) unal,
  3     5 	2 source_id		structure unal,
  3     6 	  3 file_number		bit(8),
  3     7 	  3 line_number		bit(14),
  3     8 	  3 statement_number	bit(5),
  3     9 	2 location		fixed(18) unal unsigned,
  3    10 	2 allocated		bit(1) unal,
  3    11 	2 dcl_type		bit(3) unal,
  3    12 	2 reserved		bit(6) unal,
  3    13 	2 pix			unal,
  3    14 	  3 pic_fixed		bit(1) unal,
  3    15 	  3 pic_float		bit(1) unal,
  3    16 	  3 pic_char		bit(1) unal,
  3    17 	  3 pic_scale		fixed(7) unal,
  3    18 	  3 pic_size		fixed(7) unal,
  3    19 	2 level			fixed(8) unal,
  3    20 	2 boundary		fixed(3) unal,
  3    21 	2 size_units		fixed(3) unal,
  3    22 	2 scale			fixed(7) unal,
  3    23 	2 runtime			bit(18) unal,
  3    24 	2 runtime_offset		bit(18) unal,
  3    25 	2 block_node		ptr unal,
  3    26 	2 token			ptr unal,
  3    27 	2 next			ptr unal,
  3    28 	2 multi_use		ptr unal,
  3    29 	2 cross_references		ptr unal,
  3    30 	2 initial			ptr unal,
  3    31 	2 array			ptr unal,
  3    32 	2 descriptor		ptr unal,
  3    33 	2 equivalence		ptr unal,
  3    34 	2 reference		ptr unal,
  3    35 	2 general			ptr unal,
  3    36 	2 father			ptr unal,
  3    37 	2 brother			ptr unal,
  3    38 	2 son			ptr unal,
  3    39 	2 word_size		ptr unal,
  3    40 	2 bit_size		ptr unal,
  3    41 	2 dcl_size		ptr unal,
  3    42 	2 symtab_size		ptr unal,
  3    43 	2 c_word_size		fixed(24),
  3    44 	2 c_bit_size		fixed(24),
  3    45 	2 c_dcl_size		fixed(24),
  3    46 
  3    47 	2 attributes		structure aligned,
  3    48 	  3 data_type		structure unal,
  3    49 	    4 structure		bit(1) ,
  3    50 	    4 fixed		bit(1),
  3    51 	    4 float		bit(1),
  3    52 	    4 bit			bit(1),
  3    53 	    4 char		bit(1),
  3    54 	    4 ptr			bit(1),
  3    55 	    4 offset		bit(1),
  3    56 	    4 area		bit(1),
  3    57 	    4 label		bit(1),
  3    58 	    4 entry		bit(1),
  3    59 	    4 file		bit(1),
  3    60 	    4 arg_descriptor	bit(1),
  3    61 	    4 storage_block		bit(1),
  3    62 	    4 unused_1		bit(1),
  3    63 	    4 condition		bit(1),
  3    64 	    4 format		bit(1),
  3    65 	    4 builtin		bit(1),
  3    66 	    4 generic		bit(1),
  3    67 	    4 picture		bit(1),
  3    68 
  3    69 	  3 misc_attributes		structure unal,
  3    70 	    4 dimensioned		bit(1),
  3    71 	    4 initialed		bit(1),
  3    72 	    4 aligned		bit(1),
  3    73 	    4 unaligned		bit(1),
  3    74 	    4 signed		bit(1),
  3    75 	    4 unsigned		bit(1),
  3    76 	    4 precision		bit(1),
  3    77 	    4 varying		bit(1),
  3    78 	    4 local		bit(1),
  3    79 	    4 decimal		bit(1),
  3    80 	    4 binary		bit(1),
  3    81 	    4 real		bit(1),
  3    82 	    4 complex		bit(1),
  3    83 	    4 variable		bit(1),
  3    84 	    4 reducible		bit(1),
  3    85 	    4 irreducible		bit(1),
  3    86 	    4 returns		bit(1),
  3    87 	    4 position		bit(1),
  3    88 	    4 internal		bit(1),
  3    89 	    4 external		bit(1),
  3    90 	    4 like		bit(1),
  3    91 	    4 member		bit(1),
  3    92 	    4 non_varying		bit(1),
  3    93 	    4 options		bit(1),
  3    94 	    4 variable_arg_list 	bit(1),		/* options(variable) */
  3    95 	    4 alloc_in_text		bit(1),		/* options(constant) */
  3    96 
  3    97 	  3 storage_class		structure unal,
  3    98 	    4 auto		bit(1),
  3    99 	    4 based		bit(1),
  3   100 	    4 static		bit(1),
  3   101 	    4 controlled		bit(1),
  3   102 	    4 defined		bit(1),
  3   103 	    4 parameter		bit(1),
  3   104 	    4 param_desc		bit(1),
  3   105 	    4 constant		bit(1),
  3   106 	    4 temporary		bit(1),
  3   107 	    4 return_value		bit(1),
  3   108 
  3   109 	  3 file_attributes		structure unal,
  3   110 	    4 print		bit(1),
  3   111 	    4 input		bit(1),
  3   112 	    4 output		bit(1),
  3   113 	    4 update		bit(1),
  3   114 	    4 stream		bit(1),
  3   115 	    4 reserved_1		bit(1),
  3   116 	    4 record		bit(1),
  3   117 	    4 sequential		bit(1),
  3   118 	    4 direct		bit(1),
  3   119 	    4 interactive		bit(1),		/* env(interactive) */
  3   120 	    4 reserved_2		bit(1),
  3   121 	    4 reserved_3		bit(1),
  3   122 	    4 stringvalue		bit(1),		/* env(stringvalue) */
  3   123 	    4 keyed		bit(1),
  3   124 	    4 reserved_4		bit(1),
  3   125 	    4 environment		bit(1),
  3   126 
  3   127 	  3 compiler_developed	structure unal,
  3   128 	    4 aliasable		bit(1),
  3   129 	    4 packed		bit(1),
  3   130 	    4 passed_as_arg		bit(1),
  3   131 	    4 allocate		bit(1),
  3   132 	    4 set			bit(1),
  3   133 	    4 exp_extents		bit(1),
  3   134 	    4 refer_extents		bit(1),
  3   135 	    4 star_extents		bit(1),
  3   136 	    4 isub		bit(1),
  3   137 	    4 put_in_symtab		bit(1),
  3   138 	    4 contiguous		bit(1),
  3   139 	    4 put_data		bit(1),
  3   140 	    4 overlayed		bit(1),
  3   141 	    4 error		bit(1),
  3   142 	    4 symtab_processed	bit(1),
  3   143 	    4 overlayed_by_builtin	bit(1),
  3   144 	    4 defaulted		bit(1),
  3   145 	    4 connected		bit(1);
  3   146 
  3   147 /* END INCLUDE FILE ... symbol.incl.pl1 */
      150 
  4     1 /* BEGIN INCLUDE FILE ... token.incl.pl1 */
  4     2 
  4     3 dcl	1 token			based aligned,
  4     4 	2 node_type		bit(9) unaligned,
  4     5 	2 type			bit(9) unaligned,
  4     6 	2 loc			bit(18) unaligned,	/* symtab offset for identifiers, "p" flag for constants */
  4     7 	2 declaration		ptr unaligned,
  4     8 	2 next			ptr unaligned,
  4     9 	2 size			fixed(9),
  4    10 	2 string			char(n refer(token.size));
  4    11 
  4    12 /* END INCLUDE FILE ... token.incl.pl1 */
      151 
      152 
      153 dcl	     (q,t) ptr unal;
      154 
      155 	     if q = null then return;
      156 
      157 	     t = q -> reference.symbol -> symbol.token;
      158 	     if q -> reference.shared then call ioa_("variable ^p is ^a",q,t -> token.string);
      159 	     else call ioa_("variable ^p is ^a, ref count = ^d",q,t -> token.string,q -> ref_count);
      160 
      161 	     end;
      162 
      163 	end;
	SOURCE FILES USED IN THIS COMPILATION.

LINE      NUMBER  DATE MODIFIED     NAME			PATHNAME
             0    11/15/82  1503.8  show_ms.pl1                       >dumps>old>recomp>show_ms.pl1
21           1    11/13/79  1015.8  machine_state.incl.pl1            >ldd>include>machine_state.incl.pl1
149          2    07/21/80  1546.3  reference.incl.pl1                >ldd>include>reference.incl.pl1
150          3    07/21/80  1546.3  symbol.incl.pl1                   >ldd>include>symbol.incl.pl1
151          4    09/14/77  1705.7  token.incl.pl1                    >ldd>include>token.incl.pl1
	NAMES DECLARED IN THIS COMPILATION.

IDENTIFIER	     OFFSET    LOC STORAGE CLASS   DATA TYPE		ATTRIBUTES AND REFERENCES
								(* indicates a set context)

NAMES DECLARED BY DECLARE STATEMENT.
a_reg                     3            based           structure                level 2 dcl 1-6
abs                                                    builtin function         dcl 18 ref 115
base_regs               160            based           structure                array level 2 dcl 1-6
cg_static_$m_s_p                000012 external static pointer                  dcl 1-3 ref 1-3
changed                 201            based           fixed bin(18,0)          array level 3 in structure "machine_state" dcl 1-6
                                                                                  in procedure "show_ms" set ref 125*
changed                  50            based           fixed bin(18,0)          level 3 in structure "machine_state" dcl 1-6
                                                                                  in procedure "show_ms" set ref 66*
changed                  22            based           fixed bin(18,0)          level 3 in structure "machine_state" dcl 1-6
                                                                                  in procedure "show_ms" set ref 42*
changed                  74            based           fixed bin(18,0)          array level 3 in structure "machine_state" dcl 1-6
                                                                                  in procedure "show_ms" set ref 113*
complex_reg              62            based           structure                level 2 dcl 1-6
constant                 71            based           fixed bin(17,0)          array level 3 in structure "machine_state" dcl 1-6
                                                                                  in procedure "show_ms" set ref 111*
constant                 21            based           fixed bin(24,0)          level 3 in structure "machine_state" dcl 1-6
                                                                                  in procedure "show_ms" set ref 40*
constant                161            based           fixed bin(17,0)          array level 3 in structure "machine_state" dcl 1-6
                                                                                  in procedure "show_ms" set ref 123*
constant                 47            based           fixed bin(24,0)          level 3 in structure "machine_state" dcl 1-6
                                                                                  in procedure "show_ms" set ref 64*
decimal_reg              65            based           structure                level 2 dcl 1-6
has_offset               26            based           pointer                  array level 3 in structure "machine_state" packed
                                                                                  unaligned dcl 1-6 in procedure "show_ms" set ref
                                                                                  55*
has_offset               54            based           pointer                  array level 3 in structure "machine_state" packed
                                                                                  unaligned dcl 1-6 in procedure "show_ms" set ref
                                                                                  79*
i                               000100 automatic       fixed bin(17,0)          dcl 13 set ref 44* 45* 54* 55* 68* 69* 78* 79* 107*
                                                                                  108 111* 111 113 113 113 115* 119* 120 123* 123
                                                                                  125 125 125 127 131 131*
index_regs               70            based           structure                array level 2 dcl 1-6
indicators                1            based           fixed bin(17,0)          level 2 dcl 1-6 set ref 29* 31
indicators_ref          420            based           pointer                  array level 2 packed unaligned dcl 1-6 set ref 34*
                                                                                  35*
instruction              51            based           bit(36)                  level 3 in structure "machine_state" dcl 1-6
                                                                                  in procedure "show_ms" set ref 66*
instruction             202            based           bit(36)                  array level 3 in structure "machine_state" dcl 1-6
                                                                                  in procedure "show_ms" set ref 125*
instruction              23            based           bit(36)                  level 3 in structure "machine_state" dcl 1-6
                                                                                  in procedure "show_ms" set ref 42*
instruction              75            based           bit(36)                  array level 3 in structure "machine_state" dcl 1-6
                                                                                  in procedure "show_ms" set ref 113*
ioa_                            000010 constant        entry                    external dcl 13 ref 25 29 33 40 42 50 53 64 66 74 77
                                                                                  89 96 103 111 113 123 125 129 131 137 158 159
length                   17            based           fixed bin(8,0)           level 3 in structure "machine_state" dcl 1-6
                                                                                  in procedure "show_ms" set ref 40*
length                   45            based           fixed bin(8,0)           level 3 in structure "machine_state" dcl 1-6
                                                                                  in procedure "show_ms" set ref 64*
locked                  203            based           fixed bin(2,0)           array level 3 in structure "machine_state" dcl 1-6
                                                                                  in procedure "show_ms" set ref 131 131*
locked                   52            based           bit(1)                   level 3 in structure "machine_state" dcl 1-6
                                                                                  in procedure "show_ms" ref 72
locked                   24            based           bit(1)                   level 3 in structure "machine_state" dcl 1-6
                                                                                  in procedure "show_ms" ref 48
m_s_p                           000104 automatic       pointer                  initial dcl 1-3 set ref 23 29* 29 29 31 34 35 38 40
                                                                                  40 40 40 40 42 42 44 45 48 51 53 54 55 62 64 64 64
                                                                                  64 64 66 66 68 69 72 75 77 78 79 86 89 89 93 96 96
                                                                                  100 103 103 108 111 113 113 113 115 120 123 125
                                                                                  125 125 127 131 131 137* 144* 1-3*
machine_state                          based           structure                level 1 dcl 1-6
n                               000101 automatic       fixed bin(17,0)          dcl 13 set ref 108* 109 111* 115 120* 121 123* 128
                                                                                  129
next                      2            based           pointer                  level 2 packed unaligned dcl 1-6 set ref 29*
null                                                   builtin function         dcl 18 ref 23 87 94 101 155
number                   15            based           fixed bin(17,0)          level 3 in structure "machine_state" dcl 1-6
                                                                                  in procedure "show_ms" set ref 38 40* 44
number                   43            based           fixed bin(17,0)          level 3 in structure "machine_state" dcl 1-6
                                                                                  in procedure "show_ms" set ref 62 64* 68
number_h_o               53            based           fixed bin(17,0)          level 3 in structure "machine_state" dcl 1-6
                                                                                  in procedure "show_ms" set ref 75 77* 78
number_h_o               25            based           fixed bin(17,0)          level 3 in structure "machine_state" dcl 1-6
                                                                                  in procedure "show_ms" set ref 51 53* 54
offset                   46            based           fixed bin(8,0)           level 3 in structure "machine_state" dcl 1-6
                                                                                  in procedure "show_ms" set ref 64*
offset                   20            based           fixed bin(8,0)           level 3 in structure "machine_state" dcl 1-6
                                                                                  in procedure "show_ms" set ref 40*
offset                   61            based           fixed bin(8,0)           level 3 in structure "machine_state" dcl 1-6
                                                                                  in procedure "show_ms" set ref 89*
p                               000102 automatic       pointer                  unaligned dcl 13 set ref 86* 87 90* 93* 94 97* 100*
                                                                                  101 104* 127* 128* 129*
pt                                     parameter       pointer                  dcl 142 ref 140 144
q                                      parameter       pointer                  unaligned dcl 153 set ref 147 155 157 158 158* 159*
                                                                                  159
q_reg                    31            based           structure                level 2 dcl 1-6
ref_count                 0(18)        based           fixed bin(17,0)          level 2 packed unaligned dcl 2-3 set ref 159*
reference                              based           structure                level 1 dcl 2-3
scale                    64            based           fixed bin(8,0)           level 3 in structure "machine_state" dcl 1-6
                                                                                  in procedure "show_ms" set ref 96*
scale                    67            based           fixed bin(8,0)           level 3 in structure "machine_state" dcl 1-6
                                                                                  in procedure "show_ms" set ref 103*
shared                    0(11)        based           bit(1)                   level 2 packed unaligned dcl 2-3 ref 158
size                     63            based           fixed bin(8,0)           level 3 in structure "machine_state" dcl 1-6
                                                                                  in procedure "show_ms" set ref 96*
size                     16            based           fixed bin(8,0)           level 3 in structure "machine_state" dcl 1-6
                                                                                  in procedure "show_ms" set ref 40*
size                     60            based           fixed bin(8,0)           level 3 in structure "machine_state" dcl 1-6
                                                                                  in procedure "show_ms" set ref 89*
size                     44            based           fixed bin(8,0)           level 3 in structure "machine_state" dcl 1-6
                                                                                  in procedure "show_ms" set ref 64*
size                      3            based           fixed bin(9,0)           level 2 in structure "token" dcl 4-3 in procedure
                                                                                  "prt" ref 158 158 159 159
size                     66            based           fixed bin(8,0)           level 3 in structure "machine_state" dcl 1-6
                                                                                  in procedure "show_ms" set ref 103*
string                    4            based           char                     level 2 dcl 4-3 set ref 158* 159*
string_reg               57            based           structure                level 2 dcl 1-6
symbol                    3            based           pointer                  level 2 in structure "reference" packed unaligned
                                                                                  dcl 2-3 in procedure "prt" ref 157
symbol                                 based           structure                level 1 dcl 3-3 in procedure "prt"
t                               000120 automatic       pointer                  unaligned dcl 153 set ref 157* 158 159
token                     5            based           pointer                  level 2 in structure "symbol" packed unaligned
                                                                                  dcl 3-3 in procedure "prt" ref 157
token                                  based           structure                level 1 dcl 4-3 in procedure "prt"
type                     72            based           fixed bin(8,0)           array level 3 in structure "machine_state" dcl 1-6
                                                                                  in procedure "show_ms" ref 108
type                    162            based           fixed bin(8,0)           array level 3 in structure "machine_state" dcl 1-6
                                                                                  in procedure "show_ms" ref 120
used                    200            based           fixed bin(18,0)          array level 3 in structure "machine_state" dcl 1-6
                                                                                  in procedure "show_ms" set ref 125*
used                     73            based           fixed bin(18,0)          array level 3 in structure "machine_state" dcl 1-6
                                                                                  in procedure "show_ms" set ref 113*
variable                 62            based           pointer                  level 3 in structure "machine_state" packed
                                                                                  unaligned dcl 1-6 in procedure "show_ms" ref 93
variable                 70            based           pointer                  array level 3 in structure "machine_state" packed
                                                                                  unaligned dcl 1-6 in procedure "show_ms" set ref
                                                                                  115*
variable                  3            based           pointer                  array level 3 in structure "machine_state" packed
                                                                                  unaligned dcl 1-6 in procedure "show_ms" set ref
                                                                                  45*
variable                160            based           pointer                  array level 3 in structure "machine_state" packed
                                                                                  unaligned dcl 1-6 in procedure "show_ms" ref 127
variable                 57            based           pointer                  level 3 in structure "machine_state" packed
                                                                                  unaligned dcl 1-6 in procedure "show_ms" ref 86
variable                 31            based           pointer                  array level 3 in structure "machine_state" packed
                                                                                  unaligned dcl 1-6 in procedure "show_ms" set ref
                                                                                  69*
variable                 65            based           pointer                  level 3 in structure "machine_state" packed
                                                                                  unaligned dcl 1-6 in procedure "show_ms" ref 100

NAMES DECLARED BY DECLARE STATEMENT AND NEVER REFERENCED.
ind_arithmetic                         internal static fixed bin(17,0)          initial dcl 1-68
ind_decimal_reg                        internal static fixed bin(17,0)          initial dcl 1-68
ind_invalid                            internal static fixed bin(17,0)          initial dcl 1-68
ind_known_refs                         internal static fixed bin(17,0)          initial dcl 1-68
ind_logical                            internal static fixed bin(17,0)          initial dcl 1-68
ind_string_aq                          internal static fixed bin(17,0)          initial dcl 1-68
ind_x                                  internal static fixed bin(17,0)          initial array dcl 1-68
lword                                  automatic       char(8)                  unaligned dcl 13

NAMES DECLARED BY EXPLICIT CONTEXT.
prt                             001510 constant        entry                    internal dcl 147 ref 34 35 45 55 69 79 90 97 104 115
                                                                                  128
show                            000320 constant        label                    dcl 23 ref 145
show_ms                         000312 constant        entry                    external dcl 11
show_ms$pt                      001475 constant        entry                    external dcl 140

NAME DECLARED BY CONTEXT OR IMPLICATION.
substr                                                 builtin function         ref 129

STORAGE REQUIREMENTS FOR THIS PROGRAM.

	Object	Text	Link	Symbol	Defs	Static
Start          0       0      1706        1722    1633        1716
Length      2160    1633        14         221      52           0

BLOCK NAME	         STACK SIZE     TYPE		WHY NONQUICK/WHO SHARES STACK FRAME
show_ms                             196 external procedure  is an external procedure.  
prt                                     internal procedure  shares stack frame of external procedure show_ms.  

STORAGE FOR AUTOMATIC VARIABLES.

STACK FRAME                 LOC IDENTIFIER                  BLOCK NAME
show_ms                  000100 i                           show_ms
                         000101 n                           show_ms
                         000102 p                           show_ms
                         000104 m_s_p                       show_ms
                         000120 t                           prt

THE FOLLOWING EXTERNAL OPERATORS ARE USED BY THIS PROGRAM.
call_ext_out_desc   return              ext_entry

THE FOLLOWING EXTERNAL ENTRIES ARE CALLED BY THIS PROGRAM.
ioa_

THE FOLLOWING EXTERNAL VARIABLES ARE USED BY THIS PROGRAM.
cg_static_$m_s_p




   LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC   
 1    3 000303        11 000311        23 000320        25 000324        26 000340        29 000341        31 000372
     33 000376        34 000415        35 000424        38 000433        40 000436        42 000474        44 000524
     45 000534        46 000543        48 000545        50 000550        51 000563        53 000566        54 000606
     55 000616        56 000625        62 000627        64 000632        66 000670        68 000720        69 000730
     70 000737        72 000741        74 000744        75 000757        77 000762        78 001002        79 001012
     80 001021        86 001023        87 001026        89 001030        90 001053        93 001055        94 001060
     96 001062        97 001105       100 001107       101 001112       103 001114       104 001137       107 001141
    108 001145       109 001152       111 001153       113 001202       115 001235       117 001253       119 001255
    120 001262       121 001267       123 001270       125 001317       127 001352       128 001356       129 001364
    131 001414       135 001444       137 001446       138 001471       140 001472       144 001503       145 001507
    147 001510       155 001512       157 001522       158 001526       159 001564       161 001623


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
