ASSEMBLY LISTING OF SEGMENT >spec>install>1031>dfm_request_table_.alm                                                                                                                               
ASSEMBLED ON:	10/21/92  1020.0 mdt Wed
OPTIONS USED:	-target l68                              list symbols 
ASSEMBLED BY:	ALM Version 8.14 March 1989     
ASSEMBLER CREATED:	06/09/89  1102.3 mdt Fri

                                     1  " ***********************************************************
                                     2  " *                                                         *
                                     3  " * Copyright, (C) Honeywell Information Systems Inc., 1986 *
                                     4  " *                                                         *
                                     5  " ***********************************************************
                                     6  
                                     7  " HISTORY COMMENTS:
                                     8  "  1) change(86-11-12,Fakoury), approve(86-11-12,MCR7515),
                                     9  "     audit(87-01-07,Farley), install(87-01-08,MR12.0-1263):
                                    10  "     Originally coded 06/82 by R. Fakoury
                                    11  "                                                      END HISTORY COMMENTS
                                    12  
    000000                          13  name	dfm_request_table_
                                    14  
                                    15  "  Request definitions for Multics deck_file_manager command
                                    16  
                                    17  
                                    18  
                                    19  	    include	ssu_request_macros
                                   1-1  " BEGIN INCLUDE FILE ... ssu_request_macros.incl.alm
                                   1-2  " Created:  5 May 1980 by W. Olin Sibert
                                   1-3  " Modified: 25 July 1980 by G. Palter to add multics_request macro
                                   1-4  " Modified: 1 December 1981 by G. Palter to remove user_flags
                                   1-5  " Modified: 12 February 1982 by G. Palter for version 4
                                   1-6  " Modified: 28 February 1982 by G. Palter to add dont_summarize and dont_list
                                   1-7  " Modified: 2 August 1982 by Jay Pattin to add unknown_request
                                   1-8  " Modified: 24 October 1984 by G. Palter to restore user flags and add the
                                   1-9  "    set_default_flags and set_default_multics_flags macros
                                  1-10  
                                  1-11  
                                  1-12  " ALM macros used to define subsystem request tables
                                  1-13  
                                  1-14  
                                  1-15  	macro	request_table_version
                              1   1-16  	aci	"srqt_4.0",8
                              2   1-17  	&end
                                  1-18  
                                  1-19  
                                  1-20  	macro	namelist
                              1   1-21  	maclist	off,save
                              2   1-22  	vfd	36/&K
                              3   1-23  &R&(	aci	@&i@,32
                              4   1-24  &)
                              5   1-25  	maclist	restore
                              6   1-26  	&end
                                  1-27  
                                  1-28  " 
                                  1-29  
                                  1-30  " System defined per-request flags
                                  1-31  
                        400000    1-32  	bool	flags.allow_command,400000	" valid as a command
                        200000    1-33  	bool	flags.allow_af,200000	" valid as an active function
                        600000    1-34  	bool	flags.allow_both,600000	" valid as both
                                  1-35  
                        100000    1-36  	bool	flags.unimplemented,100000	" request is not yet implemented
                        040000    1-37  	bool	flags.multics_request,040000	" request is actually a Multics command
                                  1-38  
                        020000    1-39  	bool	flags.dont_summarize,020000	" summarize_requests won't list it
                        010000    1-40  	bool	flags.dont_list,010000	" list_requests won't show it without -all
                                  1-41  
                        004000    1-42  	bool	flags.unknown,004000	" request is explicitly made unknown
                                  1-43  
                                  1-44  
                                  1-45  " Macros for setting per-request flags
                                  1-46  
                                  1-47  	macro	set_flags_loop
                              1   1-48  	maclist	off,save
                              2   1-49  &(3
                              3   1-50  &=&i,default&[	set_flags_loop	&1,(0),(&2)
                              4   1-51  &;	set	&1,&1+&i
                              5   1-52  &]&)
                              6   1-53  	maclist	restore
                              7   1-54  	&end
                                  1-55  
                                  1-56  
                                  1-57  	macro	set_flags
                              1   1-58  	maclist	off,save
                              2   1-59  	set	&1,0
                              3   1-60  &=&3,&[	set_flags_loop	&1,(0),(&2)
                              4   1-61  &;	set_flags_loop	&1,(&2),(&3)
                              5   1-62  &]
                              6   1-63  	maclist	restore
                              7   1-64  	&end
                                  1-65  
                                  1-66  " 
                                  1-67  
                                  1-68  "	set_default_flags {(system-flags)},{(user-flags)}
                                  1-69  
                                  1-70  " Sets the default system and/or user flags to be used for requests:
                                  1-71  "   system-flags: defines the default general nature of requests;" the default
                                  1-72  "      default is flags.allow_command
                                  1-73  "   user-flags:  defines the default setting for the subsystem specific flags
                                  1-74  "      associated with requests;" the default default is none (0)
                                  1-75  "   Note: If either system-flags or user-flags is ommitted, the default is not
                                  1-76  "      changed from its prior value.  This action allows the use of multiple
                                  1-77  "      set_default_flags macros within a table to change system or user
                                  1-78  "      flags without affecting the other defaults
                                  1-79  
                                  1-80  	macro	set_default_flags
                              1   1-81  	maclist	off,save
                              2   1-82  &^=&1,&[	set_flags	.dft_sf,(flags.allow_command),(&1)
                              3   1-83  &]
                              4   1-84  &^=&2,&[	set_flags	.dft_uf,(0),(&2)
                              5   1-85  &]
                              6   1-86  	maclist	restore
                              7   1-87  	&end
                                  1-88  
                                  1-89  
                                  1-90  "	set_default_multics_flags {(system-flags)},{(user-flags)}
                                  1-91  
                                  1-92  " Sets the default system and/or user flags to be used for Multics commands when used as requests:
                                  1-93  "   system-flags: defines the default general nature of Multics requests;" the
                                  1-94  "      default default is flags.allow_command+flags.allow_af
                                  1-95  "   user-flags:  defines the default setting for the subsystem specific flags
                                  1-96  "      associated with Multics requests;" the default default is none (0)
                                  1-97  "   Note: If either system-flags or user-flags is ommitted, the default is not
                                  1-98  "      changed from its prior value.  This action allows the use of multiple
                                  1-99  "      set_default_multics_flags macros within a table to change system or user
                                 1-100  "      flags without affecting the other defaults
                                 1-101  
                                 1-102  	macro	set_default_multics_flags
                              1  1-103  	maclist	off,save
                              2  1-104  &^=&1,&[	set_flags	.dft_mrsf,(flags.allow_command,flags.allow_af),(&1)
                              3  1-105  &]
                              4  1-106  &^=&2,&[	set_flags	.dft_mruf,(0),(&2)
                              5  1-107  &]
                              6  1-108  	maclist	restore
                              7  1-109  	&end
                                 1-110  
                                 1-111  " 
                                 1-112  
                                 1-113  	macro	.multics_request_doc
                              1  1-114  	null
                              2  1-115  	&end
                                 1-116  
                                 1-117  
                                 1-118  	macro	dft_multics_doc_lth
                              1  1-119  	set	.multics_doc_lth,0
                              2  1-120  	&end
                                 1-121  
                                 1-122  
                                 1-123  "	set_default_multics_doc (string)
                                 1-124  
                                 1-125  " Sets the default documentation to be used for Multics commands when used as requests:
                                 1-126  "   string: is the documentation string to be used for any subsequent requests defined by
                                 1-127  "      the multics_request_macro;" all occurences of "&1" in this string will be replaced by
                                 1-128  "      the actual name of the request;" Eg:
                                 1-129  "	set_default_multics_doc (Type '.. help &1' for more information.)
                                 1-130  
                                 1-131  	macro	set_default_multics_doc
                              1  1-132  	maclist	off,save
                              2  1-133  	macro	.multics_request_doc
                              3  1-134  	aci	@&1@
                              4  1-135  	&&end
                              5  1-136  	macro	dft_multics_doc_lth
                              6  1-137  	macro	.compute
                              7  1-138  	set	.multics_doc_lth,&&&&l1
                              8  1-139  	&&&&end
                              9  1-140  	.compute (&1)
                             10  1-141  	&&end
                             11  1-142  	maclist	restore
                             12  1-143  	&end
                                 1-144  
                                 1-145  " 
                                 1-146  
                                 1-147  "	begin_table tablename
                                 1-148  
                                 1-149  " Defines a subsystem request table (multiple tables may exist in a single object segment):
                                 1-150  "   tablename: the name by which this table may be referenced externally;" references to the
                                 1-151  "      table should be of the form segname$tablename where segname is the name of this
                                 1-152  "      object segment
                                 1-153  
                                 1-154  	macro	begin_table
                              1  1-155  	segdef	&1
                              2  1-156  	maclist	object,save
                              3  1-157  	use	tables
                              4  1-158  &1:	request_table_version
                              5  1-159  	aci	@&1@,32
                              6  1-160  	dup	6
                              7  1-161  	vfd	36/0
                              8  1-162  	dupend
                              9  1-163  	vfd	36/&1.rc
                             10  1-164  	maclist	off
                             11  1-165  	set	.rc,0
                             12  1-166  	set_default_flags (default),(default)
                             13  1-167  	set_default_multics_flags (default),(default)
                             14  1-168  	maclist	restore
                             15  1-169  	&end
                                 1-170  
                                 1-171  
                                 1-172  "	end_table	tablename
                                 1-173  
                                 1-174  " Indicates the end of a subsystem request table definition:
                                 1-175  "   tablename: the name of the table which has now been completely defined
                                 1-176  
                                 1-177  	macro	end_table
                              1  1-178  	maclist	off,save
                              2  1-179  	set	&1.rc,.rc
                              3  1-180  	maclist	restore
                              4  1-181  	&end
                                 1-182  
                                 1-183  " 
                                 1-184  
                                 1-185  "	request	name,processor,({abbreviations}),{(documentation)},
                                 1-186  "		 {(system-flags)},{(user-flags)}
                                 1-187  
                                 1-188  " Defines a subsystem request:
                                 1-189  "   name: the primary name of this request
                                 1-190  "   processor: the name of the procedure which actually executes this request;" it must be
                                 1-191  "      of the form segname$entryname
                                 1-192  "   abbreviations: is the list of defined abbreviations for this request
                                 1-193  "   documentation: a short string used by the list_requests request to explain this request
                                 1-194  "   system-flags: defines the general nature of this request;" the default is
                                 1-195  "      flags.allow_command
                                 1-196  "   user-flags: allows a subsystem to provide subsystem-specific information
                                 1-197  "      with the request's definition;" the default is none (0)
                                 1-198  
                                 1-199  	macro	request
                              1  1-200  	maclist	off,save
                              2  1-201  	set	.rc,.rc+1
                              3  1-202  	maclist	object
                              4  1-203  	use	tables
                              5  1-204  	vfd	18/&U.call,18/&U.names
                              6  1-205  &=&4,&[	vfd	36/0
                              7  1-206  &;	vfd	18/&U.info,18/&l4
                              8  1-207  	maclist	off
                              9  1-208  	use	info
                             10  1-209  &U.info:	aci	@&4@
                             11  1-210  &]
                             12  1-211  	use	tables
                             13  1-212  	set_flags	.sf,(.dft_sf),(&5)
                             14  1-213  	set_flags	.uf,(.dft_uf),(&6)
                             15  1-214  	maclist	object
                             16  1-215  	vfd	18/.sf,18/.uf
                             17  1-216  	maclist	off
                             18  1-217  	use	calls
                             19  1-218  &U.call:	epaq	*
                             20  1-219  	lprp4	7|stack_header.lot_ptr,*au
                             21  1-220  	call6	&2
                             22  1-221  	use	names
                             23  1-222  &U.names:	namelist	&1&^=&3,&[,&3&]
                             24  1-223  	maclist	restore
                             25  1-224  	&end
                                 1-225  
                                 1-226  " 
                                 1-227  
                                 1-228  "	unknown_request name,(abbreviations)
                                 1-229  
                                 1-230  " Defines an unknown request: used to make the utilities not recognize a request even though
                                 1-231  " it is defined in a later request table (such as ssu_request_tables_$standard_request):
                                 1-232  "   name: the primary name of the request to be marked as unknown
                                 1-233  "   abbreviations: is the list of defined abbreviations for this request
                                 1-234  
                                 1-235  	macro	unknown_request
                              1  1-236  	maclist	off,save
                              2  1-237  	set	.rc,.rc+1
                              3  1-238  	maclist	object
                              4  1-239  	use	tables
                              5  1-240  	vfd	18/&U.call,18/&U.names
                              6  1-241  	vfd	36/0
                              7  1-242  	vfd	18/flags.unknown,18/0
                              8  1-243  	maclist	off
                              9  1-244  	use	calls
                             10  1-245  &U.call:	epaq	*
                             11  1-246  	lprp4	7|stack_header.lot_ptr,*au
                             12  1-247  	call6	ssu_$unknown_request
                             13  1-248  	use	names
                             14  1-249  &U.names: namelist	&1&^=&2,&[,&2&]
                             15  1-250  	maclist	restore
                             16  1-251  	&end
                                 1-252  
                                 1-253  " 
                                 1-254  
                                 1-255  "	multics_request name,({abbreviations}),({documenation}),{procedure},
                                 1-256  "		       {(system-flags)},{(user-flags)}
                                 1-257  
                                 1-258  " Defines that a Multics command/AF may be used as a subsystem request:
                                 1-259  "   name: the primary name of this request (usually the name of the Multics command/AF)
                                 1-260  "   abbreviations: is the list of defined abbreviations for this request
                                 1-261  "   documentation: a short string used by the list_requests request to explain this request;
                                 1-262  "      if no documentation is provided, the documentation specified by a prior use of
                                 1-263  "      set_default_multics_doc is used
                                 1-264  "   procedure: the name of the Multics command/AF which is actually executed by this
                                 1-265  "      request;" it must be of the form segname$entryname;" if not given, the default is
                                 1-266  "      name$name
                                 1-267  "   system-flags: defines the general nature of this request;" the default is
                                 1-268  "      flags.allow_command+flags.allow_af
                                 1-269  "   user-flags: allows a subsystem to provide subsystem-specific information
                                 1-270  "      with the request's definition;" the default is none (0)
                                 1-271  
                                 1-272  	macro	multics_request
                              1  1-273  	maclist	off,save
                              2  1-274  	set	.rc,.rc+1
                              3  1-275  	maclist	object
                              4  1-276  	use	tables
                              5  1-277  	vfd	18/&U.call,18/&U.names
                              6  1-278  &=&3,&[	dft_multics_doc_lth &1,(&2),(&3),(&4),(&5),(&6)
                              7  1-279  	vfd	18/&U.info,18/.multics_doc_lth
                              8  1-280  &;	vfd	18/&U.info,18/&l3
                              9  1-281  &]
                             10  1-282  	maclist	off
                             11  1-283  	use	info
                             12  1-284  &U.info:
                             13  1-285  &=&3,&[	.multics_request_doc &1,(&2),(&3),(&4),(&5),(&6)
                             14  1-286  &;	aci	@&3@
                             15  1-287  &]
                             16  1-288  	use	tables
                             17  1-289  	maclist	object
                             18  1-290  	set_flags	.sf,(.dft_mrsf),(&5)
                             19  1-291  	set_flags	.uf,(.dft_mruf),(&6)
                             20  1-292  	maclist	object
                             21  1-293  	vfd	18/.sf+flags.multics_request,18/.uf
                             22  1-294  	maclist	off
                             23  1-295  	use	calls
                             24  1-296  &U.call:	epaq	*
                             25  1-297  	lprp4	7|stack_header.lot_ptr,*au
                             26  1-298  &=&4,&[	call6	&1$&1
                             27  1-299  &;	call6	&4
                             28  1-300  &]
                             29  1-301  	use	names
                             30  1-302  &U.names:	namelist	&1&^=&2,&[,&2&]
                             31  1-303  	maclist	restore
                             32  1-304  	&end
                                 1-305  
                                 1-306  " 
                                 1-307  
                                 1-308  " Required ALM statements to make this all work
                                 1-309  
                                 1-310  	use	tables
                                 1-311  	use	calls
                                 1-312  	use	names
                                 1-313  	use	info
                                 1-314  	join	/text/tables,calls,names,info
                                 1-315  
                                 1-316  	include	stack_header
                                   2-1  "	BEGIN INCLUDE FILE ... stack_header.incl.alm  3/72  Bill Silver
                                   2-2  "
                                   2-3  "	modified 7/76 by M. Weaver for *system links and more system use of areas
                                   2-4  "	modified 3/77 by M. Weaver  to add rnt_ptr
                                   2-5  "	modified 7/77 by S. Webber to add run_unit_depth and assign_linkage_ptr
                                   2-6  "	modified 6/83 by J. Ives to add trace_frames and in_trace.
                                   2-7  
                                   2-8  " HISTORY COMMENTS:
                                   2-9  "  1) change(86-06-24,DGHowe), approve(86-06-24,MCR7396),
                                  2-10  "     audit(86-08-05,Schroth), install(86-11-03,MR12.0-1206):
                                  2-11  "     added the heap_header_ptr definition
                                  2-12  "  2) change(86-08-12,Kissel), approve(86-08-12,MCR7473),
                                  2-13  "     audit(86-10-10,Fawcett), install(86-11-03,MR12.0-1206):
                                  2-14  "     Modified to support control point management.  These changes were
                                  2-15  "     actually made in February 1985 by G. Palter.
                                  2-16  "  3) change(86-10-22,Fawcett), approve(86-10-22,MCR7473),
                                  2-17  "     audit(86-10-22,Farley), install(86-11-03,MR12.0-1206):
                                  2-18  "     Remove the old_lot pointer and replace it with cpm_data_ptr. Use the 18
                                  2-19  "     bit pad after cur_lot_size for the cpm_enabled. This was done to save
                                  2-20  "     some space int the stack header and change the cpd_ptr unal to
                                  2-21  "     cpm_data_ptr (ITS pair).
                                  2-22  "                                                      END HISTORY COMMENTS
                                  2-23  
                        000004    2-24  	equ	stack_header.cpm_data_ptr,4		ptr to control point for this stack
                        000006    2-25  	equ	stack_header.combined_stat_ptr,6	ptr to separate static area
                                  2-26  
                        000010    2-27  	equ	stack_header.clr_ptr,8		ptr to area containing linkage sections
                        000012    2-28  	equ	stack_header.max_lot_size,10		number of words allowed in lot (DU)
                        000012    2-29  	equ	stack_header.main_proc_invoked,10	nonzero if main proc was invoked in run unit (DL)
                        000012    2-30  	equ	stack_header.run_unit_depth,10	number of active run units stacked (DL)
                        000013    2-31  	equ	stack_header.cur_lot_size,11		DU number of words (entries) in lot
                        000013    2-32            equ	stack_header.cpm_enabled,11		DL  non-zero if control point management is enabled
                        000014    2-33  	equ	stack_header.system_free_ptr,12	ptr to system storage area
                        000016    2-34  	equ	stack_header.user_free_ptr,14		ptr to user storage area
                                  2-35  
                        000020    2-36  	equ	stack_header.parent_ptr,16		ptr to parent stack or null
                        000022    2-37  	equ	stack_header.stack_begin_ptr,18	ptr to first stack frame
                        000024    2-38  	equ	stack_header.stack_end_ptr,20		ptr to next useable stack frame
                        000026    2-39  	equ	stack_header.lot_ptr,22		ptr to the lot for the current ring
                                  2-40  
                        000030    2-41  	equ	stack_header.signal_ptr,24		ptr to signal proc for current ring
                        000032    2-42  	equ	stack_header.bar_mode_sp,26		value of sp before entering bar mode
                        000034    2-43  	equ	stack_header.pl1_operators_ptr,28	ptr: pl1_operators_$operator_table
                        000036    2-44  	equ	stack_header.call_op_ptr,30		ptr to standard call operator
                                  2-45  
                        000040    2-46  	equ	stack_header.push_op_ptr,32		ptr to standard push operator
                        000042    2-47  	equ	stack_header.return_op_ptr,34		ptr to standard return operator
                        000044    2-48  	equ	stack_header.ret_no_pop_op_ptr,36	ptr: stand. return/ no pop operator
                        000046    2-49  	equ	stack_header.entry_op_ptr,38		ptr to standard entry operator
                                  2-50  
                        000050    2-51  	equ	stack_header.trans_op_tv_ptr,40	ptr to table of translator operator ptrs
                        000052    2-52  	equ	stack_header.isot_ptr,42		pointer to ISOT
                        000054    2-53  	equ	stack_header.sct_ptr,44		pointer to System Condition Table
                        000056    2-54  	equ	stack_header.unwinder_ptr,46		pointer to unwinder for current ring
                                  2-55  
                        000060    2-56  	equ	stack_header.sys_link_info_ptr,48	ptr to *system link name table
                        000062    2-57  	equ	stack_header.rnt_ptr,50		ptr to reference name table
                        000064    2-58  	equ	stack_header.ect_ptr,52		ptr to event channel table
                        000066    2-59  	equ	stack_header.assign_linkage_ptr,54	ptr to area for hcs_$assign_linkage calls
                        000070    2-60  	equ	stack_header.heap_header_ptr,56	ptr to heap header.
                        000072    2-61  	equ	stack_header.trace_frames,58		stack of trace_catch_ frames
                        000073    2-62  	equ	stach_header.trace_top_ptr,59		trace pointer
                        000074    2-63  	equ	stack_header.in_trace,60		trace antirecurse bit
                        000100    2-64  	equ	stack_header_end,64			length of stack header
                                  2-65  
                                  2-66  
                                  2-67  
                                  2-68  
                        000000    2-69  	equ	trace_frames.count,0		number of trace frames on stack
                        000001    2-70  	equ	trace_frames.top_ptr,1		packed pointer to top one
                                  2-71  
                                  2-72  "	The  following constant is an offset within the  pl1  operators table.
                                  2-73  "	It  references a  transfer vector table.
                                  2-74  
                        000551    2-75  	bool	tv_offset,551
                                  2-76  
                                  2-77  
                                  2-78  "	The  following constants are offsets within this transfer vector table.
                                  2-79  
                        001170    2-80  	equ	call_offset,tv_offset+271
                        001171    2-81  	equ	push_offset,tv_offset+272
                        001172    2-82  	equ	return_offset,tv_offset+273
                        001173    2-83  	equ	return_no_pop_offset,tv_offset+274
                        001174    2-84  	equ	entry_offset,tv_offset+275
                                  2-85  
                                  2-86  
                                  2-87  " 	END INCLUDE FILE stack_header.incl.alm
                                 1-317  
                                 1-318  " END INCLUDE FILE ... ssu_request_macros.incl.alm
                                    20  
                                    21  "
                                    22  	begin_table dfm_request_table_
                        000000          	segdef	dfm_request_table_
    000000  aa  163 162 161 164
    000001  aa  137 064 056 060
    000002  aa  144 146 155 137
    000003  aa  162 145 161 165
    000004  aa  145 163 164 137
    000005  aa  164 141 142 154
    000006  aa  145 137 040 040
    000007  aa  040 040 040 040
    000010  aa  040 040 040 040
    000011  aa  040 040 040 040
                        000006 
    000012  aa   000000 000000 
    000013  aa   000000 000000 
    000014  aa   000000 000000 
    000015  aa   000000 000000 
    000016  aa   000000 000000 
    000017  aa   000000 000000 
    000020  aa   000000 000010 
                                    23  
                                    24  	" action requests
                                    25  
                                    26  	request	delete_deck, 
                                    27  		dfm_$delete_deck,
                                    28  		(dd),
                                    29  		(Deletes a deckfile deck.),
                                    30  		flags.allow_command
    000021  00   000051 000101 
    000022  0a   000311 000030 
    000023  aa   400000 000000 
                                    31  
                                    32  	
                                    33  	request	list,
                                    34  		dfm_$list,
                                    35  		(ls),
                                    36  		(Create a deckfile.list from a tandd_deck_file.),
                                    37  		flags.allow_command
    000024  00   000054 000122 
    000025  0a   000317 000056 
    000026  aa   400000 000000 
                                    38  
                                    39  
                                    40  	request	list_diskette_types,
                                    41  		dfm_$list_diskette_types,
                                    42  		(ldt),
                                    43  		(Lists valid diskette types accepted by lfd.),
                                    44  		flags.allow_command
    000027  00   000057 000143 
    000030  0a   000333 000053 
    000031  aa   400000 000000 
                                    45  
                                    46  
                                    47  	request	load_from_diskette,
                                    48  		dfm_$load_from_diskette,
                                    49  		(lfd),
                                    50  		(Read mca diskettes into the deckfile.),
                                    51  	          flags.allow_command
    000032  00   000062 000164 
    000033  0a   000346 000045 
    000034  aa   400000 000000 
                                    52  
                                    53  
                                    54  	request	load_from_tape,
                                    55  		dfm_$load_from_tape,
                                    56  		(lft),
                                    57  		(Read a Binary Deck File / IFAD tape into the deckfile),
                                    58  	          flags.allow_command
    000035  00   000065 000205 
    000036  0a   000360 000065 
    000037  aa   400000 000000 
                                    59  
                                    60  
                                    61  	request	merge_deckfiles,
                                    62  		dfm_$merge_deckfiles,
                                    63  		(mdf),
                                    64  		(Merge two or more deckfiles into one deckfile.),
                                    65  	          flags.allow_command
    000040  00   000070 000226 
    000041  0a   000376 000056 
    000042  aa   400000 000000 
                                    66  
                                    67  
                                    68  	request	patch_deck,
                                    69  		dfm_$patch_deck,
                                    70  		(pd),
                                    71  		(Patches a selected deck.),
                                    72  		flags.allow_command
    000043  00   000073 000247 
    000044  0a   000412 000030 
    000045  aa   400000 000000 
                                    73  
                                    74  
                                    75   	request	quit,
                                    76  		dfm_$quit,
                                    77  		(q),
                                    78  		(Exits the deckfile_manager request loop.),
                                    79  	          flags.allow_command
    000046  00   000076 000270 
    000047  0a   000420 000050 
    000050  aa   400000 000000 
                                    80  
                                    81  	end_table	dfm_request_table_
                                    82  
                                    83  	end

NO LITERALS
     
NAME DEFINITIONS FOR ENTRY POINTS AND SEGDEFS

    000432  5a   000003 000000 
    000433  5a   000032 600000 
    000434  aa   000000 000000 
    000435  55   000013 000002 
    000436  5a   000002 400003 
    000437  55   000006 000013 
    000440  aa  022 144 146 155
    000441  aa  137 162 145 161
    000442  aa  165 145 163 164
    000443  aa  137 164 141 142
    000444  aa  154 145 137 000
    000445  55   000023 000003 
    000446  0a   000000 400000 
    000447  55   000016 000003 
    000450  aa  022 144 146 155         dfm_request_table_
    000451  aa  137 162 145 161
    000452  aa  165 145 163 164
    000453  aa  137 164 141 142
    000454  aa  154 145 137 000
    000455  55   000002 000013 
    000456  6a   000000 400002 
    000457  55   000026 000003 
    000460  aa  014 163 171 155         symbol_table
    000461  aa  142 157 154 137
    000462  aa  164 141 142 154
    000463  aa  145 000 000 000

DEFINITIONS HASH TABLE

    000464  aa   000000 000015 
    000465  5a   000013 000000 
    000466  aa   000000 000000 
    000467  aa   000000 000000 
    000470  aa   000000 000000 
    000471  aa   000000 000000 
    000472  aa   000000 000000 
    000473  5a   000023 000000 
    000474  aa   000000 000000 
    000475  aa   000000 000000 
    000476  aa   000000 000000 
    000477  aa   000000 000000 
    000500  aa   000000 000000 
    000501  aa   000000 000000 

EXTERNAL NAMES

    000502  aa  004 161 165 151         quit
    000503  aa  164 000 000 000
    000504  aa  012 160 141 164         patch_deck
    000505  aa  143 150 137 144
    000506  aa  145 143 153 000
    000507  aa  017 155 145 162         merge_deckfiles
    000510  aa  147 145 137 144
    000511  aa  145 143 153 146
    000512  aa  151 154 145 163
    000513  aa  016 154 157 141         load_from_tape
    000514  aa  144 137 146 162
    000515  aa  157 155 137 164
    000516  aa  141 160 145 000
    000517  aa  022 154 157 141         load_from_diskette
    000520  aa  144 137 146 162
    000521  aa  157 155 137 144
    000522  aa  151 163 153 145
    000523  aa  164 164 145 000
    000524  aa  023 154 151 163         list_diskette_types
    000525  aa  164 137 144 151
    000526  aa  163 153 145 164
    000527  aa  164 145 137 164
    000530  aa  171 160 145 163
    000531  aa  004 154 151 163         list
    000532  aa  164 000 000 000
    000533  aa  013 144 145 154         delete_deck
    000534  aa  145 164 145 137
    000535  aa  144 145 143 153
    000536  aa  004 144 146 155         dfm_
    000537  aa  137 000 000 000

NO TRAP POINTER WORDS

TYPE PAIR BLOCKS

    000540  aa   000004 000000 
    000541  55   000104 000050 
    000542  aa   000004 000000 
    000543  55   000104 000052 
    000544  aa   000004 000000 
    000545  55   000104 000055 
    000546  aa   000004 000000 
    000547  55   000104 000061 
    000550  aa   000004 000000 
    000551  55   000104 000065 
    000552  aa   000004 000000 
    000553  55   000104 000072 
    000554  aa   000004 000000 
    000555  55   000104 000077 
    000556  aa   000004 000000 
    000557  55   000104 000101 
    000560  aa   000001 000000 
    000561  aa   000000 000000 

INTERNAL EXPRESSION WORDS

    000562  5a   000106 000000 
    000563  5a   000110 000000 
    000564  5a   000112 000000 
    000565  5a   000114 000000 
    000566  5a   000116 000000 
    000567  5a   000120 000000 
    000570  5a   000122 000000 
    000571  5a   000124 000000 
LINKAGE INFORMATION
      
    000000  aa   000000 000000 
    000001  0a   000432 000000 
    000002  aa   000000 000000 
    000003  aa   000000 000000 
    000004  aa   000000 000000 
    000005  aa   000000 000000 
    000006  22   000010 000030 
    000007  a2   000000 000000 
    000010  9a   777770 0000 46         dfm_|delete_deck
    000011  5a   000137 0000 00
    000012  9a   777766 0000 46         dfm_|list
    000013  5a   000136 0000 00
    000014  9a   777764 0000 46         dfm_|list_diskette_types
    000015  5a   000135 0000 00
    000016  9a   777762 0000 46         dfm_|load_from_diskette
    000017  5a   000134 0000 00
    000020  9a   777760 0000 46         dfm_|load_from_tape
    000021  5a   000133 0000 00
    000022  9a   777756 0000 46         dfm_|merge_deckfiles
    000023  5a   000132 0000 00
    000024  9a   777754 0000 46         dfm_|patch_deck
    000025  5a   000131 0000 00
    000026  9a   777752 0000 46         dfm_|quit
    000027  5a   000130 0000 00
SYMBOL INFORMATION
     
SYMBOL TABLE HEADER
     
    000000  aa   000000 000001 
    000001  aa   163171 155142 
    000002  aa   164162 145145 
    000003  aa   000000 000010 
    000004  aa   000000 117244 
    000005  aa   361023 525721 
    000006  aa   000000 122256 
    000007  aa   712176 345513 
    000010  aa   141154 155040 
    000011  aa   040040 040040 
    000012  aa   000024 000040 
    000013  aa   000034 000040 
    000014  aa   000044 000100 
    000015  aa   000002 000002 
    000016  aa   000064 000000 
    000017  aa   000000 000222 
    000020  aa   000000 000140 
    000021  aa   000175 000167 
    000022  aa   000212 000140 
    000023  aa   000064 000000 
    000024  aa   101114 115040 
    000025  aa   126145 162163 
    000026  aa   151157 156040 
    000027  aa   070056 061064 
    000030  aa   040115 141162 
    000031  aa   143150 040061 
    000032  aa   071070 071040 
    000033  aa   040040 040040 
    000034  aa   127101 101156 
    000035  aa   144145 162163 
    000036  aa   157156 056123 
    000037  aa   171163 115141 
    000040  aa   151156 164056 
    000041  aa   141040 040040 
    000042  aa   040040 040040 
    000043  aa   040040 040040 
    000044  aa   055164 141162 
    000045  aa   147145 164040 
    000046  aa   154066 070040 
    000047  aa   040040 040040 
    000050  aa   040040 040040 
    000051  aa   040040 040040 
    000052  aa   040040 040040 
    000053  aa   040040 040040 
    000054  aa   040040 040040 
    000055  aa   040040 040040 
    000056  aa   040154 151163 
    000057  aa   164040 163171 
    000060  aa   155142 157154 
    000061  aa   163040 040040 
    000062  aa   040040 040040 
    000063  aa   040040 040040 
    000064  aa   000000 000001 
    000065  aa   000000 000003 
    000066  aa   000102 000051 
    000067  aa   222562 620643 
    000070  aa   000000 122256 
    000071  aa   712177 200000 
    000072  aa   000115 000050 
    000073  aa   176620 613310 
    000074  aa   000000 113310 
    000075  aa   612334 200000 
    000076  aa   000127 000042 
    000077  aa   176620 613311 
    000100  aa   000000 115000 
    000101  aa   507463 000000 
    000102  aa   076163 160145          >spec>install>1031>dfm_request_table_.alm
    000103  aa   143076 151156 
    000104  aa   163164 141154 
    000105  aa   154076 061060 
    000106  aa   063061 076144 
    000107  aa   146155 137162 
    000110  aa   145161 165145 
    000111  aa   163164 137164 
    000112  aa   141142 154145 
    000113  aa   137056 141154 
    000114  aa   155040 040040 
    000115  aa   076154 144144          >ldd>include>ssu_request_macros.incl.alm
    000116  aa   076151 156143 
    000117  aa   154165 144145 
    000120  aa   076163 163165 
    000121  aa   137162 145161 
    000122  aa   165145 163164 
    000123  aa   137155 141143 
    000124  aa   162157 163056 
    000125  aa   151156 143154 
    000126  aa   056141 154155 
    000127  aa   076154 144144          >ldd>include>stack_header.incl.alm
    000130  aa   076151 156143 
    000131  aa   154165 144145 
    000132  aa   076163 164141 
    000133  aa   143153 137150 
    000134  aa   145141 144145 
    000135  aa   162056 151156 
    000136  aa   143154 056141 
    000137  aa   154155 040040 
               MULTICS ASSEMBLY CROSS REFERENCE LISTING

   Value        Symbol                   Source file   Line number

          51    .._00000.call            dfm_request_table_:        30.
         311    .._00000.info            dfm_request_table_:        30.
         101    .._00000.names           dfm_request_table_:        30.
          54    .._00001.call            dfm_request_table_:        37.
         317    .._00001.info            dfm_request_table_:        37.
         122    .._00001.names           dfm_request_table_:        37.
          57    .._00002.call            dfm_request_table_:        44.
         333    .._00002.info            dfm_request_table_:        44.
         143    .._00002.names           dfm_request_table_:        44.
          62    .._00003.call            dfm_request_table_:        51.
         346    .._00003.info            dfm_request_table_:        51.
         164    .._00003.names           dfm_request_table_:        51.
          65    .._00004.call            dfm_request_table_:        58.
         360    .._00004.info            dfm_request_table_:        58.
         205    .._00004.names           dfm_request_table_:        58.
          70    .._00005.call            dfm_request_table_:        65.
         376    .._00005.info            dfm_request_table_:        65.
         226    .._00005.names           dfm_request_table_:        65.
          73    .._00006.call            dfm_request_table_:        72.
         412    .._00006.info            dfm_request_table_:        72.
         247    .._00006.names           dfm_request_table_:        72.
          76    .._00007.call            dfm_request_table_:        79.
         420    .._00007.info            dfm_request_table_:        79.
         270    .._00007.names           dfm_request_table_:        79.
      600000    .dft_mrsf                dfm_request_table_:        22.
           0    .dft_mruf                dfm_request_table_:        22.
      400000    .dft_sf                  dfm_request_table_:        22.
           0    .dft_uf                  dfm_request_table_:        22,   30,   37,   44,   51,   58,   65,   72,   79.
       40050    .rc                      dfm_request_table_:        22,   30,   37,   44,   51,   58,   65,   72,   79,   81.
      400000    .sf                      dfm_request_table_:        30,   37,   44,   51,   58,   65,   72,   79.
           0    .uf                      dfm_request_table_:        30,   37,   44,   51,   58,   65,   72,   79.
          51    calls                    dfm_request_table_:        30,   37,   44,   51,   58,   65,   72,   79,
                                         ssu_request_macros:       311,  314.
        1170    call_offset              stack_header:        80.
                delete_deck              dfm_request_table_:        30.
                dfm_                     dfm_request_table_:        30,   37,   44,   51,   58,   65,   72,   79.
           0    dfm_request_table_       dfm_request_table_:        22.
          10    dfm_request_table_.rc    dfm_request_table_:        22,   81.
        1174    entry_offset             stack_header:        84.
      200000    flags.allow_af           dfm_request_table_:        22,
                                         ssu_request_macros:        33.
      600000    flags.allow_both         ssu_request_macros:        34.
      400000    flags.allow_command      dfm_request_table_:        22,   30,   37,   44,   51,   58,   65,   72,   79,
                                         ssu_request_macros:        32.
       10000    flags.dont_list          ssu_request_macros:        40.
       20000    flags.dont_summarize     ssu_request_macros:        39.
       40000    flags.multics_request    ssu_request_macros:        37.
      100000    flags.unimplemented      ssu_request_macros:        36.
        4000    flags.unknown            ssu_request_macros:        42.
         311    info                     dfm_request_table_:        30,   37,   44,   51,   58,   65,   72,   79,
                                         ssu_request_macros:       313,  314.
                list                     dfm_request_table_:        37.
                list_diskette_types      dfm_request_table_:        44.
                load_from_diskette       dfm_request_table_:        51.
                load_from_tape           dfm_request_table_:        58.
                merge_deckfiles          dfm_request_table_:        65.
         101    names                    dfm_request_table_:        30,   37,   44,   51,   58,   65,   72,   79,
                                         ssu_request_macros:       312,  314.
                patch_deck               dfm_request_table_:        72.
        1171    push_offset              stack_header:        81.
                quit                     dfm_request_table_:        79.
        1173    return_no_pop_offset     stack_header:        83.
        1172    return_offset            stack_header:        82.
          73    stach_header.trace_top_ptr     stack_header:        62.
          66    stack_header.assign_linkage_ptr      stack_header:        59.
          32    stack_header.bar_mode_sp       stack_header:        42.
          36    stack_header.call_op_ptr       stack_header:        44.
          10    stack_header.clr_ptr     stack_header:        27.
           6    stack_header.combined_stat_ptr       stack_header:        25.
           4    stack_header.cpm_data_ptr      stack_header:        24.
          13    stack_header.cpm_enabled       stack_header:        32.
          13    stack_header.cur_lot_size      stack_header:        31.
          64    stack_header.ect_ptr     stack_header:        58.
          46    stack_header.entry_op_ptr      stack_header:        49.
          70    stack_header.heap_header_ptr   stack_header:        60.
          74    stack_header.in_trace    stack_header:        63.
          52    stack_header.isot_ptr    stack_header:        52.
          26    stack_header.lot_ptr     dfm_request_table_:        30,   37,   44,   51,   58,   65,   72,   79,
                                         stack_header:        39.
          12    stack_header.main_proc_invoked       stack_header:        29.
          12    stack_header.max_lot_size      stack_header:        28.
          20    stack_header.parent_ptr  stack_header:        36.
          34    stack_header.pl1_operators_ptr       stack_header:        43.
          40    stack_header.push_op_ptr       stack_header:        46.
          42    stack_header.return_op_ptr     stack_header:        47.
          44    stack_header.ret_no_pop_op_ptr       stack_header:        48.
          62    stack_header.rnt_ptr     stack_header:        57.
          12    stack_header.run_unit_depth    stack_header:        30.
          54    stack_header.sct_ptr     stack_header:        53.
          30    stack_header.signal_ptr  stack_header:        41.
          22    stack_header.stack_begin_ptr   stack_header:        37.
          24    stack_header.stack_end_ptr     stack_header:        38.
          14    stack_header.system_free_ptr   stack_header:        33.
          60    stack_header.sys_link_info_ptr       stack_header:        56.
          72    stack_header.trace_frames      stack_header:        61.
          50    stack_header.trans_op_tv_ptr   stack_header:        51.
          56    stack_header.unwinder_ptr      stack_header:        54.
          16    stack_header.user_free_ptr     stack_header:        34.
         100    stack_header_end         stack_header:        64.
           0    tables                   dfm_request_table_:        22,   30,   37,   44,   51,   58,   65,   72,   79,
                                         ssu_request_macros:       310,  314.
           0    trace_frames.count       stack_header:        69.
           1    trace_frames.top_ptr     stack_header:        70.
         551    tv_offset                stack_header:        75,   80,   81,   82,   83,   84.


NO FATAL ERRORS


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
