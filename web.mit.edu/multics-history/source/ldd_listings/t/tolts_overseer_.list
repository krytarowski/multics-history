	COMPILATION LISTING OF SEGMENT tolts_overseer_
	Compiled by: Multics PL/I Compiler, Release 27b, of September 15, 1981
	Compiled at: Honeywell LISD Phoenix, System M
	Compiled on: 05/13/82  1251.3 mst Thu
	    Options: optimize map

        1 /* ***********************************************************
        2*   *                                                         *
        3*   * Copyright, (C) Honeywell Information Systems Inc., 1982 *
        4*   *                                                         *
        5*   * Copyright (c) 1972 by Massachusetts Institute of        *
        6*   * Technology and Honeywell Information Systems, Inc.      *
        7*   *                                                         *
        8*   *********************************************************** */
        9 
       10 
       11 tolts_overseer_:  procedure;
       12 
       13 /* Modified BIM 5/82 set the homedir. */
       14 
       15 dcl iox_$user_io ext static ptr;
       16 
       17 dcl	error_code	fixed bin(35);
       18 
       19 dcl    1	search_rules  aligned  internal static options (constant),
       20 	2  num_rules  fixed bin  init(5),
       21 	2  rules (5)  char(168)  aligned
       22 	   init (	"initiated_segments",
       23 		"referencing_dir",
       24 		">system_library_standard",
       25 		">system_library_1",
       26 		">system_library_tools");
       27 
       28 dcl	( addr, baseptr, pointer )  builtin;
       29 
       30 dcl       1 logout_info aligned,
       31 	2 version fixed bin,
       32 	2 hold bit (1) unaligned,
       33 	2 brief bit (1) unaligned,
       34 	2 pad bit (34) unaligned;
       35 
       36 dcl       1 init_error aligned,
       37 	2 version fixed bin,
       38 	2 error_code fixed bin (35);
       39 	
       40 dcl       based_quoi                    based;
       41 
       42 dcl	homedir	                    char (168);
       43 
       44 dcl	any_other                     condition;
       45 
       46 dcl	hcs_$initiate_search_rules	entry  (ptr, fixed bin(35));
       47 dcl	ioa_			entry  options (variable);
       48 dcl	iox_$control		entry (ptr, char(*), ptr, fixed bin(35));
       49 dcl       com_err_                      entry  options(variable);
       50 dcl       cu_$set_cl_intermediary	entry (entry);
       51 dcl       cu_$set_command_processor	entry (entry);
       52 dcl	default_error_handler_$wall	entry;
       53 dcl       terminate_process_		entry (character (*), pointer);
       54 
       55 dcl	bound_tolts_$tolts_  entry  options(variable);
       56 dcl       change_wdir_         entry (char (168), fixed bin (35));
       57 dcl       user_info_$homedir   entry (char(*));
       58 
       59 
       60 
       61 	call hcs_$initiate_search_rules (addr(search_rules), error_code);
       62 	if   error_code ^= 0
       63 	     then goto ERROR;
       64 
       65 	on any_other call default_error_handler_$wall;
       66 
       67           call cu_$set_cl_intermediary (command_level);
       68           call cu_$set_command_processor (command_level);
       69 
       70 	call iox_$control (iox_$user_io, "quit_enable", null (), (0));
       71 
       72 	call user_info_$homedir (homedir);
       73 	call change_wdir_ (homedir, (0));
       74 	call bound_tolts_$tolts_;			/* Call main TOLTS program. */
       75 
       76 	unspec (logout_info) = ""b; /* correct data is all 0 */
       77 	call terminate_process_ ("logout", addr (logout_info));
       78 LOOP:
       79 	pointer (baseptr (-2), 0) -> based_quoi = 0;
       80 	go to LOOP;
       81 
       82 command_level:  entry;                 /* if we ever get to command level we come here. */
       83 
       84 	on any_other go to LOOP;
       85           call ioa_("tolts_overseer_:  Illegal attempt to enter user environment.");
       86 	unspec (logout_info) = ""b;
       87 	logout_info.hold = "1"b;
       88 	call terminate_process_ ("logout", addr (logout_info));
       89 	go to LOOP;
       90 
       91 ERROR:
       92           call com_err_ (error_code, "tolts_overseer_", "Could not set search rules.");
       93 	unspec (init_error) = ""b;
       94 	init_error.error_code = error_code;
       95 	call terminate_process_ ("init_error", addr (init_error));
       96 	go to LOOP;
       97 
       98 	end   tolts_overseer_;
	SOURCE FILES USED IN THIS COMPILATION.

LINE      NUMBER  DATE MODIFIED     NAME			PATHNAME
             0    05/13/82  1246.9  tolts_overseer_.pl1               >spec>on>oversee-fix>tolts_overseer_.pl1
	NAMES DECLARED IN THIS COMPILATION.

IDENTIFIER	     OFFSET    LOC STORAGE CLASS   DATA TYPE		ATTRIBUTES AND REFERENCES
								(* indicates a set context)

NAMES DECLARED BY DECLARE STATEMENT.
addr                                                   builtin function         dcl 28 ref 61 61 77 77 88 88 95 95
any_other                       000160 stack reference condition                dcl 44 ref 65 84
based_quoi                             based           fixed bin(17,0)          dcl 40 set ref 78*
baseptr                                                builtin function         dcl 28 ref 78
bound_tolts_$tolts_             000032 constant        entry                    external dcl 55 ref 74
change_wdir_                    000034 constant        entry                    external dcl 56 ref 73
com_err_                        000020 constant        entry                    external dcl 49 ref 91
cu_$set_cl_intermediary         000022 constant        entry                    external dcl 50 ref 67
cu_$set_command_processor       000024 constant        entry                    external dcl 51 ref 68
default_error_handler_$wall     000026 constant        entry                    external dcl 52 ref 65
error_code                      000100 automatic       fixed bin(35,0)          dcl 17 in procedure "tolts_overseer_" set ref 61* 62
                                                                                  91* 94
error_code                1     000104 automatic       fixed bin(35,0)          level 2 in structure "init_error" dcl 36
                                                                                  in procedure "tolts_overseer_" set ref 94*
hcs_$initiate_search_rules      000012 constant        entry                    external dcl 46 ref 61
hold                      1     000102 automatic       bit(1)                   level 2 packed unaligned dcl 30 set ref 87*
homedir                         000106 automatic       char(168)                unaligned dcl 42 set ref 72* 73*
init_error                      000104 automatic       structure                level 1 dcl 36 set ref 93* 95 95
ioa_                            000014 constant        entry                    external dcl 47 ref 85
iox_$control                    000016 constant        entry                    external dcl 48 ref 70
iox_$user_io                    000010 external static pointer                  dcl 15 set ref 70*
logout_info                     000102 automatic       structure                level 1 dcl 30 set ref 76* 77 77 86* 88 88
pointer                                                builtin function         dcl 28 ref 78
search_rules                    000000 constant        structure                level 1 dcl 19 set ref 61 61
terminate_process_              000030 constant        entry                    external dcl 53 ref 77 88 95
user_info_$homedir              000036 constant        entry                    external dcl 57 ref 72

NAMES DECLARED BY EXPLICIT CONTEXT.
ERROR                           000703 constant        label                    dcl 91 ref 62
LOOP                            000605 constant        label                    dcl 78 ref 80 84 89 96
command_level                   000615 constant        entry                    external dcl 82 ref 67 67 68 68
tolts_overseer_                 000406 constant        entry                    external dcl 11

NAMES DECLARED BY CONTEXT OR IMPLICATION.
null                                                   builtin function         ref 70 70
unspec                                                 builtin function         set ref 76 86* 93*

STORAGE REQUIREMENTS FOR THIS PROGRAM.

	Object	Text	Link	Symbol	Defs	Static
Start          0       0      1200        1240     770        1210
Length      1434     770        40         160     207           0

BLOCK NAME	         STACK SIZE     TYPE		WHY NONQUICK/WHO SHARES STACK FRAME
tolts_overseer_                     166 external procedure  is an external procedure.  
on unit on line 65                   64 on unit               
on unit on line 84                   64 on unit               

STORAGE FOR AUTOMATIC VARIABLES.

STACK FRAME                 LOC IDENTIFIER                  BLOCK NAME
tolts_overseer_          000100 error_code                  tolts_overseer_
                         000102 logout_info                 tolts_overseer_
                         000104 init_error                  tolts_overseer_
                         000106 homedir                     tolts_overseer_

THE FOLLOWING EXTERNAL OPERATORS ARE USED BY THIS PROGRAM.
call_ext_out_desc   call_ext_out        return              tra_ext             enable              ext_entry
int_entry

THE FOLLOWING EXTERNAL ENTRIES ARE CALLED BY THIS PROGRAM.
bound_tolts_$tolts_           change_wdir_                  com_err_                      cu_$set_cl_intermediary
cu_$set_command_processor     default_error_handler_$wall   hcs_$initiate_search_rules    ioa_
iox_$control                  terminate_process_            user_info_$homedir

THE FOLLOWING EXTERNAL VARIABLES ARE USED BY THIS PROGRAM.
iox_$user_io




   LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC   
     11 000405        61 000413        62 000425        65 000427        67 000450        68 000463        70 000476
     72 000532        73 000543        74 000555        76 000562        77 000564        78 000605        80 000613
     82 000614        84 000622        85 000641        86 000655        87 000657        88 000661        89 000702
     91 000703        93 000735        94 000737        95 000741        96 000764


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
