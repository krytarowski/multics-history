	COMPILATION LISTING OF SEGMENT asr_com_channel_info_srvr_
	Compiled by: Multics PL/I Compiler, Release 30, of February 16, 1988
	Compiled at: Honeywell Bull, Phoenix AZ, SysM
	Compiled on: 07/20/88  1019.0 mst Wed
	    Options: optimize map

        1 /****^  ***********************************************************
        2*        *                                                         *
        3*        * Copyright, (C) Honeywell Bull Inc., 1987                *
        4*        *                                                         *
        5*        * Copyright, (C) Honeywell Information Systems Inc., 1985 *
        6*        *                                                         *
        7*        *********************************************************** */
        8 
        9 /****^  HISTORY COMMENTS:
       10*  1) change(87-04-28,GDixon), approve(87-07-13,MCR7741),
       11*     audit(87-07-27,Brunelle):
       12*     Updated for change to user_table_entry.incl.pl1.
       13*  2) change(87-07-24,Dickson), approve(87-07-24,MCR7722),
       14*     audit(87-07-27,Brunelle):
       15*     Added auditing of grants and failures.
       16*                                                   END HISTORY COMMENTS */
       17 
       18 /* format: style2,idind30 */
       19 
       20 asr_com_channel_info_srvr_:
       21      procedure (ASR_info_ptr, ASR_sender_ptr);
       22 
       23 /**** This program handles requests for info on com channels. */
       24 
       25 
       26 /**** Written 1985-02-19, BIM */
       27 /**** Modified 1985-02-22 by E. Swenson to not replace reply error
       28*      code with error_table_$no_info if a more explicit error code
       29*      has already been set up. */
       30 
       31 	declare (ASR_info_ptr, ASR_sender_ptr)
       32 				        pointer parameter;
       33 
       34 	dcl     cdtx		        fixed bin;
       35 	dcl     fnp_sw		        bit (1) aligned;
       36 	dcl     code		        fixed bin (35);
       37 
       38 	dcl     aim_util_$get_access_class    entry (bit (72) aligned) returns (bit (72) aligned);
       39 	dcl     as_access_audit_$asr_com_chn_info_srvr
       40 				        entry (char (*), pointer, pointer, fixed bin (35));
       41 	dcl     as_user_message_$priv_add_message
       42 				        entry (pointer, fixed bin (35));
       43 	dcl     cdt_mgr_$find_cdt_channel     entry (pointer, character (32), fixed binary, bit (1) aligned,
       44 				        fixed binary (35));
       45 	dcl     ioa_$rsnnl		        entry () options (variable);
       46 	dcl     sys_log_$error_log	        entry options (variable);
       47 
       48 	dcl     error_table_$no_info	        fixed bin (35) ext static;
       49 
       50 	dcl     error_table_$unimplemented_version
       51 				        fixed bin (35) ext static;
       52 
       53 	dcl     addr		        builtin;
       54 	dcl     currentsize		        builtin;
       55 	dcl     null		        builtin;
       56 	dcl     unspec		        builtin;
       57 
       58 	dcl     ME		        char (32) internal static options(constant)
       59 						init ("asr_com_channel_info_srvr_");
       60 
       61 
       62 	asr_com_channel_info_ptr = ASR_info_ptr;
       63 	as_request_sender_ptr = ASR_sender_ptr;
       64 	asr_reply_cci_ptr = addr (as_request_sender.reply_message);
       65 	unspec (asr_reply_com_channel_info) = ""b;
       66 
       67 	if asr_com_channel_info.version ^= ASR_CCI_VERSION_1
       68 	     | asr_com_channel_info.reply_version_requested ^= AS_COM_CHANNEL_INFO_VERSION_1
       69 	then do;
       70 		asr_reply_com_channel_info.code = error_table_$unimplemented_version;
       71 		go to ERROR;
       72 	     end;
       73 
       74 	cdtp = as_data_$cdtp;
       75 	call cdt_mgr_$find_cdt_channel (cdtp, asr_com_channel_info.channel_name, cdtx, fnp_sw, code);
       76 	if fnp_sw | code ^= 0
       77 	then go to ERROR;
       78 
       79 	cdtep = addr (cdt.cdt_entry (cdtx));
       80 
       81 	if cdte.current_service_type = ANS_SERVICE
       82 	then do;					/* be sure it is login channel of requestor */
       83 		if ^(cdte.in_use = NOW_HAS_PROCESS & cdte.process -> ute.proc_id = as_request_sender.process_id)
       84 		then go to ERROR;
       85 	     end;
       86 	else if cdte.current_service_type = DIAL_OUT_SERVICE | cdte.current_service_type = SLAVE_SERVICE
       87 	     | cdte.current_service_type = TANDD_SERVICE | cdte.current_service_type = DIAL_SERVICE
       88 	then do;
       89 		if cdte.dialed_to_procid ^= as_request_sender.process_id
       90 		then go to ERROR;
       91 	     end;
       92 	else go to ERROR;
       93 
       94 /**** Okay, this channel belongs to this user */
       95 
       96 	if asr_com_channel_info.reply_message_handle ^= ""b
       97 	then call SEND_REPLY;
       98 
       99 	call as_access_audit_$asr_com_chn_info_srvr (ME, addr(as_request_sender),
      100 		addr(asr_com_channel_info), asr_reply_com_channel_info.code);
      101 
      102 	return;
      103 
      104 ERROR:
      105 /**** If we haven't set with a more specific code, give him the generic no_info code. */
      106 	if asr_reply_com_channel_info.code = 0
      107 	then asr_reply_com_channel_info.code = error_table_$no_info;
      108 
      109 	call as_access_audit_$asr_com_chn_info_srvr (ME, addr(as_request_sender),
      110 		addr(asr_com_channel_info), asr_reply_com_channel_info.code);
      111 
      112 	return;
      113 
      114 
      115 SEND_REPLY:
      116      procedure;
      117 
      118 	declare 1 asum_ai		        aligned like as_user_message_add_info;
      119 	declare 1 ascci		        aligned like as_com_channel_info;
      120 	declare code		        fixed bin (35);
      121 
      122 	unspec (ascci) = ""b;
      123 	ascci.version = AS_COM_CHANNEL_INFO_VERSION_1;
      124 	ascci.channel_name = cdte.name;
      125 	ascci.flags.access_control = cdte.flags.access_control, by name;
      126 	ascci.attached_to_caller = "1"b;		/* always true, other case not yet supported */
      127 	ascci.user_authenticated = (cdte.user_name.person ^= "");
      128 	ascci.dialed_to_caller = (cdte.current_service_type = DIAL_SERVICE);
      129 	ascci.service_type = cdte.service_type;
      130 	ascci.current_service_type = cdte.current_service_type;
      131 	ascci.access_class = cdte.access_class;
      132 	ascci.current_access_class = cdte.current_access_class (1);
      133 	if ascci.user_authenticated
      134 	then call ioa_$rsnnl ("^a.^a", ascci.auth_user_name, (0), cdte.user_name.person, cdte.user_name.project);
      135 	else ascci.auth_user_name = "";
      136 
      137 	unspec (asum_ai) = ""b;
      138 	asum_ai.version = AS_USER_MESSAGE_ADD_INFO_VERSION_1;
      139 	asum_ai.message_ptr = addr (ascci);
      140 	asum_ai.message_length = currentsize (ascci);
      141 	asum_ai.message_access_class = aim_util_$get_access_class (as_request_sender.authorization);
      142 	asum_ai.destination_info.group_id = as_request_sender.group_id;
      143 	asum_ai.destination_info.process_id = as_request_sender.process_id;
      144 	asum_ai.destination_info.handle = asr_com_channel_info.reply_message_handle;
      145 	asum_ai.destination_info.ring = as_request_sender.validation_level;
      146 	asum_ai.reader_deletes = "1"b;
      147 	call as_user_message_$priv_add_message (addr (asum_ai), code);
      148 	if code ^= 0
      149 	then do;
      150 		call sys_log_$error_log (SL_LOG, code, "asr_com_channel_info_srvr_",
      151 		     "Failed to send reply message to ^a.", as_request_sender.group_id);
      152 	     end;
      153 	return;
      154      end SEND_REPLY;
      155 
  1     1 /* BEGIN INCLUDE FILE ... as_data_.incl.pl1 ... */
  1     2 
  1     3 /* format: style4 */
  1     4 
  1     5 /* This file must be kept in sync with as_data_.alm */
  1     6 
  1     7 /****^  HISTORY COMMENTS:
  1     8*  1) change(86-09-21,Beattie), approve(86-09-22,MCR7542),
  1     9*     audit(86-10-31,Brunelle), install(86-11-12,MR12.0-1211):
  1    10*     Remove references to the 963 and 029 preaccess commands and remove support
  1    11*     for ARDS, 202_ETX, 2741 and 1050 in system interfaces.
  1    12*  2) change(86-09-25,Swenson), approve(87-07-20,MCR7737),
  1    13*     audit(87-07-20,GDixon), install(87-08-04,MR12.1-1056):
  1    14*     Add references to as_data_ entrypoints added for Login Server.
  1    15*  3) change(87-03-03,Brunelle), approve(87-07-20,MCR7697),
  1    16*     audit(87-07-20,GDixon), install(87-08-04,MR12.1-1056):
  1    17*     Added new user signal field of inacrcvd (14) to handle inactivity response
  1    18*     from user.
  1    19*                                                   END HISTORY COMMENTS */
  1    20 
  1    21 dcl  as_data_$BS char (1) aligned ext static;		/* BACKSPACE character */
  1    22 dcl  as_data_$CR char (1) aligned ext static;		/* CARRIAGE RETURN character */
  1    23 dcl  as_data_$abs_dim char (32) ext static;		/* absentee DIM */
  1    24 dcl  as_data_$acct_update_priority fixed bin ext static;	/* accounting update IPC priority */
  1    25 dcl  as_data_$acsdir char (168) ext static;		/* Access Control Segment directory */
  1    26 dcl  as_data_$ansp ptr ext static;			/* answer_table */
  1    27 dcl  as_data_$as_procid bit (36) aligned ext static;	/* Answering Service process id */
  1    28 dcl  as_data_$as_ring fixed bin (3) ext static;		/* AS operating ring */
  1    29 dcl  as_data_$as_tty char (6);			/* AS master tty channel */
  1    30 dcl  as_data_$asmtp ptr ext static;			/* AS meter table */
  1    31 dcl  as_data_$autp ptr ext static;			/* absentee_user_table */
  1    32 dcl  as_data_$buzzardp ptr ext static;			/* dpg_ list of buteo processes */
  1    33 dcl  as_data_$cdtp ptr ext static;			/* CDT */
  1    34 dcl  as_data_$default_weight fixed bin (35) ext;		/* default user process load control weight */
  1    35 dcl  as_data_$devtabp ptr ext static;			/* device_table */
  1    36 dcl  as_data_$dft_user_ring fixed bin (3) ext static;	/* default user ring */
  1    37 dcl  as_data_$dutp ptr ext static;			/* daemon_user_table */
  1    38 dcl  as_data_$g115_dim char (32) ext static;
  1    39 dcl  as_data_$lct_initialized bit (1) aligned ext static;	/* LCT allocated in ring 0 */
  1    40 dcl  as_data_$lct_size fixed bin ext static;		/* CDT tty channels + spares */
  1    41 dcl  as_data_$max_user_ring fixed bin (3) ext static;	/* maximum user ring */
  1    42 dcl  as_data_$mgtp ptr ext static;			/* master group table */
  1    43 dcl  as_data_$mrd_dim char (32) ext static;		/* daemon's message routing DIM */
  1    44 dcl  as_data_$ntty_dim char (32) ext static;		/* network connection DIM */
  1    45 dcl  as_data_$pdtdir char (168) ext static;		/* PDT directory */
  1    46 dcl  as_data_$pit_ptr ptr ext static;			/* pit_temp_ */
  1    47 dcl  as_data_$rcpdir char (168) ext static;		/* RCP directory */
  1    48 dcl  as_data_$request_priority fixed bin ext static;
  1    49 dcl  as_data_$rs_ptrs (0:9) ptr ext static;		/* rate_structures */
  1    50 dcl  as_data_$rtdtp ptr ext static;			/* RTDT */
  1    51 dcl  as_data_$sat_htp ptr ext static;			/* SAT hash table */
  1    52 dcl  as_data_$satp ptr ext static;			/* SAT */
  1    53 dcl  as_data_$suffix (0:9) char (2) unaligned ext static;
  1    54 dcl  as_data_$sysdir char (168) ext static;		/* system control directory */
  1    55 dcl  as_data_$teens_suffix (10:19) char (2) unaligned ext static;
  1    56 dcl  as_data_$terminet_tabs_string char (144) varying ext static;
  1    57 dcl  as_data_$tty_dim char (32) ext static;		/* standard interactive DIM */
  1    58 dcl  as_data_$update_priority fixed bin ext static;	/* ??? */
  1    59 dcl  as_data_$version char (8) ext static;		/* AS version */
  1    60 dcl  as_data_$whoptr ptr ext static;			/* whotab */
  1    61 
  1    62 dcl  1 as_data_$login_args aligned ext static,		/* control arguments for login */
  1    63        2 n_login_args fixed bin,
  1    64        2 pad fixed bin,
  1    65        2 login_args (55 /* as_data_$login_args.n_login_args */) char (24) unaligned;
  1    66 
  1    67 dcl  1 as_data_$signal_types ext static aligned,		/* IPC process control signals */
  1    68        2 n_signals fixed bin,
  1    69        2 pad fixed bin,
  1    70        2 signals (14 /* as_data_$signal_types.n_signals */) char (8) unaligned;
  1    71 
  1    72 dcl  1 as_data_$system_signal_types ext static aligned,	/* IPC process control signals */
  1    73        2 n_system_signals fixed bin,
  1    74        2 pad fixed bin,
  1    75        2 system_signals (10 /* as_data_$system_signal_types.n_system_signals */) char (8) unaligned;
  1    76 
  1    77 dcl  as_data_$login_words fixed bin ext static aligned,
  1    78 						/* interactive login words */
  1    79      1 as_data_login_words aligned based (addr (as_data_$login_words)),
  1    80        2 n_words fixed bin,
  1    81        2 pad fixed bin,
  1    82        2 words (0 refer (as_data_login_words.n_words)) char (16) unaligned;
  1    83 
  1    84 dcl  as_data_$debug_flag bit (1) aligned external static;
  1    85 dcl  as_data_$ls_request_server_info_ptr ptr external static;
  1    86 dcl  as_data_$ls_message_buffer_cur_lth fixed bin (18) external static;
  1    87 dcl  as_data_$ls_message_buffer_max_lth fixed bin (18) external static;
  1    88 dcl  as_data_$ls_message_buffer_ptr ptr external static;
  1    89 
  1    90 /* END INCLUDE FILE ... as_data_.incl.pl1 ... */
      156 
  2     1 /* BEGIN INCLUDE FILE ... as_request_header.incl.pl1 */
  2     2 
  2     3 /* DESCRIPTION:
  2     4*   Answering Service request information.
  2     5**/
  2     6 
  2     7 
  2     8 /****^  HISTORY COMMENTS:
  2     9*  1) change(00-01-01,JRandom), approve(), audit(), install():
  2    10*      Written by someone, at sometime.
  2    11*  2) change(84-09-10,Tague), approve(), audit(), install():
  2    12*      R. Michael Tague: Added ASR_BUMP_USER request.
  2    13*  3) change(84-10-04,Margulies), approve(), audit(), install():
  2    14*      BIM: ASR_ADMIN_COMMAND.
  2    15*  4) change(85-01-23,Swenson), approve(), audit(), install():
  2    16*      E. Swenson for ASR_NOTE_PNT_CHANGE.
  2    17*  5) change(85-02-18,Margulies), approve(), audit(), install():
  2    18*      BIM: ASR_DAEMON_COMMAND, ASR_COM_CHANNEL_INFO
  2    19*  6) change(85-12-12,Lippard), approve(85-12-30,MCR7326),
  2    20*     audit(86-10-27,GDixon), install(86-10-28,MR12.0-1200):
  2    21*      Jim Lippard: Added ASR_ABS_COMMAND request.
  2    22*                                                   END HISTORY COMMENTS */
  2    23 
  2    24 
  2    25 /* format: style4 */
  2    26 
  2    27 dcl  as_request_version_1 fixed bin internal static initial (1) options (constant);
  2    28 
  2    29 dcl  (
  2    30      ASR_FIRST_TYPE initial (1),
  2    31      ASR_DIAL_SERVER initial (1),
  2    32      ASR_DIAL_OUT initial (2),
  2    33      ASR_FPE_CAUSES_LOGOUT initial (3),
  2    34      ASR_FPE_CAUSES_NEW_PROC initial (4),
  2    35      ASR_PROC_TERM_NOTIFY initial (5),
  2    36      ASR_BUMP_USER initial (6),
  2    37      ASR_ADMIN_COMMAND initial (7),
  2    38      ASR_NOTE_PNT_CHANGE initial (8),
  2    39      ASR_DAEMON_COMMAND initial (9),
  2    40      ASR_COM_CHANNEL_INFO initial (10),
  2    41      ASR_ABS_COMMAND initial (11),
  2    42      ASR_LAST_TYPE initial (11)
  2    43      ) fixed bin internal static options (constant);
  2    44 
  2    45 dcl  ASR_DEFER_IN_ADMIN_MODE (1:11) bit (1) int static options (constant)
  2    46      init ((6) (1) "0"b, "1"b, (4) (1) "0"b);
  2    47 
  2    48 dcl  ASR_REQUEST_NAMES (1:11) int static options (constant)
  2    49 	char (40) init (
  2    50 	"Dial request",
  2    51 	"Dial out request",
  2    52 	"Logout on fatal process error",
  2    53 	"New process on fatal process error",
  2    54 	"Monitor process terminations",
  2    55 	"Bump user",
  2    56 	"Execute admin command",
  2    57 	"Note PNT change",
  2    58 	"Daemon command",
  2    59 	"Communications channel info",
  2    60 	"Absentee command");
  2    61 
  2    62 dcl  1 as_request_header based aligned,
  2    63        2 version fixed bin,				/* version number */
  2    64        2 type fixed bin,				/* what to do */
  2    65        2 reply_channel fixed bin (71);			/* who to tell */
  2    66 
  2    67 
  2    68 /* END INCLUDE FILE ... as_request_header.incl.pl1 */
      157 
  3     1 /*  BEGIN INCLUDE FILE ... asr_com_channel_info.incl.pl1 */
  3     2 
  3     3 
  3     4 /****^  HISTORY COMMENTS:
  3     5*  1) change(85-02-18,Margulies), approve(), audit(), install():
  3     6*     Initial coding.
  3     7*  2) change(87-06-07,GDixon), approve(87-07-13,MCR7741),
  3     8*     audit(87-07-16,Brunelle), install(87-08-04,MR12.1-1056):
  3     9*     Use correct include file name in begin/end comments.
  3    10*                                                   END HISTORY COMMENTS */
  3    11 
  3    12 
  3    13 /* format: style4 */
  3    14 /* request AS to request com channel info */
  3    15 
  3    16 dcl  asr_com_channel_info_ptr pointer;
  3    17 dcl  1 asr_com_channel_info aligned based (asr_com_channel_info_ptr),
  3    18        2 header aligned like as_request_header,
  3    19        2 version char (8),
  3    20        2 channel_name char (32) unaligned,
  3    21        2 reply_version_requested char (8),
  3    22        2 reply_message_handle bit (72) aligned;
  3    23 
  3    24 dcl  ASR_CCI_VERSION_1 char (8) init ("asrci001") int static options (constant);
  3    25 
  3    26 dcl asr_reply_cci_ptr pointer;
  3    27 dcl  1 asr_reply_com_channel_info aligned based (asr_reply_cci_ptr),
  3    28        2 code fixed bin (35),
  3    29        2 pad bit (36) aligned;
  3    30 
  3    31 /*  END INCLUDE FILE ... asr_com_channel_info.incl.pl1 */
      158 
  4     1 /* Begin include file as_com_channel_info.incl.pl1 */
  4     2 
  4     3 /* Created 1985-02-19 by BIM */
  4     4 /* Recreated 1985-02-22 by E. Swenson since the include file was lost. */
  4     5 
  4     6 /* format: style4 */
  4     7 
  4     8 dcl as_com_channel_info_ptr pointer;
  4     9 dcl 1 as_com_channel_info aligned
  4    10       based (as_com_channel_info_ptr),
  4    11       2 version char (8),
  4    12       2 channel_name char (32),
  4    13       2 flags aligned,
  4    14         3 access_control unaligned,
  4    15           4 login bit (1),
  4    16           4 dial_slave bit (1),
  4    17 	4 priv_attach bit (1),
  4    18 	4 dial_server bit (1),
  4    19 	4 dial_out bit (1),
  4    20         3 attached_to_caller bit (1) unaligned,
  4    21         3 user_authenticated bit (1) unaligned,
  4    22         3 dialed_to_caller bit (1) unaligned,
  4    23         3 pad bit (28) unaligned,
  4    24       2 service_type fixed bin,
  4    25       2 current_service_type fixed bin,
  4    26       2 access_class (2) bit (72) aligned,
  4    27       2 current_access_class bit (72) aligned,
  4    28       2 auth_user_name char (32) unaligned;
  4    29 
  4    30 declare AS_COM_CHANNEL_INFO_VERSION_1 char (8) aligned init ("ascci001") int static options (constant);
  4    31 
  4    32 /* End include file as_com_channel_info.incl.pl1 */
      159 
  5     1 /* Begin include file as_request_sender_.incl.pl1 84-06-06 BIM */
  5     2 
  5     3 /****^  HISTORY COMMENTS:
  5     4*  1) change(86-10-14,Lippard), approve(85-12-30,MCR7326),
  5     5*     audit(86-10-24,GDixon), install(86-10-28,MR12.0-1200):
  5     6*      Added max_authorization and audit_flags.
  5     7*                                                   END HISTORY COMMENTS */
  5     8 
  5     9 /* Structure passed from as_request_server_ to the various
  5    10*   requests to identify requester. */
  5    11 /* format: style3,indcomtxt */
  5    12 
  5    13 declare	as_request_sender_ptr
  5    14 			pointer;
  5    15 declare	1 as_request_sender aligned based (as_request_sender_ptr),
  5    16 	  2 version	char (8) aligned,
  5    17 	  2 reply_message	fixed bin (71),
  5    18 	  2 group_id	char (32) unaligned,
  5    19 	  2 process_id	bit (36),
  5    20 	  2 validation_level
  5    21 			fixed bin (3),
  5    22 	  2 authorization	bit (72),
  5    23 	  2 max_authorization
  5    24 			bit (72),
  5    25 	  2 audit_flags	bit (36);
  5    26 
  5    27 declare	AS_REQUEST_SENDER_VERSION_2
  5    28 			char (8) init ("asrqs002") internal static options (constant);
  5    29 
  5    30 /* End include file as_request_sender_.incl.pl1 */
      160 
  6     1 /* Begin include file as_user_message_add.incl.pl1 BIM 1985-01-12 */
  6     2 /* format: style4 */
  6     3 
  6     4 declare as_user_message_add_info_ptr pointer;
  6     5 declare 1 as_user_message_add_info aligned based (as_user_message_add_info_ptr),
  6     6         2 version char (8) aligned,
  6     7         2 message_info aligned,
  6     8           3 message_ptr pointer,
  6     9 	3 message_length fixed bin (18),
  6    10 	3 pad bit (36) aligned,
  6    11 	3 message_access_class bit (72) aligned,
  6    12 	3 message_id bit (72) aligned, /* output */
  6    13         2 destination_info aligned,
  6    14           3 group_id char (32) unal, /* stars permitted */
  6    15 	3 process_id bit (36) aligned, /* (36)"1"b for ANY */
  6    16 	3 handle bit (72) aligned, /* may NOT be zero */
  6    17 	3 ring fixed bin (3),
  6    18 	3 reader_deletes bit (1) aligned;
  6    19 
  6    20 declare AS_USER_MESSAGE_ADD_INFO_VERSION_1
  6    21         char (8) init ("auma0001") int static options (constant);
  6    22 
  6    23 /* End include file as_user_message_add.incl.pl1 */
      161 
  7     1 /* BEGIN INCLUDE FILE ... cdt.incl.pl1 */
  7     2 
  7     3 /* format: style3,idind25,indcomtxt */
  7     4 
  7     5 /* Channel Definition Table.
  7     6*   This table lists all of the hardware channels (ports) connected
  7     7*   to the system, and maintains the attributes of each one.
  7     8*
  7     9*   PG 741230
  7    10*   Modified by Mike Grady 5/6/76 to add FNP info.
  7    11*   Modified by Tom Casey 7/29/76 to add more FNP info and a few other things.
  7    12*   Modified by Robert Coren 6/13/77 to make terminal types be character strings.
  7    13*   Modified July 1979 by T. Casey to add several variables for MR8.0 process preservation facility.
  7    14*   Modified December 1980 by E. N. Kittlitz to eliminate cdte.phone_no.
  7    15*   Modified March 1981 by Robert Coren to add "listening" flag for multiplexers and to add TANDD_SERVICE service_type.
  7    16*   Modified April 1981 by E. N. Kittlitz to add cdte.dial_ev_chn, cdte.recent_wakeup_time, cdte.recent_wakeup_count.
  7    17*   Modified July 1981 by T. Casey for MR9.0 to add dialup_flags.detach_after_hangup
  7    18*   Modified December 1981 by E. N. Kittlitz for cdte.leave_edited, cdte.hold_arg,
  7    19*   Modified September 1981 by Benson I. Margulies for cdt_mgr_'s tree of multiplexer's.
  7    20*   Modified August 1982 by E. N. Kittlitz for check_acs.
  7    21*   Modified January 1983 by Keith Loepere for generic_destination.
  7    22*   Modified August 1983 by Robert Coren to add mpxe.check and mpxe.retry_load.
  7    23*   Modified 831216 by E. N. Kittlitz for required_access_class.
  7    24*   Modified 84-04-01 by BIM to finish communications AIM:
  7    25*   access class ranges,
  7    26*   access_control flags.
  7    27**/
  7    28 
  7    29 
  7    30 /****^  HISTORY COMMENTS:
  7    31*  1) change(87-03-17,Beattie), approve(87-04-06,MCR7656),
  7    32*     audit(87-07-13,Parisek), install(87-08-04,MR12.1-1056):
  7    33*     Add support for answering service to use IOCBs when tty_ cannot be
  7    34*     used to service login channels.
  7    35*                                                   END HISTORY COMMENTS */
  7    36 
  7    37 
  7    38 dcl	CDT_version_5	     fixed bin internal static initial (5) options (constant);
  7    39 dcl	CDT_version	     fixed bin internal static initial (6) options (constant);
  7    40 
  7    41 dcl	(cdtp, cdtep, fnpep, mpxep)
  7    42 			     ptr;
  7    43 
  7    44 dcl	1 cdt		     based (cdtp) aligned,	/* all of the system channels */
  7    45 	  2 author	     like author_dcl.author,	/* standard header */
  7    46 	  2 max_size	     fixed bin,		/* maximum number of cdte's in 255K */
  7    47 	  2 current_size	     fixed bin,		/* number of last cdte. */
  7    48 	  2 version	     fixed bin,
  7    49 	  2 freep		     fixed bin,		/* chain of free cdte's */
  7    50 	  2 n_cdtes	     fixed bin,		/* number of used cdte's */
  7    51 	  2 meters_last_reset    fixed bin (71),	/* clock time dialup meters were reset */
  7    52 	  2 realtime_in_dialup   fixed bin (71),	/* Dialup meter */
  7    53 	  2 cpu_in_dialup	     fixed bin (71),	/* .. */
  7    54 	  2 pf_in_dialup	     fixed bin,		/* .. */
  7    55 	  2 pp_in_dialup	     fixed bin,		/* .. */
  7    56 	  2 entries_to_dialup    fixed bin,		/* .. */
  7    57 	  2 flags,
  7    58 	    3 go		     bit (1) unal,		/* ans. serv. said "go ahead and answer the phones" */
  7    59 	    3 cdt_is_live	     bit (1) unal,		/* cdt is active */
  7    60 	    3 mux_mgr_system_init
  7    61 			     bit (1) unal,		/* mux mgr has loaded top-levels */
  7    62 	    3 pad1	     bit (33) unal,
  7    63 	  2 acceptable_fnp_tbf   fixed bin,		/* acceptable minutes between FNP crashes */
  7    64 	  2 spare_channel_count  fixed bin,		/* number of extra channels to leave room for in ring0 */
  7    65 	  2 threads	     aligned like channel_threads,
  7    66 						/* root of non-fnp-top-level-multiplexers */
  7    67 	  2 pad2		     (31) bit (36) aligned,	/* pad header to 80 words */
  7    68 	  2 fnp_entry	     dim (8) like fnpe,	/* max of 8 FNPs for now */
  7    69 	  2 cdt_entry	     dim (2500) like cdte;	/* # of cdte's in 255K */
  7    70 
  7    71 
  7    72 dcl	1 cdte		     based (cdtep) aligned,	/* a channel */
  7    73 	  2 in_use	     fixed bin,		/* see dialup_values. 0=NOW_FREE */
  7    74 /**** * These variables are filled in when the CDTE is created by cv_cmf. They are not dynamic. */
  7    75 	  2 pad1		     bit (36) aligned,
  7    76 	  2 name		     char (32),		/* ASCII name of channel */
  7    77 	  2 access_class	     (2) bit (72) aligned,	/* access class range */
  7    78 	  2 comment	     char (48),		/* printable message about channel */
  7    79 	  2 charge_type	     fixed bin (17) unal,	/* billing group */
  7    80 	  2 service_type	     fixed bin (17) unal,	/* service group (AS, ftp, mc) */
  7    81 	  2 line_type	     fixed bin (17) unal,	/* tty line type (protocol) */
  7    82 	  2 baud_rate	     fixed bin (17) unal,	/* 110, 133, 150, etc. */
  7    83 	  2 modem_type	     fixed bin (17) unal,	/* type of modem on this channel */
  7    84 	  2 pad2		     bit (18) unaligned,
  7    85 	  2 answerback	     char (8),		/* answerback string expected */
  7    86 	  2 initial_terminal_type
  7    87 			     char (32) unal,	/* as specified in the CMF */
  7    88 	  2 mpx_data	     unal,		/* data used only for multiplexed channels */
  7    89 	    3 mpx_type	     fixed bin (17),	/* type of multiplexing used */
  7    90 	    3 mpx_service	     fixed bin (17),	/* service type, active or inactive */
  7    91 	  2 flags,
  7    92 	  ( 3 attributes,
  7    93 	      4 ck_answerback    bit (1),		/* ON means that ansbk must equal our records */
  7    94 	      4 audit_access_error
  7    95 			     bit (1),		/* ON means ck that person auth is inside access class range  */
  7    96 						/*    this implies that the access_class describes a range of
  7    97*						   legitimate user auths. */
  7    98 	      4 hardwired	     bit (1),		/* ON means it is */
  7    99 	      4 set_modes	     bit (1),		/* ON means to set initial modes at dialup */
  7   100 	      4 dont_read_answerback
  7   101 			     bit (1),		/* ON means don't try to read answerback */
  7   102 	      4 pada	     bit (4),
  7   103 	    3 access_control     unaligned,		/* As below */
  7   104 	      4 dial_out	     bit (1),		/* dialing user must be on ACS */
  7   105 	      4 priv_attach	     bit (1),		/* PA_ user must be on ACS */
  7   106 	      4 dial_server	     bit (1),		/* accept_dials process must be on acs */
  7   107 	      4 login	     bit (1),		/* logging in user must be on acs */
  7   108 	      4 slave_dial	     bit (1),		/* dialing user must give -user and be on acs */
  7   109 	      4 pado	     bit (3),
  7   110 	    3 options,
  7   111 	      4 execute_initial_command
  7   112 			     bit (1),		/* ON means to do it */
  7   113 	      4 attached_by_operator
  7   114 			     bit (1),		/* ON means temporary attachment. */
  7   115 	      4 private_line     bit (1),		/* ON means private_line sync modem in use */
  7   116 	      4 bsc_ebcdic	     bit (1),		/* ON means bsc would like to use ebcdic code set */
  7   117 	      4 bsc_transparent  bit (1),		/* ON means bsc is in transparent mode */
  7   118 	      4 vip_pollselect   bit (1),		/* ON means VIP line is multidrop */
  7   119 	      4 autobaud	     bit (1),		/* ON means auto baud detection this channel */
  7   120 	      4 generic_destination_present
  7   121 			     bit (1),		/* ON means that the initial_command field contains
  7   122*						   a generic destination to match on dial_out or priv attach */
  7   123 	      4 use_iocb	     bit (1),		/* ON means to use IOCB operations to support channel */
  7   124 	      4 pado	     bit (9)
  7   125 	      )		     unaligned,
  7   126 	  2 initial_command	     char (64),		/* pseudo first input line */
  7   127 /**** The following variables represent dynamic control info, and
  7   128*      are used mostly by dialup_ and asu_ */
  7   129 	  2 event		     fixed bin (71),	/* event call channel for channel events */
  7   130 	  2 current_service_type fixed bin (17) unal,	/* Current usage of line. */
  7   131 	  2 tra_vec	     fixed bin (17) unal,	/* which section of dialup_ to do next */
  7   132 	  2 count		     fixed bin (17) unal,	/* How many login tries he's had. */
  7   133 	  2 dialup_flags	     unal,		/* flag bits for dialup to maintain */
  7   134 	    3 ppm		     bit (1) unal,		/* print preaccess message for IBM terminals */
  7   135 	    3 cpo		     bit (1) unal,		/* conditional printer-off (depends on answerback */
  7   136 	    3 wakeup_handler     bit (1) unal,		/* says who is wakeup handler for this channel */
  7   137 						/* 0 = dialup_, 1 = mc_tty_ */
  7   138 	    3 save_arg	     bit (1) unal,		/* -save login arg given */
  7   139 	    3 nosave_arg	     bit (1) unal,		/* -nosave login arg given */
  7   140 	    3 detach_after_hangup
  7   141 			     bit (1) unal,		/* remember WAIT_DETACH when setting WAIT_BEFORE_HANGUP */
  7   142 	    3 leave_edited	     bit (1) unal,		/* user control of edited mode */
  7   143 	    3 hold_arg	     bit (1) unal,		/* -hold arg given */
  7   144 	    3 no_hold_arg	     bit (1) unal,		/* -no_hold arg given */
  7   145 	    3 immediate_arg	     bit (1) unal,		/* -immediate arg given */
  7   146 	    3 current_access_class_valid
  7   147 			     bit (1) unal,		/* dialup_ or lg_ctl_ has determined the current_access_class */
  7   148 	    3 pad		     bit (7) unal,
  7   149 	  2 twx		     fixed bin,		/* channel device index */
  7   150 	  2 state		     fixed bin,		/* channel state */
  7   151 	  2 tty_id_code	     char (4),		/* channel id (answerback) */
  7   152 	  2 current_terminal_type
  7   153 			     char (32) unal,	/* most recently-set terminal type */
  7   154 	  2 process	     ptr unal,		/* ptr to ATE owning this channel */
  7   155 	  2 dialed_to_procid     bit (36),		/* Dialed channels remember owner's proc id */
  7   156 	  2 next_channel	     fixed bin (17) unal,	/* cdte index of next channel for this process */
  7   157 	  2 cur_line_type	     fixed bin (17) unal,	/* line type of currently dialed terminal */
  7   158 	  2 current_access_class (2) bit (72) aligned,	/* This is a range, but at this time it must be a null range.
  7   159*						   We do not yet define multi-class connections, but we will someday. */
  7   160 	  2 disconnected_ate_index
  7   161 			     fixed bin (17) unal,	/* index of ate of disconnected process */
  7   162 	  2 dial_ctl_ring	     fixed bin (3) unsigned unaligned,
  7   163 						/* used by dial_ctl_ to record ring of priv_attach or dial_out attachments */
  7   164 	  2 dial_rq_privileged   bit (1) unaligned,	/* used by dial ctl to record comm priv from priv_attach or dial_out request */
  7   165 	  2 pad3		     bit (14) unaligned,
  7   166 /**** The following variables are kept for metering purposes. */
  7   167 	  2 n_dialups	     fixed bin,		/* number of times channel has been dialed up */
  7   168 	  2 n_logins	     fixed bin,		/* number of login sessions on this channel */
  7   169 	  2 dialed_up_time	     fixed bin (35),	/* total time channel was dialed up (seconds) */
  7   170 	  2 dialup_time	     fixed bin (71),	/* time of present dialup */
  7   171 	  2 disconnected_proc_command
  7   172 			     fixed bin (12) unsigned unal,
  7   173 						/* 1 to 5 for -list,-create,-connect,-new_proc,-destroy */
  7   174 	  2 disconnected_proc_number
  7   175 			     fixed bin (12) unsigned unal,
  7   176 						/* {N} in -connect {N}, -new_proc {N}, -destroy {N} */
  7   177 	  2 n_disconnected_procs fixed bin (12) unsigned unal,
  7   178 						/* number of disconnected processes that user has */
  7   179 	  2 recent_wakeup_count  fixed bin,		/* counter to detect channel wakeup loop */
  7   180 	  2 recent_wakeup_time   fixed bin (71),	/* time of first wakeup in suspected channel wakeup loop */
  7   181 	  2 dial_ev_chn	     fixed bin (71),	/* Dialed channels remember master's IPC channel */
  7   182 /**** cdt_mgr_ uses these to maintain the tree of channels. They ****/
  7   183 /**** really belong in the mpxe, but it is full up, and the cdte ****/
  7   184 /**** had the space. */
  7   185 	  2 threads	     aligned like channel_threads,
  7   186 /**** The use name is that of the user who gave the dial or slave ****/
  7   187 /**** preaccess request. ****/
  7   188 	  2 user_name	     unaligned,
  7   189 	    3 person	     char (20) unaligned,
  7   190 	    3 project	     char (9) unaligned,
  7   191 	    3 pad		     char (3) unaligned,	/* no tag */
  7   192 	  2 iocbp		     ptr unaligned;		/* 104 words */
  7   193 
  7   194 
  7   195 dcl	generic_destination	     based char (32);	/* used to match destinations on dial_out and priv_attach,
  7   196*						   overlays initial_command field for slave and autocall lines */
  7   197 
  7   198 
  7   199 
  7   200 dcl	1 fnpe		     based (fnpep) aligned,	/* an FNP */
  7   201 						/* These variables are filled in from the CMF */
  7   202 	  2 type		     fixed bin,		/* type of this FNP, DN355, DN6670, etc. */
  7   203 	  2 memory	     fixed bin,		/* amount of memory on this FNP */
  7   204 	  2 nlslas	     fixed bin,		/* number of lslas on this FNP */
  7   205 	  2 nhslas	     fixed bin,		/* number of hslas on this FNP */
  7   206 	  2 service_type	     fixed bin,		/* service type */
  7   207 	  2 mpx_type	     fixed bin,		/* type of multiplexer on this fnp */
  7   208 	  2 coreimage	     char (168),		/* pathname of image, maybe in >sl1 */
  7   209 /**** The following are used during system operation to remember the state of the FNP */
  7   210 	  2 boot_segp	     ptr,			/* ptr to seg used for bootload */
  7   211 	  2 boot_ev_chan	     fixed bin (71),	/* for ring0 to report crashes and bootload complete */
  7   212 	  2 mpxe		     like mpxe,		/* standard multiplexer data */
  7   213 	  2 threads	     aligned like channel_threads,
  7   214 						/* same mpx threads as channel */
  7   215 	  2 pad3		     (25) fixed bin;	/* pad to 96 words per entry */
  7   216 
  7   217 /* This structure describes the data necessary to control a multiplexer.
  7   218*   For FNP's., a copy appears in the fnpe. For communications lines, it
  7   219*   overlays the initial_command field in the cdte. */
  7   220 
  7   221 dcl	1 mpxe		     based (mpxep) aligned,
  7   222 	  2 state		     fixed bin,		/* current state, up, down, loading */
  7   223 	  2 current_service_type fixed bin,		/* usually = service type, unless cdt installation changes it */
  7   224 	  2 current_mpx_type     fixed bin,		/* type of multiplexer currently running */
  7   225 	  2 n_bootloads	     fixed bin,		/* count of load attempts */
  7   226 	  2 time_initial_load    fixed bin (71),	/* time this MPX first completed a load */
  7   227 	  2 time_last_load	     fixed bin (71),	/* time MPX last completed a bootload */
  7   228 	  2 time_last_crash	     fixed bin (71),	/* time MPX last crashed */
  7   229 	  2 time_load_start	     fixed bin (71),	/* time current load started */
  7   230 	  2 last_tbf	     fixed bin,		/* number of minutes this MPX was up last bootload */
  7   231 	  2 flags		     unal,
  7   232 	    3 go		     bit (1),		/* start MPX after it loads */
  7   233 	    3 listening	     bit (1),		/* listen has been done on subchannels */
  7   234 	    3 check	     bit (1),		/* loaded with check option */
  7   235 	    3 retry_load	     bit (1),		/* reload if load fails */
  7   236 	    3 pad1	     bit (32),
  7   237 	  2 pad2		     (2) fixed bin;		/* pad to 16 words */
  7   238 
  7   239 /* These threads define the tree of multiplexers in the cdt. */
  7   240 /* next_sister and prev_sister link nodes at the same level, ordered */
  7   241 /* by alpha sort order of the channel name. Daughter points to the */
  7   242 /* first child of this node, if any. Daughter count is the number */
  7   243 /* of children, as a consistency check. Mother is a back pointer to */
  7   244 /* the parent, present in all the children, not just the first. */
  7   245 /* threads are cdt indexes. If positive, they index the cdt_entry array */
  7   246 /* in cdt, if negative, they are the negative of an index into the fnp_entry */
  7   247 /* array. If zero, they refer to the top of the non-fnp mpx tree. */
  7   248 
  7   249 dcl	1 channel_threads	     aligned based,
  7   250 	  2 next_sister	     fixed bin unaligned,
  7   251 	  2 prev_sister	     fixed bin unaligned,
  7   252 	  2 daughter	     fixed bin unaligned,
  7   253 	  2 mother	     fixed bin unaligned,	/* negative is a fnpx, positive a cdtx */
  7   254 	  2 pad		     bit (18) unaligned,
  7   255 	  2 daughter_count	     fixed bin unaligned;
  7   256 
  7   257 /* Values for cdte.service_type field */
  7   258 
  7   259 dcl	(
  7   260 	ANS_SERVICE	     init (1),		/* login or dial */
  7   261 	FTP_SERVICE	     init (2),		/* file transfer service */
  7   262 	MC_SERVICE	     init (3),		/* message coordinator */
  7   263 	SLAVE_SERVICE	     init (4),		/* special channel */
  7   264 	DIAL_SERVICE	     init (5),		/* transient state */
  7   265 	DIAL_OUT_SERVICE	     init (6),		/* auto call line */
  7   266 	MPX_SERVICE	     init (8),		/* ring0 demultiplexed line */
  7   267 	TANDD_SERVICE	     init (9)		/* transient state, attached for T & D */
  7   268 	)		     fixed bin internal static options (constant);
  7   269 
  7   270 /* Values for service type in both cdte and fnpe */
  7   271 
  7   272 dcl	(
  7   273 	INACTIVE		     init (7),		/* not to be used, even though configured */
  7   274 	ACTIVE		     init (1)
  7   275 	) /* for FNP only, configured and to be used */
  7   276 			     fixed bin internal static options (constant);
  7   277 
  7   278 /* Value for both cdte.in_use and fnpe.state */
  7   279 
  7   280 dcl	NOT_CONFIGURED	     fixed bin int static init (-1) options (constant);
  7   281 						/* was not configured at Multics bootload time */
  7   282 
  7   283 /* NOTE: an INACTIVE channel can be made active by operator command or CDT installation,
  7   284*   but a NOT_CONFIGURED channel can not be used until its multiplexer is reloaded */
  7   285 
  7   286 /* Value for cdte.in_use */
  7   287 
  7   288 dcl	CHANNEL_DELETED	     fixed bin int static init (-2);
  7   289 						/* channel deleted by CDT installation */
  7   290 
  7   291 /* NOTE: a configured channel being deleted by a CDT installation is set to CHANNEL_DELETED.
  7   292*   multiplexer_mgr_ sets cdte.in_use to NOW_FREE at the next reload of its multiplexer.
  7   293*   A NOT_CONFIGURED channel is set to NOW_FREE immediately when deleted by a CDT installation. */
  7   294 
  7   295 
  7   296 /* Values for mpxe.state field */
  7   297 
  7   298 dcl	(
  7   299 	FNP_FREE		     init (0),		/* this fnpe is not used */
  7   300 	FNP_UNKNOWN	     init (1),		/* FNP is in some unknown state */
  7   301 	FNP_DOWN		     init (2),		/* FNP crashed, not yet reloaded */
  7   302 	FNP_BOOT		     init (3),		/* FNP has been booted, but no response yet */
  7   303 	FNP_UP		     init (4)		/* FNP is up and running fine */
  7   304 	)		     fixed bin internal static options (constant);
  7   305 
  7   306 dcl	(
  7   307 	MPX_FREE		     init (0),		/* this mpxe is not used */
  7   308 	MPX_UNKNOWN	     init (1),		/* MPX is in some unknown state */
  7   309 	MPX_DOWN		     init (2),		/* MPX crashed, not yet reloaded */
  7   310 	MPX_BOOT		     init (3),		/* MPX has been booted, but no response yet */
  7   311 	MPX_UP		     init (4)		/* MPX is up and running fine */
  7   312 	)		     fixed bin internal static options (constant);
  7   313 
  8     1 /* BEGIN INCLUDE FILE ... fnp_types.incl.pl1 */
  8     2 
  8     3 
  8     4 
  8     5 /****^  HISTORY COMMENTS:
  8     6*  1) change(88-06-15,Berno), approve(88-07-13,MCR7928),
  8     7*     audit(88-06-15,Parisek), install(88-07-19,MR12.2-1061):
  8     8*     Add data needed for the uncp multiplexer (DSA gateway) interface
  8     9*     implementation.
  8    10*                                                   END HISTORY COMMENTS */
  8    11 
  8    12 
  8    13 /* Values for fnpe.type field */
  8    14 /*
  8    15*   Created 79 May 14 by Art Beattie by splitting information out from cdt.incl.pl1
  8    16*   Added in March 1982 - DN7100.fd.
  8    17**/
  8    18 
  8    19 dcl (DN355 init (1),				/* a DataNet 355 FNP */
  8    20      DN6600 init (2),				/* a DataNet 6600 FNP */
  8    21      DN6670 init (3),				/* a Honeywell Bull Network Processor (18x) */
  8    22      DN7100 init (4)				/* The DSA Datanet architecture (DN7) */
  8    23      ) fixed bin internal static options (constant);
  8    24 
  8    25 dcl  fnp_types (4) char (8) int static options (constant)
  8    26      init ("DN355", "DN6600", "DN6670", "DN7100");
  8    27 
  8    28 dcl  fnp_models (4) fixed bin (17) int static options (constant)
  8    29      init (355, 6600, 6670, 7100);
  8    30 	
  8    31 dcl  supported_fnp (4) bit (1) int static options (constant)
  8    32      init ("0"b, "0"b, "1"b, "1"b);
  8    33 
  8    34 
  8    35 /* END INCLUDE FILE ... fnp_types.incl.pl1 */
  7   314 
  7   315 
  7   316 /* END INCLUDE FILE ... cdt.incl.pl1 */
      162 
  9     1 /* BEGIN INCLUDE FILE ... dialup_values.incl.pl1 */
  9     2 
  9     3 /* format: style4 */
  9     4 
  9     5 /* Values for "cdte.tra_vec" used by dialup_ and others. */
  9     6 
  9     7 /* Modified by T. Casey April 1976 to add WAIT_NEW_PASSWORD
  9     8*   -		in 1977 and 1978 to add WAIT_(GREETING_MSG DELETE_CHANNEL)
  9     9*   -		and in October 1979 to add WAIT_CONNECT_REQUEST
  9    10*   Modified by Robert Coren in May 1981 to add TANDD_ATTACH values and 
  9    11*		WAIT_DISCARD_WAKEUP
  9    12*   Modified by T. Casey, July 1981, for MR9.0, to add WAIT_BEFORE_HANGUP.
  9    13*   Modified by E. N. Kittlitz, July 1982, to add TTY_MASKED.
  9    14**/
  9    15 
  9    16 /****^  HISTORY COMMENTS:
  9    17*  1) change(87-04-20,GDixon), approve(87-07-13,MCR7741),
  9    18*     audit(87-07-16,Brunelle), install(87-08-04,MR12.1-1056):
  9    19*     Add constant arrays naming cdte.state, cdte.tra_vec and ute.active values.
  9    20*  2) change(87-05-11,GDixon), approve(87-07-13,MCR7741),
  9    21*     audit(87-07-16,Brunelle), install(87-08-04,MR12.1-1056):
  9    22*     Add named constants for instance tags.
  9    23*                                                   END HISTORY COMMENTS */
  9    24 
  9    25 dcl  (WAIT_DIALUP init (1),				/* Channel waiting for dialup. */
  9    26      WAIT_ANSWERBACK initial (2),			/* WRU sent, waiting for reply */
  9    27      WAIT_LOGIN_LINE init (3),			/* Greeting typed, wait for login command. */
  9    28      WAIT_LOGIN_ARGS init (4),			/* Want rest of login line */
  9    29      WAIT_OLD_PASSWORD init (5),			/* "-cpw" was specified. Wait for old password. */
  9    30      WAIT_PASSWORD init (6),				/* Waiting for password. (If "-cpw", repeat of new one.) */
  9    31      WAIT_NEW_PASSWORD init (7),			/* "-cpw" was specified. Wait for new password */
  9    32      WAIT_LOGOUT_SIG init (8),			/* Channel is hooked up. Wait for logout. */
  9    33      WAIT_LOGOUT init (9),				/* A logout has been requested. Wait for process to die */
  9    34      WAIT_LOGOUT_HOLD init (10),			/* As above but don't hang up when it dies. */
  9    35      WAIT_DETACH init (11),				/* As above but ignore channel afterwards. */
  9    36      WAIT_NEW_PROC init (12),				/* As above but make new process and continue. */
  9    37      WAIT_REMOVE init (13),				/* As above but completely expunge channel. */
  9    38      WAIT_FIN_PRIV_ATTACH init (14),			/* When channel dials up, connect it to user */
  9    39      WAIT_DIAL_RELEASE init (15),			/* Waiting for master process to release. */
  9    40      WAIT_DIAL_OUT init (16),				/* Waiting for auto call to complete */
  9    41      WAIT_HANGUP init (17),				/* Wait for the hangup event to occur for a channel */
  9    42      WAIT_SLAVE_REQUEST init (18),			/* Ignore line until someone asks */
  9    43      WAIT_GREETING_MSG init (19),			/* Print greeting message and wait for login line */
  9    44      WAIT_DELETE_CHANNEL init (20),			/* Channel deleted - mark cdte after process is destroyed */
  9    45      WAIT_CONNECT_REQUEST init (21),			/* logged in; awaiting request re disconnected processes */
  9    46      WAIT_TANDD_HANGUP init (22),			/* when channel hangs up, proceed with t & d attachment */
  9    47      WAIT_FIN_TANDD_ATTACH init (23),			/* when channel dials up, finish t & d attachment */
  9    48      WAIT_DISCARD_WAKEUPS init (24),			/* disregard all wakeups on channel */
  9    49      WAIT_BEFORE_HANGUP init (25),			/* allow output to print before hanging up */
  9    50      WAIT_DESTROY_REQUEST init (26),			/* waiting to continue with destroy request after process has destroyed itself */
  9    51      WAIT_NEW_PROC_REQUEST init (27)			/* waiting to continue with new_proc request after process has destroyed itself */
  9    52      ) fixed bin internal static options (constant);
  9    53 
  9    54 dcl  TRA_VEC_VALUES (0:13) char (32) aligned int static options (constant) init
  9    55 						/* names of ute.destroy_flag values */
  9    56 	("", "wait dialup", "wait answerback", "wait login line", /*  0-3  */
  9    57 	"wait login args", "wait old password", "wait password",  /*  4-6  */
  9    58 	"wait new password", "wait logout signal", "wait logout", /*  7-9  */
  9    59 	"wait logout hold", "wait detach", "wait new proc",       /* 10-12 */
  9    60 	"wait remove");				        /*   -13 */
  9    61 
  9    62 /* Values for "cdte.state", typewriter state. */
  9    63 
  9    64 dcl  (TTY_MASKED init (-1),				/* Terminal channel is there, but masked by MCS */
  9    65      TTY_HUNG init (1),				/* Terminal channel is there, but dead. */
  9    66      TTY_KNOWN init (2),				/* Channel being "listened" to, awaiting dialup. */
  9    67      TTY_DIALED init (5)				/* Channel is dialed up. This is normal state. */
  9    68      ) fixed bin internal static options (constant);
  9    69 
  9    70 dcl  STATE_VALUES (-1:5) char (15) aligned int static options (constant) init
  9    71 						/* names of cdte.state values */
  9    72 	("masked", "dead", "hung up", "listening", "", "", "dialed up");
  9    73 
  9    74 /* Values for "cdte.in_use" and "ate.active" */
  9    75 
  9    76 dcl  (NOW_FREE init (0),				/* Entry is empty. */
  9    77      NOW_HUNG_UP init (1),				/* Entry is usable but tty is hung up. */
  9    78      NOW_LISTENING init (2),				/* Entry is waiting for phone call. */
  9    79      NOW_DIALED init (3),				/* Entry is connected but login not complete. */
  9    80      NOW_LOGGED_IN init (4),				/* Entry is logged in but no process. */
  9    81      NOW_HAS_PROCESS init (5),			/* Entry has a valid process. */
  9    82      NOW_DIALING init (6),				/* Entry (auto_call line) is dialing */
  9    83      NOW_DIALED_OUT init (7)				/* Entry (auto_call line) is in use */
  9    84      ) fixed bin internal static options (constant);
  9    85 
  9    86 dcl  ACTIVE_VALUES (0:5) char (18) aligned int static options (constant) init
  9    87 						/* names of ute.active values */
  9    88 	("free", "hung-up", "listening", "dialed", "logged in, no proc", "logged in & proc");
  9    89 
  9    90 
  9    91 /**** Values for ute.tag */
  9    92 
  9    93 dcl (TAG_INTERACTIVE init("a"),
  9    94      TAG_UFT init("f"),
  9    95      TAG_ABSENTEE init("m"),
  9    96      TAG_PROXY init("p"),
  9    97      TAG_DAEMON init("z")
  9    98      ) char(1) int static options(constant);
  9    99 
  9   100 
  9   101 /**** Following are constants used to indicate to the process termination
  9   102*      handler the reason for the process termination.  They are used by
  9   103*      uc_proc_term_handler_, as well as uc_ls_new_proc_request_ and
  9   104*      uc_ls_destroy_request_. */
  9   105 
  9   106 dcl  (
  9   107      PT_FPE initial (1),
  9   108      PT_LOGOUT initial (4),
  9   109      PT_NEW_PROC_AUTH initial (13),
  9   110      PT_HANGUP initial (20),
  9   111      PT_SHUTDOWN initial (21),
  9   112      PT_BUMP initial (22),
  9   113      PT_ALARM initial (23),
  9   114      PT_DETACH initial (24),
  9   115      PT_UNBUMP initial (25),
  9   116      PT_OPERATOR_TERMINATE initial (27),
  9   117      PT_DESTROY_REQUEST initial (30),
  9   118      PT_NEW_PROC_REQUEST initial (31)
  9   119      ) fixed bin (17) internal static options (constant);
  9   120 
  9   121 /**** Values for ute.preempted:
  9   122*  -1  user unbumped after term signal sent
  9   123*   0  user unbumped; ignore alarm___
  9   124*   1  value internally used in load_ctl_
  9   125*   2  user bumped; when alarm___ comes in, send term signal
  9   126*   3  term signal sent; destroy process if termsgnl, alarm___, or cpulimit 
  9   127*      signals come in
  9   128*   4  user bumped; process sick, so destroy without sending term signal
  9   129*   5  trm_ signal sent, termsgnl received; (if still 3, we never got the 
  9   130*      termsgnl).						       */
  9   131 
  9   132 dcl  (
  9   133      PREEMPT_UNBUMP initial (-1),
  9   134      PREEMPT_UNBUMP_IGNORE_ALARM initial (0),
  9   135      PREEMPT_LOAD_CTL initial (1),
  9   136      PREEMPT_BUMPED initial (2),
  9   137      PREEMPT_TERM_SENT initial (3),
  9   138      PREEMPT_BUMPED_NO_TERM initial (4),
  9   139      PREEMPT_TERMSGNL_RECEIVED initial (5)
  9   140      ) fixed bin (17) internal static options(constant);
  9   141 
  9   142 dcl  PREEMPT_VALUES (-1:5) char(28) varying int static options(constant) init(
  9   143 	"unbumped",
  9   144 	"not bumped, ignore alarm___",
  9   145 	"load_ctl_",
  9   146 	"bumped",
  9   147 	"bumped, trm_ sent",
  9   148 	"bumped without trm_",
  9   149 	"bumped, termsgnl received");
  9   150 
  9   151 /* END INCLUDE FILE ... dialup_values.incl.pl1 */
      163 
 10     1 /* BEGIN INCLUDE FILE ... author_dcl.incl.pl1 */
 10     2 
 10     3 /* This include file declares the "author" substructure
 10     4*   in a form suitable for using the PL/I "like" attribute.
 10     5*
 10     6*   Written 750304 by PG
 10     7**/
 10     8 
 10     9 dcl 1 author_dcl aligned based,
 11     1 /* BEGIN INCLUDE FILE author.incl.pl1 */
 11     2 
 11     3 /* the "author" items must always be the first ones in the table. The
 11     4*   module which moves the converted table to the System Control process
 11     5*   fills in these data items and assumes them to be at the head of the segment
 11     6*   regardless of the specific table's actual declaration. The variables
 11     7*   "lock" and "last_install_time" used to be "process_id" and "ev_channel"
 11     8*    respectively. For tables installed in multiple processes, these
 11     9*    are to be used to lock out multiple installations. */
 11    10 
 11    11 /*  Lock should be used as a modification lock. Since, in general,
 11    12*    entries may not be moved in system tables, even by installations,
 11    13*    it is sufficient for only installers and programs that change threads
 11    14*    to set or respect the lock. Simply updating data in an entry
 11    15*    requires no such protection.
 11    16*
 11    17*    Last_install_time is used by readers of system tables to detect
 11    18*    installations or other serious modifications. By checking it before
 11    19*    and after copying a block of data, they can be protected against
 11    20*    modifications.
 11    21*
 11    22*    Modules that set the lock should save proc_group_id, and then
 11    23*    put their group id there for the time they hold the lock.
 11    24*    if they do not actually install the, they should restore the group id.
 11    25**/
 11    26 
 11    27     2 author aligned,				/* validation data about table's author */
 11    28       3 proc_group_id char (32),			/* process-group-id  (personid.projectid.tag) */
 11    29       3 lock bit (36),				/* installation lock */
 11    30       3 update_attributes bit (1) unal,			/* update/add/delete attributes */
 11    31       3 update_authorization bit (1) unal,		/* update only authorizations */
 11    32       3 deferral_notified bit (1) unal,			/* installer notified of deferral of installation */
 11    33       3 pad bit (33) unaligned,
 11    34       3 last_install_time fixed bin (71),
 11    35       3 table char (4),				/* name of table, e.g., SAT MGT TTT RTDT PDT etc. */
 11    36       3 w_dir char (64),				/* author's working directory */
 11    37 
 11    38 /* END INCLUDE FILE author.incl.pl1 */
 10    10 
 10    11     2 pad;
 10    12 
 10    13 /* END INCLUDE FILE ... author_dcl.incl.pl1 */
      164 
 12     1 /*  BEGIN INCLUDE FILE ... user_table_entry.incl.pl1 */
 12     2 
 12     3 /* *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */
 12     4 /*							       */
 12     5 /* This include file requires that the user include		       */
 12     6 /* user_attributes.incl.pl1 as well.  It also includes		       */
 12     7 /* abs_attributes.incl.pl1 itself.				       */
 12     8 /*							       */
 12     9 /* This include file must be included to use absentee_user_table.incl.pl1,   */
 12    10 /* answer_table.incl.pl1, and daemon_user_table.incl.pl1.		       */
 12    11 /*							       */
 12    12 /* *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */
 12    13 
 12    14 /****^  HISTORY COMMENTS:
 12    15*  1) change(81-12-21,Gilcrease), approve(86-03-27,MCR7370),
 12    16*     audit(86-06-23,Lippard), install(86-06-30,MR12.0-1082):
 12    17*     This comment for hcom.
 12    18*     81-12-21  E. N. Kittlitz. derived from abs_user_tab.incl.pl1,
 12    19*     anstbl.incl.pl1, and dutbl.incl.pl1.
 12    20*     82-01-02 E. N. Kittlitz. user_attributes.incl.pl1 changes
 12    21*     84-04-04 BIM added privileged_dial_server and dial_server_ring
 12    22*     84-07-12 BIM added min_process_authorization
 12    23*     84-12-31 Keith Loepere added pdir_dir_quota
 12    24*     85-01-16 by E. Swenson to add ute.session_uid
 12    25*  2) change(85-11-16,Swenson), approve(87-07-13,MCR7737),
 12    26*     audit(87-04-14,GDixon), install(87-08-04,MR12.1-1056):
 12    27*     Added fields for DSA login server support.
 12    28*  3) change(86-03-27,Gilcrease), approve(86-03-27,MCR7370),
 12    29*     audit(86-06-23,Lippard), install(86-06-30,MR12.0-1082):
 12    30*     Add truncate_absout and restarted bit for -truncate absout, SCP6297.
 12    31*  4) change(86-04-09,Herbst), approve(87-07-13,MCR7697),
 12    32*     audit(87-04-14,GDixon), install(87-08-04,MR12.1-1056):
 12    33*     Added disconnection_rel_minutes.
 12    34*  5) change(86-12-08,GDixon), approve(87-07-13,MCR7741),
 12    35*     audit(87-07-16,Brunelle), install(87-08-04,MR12.1-1056):
 12    36*     Changed structure under ute.abs_attributes to use like structure in
 12    37*     abs_attributes.incl.pl1.  This allows the same attributes to be used
 12    38*     in abs_message_format.incl.pl1 and pit.incl.pl1 as well as this include
 12    39*     file.
 12    40*  6) change(87-04-14,GDixon), approve(87-07-13,MCR7741),
 12    41*     audit(87-07-16,Brunelle), install(87-08-04,MR12.1-1056):
 12    42*     Move constants for ute.pw_flags.mask_ctl from answer_table.incl.pl1.
 12    43*  7) change(87-04-16,GDixon), approve(87-07-13,MCR7741),
 12    44*     audit(87-07-16,Brunelle), install(87-08-04,MR12.1-1056):
 12    45*      A) Global reorganization to locate things by type of data.
 12    46*      B) Eliminate ute.uflags.logged_in.
 12    47*  8) change(87-05-10,GDixon), approve(87-07-13,MCR7741),
 12    48*     audit(87-07-16,Brunelle), install(87-08-04,MR12.1-1056):
 12    49*      A) Reduced overlength person and project fields to proper length.
 12    50*      B) Adjusted dialed-console section to begin on even word boundary.
 12    51*  9) change(87-05-13,GDixon), approve(87-07-13,MCR7741),
 12    52*     audit(87-07-16,Brunelle), install(87-08-04,MR12.1-1056):
 12    53*     Add ute.line_type.
 12    54* 10) change(87-11-19,Parisek), approve(88-02-11,MCR7849),
 12    55*     audit(88-02-23,Lippard), install(88-07-13,MR12.2-1047):
 12    56*     Added the lowest_ring element. Used the upper half of ute.highest_ring
 12    57*     for the storage.  SCP6367
 12    58*                                                   END HISTORY COMMENTS */
 12    59 
 12    60 /* format: style4 */
 12    61 
 12    62 /* *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */
 12    63 /*							       */
 12    64 /* Each of the named sections below defines a type of data.  Typing comes    */
 12    65 /* from data associated with the ute entry itself, with the person, with     */
 12    66 /* login argument data, from the main user of the data (eg, dialup_,	       */
 12    67 /* load_ctl_, login server).  Each section begins on a double-word boundary  */
 12    68 /* and is an even number of words long.  The total structure is 300 decimal  */
 12    69 /* words long.						       */
 12    70 /*							       */
 12    71 /* *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */
 12    72 
 12    73 
 12    74 dcl  UTE_version_4 fixed bin internal static options (constant) init (4);
 12    75 
 12    76 dcl  utep pointer automatic init (null);
 12    77 
 12    78 dcl  1 ute based (utep) aligned,			/* individual entry in one of the user control tables */
 12    79 
 12    80 /* Variables which give state of this entry */
 12    81        2 active fixed bin,				/* state of entry. 0=>free. see dialup_values.incl.pl1 */
 12    82        2 process_type fixed bin,			/* 1=interactive, 2=absentee, 3=daemon */
 12    83        2 ute_index fixed bin,				/* index of ute in (anstbl autbl dutbl).entry array */
 12    84        2 next_free fixed bin,				/* points to previous free entry */
 12    85 
 12    86 /* Information user gave about person_id associated with this entry. */
 12    87        2 person char (24) unal,			/* user's name */
 12    88        2 project char (12) unal,			/* project of absentee user */
 12    89        2 tag char (1) unal,				/* instance tag - someday will be generated */
 12    90        2 tag_pad bit (27) unal,
 12    91        2 anonymous fixed bin,				/* 1 if anonymous, otherwise 0 */
 12    92        2 login_flags,				/* flags for login data */
 12    93          3 cpw bit (1) unal,				/* flag for wish to change password */
 12    94          3 generate_pw bit (1) unal,			/* flag meaning -generate_pw (-gpw) was used. */
 12    95          3 special_pw unal,				/* dial or slave */
 12    96 	 4 dial_pw bit (1) unal,			/* true if dial -user */
 12    97 	 4 slave_pw bit (1) unal,			/* true if slave -user */
 12    98          3 cdp bit (1) unal,				/* flag for wish to change default project */
 12    99          3 cda bit (1) unal,				/* flag to change default authorization */
 12   100          3 auth_given bit (1) unal,			/* flag to mean -authorization was used. */
 12   101          3 noprint bit (1) unal,			/* used at logout. inhibits printing. */
 12   102          3 operator bit (1) unaligned,			/* user specified -operator on login command line */
 12   103          3 pw_pad bit (25) unal,			/* spare parts */
 12   104          3 mask_ctl bit (2) unal,			/* bits controlling pw mask. See constants, below */
 12   105 						/* Must remain last in pw_flags so it does not */
 12   106 						/* appear in PW_FLAG_VALUES array below. */
 12   107        2 generated_pw char (8) unal,			/* user must type this as new password */
 12   108        2 old_password char (8) unal,			/* must match user's previous password (value scrambled) */
 12   109        2 process_authorization bit (72),		/* access_authorization of this process */
 12   110 
 12   111 /* Information user gave about process associated with this entry. */
 12   112        2 outer_module char (32) unal,			/* Name of console dim */
 12   113        2 home_dir char (64) unal,			/* initial home directory */
 12   114        2 init_proc char (64) unal,			/* name of login responder */
 12   115        2 ip_len fixed bin (17) unal,			/* length of initproc string */
 12   116        2 ss_len fixed bin (17) unal,			/* length of subsystem string */
 12   117        2 ur_at like user_attributes aligned,		/* bits on means attributes given by user */
 12   118        2 at like user_attributes aligned,		/* bits on means attribute is on */
 12   119        2 initial_ring fixed bin,			/* ring process will be started in */
 12   120        2 arg_count fixed bin,				/* number of arguments to absentee control segment */
 12   121        2 ln_args fixed bin,				/* length of string containing arguments */
 12   122        2 arg_lengths_ptr ptr,				/* pointer to array of argument lengths */
 12   123        2 args_ptr ptr,				/* pointer to arguments to absentee control segment */
 12   124 
 12   125 /* Most of the following information is relevant only to absentee processes */
 12   126        2 input_seg char (168) unal,			/* pathname of absentee control segment */
 12   127        2 output_seg char (168) unal,			/* pathname of absentee output file */
 12   128        2 request_id fixed bin (71),			/* time request was entered - used as uid of request */
 12   129        2 reservation_id fixed bin (71),			/* nonzero if job has a resource reservation */
 12   130        2 message_id bit (72),				/* message segment id assoc with absentee request */
 12   131        2 deferred_time fixed bin (71),			/* time at which absentee process should be created */
 12   132        2 max_cpu_time fixed bin (35),			/* maximum number of seconds this process can run */
 12   133        2 queue fixed bin,				/* -1=daemon;0=interactive or foreground;>0=queue no.
 12   134*						   (but see uflags.adjust_abs_q_no). */
 12   135        2 real_queue fixed bin,			/* real queue number; ute.queue gets fudged sometimes */
 12   136        2 abs_attributes aligned like user_abs_attributes,	/* include abs_attributes.incl.pl1 */
 12   137        2 abs_flags,
 12   138          3 abs_run bit (1) unal,			/* on if job was started by abs run command */
 12   139          3 notify bit (1) unal,			/* on if user wants notification at login and logout */
 12   140          3 abs_flags_pad bit (34) unal,
 12   141        2 abs_group char (8) unal,			/* original group before load_ctl_ moves it to absentee group */
 12   142        2 sender char (32) unal,			/* name of RJE station that job is from */
 12   143        2 proxy_person char (28) unal,			/* name of user who actually entered the request, if proxy */
 12   144        2 proxy_project char (9) unal,
 12   145        2 proxy_project_pad char (3) unal,
 12   146        2 abs_pad fixed bin,
 12   147 
 12   148 /* Information about process actually created */
 12   149        2 proc_id bit (36),				/* process id of absentee process */
 12   150        2 session_uid fixed bin (35),			/* Unique authentication session id */
 12   151        2 process_authorization_range (2) bit (72) aligned,
 12   152        2 audit bit (36),				/* audit flags for user */
 12   153        2 lot_size fixed bin,				/* Size of linkage offset table */
 12   154        2 kst_size fixed bin,				/* Size of process known segment table */
 12   155        2 cls_size fixed bin,				/* Size of process combined linkage */
 12   156        2 sus_channel fixed bin (71),			/* event channel on which suspended process is blocked */
 12   157        2 lowest_ring fixed bin (17) unal,		/* lowest ring permitted */
 12   158        2 highest_ring fixed bin (17) unal,		/* highest ring permitted */
 12   159        2 pdir_lvix fixed bin (17) unal,			/* index in disk table of lv where pdir is */
 12   160        2 pdir_quota fixed bin (17) unal,		/* process directory quota */
 12   161        2 pdir_dir_quota fixed bin (17) unal,		/* process directory quota for dirs */
 12   162        2 pdir_pad fixed bin(17) unal,
 12   163        2 process_pad fixed bin,
 12   164 
 12   165 /* Information about primary terminal associated with this entry */
 12   166        2 tty_name char (32) unal,			/* absentee=>"abs1", etc.  daemon=>"bk", etc. */
 12   167        2 terminal_type char (32) unaligned,		/* terminal type */
 12   168        2 line_type fixed bin,				/* line type */
 12   169        2 tty_id_code char (4) unal,			/* "none" for absentee */
 12   170        2 network_connection_type fixed bin,		/* see net_event_message.incl.pl1 */
 12   171        2 channel ptr unal,				/* points to CDT entry for user, if any */
 12   172 
 12   173 /* Variables useful for dialed terminals */
 12   174        2 ndialed_consoles fixed bin,			/* if master, number of slaves */
 12   175        2 dial_qualifier char (22) unal,			/* first argument to dial command */
 12   176        2 dial_server_ring fixed bin (3) unsigned unaligned, /* dial server intends to attach dialing in channels at this ring. */
 12   177        2 dial_server_flags,
 12   178          3 registered_dial_server bit (1) unal,		/* process is a registered dial server */
 12   179          3 privileged_dial_server bit (1) unal,		/* "1"b -> serves range of AIM classes */
 12   180          3 dial_server_flags_pad bit (13) unal,		/* fill out the word */
 12   181        2 dial_ev_chn fixed bin (71),			/* if master, control event channel */
 12   182 
 12   183 /* Information about usage/accounting.  Device usage meters are in a
 12   184*   separate segment, "devtab" */
 12   185        2 pdtep ptr,					/* ptr to user's pdt entry, where usage meters live */
 12   186        2 cpu_this_process fixed bin (71),		/* cpu used so far this process */
 12   187        2 cpu_usage fixed bin (71),			/* total cpu time used in this session */
 12   188        2 mem_usage fixed bin (71),			/* memory usage for previous processes in session */
 12   189        2 mem_this_process fixed bin (71),		/* memory usage at last update */
 12   190        2 last_update_time fixed bin (71),		/* time of last account update */
 12   191        2 session_cost float bin,			/* dollar cost of session, for printing in logout messages */
 12   192        2 ndevices fixed bin,				/* Count of attached devices */
 12   193        2 device_head fixed bin,			/* Table index of head of device chain */
 12   194        2 device_tail fixed bin,			/* Table index of tail of device chain */
 12   195        2 rs_number fixed bin (6) unsigned unal,		/* rate structure number */
 12   196        2 rs_number_pad bit(30) unal,
 12   197        2 usage_pad fixed bin,
 12   198 
 12   199 /* Information for dialup_ (control variables). */
 12   200        2 event fixed bin (71),			/* event associated with channel or user manager */
 12   201        2 uprojp ptr,				/* ptr to user project sat entry */
 12   202        2 login_time fixed bin (71),			/* time when absentee user approved by lg_ctl_ */
 12   203        2 cant_bump_until fixed bin (71),		/* bump-protection clock */
 12   204        2 recent_fatal_error_time fixed bin (71),		/* time of first error in the suspected loop */
 12   205        2 recent_fatal_error_count fixed bin,		/* counter to detect fatal process error loops */
 12   206        2 failure_reason fixed bin,			/* why login refused 1=lg_ctl, 2=act_ctl, 3=load_ctl */
 12   207        2 count fixed bin,				/* counter for logins and dialups */
 12   208        2 n_processes fixed bin,			/* number of processes created in this session */
 12   209        2 lock_value fixed bin,			/* number of locks set for this entry */
 12   210        2 login_result fixed bin,			/* 0=logged in;1=hopeless,hang him up;2=allow another attempt */
 12   211        2 login_code char (8) unal,			/* login command from LOGIN line */
 12   212        2 preempted fixed bin,				/* if ^= 0 user preempted (never for abs) */
 12   213        2 destroy_flag fixed bin,			/* >8 when awaiting destroy */
 12   214        2 logout_type char (4) unal,			/* type of logout */
 12   215        2 logout_index fixed bin,			/* to save logout handler index while waiting for termsgnl */
 12   216        2 disconnection_rel_minutes fixed bin (17) unal,	/* disconnected this many minutes after login_time */
 12   217        2 next_disconnected_ate_index fixed bin (17) unal,	/* thread of list of user's disconnected processes */
 12   218        2 work_class fixed bin,			/* work class used by priority scheduler */
 12   219        2 group char (8) unal,				/* party group identifier */
 12   220        2 whotabx fixed bin,				/* index of user's entry in whotab */
 12   221 
 12   222        2 uflags,					/* Miscellaneous flags */
 12   223          3 dont_call_init_admin bit (1) unal,		/* Call overseer directly */
 12   224          3 ip_given bit (1) unal,			/* user gave an initproc arg on login line */
 12   225          3 ss_given bit (1) unal,			/* initial_procedure contains a subsystem name */
 12   226          3 lvs_attached bit (1) unal,			/* set and used by the lv_request_ procedure */
 12   227          3 send_initial_string bit (1) unal,		/* initial string should be sent after login line read */
 12   228          3 adjust_abs_q_no bit (1) unal,		/* this is an absentee job; user_profile.queue is NOT true Q # */
 12   229          3 foreground_secondary_ok bit (1) unal,		/* ok to login foreground absentee job as secondary */
 12   230          3 foreground_job bit (1) unal,			/* job was originally from foreground queue */
 12   231          3 sus_sent bit (1) unal,			/* sus_ ips signal has been sent to process */
 12   232          3 suspended bit (1) unal,			/* process has responded to sus_ signal */
 12   233          3 ignore_cpulimit bit (1) unal,		/* process is released, but timer can't be turned off */
 12   234          3 deferral_logged bit (1) unal,		/* abs job deferral has already been logged once */
 12   235          3 save_if_disconnected bit (1) unal,		/* user wants process preserved across hangups */
 12   236          3 disconnected bit (1) unal,			/* process is disconnected from terminal */
 12   237          3 disconnected_list bit (1) unal,		/* this ate is on a list of disconnected processes */
 12   238          3 proc_create_ok bit (1) unal,			/* lg_ctl_ has set the process creation variables */
 12   239          3 activity_can_unbump bit (1) unal,		/* only bump pending is for inactivity */
 12   240          3 fpe_causes_logout bit (1) unal,		/* "1"b means don't try to new_proc after fatal process error */
 12   241          3 user_specified_immediate bit (1) unal,		/* "1"b -> don't wait around for process destruction. */
 12   242          3 uflags_pad bit (17) unal,
 12   243 
 12   244 /* Information used by load_ctl_ for the process */
 12   245        2 user_weight fixed bin,			/* usually 10 - used in load control */
 12   246        2 standby_line fixed bin,			/* 0=user has primary line, 1=standby user */
 12   247        2 bump_grace fixed bin (71),			/* bump grace in microseconds */
 12   248 
 12   249 
 12   250 /* Information for login server */
 12   251        2 login_server_info,
 12   252          3 our_handle bit (72) aligned,			/* how LS refers to us. */
 12   253          3 his_handle bit (72) aligned,			/* how we talk to LS */
 12   254          3 termination_event_channel fixed bin (71),	/* for process termination notifications to the LS */
 12   255          3 response_event_channel fixed bin (71),		/* for other communications with the LS */
 12   256          3 process_id bit (36) aligned,			/* process_id of login server */
 12   257        2 ls_pad (5) fixed bin;			/* pad to 300 decimal words */
 12   258 
 12   259 /* values for ute.process_type */
 12   260 
 12   261 dcl  (PT_INTERACTIVE initial (1),
 12   262      PT_ABSENTEE initial (2),
 12   263      PT_DAEMON initial (3)) fixed bin internal static options (constant);
 12   264 
 12   265 dcl  PROCESS_TYPE_NAMES (0:3) char(12) varying int static options(constant) init(
 12   266 	"INVALID-TYPE",
 12   267 	"interactive",
 12   268 	"absentee",
 12   269 	"daemon");
 12   270 
 12   271 dcl  TABLE_NAMES (0:3) char(20) int static options(constant) init(
 12   272 	"UNKNOWN-TABLE",
 12   273 	"answer_table",
 12   274 	"absentee_user_table",
 12   275 	"daemon_user_table");
 12   276 
 12   277 
 12   278 /* values for ute.pw_flags.mask_ctl  */
 12   279 
 12   280 dcl  (DO_MASK init ("00"b),
 12   281      DONT_MASK init ("01"b),
 12   282      DERIVE_MASK init ("10"b)) bit (2) internal static options (constant);
 12   283 
 12   284 dcl  MASK_CTL_NAMES (0:3) char(12) varying int static options(constant) init(
 12   285 	"do_mask", "dont_mask", "derive_mask", "");
 12   286 
 12   287 
 12   288 /* names for ute.pw_flags */
 12   289 
 12   290 dcl  PW_FLAG_NAMES (9) char (12) varying int static options(constant) init(
 12   291 	"cpw",
 12   292 	"generate_pw",
 12   293 	"dial_pw",
 12   294 	"slave_pw",
 12   295 	"cdp",
 12   296 	"cda",
 12   297 	"auth_given",
 12   298 	"noprint",
 12   299 	"operator");
 12   300 
 12   301 /* names for ute.uflags */
 12   302 
 12   303 dcl  UFLAG_NAMES (19) char (24) varying int static options (constant) init (
 12   304 	"dont_call_init_admin",
 12   305 	"ip_given",
 12   306 	"ss_given",
 12   307 	"lvs_attached",
 12   308 	"send_initial_string",
 12   309 	"adjust_abs_q_no",
 12   310 	"foreground_secondary_ok",
 12   311 	"foreground_job",
 12   312 	"sus_sent",
 12   313 	"suspended",
 12   314 	"ignore_cpulimit",
 12   315 	"deferral_logged",
 12   316 	"save_if_disconnected",
 12   317 	"disconnected",
 12   318 	"disconnected_list",
 12   319 	"proc_create_ok",
 12   320 	"activity_can_unbump",
 12   321 	"fpe_causes_logout",
 12   322 	"user_specified_immediate");
 12   323 
 12   324 /* names for ute.abs_flags */
 12   325 
 12   326 dcl  ABS_FLAG_NAMES (2) char (8) varying int static options (constant) init (
 12   327 	"abs_run",
 12   328 	"notify");
 12   329 
 12   330 /* names of ute.dial_server_flags */
 12   331 
 12   332 dcl  DIAL_SERVER_FLAG_NAMES (2) char (12) varying int static options (constant) init (
 12   333 	"registered",
 12   334 	"privileged");
 12   335 
 12   336 /* values of ute.login_result */
 12   337 
 12   338 dcl  LOGIN_RESULT_VALUES (0:2) char(24) varying int static options(constant) init(
 12   339 	"logged in",
 12   340 	"login failed, hangup",
 12   341 	"login failed, try again");
 12   342 
 12   343 /*  END INCLUDE FILE ... user_table_entry.incl.pl1 */
      165 
 13     1 /* BEGIN INCLUDE FILE ... user_attributes.incl.pl1  TAC 10/79 */
 13     2 
 13     3 
 13     4 /****^  HISTORY COMMENTS:
 13     5*  1) change(86-12-11,Brunelle), approve(87-07-13,MCR7741),
 13     6*     audit(87-04-19,GDixon), install(87-08-04,MR12.1-1056):
 13     7*     Add incl for abs_attributes.incl.pl1 to automatically include absentee
 13     8*     attribute switches.
 13     9*  2) change(87-04-19,GDixon), approve(87-07-13,MCR7741),
 13    10*     audit(87-07-16,Brunelle), install(87-08-04,MR12.1-1056):
 13    11*      A) Add USER_ATTRIBUTE_NAMES arrays.  attribute_names.incl.pl1 can thereby
 13    12*         be deleted.
 13    13*      B) Add constants identifying attributes that can be changed by user at
 13    14*         login, etc.
 13    15*                                                   END HISTORY COMMENTS */
 13    16 
 13    17 
 13    18 /* Modified 82-01-03  E. N. Kittlitz.  to declare a complete level-1 structure */
 13    19 
 13    20 /* format: style4 */
 13    21 dcl  1 user_attributes aligned based,			/* the user user_attributes */
 13    22        (2 administrator bit (1),			/* 1  system administrator privileges */
 13    23        2 primary_line bit (1),			/* 2  user has primary-line privileges  */
 13    24        2 nobump bit (1),				/* 2  user cannot be bumped */
 13    25        2 guaranteed_login bit (1),			/* 4  user has guaranteed login privileges */
 13    26        2 anonymous bit (1),				/* 5  used only in SAT. project may have anon.users */
 13    27        2 nopreempt bit (1),				/* 6  used only in PDT. user not preemptable by others
 13    28*						   .  of same project (distinct from "nobump") */
 13    29        2 nolist bit (1),				/* 7  don't list user on "who" */
 13    30        2 dialok bit (1),				/* 8  user may have multiple consoles */
 13    31        2 multip bit (1),				/* 9  user may have several processes */
 13    32        2 bumping bit (1),				/* 10 in SAT. Can users in project bump each other? */
 13    33        2 brief bit (1),				/* 11 no login or logout message */
 13    34        2 vinitproc bit (1),				/* 12 user may change initial procedure */
 13    35        2 vhomedir bit (1),				/* 13 user may change homedir */
 13    36        2 nostartup bit (1),				/* 14 user does not want start_up.ec */
 13    37        2 sb_ok bit (1),				/* 15 user may be standby */
 13    38        2 pm_ok bit (1),				/* 16 user may be primary */
 13    39        2 eo_ok bit (1),				/* 17 user may be edit_only */
 13    40        2 daemon bit (1),				/* 18 user may login as daemon */
 13    41        2 vdim bit (1),				/* 19 * OBSOLETE * user may change outer mdle */
 13    42        2 no_warning bit (1),				/* 20 no warning message */
 13    43        2 igroup bit (1),				/* 21 in SAT: this project may give its users individual groups
 13    44*						   .  in PDT: this user has an individual load control group */
 13    45        2 save_pdir bit (1),				/* 22 save pdir after fatal process error */
 13    46        2 disconnect_ok bit (1),			/* 23 ok to save user's disconnected processes */
 13    47        2 save_on_disconnect bit (1),			/* 24 save them unless -nosave login arg is given */
 13    48        2 pad bit (12)) unaligned;
 13    49 
 13    50 dcl  USER_ATTRIBUTE_NAMES (0:24) char (20) int static options (constant) init
 13    51     ("none",					/* 0 */
 13    52      "administrator",				/* 1 */
 13    53      "primary_line",				/* 2 */
 13    54      "nobump",					/* 3 */
 13    55      "guaranteed_login",				/* 4 */
 13    56      "anonymous",					/* 5 */
 13    57      "nopreempt",					/* 6 */
 13    58      "nolist",					/* 7 */
 13    59      "dialok",					/* 8 */
 13    60      "multip",					/* 9 */
 13    61      "bumping",					/* 10 */
 13    62      "brief",					/* 11 */
 13    63      "vinitproc",					/* 12 */
 13    64      "vhomedir",					/* 13 */
 13    65      "nostartup",					/* 14 */
 13    66      "no_secondary",				/* 15 */
 13    67      "no_prime",					/* 16 */
 13    68      "no_eo",					/* 17 */
 13    69      "daemon",					/* 18 */
 13    70      "",						/* 19 vdim OBSOLETE */
 13    71      "no_warning",					/* 20 */
 13    72      "igroup",					/* 21 */
 13    73      "save_pdir",					/* 22 */
 13    74      "disconnect_ok",				/* 23 */
 13    75      "save_on_disconnect");				/* 24 */
 13    76 
 13    77 dcl  ALT_USER_ATTRIBUTE_NAMES (0:24) char (20) int static options (constant) init
 13    78     ("null",					/* 0 */
 13    79      "admin",					/* 1 */
 13    80      "", "",					/* 2 - 3 */
 13    81      "guar",					/* 4 */
 13    82      "anon",					/* 5 */
 13    83      "", "",					/* 6 - 7 */
 13    84      "dial",					/* 8 */
 13    85      "multi_login",					/* 9 */
 13    86      "preempting",					/* 10 */
 13    87      "",						/* 11 */
 13    88      "v_process_overseer",				/* 12 */
 13    89      "v_home_dir",					/* 13 */
 13    90      "no_start_up",					/* 14 */
 13    91      "no_sec",					/* 15 */
 13    92      "no_primary",					/* 16 */
 13    93      "no_edit_only",				/* 17 */
 13    94      "op_login",					/* 18 */
 13    95      "",						/* 19 */
 13    96      "nowarn",					/* 20 */
 13    97      "", "", "",					/* 21 - 23 */
 13    98      "save");					/* 24 */
 13    99 
 13   100 dcl  USER_ATTRIBUTES_always_allowed bit (36) aligned int static
 13   101      options(constant) init("000000000010000000010000000000000000"b);
 13   102     /* SAT/PDT attributes not needed for user to give (brief, no_warning) */
 13   103 
 13   104 dcl  USER_ATTRIBUTES_default_in_pdt bit (36) aligned int static
 13   105      options(constant) init("000000000010000000010000000000000000"b);
 13   106     /* PDT value for (brief, no_warning) is default */
 13   107 
 13   108 dcl  USER_ATTRIBUTES_settable_by_user bit (36) aligned int static
 13   109      options(constant) init("000100000110010000010000000000000000"b);	
 13   110     /* user MIGHT set (bump, ns, brief, guar, no_warning) */
 13   111 
 14     1 /* BEGIN INCLUDE FILE ... user_abs_attributes.incl.pl1 */
 14     2 
 14     3 /* *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */
 14     4 /*							       */
 14     5 /* This include file describes the attributes of an absentee job.  It is     */
 14     6 /* used by user_table_entry.incl.pl1, abs_message_format.incl.pl1            */
 14     7 /* and PIT.incl.pl1.   */
 14     8 /*							       */
 14     9 /* *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */
 14    10 
 14    11 /****^  HISTORY COMMENTS:
 14    12*  1) change(86-12-08,GDixon), approve(87-07-13,MCR7741),
 14    13*     audit(87-07-16,Brunelle), install(87-08-04,MR12.1-1056):
 14    14*     Separated abs_attributes from the request structure
 14    15*     (abs_message_format.incl.pl1) so that the identical structure could be
 14    16*     used in the ute structure (user_table_entry.incl.pl1).
 14    17*  2) change(87-04-19,GDixon), approve(87-07-13,MCR7741),
 14    18*     audit(87-07-16,Brunelle), install(87-08-04,MR12.1-1056):
 14    19*     Added ABS_ATTRIBUTE_NAMES array.
 14    20*  3) change(87-11-11,Parisek), approve(88-02-11,MCR7849),
 14    21*     audit(88-03-22,Lippard), install(88-07-13,MR12.2-1047):
 14    22*     Added the no_start_up flag. SCP6367
 14    23*                                                   END HISTORY COMMENTS */
 14    24 
 14    25 dcl 1 user_abs_attributes		aligned based,
 14    26       2 restartable			bit (1) unaligned,	/* 1 if request may be started over from the beginning */
 14    27       2 user_deferred_until_time	bit (1) unaligned,	/* 1 if request was specified as deferred */
 14    28       2 proxy			bit (1) unaligned,	/* 1 if request submitted for someone else */
 14    29       2 set_bit_cnt			bit (1) unaligned,	/* 1 if should set bit count after every write call */
 14    30       2 time_in_gmt			bit (1) unaligned,	/* 1 if deferred_time is in GMT */
 14    31       2 user_deferred_indefinitely	bit (1) unaligned,	/* 1 if operator is to say when to run it */
 14    32       2 secondary_ok		bit (1) unaligned,	/* 1 if ok to log in as secondary foreground user */
 14    33       2 truncate_absout		bit (1) unaligned,	/* 1 if .absout is to be truncated */
 14    34       2 restarted			bit (1) unaligned,	/* 1 if job is restarted */
 14    35       2 no_start_up                     bit (1) unaligned,	/* 1 if requested -ns */
 14    36       2 attributes_pad		bit (26) unaligned;
 14    37 
 14    38 dcl  ABS_ATTRIBUTE_NAMES (10) char (28) varying int static options(constant) init(
 14    39 	"restartable",
 14    40 	"user_deferred_until_time",
 14    41 	"proxy",
 14    42 	"set_bit_cnt",
 14    43 	"time_in_gmt",
 14    44 	"user_deferred_indefinitely",
 14    45 	"secondary_ok",
 14    46 	"truncate_absout",
 14    47 	"restarted",
 14    48 	"no_start_up");
 14    49 
 14    50 /* END INCLUDE FILE ... user_abs_attributes.incl.pl1 */
 14    51 
 13   112 
 13   113 
 13   114 /* END INCLUDE FILE ... user_attributes.incl.pl1 */
      166 
 15     1 /* BEGIN INCLUDE FILE sys_log_constants.incl.pl1 ... 82-09-24 E. N. Kittlitz */
 15     2 
 15     3 
 15     4 /****^  HISTORY COMMENTS:
 15     5*  1) change(87-04-22,GDixon), approve(87-06-10,MCR7708),
 15     6*     audit(87-06-02,Parisek), install(87-08-04,MR12.1-1056):
 15     7*     Added sl_info structure and associated named constants for use in calling
 15     8*     sys_log_$general.
 15     9*                                                   END HISTORY COMMENTS */
 15    10 
 15    11 
 15    12 /* format: style4 */
 15    13 
 15    14 dcl  (
 15    15      SL_TYPE_CRASH init (-3),				/* type message with banner & kill system */
 15    16      SL_TYPE_BEEP init (-2),				/* type message with banner */
 15    17      SL_TYPE init (-1),				/* type message */
 15    18      SL_LOG_SILENT init (0),				/* log message */
 15    19      SL_LOG init (1),				/* log & type message */
 15    20      SL_LOG_BEEP init (2),				/* log & type message with banner */
 15    21      SL_LOG_CRASH init (3)				/* log & type message with banner & kill system */
 15    22      ) fixed bin internal static options (constant);
 15    23 
 15    24 dcl  1 sl_info aligned automatic,
 15    25        2 version char(8),			/* structure version       */
 15    26        2 arg_list_ptr ptr,			/* arg_list with values    */
 15    27        2 loc,
 15    28          3 (mode, severity, code, caller, data, class, ioa_msg) fixed bin,
 15    29            /* These flags control where the corresponding data item is found.*/
 15    30 	 /*  -1: data appears in the corresponding structure element below */
 15    31 	 /*   0: data is not present anywhere			       */
 15    32 	 /*  +N: data is Nth item in argument list pointed to by 	       */
 15    33 	 /*      sl_info.arg_list_ptr.  Upon return, data copied into      */
 15    34 	 /*      corresponding structure element.		       */
 15    35 	 /*  if data = +N:					       */
 15    36 	 /*      argN is data_ptr, argN+1 is data_len		       */
 15    37 	 /*  if ioa_msg = +N:				       */
 15    38 	 /*      argN+1, ... argLAST are arguments substituted into the    */
 15    39 	 /*      ioa_msg control string.  The formatted msg is returned.   */
 15    40        2 flags,
 15    41          3 ioa_msg_is_error_code bit(1) unal,	/* ioa_ctl is error code.  */
 15    42          3 flags_pad bit(35) unal,
 15    43        2 mode fixed bin,			/* as-mode, command-mode   */
 15    44        2 severity fixed bin,			/* error severity	       */
 15    45        2 code fixed bin(35),			/* error table code        */
 15    46        2 caller char(65) varying,		/* caller refname$entryname*/
 15    47        2 data,				/* binary data ptr/length  */
 15    48          3 data_ptr ptr,
 15    49          3 data_lth fixed bin(21),
 15    50        2 class char(10) varying,		/* binary data class       */
 15    51        2 ioa_msg char(500) varying;		/* formatted message text  */
 15    52 
 15    53 /* *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */
 15    54 /*							       */
 15    55 /* If data values (eg, sl_info.caller) are passed in the argument list,      */
 15    56 /* their data types should be as shown in the structure above, except that   */
 15    57 /* character strings should be char(*) nonvarying.		       */
 15    58 /*							       */
 15    59 /* *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */
 15    60 
 15    61 /* value for sl_info.version */
 15    62 dcl  SL_INFO_version_1 char (8) int static options(constant) init("sl_info1");
 15    63 
 15    64 /* values for sl_info.mode */
 15    65 dcl (SL_INFO_as_mode init(1),
 15    66      SL_INFO_command_mode init(2)) fixed bin int static options(constant);
 15    67 
 15    68 /* values for sl_info.loc.(severity code caller data class ioa_ctl arg) */
 15    69 dcl (SL_INFO_arg_given_in_structure init(-1),
 15    70      SL_INFO_arg_not_given init(0)) fixed bin int static options(constant);
 15    71 
 15    72 
 15    73 /* *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */
 15    74 /*							       */
 15    75 /* The following static structures are commonly used in the Login Server     */
 15    76 /* user control software.					       */
 15    77 /*							       */
 15    78 /* *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */
 15    79 
 15    80 /* Syntax: call Abort (severity, code, ioa_ctl, args);		       */
 15    81 
 15    82 dcl  1 sl_info_sev_code_msg		aligned int static options(constant),
 15    83        2 version char(8)		init ("sl_info1"),
 15    84        2 arg_list_ptr ptr		init (null),
 15    85        2 loc,
 15    86          3 (mode			init (-1),
 15    87 	  severity  		init ( 1),
 15    88 	  code 			init ( 2),
 15    89 	  caller 			init (-1),
 15    90 	  data 			init ( 0),
 15    91 	  class 			init ( 0),
 15    92 	  ioa_msg			init ( 3)) fixed bin,
 15    93        2 flags,
 15    94          3 ioa_msg_is_error_code bit(1) unal init ("0"b),
 15    95          3 flags_pad bit(35) unal	init ("0"b),
 15    96        2 mode fixed bin		init ( 1),
 15    97        2 severity fixed bin		init ( 0),
 15    98        2 code fixed bin(35)		init ( 0),
 15    99        2 caller char(65) varying	init (""),
 15   100        2 data,
 15   101          3 data_ptr ptr		init (null),
 15   102          3 data_lth fixed bin(21)	init ( 0),
 15   103        2 class char(10) varying	init (""),
 15   104        2 ioa_msg char(500) varying	init ("");
 15   105 
 15   106 /* Syntax: call Abort (severity, ioa_ctl, args);			       */
 15   107 
 15   108 dcl  1 sl_info_sev_msg		aligned int static options(constant),
 15   109        2 version char(8)		init ("sl_info1"),
 15   110        2 arg_list_ptr ptr		init (null),
 15   111        2 loc,
 15   112          3 (mode			init (-1),
 15   113 	  severity  		init ( 1),
 15   114 	  code 			init ( 0),
 15   115 	  caller 			init (-1),
 15   116 	  data 			init ( 0),
 15   117 	  class 			init ( 0),
 15   118 	  ioa_msg			init ( 2)) fixed bin,
 15   119        2 flags,
 15   120          3 ioa_msg_is_error_code bit(1) unal init ("0"b),
 15   121          3 flags_pad bit(35) unal	init ("0"b),
 15   122        2 mode fixed bin		init ( 1),
 15   123        2 severity fixed bin		init ( 0),
 15   124        2 code fixed bin(35)		init ( 0),
 15   125        2 caller char(65) varying	init (""),
 15   126        2 data,
 15   127          3 data_ptr ptr		init (null),
 15   128          3 data_lth fixed bin(21)	init ( 0),
 15   129        2 class char(10) varying	init (""),
 15   130        2 ioa_msg char(500) varying	init ("");
 15   131 
 15   132 /* Syntax: call Abort (severity, ioa_ctl_as_error_code, args);	       */
 15   133 
 15   134 dcl  1 sl_info_sev_coded_msg		aligned int static options(constant),
 15   135        2 version char(8)		init ("sl_info1"),
 15   136        2 arg_list_ptr ptr		init (null),
 15   137        2 loc,
 15   138          3 (mode			init (-1),
 15   139 	  severity  		init ( 1),
 15   140 	  code 			init ( 0),
 15   141 	  caller 			init (-1),
 15   142 	  data 			init ( 0),
 15   143 	  class 			init ( 0),
 15   144 	  ioa_msg			init ( 2)) fixed bin,
 15   145        2 flags,
 15   146          3 ioa_msg_is_error_code bit(1) unal init ("1"b),
 15   147          3 flags_pad bit(35) unal	init ("0"b),
 15   148        2 mode fixed bin		init ( 1),
 15   149        2 severity fixed bin		init ( 0),
 15   150        2 code fixed bin(35)		init ( 0),
 15   151        2 caller char(65) varying	init (""),
 15   152        2 data,
 15   153          3 data_ptr ptr		init (null),
 15   154          3 data_lth fixed bin(21)	init ( 0),
 15   155        2 class char(10) varying	init (""),
 15   156        2 ioa_msg char(500) varying	init ("");
 15   157 
 15   158 
 15   159 /* Syntax: call Abort (severity, code, error_return_label, ioa_ctl, args);   */
 15   160 
 15   161 dcl  1 sl_info_sev_code_label_msg	aligned int static options(constant),
 15   162        2 version char(8)		init ("sl_info1"),
 15   163        2 arg_list_ptr ptr		init (null),
 15   164        2 loc,
 15   165          3 (mode			init (-1),
 15   166 	  severity  		init ( 1),
 15   167 	  code 			init ( 2),
 15   168 	  caller 			init (-1),
 15   169 	  data 			init ( 0),
 15   170 	  class 			init ( 0),
 15   171 	  ioa_msg			init ( 4)) fixed bin,
 15   172        2 flags,
 15   173          3 ioa_msg_is_error_code bit(1) unal init ("0"b),
 15   174          3 flags_pad bit(35) unal	init ("0"b),
 15   175        2 mode fixed bin		init ( 1),
 15   176        2 severity fixed bin		init ( 0),
 15   177        2 code fixed bin(35)		init ( 0),
 15   178        2 caller char(65) varying	init (""),
 15   179        2 data,
 15   180          3 data_ptr ptr		init (null),
 15   181          3 data_lth fixed bin(21)	init ( 0),
 15   182        2 class char(10) varying	init (""),
 15   183        2 ioa_msg char(500) varying	init ("");
 15   184 
 15   185 /* Syntax:  call Log_error (code, ioa_ctl, args);			       */
 15   186 
 15   187 dcl  1 sl_info_code_msg		aligned int static options(constant),
 15   188        2 version char(8)		init ("sl_info1"),
 15   189        2 arg_list_ptr ptr		init (null),
 15   190        2 loc,
 15   191          3 (mode			init (-1),
 15   192 	  severity  		init (-1),
 15   193 	  code 			init ( 1),
 15   194 	  caller 			init (-1),
 15   195 	  data 			init ( 0),
 15   196 	  class 			init ( 0),
 15   197 	  ioa_msg			init ( 2)) fixed bin,
 15   198        2 flags,
 15   199          3 ioa_msg_is_error_code bit(1) unal init ("0"b),
 15   200          3 flags_pad bit(35) unal	init ("0"b),
 15   201        2 mode fixed bin		init ( 1),
 15   202        2 severity fixed bin		init ( 0),
 15   203        2 code fixed bin(35)		init ( 0),
 15   204        2 caller char(65) varying	init (""),
 15   205        2 data,
 15   206          3 data_ptr ptr		init (null),
 15   207          3 data_lth fixed bin(21)	init ( 0),
 15   208        2 class char(10) varying	init (""),
 15   209        2 ioa_msg char(500) varying	init ("");
 15   210 
 15   211 
 15   212 /* Syntax:  call Trace (ioa_ctl, args);				       */
 15   213 
 15   214 dcl  1 sl_info_msg			aligned int static options(constant),
 15   215        2 version char(8)		init ("sl_info1"),
 15   216        2 arg_list_ptr ptr		init (null),
 15   217        2 loc,
 15   218          3 (mode			init (-1),
 15   219 	  severity  		init (-1),
 15   220 	  code 			init ( 0),
 15   221 	  caller 			init (-1),
 15   222 	  data 			init ( 0),
 15   223 	  class 			init ( 0),
 15   224 	  ioa_msg			init ( 1)) fixed bin,
 15   225        2 flags,
 15   226          3 ioa_msg_is_error_code bit(1) unal init ("0"b),
 15   227          3 flags_pad bit(35) unal	init ("0"b),
 15   228        2 mode fixed bin		init ( 1),
 15   229        2 severity fixed bin		init ( 0),
 15   230        2 code fixed bin(35)		init ( 0),
 15   231        2 caller char(65) varying	init (""),
 15   232        2 data,
 15   233          3 data_ptr ptr		init (null),
 15   234          3 data_lth fixed bin(21)	init ( 0),
 15   235        2 class char(10) varying	init (""),
 15   236        2 ioa_msg char(500) varying	init ("");
 15   237 
 15   238 /* END INCLUDE FILE sys_log_constants.incl.pl1 */
      167 
      168 
      169      end asr_com_channel_info_srvr_;
      170 
	SOURCE FILES USED IN THIS COMPILATION.

LINE      NUMBER  DATE MODIFIED     NAME			PATHNAME
             0    07/19/88  1536.1  asr_com_channel_info_srvr_.pl1    >special_ldd>install>MR12.2-1061>asr_com_channel_info_srvr_.pl1
156          1    08/06/87  0913.4  as_data_.incl.pl1                 >ldd>include>as_data_.incl.pl1
157          2    10/30/86  2010.5  as_request_header.incl.pl1        >ldd>include>as_request_header.incl.pl1
158          3    08/06/87  0913.4  asr_com_channel_info.incl.pl1     >ldd>include>asr_com_channel_info.incl.pl1
159          4    03/08/85  0852.7  as_com_channel_info.incl.pl1      >ldd>include>as_com_channel_info.incl.pl1
160          5    10/30/86  2010.5  as_request_sender_.incl.pl1       >ldd>include>as_request_sender_.incl.pl1
161          6    03/08/85  0852.7  as_user_message_add.incl.pl1      >ldd>include>as_user_message_add.incl.pl1
162          7    08/06/87  0913.0  cdt.incl.pl1                      >ldd>include>cdt.incl.pl1
7-314        8    07/19/88  1524.1  fnp_types.incl.pl1                >special_ldd>install>MR12.2-1061>fnp_types.incl.pl1
163          9    08/06/87  0913.4  dialup_values.incl.pl1            >ldd>include>dialup_values.incl.pl1
164         10    09/09/75  2007.3  author_dcl.incl.pl1               >ldd>include>author_dcl.incl.pl1
10-10       11    04/21/82  1211.8  author.incl.pl1                   >ldd>include>author.incl.pl1
165         12    07/14/88  2015.0  user_table_entry.incl.pl1         >ldd>include>user_table_entry.incl.pl1
166         13    08/06/87  0913.6  user_attributes.incl.pl1          >ldd>include>user_attributes.incl.pl1
13-112      14    07/14/88  2015.0  user_abs_attributes.incl.pl1      >ldd>include>user_abs_attributes.incl.pl1
167         15    08/06/87  0913.5  sys_log_constants.incl.pl1        >ldd>include>sys_log_constants.incl.pl1
	NAMES DECLARED IN THIS COMPILATION.

IDENTIFIER	     OFFSET    LOC STORAGE CLASS   DATA TYPE		ATTRIBUTES AND REFERENCES
								(* indicates a set context)

NAMES DECLARED BY DECLARE STATEMENT.
ANS_SERVICE                            constant        fixed bin(17,0)          initial dcl 7-259 ref 81
ASR_CCI_VERSION_1               000004 constant        char(8)                  initial packed unaligned dcl 3-24 ref 67
ASR_info_ptr                           parameter       pointer                  dcl 31 ref 20 62
ASR_sender_ptr                         parameter       pointer                  dcl 31 ref 20 63
AS_COM_CHANNEL_INFO_VERSION_1   000002 constant        char(8)                  initial dcl 4-30 ref 67 123
AS_USER_MESSAGE_ADD_INFO_VERSION_1
                                000000 constant        char(8)                  initial packed unaligned dcl 6-20 ref 138
DIAL_OUT_SERVICE                       constant        fixed bin(17,0)          initial dcl 7-259 ref 86
DIAL_SERVICE                           constant        fixed bin(17,0)          initial dcl 7-259 ref 86 128
ME                              000006 constant        char(32)                 initial packed unaligned dcl 58 set ref 99* 109*
NOW_HAS_PROCESS                        constant        fixed bin(17,0)          initial dcl 9-76 ref 83
SLAVE_SERVICE                          constant        fixed bin(17,0)          initial dcl 7-259 ref 86
SL_LOG                          000030 constant        fixed bin(17,0)          initial dcl 15-14 set ref 150*
TANDD_SERVICE                          constant        fixed bin(17,0)          initial dcl 7-259 ref 86
access_class             15     000155 automatic       bit(72)                  array level 2 in structure "ascci" dcl 119
                                                                                  in procedure "SEND_REPLY" set ref 131*
access_class             12            based           bit(72)                  array level 2 in structure "cdte" dcl 7-72
                                                                                  in procedure "asr_com_channel_info_srvr_" ref 131
access_control           50(09)        based           structure                level 3 in structure "cdte" packed packed unaligned
                                                                                  dcl 7-72 in procedure "asr_com_channel_info_srvr_"
                                                                                  ref 125
access_control           12     000155 automatic       structure                level 3 in structure "ascci" packed packed unaligned
                                                                                  dcl 119 in procedure "SEND_REPLY" set ref 125*
addr                                                   builtin function         dcl 53 ref 64 79 99 99 99 99 109 109 109 109 139 147
                                                                                  147
aim_util_$get_access_class      000010 constant        entry                    external dcl 38 ref 141
as_access_audit_$asr_com_chn_info_srvr
                                000012 constant        entry                    external dcl 39 ref 99 109
as_com_channel_info                    based           structure                level 1 dcl 4-9
as_data_$cdtp                   000030 external static pointer                  dcl 1-33 ref 74
as_request_header                      based           structure                level 1 dcl 2-62
as_request_sender                      based           structure                level 1 dcl 5-15 set ref 99 99 109 109
as_request_sender_ptr           000110 automatic       pointer                  dcl 5-13 set ref 63* 64 83 89 99 99 109 109 141 142
                                                                                  143 145 150
as_user_message_$priv_add_message
                                000014 constant        entry                    external dcl 41 ref 147
as_user_message_add_info               based           structure                level 1 dcl 6-5
ascci                           000155 automatic       structure                level 1 dcl 119 set ref 122* 139 140
asr_com_channel_info                   based           structure                level 1 dcl 3-17 set ref 99 99 109 109
asr_com_channel_info_ptr        000104 automatic       pointer                  dcl 3-16 set ref 62* 67 67 75 96 99 99 109 109 144
asr_reply_cci_ptr               000106 automatic       pointer                  dcl 3-26 set ref 64* 65 70 99 104 104 109
asr_reply_com_channel_info             based           structure                level 1 dcl 3-27 set ref 65*
asum_ai                         000126 automatic       structure                level 1 dcl 118 set ref 137* 147 147
attached_to_caller       12(05) 000155 automatic       bit(1)                   level 3 packed packed unaligned dcl 119 set ref 126*
auth_user_name           23     000155 automatic       char(32)                 level 2 packed packed unaligned dcl 119 set ref 133*
                                                                                  135*
author                                 based           structure                level 2 dcl 10-9
author_dcl                             based           structure                level 1 dcl 10-9
authorization            16            based           bit(72)                  level 2 dcl 5-15 set ref 141*
cdt                                    based           structure                level 1 dcl 7-44
cdt_entry              1520            based           structure                array level 2 dcl 7-44 set ref 79
cdt_mgr_$find_cdt_channel       000016 constant        entry                    external dcl 43 ref 75
cdte                                   based           structure                level 1 dcl 7-72
cdtep                           000114 automatic       pointer                  dcl 7-41 set ref 79* 81 83 83 86 86 86 86 89 124 125
                                                                                  127 128 129 130 131 132 133 133
cdtp                            000112 automatic       pointer                  dcl 7-41 set ref 74* 75* 79
cdtx                            000100 automatic       fixed bin(17,0)          dcl 34 set ref 75* 79
channel_name              6            based           char(32)                 level 2 in structure "asr_com_channel_info" packed
                                                                                  packed unaligned dcl 3-17 in procedure
                                                                                  "asr_com_channel_info_srvr_" set ref 75*
channel_name              2     000155 automatic       char(32)                 level 2 in structure "ascci" dcl 119 in procedure
                                                                                  "SEND_REPLY" set ref 124*
channel_threads                        based           structure                level 1 dcl 7-249
code                                   based           fixed bin(35,0)          level 2 in structure "asr_reply_com_channel_info"
                                                                                  dcl 3-27 in procedure "asr_com_channel_info_srvr_"
                                                                                  set ref 70* 99* 104 104* 109*
code                            000210 automatic       fixed bin(35,0)          dcl 120 in procedure "SEND_REPLY" set ref 147* 148
                                                                                  150*
code                            000102 automatic       fixed bin(35,0)          dcl 36 in procedure "asr_com_channel_info_srvr_" set
                                                                                  ref 75* 76
current_access_class    114            based           bit(72)                  array level 2 in structure "cdte" dcl 7-72
                                                                                  in procedure "asr_com_channel_info_srvr_" ref 132
current_access_class     21     000155 automatic       bit(72)                  level 2 in structure "ascci" dcl 119 in procedure
                                                                                  "SEND_REPLY" set ref 132*
current_service_type     14     000155 automatic       fixed bin(17,0)          level 2 in structure "ascci" dcl 119 in procedure
                                                                                  "SEND_REPLY" set ref 130*
current_service_type     74            based           fixed bin(17,0)          level 2 in structure "cdte" packed packed unaligned
                                                                                  dcl 7-72 in procedure "asr_com_channel_info_srvr_"
                                                                                  ref 81 86 86 86 86 128 130
currentsize                                            builtin function         dcl 54 ref 140
destination_info         12     000126 automatic       structure                level 2 dcl 118
dialed_to_caller         12(07) 000155 automatic       bit(1)                   level 3 packed packed unaligned dcl 119 set ref 128*
dialed_to_procid        112            based           bit(36)                  level 2 dcl 7-72 ref 89
error_table_$no_info            000024 external static fixed bin(35,0)          dcl 48 ref 104
error_table_$unimplemented_version
                                000026 external static fixed bin(35,0)          dcl 50 ref 70
flags                    12     000155 automatic       structure                level 2 in structure "ascci" dcl 119 in procedure
                                                                                  "SEND_REPLY"
flags                    50            based           structure                level 2 in structure "cdte" dcl 7-72 in procedure
                                                                                  "asr_com_channel_info_srvr_"
fnp_sw                          000101 automatic       bit(1)                   dcl 35 set ref 75* 76
fnpe                                   based           structure                level 1 dcl 7-200
group_id                  4            based           char(32)                 level 2 in structure "as_request_sender" packed
                                                                                  packed unaligned dcl 5-15 in procedure
                                                                                  "asr_com_channel_info_srvr_" set ref 142 150*
group_id                 12     000126 automatic       char(32)                 level 3 in structure "asum_ai" packed packed
                                                                                  unaligned dcl 118 in procedure "SEND_REPLY" set
                                                                                  ref 142*
handle                   23     000126 automatic       bit(72)                  level 3 dcl 118 set ref 144*
in_use                                 based           fixed bin(17,0)          level 2 dcl 7-72 ref 83
ioa_$rsnnl                      000020 constant        entry                    external dcl 45 ref 133
message_access_class      6     000126 automatic       bit(72)                  level 3 dcl 118 set ref 141*
message_info              2     000126 automatic       structure                level 2 dcl 118
message_length            4     000126 automatic       fixed bin(18,0)          level 3 dcl 118 set ref 140*
message_ptr               2     000126 automatic       pointer                  level 3 dcl 118 set ref 139*
mpxe                                   based           structure                level 1 dcl 7-221
name                      2            based           char(32)                 level 2 dcl 7-72 ref 124
null                                                   builtin function         dcl 55 ref 12-76
person                  137            based           char(20)                 level 3 packed packed unaligned dcl 7-72 set ref 127
                                                                                  133*
proc_id                 276            based           bit(36)                  level 2 dcl 12-78 ref 83
process                 111            based           pointer                  level 2 packed packed unaligned dcl 7-72 ref 83
process_id               22     000126 automatic       bit(36)                  level 3 in structure "asum_ai" dcl 118 in procedure
                                                                                  "SEND_REPLY" set ref 143*
process_id               14            based           bit(36)                  level 2 in structure "as_request_sender" dcl 5-15
                                                                                  in procedure "asr_com_channel_info_srvr_" set ref
                                                                                  83 89 143
project                 144            based           char(9)                  level 3 packed packed unaligned dcl 7-72 set ref
                                                                                  133*
reader_deletes           26     000126 automatic       bit(1)                   level 3 dcl 118 set ref 146*
reply_message             2            based           fixed bin(71,0)          level 2 dcl 5-15 set ref 64
reply_message_handle     20            based           bit(72)                  level 2 dcl 3-17 set ref 96 144
reply_version_requested
                         16            based           char(8)                  level 2 dcl 3-17 set ref 67
ring                     25     000126 automatic       fixed bin(3,0)           level 3 dcl 118 set ref 145*
service_type             13     000155 automatic       fixed bin(17,0)          level 2 in structure "ascci" dcl 119 in procedure
                                                                                  "SEND_REPLY" set ref 129*
service_type             32(18)        based           fixed bin(17,0)          level 2 in structure "cdte" packed packed unaligned
                                                                                  dcl 7-72 in procedure "asr_com_channel_info_srvr_"
                                                                                  ref 129
sys_log_$error_log              000022 constant        entry                    external dcl 46 ref 150
unspec                                                 builtin function         dcl 56 set ref 65* 122* 137*
user_abs_attributes                    based           structure                level 1 dcl 14-25
user_attributes                        based           structure                level 1 dcl 13-21
user_authenticated       12(06) 000155 automatic       bit(1)                   level 3 packed packed unaligned dcl 119 set ref 127*
                                                                                  133
user_name               137            based           structure                level 2 packed packed unaligned dcl 7-72
ute                                    based           structure                level 1 dcl 12-78
utep                            000116 automatic       pointer                  initial dcl 12-76 set ref 12-76*
validation_level         15            based           fixed bin(3,0)           level 2 dcl 5-15 set ref 145
version                         000155 automatic       char(8)                  level 2 in structure "ascci" dcl 119 in procedure
                                                                                  "SEND_REPLY" set ref 123*
version                   4            based           char(8)                  level 2 in structure "asr_com_channel_info" dcl 3-17
                                                                                  in procedure "asr_com_channel_info_srvr_" set ref
                                                                                  67
version                         000126 automatic       char(8)                  level 2 in structure "asum_ai" dcl 118 in procedure
                                                                                  "SEND_REPLY" set ref 138*

NAMES DECLARED BY DECLARE STATEMENT AND NEVER REFERENCED.
ABS_ATTRIBUTE_NAMES                    internal static varying char(28)         initial array dcl 14-38
ABS_FLAG_NAMES                         internal static varying char(8)          initial array dcl 12-326
ACTIVE                                 internal static fixed bin(17,0)          initial dcl 7-272
ACTIVE_VALUES                          internal static char(18)                 initial array dcl 9-86
ALT_USER_ATTRIBUTE_NAMES               internal static char(20)                 initial array packed unaligned dcl 13-77
ASR_ABS_COMMAND                        internal static fixed bin(17,0)          initial dcl 2-29
ASR_ADMIN_COMMAND                      internal static fixed bin(17,0)          initial dcl 2-29
ASR_BUMP_USER                          internal static fixed bin(17,0)          initial dcl 2-29
ASR_COM_CHANNEL_INFO                   internal static fixed bin(17,0)          initial dcl 2-29
ASR_DAEMON_COMMAND                     internal static fixed bin(17,0)          initial dcl 2-29
ASR_DEFER_IN_ADMIN_MODE                internal static bit(1)                   initial array packed unaligned dcl 2-45
ASR_DIAL_OUT                           internal static fixed bin(17,0)          initial dcl 2-29
ASR_DIAL_SERVER                        internal static fixed bin(17,0)          initial dcl 2-29
ASR_FIRST_TYPE                         internal static fixed bin(17,0)          initial dcl 2-29
ASR_FPE_CAUSES_LOGOUT                  internal static fixed bin(17,0)          initial dcl 2-29
ASR_FPE_CAUSES_NEW_PROC                internal static fixed bin(17,0)          initial dcl 2-29
ASR_LAST_TYPE                          internal static fixed bin(17,0)          initial dcl 2-29
ASR_NOTE_PNT_CHANGE                    internal static fixed bin(17,0)          initial dcl 2-29
ASR_PROC_TERM_NOTIFY                   internal static fixed bin(17,0)          initial dcl 2-29
ASR_REQUEST_NAMES                      internal static char(40)                 initial array packed unaligned dcl 2-48
AS_REQUEST_SENDER_VERSION_2            internal static char(8)                  initial packed unaligned dcl 5-27
CDT_version                            internal static fixed bin(17,0)          initial dcl 7-39
CDT_version_5                          internal static fixed bin(17,0)          initial dcl 7-38
CHANNEL_DELETED                        internal static fixed bin(17,0)          initial dcl 7-288
DERIVE_MASK                            internal static bit(2)                   initial packed unaligned dcl 12-280
DIAL_SERVER_FLAG_NAMES                 internal static varying char(12)         initial array dcl 12-332
DN355                                  internal static fixed bin(17,0)          initial dcl 8-19
DN6600                                 internal static fixed bin(17,0)          initial dcl 8-19
DN6670                                 internal static fixed bin(17,0)          initial dcl 8-19
DN7100                                 internal static fixed bin(17,0)          initial dcl 8-19
DONT_MASK                              internal static bit(2)                   initial packed unaligned dcl 12-280
DO_MASK                                internal static bit(2)                   initial packed unaligned dcl 12-280
FNP_BOOT                               internal static fixed bin(17,0)          initial dcl 7-298
FNP_DOWN                               internal static fixed bin(17,0)          initial dcl 7-298
FNP_FREE                               internal static fixed bin(17,0)          initial dcl 7-298
FNP_UNKNOWN                            internal static fixed bin(17,0)          initial dcl 7-298
FNP_UP                                 internal static fixed bin(17,0)          initial dcl 7-298
FTP_SERVICE                            internal static fixed bin(17,0)          initial dcl 7-259
INACTIVE                               internal static fixed bin(17,0)          initial dcl 7-272
LOGIN_RESULT_VALUES                    internal static varying char(24)         initial array dcl 12-338
MASK_CTL_NAMES                         internal static varying char(12)         initial array dcl 12-284
MC_SERVICE                             internal static fixed bin(17,0)          initial dcl 7-259
MPX_BOOT                               internal static fixed bin(17,0)          initial dcl 7-306
MPX_DOWN                               internal static fixed bin(17,0)          initial dcl 7-306
MPX_FREE                               internal static fixed bin(17,0)          initial dcl 7-306
MPX_SERVICE                            internal static fixed bin(17,0)          initial dcl 7-259
MPX_UNKNOWN                            internal static fixed bin(17,0)          initial dcl 7-306
MPX_UP                                 internal static fixed bin(17,0)          initial dcl 7-306
NOT_CONFIGURED                         internal static fixed bin(17,0)          initial dcl 7-280
NOW_DIALED                             internal static fixed bin(17,0)          initial dcl 9-76
NOW_DIALED_OUT                         internal static fixed bin(17,0)          initial dcl 9-76
NOW_DIALING                            internal static fixed bin(17,0)          initial dcl 9-76
NOW_FREE                               internal static fixed bin(17,0)          initial dcl 9-76
NOW_HUNG_UP                            internal static fixed bin(17,0)          initial dcl 9-76
NOW_LISTENING                          internal static fixed bin(17,0)          initial dcl 9-76
NOW_LOGGED_IN                          internal static fixed bin(17,0)          initial dcl 9-76
PREEMPT_BUMPED                         internal static fixed bin(17,0)          initial dcl 9-132
PREEMPT_BUMPED_NO_TERM                 internal static fixed bin(17,0)          initial dcl 9-132
PREEMPT_LOAD_CTL                       internal static fixed bin(17,0)          initial dcl 9-132
PREEMPT_TERMSGNL_RECEIVED              internal static fixed bin(17,0)          initial dcl 9-132
PREEMPT_TERM_SENT                      internal static fixed bin(17,0)          initial dcl 9-132
PREEMPT_UNBUMP                         internal static fixed bin(17,0)          initial dcl 9-132
PREEMPT_UNBUMP_IGNORE_ALARM            internal static fixed bin(17,0)          initial dcl 9-132
PREEMPT_VALUES                         internal static varying char(28)         initial array dcl 9-142
PROCESS_TYPE_NAMES                     internal static varying char(12)         initial array dcl 12-265
PT_ABSENTEE                            internal static fixed bin(17,0)          initial dcl 12-261
PT_ALARM                               internal static fixed bin(17,0)          initial dcl 9-106
PT_BUMP                                internal static fixed bin(17,0)          initial dcl 9-106
PT_DAEMON                              internal static fixed bin(17,0)          initial dcl 12-261
PT_DESTROY_REQUEST                     internal static fixed bin(17,0)          initial dcl 9-106
PT_DETACH                              internal static fixed bin(17,0)          initial dcl 9-106
PT_FPE                                 internal static fixed bin(17,0)          initial dcl 9-106
PT_HANGUP                              internal static fixed bin(17,0)          initial dcl 9-106
PT_INTERACTIVE                         internal static fixed bin(17,0)          initial dcl 12-261
PT_LOGOUT                              internal static fixed bin(17,0)          initial dcl 9-106
PT_NEW_PROC_AUTH                       internal static fixed bin(17,0)          initial dcl 9-106
PT_NEW_PROC_REQUEST                    internal static fixed bin(17,0)          initial dcl 9-106
PT_OPERATOR_TERMINATE                  internal static fixed bin(17,0)          initial dcl 9-106
PT_SHUTDOWN                            internal static fixed bin(17,0)          initial dcl 9-106
PT_UNBUMP                              internal static fixed bin(17,0)          initial dcl 9-106
PW_FLAG_NAMES                          internal static varying char(12)         initial array dcl 12-290
SL_INFO_arg_given_in_structure         internal static fixed bin(17,0)          initial dcl 15-69
SL_INFO_arg_not_given                  internal static fixed bin(17,0)          initial dcl 15-69
SL_INFO_as_mode                        internal static fixed bin(17,0)          initial dcl 15-65
SL_INFO_command_mode                   internal static fixed bin(17,0)          initial dcl 15-65
SL_INFO_version_1                      internal static char(8)                  initial packed unaligned dcl 15-62
SL_LOG_BEEP                            internal static fixed bin(17,0)          initial dcl 15-14
SL_LOG_CRASH                           internal static fixed bin(17,0)          initial dcl 15-14
SL_LOG_SILENT                          internal static fixed bin(17,0)          initial dcl 15-14
SL_TYPE                                internal static fixed bin(17,0)          initial dcl 15-14
SL_TYPE_BEEP                           internal static fixed bin(17,0)          initial dcl 15-14
SL_TYPE_CRASH                          internal static fixed bin(17,0)          initial dcl 15-14
STATE_VALUES                           internal static char(15)                 initial array dcl 9-70
TABLE_NAMES                            internal static char(20)                 initial array packed unaligned dcl 12-271
TAG_ABSENTEE                           internal static char(1)                  initial packed unaligned dcl 9-93
TAG_DAEMON                             internal static char(1)                  initial packed unaligned dcl 9-93
TAG_INTERACTIVE                        internal static char(1)                  initial packed unaligned dcl 9-93
TAG_PROXY                              internal static char(1)                  initial packed unaligned dcl 9-93
TAG_UFT                                internal static char(1)                  initial packed unaligned dcl 9-93
TRA_VEC_VALUES                         internal static char(32)                 initial array dcl 9-54
TTY_DIALED                             internal static fixed bin(17,0)          initial dcl 9-64
TTY_HUNG                               internal static fixed bin(17,0)          initial dcl 9-64
TTY_KNOWN                              internal static fixed bin(17,0)          initial dcl 9-64
TTY_MASKED                             internal static fixed bin(17,0)          initial dcl 9-64
UFLAG_NAMES                            internal static varying char(24)         initial array dcl 12-303
USER_ATTRIBUTES_always_allowed         internal static bit(36)                  initial dcl 13-100
USER_ATTRIBUTES_default_in_pdt         internal static bit(36)                  initial dcl 13-104
USER_ATTRIBUTES_settable_by_user       internal static bit(36)                  initial dcl 13-108
USER_ATTRIBUTE_NAMES                   internal static char(20)                 initial array packed unaligned dcl 13-50
UTE_version_4                          internal static fixed bin(17,0)          initial dcl 12-74
WAIT_ANSWERBACK                        internal static fixed bin(17,0)          initial dcl 9-25
WAIT_BEFORE_HANGUP                     internal static fixed bin(17,0)          initial dcl 9-25
WAIT_CONNECT_REQUEST                   internal static fixed bin(17,0)          initial dcl 9-25
WAIT_DELETE_CHANNEL                    internal static fixed bin(17,0)          initial dcl 9-25
WAIT_DESTROY_REQUEST                   internal static fixed bin(17,0)          initial dcl 9-25
WAIT_DETACH                            internal static fixed bin(17,0)          initial dcl 9-25
WAIT_DIALUP                            internal static fixed bin(17,0)          initial dcl 9-25
WAIT_DIAL_OUT                          internal static fixed bin(17,0)          initial dcl 9-25
WAIT_DIAL_RELEASE                      internal static fixed bin(17,0)          initial dcl 9-25
WAIT_DISCARD_WAKEUPS                   internal static fixed bin(17,0)          initial dcl 9-25
WAIT_FIN_PRIV_ATTACH                   internal static fixed bin(17,0)          initial dcl 9-25
WAIT_FIN_TANDD_ATTACH                  internal static fixed bin(17,0)          initial dcl 9-25
WAIT_GREETING_MSG                      internal static fixed bin(17,0)          initial dcl 9-25
WAIT_HANGUP                            internal static fixed bin(17,0)          initial dcl 9-25
WAIT_LOGIN_ARGS                        internal static fixed bin(17,0)          initial dcl 9-25
WAIT_LOGIN_LINE                        internal static fixed bin(17,0)          initial dcl 9-25
WAIT_LOGOUT                            internal static fixed bin(17,0)          initial dcl 9-25
WAIT_LOGOUT_HOLD                       internal static fixed bin(17,0)          initial dcl 9-25
WAIT_LOGOUT_SIG                        internal static fixed bin(17,0)          initial dcl 9-25
WAIT_NEW_PASSWORD                      internal static fixed bin(17,0)          initial dcl 9-25
WAIT_NEW_PROC                          internal static fixed bin(17,0)          initial dcl 9-25
WAIT_NEW_PROC_REQUEST                  internal static fixed bin(17,0)          initial dcl 9-25
WAIT_OLD_PASSWORD                      internal static fixed bin(17,0)          initial dcl 9-25
WAIT_PASSWORD                          internal static fixed bin(17,0)          initial dcl 9-25
WAIT_REMOVE                            internal static fixed bin(17,0)          initial dcl 9-25
WAIT_SLAVE_REQUEST                     internal static fixed bin(17,0)          initial dcl 9-25
WAIT_TANDD_HANGUP                      internal static fixed bin(17,0)          initial dcl 9-25
as_com_channel_info_ptr                automatic       pointer                  dcl 4-8
as_data_$BS                            external static char(1)                  dcl 1-21
as_data_$CR                            external static char(1)                  dcl 1-22
as_data_$abs_dim                       external static char(32)                 packed unaligned dcl 1-23
as_data_$acct_update_priority          external static fixed bin(17,0)          dcl 1-24
as_data_$acsdir                        external static char(168)                packed unaligned dcl 1-25
as_data_$ansp                          external static pointer                  dcl 1-26
as_data_$as_procid                     external static bit(36)                  dcl 1-27
as_data_$as_ring                       external static fixed bin(3,0)           dcl 1-28
as_data_$as_tty                        automatic       char(6)                  packed unaligned dcl 1-29
as_data_$asmtp                         external static pointer                  dcl 1-30
as_data_$autp                          external static pointer                  dcl 1-31
as_data_$buzzardp                      external static pointer                  dcl 1-32
as_data_$debug_flag                    external static bit(1)                   dcl 1-84
as_data_$default_weight                external static fixed bin(35,0)          dcl 1-34
as_data_$devtabp                       external static pointer                  dcl 1-35
as_data_$dft_user_ring                 external static fixed bin(3,0)           dcl 1-36
as_data_$dutp                          external static pointer                  dcl 1-37
as_data_$g115_dim                      external static char(32)                 packed unaligned dcl 1-38
as_data_$lct_initialized               external static bit(1)                   dcl 1-39
as_data_$lct_size                      external static fixed bin(17,0)          dcl 1-40
as_data_$login_args                    external static structure                level 1 dcl 1-62
as_data_$login_words                   external static fixed bin(17,0)          dcl 1-77
as_data_$ls_message_buffer_cur_lth     external static fixed bin(18,0)          dcl 1-86
as_data_$ls_message_buffer_max_lth     external static fixed bin(18,0)          dcl 1-87
as_data_$ls_message_buffer_ptr         external static pointer                  dcl 1-88
as_data_$ls_request_server_info_ptr    external static pointer                  dcl 1-85
as_data_$max_user_ring                 external static fixed bin(3,0)           dcl 1-41
as_data_$mgtp                          external static pointer                  dcl 1-42
as_data_$mrd_dim                       external static char(32)                 packed unaligned dcl 1-43
as_data_$ntty_dim                      external static char(32)                 packed unaligned dcl 1-44
as_data_$pdtdir                        external static char(168)                packed unaligned dcl 1-45
as_data_$pit_ptr                       external static pointer                  dcl 1-46
as_data_$rcpdir                        external static char(168)                packed unaligned dcl 1-47
as_data_$request_priority              external static fixed bin(17,0)          dcl 1-48
as_data_$rs_ptrs                       external static pointer                  array dcl 1-49
as_data_$rtdtp                         external static pointer                  dcl 1-50
as_data_$sat_htp                       external static pointer                  dcl 1-51
as_data_$satp                          external static pointer                  dcl 1-52
as_data_$signal_types                  external static structure                level 1 dcl 1-67
as_data_$suffix                        external static char(2)                  array packed unaligned dcl 1-53
as_data_$sysdir                        external static char(168)                packed unaligned dcl 1-54
as_data_$system_signal_types           external static structure                level 1 dcl 1-72
as_data_$teens_suffix                  external static char(2)                  array packed unaligned dcl 1-55
as_data_$terminet_tabs_string          external static varying char(144)        dcl 1-56
as_data_$tty_dim                       external static char(32)                 packed unaligned dcl 1-57
as_data_$update_priority               external static fixed bin(17,0)          dcl 1-58
as_data_$version                       external static char(8)                  packed unaligned dcl 1-59
as_data_$whoptr                        external static pointer                  dcl 1-60
as_data_login_words                    based           structure                level 1 dcl 1-77
as_request_version_1                   internal static fixed bin(17,0)          initial dcl 2-27
as_user_message_add_info_ptr           automatic       pointer                  dcl 6-4
fnp_models                             internal static fixed bin(17,0)          initial array dcl 8-28
fnp_types                              internal static char(8)                  initial array packed unaligned dcl 8-25
fnpep                                  automatic       pointer                  dcl 7-41
generic_destination                    based           char(32)                 packed unaligned dcl 7-195
mpxep                                  automatic       pointer                  dcl 7-41
sl_info                                automatic       structure                level 1 dcl 15-24
sl_info_code_msg                       internal static structure                level 1 dcl 15-187
sl_info_msg                            internal static structure                level 1 dcl 15-214
sl_info_sev_code_label_msg             internal static structure                level 1 dcl 15-161
sl_info_sev_code_msg                   internal static structure                level 1 dcl 15-82
sl_info_sev_coded_msg                  internal static structure                level 1 dcl 15-134
sl_info_sev_msg                        internal static structure                level 1 dcl 15-108
supported_fnp                          internal static bit(1)                   initial array packed unaligned dcl 8-31

NAMES DECLARED BY EXPLICIT CONTEXT.
ERROR                           000246 constant        label                    dcl 104 ref 71 76 83 86 89
SEND_REPLY                      000304 constant        entry                    internal dcl 115 ref 96
asr_com_channel_info_srvr_      000064 constant        entry                    external dcl 20

THERE WERE NO NAMES DECLARED BY CONTEXT OR IMPLICATION.

STORAGE REQUIREMENTS FOR THIS PROGRAM.

	Object	Text	Link	Symbol	Defs	Static
Start          0       0       754        1006     570         764
Length      1516     570        32         474     163           0

BLOCK NAME	         STACK SIZE     TYPE		WHY NONQUICK/WHO SHARES STACK FRAME
asr_com_channel_info_srvr_          230 external procedure  is an external procedure.  
SEND_REPLY                              internal procedure  shares stack frame of external procedure asr_com_channel_info_srvr_.  

STORAGE FOR AUTOMATIC VARIABLES.

STACK FRAME                 LOC IDENTIFIER                  BLOCK NAME
asr_com_channel_info_srvr_
                         000100 cdtx                        asr_com_channel_info_srvr_
                         000101 fnp_sw                      asr_com_channel_info_srvr_
                         000102 code                        asr_com_channel_info_srvr_
                         000104 asr_com_channel_info_ptr    asr_com_channel_info_srvr_
                         000106 asr_reply_cci_ptr           asr_com_channel_info_srvr_
                         000110 as_request_sender_ptr       asr_com_channel_info_srvr_
                         000112 cdtp                        asr_com_channel_info_srvr_
                         000114 cdtep                       asr_com_channel_info_srvr_
                         000116 utep                        asr_com_channel_info_srvr_
                         000126 asum_ai                     SEND_REPLY
                         000155 ascci                       SEND_REPLY
                         000210 code                        SEND_REPLY

THE FOLLOWING EXTERNAL OPERATORS ARE USED BY THIS PROGRAM.
r_e_as              r_ne_as             call_ext_out_desc   call_ext_out        return_mac          ext_entry

THE FOLLOWING EXTERNAL ENTRIES ARE CALLED BY THIS PROGRAM.
aim_util_$get_access_class    as_access_audit_$asr_com_chn_info_srvr
as_user_message_$priv_add_message                           cdt_mgr_$find_cdt_channel     ioa_$rsnnl
sys_log_$error_log

THE FOLLOWING EXTERNAL VARIABLES ARE USED BY THIS PROGRAM.
as_data_$cdtp                 error_table_$no_info          error_table_$unimplemented_version




   LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC   
     20 000060   12   76 000071        62 000073        63 000077        64 000102        65 000104        67 000107
     70 000117        71 000121        74 000122        75 000125        76 000143        79 000150        81 000155
     83 000162        85 000172        86 000173        89 000203        96 000207        99 000215       102 000245
    104 000246       109 000253       112 000303       115 000304       122 000305       123 000310       124 000313
    125 000317       126 000343       127 000345       128 000355       129 000365       130 000372       131 000374
    132 000402       133 000405       135 000445       137 000450       138 000453       139 000455       140 000457
    141 000461       142 000473       143 000477       144 000501       145 000506       146 000510       147 000512
    148 000525       150 000527       153 000567


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
