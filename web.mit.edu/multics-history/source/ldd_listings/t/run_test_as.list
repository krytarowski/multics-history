	COMPILATION LISTING OF SEGMENT run_test_as
	Compiled by: Multics PL/I Compiler, Release 29, of July 28, 1986
	Compiled at: Honeywell Bull, Phx. Az., Sys-M 
	Compiled on: 08/04/87  1307.7 mst Tue
	    Options: optimize map

        1 /****^  ********************************************
        2*        *                                          *
        3*        * Copyright, (C) Honeywell Bull Inc., 1987 *
        4*        *                                          *
        5*        ******************************************** */
        6 
        7 /* format: style4,indattr */
        8 
        9 /****^  HISTORY COMMENTS:
       10*  1) change(86-04-18,Swenson), approve(87-07-13,MCR7741),
       11*     audit(87-07-13,GDixon), install(87-08-04,MR12.1-1055):
       12*     Created in order to run answering service in a test process.
       13*                                                   END HISTORY COMMENTS */
       14 /* Automatic */
       15 
       16 run_test_as:
       17      procedure options (variable);
       18 
       19 /* Automatic */
       20 
       21 dcl  atd		        char (512) automatic;
       22 dcl  1 auto_log_salvage_arg aligned like log_salvage_arg automatic;
       23 dcl  code		        fixed bin (35) automatic;
       24 dcl  log_salv_code	        fixed bin (35) automatic;
       25 dcl  log_salv_err_cnt       fixed bin (35) automatic;
       26 dcl  sci_ptr	        ptr automatic;
       27 dcl  system_control_dirname char (168) automatic;
       28 
       29 /* Entries */
       30 
       31 dcl  absentee_user_manager_$term_aum entry options (variable);
       32 dcl  as_$as_init	        entry (fixed bin (35));
       33 dcl  as_$go	        entry (fixed bin (35));
       34 dcl  as_$startup	        entry (fixed bin (35));
       35 dcl  com_err_	        entry () options (variable);
       36 dcl  ioa_$rsnnl	        entry () options (variable);
       37 dcl  iox_$attach_name       entry (char (*), ptr, char (*), ptr, fixed bin (35));
       38 dcl  iox_$control	        entry (ptr, char (*), ptr, fixed bin (35));
       39 dcl  iox_$open	        entry (ptr, fixed bin, bit (1) aligned, fixed bin (35));
       40 dcl  log_write_$open        entry (char (*), char (*), bit (1) aligned, ptr, fixed bin (35));
       41 dcl  log_salvage_	        entry (char (*), char (*), ptr, fixed bin (35));
       42 dcl  mrdim_$test_mrd        entry (char (*));
       43 dcl  pathname_	        entry (char (*), char (*)) returns (char (168));
       44 dcl  probe	        entry options (variable);
       45 dcl  sc_create_sci_	        entry (ptr, fixed bin (35));
       46 dcl  ssu_$abort_subsystem   entry () options (variable);
       47 dcl  ssu_$destroy_invocation entry (ptr);
       48 dcl  ssu_$print_message     entry () options (variable);
       49 dcl  ssu_$standalone_invocation entry (ptr, char (*), char (*), ptr, entry, fixed bin (35));
       50 
       51 /* External */
       52 
       53 dcl  iox_$error_output      ptr external static;
       54 dcl  iox_$user_output       ptr external static;
       55 
       56 /* Constant */
       57 
       58 dcl  FALSE	        bit (1) aligned initial ("0"b) internal static options (constant);
       59 dcl  ME		        char (32) initial ("run_test_as") internal static options (constant);
       60 dcl  TRUE		        bit (1) aligned initial ("1"b) internal static options (constant);
       61 
       62 /* Conditions */
       63 
       64 dcl  cleanup	        condition;
       65 
       66 /* Program */
       67 
       68 	sci_ptr = null ();
       69 	on cleanup
       70 	     call Clean_Up ();
       71 
       72 	call ssu_$standalone_invocation (sci_ptr, ME, "1.0", null (),
       73 	     Abort_Subsystem, code);
       74 	if code ^= 0 then do;
       75 	     call com_err_ (code, ME,
       76 		"Creating standalone subsystem invocation.");
       77 	     goto RETURN;
       78 	end;
       79 
       80 	call Process_Arguments ();
       81 
       82 	sc_stat_$test_mode = TRUE;
       83 	sc_stat_$as_log_write_ptr = null ();
       84 	sc_stat_$admin_log_write_ptr = null ();
       85 	sc_stat_$admin_log_iocb = null ();
       86 	sc_stat_$mc_iocb = null ();
       87 	sc_stat_$mc_is_on = FALSE;
       88 
       89 	call Process_Arguments ();
       90 
       91 	sc_stat_$Multics = FALSE;
       92 	sc_stat_$sysdir = system_control_dirname;
       93 	sc_stat_$log_dir = rtrim (system_control_dirname) || ">as_logs";
       94 
       95 	call Attach_IO_Switches ();
       96 
       97 	call log_write_$open (sc_stat_$log_dir, "log",
       98 	     "1"b /* create */, sc_stat_$as_log_write_ptr, code);
       99 	if code ^= 0 then
      100 	     call ssu_$abort_subsystem (sci_ptr, code,
      101 		"Attempting to open ^a>^a.", sc_stat_$log_dir, "log");
      102 
      103 	call ioa_$rsnnl ("log_output_ ^a>admin_log", atd, (0),
      104 	     sc_stat_$log_dir);
      105 	call iox_$attach_name ("admin_log_", sc_stat_$admin_log_iocb, (atd),
      106 	     codeptr (run_test_as), code);
      107 	if code ^= 0 then
      108 	     call ssu_$abort_subsystem (sci_ptr, code,
      109 		"Could not attach admin_log log.");
      110 	call iox_$open (sc_stat_$admin_log_iocb, Stream_output, "1"b, code);
      111 	if code ^= 0 then do;
      112 	     log_salv_err_cnt = 0;
      113 	     unspec (auto_log_salvage_arg) = ""b;
      114 	     log_salvage_arg_ptr = addr (auto_log_salvage_arg);
      115 	     log_salvage_arg.version = LOG_SALVAGE_ARG_VERSION_1;
      116 	     log_salvage_arg.reporter_proc = print_log_salv_error;
      117 	     call log_salvage_ (sc_stat_$log_dir, "admin_log",
      118 		log_salvage_arg_ptr, log_salv_code);
      119 	     if log_salv_code = 0 then do;
      120 		call iox_$open (sc_stat_$admin_log_iocb, Stream_output,
      121 		     "1"b, code);
      122 		if code ^= 0 then
      123 		     call ssu_$abort_subsystem (sci_ptr, code,
      124 			"Could not open admin_log log.");
      125 	     end;
      126 	     else
      127 		call ssu_$abort_subsystem (sci_ptr, code,
      128 		     "Could not salvage admin_log log.");
      129 	end;
      130 	call iox_$control (sc_stat_$admin_log_iocb, "get_log_write_data_ptr",
      131 	     addr (sc_stat_$admin_log_write_ptr), code);
      132 	if code ^= 0 then
      133 	     call ssu_$abort_subsystem (sci_ptr, code,
      134 		"Could not get log_write_data_ptr for admin_log log.");
      135 
      136 	call sc_create_sci_ (sc_stat_$master_sci_ptr, code);
      137 	if code ^= 0 then
      138 	     call ssu_$abort_subsystem (sci_ptr, code,
      139 		"Could not create system control ssu_ invocation.");
      140 
      141 	sc_stat_$Multics_typed = TRUE;
      142 	sc_stat_$Star_typed = TRUE;
      143 
      144 /**** Prevent a call to hardcore to initialize lct */
      145 	as_data_$lct_initialized = TRUE;
      146 
      147 	call mrdim_$test_mrd (system_control_dirname);
      148 
      149 	call absentee_user_manager_$term_aum ();	/* no absentees */
      150 	call as_$startup (code);
      151 	if code ^= 0 then
      152 	     call ssu_$abort_subsystem (sci_ptr, code,
      153 		"Calling as_$startup.");
      154 
      155 	sc_stat_$Multics = TRUE;
      156 	sc_stat_$Go_typed = TRUE;
      157 	call as_$go (code);
      158 	if code ^= 0 then
      159 	     call ssu_$abort_subsystem (sci_ptr, code,
      160 		"Calling as_$go.");
      161 	sc_stat_$Go = TRUE;
      162 RETURN:
      163 	return;
      164 
      165 Process_Arguments:
      166      procedure ();
      167 
      168 dcl  argument_idx	        fixed bin automatic;
      169 dcl  argument_lth	        fixed bin (21) automatic;
      170 dcl  argument_ptr	        ptr automatic;
      171 dcl  n_arguments	        fixed bin automatic;
      172 
      173 dcl  argument	        char (argument_lth) based (argument_ptr);
      174 
      175 dcl  absolute_pathname_     entry (char (*), char (*), fixed bin (35));
      176 dcl  ssu_$arg_count	        entry (ptr, fixed bin);
      177 dcl  ssu_$arg_ptr	        entry (ptr, fixed bin, ptr, fixed bin (21));
      178 
      179 	call ssu_$arg_count (sci_ptr, n_arguments);
      180 	if n_arguments ^= 1 then
      181 	     call ssu_$abort_subsystem (sci_ptr,
      182 		"Syntax is: ^a system_control_dirname.", ME);
      183 
      184 	call ssu_$arg_ptr (sci_ptr, 1, argument_ptr, argument_lth);
      185 
      186 	call absolute_pathname_ (argument, system_control_dirname, code);
      187 	if code ^= 0 then
      188 	     call ssu_$abort_subsystem (sci_ptr, "^a", argument);
      189 	return;
      190      end Process_Arguments;
      191 
      192 Abort_Subsystem:
      193      procedure ();
      194 
      195 	call Clean_Up ();
      196 	goto RETURN;
      197      end Abort_Subsystem;
      198 
      199 Attach_IO_Switches:
      200      procedure ();
      201 
      202 	call iox_$attach_name ("severity1", sc_stat_$sv1_iocb,
      203 	     "syn_ user_i/o", codeptr (run_test_as), code);
      204 	if code ^= 0 then
      205 	     call ssu_$abort_subsystem (sci_ptr, code,
      206 		"Could not attach sc_stat_$sv1_iocb.");
      207 	call iox_$attach_name ("severity2", sc_stat_$sv2_iocb,
      208 	     "syn_ user_i/o", codeptr (run_test_as), code);
      209 	if code ^= 0 then
      210 	     call ssu_$abort_subsystem (sci_ptr, code,
      211 		"Could not attach sc_stat_$sv2_iocb.");
      212 	call iox_$attach_name ("severity3", sc_stat_$sv3_iocb,
      213 	     "syn_ user_i/o", codeptr (run_test_as), code);
      214 	if code ^= 0 then
      215 	     call ssu_$abort_subsystem (sci_ptr, code,
      216 		"Could not attach sc_stat_$sv3_iocb.");
      217 	call iox_$attach_name ("master_i/o", sc_stat_$master_iocb,
      218 	     "syn_ user_i/o", codeptr (run_test_as), code);
      219 	if code ^= 0 then
      220 	     call ssu_$abort_subsystem (sci_ptr, code,
      221 		"Could not attach sc_stat_$master_iocb.");
      222 	return;
      223      end Attach_IO_Switches;
      224 
      225 Clean_Up:
      226      procedure ();
      227 	if sci_ptr ^= null () then
      228 	     call ssu_$destroy_invocation (sci_ptr);
      229 	return;
      230      end Clean_Up;
      231 
      232 print_log_salv_error:
      233      procedure (P_msg);
      234 
      235 dcl  P_msg	        char (*) parameter;
      236 dcl  msg		        char (1024) varying;
      237 
      238 	msg = P_msg;
      239 
      240 	log_salv_err_cnt = log_salv_err_cnt + 1;
      241 
      242 	if log_salv_err_cnt = 1 then
      243 	     call ssu_$print_message (sci_ptr, "Messages from log salvage of ^a:", pathname_ (sc_stat_$log_dir, "admin_log"));
      244 	call ssu_$print_message (sci_ptr, "^a", msg);
      245 	return;
      246      end print_log_salv_error;
      247 
      248 /* format: off */
      249  /* BEGIN INCLUDE FILE ... as_data_.incl.pl1 ... */
  1     2 
  1     3 /* format: style4 */
  1     4 
  1     5 /* This file must be kept in sync with as_data_.alm */
  1     6 
  1     7 /****^  HISTORY COMMENTS:
  1     8*  1) change(86-09-21,Beattie), approve(86-09-22,MCR7542),
  1     9*     audit(86-10-31,Brunelle), install(86-11-12,MR12.0-1211):
  1    10*     Remove references to the 963 and 029 preaccess commands and remove support
  1    11*     for ARDS, 202_ETX, 2741 and 1050 in system interfaces.
  1    12*  2) change(86-09-25,Swenson), approve(87-07-20,MCR7737),
  1    13*     audit(87-07-20,GDixon), install(87-08-04,MR12.1-1056):
  1    14*     Add references to as_data_ entrypoints added for Login Server.
  1    15*  3) change(87-03-03,Brunelle), approve(87-07-20,MCR7697),
  1    16*     audit(87-07-20,GDixon), install(87-08-04,MR12.1-1056):
  1    17*     Added new user signal field of inacrcvd (14) to handle inactivity response
  1    18*     from user.
  1    19*                                                   END HISTORY COMMENTS */
  1    20 
  1    21 dcl  as_data_$BS char (1) aligned ext static;		/* BACKSPACE character */
  1    22 dcl  as_data_$CR char (1) aligned ext static;		/* CARRIAGE RETURN character */
  1    23 dcl  as_data_$abs_dim char (32) ext static;		/* absentee DIM */
  1    24 dcl  as_data_$acct_update_priority fixed bin ext static;	/* accounting update IPC priority */
  1    25 dcl  as_data_$acsdir char (168) ext static;		/* Access Control Segment directory */
  1    26 dcl  as_data_$ansp ptr ext static;			/* answer_table */
  1    27 dcl  as_data_$as_procid bit (36) aligned ext static;	/* Answering Service process id */
  1    28 dcl  as_data_$as_ring fixed bin (3) ext static;		/* AS operating ring */
  1    29 dcl  as_data_$as_tty char (6);			/* AS master tty channel */
  1    30 dcl  as_data_$asmtp ptr ext static;			/* AS meter table */
  1    31 dcl  as_data_$autp ptr ext static;			/* absentee_user_table */
  1    32 dcl  as_data_$buzzardp ptr ext static;			/* dpg_ list of buteo processes */
  1    33 dcl  as_data_$cdtp ptr ext static;			/* CDT */
  1    34 dcl  as_data_$default_weight fixed bin (35) ext;		/* default user process load control weight */
  1    35 dcl  as_data_$devtabp ptr ext static;			/* device_table */
  1    36 dcl  as_data_$dft_user_ring fixed bin (3) ext static;	/* default user ring */
  1    37 dcl  as_data_$dutp ptr ext static;			/* daemon_user_table */
  1    38 dcl  as_data_$g115_dim char (32) ext static;
  1    39 dcl  as_data_$lct_initialized bit (1) aligned ext static;	/* LCT allocated in ring 0 */
  1    40 dcl  as_data_$lct_size fixed bin ext static;		/* CDT tty channels + spares */
  1    41 dcl  as_data_$max_user_ring fixed bin (3) ext static;	/* maximum user ring */
  1    42 dcl  as_data_$mgtp ptr ext static;			/* master group table */
  1    43 dcl  as_data_$mrd_dim char (32) ext static;		/* daemon's message routing DIM */
  1    44 dcl  as_data_$ntty_dim char (32) ext static;		/* network connection DIM */
  1    45 dcl  as_data_$pdtdir char (168) ext static;		/* PDT directory */
  1    46 dcl  as_data_$pit_ptr ptr ext static;			/* pit_temp_ */
  1    47 dcl  as_data_$rcpdir char (168) ext static;		/* RCP directory */
  1    48 dcl  as_data_$request_priority fixed bin ext static;
  1    49 dcl  as_data_$rs_ptrs (0:9) ptr ext static;		/* rate_structures */
  1    50 dcl  as_data_$rtdtp ptr ext static;			/* RTDT */
  1    51 dcl  as_data_$sat_htp ptr ext static;			/* SAT hash table */
  1    52 dcl  as_data_$satp ptr ext static;			/* SAT */
  1    53 dcl  as_data_$suffix (0:9) char (2) unaligned ext static;
  1    54 dcl  as_data_$sysdir char (168) ext static;		/* system control directory */
  1    55 dcl  as_data_$teens_suffix (10:19) char (2) unaligned ext static;
  1    56 dcl  as_data_$terminet_tabs_string char (144) varying ext static;
  1    57 dcl  as_data_$tty_dim char (32) ext static;		/* standard interactive DIM */
  1    58 dcl  as_data_$update_priority fixed bin ext static;	/* ??? */
  1    59 dcl  as_data_$version char (8) ext static;		/* AS version */
  1    60 dcl  as_data_$whoptr ptr ext static;			/* whotab */
  1    61 
  1    62 dcl  1 as_data_$login_args aligned ext static,		/* control arguments for login */
  1    63        2 n_login_args fixed bin,
  1    64        2 pad fixed bin,
  1    65        2 login_args (55 /* as_data_$login_args.n_login_args */) char (24) unaligned;
  1    66 
  1    67 dcl  1 as_data_$signal_types ext static aligned,		/* IPC process control signals */
  1    68        2 n_signals fixed bin,
  1    69        2 pad fixed bin,
  1    70        2 signals (14 /* as_data_$signal_types.n_signals */) char (8) unaligned;
  1    71 
  1    72 dcl  1 as_data_$system_signal_types ext static aligned,	/* IPC process control signals */
  1    73        2 n_system_signals fixed bin,
  1    74        2 pad fixed bin,
  1    75        2 system_signals (10 /* as_data_$system_signal_types.n_system_signals */) char (8) unaligned;
  1    76 
  1    77 dcl  as_data_$login_words fixed bin ext static aligned,
  1    78 						/* interactive login words */
  1    79      1 as_data_login_words aligned based (addr (as_data_$login_words)),
  1    80        2 n_words fixed bin,
  1    81        2 pad fixed bin,
  1    82        2 words (0 refer (as_data_login_words.n_words)) char (16) unaligned;
  1    83 
  1    84 dcl  as_data_$debug_flag bit (1) aligned external static;
  1    85 dcl  as_data_$ls_request_server_info_ptr ptr external static;
  1    86 dcl  as_data_$ls_message_buffer_cur_lth fixed bin (18) external static;
  1    87 dcl  as_data_$ls_message_buffer_max_lth fixed bin (18) external static;
  1    88 dcl  as_data_$ls_message_buffer_ptr ptr external static;
  1    89 
  1    90 /* END INCLUDE FILE ... as_data_.incl.pl1 ... */
      249 
      250  /* Begin include file ..... iox_modes.incl.pl1 */
  2     2 
  2     3 /* Written by C. D. Tavares, 03/17/75 */
  2     4 /* Updated 10/31/77 by CDT to include short iox mode strings */
  2     5 
  2     6 dcl  iox_modes (13) char (24) int static options (constant) aligned initial
  2     7     ("stream_input", "stream_output", "stream_input_output",
  2     8      "sequential_input", "sequential_output", "sequential_input_output", "sequential_update",
  2     9      "keyed_sequential_input", "keyed_sequential_output", "keyed_sequential_update",
  2    10      "direct_input", "direct_output", "direct_update");
  2    11 
  2    12 dcl  short_iox_modes (13) char (4) int static options (constant) aligned initial
  2    13     ("si", "so", "sio", "sqi", "sqo", "sqio", "squ", "ksqi", "ksqo", "ksqu", "di", "do", "du");
  2    14 
  2    15 dcl (Stream_input initial (1),
  2    16      Stream_output initial (2),
  2    17      Stream_input_output initial (3),
  2    18      Sequential_input initial (4),
  2    19      Sequential_output initial (5),
  2    20      Sequential_input_output initial (6),
  2    21      Sequential_update initial (7),
  2    22      Keyed_sequential_input initial (8),
  2    23      Keyed_sequential_output initial (9),
  2    24      Keyed_sequential_update initial (10),
  2    25      Direct_input initial (11),
  2    26      Direct_output initial (12),
  2    27      Direct_update initial (13)) fixed bin int static options (constant);
  2    28 
  2    29 /* End include file ..... iox_modes.incl.pl1 */
      250 
      251  /* begin include file ... log_salvage_arg.incl.pl1 */
  3     2 
  3     3 /* History:
  3     4*	1985-04-09, EJ Sharpe: initial coding
  3     5**/
  3     6 
  3     7 declare	log_salvage_arg_ptr	pointer;
  3     8 
  3     9 declare 1	log_salvage_arg	aligned based (log_salvage_arg_ptr),
  3    10 	2 version		char (8),		/* LOG_SALVAGE_ARG_VERSION_1 */
  3    11 	2 reporter_proc	entry (char (*)) variable,	/* called to deal with error msgs */
  3    12 	2 from_time	fixed bin (71),	/* amount of history to check */
  3    13 					/* will check only last 5 segs if this is zero */
  3    14 	2 flags,
  3    15 	  3 migrating	bit (1) unal,	/* there should not be a live log seg */
  3    16 	  3 pad		bit (35) unal;
  3    17 
  3    18 declare	LOG_SALVAGE_ARG_VERSION_1 char (8) static options (constant) init ("LOGSLV01");
  3    19 
  3    20 /* end include file ... log_salvage_arg.incl.pl1 */
      251 
      252  /*  BEGIN:   sc_stat_.incl.pl1			  *  *  *  *  *  */
  4     2 
  4     3 
  4     4 /****^  HISTORY COMMENTS:
  4     5*  1) change(87-02-04,GDixon), approve(87-05-25,MCR7690),
  4     6*     audit(87-06-02,Parisek), install(87-08-04,MR12.1-1056):
  4     7*     Add sc_stat_$vchn_requires_accept in support of DSA virtual channels.
  4     8*  2) change(87-02-04,GDixon), approve(87-05-25,MCR7680),
  4     9*     audit(87-06-02,Parisek), install(87-08-04,MR12.1-1056):
  4    10*     Reorganized by type of data to improve readability.
  4    11*                                                   END HISTORY COMMENTS */
  4    12 
  4    13 
  4    14 			      /* ACCESS NAMES		       */
  4    15 dcl (
  4    16  sc_stat_$exec_access_name,	      /* check MC access in an exec request    */
  4    17  sc_stat_$unidentified_access_name  /* check access if no one is logged in.  */
  4    18     ) char(32) ext static;
  4    19 
  4    20 		        /* PATHNAMES			       */
  4    21 dcl (
  4    22  sc_stat_$info_dir,	        /* admin info segs directory		       */
  4    23  sc_stat_$log_dir,	        /* as log segs directory		       */
  4    24  sc_stat_$mc_acs_dir,       /* message coordinator ACS segments (.mcacs) dir */
  4    25  sc_stat_$sysdir	        /* system control directory		       */
  4    26     ) char(168) ext static;
  4    27 
  4    28 		        /* OTHER CHAR STRINGS			       */
  4    29 dcl (
  4    30  sc_stat_$master_channel    /* Master TTY channel.		       */
  4    31     )  char(6) aligned ext static;
  4    32 
  4    33 			       /* LABELS			       */
  4    34 dcl (
  4    35  sc_stat_$admin_listener_exit_label, /* GO here to exit admin mode.  Set to  */
  4    36 			       /*    ssu_$null_label unless 	       */
  4    37 			       /*	   admin_listener is active.	       */
  4    38  sc_stat_$master_abort_label,	       /* GO here after fault that is not      */
  4    39 			       /*    attributable to a particular      */
  4    40 			       /*	   command.		       */
  4    41  sc_stat_$system_shutdown_label      /* GO here to shut down system	       */
  4    42     ) label variable ext static;
  4    43 
  4    44 			 /* POINTERS TO			       */
  4    45 dcl (
  4    46  sc_stat_$admin_log_iocb,	 /* IOCB for admin log		       */
  4    47  sc_stat_$admin_log_write_ptr, /* DATA for log_write_ calls on the admin log */
  4    48  sc_stat_$admin_sci_ptr,	 /* DATA ssu_ for terminal currently executing */
  4    49  sc_stat_$as_log_write_ptr,	 /* DATA for log_write_ calls on as log, used  */
  4    50 			 /*      by sys_log_.		       */
  4    51  sc_stat_$initzer_ttyp,	 /* ENT  mc_ate for initializer terminal       */
  4    52  sc_stat_$master_iocb,	 /* IOCB for "master_i/o"		       */
  4    53  sc_stat_$master_sci_ptr,	 /* DATA ssu_ (permanent) for system control   */
  4    54  sc_stat_$mc_ansp,		 /* HEAD of mc_anstbl		       */
  4    55  sc_stat_$mc_iocb,		 /* IOCB ptr for "mc_i/o"		       */
  4    56  sc_stat_$sv1_iocb,		 /* IOCB ptr for "severity1"		       */
  4    57  sc_stat_$sv2_iocb,		 /* IOCB ptr for "severity2"		       */
  4    58  sc_stat_$sv3_iocb		 /* IOCB ptr for "severity3"		       */
  4    59     ) ptr ext static;
  4    60 
  4    61 			   /* SWITCHES			       */
  4    62 dcl (
  4    63  sc_stat_$Go,		   /* TRUE after answering service is listening*/
  4    64  sc_stat_$Go_typed,		   /* TRUE immediately after 'go' is typed     */
  4    65  sc_stat_$Multics,		   /* TRUE after answering service started     */
  4    66  sc_stat_$Multics_typed,	   /* TRUE immediately after 'mult' is typed   */
  4    67  sc_stat_$Star_typed,	   /* TRUE if 'mult' and 'go' came from 'star' */
  4    68  sc_stat_$admin_listener_switch, /* TRUE if in the admin listener	       */
  4    69  sc_stat_$did_part1,	   /* TRUE if part 1 of system startup ec done */
  4    70  sc_stat_$did_part2,	   /* TRUE if part 2 of system startup ec done */
  4    71  sc_stat_$did_part3,	   /* TRUE if part 3 of system startup ec done */
  4    72  sc_stat_$mc_is_on,		   /* TRUE if message coordinator running      */
  4    73  sc_stat_$no_operator_login,	   /* TRUE if operator login not required, or  */
  4    74 			   /*	 if PNT not yet available.	       */
  4    75  sc_stat_$shutdown_typed,	   /* TRUE if 'shutdown' command in progress.  */
  4    76  sc_stat_$test_mode,	   /* TRUE if in test environment	       */
  4    77  sc_stat_$vchn_requires_accept   /* TRUE if vchn may only be used if accepted*/
  4    78 			   /*      by operator signed on system console*/
  4    79     ) bit(1) aligned ext static;
  4    80 
  4    81 
  4    82 /*  END OF:  sc_stat_.incl.pl1			  *  *  *  *  *  */
      252 
      253 
      254      end run_test_as;
	SOURCE FILES USED IN THIS COMPILATION.

LINE      NUMBER  DATE MODIFIED     NAME			PATHNAME
             0    08/04/87  1221.9  run_test_as.pl1                   >special_ldd>install>MR12.1-1054>run_test_as.pl1
249          1    08/04/87  1154.5  as_data_.incl.pl1                 >spec>install>1056>as_data_.incl.pl1
250          2    02/02/78  1229.7  iox_modes.incl.pl1                >ldd>include>iox_modes.incl.pl1
251          3    04/25/85  0909.8  log_salvage_arg.incl.pl1          >ldd>include>log_salvage_arg.incl.pl1
252          4    08/04/87  1139.2  sc_stat_.incl.pl1                 >spec>install>1056>sc_stat_.incl.pl1
	NAMES DECLARED IN THIS COMPILATION.

IDENTIFIER	     OFFSET    LOC STORAGE CLASS   DATA TYPE		ATTRIBUTES AND REFERENCES
								(* indicates a set context)

NAMES DECLARED BY DECLARE STATEMENT.
FALSE                                  constant        bit(1)                   initial dcl 58 ref 87 91
LOG_SALVAGE_ARG_VERSION_1       000000 constant        char(8)                  initial unaligned dcl 3-18 ref 115
ME                              000002 constant        char(32)                 initial unaligned dcl 59 set ref 72* 75* 180*
P_msg                                  parameter       char                     unaligned dcl 235 ref 232 238
Stream_output                   000053 constant        fixed bin(17,0)          initial dcl 2-15 set ref 110* 120*
TRUE                                   constant        bit(1)                   initial dcl 60 ref 82 141 142 145 155 156 161
absentee_user_manager_$term_aum 000010 constant        entry                    external dcl 31 ref 149
absolute_pathname_              000120 constant        entry                    external dcl 175 ref 186
argument                               based           char                     unaligned dcl 173 set ref 186* 187*
argument_lth                    000406 automatic       fixed bin(21,0)          dcl 169 set ref 184* 186 186 187 187
argument_ptr                    000410 automatic       pointer                  dcl 170 set ref 184* 186 187
as_$go                          000012 constant        entry                    external dcl 33 ref 157
as_$startup                     000014 constant        entry                    external dcl 34 ref 150
as_data_$lct_initialized        000052 external static bit(1)                   dcl 1-39 set ref 145*
atd                             000100 automatic       char(512)                unaligned dcl 21 set ref 103* 105
auto_log_salvage_arg            000300 automatic       structure                level 1 dcl 22 set ref 113* 114
cleanup                         000370 stack reference condition                dcl 64 ref 69
code                            000311 automatic       fixed bin(35,0)          dcl 23 set ref 72* 74 75* 97* 99 99* 105* 107 107*
                                                                                  110* 111 120* 122 122* 126* 130* 132 132* 136* 137
                                                                                  137* 150* 151 151* 157* 158 158* 186* 187 202* 204
                                                                                  204* 207* 209 209* 212* 214 214* 217* 219 219*
com_err_                        000016 constant        entry                    external dcl 35 ref 75
ioa_$rsnnl                      000020 constant        entry                    external dcl 36 ref 103
iox_$attach_name                000022 constant        entry                    external dcl 37 ref 105 202 207 212 217
iox_$control                    000024 constant        entry                    external dcl 38 ref 130
iox_$open                       000026 constant        entry                    external dcl 39 ref 110 120
log_salv_code                   000312 automatic       fixed bin(35,0)          dcl 24 set ref 117* 119
log_salv_err_cnt                000313 automatic       fixed bin(35,0)          dcl 25 set ref 112* 240* 240 242
log_salvage_                    000032 constant        entry                    external dcl 41 ref 117
log_salvage_arg                        based           structure                level 1 dcl 3-9
log_salvage_arg_ptr             000376 automatic       pointer                  dcl 3-7 set ref 114* 115 116 117*
log_write_$open                 000030 constant        entry                    external dcl 40 ref 97
mrdim_$test_mrd                 000034 constant        entry                    external dcl 42 ref 147
msg                             000100 automatic       varying char(1024)       dcl 236 set ref 238* 244*
n_arguments                     000412 automatic       fixed bin(17,0)          dcl 171 set ref 179* 180
pathname_                       000036 constant        entry                    external dcl 43 ref 242 242
reporter_proc             2            based           entry variable           level 2 dcl 3-9 set ref 116*
sc_create_sci_                  000040 constant        entry                    external dcl 45 ref 136
sc_stat_$Go                     000102 external static bit(1)                   dcl 4-62 set ref 161*
sc_stat_$Go_typed               000104 external static bit(1)                   dcl 4-62 set ref 156*
sc_stat_$Multics                000106 external static bit(1)                   dcl 4-62 set ref 91* 155*
sc_stat_$Multics_typed          000110 external static bit(1)                   dcl 4-62 set ref 141*
sc_stat_$Star_typed             000112 external static bit(1)                   dcl 4-62 set ref 142*
sc_stat_$admin_log_iocb         000060 external static pointer                  dcl 4-45 set ref 85* 105* 110* 120* 130*
sc_stat_$admin_log_write_ptr    000062 external static pointer                  dcl 4-45 set ref 84* 130 130
sc_stat_$as_log_write_ptr       000064 external static pointer                  dcl 4-45 set ref 83* 97*
sc_stat_$log_dir                000054 external static char(168)                unaligned dcl 4-21 set ref 93* 97* 99* 103* 117*
                                                                                  242* 242*
sc_stat_$master_iocb            000066 external static pointer                  dcl 4-45 set ref 217*
sc_stat_$master_sci_ptr         000070 external static pointer                  dcl 4-45 set ref 136*
sc_stat_$mc_iocb                000072 external static pointer                  dcl 4-45 set ref 86*
sc_stat_$mc_is_on               000114 external static bit(1)                   dcl 4-62 set ref 87*
sc_stat_$sv1_iocb               000074 external static pointer                  dcl 4-45 set ref 202*
sc_stat_$sv2_iocb               000076 external static pointer                  dcl 4-45 set ref 207*
sc_stat_$sv3_iocb               000100 external static pointer                  dcl 4-45 set ref 212*
sc_stat_$sysdir                 000056 external static char(168)                unaligned dcl 4-21 set ref 92*
sc_stat_$test_mode              000116 external static bit(1)                   dcl 4-62 set ref 82*
sci_ptr                         000314 automatic       pointer                  dcl 26 set ref 68* 72* 99* 107* 122* 126* 132* 137*
                                                                                  151* 158* 179* 180* 184* 187* 204* 209* 214* 219*
                                                                                  227 227* 242* 244*
ssu_$abort_subsystem            000042 constant        entry                    external dcl 46 ref 99 107 122 126 132 137 151 158
                                                                                  180 187 204 209 214 219
ssu_$arg_count                  000122 constant        entry                    external dcl 176 ref 179
ssu_$arg_ptr                    000124 constant        entry                    external dcl 177 ref 184
ssu_$destroy_invocation         000044 constant        entry                    external dcl 47 ref 227
ssu_$print_message              000046 constant        entry                    external dcl 48 ref 242 244
ssu_$standalone_invocation      000050 constant        entry                    external dcl 49 ref 72
system_control_dirname          000316 automatic       char(168)                unaligned dcl 27 set ref 92 93 147* 186*
version                                based           char(8)                  level 2 dcl 3-9 set ref 115*

NAMES DECLARED BY DECLARE STATEMENT AND NEVER REFERENCED.
Direct_input                           internal static fixed bin(17,0)          initial dcl 2-15
Direct_output                          internal static fixed bin(17,0)          initial dcl 2-15
Direct_update                          internal static fixed bin(17,0)          initial dcl 2-15
Keyed_sequential_input                 internal static fixed bin(17,0)          initial dcl 2-15
Keyed_sequential_output                internal static fixed bin(17,0)          initial dcl 2-15
Keyed_sequential_update                internal static fixed bin(17,0)          initial dcl 2-15
Sequential_input                       internal static fixed bin(17,0)          initial dcl 2-15
Sequential_input_output                internal static fixed bin(17,0)          initial dcl 2-15
Sequential_output                      internal static fixed bin(17,0)          initial dcl 2-15
Sequential_update                      internal static fixed bin(17,0)          initial dcl 2-15
Stream_input                           internal static fixed bin(17,0)          initial dcl 2-15
Stream_input_output                    internal static fixed bin(17,0)          initial dcl 2-15
argument_idx                           automatic       fixed bin(17,0)          dcl 168
as_$as_init                     000000 constant        entry                    external dcl 32
as_data_$BS                            external static char(1)                  dcl 1-21
as_data_$CR                            external static char(1)                  dcl 1-22
as_data_$abs_dim                       external static char(32)                 unaligned dcl 1-23
as_data_$acct_update_priority          external static fixed bin(17,0)          dcl 1-24
as_data_$acsdir                        external static char(168)                unaligned dcl 1-25
as_data_$ansp                          external static pointer                  dcl 1-26
as_data_$as_procid                     external static bit(36)                  dcl 1-27
as_data_$as_ring                       external static fixed bin(3,0)           dcl 1-28
as_data_$as_tty                        automatic       char(6)                  unaligned dcl 1-29
as_data_$asmtp                         external static pointer                  dcl 1-30
as_data_$autp                          external static pointer                  dcl 1-31
as_data_$buzzardp                      external static pointer                  dcl 1-32
as_data_$cdtp                          external static pointer                  dcl 1-33
as_data_$debug_flag                    external static bit(1)                   dcl 1-84
as_data_$default_weight                external static fixed bin(35,0)          dcl 1-34
as_data_$devtabp                       external static pointer                  dcl 1-35
as_data_$dft_user_ring                 external static fixed bin(3,0)           dcl 1-36
as_data_$dutp                          external static pointer                  dcl 1-37
as_data_$g115_dim                      external static char(32)                 unaligned dcl 1-38
as_data_$lct_size                      external static fixed bin(17,0)          dcl 1-40
as_data_$login_args                    external static structure                level 1 dcl 1-62
as_data_$login_words                   external static fixed bin(17,0)          dcl 1-77
as_data_$ls_message_buffer_cur_lth     external static fixed bin(18,0)          dcl 1-86
as_data_$ls_message_buffer_max_lth     external static fixed bin(18,0)          dcl 1-87
as_data_$ls_message_buffer_ptr         external static pointer                  dcl 1-88
as_data_$ls_request_server_info_ptr    external static pointer                  dcl 1-85
as_data_$max_user_ring                 external static fixed bin(3,0)           dcl 1-41
as_data_$mgtp                          external static pointer                  dcl 1-42
as_data_$mrd_dim                       external static char(32)                 unaligned dcl 1-43
as_data_$ntty_dim                      external static char(32)                 unaligned dcl 1-44
as_data_$pdtdir                        external static char(168)                unaligned dcl 1-45
as_data_$pit_ptr                       external static pointer                  dcl 1-46
as_data_$rcpdir                        external static char(168)                unaligned dcl 1-47
as_data_$request_priority              external static fixed bin(17,0)          dcl 1-48
as_data_$rs_ptrs                       external static pointer                  array dcl 1-49
as_data_$rtdtp                         external static pointer                  dcl 1-50
as_data_$sat_htp                       external static pointer                  dcl 1-51
as_data_$satp                          external static pointer                  dcl 1-52
as_data_$signal_types                  external static structure                level 1 dcl 1-67
as_data_$suffix                        external static char(2)                  array unaligned dcl 1-53
as_data_$sysdir                        external static char(168)                unaligned dcl 1-54
as_data_$system_signal_types           external static structure                level 1 dcl 1-72
as_data_$teens_suffix                  external static char(2)                  array unaligned dcl 1-55
as_data_$terminet_tabs_string          external static varying char(144)        dcl 1-56
as_data_$tty_dim                       external static char(32)                 unaligned dcl 1-57
as_data_$update_priority               external static fixed bin(17,0)          dcl 1-58
as_data_$version                       external static char(8)                  unaligned dcl 1-59
as_data_$whoptr                        external static pointer                  dcl 1-60
as_data_login_words                    based           structure                level 1 dcl 1-77
iox_$error_output                      external static pointer                  dcl 53
iox_$user_output                       external static pointer                  dcl 54
iox_modes                              internal static char(24)                 initial array dcl 2-6
probe                           000000 constant        entry                    external dcl 44
sc_stat_$admin_listener_exit_label     external static label variable           dcl 4-34
sc_stat_$admin_listener_switch         external static bit(1)                   dcl 4-62
sc_stat_$admin_sci_ptr                 external static pointer                  dcl 4-45
sc_stat_$did_part1                     external static bit(1)                   dcl 4-62
sc_stat_$did_part2                     external static bit(1)                   dcl 4-62
sc_stat_$did_part3                     external static bit(1)                   dcl 4-62
sc_stat_$exec_access_name              external static char(32)                 unaligned dcl 4-15
sc_stat_$info_dir                      external static char(168)                unaligned dcl 4-21
sc_stat_$initzer_ttyp                  external static pointer                  dcl 4-45
sc_stat_$master_abort_label            external static label variable           dcl 4-34
sc_stat_$master_channel                external static char(6)                  dcl 4-29
sc_stat_$mc_acs_dir                    external static char(168)                unaligned dcl 4-21
sc_stat_$mc_ansp                       external static pointer                  dcl 4-45
sc_stat_$no_operator_login             external static bit(1)                   dcl 4-62
sc_stat_$shutdown_typed                external static bit(1)                   dcl 4-62
sc_stat_$system_shutdown_label         external static label variable           dcl 4-34
sc_stat_$unidentified_access_name      external static char(32)                 unaligned dcl 4-15
sc_stat_$vchn_requires_accept          external static bit(1)                   dcl 4-62
short_iox_modes                        internal static char(4)                  initial array dcl 2-12

NAMES DECLARED BY EXPLICIT CONTEXT.
Abort_Subsystem                 001532 constant        entry                    internal dcl 192 ref 72 72
Attach_IO_Switches              001547 constant        entry                    internal dcl 199 ref 95
Clean_Up                        002114 constant        entry                    internal dcl 225 ref 69 195
Process_Arguments               001374 constant        entry                    internal dcl 165 ref 80 89
RETURN                          001373 constant        label                    dcl 162 ref 77 196
print_log_salv_error            002136 constant        entry                    internal dcl 232 ref 116
run_test_as                     000332 constant        entry                    external dcl 16 ref 105 105 202 202 207 207 212 212
                                                                                  217 217

NAMES DECLARED BY CONTEXT OR IMPLICATION.
addr                                                   builtin function         ref 114 130 130
codeptr                                                builtin function         ref 105 105 202 202 207 207 212 212 217 217
null                                                   builtin function         ref 68 72 72 83 84 85 86 227
rtrim                                                  builtin function         ref 93
unspec                                                 builtin function         ref 113

STORAGE REQUIREMENTS FOR THIS PROGRAM.

	Object	Text	Link	Symbol	Defs	Static
Start          0       0      2754        3102    2266        2764
Length      3446    2266       126         327     465           0

BLOCK NAME	         STACK SIZE     TYPE		WHY NONQUICK/WHO SHARES STACK FRAME
run_test_as                         528 external procedure  is an external procedure.  
on unit on line 69                   64 on unit               
Process_Arguments                       internal procedure  shares stack frame of external procedure run_test_as.  
Abort_Subsystem                      64 internal procedure  is assigned to an entry variable.  
Attach_IO_Switches                      internal procedure  shares stack frame of external procedure run_test_as.  
Clean_Up                             68 internal procedure  is called by several nonquick procedures.  
print_log_salv_error                390 internal procedure  is assigned to an entry variable.  

STORAGE FOR AUTOMATIC VARIABLES.

STACK FRAME                 LOC IDENTIFIER                  BLOCK NAME
print_log_salv_error     000100 msg                         print_log_salv_error
run_test_as              000100 atd                         run_test_as
                         000300 auto_log_salvage_arg        run_test_as
                         000311 code                        run_test_as
                         000312 log_salv_code               run_test_as
                         000313 log_salv_err_cnt            run_test_as
                         000314 sci_ptr                     run_test_as
                         000316 system_control_dirname      run_test_as
                         000376 log_salvage_arg_ptr         run_test_as
                         000406 argument_lth                Process_Arguments
                         000410 argument_ptr                Process_Arguments
                         000412 n_arguments                 Process_Arguments

THE FOLLOWING EXTERNAL OPERATORS ARE USED BY THIS PROGRAM.
alloc_char_temp     call_ext_out_desc   call_ext_out        call_int_other      return_mac          tra_ext_1
enable_op           shorten_stack       ext_entry           int_entry           int_entry_desc

THE FOLLOWING EXTERNAL ENTRIES ARE CALLED BY THIS PROGRAM.
absentee_user_manager_$term_aum                             absolute_pathname_            as_$go
as_$startup                   com_err_                      ioa_$rsnnl                    iox_$attach_name
iox_$control                  iox_$open                     log_salvage_                  log_write_$open
mrdim_$test_mrd               pathname_                     sc_create_sci_                ssu_$abort_subsystem
ssu_$arg_count                ssu_$arg_ptr                  ssu_$destroy_invocation       ssu_$print_message
ssu_$standalone_invocation

THE FOLLOWING EXTERNAL VARIABLES ARE USED BY THIS PROGRAM.
as_data_$lct_initialized      sc_stat_$Go                   sc_stat_$Go_typed             sc_stat_$Multics
sc_stat_$Multics_typed        sc_stat_$Star_typed           sc_stat_$admin_log_iocb       sc_stat_$admin_log_write_ptr
sc_stat_$as_log_write_ptr     sc_stat_$log_dir              sc_stat_$master_iocb          sc_stat_$master_sci_ptr
sc_stat_$mc_iocb              sc_stat_$mc_is_on             sc_stat_$sv1_iocb             sc_stat_$sv2_iocb
sc_stat_$sv3_iocb             sc_stat_$sysdir               sc_stat_$test_mode




   LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC   
     16 000331        68 000337        69 000341        72 000363        74 000426        75 000430        77 000454
     80 000455        82 000456        83 000461        84 000463        85 000464        86 000465        87 000466
     89 000467        91 000470        92 000472        93 000476        95 000525        97 000527        99 000564
    103 000624       105 000655       107 000717       110 000745       111 000764       112 000766       113 000767
    114 000772       115 000774       116 000777       117 001002       119 001033       120 001035       122 001054
    125 001102       126 001103       130 001127       132 001160       136 001206       137 001217       141 001245
    142 001250       145 001251       147 001252       149 001262       150 001267       151 001276       155 001327
    156 001332       157 001333       158 001341       161 001370       162 001373       165 001374       179 001375
    180 001406       184 001435       186 001454       187 001500       189 001530       192 001531       195 001537
    196 001544       199 001547       202 001550       204 001613       207 001641       209 001703       212 001731
    214 001774       217 002022       219 002064       222 002112       225 002113       227 002121       229 002134
    232 002135       238 002151       240 002162       242 002167       244 002241       245 002265


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
