	COMPILATION LISTING OF SEGMENT convert_MR10_2_urf
	Compiled by: Multics PL/I Compiler, Release 28d, of October 4, 1983
	Compiled at: Honeywell Multics Op. - System M
	Compiled on: 12/05/84  1103.0 mst Wed
	    Options: optimize list

        1 /* ***********************************************************
        2*   *                                                         *
        3*   * Copyright, (C) Honeywell Information Systems Inc., 1984 *
        4*   *                                                         *
        5*   *********************************************************** */
        6 /* CONVERT_MR10_2_URF: Program to convert a MR10.2 URF to a MR11 URF.
        7*   MR11 URFs are Version 3 MSTBs rather than Version 1 or 2.  The 
        8*   format of the URF entries themselves has not changed. */
        9 
       10 /* format: style2 */
       11 /* Written 1984-07-31 by Eric Swenson */
       12 
       13 convert_MR10_2_urf:
       14      procedure options (variable);
       15 
       16 /* Automatic */
       17 
       18 	dcl     argument_idx	 fixed bin (17);
       19 	dcl     argument_lth	 fixed bin (21);
       20 	dcl     argument_ptr	 ptr;
       21 	dcl     code		 fixed bin (35);
       22 	dcl     dirname		 char (168);
       23 	dcl     entryname		 char (32);
       24 	dcl     n_arguments		 fixed bin (17);
       25 	dcl     new_entryname	 char (32);
       26 	dcl     old_entryname	 char (32);
       27 	dcl     old_newname		 char (32);
       28 
       29 /* Based */
       30 
       31 	dcl     argument		 char (argument_lth) based (argument_ptr);
       32 
       33 /* External Entries */
       34 
       35 	dcl     com_err_		 entry () options (variable);
       36 	dcl     convert_v2_mstb_	 entry (char (*), char (*), char (*), char (*), entry, fixed bin (18) unsigned,
       37 				 fixed bin (35));
       38 	dcl     convert_v2_mstb_$default_convert_proc
       39 				 entry (ptr, ptr, ptr, fixed bin (35));
       40 	dcl     cu_$arg_count	 entry (fixed bin, fixed bin (35));
       41 	dcl     cu_$arg_ptr		 entry (fixed bin, ptr, fixed bin (21), fixed bin (35));
       42 	dcl     expand_pathname_	 entry (char (*), char (*), char (*), fixed bin (35));
       43 	dcl     hcs_$chname_file	 entry (char (*), char (*), char (*), char (*), fixed bin (35));
       44 	dcl     ms_table_mgr_$delete	 entry (char (*), char (*), fixed bin (35));
       45 	dcl     pathname_		 entry (char (*), char (*)) returns (char (168));
       46 	dcl     unique_chars_	 entry (bit (*)) returns (char (15));
       47 
       48 /* Constant */
       49 
       50 	dcl     ME		 char (32) initial ("convert_MR10_2_urf") internal static options (constant);
       51 	dcl     SAME_SIZE		 fixed bin (18) unsigned internal static options (constant) initial (0);
       52 
       53 /* Program */
       54 
       55 	call cu_$arg_count (n_arguments, code);
       56 	if code ^= 0
       57 	then do;
       58 		call com_err_ (code, ME);
       59 		return;
       60 	     end;
       61 
       62 	if n_arguments = 0
       63 	then do;
       64 		call com_err_ (0, ME, "Usage: ^a pathname_of_urf_to_convert", ME);
       65 		return;
       66 	     end;
       67 
       68 	call cu_$arg_ptr (1, argument_ptr, argument_lth, (0));
       69 	call expand_pathname_ (argument, dirname, entryname, code);
       70 	if code ^= 0
       71 	then do;
       72 		call com_err_ (code, ME, "^a", argument);
       73 		return;
       74 	     end;
       75 
       76 	new_entryname = rtrim (substr (entryname, 1, 16)) || "." || unique_chars_ (""b);
       77 
       78 	call convert_v2_mstb_ (dirname, entryname, dirname, new_entryname, convert_v2_mstb_$default_convert_proc,
       79 	     SAME_SIZE, code);
       80 	if code ^= 0
       81 	then do;					/* Error occured, delete new table (if created), and rename old one back. */
       82 		call com_err_ (code, ME, "Converting v2 MSTB.");
       83 		return;
       84 	     end;
       85 
       86 	old_newname = rtrim (substr (entryname, 1, 16)) || "." || unique_chars_ (""b);
       87 
       88 /* Add shriekname to old MSTB */
       89 
       90 	call hcs_$chname_file (dirname, entryname, "", old_newname, code);
       91 	if code ^= 0
       92 	then do;
       93 		call com_err_ (code, ME, "Adding shriekname to old MSTB.");
       94 		return;
       95 	     end;
       96 
       97 /* Delete real name from old MSTB */
       98 
       99 	call hcs_$chname_file (dirname, entryname, entryname, "", code);
      100 	if code ^= 0
      101 	then do;
      102 		call com_err_ (code, ME, "Deleting name from old MSTB.");
      103 		return;
      104 	     end;
      105 
      106 /* Rename the new one to the real name */
      107 
      108 	call hcs_$chname_file (dirname, new_entryname, new_entryname, entryname, code);
      109 	if code ^= 0
      110 	then do;
      111 		call com_err_ (code, ME, "Renaming new MSTB.");
      112 		return;
      113 	     end;
      114 
      115 	return;
      116 
      117      end convert_MR10_2_urf;
	SOURCE FILES USED IN THIS COMPILATION.

LINE      NUMBER  DATE MODIFIED     NAME			PATHNAME
             0    12/05/84  0854.0  convert_MR10_2_urf.pl1            >special_ldd>temp>as>convert_MR10_2_urf.pl1
	NAMES DECLARED IN THIS COMPILATION.

IDENTIFIER	     OFFSET    LOC STORAGE CLASS   DATA TYPE		ATTRIBUTES AND REFERENCES
								(* indicates a set context)

NAMES DECLARED BY DECLARE STATEMENT.
ME                              000000 constant        char(32)                 initial unaligned dcl 50 set ref 58* 64* 64* 72* 82*
                                                                                  93* 102* 111*
SAME_SIZE                       000026 constant        fixed bin(18,0)          initial unsigned dcl 51 set ref 78*
argument                               based           char                     unaligned dcl 31 set ref 69* 72*
argument_lth                    000100 automatic       fixed bin(21,0)          dcl 19 set ref 68* 69 69 72 72
argument_ptr                    000102 automatic       pointer                  dcl 20 set ref 68* 69 72
code                            000104 automatic       fixed bin(35,0)          dcl 21 set ref 55* 56 58* 69* 70 72* 78* 80 82* 90*
                                                                                  91 93* 99* 100 102* 108* 109 111*
com_err_                        000010 constant        entry                    external dcl 35 ref 58 64 72 82 93 102 111
convert_v2_mstb_                000012 constant        entry                    external dcl 36 ref 78
convert_v2_mstb_$default_convert_proc
                                000014 constant        entry                    external dcl 38 ref 78 78
cu_$arg_count                   000016 constant        entry                    external dcl 40 ref 55
cu_$arg_ptr                     000020 constant        entry                    external dcl 41 ref 68
dirname                         000105 automatic       char(168)                unaligned dcl 22 set ref 69* 78* 78* 90* 99* 108*
entryname                       000157 automatic       char(32)                 unaligned dcl 23 set ref 69* 76 78* 86 90* 99* 99*
                                                                                  108*
expand_pathname_                000022 constant        entry                    external dcl 42 ref 69
hcs_$chname_file                000024 constant        entry                    external dcl 43 ref 90 99 108
n_arguments                     000167 automatic       fixed bin(17,0)          dcl 24 set ref 55* 62
new_entryname                   000170 automatic       char(32)                 unaligned dcl 25 set ref 76* 78* 108* 108*
old_newname                     000200 automatic       char(32)                 unaligned dcl 27 set ref 86* 90*
unique_chars_                   000026 constant        entry                    external dcl 46 ref 76 86

NAMES DECLARED BY DECLARE STATEMENT AND NEVER REFERENCED.
argument_idx                           automatic       fixed bin(17,0)          dcl 18
ms_table_mgr_$delete            000000 constant        entry                    external dcl 44
old_entryname                          automatic       char(32)                 unaligned dcl 26
pathname_                       000000 constant        entry                    external dcl 45

NAME DECLARED BY EXPLICIT CONTEXT.
convert_MR10_2_urf              000074 constant        entry                    external dcl 13

NAMES DECLARED BY CONTEXT OR IMPLICATION.
rtrim                                                  builtin function         ref 76 86
substr                                                 builtin function         ref 76 86

STORAGE REQUIREMENTS FOR THIS PROGRAM.

	Object	Text	Link	Symbol	Defs	Static
Start          0       0      1060        1110     737        1070
Length      1300     737        30         153     120           0

BLOCK NAME	         STACK SIZE     TYPE		WHY NONQUICK/WHO SHARES STACK FRAME
convert_MR10_2_urf                  202 external procedure  is an external procedure.  

STORAGE FOR AUTOMATIC VARIABLES.

STACK FRAME                 LOC IDENTIFIER                  BLOCK NAME
convert_MR10_2_urf       000100 argument_lth                convert_MR10_2_urf
                         000102 argument_ptr                convert_MR10_2_urf
                         000104 code                        convert_MR10_2_urf
                         000105 dirname                     convert_MR10_2_urf
                         000157 entryname                   convert_MR10_2_urf
                         000167 n_arguments                 convert_MR10_2_urf
                         000170 new_entryname               convert_MR10_2_urf
                         000200 old_newname                 convert_MR10_2_urf

THE FOLLOWING EXTERNAL OPERATORS ARE USED BY THIS PROGRAM.
alloc_cs            cat_realloc_cs      call_ext_out_desc   call_ext_out        return              shorten_stack
ext_entry

THE FOLLOWING EXTERNAL ENTRIES ARE CALLED BY THIS PROGRAM.
com_err_                      convert_v2_mstb_              convert_v2_mstb_$default_convert_proc
cu_$arg_count                 cu_$arg_ptr                   expand_pathname_              hcs_$chname_file
unique_chars_

NO EXTERNAL VARIABLES ARE USED BY THIS PROGRAM.


CONSTANTS
000734  aa     077777000043
000735  aa     000001000000

000000  aa  143 157 156 166	conv
000001  aa  145 162 164 137	ert_
000002  aa  115 122 061 060	MR10
000003  aa  137 062 137 165	_2_u
000004  aa  162 146 040 040	rf  
000005  aa  040 040 040 040	    
000006  aa  040 040 040 040	    
000007  aa  040 040 040 040	    

000010  aa     524000000022

000011  aa     524000000034

000012  aa     524000000036

000013  aa     524000000000

000014  aa     524000000023

000015  aa     604000000022

000016  aa     500000000000

000017  aa     514000000000

000736  aa  056 000 000 000	.

000020  aa     524000000002

000021  aa     526000000000

000022  aa     524000000044

000023  aa     404000000005

000024  aa     526000000040

000025  aa     404000000043

000026  aa     000000000000

000027  aa     526000000017

000030  aa     526000000250

000031  aa  122 145 156 141	Rena
000032  aa  155 151 156 147	ming
000033  aa  040 156 145 167	 new
000034  aa  040 115 123 124	 MST
000035  aa  102 056 000 000	B.

000036  aa  103 157 156 166	Conv
000037  aa  145 162 164 151	erti
000040  aa  156 147 040 166	ng v
000041  aa  062 040 115 123	2 MS
000042  aa  124 102 056 000	TB.

000043  aa  104 145 154 145	Dele
000044  aa  164 151 156 147	ting
000045  aa  040 156 141 155	 nam
000046  aa  145 040 146 162	e fr
000047  aa  157 155 040 157	om o
000050  aa  154 144 040 115	ld M
000051  aa  123 124 102 056	STB.

000052  aa  101 144 144 151	Addi
000053  aa  156 147 040 163	ng s
000054  aa  150 162 151 145	hrie
000055  aa  153 156 141 155	knam
000056  aa  145 040 164 157	e to
000057  aa  040 157 154 144	 old
000060  aa  040 115 123 124	 MST
000061  aa  102 056 000 000	B.

000062  aa  125 163 141 147	Usag
000063  aa  145 072 040 136	e: ^
000064  aa  141 040 160 141	a pa
000065  aa  164 150 156 141	thna
000066  aa  155 145 137 157	me_o
000067  aa  146 137 165 162	f_ur
000070  aa  146 137 164 157	f_to
000071  aa  137 143 157 156	_con
000072  aa  166 145 162 164	vert

BEGIN PROCEDURE convert_MR10_2_urf
ENTRY TO convert_MR10_2_urf                                 STATEMENT 1 ON LINE 13
convert_MR10_2_urf:
     procedure options (variable);

000073  da     000114240000
000074  aa   000320 6270 00	eax7 	208
000075  aa  7 00034 3521 20	epp2 	pr7|28,*
000076  aa  2 01045 2721 00	tsp2 	pr2|549		ext_entry
000077  aa     000000000000
000100  aa     000000000000
						STATEMENT 1 ON LINE 55
	call cu_$arg_count (n_arguments, code);

000101  aa  6 00167 3521 00	epp2 	pr6|119		n_arguments
000102  aa  6 00212 2521 00	spri2	pr6|138
000103  aa  6 00104 3521 00	epp2 	pr6|68		code
000104  aa  6 00214 2521 00	spri2	pr6|140
000105  aa  6 00210 6211 00	eax1 	pr6|136
000106  aa   010000 4310 07	fld  	4096,dl
000107  la  4 00016 3521 20	epp2 	pr4|14,*		cu_$arg_count
000110  aa  0 00623 7001 00	tsx0 	pr0|403		call_ext_out
						STATEMENT 1 ON LINE 56
	if code ^= 0
	then do;

000111  aa  6 00104 2361 00	ldq  	pr6|68		code
000112  aa   000017 6000 04	tze  	15,ic		000131
						STATEMENT 1 ON LINE 58
		call com_err_ (code, ME);

000113  aa  6 00104 3521 00	epp2 	pr6|68		code
000114  aa  6 00220 2521 00	spri2	pr6|144
000115  aa   777663 3520 04	epp2 	-77,ic		000000 = 143157156166
000116  aa  6 00222 2521 00	spri2	pr6|146
000117  aa   777706 3520 04	epp2 	-58,ic		000025 = 404000000043
000120  aa  6 00224 2521 00	spri2	pr6|148
000121  aa   777703 3520 04	epp2 	-61,ic		000024 = 526000000040
000122  aa  6 00226 2521 00	spri2	pr6|150
000123  aa  6 00216 6211 00	eax1 	pr6|142
000124  aa   010000 4310 07	fld  	4096,dl
000125  aa  6 00044 3701 20	epp4 	pr6|36,*
000126  la  4 00010 3521 20	epp2 	pr4|8,*		com_err_
000127  aa  0 00622 7001 00	tsx0 	pr0|402		call_ext_out_desc
						STATEMENT 1 ON LINE 59
		return;

000130  aa  0 00631 7101 00	tra  	pr0|409		return
						STATEMENT 1 ON LINE 60
	     end;

						STATEMENT 1 ON LINE 62
	if n_arguments = 0
	then do;

000131  aa  6 00167 2361 00	ldq  	pr6|119		n_arguments
000132  aa   000032 6010 04	tnz  	26,ic		000164
						STATEMENT 1 ON LINE 64
		call com_err_ (0, ME, "Usage: ^a pathname_of_urf_to_convert", ME);

000133  aa  6 00230 4501 00	stz  	pr6|152
000134  aa  000 100 100 404	mlr  	(ic),(pr),fill(000)
000135  aa   777726 00 0044	desc9a	-42,36		000062 = 125163141147
000136  aa  6 00216 00 0044	desc9a	pr6|142,36
000137  aa  6 00230 3521 00	epp2 	pr6|152
000140  aa  6 00234 2521 00	spri2	pr6|156
000141  aa   777637 3520 04	epp2 	-97,ic		000000 = 143157156166
000142  aa  6 00236 2521 00	spri2	pr6|158
000143  aa  6 00216 3521 00	epp2 	pr6|142
000144  aa  6 00240 2521 00	spri2	pr6|160
000145  aa   777633 3520 04	epp2 	-101,ic		000000 = 143157156166
000146  aa  6 00242 2521 00	spri2	pr6|162
000147  aa   777654 3520 04	epp2 	-84,ic		000023 = 404000000005
000150  aa  6 00244 2521 00	spri2	pr6|164
000151  aa   777653 3520 04	epp2 	-85,ic		000024 = 526000000040
000152  aa  6 00246 2521 00	spri2	pr6|166
000153  aa  6 00252 2521 00	spri2	pr6|170
000154  aa   777646 3520 04	epp2 	-90,ic		000022 = 524000000044
000155  aa  6 00250 2521 00	spri2	pr6|168
000156  aa  6 00232 6211 00	eax1 	pr6|154
000157  aa   020000 4310 07	fld  	8192,dl
000160  aa  6 00044 3701 20	epp4 	pr6|36,*
000161  la  4 00010 3521 20	epp2 	pr4|8,*		com_err_
000162  aa  0 00622 7001 00	tsx0 	pr0|402		call_ext_out_desc
						STATEMENT 1 ON LINE 65
		return;

000163  aa  0 00631 7101 00	tra  	pr0|409		return
						STATEMENT 1 ON LINE 66
	     end;

						STATEMENT 1 ON LINE 68
	call cu_$arg_ptr (1, argument_ptr, argument_lth, (0));

000164  aa   000001 2360 07	ldq  	1,dl
000165  aa  6 00230 7561 00	stq  	pr6|152
000166  aa  6 00231 4501 00	stz  	pr6|153
000167  aa  6 00230 3521 00	epp2 	pr6|152
000170  aa  6 00220 2521 00	spri2	pr6|144
000171  aa  6 00102 3521 00	epp2 	pr6|66		argument_ptr
000172  aa  6 00222 2521 00	spri2	pr6|146
000173  aa  6 00100 3521 00	epp2 	pr6|64		argument_lth
000174  aa  6 00224 2521 00	spri2	pr6|148
000175  aa  6 00231 3521 00	epp2 	pr6|153
000176  aa  6 00226 2521 00	spri2	pr6|150
000177  aa  6 00216 6211 00	eax1 	pr6|142
000200  aa   020000 4310 07	fld  	8192,dl
000201  aa  6 00044 3701 20	epp4 	pr6|36,*
000202  la  4 00020 3521 20	epp2 	pr4|16,*		cu_$arg_ptr
000203  aa  0 00623 7001 00	tsx0 	pr0|403		call_ext_out
						STATEMENT 1 ON LINE 69
	call expand_pathname_ (argument, dirname, entryname, code);

000204  aa  6 00100 2361 00	ldq  	pr6|64		argument_lth
000205  aa   526000 2760 03	orq  	175104,du
000206  aa  6 00231 7561 00	stq  	pr6|153
000207  aa  6 00102 3521 20	epp2 	pr6|66,*		argument
000210  aa  6 00234 2521 00	spri2	pr6|156
000211  aa  6 00105 3521 00	epp2 	pr6|69		dirname
000212  aa  6 00236 2521 00	spri2	pr6|158
000213  aa  6 00157 3521 00	epp2 	pr6|111		entryname
000214  aa  6 00240 2521 00	spri2	pr6|160
000215  aa  6 00104 3521 00	epp2 	pr6|68		code
000216  aa  6 00242 2521 00	spri2	pr6|162
000217  aa  6 00231 3521 00	epp2 	pr6|153
000220  aa  6 00244 2521 00	spri2	pr6|164
000221  aa   777607 3520 04	epp2 	-121,ic		000030 = 526000000250
000222  aa  6 00246 2521 00	spri2	pr6|166
000223  aa   777601 3520 04	epp2 	-127,ic		000024 = 526000000040
000224  aa  6 00250 2521 00	spri2	pr6|168
000225  aa   777600 3520 04	epp2 	-128,ic		000025 = 404000000043
000226  aa  6 00252 2521 00	spri2	pr6|170
000227  aa  6 00232 6211 00	eax1 	pr6|154
000230  aa   020000 4310 07	fld  	8192,dl
000231  aa  6 00044 3701 20	epp4 	pr6|36,*
000232  la  4 00022 3521 20	epp2 	pr4|18,*		expand_pathname_
000233  aa  0 00622 7001 00	tsx0 	pr0|402		call_ext_out_desc
						STATEMENT 1 ON LINE 70
	if code ^= 0
	then do;

000234  aa  6 00104 2361 00	ldq  	pr6|68		code
000235  aa   000034 6000 04	tze  	28,ic		000271
						STATEMENT 1 ON LINE 72
		call com_err_ (code, ME, "^a", argument);

000236  aa  6 00100 2361 00	ldq  	pr6|64		argument_lth
000237  aa   526000 2760 03	orq  	175104,du
000240  aa  6 00231 7561 00	stq  	pr6|153
000241  aa   136141 2350 03	lda  	48225,du
000242  aa  6 00230 7551 00	sta  	pr6|152
000243  aa  6 00104 3521 00	epp2 	pr6|68		code
000244  aa  6 00234 2521 00	spri2	pr6|156
000245  aa   777533 3520 04	epp2 	-165,ic		000000 = 143157156166
000246  aa  6 00236 2521 00	spri2	pr6|158
000247  aa  6 00230 3521 00	epp2 	pr6|152
000250  aa  6 00240 2521 00	spri2	pr6|160
000251  aa  6 00102 3521 20	epp2 	pr6|66,*		argument
000252  aa  6 00242 2521 00	spri2	pr6|162
000253  aa   777552 3520 04	epp2 	-150,ic		000025 = 404000000043
000254  aa  6 00244 2521 00	spri2	pr6|164
000255  aa   777547 3520 04	epp2 	-153,ic		000024 = 526000000040
000256  aa  6 00246 2521 00	spri2	pr6|166
000257  aa   777541 3520 04	epp2 	-159,ic		000020 = 524000000002
000260  aa  6 00250 2521 00	spri2	pr6|168
000261  aa  6 00231 3521 00	epp2 	pr6|153
000262  aa  6 00252 2521 00	spri2	pr6|170
000263  aa  6 00232 6211 00	eax1 	pr6|154
000264  aa   020000 4310 07	fld  	8192,dl
000265  aa  6 00044 3701 20	epp4 	pr6|36,*
000266  la  4 00010 3521 20	epp2 	pr4|8,*		com_err_
000267  aa  0 00622 7001 00	tsx0 	pr0|402		call_ext_out_desc
						STATEMENT 1 ON LINE 73
		return;

000270  aa  0 00631 7101 00	tra  	pr0|409		return
						STATEMENT 1 ON LINE 74
	     end;

						STATEMENT 1 ON LINE 76
	new_entryname = rtrim (substr (entryname, 1, 16)) || "." || unique_chars_ (""b);

000271  aa  6 00231 3521 00	epp2 	pr6|153
000272  aa  6 00220 2521 00	spri2	pr6|144
000273  aa  6 00210 3521 00	epp2 	pr6|136
000274  aa  6 00222 2521 00	spri2	pr6|146
000275  aa   777522 3520 04	epp2 	-174,ic		000017 = 514000000000
000276  aa  6 00224 2521 00	spri2	pr6|148
000277  aa   777530 3520 04	epp2 	-168,ic		000027 = 526000000017
000300  aa  6 00226 2521 00	spri2	pr6|150
000301  aa  6 00216 6211 00	eax1 	pr6|142
000302  aa   010000 4310 07	fld  	4096,dl
000303  aa  6 00044 3701 20	epp4 	pr6|36,*
000304  la  4 00026 3521 20	epp2 	pr4|22,*		unique_chars_
000305  aa  0 00622 7001 00	tsx0 	pr0|402		call_ext_out_desc
000306  aa  000 000 165 500	tctr 	(pr)
000307  aa  6 00157 00 0020	desc9a	pr6|111,16	entryname
000310  aa  0 76605 0001 00	arg  	pr0|-635		= 777777777777
000311  aa  6 00056 0001 00	arg  	pr6|46
000312  aa  6 00056 2361 00	ldq  	pr6|46
000313  aa  0 00242 3761 00	anq  	pr0|162		= 000777777777
000314  aa  6 00231 7561 00	stq  	pr6|153
000315  aa   000020 2360 07	ldq  	16,dl
000316  aa  6 00231 1761 00	sbq  	pr6|153
000317  aa  6 00231 7561 00	stq  	pr6|153
000320  aa   000001 0760 07	adq  	1,dl
000321  aa  0 00551 7001 00	tsx0 	pr0|361		alloc_cs
000322  aa  6 00231 2351 00	lda  	pr6|153
000323  aa  040 140 100 540	mlr  	(pr,rl),(pr,rl),fill(040)
000324  aa  6 00157 00 0005	desc9a	pr6|111,al	entryname
000325  aa  2 00000 00 0005	desc9a	pr2|0,al
000326  aa  040 105 100 404	mlr  	(ic),(pr,al),fill(040)
000327  aa   000410 00 0001	desc9a	264,1		000736 = 056000000000
000330  aa  2 00000 00 0001	desc9a	pr2|0,1
000331  aa  6 00231 7561 00	stq  	pr6|153
000332  aa   000017 0760 07	adq  	15,dl
000333  aa  6 00230 7561 00	stq  	pr6|152
000334  aa  0 00606 7001 00	tsx0 	pr0|390		cat_realloc_cs
000335  aa  6 00231 2351 00	lda  	pr6|153
000336  aa  040 105 100 500	mlr  	(pr),(pr,al),fill(040)
000337  aa  6 00210 00 0017	desc9a	pr6|136,15
000340  aa  2 00000 00 0017	desc9a	pr2|0,15
000341  aa  6 00230 2361 00	ldq  	pr6|152
000342  aa  040 100 100 540	mlr  	(pr,rl),(pr),fill(040)
000343  aa  2 00000 00 0006	desc9a	pr2|0,ql
000344  aa  6 00170 00 0040	desc9a	pr6|120,32	new_entryname
						STATEMENT 1 ON LINE 78
	call convert_v2_mstb_ (dirname, entryname, dirname, new_entryname, convert_v2_mstb_$default_convert_proc,
	     SAME_SIZE, code);

000345  aa  0 01014 7001 00	tsx0 	pr0|524		shorten_stack
000346  aa  6 00044 3701 20	epp4 	pr6|36,*
000347  la  4 00014 3521 20	epp2 	pr4|12,*		convert_v2_mstb_$default_convert_proc
000350  aa  6 00210 2521 00	spri2	pr6|136		cp.54
000351  aa   000363 2370 04	ldaq 	243,ic		000734 = 077777000043 000001000000
000352  aa  6 00212 7571 00	staq 	pr6|138		cp.54
000353  aa  6 00105 3521 00	epp2 	pr6|69		dirname
000354  aa  6 00256 2521 00	spri2	pr6|174
000355  aa  6 00157 3521 00	epp2 	pr6|111		entryname
000356  aa  6 00260 2521 00	spri2	pr6|176
000357  aa  6 00105 3521 00	epp2 	pr6|69		dirname
000360  aa  6 00262 2521 00	spri2	pr6|178
000361  aa  6 00170 3521 00	epp2 	pr6|120		new_entryname
000362  aa  6 00264 2521 00	spri2	pr6|180
000363  aa  6 00210 3521 00	epp2 	pr6|136		cp.54
000364  aa  6 00266 2521 00	spri2	pr6|182
000365  aa   777441 3520 04	epp2 	-223,ic		000026 = 000000000000
000366  aa  6 00270 2521 00	spri2	pr6|184
000367  aa  6 00104 3521 00	epp2 	pr6|68		code
000370  aa  6 00272 2521 00	spri2	pr6|186
000371  aa   777437 3520 04	epp2 	-225,ic		000030 = 526000000250
000372  aa  6 00274 2521 00	spri2	pr6|188
000373  aa  6 00300 2521 00	spri2	pr6|192
000374  aa   777430 3520 04	epp2 	-232,ic		000024 = 526000000040
000375  aa  6 00276 2521 00	spri2	pr6|190
000376  aa  6 00302 2521 00	spri2	pr6|194
000377  aa   777417 3520 04	epp2 	-241,ic		000016 = 500000000000
000400  aa  6 00304 2521 00	spri2	pr6|196
000401  aa   777414 3520 04	epp2 	-244,ic		000015 = 604000000022
000402  aa  6 00306 2521 00	spri2	pr6|198
000403  aa   777422 3520 04	epp2 	-238,ic		000025 = 404000000043
000404  aa  6 00310 2521 00	spri2	pr6|200
000405  aa  6 00254 6211 00	eax1 	pr6|172
000406  aa   034000 4310 07	fld  	14336,dl
000407  la  4 00012 3521 20	epp2 	pr4|10,*		convert_v2_mstb_
000410  aa  0 00622 7001 00	tsx0 	pr0|402		call_ext_out_desc
						STATEMENT 1 ON LINE 80
	if code ^= 0
	then do;

000411  aa  6 00104 2361 00	ldq  	pr6|68		code
000412  aa   000031 6000 04	tze  	25,ic		000443
						STATEMENT 1 ON LINE 82
		call com_err_ (code, ME, "Converting v2 MSTB.");

000413  aa   777423 2370 04	ldaq 	-237,ic		000036 = 103157156166 145162164151
000414  aa  6 00210 7571 00	staq 	pr6|136
000415  aa   777423 2370 04	ldaq 	-237,ic		000040 = 156147040166 062040115123
000416  aa  6 00212 7571 00	staq 	pr6|138
000417  aa   777423 2350 04	lda  	-237,ic		000042 = 124102056000
000420  aa  6 00214 7551 00	sta  	pr6|140
000421  aa  6 00104 3521 00	epp2 	pr6|68		code
000422  aa  6 00234 2521 00	spri2	pr6|156
000423  aa   777355 3520 04	epp2 	-275,ic		000000 = 143157156166
000424  aa  6 00236 2521 00	spri2	pr6|158
000425  aa  6 00210 3521 00	epp2 	pr6|136
000426  aa  6 00240 2521 00	spri2	pr6|160
000427  aa   777376 3520 04	epp2 	-258,ic		000025 = 404000000043
000430  aa  6 00242 2521 00	spri2	pr6|162
000431  aa   777373 3520 04	epp2 	-261,ic		000024 = 526000000040
000432  aa  6 00244 2521 00	spri2	pr6|164
000433  aa   777361 3520 04	epp2 	-271,ic		000014 = 524000000023
000434  aa  6 00246 2521 00	spri2	pr6|166
000435  aa  6 00232 6211 00	eax1 	pr6|154
000436  aa   014000 4310 07	fld  	6144,dl
000437  aa  6 00044 3701 20	epp4 	pr6|36,*
000440  la  4 00010 3521 20	epp2 	pr4|8,*		com_err_
000441  aa  0 00622 7001 00	tsx0 	pr0|402		call_ext_out_desc
						STATEMENT 1 ON LINE 83
		return;

000442  aa  0 00631 7101 00	tra  	pr0|409		return
						STATEMENT 1 ON LINE 84
	     end;

						STATEMENT 1 ON LINE 86
	old_newname = rtrim (substr (entryname, 1, 16)) || "." || unique_chars_ (""b);

000443  aa  6 00230 3521 00	epp2 	pr6|152
000444  aa  6 00220 2521 00	spri2	pr6|144
000445  aa  6 00210 3521 00	epp2 	pr6|136
000446  aa  6 00222 2521 00	spri2	pr6|146
000447  aa   777350 3520 04	epp2 	-280,ic		000017 = 514000000000
000450  aa  6 00224 2521 00	spri2	pr6|148
000451  aa   777356 3520 04	epp2 	-274,ic		000027 = 526000000017
000452  aa  6 00226 2521 00	spri2	pr6|150
000453  aa  6 00216 6211 00	eax1 	pr6|142
000454  aa   010000 4310 07	fld  	4096,dl
000455  aa  6 00044 3701 20	epp4 	pr6|36,*
000456  la  4 00026 3521 20	epp2 	pr4|22,*		unique_chars_
000457  aa  0 00622 7001 00	tsx0 	pr0|402		call_ext_out_desc
000460  aa  000 000 165 500	tctr 	(pr)
000461  aa  6 00157 00 0020	desc9a	pr6|111,16	entryname
000462  aa  0 76605 0001 00	arg  	pr0|-635		= 777777777777
000463  aa  6 00056 0001 00	arg  	pr6|46
000464  aa  6 00056 2361 00	ldq  	pr6|46
000465  aa  0 00242 3761 00	anq  	pr0|162		= 000777777777
000466  aa  6 00230 7561 00	stq  	pr6|152
000467  aa   000020 2360 07	ldq  	16,dl
000470  aa  6 00230 1761 00	sbq  	pr6|152
000471  aa  6 00230 7561 00	stq  	pr6|152
000472  aa   000001 0760 07	adq  	1,dl
000473  aa  0 00551 7001 00	tsx0 	pr0|361		alloc_cs
000474  aa  6 00230 2351 00	lda  	pr6|152
000475  aa  040 140 100 540	mlr  	(pr,rl),(pr,rl),fill(040)
000476  aa  6 00157 00 0005	desc9a	pr6|111,al	entryname
000477  aa  2 00000 00 0005	desc9a	pr2|0,al
000500  aa  040 105 100 404	mlr  	(ic),(pr,al),fill(040)
000501  aa   000236 00 0001	desc9a	158,1		000736 = 056000000000
000502  aa  2 00000 00 0001	desc9a	pr2|0,1
000503  aa  6 00230 7561 00	stq  	pr6|152
000504  aa   000017 0760 07	adq  	15,dl
000505  aa  6 00231 7561 00	stq  	pr6|153
000506  aa  0 00606 7001 00	tsx0 	pr0|390		cat_realloc_cs
000507  aa  6 00230 2351 00	lda  	pr6|152
000510  aa  040 105 100 500	mlr  	(pr),(pr,al),fill(040)
000511  aa  6 00210 00 0017	desc9a	pr6|136,15
000512  aa  2 00000 00 0017	desc9a	pr2|0,15
000513  aa  6 00231 2361 00	ldq  	pr6|153
000514  aa  040 100 100 540	mlr  	(pr,rl),(pr),fill(040)
000515  aa  2 00000 00 0006	desc9a	pr2|0,ql
000516  aa  6 00200 00 0040	desc9a	pr6|128,32	old_newname
						STATEMENT 1 ON LINE 90
	call hcs_$chname_file (dirname, entryname, "", old_newname, code);

000517  aa  0 01014 7001 00	tsx0 	pr0|524		shorten_stack
000520  aa  6 00105 3521 00	epp2 	pr6|69		dirname
000521  aa  6 00256 2521 00	spri2	pr6|174
000522  aa  6 00157 3521 00	epp2 	pr6|111		entryname
000523  aa  6 00260 2521 00	spri2	pr6|176
000524  aa  6 00231 3521 00	epp2 	pr6|153
000525  aa  6 00262 2521 00	spri2	pr6|178
000526  aa  6 00200 3521 00	epp2 	pr6|128		old_newname
000527  aa  6 00264 2521 00	spri2	pr6|180
000530  aa  6 00104 3521 00	epp2 	pr6|68		code
000531  aa  6 00266 2521 00	spri2	pr6|182
000532  aa   777276 3520 04	epp2 	-322,ic		000030 = 526000000250
000533  aa  6 00270 2521 00	spri2	pr6|184
000534  aa   777270 3520 04	epp2 	-328,ic		000024 = 526000000040
000535  aa  6 00272 2521 00	spri2	pr6|186
000536  aa  6 00276 2521 00	spri2	pr6|190
000537  aa   777254 3520 04	epp2 	-340,ic		000013 = 524000000000
000540  aa  6 00274 2521 00	spri2	pr6|188
000541  aa   777264 3520 04	epp2 	-332,ic		000025 = 404000000043
000542  aa  6 00300 2521 00	spri2	pr6|192
000543  aa  6 00254 6211 00	eax1 	pr6|172
000544  aa   024000 4310 07	fld  	10240,dl
000545  aa  6 00044 3701 20	epp4 	pr6|36,*
000546  la  4 00024 3521 20	epp2 	pr4|20,*		hcs_$chname_file
000547  aa  0 00622 7001 00	tsx0 	pr0|402		call_ext_out_desc
						STATEMENT 1 ON LINE 91
	if code ^= 0
	then do;

000550  aa  6 00104 2361 00	ldq  	pr6|68		code
000551  aa   000026 6000 04	tze  	22,ic		000577
						STATEMENT 1 ON LINE 93
		call com_err_ (code, ME, "Adding shriekname to old MSTB.");

000552  aa  000 100 100 404	mlr  	(ic),(pr),fill(000)
000553  aa   777300 00 0040	desc9a	-320,32		000052 = 101144144151
000554  aa  6 00216 00 0040	desc9a	pr6|142,32
000555  aa  6 00104 3521 00	epp2 	pr6|68		code
000556  aa  6 00234 2521 00	spri2	pr6|156
000557  aa   777221 3520 04	epp2 	-367,ic		000000 = 143157156166
000560  aa  6 00236 2521 00	spri2	pr6|158
000561  aa  6 00216 3521 00	epp2 	pr6|142
000562  aa  6 00240 2521 00	spri2	pr6|160
000563  aa   777242 3520 04	epp2 	-350,ic		000025 = 404000000043
000564  aa  6 00242 2521 00	spri2	pr6|162
000565  aa   777237 3520 04	epp2 	-353,ic		000024 = 526000000040
000566  aa  6 00244 2521 00	spri2	pr6|164
000567  aa   777223 3520 04	epp2 	-365,ic		000012 = 524000000036
000570  aa  6 00246 2521 00	spri2	pr6|166
000571  aa  6 00232 6211 00	eax1 	pr6|154
000572  aa   014000 4310 07	fld  	6144,dl
000573  aa  6 00044 3701 20	epp4 	pr6|36,*
000574  la  4 00010 3521 20	epp2 	pr4|8,*		com_err_
000575  aa  0 00622 7001 00	tsx0 	pr0|402		call_ext_out_desc
						STATEMENT 1 ON LINE 94
		return;

000576  aa  0 00631 7101 00	tra  	pr0|409		return
						STATEMENT 1 ON LINE 95
	     end;

						STATEMENT 1 ON LINE 99
	call hcs_$chname_file (dirname, entryname, entryname, "", code);

000577  aa  6 00105 3521 00	epp2 	pr6|69		dirname
000600  aa  6 00256 2521 00	spri2	pr6|174
000601  aa  6 00157 3521 00	epp2 	pr6|111		entryname
000602  aa  6 00260 2521 00	spri2	pr6|176
000603  aa  6 00262 2521 00	spri2	pr6|178
000604  aa  6 00231 3521 00	epp2 	pr6|153
000605  aa  6 00264 2521 00	spri2	pr6|180
000606  aa  6 00104 3521 00	epp2 	pr6|68		code
000607  aa  6 00266 2521 00	spri2	pr6|182
000610  aa   777220 3520 04	epp2 	-368,ic		000030 = 526000000250
000611  aa  6 00270 2521 00	spri2	pr6|184
000612  aa   777212 3520 04	epp2 	-374,ic		000024 = 526000000040
000613  aa  6 00272 2521 00	spri2	pr6|186
000614  aa  6 00274 2521 00	spri2	pr6|188
000615  aa   777176 3520 04	epp2 	-386,ic		000013 = 524000000000
000616  aa  6 00276 2521 00	spri2	pr6|190
000617  aa   777206 3520 04	epp2 	-378,ic		000025 = 404000000043
000620  aa  6 00300 2521 00	spri2	pr6|192
000621  aa  6 00254 6211 00	eax1 	pr6|172
000622  aa   024000 4310 07	fld  	10240,dl
000623  aa  6 00044 3701 20	epp4 	pr6|36,*
000624  la  4 00024 3521 20	epp2 	pr4|20,*		hcs_$chname_file
000625  aa  0 00622 7001 00	tsx0 	pr0|402		call_ext_out_desc
						STATEMENT 1 ON LINE 100
	if code ^= 0
	then do;

000626  aa  6 00104 2361 00	ldq  	pr6|68		code
000627  aa   000026 6000 04	tze  	22,ic		000655
						STATEMENT 1 ON LINE 102
		call com_err_ (code, ME, "Deleting name from old MSTB.");

000630  aa  000 100 100 404	mlr  	(ic),(pr),fill(000)
000631  aa   777213 00 0034	desc9a	-373,28		000043 = 104145154145
000632  aa  6 00216 00 0034	desc9a	pr6|142,28
000633  aa  6 00104 3521 00	epp2 	pr6|68		code
000634  aa  6 00234 2521 00	spri2	pr6|156
000635  aa   777143 3520 04	epp2 	-413,ic		000000 = 143157156166
000636  aa  6 00236 2521 00	spri2	pr6|158
000637  aa  6 00216 3521 00	epp2 	pr6|142
000640  aa  6 00240 2521 00	spri2	pr6|160
000641  aa   777164 3520 04	epp2 	-396,ic		000025 = 404000000043
000642  aa  6 00242 2521 00	spri2	pr6|162
000643  aa   777161 3520 04	epp2 	-399,ic		000024 = 526000000040
000644  aa  6 00244 2521 00	spri2	pr6|164
000645  aa   777144 3520 04	epp2 	-412,ic		000011 = 524000000034
000646  aa  6 00246 2521 00	spri2	pr6|166
000647  aa  6 00232 6211 00	eax1 	pr6|154
000650  aa   014000 4310 07	fld  	6144,dl
000651  aa  6 00044 3701 20	epp4 	pr6|36,*
000652  la  4 00010 3521 20	epp2 	pr4|8,*		com_err_
000653  aa  0 00622 7001 00	tsx0 	pr0|402		call_ext_out_desc
						STATEMENT 1 ON LINE 103
		return;

000654  aa  0 00631 7101 00	tra  	pr0|409		return
						STATEMENT 1 ON LINE 104
	     end;

						STATEMENT 1 ON LINE 108
	call hcs_$chname_file (dirname, new_entryname, new_entryname, entryname, code);

000655  aa  6 00105 3521 00	epp2 	pr6|69		dirname
000656  aa  6 00256 2521 00	spri2	pr6|174
000657  aa  6 00170 3521 00	epp2 	pr6|120		new_entryname
000660  aa  6 00260 2521 00	spri2	pr6|176
000661  aa  6 00262 2521 00	spri2	pr6|178
000662  aa  6 00157 3521 00	epp2 	pr6|111		entryname
000663  aa  6 00264 2521 00	spri2	pr6|180
000664  aa  6 00104 3521 00	epp2 	pr6|68		code
000665  aa  6 00266 2521 00	spri2	pr6|182
000666  aa   777142 3520 04	epp2 	-414,ic		000030 = 526000000250
000667  aa  6 00270 2521 00	spri2	pr6|184
000670  aa   777134 3520 04	epp2 	-420,ic		000024 = 526000000040
000671  aa  6 00272 2521 00	spri2	pr6|186
000672  aa  6 00274 2521 00	spri2	pr6|188
000673  aa  6 00276 2521 00	spri2	pr6|190
000674  aa   777131 3520 04	epp2 	-423,ic		000025 = 404000000043
000675  aa  6 00300 2521 00	spri2	pr6|192
000676  aa  6 00254 6211 00	eax1 	pr6|172
000677  aa   024000 4310 07	fld  	10240,dl
000700  aa  6 00044 3701 20	epp4 	pr6|36,*
000701  la  4 00024 3521 20	epp2 	pr4|20,*		hcs_$chname_file
000702  aa  0 00622 7001 00	tsx0 	pr0|402		call_ext_out_desc
						STATEMENT 1 ON LINE 109
	if code ^= 0
	then do;

000703  aa  6 00104 2361 00	ldq  	pr6|68		code
000704  aa   000026 6000 04	tze  	22,ic		000732
						STATEMENT 1 ON LINE 111
		call com_err_ (code, ME, "Renaming new MSTB.");

000705  aa  000 100 100 404	mlr  	(ic),(pr),fill(000)
000706  aa   777124 00 0024	desc9a	-428,20		000031 = 122145156141
000707  aa  6 00210 00 0024	desc9a	pr6|136,20
000710  aa  6 00104 3521 00	epp2 	pr6|68		code
000711  aa  6 00234 2521 00	spri2	pr6|156
000712  aa   777066 3520 04	epp2 	-458,ic		000000 = 143157156166
000713  aa  6 00236 2521 00	spri2	pr6|158
000714  aa  6 00210 3521 00	epp2 	pr6|136
000715  aa  6 00240 2521 00	spri2	pr6|160
000716  aa   777107 3520 04	epp2 	-441,ic		000025 = 404000000043
000717  aa  6 00242 2521 00	spri2	pr6|162
000720  aa   777104 3520 04	epp2 	-444,ic		000024 = 526000000040
000721  aa  6 00244 2521 00	spri2	pr6|164
000722  aa   777066 3520 04	epp2 	-458,ic		000010 = 524000000022
000723  aa  6 00246 2521 00	spri2	pr6|166
000724  aa  6 00232 6211 00	eax1 	pr6|154
000725  aa   014000 4310 07	fld  	6144,dl
000726  aa  6 00044 3701 20	epp4 	pr6|36,*
000727  la  4 00010 3521 20	epp2 	pr4|8,*		com_err_
000730  aa  0 00622 7001 00	tsx0 	pr0|402		call_ext_out_desc
						STATEMENT 1 ON LINE 112
		return;

000731  aa  0 00631 7101 00	tra  	pr0|409		return
						STATEMENT 1 ON LINE 113
	     end;

						STATEMENT 1 ON LINE 115
	return;

000732  aa  0 00631 7101 00	tra  	pr0|409		return
						STATEMENT 1 ON LINE 117
     end convert_MR10_2_urf;

  END PROCEDURE convert_MR10_2_urf


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
