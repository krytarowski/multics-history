ASSEMBLY LISTING OF SEGMENT >spec>h>3.17>time.alm                        
ASSEMBLED ON:	11/29/83  1536.1 mst Tue
OPTIONS USED:	list 
ASSEMBLED BY:	ALM Version  6.6  November 1982 
ASSEMBLER CREATED:	09/21/83  1227.3 mst Wed

                                     1  " ***********************************************************
                                     2  " *                                                         *
                                     3  " * Copyright, (C) Honeywell Information Systems Inc., 1982 *
                                     4  " *                                                         *
                                     5  " ***********************************************************
                                     6  " TIME - Calendar Clock Maintenance Routine.
                                     7  "	last modified 12/11/75 by N. I. Morris to set 4MW SCU.
                                     8  "	Modified 04/30/80 by Mike Grady to use rdclock package.
                                     9  
                                    10  
                                    11  "  ******************************************************
                                    12  "  *                                                    *
                                    13  "  *                                                    *
                                    14  "  * Copyright (c) 1972 by Massachusetts Institute of   *
                                    15  "  * Technology and Honeywell Information Systems, Inc. *
                                    16  "  *                                                    *
                                    17  "  *                                                    *
                                    18  "  ******************************************************
                                    19  
    000000                          20  	name	time
                                    21  
                                    22  
                                    23  	include	bosequ
                                   1-1  " Begin include file ...... bosequ.incl.alm
                                   1-2  " Modified 8/25/76 by N. I. Morris
                                   1-3  " Modified 8/79 by R.J.C. Kissel to expand BOS.
                                   1-4  " Modified November 1981 by C. Hornig to add pgmorg.
                                   1-5  " Modified October 1982 by J. Bongiovanni to take it out
                                   1-6  
                        000000     1-7  	bool	ds,0		descriptor segment
                        000001     1-8  	bool	tmp,1		temp seg
                        000002     1-9  	bool	bf,2		buffer segment for save/restor
                        000003    1-10  	bool	pgm,3		program in control
                        000004    1-11  	bool	xs1,4		spare segment
                        000005    1-12  	bool	xs2,5		spare segment
                        000005    1-13  	bool	fgb,5		flagbox segment
                        000006    1-14  	bool	com,6		common
                        000007    1-15  	bool	mem,7		all memory
                                  1-16  
                        000017    1-17  	equ	arglen,15		max number of args from scan
                                  1-18  
                        004000    1-19  	bool	runcom_bit,4000	runcom bit in dir entry
                        002000    1-20  	bool	firmware_bit,2000	firmware bit in dir entry
                                  1-21  
                        012000    1-22  	bool	utilorg,12000	origin of utility package
                                  1-23  
                                  1-24  " End of include file ...... bosequ.incl.alm
                                    24  
                                    25  " 
                                    26  
    000000  0a   000116 7420 00     27  	stx2	x2
                                    28  
    000001  aa   012300 7020 00     29  	tsx2	initint		Initialize utilities.
    000002  0a   000013 0000 00     30  	arg	execint
    000003  aa   012271 7020 00     31  	tsx2	init_io
    000004  aa   012245 7020 00     32  	tsx2	ttyinit
    000005  0a   000013 0000 00     33  	arg	ttyrequest
                                    34  
    000006  0a   000476 2350 00     35  	lda	=aclok		Find clock config card.
    000007  aa   012264 7020 00     36  	tsx2	getconf
    000010  0a   000251 7100 00     37  	tra	not_clok		None, this will not be permitted.
                                    38  
    000011  aa  6 00001 2361 17     39  	ldq	com|1,7
    000012  0a   000175 7560 00     40  	stq	tzone		Store offset from GMT.
                                    41  
    000013                          42  ttyrequest:
    000013                          43  execint:	null
    000013  aa   012247 7020 00     44  cycle:	tsx2	readtty		Here after req from tty.
    000014  0a   000113 7100 00     45  	tra	quit
    000015  aa   012200 7020 00     46  	tsx2	scan
                                    47  
    000016  aa   000001 3350 07     48  	lca	=1,dl
    000017  aa   012040 1150 00     49  	cmpa	arg		If no args,
    000020  0a   000013 6000 00     50  	tze	cycle		ignore.
    000021  aa   012041 1150 00     51  	cmpa	arg+1
    000022  0a   000044 6000 00     52  	tze	one		Handle one or two specially.
    000023  aa   012042 1150 00     53  	cmpa	arg+2
    000024  0a   000062 6000 00     54  	tze	two
                                    55  
                                    56  "				Otherwise must be a date/time like:
                                    57  "				  mm dd yy hh mm ss
    000025  aa   000006 6270 00     58  	eax7	6		Pick up date and time.
    000026  aa   012057 2350 17     59  gloop:	lda	darg-1,7		Use decimal numbers.
    000027  0a   000477 1150 00     60  	cmpa	=-1
    000030  0a   000032 6010 00     61  	tnz	*+2		If none specified, use 0.
    000031  aa   000000 2350 07     62  	lda	=0,dl
    000032  0a   000176 7550 17     63  	sta	month-1,7		Store in variables.
    000033  aa   777777 6270 17     64  	eax7	-1,7
    000034  0a   000026 6010 00     65  	tnz	gloop		Loop for 6 values, mm dd yy hh mm ss.
                                    66  
    000035  0a   000123 7020 00     67  	tsx2	datecl		Convert to a clock reading
                                    68  
    000036  0a   000120 2370 00     69  	ldaq	clockr		Shift to clock setting.
    000037  aa   000020 7730 00     70  	lrl	16
    000040  0a   000122 7560 00     71  	stq	clocks
                                    72  
    000041  0a   000206 7020 00     73  	tsx2	cldate		Convert back to be sure.
    000042  0a   000212 7020 00     74  	tsx2	print		And print it out.
    000043  0a   000013 7100 00     75  	tra	cycle		
                                    76  
                                    77  " 
                                    78  
    000044  aa   012040 2360 00     79  one:	ldq	arg		only 1 arg.
    000045  0a   000500 1160 00     80  	cmpq	=h     r		If r, read clock.
    000046  0a   000072 6000 00     81  	tze	read
    000047  0a   000501 1160 00     82  	cmpq	=h     s		If s, set clock.
    000050  0a   000103 6000 00     83  	tze	set
    000051  0a   000502 1160 00     84  	cmpq	=h     q		If q, quit.
    000052  0a   000113 6000 00     85  	tze	quit
                                    86  
    000053  0a   000122 7560 00     87  	stq	clocks		Octal clock value supplied (36 bits).
    000054  aa   000000 2350 07     88  	lda	=0,dl
    000055  aa   000020 7370 00     89  	lls	16
    000056  0a   000120 7570 00     90  	staq	clockr
                                    91  
    000057  0a   000206 7020 00     92  	tsx2	cldate		Convert to date,
    000060  0a   000212 7020 00     93  	tsx2	print		and print it out.
    000061  0a   000013 7100 00     94  	tra	cycle
                                    95  
    000062  aa   012040 2350 00     96  two:	lda	arg		72 bit clock value supplied.
    000063  aa   012041 2360 00     97  	ldq	arg+1
    000064  0a   000120 7570 00     98  	staq	clockr
    000065  aa   000020 7730 00     99  	lrl	16
    000066  0a   000122 7560 00    100  	stq	clocks
                                   101  
    000067  0a   000206 7020 00    102  	tsx2	cldate		Convert it to a date,
    000070  0a   000212 7020 00    103  	tsx2	print		and print it out.
    000071  0a   000013 7100 00    104  	tra	cycle
                                   105  
                                   106  "
    000072  aa   000040 4130 00    107  read:	rscr	4*8		Read clock from low-order memory.
    000073  aa   000000 7730 00    108  	lrl	0		RSCR doesn't set indicators.
    000074  0a   000241 6000 00    109  	tze	clockflt
                                   110  
    000075  0a   000120 7570 00    111  	staq	clockr		Convert to clock setting.
    000076  aa   000020 7730 00    112  	lrl	16
    000077  0a   000122 7560 00    113  	stq	clocks
                                   114  
    000100  0a   000206 7020 00    115  	tsx2	cldate		Convert to date,
    000101  0a   000212 7020 00    116  	tsx2	print		and print it.
    000102  0a   000013 7100 00    117  	tra	cycle
                                   118  
                                   119  
    000103  aa   000000 4130 00    120  set:	rscr	0*8		Read SCU mode register.
    000104  aa   000022 7720 00    121  	qrl	18		Shift type code into ql.
    000105  aa   000017 3760 07    122  	anq	=o17,dl		Mask out all but type bits.
    000106  aa   000002 1160 07    123  	cmpq	2,dl		Is it 4-MW SCU?
    000107  0a   000264 6040 00    124  	tmi	not_4mw		No, can't set clock in this SCU.
                                   125  
    000110  0a   000120 2370 00    126  	ldaq	clockr		Get clock reading in AQ.
    000111  aa   000040 0570 00    127  	sscr	4*8		Set the clock.
    000112  0a   000013 7100 00    128  	tra	cycle
                                   129  
                                   130  
    000113  aa  6 02003 2341 00    131  quit:	szn	com|corearea	If entered from bos, return.
    000114  0a   000013 6000 00    132  	tze	cycle
    000115  aa   000001 3350 07    133  	lca	=1,dl
    000116  0a   000116 6220 00    134  x2:	eax2	*
    000117  aa  7 00001 7101 12    135  	tra	mem|1,2
                                   136  
                                   137  	even
    000120  aa   000000 000000     138  clockr:	oct	0,0		clock reading
    000121  aa   000000 000000 
    000122  aa   000000 000000     139  clocks:	oct	0
                                   140  
                                   141  " 
                                   142  
    000123  0a   000201 2360 00    143  datecl:	ldq	year		Subroutine to convert date to clockvalue.
    000124  aa   000001 1760 07    144  	sbq	=1,dl
    000125  aa   000003 3760 07    145  	anq	=o3,dl		Get days within leap year cycle.
    000126  aa   000555 4020 07    146  	mpy	=365,dl
    000127  0a   000177 7270 00    147  	lxl7	month
    000130  0a   000160 0760 17    148  	adq	montable-1,7
    000131  0a   000200 0760 00    149  	adq	days
    000132  aa   000001 1760 07    150  	sbq	=1,dl		now have days within leap year cycle
                                   151  
    000133  0a   000201 2350 00    152  	lda	year
    000134  aa   000003 3150 07    153  	cana	=o3,dl		if leapyear after feb 29
    000135  0a   000141 6010 00    154  	tnz	*+4
    000136  aa   000003 1070 03    155  	cmpx7	=3,du
    000137  0a   000141 6040 00    156  	tmi	*+2
    000140  aa   000001 0760 07    157  	adq	=1,dl
    000141  0a   000120 7560 00    158  	stq	clockr
                                   159  
    000142  0a   000201 2360 00    160  	ldq	year		get days before leap year cycle
    000143  aa   000001 1760 07    161  	sbq	=1,dl
    000144  aa   000002 7720 00    162  	qrl	2
    000145  aa   002665 4020 07    163  	mpy	=1461,dl		days in 4 years
    000146  0a   000120 0760 00    164  	adq	clockr
    000147  aa   000030 4020 07    165  	mpy	=24,dl		go to hr, min,sec
    000150  0a   000202 0760 00    166  	adq	hr
    000151  0a   000175 0760 00    167  	adq	tzone
    000152  aa   000074 4020 07    168  	mpy	=60,dl
    000153  0a   000203 0760 00    169  	adq	min
    000154  aa   000074 4020 07    170  	mpy	=60,dl
    000155  0a   000204 0760 00    171  	adq	sec
    000156  0a   000503 4020 00    172  	mpy	=1000000		go to usec
    000157  0a   000120 7570 00    173  	staq	clockr
    000160  aa   000000 7100 12    174  	tra	0,2
                                   175  
    000161  aa   000000 000000     176  montable:	dec	0,31,59,90,120,151
    000162  aa   000000 000037 
    000163  aa   000000 000073 
    000164  aa   000000 000132 
    000165  aa   000000 000170 
    000166  aa   000000 000227 
    000167  aa   000000 000265     177  	dec	181,212,243,273,304,334
    000170  aa   000000 000324 
    000171  aa   000000 000363 
    000172  aa   000000 000421 
    000173  aa   000000 000460 
    000174  aa   000000 000516 
                                   178  
    000175  aa   000000 000005     179  tzone:	dec	5
    000176  aa   000000 000000     180  clloc:	oct	0
    000177  aa   000000 000000     181  month:	oct	0
    000200  aa   000000 000000     182  days:	oct	0
    000201  aa   000000 000000     183  year:	oct	0
    000202  aa   000000 000000     184  hr:	oct	0
    000203  aa   000000 000000     185  min:	oct	0
    000204  aa   000000 000000     186  sec:	oct	0
    000205  aa   000000 000000     187  temp:	oct	0
                                   188  
                                   189  " 
                                   190  
    000206  0a   000211 7420 00    191  cldate:	stx2	clret		Save return addr.
    000207  0a   000120 2370 00    192  	ldaq	clockr		Get clock value to be converted.
    000210  0a   000301 7020 00    193  	tsx2	cv_clock		Use rdclock pkg to convert it.
    000211  0a   000211 7100 00    194  clret:	tra	*
                                   195  
                                   196  
                                   197  
                                   198  
    000212  0a   000240 7420 00    199  print:	stx2	pret
    000213  aa   012241 7020 00    200  	tsx2	erpt		Print line with clock reading, setting, and date.
    000214  aa  041 136 157 054    201  	acc	'^o,^w ^w ^a, ^d ^a ^d ^d:^d:^d ^a'
    000215  aa  136 167 040 136
    000216  aa  167 040 136 141
    000217  aa  054 040 136 144
    000220  aa  040 136 141 040
    000221  aa  136 144 040 136
    000222  aa  144 072 136 144
    000223  aa  072 136 144 040
    000224  aa  136 141 000 000
    000225  0a   000120 0000 00    202  	arg	clockr
    000226  0a   000121 0000 00    203  	arg	clockr+1
    000227  0a   000122 0000 00    204  	arg	clocks
    000230  0a   000423 0000 00    205  	arg	rdclock.day_name
    000231  0a   000421 0000 00    206  	arg	rdclock.day_of_month
    000232  0a   000420 0000 00    207  	arg	rdclock.month_name
    000233  0a   000424 0000 00    208  	arg	rdclock.year
    000234  0a   000414 0000 00    209  	arg	rdclock.hr
    000235  0a   000415 0000 00    210  	arg	rdclock.min
    000236  0a   000416 0000 00    211  	arg	rdclock.sec
    000237  0a   000427 0000 00    212  	arg	rdclock.zone_name
    000240  0a   000240 7100 00    213  pret:	tra	*
                                   214  
                                   215  
                                   216  " 
                                   217  
    000241  aa   012241 7020 00    218  clockflt:	tsx2	erpt
    000242  aa  024 145 162 162    219  	acc	'error reading clock.'
    000243  aa  157 162 040 162
    000244  aa  145 141 144 151
    000245  aa  156 147 040 143
    000246  aa  154 157 143 153
    000247  aa  056 000 000 000
    000250  0a   000013 7100 00    220  	tra	cycle
                                   221  
    000251                         222  not_clok:
    000251  aa   012241 7020 00    223  	tsx2	erpt
    000252  aa  043 143 154 157    224  	acc	'clok card not found in config deck.'
    000253  aa  153 040 143 141
    000254  aa  162 144 040 156
    000255  aa  157 164 040 146
    000256  aa  157 165 156 144
    000257  aa  040 151 156 040
    000260  aa  143 157 156 146
    000261  aa  151 147 040 144
    000262  aa  145 143 153 056
    000263  0a   000113 7100 00    225  	tra	quit
                                   226  
                                   227  
    000264  aa   012241 7020 00    228  not_4mw:	tsx2	erpt
    000265  aa  047 165 156 141    229  	acc	'unable to set clock in a 6000-type scu.'
    000266  aa  142 154 145 040
    000267  aa  164 157 040 163
    000270  aa  145 164 040 143
    000271  aa  154 157 143 153
    000272  aa  040 151 156 040
    000273  aa  141 040 066 060
    000274  aa  060 060 055 164
    000275  aa  171 160 145 040
    000276  aa  163 143 165 056
    000277  0a   000013 7100 00    230  	tra	cycle
                                   231  
                                   232  	include	rdclock
                                   2-1  " 
                                   2-2  " Begin include file ...... rdclock.incl.alm
                                   2-3  " last modified 7/20/76 by Noel I. Morris
                                   2-4  " last modified 7/10/78 by Bernard S. Greenberg for externally gettable vars
                                   2-5  "  and calculating every parameter imaginable.
                                   2-6  " last modified 5/05/80 by Mike Grady to calculate a few more imaginable
                                   2-7  "  variables, and to fix a bug in leap years.
                                   2-8  "
                                   2-9  "	tsx2	rd_clock
                                  2-10  "	staq	MM/DD HH:MM
                                  2-11  
                                  2-12  "	ldaq	clocktime
                                  2-13  "	tsx2	cv_clock
                                  2-14  "	staq	MM/DD HH:MM
                                  2-15  
    000300  aa   000040 4130 00   2-16  rd_clock:	rscr	4*8			read the clock
                                  2-17  
    000301  0a   000432 7570 00   2-18  cv_clock:	staq	rdctime			save clock reading
    000302  0a   000403 7420 00   2-19  	stx2	datx2			save XR's
    000303  0a   000404 7400 00   2-20  	stx0	datx2+1			..
                                  2-21  
    000304  aa   000034 2350 07   2-22  	lda	28,dl			Initialize montab
    000305  0a   000435 7550 00   2-23  	sta	montab+1			to prime Feb
                                  2-24  
    000306  0a   000476 2350 00   2-25  	lda	=aclok			find clock config card 
    000307  aa   012264 7020 00   2-26  	tsx2	getconf
    000310  0a   000315 7100 00   2-27  	tra	no_clok_card		Use default
    000311  aa  6 00001 2361 17   2-28  	ldq	com|1,7
    000312  0a   000426 7560 00   2-29  	stq	rdclock.zone_temp		Delta hours
    000313  aa  6 00002 2361 17   2-30  	ldq	com|2,7
    000314  0a   000427 7560 00   2-31  	stq	rdclock.zone_name		Name of zone
                                  2-32  
    000315                        2-33  no_clok_card:
    000315  0a   000432 2370 00   2-34  	ldaq	rdctime			Get clock reading
    000316  aa   000001 7370 00   2-35  	lls	1			Set for dvf
    000317  0a   000503 5070 00   2-36  	dvf	=1000000			Get seconds since 1900.
    000320  aa   000044 7770 00   2-37  	llr	36			Into Q.
    000321  aa   000074 5060 07   2-38  	div	60,dl			Seconds since min to A, mins to Q.
    000322  0a   000416 7550 00   2-39  	sta	rdclock.sec		Save for inspection.
    000323  aa   000074 5060 07   2-40  	div	60,dl			Min since hr to A, hrs to Q.
    000324  0a   000415 7550 00   2-41  	sta	rdclock.min
                                  2-42  "
                                  2-43  "	Set up X7 for field filling.
                                  2-44  "
    000325  aa   000006 6270 00   2-45  	eax7	6
    000326  0a   000406 7020 00   2-46  	tsx2	datecv			Convert the minutes.
    000327  0a   000426 1760 00   2-47  	sbq	rdclock.zone_temp		Adjust for GMT.
    000330  aa   000030 5060 07   2-48  	div	24,dl			Days since 1900 in q.
    000331  0a   000425 7560 00   2-49  	stq	rdclock.day_of_century	save for  later.
    000332  0a   000414 7550 00   2-50  	sta	rdclock.hr		Hours since daybreak.
    000333  0a   000406 7020 00   2-51  	tsx2	datecv			Convert the hours
                                  2-52  
    000334  aa   002665 5060 07   2-53  	div	365*4+1,dl		get leap year cycle
    000335  aa   002110 1150 07   2-54  	cmpa	365*3+1,dl		if in last year of cycle (the leap year)
    000336  0a   000340 6040 00   2-55  	tmi	*+2			no
    000337  0a   000435 0540 00   2-56  	aos	montab+1			allow for feb 29
                                  2-57  
    000340  aa   000002 7360 00   2-58  	qls	2			4*# leap year cycles
    000341  aa   003555 0360 07   2-59  	adlq	1901,dl
    000342  0a   000424 7560 00   2-60  	stq	rdclock.year		Save
                                  2-61  
    000343  aa   000044 7770 00   2-62  	llr	36
    000344  aa   000555 5060 07   2-63  	div	365,dl			Years complete since l.y.c. =>Q
                                  2-64  "					Days since that year end => A
                                  2-65  
    000345  aa   000004 1160 07   2-66  	cmpq	4,dl			Dec 31st of leap year?
    000346  0a   000351 6010 00   2-67  	tnz	*+3			No.
    000347  aa   000001 1760 07   2-68  	sbq	1,dl			Adjust year and
    000350  aa   000555 2350 07   2-69  	lda	365,dl			day numbers.
                                  2-70  
    000351  0a   000424 0560 00   2-71  	asq	rdclock.year		Add in years complete.
    000352  aa   000000 6260 00   2-72  	eax6	0			search for correct month
    000353  aa   030220 5202 01   2-73  	rpt	12,1,tmi			..
    000354  0a   000434 1750 16   2-74  	sba	montab,6			subtract off days for each month
    000355  aa   777777 0750 16   2-75  	ada	-1,6			put back last entry
    000356  aa   000001 0750 07   2-76  	ada	1,dl			plus one more
    000357  0a   000421 7550 00   2-77  	sta	rdclock.day_of_month	Day of month
    000360  0a   000406 7020 00   2-78  	tsx2	datecv			convert day
                                  2-79  
    000361  aa   000000 6350 16   2-80  	eaa	0,6
    000362  0a   000434 1350 03   2-81  	sbla	montab,du			get index into month table
    000363  aa   000022 7710 00   2-82  	arl	18			..
    000364  0a   000417 7550 00   2-83  	sta	rdclock.month		Save month number
    000365  0a   000461 2360 05   2-84  	ldq	rdc.months-1,al		Get name of month.
    000366  0a   000420 7560 00   2-85  	stq	rdclock.month_name
    000367  0a   000406 7020 00   2-86  	tsx2	datecv			convert month
                                  2-87  
    000370  aa   000000 0244 00   2-88  	mvne	(),(),()			edit the date and time
    000371  0a   000431 070010    2-89  	desc4ns	date,8
    000372  0a   000450 000014    2-90  	desc9a	datedit,12
    000373  0a   000432 020014    2-91  	desc6a	rdctime,12
                                  2-92  
    000374  0a   000425 2360 00   2-93  	ldq	rdclock.day_of_century
    000375  aa   000002 0760 07   2-94  	adq	2,dl			Bump Tuesday into place.
    000376  aa   000007 5060 07   2-95  	div	7,dl
    000377  0a   000422 7550 00   2-96  	sta	rdclock.day_of_week
    000400  0a   000453 2360 05   2-97  	ldq	rdc.days,al		Get name of day.
    000401  0a   000423 7560 00   2-98  	stq	rdclock.day_name
                                  2-99  
    000402  0a   000432 2370 00  2-100  	ldaq	rdctime			get conversion in AQ
    000403  0a   000403 6220 00  2-101  datx2:	eax2	*			restore XR's
    000404  0a   000404 6200 00  2-102  	eax0	*			..
    000405  aa   000000 7100 12  2-103  	tra	0,2			return to caller
                                 2-104  
                                 2-105  
    000406  0a   000430 7550 00  2-106  datecv:	sta	datenum			save number
                                 2-107  
    000407  aa   000017 3014 00  2-108  	btd	(),(x7)			convert into proper place
    000410  0a   000430 000004   2-109  	desc9a	datenum,4
    000411  0a   000431 070002   2-110  	desc4ns	date,2
                                 2-111  
    000412  aa   777776 6270 17  2-112  	eax7	-2,7			move offset index
    000413  aa   000000 7100 12  2-113  	tra	0,2			and return
                                 2-114  
                                 2-115  "
                                 2-116  " Usefull outside visible variables rdclock.xxxxx
                                 2-117  
    000414                       2-118  rdclock.hr:
    000414                       2-119  	bss	,1
    000415                       2-120  rdclock.min:
    000415                       2-121  	bss	,1
    000416                       2-122  rdclock.sec:
    000416                       2-123  	bss	,1
    000417                       2-124  rdclock.month:
    000417                       2-125  	bss	,1
    000420                       2-126  rdclock.month_name:
    000420                       2-127  	bss	,1
    000421                       2-128  rdclock.day_of_month:
    000421                       2-129  	bss	,1
    000422                       2-130  rdclock.day_of_week:
    000422                       2-131  	bss	,1
    000423                       2-132  rdclock.day_name:
    000423                       2-133  	bss	,1
    000424                       2-134  rdclock.year:
    000424                       2-135  	bss	,1
    000425                       2-136  rdclock.day_of_century:
    000425                       2-137  	bss	,1
    000426                       2-138  rdclock.zone_temp:
    000426  aa   000000 000005   2-139  	dec	5
    000427                       2-140  rdclock.zone_name:
    000427  aa  145 163 164 040  2-141  	aci	'est '
                                 2-142  
    000430                       2-143  datenum:	bss	,1
    000431                       2-144  date:	bss	,1
                                 2-145  
                                 2-146  	even
    000432                       2-147  rdctime:	bss	,2
                                 2-148  
    000434  aa   000000 000037   2-149  montab:	dec	31,28,31,30,31,30,31,31,30,31,30,31
    000435  aa   000000 000034 
    000436  aa   000000 000037 
    000437  aa   000000 000036 
    000440  aa   000000 000037 
    000441  aa   000000 000036 
    000442  aa   000000 000037 
    000443  aa   000000 000037 
    000444  aa   000000 000036 
    000445  aa   000000 000037 
    000446  aa   000000 000036 
    000447  aa   000000 000037 
                                 2-150  
    000450  aa   401020 102260   2-151  datedit:	vfd	9/lte+1,o9/20,9/mvzb+2,9/insp,o9/61,9/mvc+2,9/insm+1,9/mvc+2
    000451  aa   061322 021322 
    000452  aa   260015 322021   2-152  	vfd	9/insp,o9/15,9/mvc+2,9/insm+1
                                 2-153  
    000453  aa  163 165 156 040  2-154  rdc.days: aci	'sun mon tue wed thurfri sat '
    000454  aa  155 157 156 040
    000455  aa  164 165 145 040
    000456  aa  167 145 144 040
    000457  aa  164 150 165 162
    000460  aa  146 162 151 040
    000461  aa  163 141 164 040
                                 2-155  
    000462                       2-156  rdc.months: 
    000462  aa  152 141 156 040  2-157  	aci	'jan feb mar apr may jun jul aug septoct nov dec '
    000463  aa  146 145 142 040
    000464  aa  155 141 162 040
    000465  aa  141 160 162 040
    000466  aa  155 141 171 040
    000467  aa  152 165 156 040
    000470  aa  152 165 154 040
    000471  aa  141 165 147 040
    000472  aa  163 145 160 164
    000473  aa  157 143 164 040
    000474  aa  156 157 166 040
    000475  aa  144 145 143 040
                                 2-158  
                                 2-159  " End of include file ...... rdclock.incl.alm
                                 2-160  
                                   233  	include	eis_micro_ops
                        000020     3-1  	bool	insm,020
                        000040     3-2  	bool	enf,040
                        000060     3-3  	bool	ses,060
                        000100     3-4  	bool	mvzb,100
                        000120     3-5  	bool	mvza,120
                        000140     3-6  	bool	mfls,140
                        000160     3-7  	bool	mflc,160
                        000200     3-8  	bool	insb,200
                        000220     3-9  	bool	insa,220
                        000240    3-10  	bool	insn,240
                        000260    3-11  	bool	insp,260
                        000300    3-12  	bool	ign,300
                        000320    3-13  	bool	mvc,320
                        000340    3-14  	bool	mses,340
                        000360    3-15  	bool	mors,360
                        000400    3-16  	bool	lte,400
                        000420    3-17  	bool	cht,420
                                  3-18  "
                        000010    3-19  	bool	if0,10
                        000004    3-20  	bool	if1,4
                        000002    3-21  	bool	if2,2
                        000001    3-22  	bool	if3,1
                                   234  	include	bos_tv
                                   4-1  " 
                                   4-2  " Begin include file ...... bos_tv.incl.alm
                                   4-3  " Created in November 1971 by N. I. Morris.
                                   4-4  " Modified 9/9/76 by Noel I. Morris
                                   4-5  " Modified by Sherman D. Sprague 02/11/81 for DPS8 support.
                                   4-6  " Modified November 1981 by C. Hornig to remove iom_connect_rel.
                                   4-7  " Modified January 1982 by J. Bongiovanni to add getport_info
                                   4-8  " Modified May 1982 by Sherman D. Sprague to add getmpc.
                                   4-9  
                                  4-10  " BOS Utility Package Transfer Vector.
                                  4-11  
                        012000    4-12  	equ	pagectl,utilorg
                        012001    4-13  	equ	line,pagectl+1
                        012040    4-14  	equ	arg,line+31
                        012060    4-15  	equ	darg,arg+arglen+1
                        012100    4-16  	equ	earg,darg+arglen+1
                        012120    4-17  	equ	fltscu,earg+arglen+1
                                  4-18  
                        012200    4-19  	equ	tv_org,utilorg+128
                                  4-20  
                        012200    4-21  	equ	scan,tv_org+0
                        012201    4-22  	equ	arg_count,tv_org+1
                        012202    4-23  	equ	nextline,tv_org+2
                        012203    4-24  	equ	nlraw,tv_org+3
                        012204    4-25  	equ	search,tv_org+4
                        012205    4-26  	equ	makefil,tv_org+5
                        012206    4-27  	equ	ldcom,tv_org+6
                        012207    4-28  	equ	getsec,tv_org+7
                        012210    4-29  	equ	cvinit,tv_org+8
                        012211    4-30  	equ	rdev,tv_org+9
                        012212    4-31  	equ	wdev,tv_org+10
                        012213    4-32  	equ	phybos,tv_org+11
                        012214    4-33  	equ	bosphy,tv_org+12
                        012215    4-34  	equ	phyadd,tv_org+13
                        012216    4-35  	equ	mulbos,tv_org+14
                        012217    4-36  	equ	bosmul,tv_org+15
                        012220    4-37  	equ	lookup_devmodel,tv_org+16
                        012221    4-38  	equ	makesdw,tv_org+17
                        012222    4-39  	equ	argbos,tv_org+18
                        012223    4-40  	equ	argmul,tv_org+19
                        012224    4-41  	equ	amdvt,tv_org+20
                        012225    4-42  	equ	amfirst,tv_org+21
                        012226    4-43  	equ	amlast,tv_org+22
                        012227    4-44  	equ	cvnamla,tv_org+23
                        012230    4-45  	equ	sect_per_cyl_list,tv_org+24
                        012231    4-46  	equ	sect_per_dev_list,tv_org+25
                        012232    4-47  	equ	rec_per_dev_list,tv_org+26
                        012233    4-48  	equ	amaxio,tv_org+27
                        012234    4-49  	equ	rdsec,tv_org+28
                        012235    4-50  	equ	wtsec,tv_org+29
                        012236    4-51  	equ	disk_brief,tv_org+30
                        012237    4-52  	equ	itaper,tv_org+31
                        012240    4-53  	equ	itapew,tv_org+32
                        012241    4-54  	equ	erpt,tv_org+33
                        012242    4-55  	equ	ercv,tv_org+34
                        012243    4-56  	equ	erbuf,tv_org+35
                        012244    4-57  	equ	type,tv_org+36
                        012245    4-58  	equ	ttyinit,tv_org+37
                        012246    4-59  	equ	readcd,tv_org+38
                        012247    4-60  	equ	readtty,tv_org+39
                        012250    4-61  	equ	getprt,tv_org+40
                        012251    4-62  	equ	punch,tv_org+41
                        012252    4-63  	equ	octwd,tv_org+42
                        012253    4-64  	equ	geas,tv_org+43
                        012254    4-65  	equ	geastab,tv_org+44
                        012255    4-66  	equ	asge,tv_org+45
                        012256    4-67  	equ	asgetab,tv_org+46
                        012257    4-68  	equ	ljust,tv_org+47
                        012260    4-69  	equ	rjust,tv_org+48
                        012261    4-70  	equ	bzel,tv_org+49
                        012262    4-71  	equ	stripa,tv_org+50
                        012263    4-72  	equ	stripg,tv_org+51
                        012264    4-73  	equ	getconf,tv_org+52
                        012265    4-74  	equ	getmore,tv_org+53
                        012266    4-75  	equ	getperiph,tv_org+54
                        012267    4-76  	equ	rdclock,tv_org+55
                        012270    4-77  	equ	cvclock,tv_org+56
                        012271    4-78  	equ	init_io,tv_org+57
                        012272    4-79  	equ	connect_iom,tv_org+58
                        012273    4-80  	equ	getmpc,tv_org+59
                        012274    4-81  	equ	check_status,tv_org+60
                        012275    4-82  	equ	get_special_interrupt,tv_org+61
                        012276    4-83  	equ	get_status_interrupt,tv_org+62
                        012277    4-84  	equ	xio_wait,tv_org+63
                        012300    4-85  	equ	initint,tv_org+64
                        012301    4-86  	equ	wantflt,tv_org+65
                        012302    4-87  	equ	intno,tv_org+66
                        012303    4-88  	equ	intrpts1,tv_org+67
                        012304    4-89  	equ	hexwd,tv_org+68
                        012305    4-90  	equ	find_disk,tv_org+69
                        012306    4-91  	equ	find_root,tv_org+70
                        012307    4-92  	equ	find_part,tv_org+71
                        012310    4-93  	equ	check_status_no_stat,tv_org+72
                        012311    4-94  	equ	check_special_status,tv_org+73
                        012312    4-95  	equ	check_cpu_type,tv_org+74
                        012313    4-96  	equ	getportinfo,tv_org+75
                                  4-97  
                                  4-98  " End of include file ...... bos_tv.incl.alm
                                  4-99  
                                   235  	include	bos_common
                                   5-1  "
                                   5-2  " Begin include file ...... bos_common.incl.alm
                                   5-3  " Modified on 8/31/76 by N. I. Morris
                                   5-4  " Modified on 9/01/80 by Sherman D. Sprague for DPS8 operation
                                   5-5  " Modified on 5/26/82 by Sherman D. Sprague to lengthen config size
                                   5-6  " Modified on 3/01/83 by Sherman D. Sprague to lengthen dirlen
                                   5-7  "	MACHINE CONDITIONS AREA
                                   5-8  "		Its length is "storlen".
                                   5-9  
                        000000    5-10  	equ	amptwregs,0	Ass. Mem  PTW registers
                        000100    5-11  	equ	amptwptr,64	Ass. Mem  PTW pointers
                        000200    5-12  	equ	amsdwregs,128	Ass. Mem  SDW registers
                        000400    5-13  	equ	amsdwptr,256	Ass. Mem  SDW pointers
                        000500    5-14  	equ	ouhist,320	operations hist regs
                        000700    5-15  	equ	cuhist,448	control unit hist regs
                        001100    5-16  	equ	eishist,576	eis hist regs
                        001300    5-17  	equ	aphist,704	appending unit hist regs
                        001500    5-18  	equ	prs,832		pointer regs
                        001520    5-19  	equ	regs,848		sreg
                        001530    5-20  	equ	low_order_port,856	port to read clock from
                        001532    5-21  	equ	mctime,858	bootload memory clock
                        001540    5-22  	equ	scu,864
                        001550    5-23  	equ	mcm,872		memory masks 8 ports 
                        001570    5-24  	equ	dbr,888
                        001572    5-25  	equ	intrpts,890	waiting interrupts
                        001573    5-26  	equ	bar,891		bar
                        001574    5-27  	equ	modereg,892	processor & cache mode registers
                        001576    5-28  	equ	faultreg,894	processor fault register
                        001600    5-29  	equ	ptrlen,896	pointer-lengths EIS 0 mod 8
                        001610    5-30  	equ	coreblocks,904	array of port information
                                  5-31  "				Bits  0-17 => num 1st 64-word block
                                  5-32  "				Bits 18-35 => num of 64-word blocks
                                  5-33  "				(-1) => no mem on this port
                        001620    5-34  	equ	lowport_cfg,912	Saved CFG from bootload SCU
                                  5-35  
                        002000    5-36  	equ	storlen,1024
                                  5-37  
                                  5-38  
                                  5-39  
                                  5-40  "	BOS COMMAND DIRECTORY
                                  5-41  "		Its length is "dirlen".
                                  5-42  
                        002000    5-43  	equ	dir,1024		( 0-23) => sector # of first sector on BOS disk
                                  5-44  "				(24-35) => # of sectors in BOS common
                        002001    5-45  	equ	used,dir+1	( 0-23) => # of next available sector on BOS disk
                        002002    5-46  	equ	useable,dir+2	( 0-23) => first unavailable sector on BOS disk
                        002003    5-47  	equ	corearea,dir+3	( 0-23) => starting sector of Multics core image
                                  5-48  "				(24-35) => # of sectors in Multics core image
                        002004    5-49  	equ	setuparea,dir+4	Sector and length of setup
                        002005    5-50  	equ	utilarea,dir+5	where utility package is kept
                        002010    5-51  	equ	iom_mxbase,dir+8	IOM IMW area address
                        002011    5-52  	equ	iom_mbbase,dir+9	IOM mailbox base
                        002012    5-53  	equ	bos_dvt,dir+10	BOS disk loc: (o3/iom,o6/chn,o9/drive,o18/devtype)
                        002013    5-54  	equ	unitgroup,dir+11	disk unitgroup (device no. or area no.)
                        002014    5-55  	equ	diskchanno,dir+12	channel to be used for disk
                        002015    5-56  	equ	tapechanno,dir+13	channel # for tapes
                        002016    5-57  	equ	rdrchanno,dir+14	channel number for card reader
                        002017    5-58  	equ	ttychanno,dir+15	channel # for operator's tty
                        002020    5-59  	equ	quietsw,dir+16	if on, don't print card and macro commands
                        002021    5-60  	equ	inputsw,dir+17	read from tty, cards, macros
                        002022    5-61  	equ	macroloc,dir+18	disk addr, buffer index of macro file
                        002023    5-62  	equ	fdump_state,dir+19	completion flag for last FDUMP
                        002024    5-63  	equ	d355_state,dir+20	= 1 if DataNet 355 loaded successfully
                        002025    5-64  	equ	skipsw,dir+21	if on, skip runcom lines
                        002026    5-65  	equ	ttypmtsw,dir+22	if on, prompt
                        002027    5-66  	equ	curtcmd,dir+23	current bos command
                        002030    5-67  	equ	readysw,dir+24	if on, print ready message
                        002032    5-68  	equ	cmdlst,dir+26	list of commands
                                  5-69  
                        000600    5-70  	equ	dirlen,384
                                  5-71  
                                  5-72  
                                  5-73  
                                  5-74  "	MACRO BUFFER AREA
                                  5-75  
                        002600    5-76  	equ	macrobuf,dir+dirlen  io buffer for macro files
                        002700    5-77  	equ	macroline,macrobuf+64  runcom command line
                        002716    5-78  	equ	macroargs,macroline+14  argument descriptors for runcom
                                  5-79  
                                  5-80  
                                  5-81  
                                  5-82  "	CONFIGURATION CARD AREA
                                  5-83  "		Its length is 2048 words.
                                  5-84  
                        003000    5-85  	equ	conf,macrobuf+128	start of configuration info
                        007000    5-86  	equ	econf,conf+2048	end of configuration info
                        000020    5-87  	equ	confl,16		length of each line
                                  5-88  
                                  5-89  
                        007000    5-90  	equ	seg6length,econf	length of bos_common area segment
                                  5-91  
                                  5-92  " End of include file ...... bos_common.incl.alm
                                  5-93  
                                   236  
                                   237  	end
LITERALS
     
    000476  aa   143154 157153 
    000477  aa   777777 777777 
    000500  aa   202020 202051 
    000501  aa   202020 202062 
    000502  aa   202020 202050 
    000503  aa   000003 641100 
NAME DEFINITIONS FOR ENTRY POINTS AND SEGDEFS

    000504  5a   000003 000000 
    000505  5a   000017 600000 
    000506  aa   000000 000000 
    000507  55   000010 000002 
    000510  5a   000002 400003 
    000511  55   000006 000010 
    000512  aa  004 164 151 155
    000513  aa  145 000 000 000
    000514  55   000002 000003 
    000515  6a   000000 400002 
    000516  55   000013 000003 
    000517  aa  014 163 171 155         symbol_table
    000520  aa  142 157 154 137
    000521  aa  164 141 142 154
    000522  aa  145 000 000 000

DEFINITIONS HASH TABLE

    000523  aa   000000 000015 
    000524  aa   000000 000000 
    000525  aa   000000 000000 
    000526  aa   000000 000000 
    000527  aa   000000 000000 
    000530  aa   000000 000000 
    000531  aa   000000 000000 
    000532  5a   000010 000000 
    000533  aa   000000 000000 
    000534  aa   000000 000000 
    000535  aa   000000 000000 
    000536  aa   000000 000000 
    000537  aa   000000 000000 
    000540  aa   000000 000000 

NO EXTERNAL NAMES

NO TRAP POINTER WORDS

TYPE PAIR BLOCKS

    000541  aa   000001 000000 
    000542  aa   000000 000000 

INTERNAL EXPRESSION WORDS

    000543  aa   000000 000000 
LINKAGE INFORMATION
      
    000000  aa   000000 000000 
    000001  0a   000504 000000 
    000002  aa   000000 000000 
    000003  aa   000000 000000 
    000004  aa   000000 000000 
    000005  aa   000000 000000 
    000006  22   000010 000010 
    000007  a2   000000 000000 
SYMBOL INFORMATION
     
SYMBOL TABLE HEADER
     
    000000  aa   000000 000001 
    000001  aa   163171 155142 
    000002  aa   164162 145145 
    000003  aa   000000 000004 
    000004  aa   000000 112143 
    000005  aa   305203 523135 
    000006  aa   000000 112272 
    000007  aa   233051 015550 
    000010  aa   141154 155040 
    000011  aa   040040 040040 
    000012  aa   000024 000040 
    000013  aa   000034 000040 
    000014  aa   000044 000100 
    000015  aa   000002 000002 
    000016  aa   000064 000000 
    000017  aa   000000 000256 
    000020  aa   000000 000177 
    000021  aa   000000 000241 
    000022  aa   000244 000177 
    000023  aa   000064 000000 
    000024  aa   101114 115040 
    000025  aa   126145 162163 
    000026  aa   151157 156040 
    000027  aa   040066 056066 
    000030  aa   040040 116157 
    000031  aa   166145 155142 
    000032  aa   145162 040061 
    000033  aa   071070 062040 
    000034  aa   110157 154155 
    000035  aa   163164 145144 
    000036  aa   164056 123171 
    000037  aa   163115 141151 
    000040  aa   156164 056141 
    000041  aa   040040 040040 
    000042  aa   040040 040040 
    000043  aa   040040 040040 
    000044  aa   154151 163164 
    000045  aa   040040 040040 
    000046  aa   040040 040040 
    000047  aa   040040 040040 
    000050  aa   040040 040040 
    000051  aa   040040 040040 
    000052  aa   040040 040040 
    000053  aa   040040 040040 
    000054  aa   040040 040040 
    000055  aa   040040 040040 
    000056  aa   040040 040040 
    000057  aa   040040 040040 
    000060  aa   040040 040040 
    000061  aa   040040 040040 
    000062  aa   040040 040040 
    000063  aa   040040 040040 
    000064  aa   000000 000001 
    000065  aa   000000 000006 
    000066  aa   000116 000025 
    000067  aa   122721 273134 
    000070  aa   000000 112272 
    000071  aa   216260 600000 
    000072  aa   000124 000040 
    000073  aa   113400 415301 
    000074  aa   000000 111341 
    000075  aa   220414 400000 
    000076  aa   000134 000041 
    000077  aa   102324 451016 
    000100  aa   000000 110235 
    000101  aa   732232 200000 
    000102  aa   000145 000043 
    000103  aa   043243 127523 
    000104  aa   000000 101621 
    000105  aa   351624 000000 
    000106  aa   000156 000040 
    000107  aa   110235 072677 
    000110  aa   000000 111024 
    000111  aa   524460 600000 
    000112  aa   000166 000044 
    000113  aa   121622 277475 
    000114  aa   000000 112162 
    000115  aa   321563 400000 
    000116  aa   076163 160145          >spec>h>3.17>time.alm
    000117  aa   143076 150076 
    000120  aa   063056 061067 
    000121  aa   076164 151155 
    000122  aa   145056 141154 
    000123  aa   155040 040040 
    000124  aa   076154 144144          >ldd>bos>include>bosequ.incl.alm
    000125  aa   076142 157163 
    000126  aa   076151 156143 
    000127  aa   154165 144145 
    000130  aa   076142 157163 
    000131  aa   145161 165056 
    000132  aa   151156 143154 
    000133  aa   056141 154155 
    000134  aa   076154 144144          >ldd>bos>include>rdclock.incl.alm
    000135  aa   076142 157163 
    000136  aa   076151 156143 
    000137  aa   154165 144145 
    000140  aa   076162 144143 
    000141  aa   154157 143153 
    000142  aa   056151 156143 
    000143  aa   154056 141154 
    000144  aa   155040 040040 
    000145  aa   076154 144144          >ldd>include>eis_micro_ops.incl.alm
    000146  aa   076151 156143 
    000147  aa   154165 144145 
    000150  aa   076145 151163 
    000151  aa   137155 151143 
    000152  aa   162157 137157 
    000153  aa   160163 056151 
    000154  aa   156143 154056 
    000155  aa   141154 155040 
    000156  aa   076154 144144          >ldd>bos>include>bos_tv.incl.alm
    000157  aa   076142 157163 
    000160  aa   076151 156143 
    000161  aa   154165 144145 
    000162  aa   076142 157163 
    000163  aa   137164 166056 
    000164  aa   151156 143154 
    000165  aa   056141 154155 
    000166  aa   076154 144144          >ldd>bos>include>bos_common.incl.alm
    000167  aa   076142 157163 
    000170  aa   076151 156143 
    000171  aa   154165 144145 
    000172  aa   076142 157163 
    000173  aa   137143 157155 
    000174  aa   155157 156056 
    000175  aa   151156 143154 
    000176  aa   056141 154155 
               MULTICS ASSEMBLY CROSS REFERENCE LISTING

   Value        Symbol                   Source file   Line number

       12233    amaxio                   bos_tv:        48.
       12224    amdvt                    bos_tv:        41.
       12225    amfirst                  bos_tv:        42.
       12226    amlast                   bos_tv:        43.
         100    amptwptr                 bos_common:    11.
           0    amptwregs                bos_common:    10.
         400    amsdwptr                 bos_common:    13.
         200    amsdwregs                bos_common:    12.
        1300    aphist                   bos_common:    17.
       12040    arg                      time:          49,   51,   53,   79,   96,   97,
                                         bos_tv:        14,   15.
       12222    argbos                   bos_tv:        39.
          17    arglen                   bosequ:        17,
                                         bos_tv:        15,   16,   17.
       12223    argmul                   bos_tv:        40.
       12201    arg_count                bos_tv:        22.
       12255    asge                     bos_tv:        66.
       12256    asgetab                  bos_tv:        67.
        1573    bar                      bos_common:    26.
           2    bf                       bosequ:         9.
       12217    bosmul                   bos_tv:        36.
       12214    bosphy                   bos_tv:        33.
        2012    bos_dvt                  bos_common:    53.
       12261    bzel                     bos_tv:        70.
       12312    check_cpu_type           bos_tv:        95.
       12311    check_special_status     bos_tv:        94.
       12274    check_status             bos_tv:        81.
       12310    check_status_no_stat     bos_tv:        93.
         420    cht                      eis_micro_ops:       17.
         206    cldate                   time:          73,   92,  102,  115,  191.
         176    clloc                    time:         180.
         241    clockflt                 time:         109,  218.
         120    clockr                   time:          69,   90,   98,  111,  126,  138,  158,  164,  173,  192,  202,  203.
         122    clocks                   time:          71,   87,  100,  113,  139,  204.
         211    clret                    time:         191,  194.
        2032    cmdlst                   bos_common:    68.
           6    com                      time:          39,  131,
                                         bosequ:        14,
                                         rdclock:       28,   30.
        3000    conf                     bos_common:    85,   86.
          20    confl                    bos_common:    87.
       12272    connect_iom              bos_tv:        79.
        2003    corearea                 time:         131,
                                         bos_common:    47.
        1610    coreblocks               bos_common:    30.
         700    cuhist                   bos_common:    15.
        2027    curtcmd                  bos_common:    66.
       12270    cvclock                  bos_tv:        77.
       12210    cvinit                   bos_tv:        29.
       12227    cvnamla                  bos_tv:        44.
         301    cv_clock                 time:         193,
                                         rdclock:       18.
          13    cycle                    time:          44,   50,   75,   94,  104,  117,  128,  132,  220,  230.
        2024    d355_state               bos_common:    63.
       12060    darg                     time:          59,
                                         bos_tv:        15,   16.
         431    date                     rdclock:       89,  110,  144.
         123    datecl                   time:          67,  143.
         406    datecv                   rdclock:       46,   51,   78,   86,  106.
         450    datedit                  rdclock:       90,  151.
         430    datenum                  rdclock:      106,  109,  143.
         403    datx2                    rdclock:       19,   20,  101.
         200    days                     time:         149,  182.
        1570    dbr                      bos_common:    24.
        2000    dir                      bos_common:    43,   45,   46,   47,   49,   50,   51,   52,   53,   54,   55,   56,
                                                        57,   58,   59,   60,   61,   62,   63,   64,   65,   66,   67,   68,   76.
         600    dirlen                   bos_common:    70,   76.
        2014    diskchanno               bos_common:    55.
       12236    disk_brief               bos_tv:        51.
           0    ds                       bosequ:         7.
       12100    earg                     bos_tv:        16,   17.
        7000    econf                    bos_common:    86,   90.
        1100    eishist                  bos_common:    16.
          40    enf                      eis_micro_ops:        2.
       12243    erbuf                    bos_tv:        56.
       12242    ercv                     bos_tv:        55.
       12241    erpt                     time:         200,  218,  223,  228,
                                         bos_tv:        54.
          13    execint                  time:          30,   43.
        1576    faultreg                 bos_common:    28.
        2023    fdump_state              bos_common:    62.
           5    fgb                      bosequ:        13.
       12305    find_disk                bos_tv:        90.
       12307    find_part                bos_tv:        92.
       12306    find_root                bos_tv:        91.
        2000    firmware_bit             bosequ:        20.
       12120    fltscu                   bos_tv:        17.
       12253    geas                     bos_tv:        64.
       12254    geastab                  bos_tv:        65.
       12264    getconf                  time:          36,
                                         rdclock:       26,
                                         bos_tv:        73.
       12265    getmore                  bos_tv:        74.
       12273    getmpc                   bos_tv:        80.
       12266    getperiph                bos_tv:        75.
       12313    getportinfo              bos_tv:        96.
       12250    getprt                   bos_tv:        61.
       12207    getsec                   bos_tv:        28.
       12275    get_special_interrupt    bos_tv:        82.
       12276    get_status_interrupt     bos_tv:        83.
          26    gloop                    time:          59,   65.
       12304    hexwd                    bos_tv:        89.
         202    hr                       time:         166,  184.
          10    if0                      eis_micro_ops:       19.
           4    if1                      eis_micro_ops:       20.
           2    if2                      eis_micro_ops:       21.
           1    if3                      eis_micro_ops:       22.
         300    ign                      eis_micro_ops:       12.
       12300    initint                  time:          29,
                                         bos_tv:        85.
       12271    init_io                  time:          31,
                                         bos_tv:        78.
        2021    inputsw                  bos_common:    60.
         220    insa                     eis_micro_ops:        9.
         200    insb                     eis_micro_ops:        8.
          20    insm                     rdclock:      151,  152,
                                         eis_micro_ops:        1.
         240    insn                     eis_micro_ops:       10.
         260    insp                     rdclock:      151,  152,
                                         eis_micro_ops:       11.
       12302    intno                    bos_tv:        87.
        1572    intrpts                  bos_common:    25.
       12303    intrpts1                 bos_tv:        88.
        2011    iom_mbbase               bos_common:    52.
        2010    iom_mxbase               bos_common:    51.
       12237    itaper                   bos_tv:        52.
       12240    itapew                   bos_tv:        53.
       12206    ldcom                    bos_tv:        27.
       12001    line                     bos_tv:        13,   14.
       12257    ljust                    bos_tv:        68.
       12220    lookup_devmodel          bos_tv:        37.
        1620    lowport_cfg              bos_common:    34.
        1530    low_order_port           bos_common:    20.
         400    lte                      rdclock:      151,
                                         eis_micro_ops:       16.
        2716    macroargs                bos_common:    78.
        2600    macrobuf                 bos_common:    76,   77,   85.
        2700    macroline                bos_common:    77,   78.
        2022    macroloc                 bos_common:    61.
       12205    makefil                  bos_tv:        26.
       12221    makesdw                  bos_tv:        38.
        1550    mcm                      bos_common:    23.
        1532    mctime                   bos_common:    21.
           7    mem                      time:         135,
                                         bosequ:        15.
         160    mflc                     eis_micro_ops:        7.
         140    mfls                     eis_micro_ops:        6.
         203    min                      time:         169,  185.
        1574    modereg                  bos_common:    27.
         434    montab                   rdclock:       23,   56,   74,   81,  149.
         161    montable                 time:         148,  176.
         177    month                    time:          63,  147,  181.
         360    mors                     eis_micro_ops:       15.
         340    mses                     eis_micro_ops:       14.
       12216    mulbos                   bos_tv:        35.
         320    mvc                      rdclock:      151,  152,
                                         eis_micro_ops:       13.
         120    mvza                     eis_micro_ops:        5.
         100    mvzb                     rdclock:      151,
                                         eis_micro_ops:        4.
       12202    nextline                 bos_tv:        23.
       12203    nlraw                    bos_tv:        24.
         264    not_4mw                  time:         124,  228.
         251    not_clok                 time:          37,  222.
         315    no_clok_card             rdclock:       27,   33.
       12252    octwd                    bos_tv:        63.
          44    one                      time:          52,   79.
         500    ouhist                   bos_common:    14.
       12000    pagectl                  bos_tv:        12,   13.
           3    pgm                      bosequ:        10.
       12215    phyadd                   bos_tv:        34.
       12213    phybos                   bos_tv:        32.
         240    pret                     time:         199,  213.
         212    print                    time:          74,   93,  103,  116,  199.
        1500    prs                      bos_common:    18.
        1600    ptrlen                   bos_common:    29.
       12251    punch                    bos_tv:        62.
        2020    quietsw                  bos_common:    59.
         113    quit                     time:          45,   85,  131,  225.
         453    rdc.days                 rdclock:       97,  154.
         462    rdc.months               rdclock:       84,  156.
       12267    rdclock                  bos_tv:        76.
         423    rdclock.day_name         time:         205,
                                         rdclock:       98,  132.
         425    rdclock.day_of_century   rdclock:       49,   93,  136.
         421    rdclock.day_of_month     time:         206,
                                         rdclock:       77,  128.
         422    rdclock.day_of_week      rdclock:       96,  130.
         414    rdclock.hr               time:         209,
                                         rdclock:       50,  118.
         415    rdclock.min              time:         210,
                                         rdclock:       41,  120.
         417    rdclock.month            rdclock:       83,  124.
         420    rdclock.month_name       time:         207,
                                         rdclock:       85,  126.
         416    rdclock.sec              time:         211,
                                         rdclock:       39,  122.
         424    rdclock.year             time:         208,
                                         rdclock:       60,   71,  134.
         427    rdclock.zone_name        time:         212,
                                         rdclock:       31,  140.
         426    rdclock.zone_temp        rdclock:       29,   47,  138.
         432    rdctime                  rdclock:       18,   34,   91,  100,  147.
       12211    rdev                     bos_tv:        30.
        2016    rdrchanno                bos_common:    57.
       12234    rdsec                    bos_tv:        49.
         300    rd_clock                 rdclock:       16.
          72    read                     time:          81,  107.
       12246    readcd                   bos_tv:        59.
       12247    readtty                  time:          44,
                                         bos_tv:        60.
        2030    readysw                  bos_common:    67.
       12232    rec_per_dev_list         bos_tv:        47.
        1520    regs                     bos_common:    19.
       12260    rjust                    bos_tv:        69.
        4000    runcom_bit               bosequ:        19.
       12200    scan                     time:          46,
                                         bos_tv:        21.
        1540    scu                      bos_common:    22.
       12204    search                   bos_tv:        25.
         204    sec                      time:         171,  186.
       12230    sect_per_cyl_list        bos_tv:        45.
       12231    sect_per_dev_list        bos_tv:        46.
        7000    seg6length               bos_common:    90.
          60    ses                      eis_micro_ops:        3.
         103    set                      time:          83,  120.
        2004    setuparea                bos_common:    49.
        2025    skipsw                   bos_common:    64.
        2000    storlen                  bos_common:    36.
       12262    stripa                   bos_tv:        71.
       12263    stripg                   bos_tv:        72.
        2015    tapechanno               bos_common:    56.
         205    temp                     time:         187.
           1    tmp                      bosequ:         8.
        2017    ttychanno                bos_common:    58.
       12245    ttyinit                  time:          32,
                                         bos_tv:        58.
        2026    ttypmtsw                 bos_common:    65.
          13    ttyrequest               time:          33,   42.
       12200    tv_org                   bos_tv:        19,   21,   22,   23,   24,   25,   26,   27,   28,   29,   30,   31,
                                                        32,   33,   34,   35,   36,   37,   38,   39,   40,   41,   42,   43,
                                                        44,   45,   46,   47,   48,   49,   50,   51,   52,   53,   54,   55,
                                                        56,   57,   58,   59,   60,   61,   62,   63,   64,   65,   66,   67,
                                                        68,   69,   70,   71,   72,   73,   74,   75,   76,   77,   78,   79,
                                                        80,   81,   82,   83,   84,   85,   86,   87,   88,   89,   90,   91,
                                                        92,   93,   94,   95,   96.
          62    two                      time:          54,   96.
       12244    type                     bos_tv:        57.
         175    tzone                    time:          40,  167,  179.
        2013    unitgroup                bos_common:    54.
        2002    useable                  bos_common:    46.
        2001    used                     bos_common:    45.
        2005    utilarea                 bos_common:    50.
       12000    utilorg                  bosequ:        22,
                                         bos_tv:        12,   19.
       12301    wantflt                  bos_tv:        86.
       12212    wdev                     bos_tv:        31.
       12235    wtsec                    bos_tv:        50.
         116    x2                       time:          27,  134.
       12277    xio_wait                 bos_tv:        84.
           4    xs1                      bosequ:        11.
           5    xs2                      bosequ:        12.
         201    year                     time:         143,  152,  160,  183.


NO FATAL ERRORS


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
