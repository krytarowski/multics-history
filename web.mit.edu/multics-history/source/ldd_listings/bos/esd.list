ASSEMBLY LISTING OF SEGMENT >spec>h>3.17>esd.alm                         
ASSEMBLED ON:	11/29/83  1521.8 mst Tue
OPTIONS USED:	list 
ASSEMBLED BY:	ALM Version  6.6  November 1982 
ASSEMBLER CREATED:	09/21/83  1227.3 mst Wed

                                     1  " ***********************************************************
                                     2  " *                                                         *
                                     3  " * Copyright, (C) Honeywell Information Systems Inc., 1982 *
                                     4  " *                                                         *
                                     5  " ***********************************************************
                                     6  " ESD - Transfer to emergency_shutdown.
                                     7  "	
                                     8  " Modified 12/14/81 by Sherman D. Sprague to check for storage system enabled.
                                     9  " Modified 10/4/82, J. Bongiovanni, not to restore CFG register
                                    10  
    000000                          11  	name	esd
                                    12  
                                    13  
                                    14  "  ******************************************************
                                    15  "  *                                                    *
                                    16  "  *                                                    *
                                    17  "  * Copyright (c) 1972 by Massachusetts Institute of   *
                                    18  "  * Technology and Honeywell Information Systems, Inc. *
                                    19  "  *                                                    *
                                    20  "  *                                                    *
                                    21  "  ******************************************************
                                    22  
                                    23  
                                    24  	include	bosequ
                                   1-1  " Begin include file ...... bosequ.incl.alm
                                   1-2  " Modified 8/25/76 by N. I. Morris
                                   1-3  " Modified 8/79 by R.J.C. Kissel to expand BOS.
                                   1-4  " Modified November 1981 by C. Hornig to add pgmorg.
                                   1-5  " Modified October 1982 by J. Bongiovanni to take it out
                                   1-6  
                        000000     1-7  	bool	ds,0		descriptor segment
                        000001     1-8  	bool	tmp,1		temp seg
                        000002     1-9  	bool	bf,2		buffer segment for save/restor
                        000003    1-10  	bool	pgm,3		program in control
                        000004    1-11  	bool	xs1,4		spare segment
                        000005    1-12  	bool	xs2,5		spare segment
                        000005    1-13  	bool	fgb,5		flagbox segment
                        000006    1-14  	bool	com,6		common
                        000007    1-15  	bool	mem,7		all memory
                                  1-16  
                        000017    1-17  	equ	arglen,15		max number of args from scan
                                  1-18  
                        004000    1-19  	bool	runcom_bit,4000	runcom bit in dir entry
                        002000    1-20  	bool	firmware_bit,2000	firmware bit in dir entry
                                  1-21  
                        012000    1-22  	bool	utilorg,12000	origin of utility package
                                  1-23  
                                  1-24  " End of include file ...... bosequ.incl.alm
                                    25  
                                    26  
                        000000      27  	bool	esd_offset,0	offset at which to enter emergency_shutdown
                                    28  
                        000100      29  	equ	dmpbufl,64	size of APND buffer
                                    30  
                                    31  " 
                                    32  
    000000  0a   000033 7420 00     33  	stx2	x2			save X2
                                    34  
    000001  aa   012271 7020 00     35  	tsx2	init_io			initialize IOM package
    000002  aa   012210 7020 00     36  	tsx2	cvinit			initialize device address conversion
    000003  aa   012245 7020 00     37  	tsx2	ttyinit			initialize tty packagep
    000004  0a   000057 0000 00     38  	arg	ttyrequest
                                    39  
    000005  0a   000110 2350 00     40  	lda	=h  apnd			load in the APND package
    000006  aa   007000 6360 00     41  	eaq	apnd_org			..
    000007  aa   012206 7020 00     42  	tsx2	ldcom			..
    000010  0a   000062 7100 00     43  	tra	no_esd			..
                                    44  
    000011  aa  5 00003 2351 00     45  	lda	fgb|fgbx.rtb		get the flags
    000012  aa   400000 3150 03     46  	cana	fgbx.ssenb,du		see if ss is enabled
    000013  0a   000036 6000 00     47  	tze	esdnn			esd is not needed
                                    48  
    000014  aa  5 00016 2371 00     49  	ldaq	fgb|fgbx.hc_dbr		set DBR for appending package
    000015  aa   007000 7570 00     50  	staq	cmdbr			..
                                    51  
    000016  aa   000100 6350 00     52  	eaa	dmpbufl			size of APND buffer in AU
    000017  aa   007026 7020 00     53  	tsx2	getinit			initialize the appending package
                                    54  
    000020  aa   007042 7020 00     55  	tsx2	sltsearch			search the SLT for emergency_shutdown
    000021  0a   000102 0000 00     56  	arg	esd_name			..
    000022  0a   000062 7100 00     57  	tra	no_esd			..
                                    58  
    000023  aa   400000 2750 07     59  	ora	scu.ppr.p,dl		OR in privileged bit
    000024  aa  6 01540 7551 00     60  	sta	com|scu+scu.ppr.psr_word	set the PSR
                                    61  
    000025  aa   000000 2350 03     62  	lda	esd_offset,du		set offset
    000026  aa   000200 2750 07     63  	ora	scu.ir.bm,dl		and BAR mode indicator
    000027  aa  6 01544 7551 00     64  	sta	com|scu+scu.ilc_word	in ILC
                                    65  
    000030  aa  6 01572 4501 00     66  	stz	com|intrpts		turn off all waiting interrupts
    000031  aa   000000 4310 07     67  	fld	0,dl
    000032  aa  6 01620 7571 00     68  	staq	com|lowport_cfg		Don't restore CFG
                                    69  
    000033  0a   000033 6220 00     70  x2:	eax2	*			restore X2
    000034  0a   000111 2350 00     71  	lda	=hcontin		
    000035  aa  7 00001 7101 12     72  	tra	mem|1,2
                                    73  
    000036  aa   012241 7020 00     74  esdnn:	tsx2	erpt   			tell the man....
    000037  aa  076 124 150 145     75  	acc	"The storage system was not enabled, ESD will not be performed."
    000040  aa  040 163 164 157
    000041  aa  162 141 147 145
    000042  aa  040 163 171 163
    000043  aa  164 145 155 040
    000044  aa  167 141 163 040
    000045  aa  156 157 164 040
    000046  aa  145 156 141 142
    000047  aa  154 145 144 054
    000050  aa  040 105 123 104
    000051  aa  040 167 151 154
    000052  aa  154 040 156 157
    000053  aa  164 040 142 145
    000054  aa  040 160 145 162
    000055  aa  146 157 162 155
    000056  aa  145 144 056 000
    000057                          76  ttyrequest:
    000057  0a   000033 2220 00     77  	ldx2	x2			restore X2
    000060  aa   000001 3350 07     78  	lca	1,dl			don't chain
    000061  aa  7 00001 7101 12     79  	tra	mem|1,2			..
                                    80  
    000062  aa   012241 7020 00     81  no_esd:	tsx2	erpt			complain
    000063  aa  056 165 156 141     82  	acc	"unable to get segment # of emergency_shutdown."
    000064  aa  142 154 145 040
    000065  aa  164 157 040 147
    000066  aa  145 164 040 163
    000067  aa  145 147 155 145
    000070  aa  156 164 040 043
    000071  aa  040 157 146 040
    000072  aa  145 155 145 162
    000073  aa  147 145 156 143
    000074  aa  171 137 163 150
    000075  aa  165 164 144 157
    000076  aa  167 156 056 000
                                    83  
    000077  0a   000033 2220 00     84  	ldx2	x2			restore X2
    000100  aa   000001 3350 07     85  	lca	1,dl			don't chain
    000101  aa  7 00001 7101 12     86  	tra	mem|1,2			..
                                    87  
                                    88  
    000102  aa   000000 000022      89  esd_name:	dec	18
    000103  aa  145 155 145 162     90  	aci	"emergency_shutdown  "
    000104  aa  147 145 156 143
    000105  aa  171 137 163 150
    000106  aa  165 164 144 157
    000107  aa  167 156 040 040
                                    91  
                                    92  " 
                                    93  
                                    94  	include	mc
                                   2-1  "
                                   2-2  "	BEGIN INCLUDE FILE  mc.incl.alm  6/72 SHW
                                   2-3  "	Modified 8/80 by J. A. Bush for dps8/70M CPU
                                   2-4  "
                                   2-5  
                                   2-6  "	General layout of data items.
                                   2-7  
                        000000     2-8  	equ	mc.prs,0		pointer registers
                        000020     2-9  	equ	mc.regs,16	registers
                        000030    2-10  	equ	mc.scu,24		SCU data
                        000050    2-11  	equ	mc.eis_info,40	pointers and lengths for EIS
                                  2-12  
                                  2-13  "	Temporary storage for software
                                  2-14  
                        000040    2-15  	equ	mc.mask,32	system controller mask at time of fault
                        000042    2-16  	equ	mc.ips_temp,34	temporary storage for IPS info
                        000043    2-17  	equ	mc.errcode,35	error code
                        000044    2-18  	equ	mc.fim_temp,36	temporary to hold fault index and unique index
                        000045    2-19  	equ	mc.fault_reg,37	fault register
                        000046    2-20  	equ	mc.fault_time,38	time of fault
                        000046    2-21  	equ	mc.cpu_type_word,38	CPU type from  rsw (2). overlays part of time word
                        300000    2-22  	bool	mc.cpu_type_mask,300000 DU
                        000046    2-23  	equ	mc.ext_fault_reg,38	ext fault reg for dps8. overlays part of time word
                        077774    2-24  	bool	mc.ext_fault_reg_mask,77774 DU
                        000003    2-25  	equ	mc.cpu_type_shift,3 positions to shift right or left
                                  2-26  
                                  2-27  
                                  2-28  
                                  2-29  "	SCU  DATA
                                  2-30  
                                  2-31  "	WORD  (0)		PROCEDURE POINTER REGISTER
                                  2-32  
                        000030    2-33  	equ	mc.scu.ppr.prr_word,24	Procedure Ring Register
                        000000    2-34  	equ	scu.ppr.prr_word,0
                        700000    2-35  	bool	scu.ppr.prr_mask,700000	DU
                        000041    2-36  	equ	scu.ppr.prr_shift,33
                                  2-37  
                        000030    2-38  	equ	mc.scu.ppr.psr_word,24	Procedure Segment Register
                        000000    2-39  	equ	scu.ppr.psr_word,0
                        077777    2-40  	bool	scu.ppr.psr_mask,077777	DU
                        000022    2-41  	equ	scu.ppr.psr_shift,18
                                  2-42  
                        000030    2-43  	equ	mc.scu.ppr.p_word,24	Procedure Privileged Bit
                        000000    2-44  	equ	scu.ppr.p_word,0
                        400000    2-45  	bool	scu.ppr.p,400000		DL
                                  2-46  
                                  2-47  "	  APPENDING UNIT STATUS
                        000030    2-48  	equ	mc.scu.apu_stat_word,24	APPENDING UNIT STATUS
                        000000    2-49  	equ	scu.apu_stat_word,0		
                                  2-50  
                        200000    2-51  	bool	scu.apu.xsf,200000		DL - Ext Seg Flag - IT mod.
                        100000    2-52  	bool	scu.apu.sdwm,100000		DL - Match in SDW Ass. Mem.
                        040000    2-53  	bool	scu.apu.sd_on,040000	DL - SDW Ass. Mem.  ON
                        020000    2-54  	bool	scu.apu.ptwm,020000		DL - Match in PTW Ass. Mem.
                        010000    2-55  	bool	scu.apu.pt_on,010000	DL - PTW Ass. Mem.  ON
                        004000    2-56  	bool	scu.apu.pi_ap,004000	DL - Instr fetch or Append cycle
                        002000    2-57  	bool	scu.apu.dsptw,002000	DL - Fetch of DSPTW
                        001000    2-58  	bool	scu.apu.sdwnp,001000	DL - Fetch of SDW non-paged
                        000400    2-59  	bool	scu.apu.sdwp,000400		DL - Fetch of SDW paged
                        000200    2-60  	bool	scu.apu.ptw,000200		DL - Fetch of PTW
                        000100    2-61  	bool	scu.apu.ptw2,000100		DL - Fetch of pre-paged  PTW
                        000040    2-62  	bool	scu.apu.fap,000040		DL - Fetch of final address paged
                        000020    2-63  	bool	scu.apu.fanp,000020		DL - Fetch final address non-paged
                        000010    2-64  	bool	scu.apu.fabs,000010		DL - Fetch of final address absolute
                                  2-65  
                        000030    2-66  	equ	mc.scu.fault_cntr_word,24	Num of retrys of EIS instructions.
                        000000    2-67  	equ	scu.fault_cntr_word,0	
                                  2-68  
                        000007    2-69  	bool	scu.fault_cntr_mask,000007
                                  2-70  
                                  2-71  
                                  2-72  "	WORD  (1)		FAULT DATA
                                  2-73  
                        000031    2-74  	equ	mc.scu.fault_data_word,25	FAULT  DATA
                        000001    2-75  	equ	scu.fault_data_word,1
                                  2-76  
                        400000    2-77  	bool	scu.fd.iro,400000		DU - Illegal Ring Order
                        200000    2-78  	bool	scu.fd.oeb,200000		DU - Not In Execute Bracket
                        100000    2-79  	bool	scu.fd.e_off,100000		DU - No  Execute
                        040000    2-80  	bool	scu.fd.orb,040000		DU - Not In Read Bracket
                        020000    2-81  	bool	scu.fd.r_off,020000		DU - No  Read
                        010000    2-82  	bool	scu.fd.owb,010000		DU - Not In Write Bracket
                        004000    2-83  	bool	scu.fd.w_off,004000		DU - No  Write
                        002000    2-84  	bool	scu.fd.no_ga,002000		DU - Not A Gate
                        001000    2-85  	bool	scu.fd.ocb,001000		DU - Not in  Call Bracket
                        000400    2-86  	bool	scu.fd.ocall,000400		DU - Outward Call
                        000200    2-87  	bool	scu.fd.boc,000200		DU - Bad Outward Call
                        000100    2-88  	bool	scu.fd.inret,000100		DU - Inward Return
                        000040    2-89  	bool	scu.fd.crt,000040		DU - Cross  Ring Transfer
                        000020    2-90  	bool	scu.fd.ralr,000020		DU - Ring   Alarm
                        000010    2-91  	bool	scu.fd.am_er,000010		DU - Assoc. Mem. Fault
                        000004    2-92  	bool	scu.fd.oosb,000004		DU - Out Of Bounds
                        000002    2-93  	bool	scu.fd.paru,000002		DU - Parity Upper
                        000001    2-94  	bool	scu.fd.parl,000001		DU - Parity Lower
                                  2-95  
                        400000    2-96  	bool	scu.fd.onc_1,400000		DL - Op Not Complete
                        200000    2-97  	bool	scu.fd.onc_2,200000		DL - Op Not Complete
                                  2-98  
                                  2-99  "  	  GROUP II  FAULT DATA
                        400000   2-100  	bool	scu.fd.isn,400000		DU - Illegal Segment Number
                        200000   2-101  	bool	scu.fd.ioc,200000		DU - Illegal Op Code
                        100000   2-102  	bool	scu.fd.ia_im,100000		DU - Illegal Addr - Modifier
                        040000   2-103  	bool	scu.fd.isp,040000		DU - Illegal Slave Procedure
                        020000   2-104  	bool	scu.fd.ipr,020000		DU - Illegal Procedure
                        010000   2-105  	bool	scu.fd.nea,010000		DU - Non Existent Address
                        004000   2-106  	bool	scu.fd.oobb,004000		DU - Out Of  Bounds
                                 2-107  
                        000031   2-108  	equ	mc.scu.port_stat_word,25	PORT STATUS
                        000001   2-109  	equ	scu.port_stat_word,1
                                 2-110  
                        170000   2-111  	bool	scu.ial_mask,170000		DL - Illegal Action Lines
                        000014   2-112  	equ	scu.ial_shift,12
                                 2-113  
                        007000   2-114  	bool	scu.iac_mask,007000		DL - Illegal Action Channel
                        000011   2-115  	equ	scu.iac_shift,9
                                 2-116  
                        000700   2-117  	bool	scu.con_chan_mask,000700	DL - Connect Channel
                        000006   2-118  	equ	scu.con_chan_shift,6
                                 2-119  
                        000076   2-120  	bool	scu.fi_num_mask,000076	DL - Fault / Interrupt  Number
                        000001   2-121  	equ	scu.fi_num_shift,1
                                 2-122  
                        000001   2-123  	bool	scu.fi_flag_mask,000001	DL - Fault / Interrupt  Flag
                                 2-124  
                                 2-125  
                                 2-126  "	WORD  (2)		TEMPORARY POINTER REGISTER
                                 2-127  
                        000032   2-128  	equ	mc.scu.tpr.trr_word,26	Temporary Ring Register
                        000002   2-129  	equ	scu.tpr.trr_word,2
                        700000   2-130  	bool	scu.tpr.trr_mask,700000	DU
                        000041   2-131  	equ	scu.tpr.trr_shift,33
                                 2-132  
                        000032   2-133  	equ	mc.scu.tpr.tsr_word,26	Temporary Segment Register
                        000002   2-134  	equ	scu.tpr.tsr_word,2
                        077777   2-135  	bool	scu.tpr.tsr_mask,077777	DU
                        000022   2-136  	equ	scu.tpr.tsr_shift,18
                                 2-137  
                        000032   2-138  	equ	mc.scu.cpu_no_word,26	CPU  Number
                        000002   2-139  	equ	scu.cpu_no_word,2
                                 2-140  
                        000700   2-141  	bool	scu.cpu_no_mask,000700	DL
                        000006   2-142  	equ	scu.cpu_shift,6
                                 2-143  
                        000032   2-144  	equ	mc.scu.delta_word,26	Tally Modification DELTA
                        000002   2-145  	equ	scu.delta_word,2
                                 2-146  
                        000077   2-147  	bool	scu.delta_mask,000077	DL
                                 2-148  
                                 2-149  
                                 2-150  "	WORD  (3)		TSR STATUS
                                 2-151  
                        000033   2-152  	equ	mc.scu.tsr_stat_word,27	TSR STATUS for 1,2, and 3
                        000003   2-153  	equ	scu.tsr_stat_word,3		Word Instructions
                                 2-154  
                        777700   2-155  	bool	scu.tsr_stat_mask,777700	DL - All of Status
                        000006   2-156  	equ	scu.tsr_stat_shift,6
                                 2-157  
                        740000   2-158  	bool	scu.tsna_mask,740000	DL - Word 1 Status
                        700000   2-159  	bool	scu.tsna.prn_mask,700000	DL - Word 1 PR num
                        000017   2-160  	equ	scu.tsna.prn_shift,15
                        040000   2-161  	bool	scu.tsna.prv,040000		DL - Word 1 PR valid bit
                                 2-162  
                        036000   2-163  	bool	scu.tsnb_mask,036000	DL - Word 2 Status
                        034000   2-164  	bool	scu.tsnb.prn_mask,034000	DL - Word 2 PR num
                        000013   2-165  	equ	scu.tsnb.prn_shift,11
                        002000   2-166  	bool	scu.tsnb.prv,002000		DL - Word 2 PR valid bit
                                 2-167  
                        000013   2-168  	bool	scu.tsnc_mask,0013		DL - Word 3 Status
                        001600   2-169  	bool 	scu.tsnc.prn_mask,001600	DL - Word 3 PR num
                        000007   2-170  	equ	scu.tsnc.prn_shift,7
                        000100   2-171  	bool	scu.tsnc.prv,000100		DL - Word 3 PR valid bit
                                 2-172  
                                 2-173  
                        000033   2-174  	equ	mc.scu.tpr.tbr_word,27	TPR.TBR  Field
                        000003   2-175  	equ	scu.tpr.tbr_word,3
                                 2-176  
                        000077   2-177  	bool	scu.tpr.tbr_mask,000077	DL
                                 2-178  
                                 2-179  
                                 2-180  "	WORD  (4)		INSTRUCTION COUNTER
                                 2-181  
                        000034   2-182  	equ	mc.scu.ilc_word,28		INSTRUCTION  COUNTER
                        000004   2-183  	equ	scu.ilc_word,4
                        000022   2-184  	equ	scu.ilc_shift,18
                                 2-185  
                        000034   2-186  	equ	mc.scu.indicators_word,28	INDICATOR  REGISTERS
                        000004   2-187  	equ	scu.indicators_word,4
                                 2-188  
                        400000   2-189  	bool	scu.ir.zero,400000		DL - Zero  Indicator
                        200000   2-190  	bool	scu.ir.neg,200000		DL - Negative Indicator
                        100000   2-191  	bool	scu.ir.carry,100000		DL - Carry Indicator
                        040000   2-192  	bool	scu.ir.ovfl,040000		DL - Overflow Indicator
                        020000   2-193  	bool	scu.ir.eovf,020000		DL - Exponent Overflow  Ind
                        010000   2-194  	bool	scu.ir.eufl,010000		DL - Exponent Underflow Ind
                        004000   2-195  	bool	scu.ir.oflm,004000		DL - Overflow Mask Indicator
                        002000   2-196  	bool	scu.ir.tro,002000		DL - Tally Runout  Indicator
                        001000   2-197  	bool	scu.ir.par,001000		DL - Parity  Indicator
                        000400   2-198  	bool	scu.ir.parm,000400		DL - Parity  Mask  Indicator
                        000200   2-199  	bool	scu.ir.bm,000200			DL - Bar  Mode  Indicator
                        000100   2-200  	bool	scu.ir.tru,000100		DL - Truncation Indicator
                        000040   2-201  	bool	scu.ir.mif,000040		DL - Multiword  Indicator
                        000020   2-202  	bool	scu.ir.abs,000020		DL - Absolute   Indicator
                                 2-203  
                                 2-204  
                                 2-205  "	WORD  (5)		COMPUTED ADDRESS
                                 2-206  
                        000035   2-207  	equ	mc.scu.ca_word,29		COMPUTED  ADDRESS
                        000005   2-208  	equ	scu.ca_word,5
                        000022   2-209  	equ	scu.ca_shift,18
                                 2-210  
                        000035   2-211  	equ	mc.scu.cu_stat_word,29	CONTROL UNIT STATUS
                        000005   2-212  	equ	scu.cu_stat_word,5
                                 2-213  
                        400000   2-214  	bool	scu.cu.rf,400000		DL - Repeat First
                                 2-215  "					On First Cycle of Repeat Inst.
                        200000   2-216  	bool	scu.cu.rpt,200000		DL - Repeat Instruction
                        100000   2-217  	bool	scu.cu.rd,100000		DL - Repeat Double Instr.
                        040000   2-218  	bool	scu.cu.rl,040000		DL - Repeat Link   Instr.
                                 2-219  
                        020000   2-220  	bool	scu.cu.pot,020000		DL - IT Modification
                        010000   2-221  	bool	scu.cu.pon,010000		DL - Return Type Instruction
                                 2-222  
                        004000   2-223  	bool	scu.cu.xde,004000		DL - XDE from Even Location
                        002000   2-224  	bool	scu.cu.xdo,002000		DL - XDE from Odd  Location
                                 2-225  
                        001000   2-226  	bool	scu.cu.poa,001000		DL - Operand Preparation
                        000400   2-227  	bool	scu.cu.rfi,000400		DL - Tells CPU to refetch instruction
                                 2-228  "	This Bit  Not Used    (000200)
                        000100   2-229  	bool	scu.cu.if,000100		DL - Fault occurred during instruction fetch
                                 2-230  
                        000035   2-231  	equ	mc.scu.cpu_tag_word,29	Computed Tag Field
                        000005   2-232  	equ	scu.cpu_tag_word,5
                                 2-233  
                        000007   2-234  	bool	scu.cpu_tag_mask,000007	DL
                                 2-235  
                                 2-236  
                                 2-237  "	WORDS  (6,7)	INSTRUCTIONS
                                 2-238  
                        000036   2-239  	equ	scu.even_inst_word,30	Even Instruction
                                 2-240  
                        000037   2-241  	equ	scu.odd_inst_word,31	Odd  Instruction
                                 2-242  
                                 2-243  
                                 2-244  "	END INCLUDE FILE incl.alm
                                    95  
                                    96  	include	apnd_equ
                                   3-1  " 
                                   3-2  " Begin include file ...... apnd_equ.incl.alm
                                   3-3  " Created 11/19/72 by N. I. Morris
                                   3-4  " modified 5/19/75 by Noel I.  Morris
                                   3-5  " Modified 8/79 by R.J.C. Kissel to use expanded BOS.
                                   3-6  " Modidied 7/82 by Sherman D. Sprague to add cmpsdw.
                                   3-7  
                        007000     3-8  	bool	apnd_org,7000
                                   3-9  
                        007000    3-10  	equ	cmdbr,apnd_org+0		DBR of process being examined
                        007002    3-11  	equ	hcdbr,apnd_org+2		hardcore DBR value
                        007004    3-12  	equ	fetchout,apnd_org+4		used to reference block fetched by fetch
                        007006    3-13  	equ	read_args,apnd_org+6	last block fetched by fetch
                        007010    3-14  	equ	fetchin,apnd_org+8		absadr of word to be fetched
                        007011    3-15  	equ	sltseg,apnd_org+9		SLT segment number
                        007012    3-16  	equ	bosdmp,apnd_org+10		non-zero if BOS itself is to be fetched
                        007013    3-17  	equ	pagesw,apnd_org+11		non-zero if paging to be simulated
                        007014    3-18  	equ	pmlsw,apnd_org+12		non-zero if PML to be simulated
                        007016    3-19  	equ	sstsdw,apnd_org+14		SDW of SST segment
                        007020    3-20  	equ	cmpsdw,apnd_org+16		SDW of CMP segment
                        007022    3-21  	equ	castap,apnd_org+18		offset of first ASTE in SST segment
                                  3-22  
                        007026    3-23  	equ	getinit,apnd_org+22		initialize appending package
                        007027    3-24  	equ	getsdw,apnd_org+23		fetch an SDW
                        007030    3-25  	equ	getwd,apnd_org+24		fetch a word
                        007031    3-26  	equ	grab,apnd_org+25		fetch from a list
                        007032    3-27  	equ	apnd,apnd_org+26		appending simulation
                        007033    3-28  	equ	unapnd,apnd_org+27		to modify a segment
                        007034    3-29  	equ	get,apnd_org+28		get a block of data
                        007035    3-30  	equ	put,apnd_org+29		write a block of data
                        007036    3-31  	equ	comp,apnd_org+30		compare a block of data
                        007037    3-32  	equ	fetch,apnd_org+31		to fetch core
                        007040    3-33  	equ	unfetch,apnd_org+32		to rewrite fetched buffer
                        007041    3-34  	equ	fetch_use_buffer,apnd_org+33	to set SDW to appending buffer
                        007042    3-35  	equ	sltsearch,apnd_org+34	get segment # given name
                        007043    3-36  	equ	getsltname,apnd_org+35	get name of segment
                        007044    3-37  	equ	pd_check,apnd_org+36	check for page on paging device
                        007045    3-38  	equ	pd_modify,apnd_org+37	turn on modified bit in pdmap
                        007046    3-39  	equ	pd_getptr,apnd_org+38	get pointer to pdmap entry
                        007047    3-40  	equ	pvt_to_devt,apnd_org+39	convert pvtx to device type wd
                                  3-41  
                                  3-42  " End of include file ...... apnd_equ.incl.alm
                                  3-43  
                                    97  
                                    98  	include	fgbx
                                   4-1  
                                   4-2  "BEGIN INCLUDE FILE fgbx.incl.alm
                                   4-3  
                                   4-4  "	Reconstructed by BSG 8/30/78 from a listing of Noel's;
                                   4-5  "	Apparently, the version of 10/07/76 got lost.
                                   4-6  "	Modified 8/79 by R.J.C. Kissel to add 32 words for FNP blast message.
                                   4-7  "	Modified 7/82 BIM -- 8 words for sentinel, and sentinel
                                   4-8  "	macro.
                                   4-9  
                                  4-10  "
                                  4-11  "	Structure fgbx
                                  4-12  "
                        000100    4-13  	equ	fgbx_size,64
                                  4-14  
                        000000    4-15  	equ	fgbx.flags_word,0
                        400000    4-16  	bool	fgbx.flags,400000		"DU
                                  4-17  
                        000001    4-18  	equ	fgbx.slt_segno,1		"UPPER
                                  4-19  
                        000002    4-20  	equ	fgbx.cpus,2		"LEVEL 2
                                  4-21  
                        000034    4-22  	equ	fgbx.ports_shift,28
                        000571    4-23  	equ	fgbx.ports_mask,000377
                        000025    4-24  	equ	fgbx.tags_shift,21
                        000007    4-25  	equ	fgbx.tags_mask,000007
                                  4-26  	
                        000003    4-27  	equ	fgbx.rtb,3		"LEVEL 2
                                  4-28  
                        400000    4-29  	bool	fgbx.ssenb,400000		"DU
                        200000    4-30  	bool	fgbx.call_bos,200000	"DU
                        100000    4-31  	bool	fgbx.shut,100000		"DU
                        040000    4-32  	bool	fgbx.mess,040000		"DU
                        020000    4-33  	bool	fgbx.alert,020000		"DU
                        000000    4-34  	equ	fgbx.bos_entry_shift,0
                        000077    4-35  	bool	fgbx.bos_entry_mask,000077
                                  4-36  
                        000004    4-37  	equ	fgbx.sentinel,4		"DOUBLE
                        000014    4-38  	equ	fgbx.sst_sdw,12		"DOUBLE
                        000016    4-39  	equ	fgbx.hc_dbr,14		"DOUBLE
                        000020    4-40  	equ	fgbx.message,16		"DOUBLE
                        000040    4-41  	equ	fgbx.fnp_blast,32		"DOUBLE
                                  4-42  
                                  4-43  	macro	flagbox_sentinel
                              1   4-44  	aci	"Flagbox && Toehold Valid",32
                              2   4-45  &end
                                  4-46  
                                  4-47       "END INCLUDE FILE fgbx.incl.alm
                                    99  
                                   100  	include	bos_tv
                                   5-1  " 
                                   5-2  " Begin include file ...... bos_tv.incl.alm
                                   5-3  " Created in November 1971 by N. I. Morris.
                                   5-4  " Modified 9/9/76 by Noel I. Morris
                                   5-5  " Modified by Sherman D. Sprague 02/11/81 for DPS8 support.
                                   5-6  " Modified November 1981 by C. Hornig to remove iom_connect_rel.
                                   5-7  " Modified January 1982 by J. Bongiovanni to add getport_info
                                   5-8  " Modified May 1982 by Sherman D. Sprague to add getmpc.
                                   5-9  
                                  5-10  " BOS Utility Package Transfer Vector.
                                  5-11  
                        012000    5-12  	equ	pagectl,utilorg
                        012001    5-13  	equ	line,pagectl+1
                        012040    5-14  	equ	arg,line+31
                        012060    5-15  	equ	darg,arg+arglen+1
                        012100    5-16  	equ	earg,darg+arglen+1
                        012120    5-17  	equ	fltscu,earg+arglen+1
                                  5-18  
                        012200    5-19  	equ	tv_org,utilorg+128
                                  5-20  
                        012200    5-21  	equ	scan,tv_org+0
                        012201    5-22  	equ	arg_count,tv_org+1
                        012202    5-23  	equ	nextline,tv_org+2
                        012203    5-24  	equ	nlraw,tv_org+3
                        012204    5-25  	equ	search,tv_org+4
                        012205    5-26  	equ	makefil,tv_org+5
                        012206    5-27  	equ	ldcom,tv_org+6
                        012207    5-28  	equ	getsec,tv_org+7
                        012210    5-29  	equ	cvinit,tv_org+8
                        012211    5-30  	equ	rdev,tv_org+9
                        012212    5-31  	equ	wdev,tv_org+10
                        012213    5-32  	equ	phybos,tv_org+11
                        012214    5-33  	equ	bosphy,tv_org+12
                        012215    5-34  	equ	phyadd,tv_org+13
                        012216    5-35  	equ	mulbos,tv_org+14
                        012217    5-36  	equ	bosmul,tv_org+15
                        012220    5-37  	equ	lookup_devmodel,tv_org+16
                        012221    5-38  	equ	makesdw,tv_org+17
                        012222    5-39  	equ	argbos,tv_org+18
                        012223    5-40  	equ	argmul,tv_org+19
                        012224    5-41  	equ	amdvt,tv_org+20
                        012225    5-42  	equ	amfirst,tv_org+21
                        012226    5-43  	equ	amlast,tv_org+22
                        012227    5-44  	equ	cvnamla,tv_org+23
                        012230    5-45  	equ	sect_per_cyl_list,tv_org+24
                        012231    5-46  	equ	sect_per_dev_list,tv_org+25
                        012232    5-47  	equ	rec_per_dev_list,tv_org+26
                        012233    5-48  	equ	amaxio,tv_org+27
                        012234    5-49  	equ	rdsec,tv_org+28
                        012235    5-50  	equ	wtsec,tv_org+29
                        012236    5-51  	equ	disk_brief,tv_org+30
                        012237    5-52  	equ	itaper,tv_org+31
                        012240    5-53  	equ	itapew,tv_org+32
                        012241    5-54  	equ	erpt,tv_org+33
                        012242    5-55  	equ	ercv,tv_org+34
                        012243    5-56  	equ	erbuf,tv_org+35
                        012244    5-57  	equ	type,tv_org+36
                        012245    5-58  	equ	ttyinit,tv_org+37
                        012246    5-59  	equ	readcd,tv_org+38
                        012247    5-60  	equ	readtty,tv_org+39
                        012250    5-61  	equ	getprt,tv_org+40
                        012251    5-62  	equ	punch,tv_org+41
                        012252    5-63  	equ	octwd,tv_org+42
                        012253    5-64  	equ	geas,tv_org+43
                        012254    5-65  	equ	geastab,tv_org+44
                        012255    5-66  	equ	asge,tv_org+45
                        012256    5-67  	equ	asgetab,tv_org+46
                        012257    5-68  	equ	ljust,tv_org+47
                        012260    5-69  	equ	rjust,tv_org+48
                        012261    5-70  	equ	bzel,tv_org+49
                        012262    5-71  	equ	stripa,tv_org+50
                        012263    5-72  	equ	stripg,tv_org+51
                        012264    5-73  	equ	getconf,tv_org+52
                        012265    5-74  	equ	getmore,tv_org+53
                        012266    5-75  	equ	getperiph,tv_org+54
                        012267    5-76  	equ	rdclock,tv_org+55
                        012270    5-77  	equ	cvclock,tv_org+56
                        012271    5-78  	equ	init_io,tv_org+57
                        012272    5-79  	equ	connect_iom,tv_org+58
                        012273    5-80  	equ	getmpc,tv_org+59
                        012274    5-81  	equ	check_status,tv_org+60
                        012275    5-82  	equ	get_special_interrupt,tv_org+61
                        012276    5-83  	equ	get_status_interrupt,tv_org+62
                        012277    5-84  	equ	xio_wait,tv_org+63
                        012300    5-85  	equ	initint,tv_org+64
                        012301    5-86  	equ	wantflt,tv_org+65
                        012302    5-87  	equ	intno,tv_org+66
                        012303    5-88  	equ	intrpts1,tv_org+67
                        012304    5-89  	equ	hexwd,tv_org+68
                        012305    5-90  	equ	find_disk,tv_org+69
                        012306    5-91  	equ	find_root,tv_org+70
                        012307    5-92  	equ	find_part,tv_org+71
                        012310    5-93  	equ	check_status_no_stat,tv_org+72
                        012311    5-94  	equ	check_special_status,tv_org+73
                        012312    5-95  	equ	check_cpu_type,tv_org+74
                        012313    5-96  	equ	getportinfo,tv_org+75
                                  5-97  
                                  5-98  " End of include file ...... bos_tv.incl.alm
                                  5-99  
                                   101  
                                   102  	include	bos_common
                                   6-1  "
                                   6-2  " Begin include file ...... bos_common.incl.alm
                                   6-3  " Modified on 8/31/76 by N. I. Morris
                                   6-4  " Modified on 9/01/80 by Sherman D. Sprague for DPS8 operation
                                   6-5  " Modified on 5/26/82 by Sherman D. Sprague to lengthen config size
                                   6-6  " Modified on 3/01/83 by Sherman D. Sprague to lengthen dirlen
                                   6-7  "	MACHINE CONDITIONS AREA
                                   6-8  "		Its length is "storlen".
                                   6-9  
                        000000    6-10  	equ	amptwregs,0	Ass. Mem  PTW registers
                        000100    6-11  	equ	amptwptr,64	Ass. Mem  PTW pointers
                        000200    6-12  	equ	amsdwregs,128	Ass. Mem  SDW registers
                        000400    6-13  	equ	amsdwptr,256	Ass. Mem  SDW pointers
                        000500    6-14  	equ	ouhist,320	operations hist regs
                        000700    6-15  	equ	cuhist,448	control unit hist regs
                        001100    6-16  	equ	eishist,576	eis hist regs
                        001300    6-17  	equ	aphist,704	appending unit hist regs
                        001500    6-18  	equ	prs,832		pointer regs
                        001520    6-19  	equ	regs,848		sreg
                        001530    6-20  	equ	low_order_port,856	port to read clock from
                        001532    6-21  	equ	mctime,858	bootload memory clock
                        001540    6-22  	equ	scu,864
                        001550    6-23  	equ	mcm,872		memory masks 8 ports 
                        001570    6-24  	equ	dbr,888
                        001572    6-25  	equ	intrpts,890	waiting interrupts
                        001573    6-26  	equ	bar,891		bar
                        001574    6-27  	equ	modereg,892	processor & cache mode registers
                        001576    6-28  	equ	faultreg,894	processor fault register
                        001600    6-29  	equ	ptrlen,896	pointer-lengths EIS 0 mod 8
                        001610    6-30  	equ	coreblocks,904	array of port information
                                  6-31  "				Bits  0-17 => num 1st 64-word block
                                  6-32  "				Bits 18-35 => num of 64-word blocks
                                  6-33  "				(-1) => no mem on this port
                        001620    6-34  	equ	lowport_cfg,912	Saved CFG from bootload SCU
                                  6-35  
                        002000    6-36  	equ	storlen,1024
                                  6-37  
                                  6-38  
                                  6-39  
                                  6-40  "	BOS COMMAND DIRECTORY
                                  6-41  "		Its length is "dirlen".
                                  6-42  
                        002000    6-43  	equ	dir,1024		( 0-23) => sector # of first sector on BOS disk
                                  6-44  "				(24-35) => # of sectors in BOS common
                        002001    6-45  	equ	used,dir+1	( 0-23) => # of next available sector on BOS disk
                        002002    6-46  	equ	useable,dir+2	( 0-23) => first unavailable sector on BOS disk
                        002003    6-47  	equ	corearea,dir+3	( 0-23) => starting sector of Multics core image
                                  6-48  "				(24-35) => # of sectors in Multics core image
                        002004    6-49  	equ	setuparea,dir+4	Sector and length of setup
                        002005    6-50  	equ	utilarea,dir+5	where utility package is kept
                        002010    6-51  	equ	iom_mxbase,dir+8	IOM IMW area address
                        002011    6-52  	equ	iom_mbbase,dir+9	IOM mailbox base
                        002012    6-53  	equ	bos_dvt,dir+10	BOS disk loc: (o3/iom,o6/chn,o9/drive,o18/devtype)
                        002013    6-54  	equ	unitgroup,dir+11	disk unitgroup (device no. or area no.)
                        002014    6-55  	equ	diskchanno,dir+12	channel to be used for disk
                        002015    6-56  	equ	tapechanno,dir+13	channel # for tapes
                        002016    6-57  	equ	rdrchanno,dir+14	channel number for card reader
                        002017    6-58  	equ	ttychanno,dir+15	channel # for operator's tty
                        002020    6-59  	equ	quietsw,dir+16	if on, don't print card and macro commands
                        002021    6-60  	equ	inputsw,dir+17	read from tty, cards, macros
                        002022    6-61  	equ	macroloc,dir+18	disk addr, buffer index of macro file
                        002023    6-62  	equ	fdump_state,dir+19	completion flag for last FDUMP
                        002024    6-63  	equ	d355_state,dir+20	= 1 if DataNet 355 loaded successfully
                        002025    6-64  	equ	skipsw,dir+21	if on, skip runcom lines
                        002026    6-65  	equ	ttypmtsw,dir+22	if on, prompt
                        002027    6-66  	equ	curtcmd,dir+23	current bos command
                        002030    6-67  	equ	readysw,dir+24	if on, print ready message
                        002032    6-68  	equ	cmdlst,dir+26	list of commands
                                  6-69  
                        000600    6-70  	equ	dirlen,384
                                  6-71  
                                  6-72  
                                  6-73  
                                  6-74  "	MACRO BUFFER AREA
                                  6-75  
                        002600    6-76  	equ	macrobuf,dir+dirlen  io buffer for macro files
                        002700    6-77  	equ	macroline,macrobuf+64  runcom command line
                        002716    6-78  	equ	macroargs,macroline+14  argument descriptors for runcom
                                  6-79  
                                  6-80  
                                  6-81  
                                  6-82  "	CONFIGURATION CARD AREA
                                  6-83  "		Its length is 2048 words.
                                  6-84  
                        003000    6-85  	equ	conf,macrobuf+128	start of configuration info
                        007000    6-86  	equ	econf,conf+2048	end of configuration info
                        000020    6-87  	equ	confl,16		length of each line
                                  6-88  
                                  6-89  
                        007000    6-90  	equ	seg6length,econf	length of bos_common area segment
                                  6-91  
                                  6-92  " End of include file ...... bos_common.incl.alm
                                  6-93  
                                   103  
                                   104  	end
LITERALS
     
    000110  aa   202021 474524 
    000111  aa   234645 633145 
NAME DEFINITIONS FOR ENTRY POINTS AND SEGDEFS

    000112  5a   000003 000000 
    000113  5a   000016 600000 
    000114  aa   000000 000000 
    000115  55   000007 000002 
    000116  5a   000002 400003 
    000117  55   000006 000007 
    000120  aa  003 145 163 144
    000121  55   000002 000003 
    000122  6a   000000 400002 
    000123  55   000012 000003 
    000124  aa  014 163 171 155         symbol_table
    000125  aa  142 157 154 137
    000126  aa  164 141 142 154
    000127  aa  145 000 000 000

DEFINITIONS HASH TABLE

    000130  aa   000000 000015 
    000131  aa   000000 000000 
    000132  aa   000000 000000 
    000133  aa   000000 000000 
    000134  aa   000000 000000 
    000135  aa   000000 000000 
    000136  aa   000000 000000 
    000137  5a   000007 000000 
    000140  aa   000000 000000 
    000141  aa   000000 000000 
    000142  aa   000000 000000 
    000143  aa   000000 000000 
    000144  aa   000000 000000 
    000145  aa   000000 000000 

NO EXTERNAL NAMES

NO TRAP POINTER WORDS

TYPE PAIR BLOCKS

    000146  aa   000001 000000 
    000147  aa   000000 000000 

INTERNAL EXPRESSION WORDS

LINKAGE INFORMATION
      
    000000  aa   000000 000000 
    000001  0a   000112 000000 
    000002  aa   000000 000000 
    000003  aa   000000 000000 
    000004  aa   000000 000000 
    000005  aa   000000 000000 
    000006  22   000010 000010 
    000007  a2   000000 000000 
SYMBOL INFORMATION
     
SYMBOL TABLE HEADER
     
    000000  aa   000000 000001 
    000001  aa   163171 155142 
    000002  aa   164162 145145 
    000003  aa   000000 000004 
    000004  aa   000000 112143 
    000005  aa   305203 523135 
    000006  aa   000000 112272 
    000007  aa   224532 654151 
    000010  aa   141154 155040 
    000011  aa   040040 040040 
    000012  aa   000024 000040 
    000013  aa   000034 000040 
    000014  aa   000044 000100 
    000015  aa   000002 000002 
    000016  aa   000064 000000 
    000017  aa   000000 000233 
    000020  aa   000000 000206 
    000021  aa   000000 000216 
    000022  aa   000221 000206 
    000023  aa   000064 000000 
    000024  aa   101114 115040 
    000025  aa   126145 162163 
    000026  aa   151157 156040 
    000027  aa   040066 056066 
    000030  aa   040040 116157 
    000031  aa   166145 155142 
    000032  aa   145162 040061 
    000033  aa   071070 062040 
    000034  aa   110157 154155 
    000035  aa   163164 145144 
    000036  aa   164056 123171 
    000037  aa   163115 141151 
    000040  aa   156164 056141 
    000041  aa   040040 040040 
    000042  aa   040040 040040 
    000043  aa   040040 040040 
    000044  aa   154151 163164 
    000045  aa   040040 040040 
    000046  aa   040040 040040 
    000047  aa   040040 040040 
    000050  aa   040040 040040 
    000051  aa   040040 040040 
    000052  aa   040040 040040 
    000053  aa   040040 040040 
    000054  aa   040040 040040 
    000055  aa   040040 040040 
    000056  aa   040040 040040 
    000057  aa   040040 040040 
    000060  aa   040040 040040 
    000061  aa   040040 040040 
    000062  aa   040040 040040 
    000063  aa   040040 040040 
    000064  aa   000000 000001 
    000065  aa   000000 000007 
    000066  aa   000122 000024 
    000067  aa   122721 273012 
    000070  aa   000000 112272 
    000071  aa   215465 400000 
    000072  aa   000127 000040 
    000073  aa   113400 415301 
    000074  aa   000000 111341 
    000075  aa   220414 400000 
    000076  aa   000137 000030 
    000077  aa   077377 110471 
    000100  aa   000000 107737 
    000101  aa   746246 400000 
    000102  aa   000145 000042 
    000103  aa   112204 105031 
    000104  aa   000000 111221 
    000105  aa   055103 400000 
    000106  aa   000156 000032 
    000107  aa   112375 747471 
    000110  aa   000000 111240 
    000111  aa   207531 200000 
    000112  aa   000165 000040 
    000113  aa   110235 072677 
    000114  aa   000000 111024 
    000115  aa   524460 600000 
    000116  aa   000175 000044 
    000117  aa   121622 277475 
    000120  aa   000000 112162 
    000121  aa   321563 400000 
    000122  aa   076163 160145          >spec>h>3.17>esd.alm
    000123  aa   143076 150076 
    000124  aa   063056 061067 
    000125  aa   076145 163144 
    000126  aa   056141 154155 
    000127  aa   076154 144144          >ldd>bos>include>bosequ.incl.alm
    000130  aa   076142 157163 
    000131  aa   076151 156143 
    000132  aa   154165 144145 
    000133  aa   076142 157163 
    000134  aa   145161 165056 
    000135  aa   151156 143154 
    000136  aa   056141 154155 
    000137  aa   076154 144144          >ldd>include>mc.incl.alm
    000140  aa   076151 156143 
    000141  aa   154165 144145 
    000142  aa   076155 143056 
    000143  aa   151156 143154 
    000144  aa   056141 154155 
    000145  aa   076154 144144          >ldd>bos>include>apnd_equ.incl.alm
    000146  aa   076142 157163 
    000147  aa   076151 156143 
    000150  aa   154165 144145 
    000151  aa   076141 160156 
    000152  aa   144137 145161 
    000153  aa   165056 151156 
    000154  aa   143154 056141 
    000155  aa   154155 040040 
    000156  aa   076154 144144          >ldd>include>fgbx.incl.alm
    000157  aa   076151 156143 
    000160  aa   154165 144145 
    000161  aa   076146 147142 
    000162  aa   170056 151156 
    000163  aa   143154 056141 
    000164  aa   154155 040040 
    000165  aa   076154 144144          >ldd>bos>include>bos_tv.incl.alm
    000166  aa   076142 157163 
    000167  aa   076151 156143 
    000170  aa   154165 144145 
    000171  aa   076142 157163 
    000172  aa   137164 166056 
    000173  aa   151156 143154 
    000174  aa   056141 154155 
    000175  aa   076154 144144          >ldd>bos>include>bos_common.incl.alm
    000176  aa   076142 157163 
    000177  aa   076151 156143 
    000200  aa   154165 144145 
    000201  aa   076142 157163 
    000202  aa   137143 157155 
    000203  aa   155157 156056 
    000204  aa   151156 143154 
    000205  aa   056141 154155 
               MULTICS ASSEMBLY CROSS REFERENCE LISTING

   Value        Symbol                   Source file   Line number

       12233    amaxio                   bos_tv:        48.
       12224    amdvt                    bos_tv:        41.
       12225    amfirst                  bos_tv:        42.
       12226    amlast                   bos_tv:        43.
         100    amptwptr                 bos_common:    11.
           0    amptwregs                bos_common:    10.
         400    amsdwptr                 bos_common:    13.
         200    amsdwregs                bos_common:    12.
        1300    aphist                   bos_common:    17.
        7032    apnd                     apnd_equ:      27.
        7000    apnd_org                 esd:           41,
                                         apnd_equ:       8,   10,   11,   12,   13,   14,   15,   16,   17,   18,   19,   20,
                                                        21,   23,   24,   25,   26,   27,   28,   29,   30,   31,   32,   33,
                                                        34,   35,   36,   37,   38,   39,   40.
       12040    arg                      bos_tv:        14,   15.
       12222    argbos                   bos_tv:        39.
          17    arglen                   bosequ:        17,
                                         bos_tv:        15,   16,   17.
       12223    argmul                   bos_tv:        40.
       12201    arg_count                bos_tv:        22.
       12255    asge                     bos_tv:        66.
       12256    asgetab                  bos_tv:        67.
        1573    bar                      bos_common:    26.
           2    bf                       bosequ:         9.
        7012    bosdmp                   apnd_equ:      16.
       12217    bosmul                   bos_tv:        36.
       12214    bosphy                   bos_tv:        33.
        2012    bos_dvt                  bos_common:    53.
       12261    bzel                     bos_tv:        70.
        7022    castap                   apnd_equ:      21.
       12312    check_cpu_type           bos_tv:        95.
       12311    check_special_status     bos_tv:        94.
       12274    check_status             bos_tv:        81.
       12310    check_status_no_stat     bos_tv:        93.
        7000    cmdbr                    esd:           50,
                                         apnd_equ:      10.
        2032    cmdlst                   bos_common:    68.
        7020    cmpsdw                   apnd_equ:      20.
           6    com                      esd:           60,   64,   66,   68,
                                         bosequ:        14.
        7036    comp                     apnd_equ:      31.
        3000    conf                     bos_common:    85,   86.
          20    confl                    bos_common:    87.
       12272    connect_iom              bos_tv:        79.
        2003    corearea                 bos_common:    47.
        1610    coreblocks               bos_common:    30.
         700    cuhist                   bos_common:    15.
        2027    curtcmd                  bos_common:    66.
       12270    cvclock                  bos_tv:        77.
       12210    cvinit                   esd:           36,
                                         bos_tv:        29.
       12227    cvnamla                  bos_tv:        44.
        2024    d355_state               bos_common:    63.
       12060    darg                     bos_tv:        15,   16.
        1570    dbr                      bos_common:    24.
        2000    dir                      bos_common:    43,   45,   46,   47,   49,   50,   51,   52,   53,   54,   55,   56,
                                                        57,   58,   59,   60,   61,   62,   63,   64,   65,   66,   67,   68,   76.
         600    dirlen                   bos_common:    70,   76.
        2014    diskchanno               bos_common:    55.
       12236    disk_brief               bos_tv:        51.
         100    dmpbufl                  esd:           29,   52.
           0    ds                       bosequ:         7.
       12100    earg                     bos_tv:        16,   17.
        7000    econf                    bos_common:    86,   90.
        1100    eishist                  bos_common:    16.
       12243    erbuf                    bos_tv:        56.
       12242    ercv                     bos_tv:        55.
       12241    erpt                     esd:           74,   81,
                                         bos_tv:        54.
          36    esdnn                    esd:           47,   74.
         102    esd_name                 esd:           56,   89.
           0    esd_offset               esd:           27,   62.
        1576    faultreg                 bos_common:    28.
        2023    fdump_state              bos_common:    62.
        7037    fetch                    apnd_equ:      32.
        7010    fetchin                  apnd_equ:      14.
        7004    fetchout                 apnd_equ:      12.
        7041    fetch_use_buffer         apnd_equ:      34.
           5    fgb                      esd:           45,   49,
                                         bosequ:        13.
       20000    fgbx.alert               fgbx:          33.
          77    fgbx.bos_entry_mask      fgbx:          35.
           0    fgbx.bos_entry_shift     fgbx:          34.
      200000    fgbx.call_bos            fgbx:          30.
           2    fgbx.cpus                fgbx:          20.
      400000    fgbx.flags               fgbx:          16.
           0    fgbx.flags_word          fgbx:          15.
          40    fgbx.fnp_blast           fgbx:          41.
          16    fgbx.hc_dbr              esd:           49,
                                         fgbx:          39.
       40000    fgbx.mess                fgbx:          32.
          20    fgbx.message             fgbx:          40.
         571    fgbx.ports_mask          fgbx:          23.
          34    fgbx.ports_shift         fgbx:          22.
           3    fgbx.rtb                 esd:           45,
                                         fgbx:          27.
           4    fgbx.sentinel            fgbx:          37.
      100000    fgbx.shut                fgbx:          31.
           1    fgbx.slt_segno           fgbx:          18.
      400000    fgbx.ssenb               esd:           46,
                                         fgbx:          29.
          14    fgbx.sst_sdw             fgbx:          38.
           7    fgbx.tags_mask           fgbx:          25.
          25    fgbx.tags_shift          fgbx:          24.
         100    fgbx_size                fgbx:          13.
       12305    find_disk                bos_tv:        90.
       12307    find_part                bos_tv:        92.
       12306    find_root                bos_tv:        91.
        2000    firmware_bit             bosequ:        20.
       12120    fltscu                   bos_tv:        17.
       12253    geas                     bos_tv:        64.
       12254    geastab                  bos_tv:        65.
        7034    get                      apnd_equ:      29.
       12264    getconf                  bos_tv:        73.
        7026    getinit                  esd:           53,
                                         apnd_equ:      23.
       12265    getmore                  bos_tv:        74.
       12273    getmpc                   bos_tv:        80.
       12266    getperiph                bos_tv:        75.
       12313    getportinfo              bos_tv:        96.
       12250    getprt                   bos_tv:        61.
        7027    getsdw                   apnd_equ:      24.
       12207    getsec                   bos_tv:        28.
        7043    getsltname               apnd_equ:      36.
        7030    getwd                    apnd_equ:      25.
       12275    get_special_interrupt    bos_tv:        82.
       12276    get_status_interrupt     bos_tv:        83.
        7031    grab                     apnd_equ:      26.
        7002    hcdbr                    apnd_equ:      11.
       12304    hexwd                    bos_tv:        89.
       12300    initint                  bos_tv:        85.
       12271    init_io                  esd:           35,
                                         bos_tv:        78.
        2021    inputsw                  bos_common:    60.
       12302    intno                    bos_tv:        87.
        1572    intrpts                  esd:           66,
                                         bos_common:    25.
       12303    intrpts1                 bos_tv:        88.
        2011    iom_mbbase               bos_common:    52.
        2010    iom_mxbase               bos_common:    51.
       12237    itaper                   bos_tv:        52.
       12240    itapew                   bos_tv:        53.
       12206    ldcom                    esd:           42,
                                         bos_tv:        27.
       12001    line                     bos_tv:        13,   14.
       12257    ljust                    bos_tv:        68.
       12220    lookup_devmodel          bos_tv:        37.
        1620    lowport_cfg              esd:           68,
                                         bos_common:    34.
        1530    low_order_port           bos_common:    20.
        2716    macroargs                bos_common:    78.
        2600    macrobuf                 bos_common:    76,   77,   85.
        2700    macroline                bos_common:    77,   78.
        2022    macroloc                 bos_common:    61.
       12205    makefil                  bos_tv:        26.
       12221    makesdw                  bos_tv:        38.
      300000    mc.cpu_type_mask         mc:            22.
           3    mc.cpu_type_shift        mc:            25.
          46    mc.cpu_type_word         mc:            21.
          50    mc.eis_info              mc:            11.
          43    mc.errcode               mc:            17.
          46    mc.ext_fault_reg         mc:            23.
       77774    mc.ext_fault_reg_mask    mc:            24.
          45    mc.fault_reg             mc:            19.
          46    mc.fault_time            mc:            20.
          44    mc.fim_temp              mc:            18.
          42    mc.ips_temp              mc:            16.
          40    mc.mask                  mc:            15.
           0    mc.prs                   mc:             8.
          20    mc.regs                  mc:             9.
          30    mc.scu                   mc:            10.
          30    mc.scu.apu_stat_word     mc:            48.
          35    mc.scu.ca_word           mc:           207.
          32    mc.scu.cpu_no_word       mc:           138.
          35    mc.scu.cpu_tag_word      mc:           231.
          35    mc.scu.cu_stat_word      mc:           211.
          32    mc.scu.delta_word        mc:           144.
          30    mc.scu.fault_cntr_word   mc:            66.
          31    mc.scu.fault_data_word   mc:            74.
          34    mc.scu.ilc_word          mc:           182.
          34    mc.scu.indicators_word   mc:           186.
          31    mc.scu.port_stat_word    mc:           108.
          30    mc.scu.ppr.prr_word      mc:            33.
          30    mc.scu.ppr.psr_word      mc:            38.
          30    mc.scu.ppr.p_word        mc:            43.
          33    mc.scu.tpr.tbr_word      mc:           174.
          32    mc.scu.tpr.trr_word      mc:           128.
          32    mc.scu.tpr.tsr_word      mc:           133.
          33    mc.scu.tsr_stat_word     mc:           152.
        1550    mcm                      bos_common:    23.
        1532    mctime                   bos_common:    21.
           7    mem                      esd:           72,   79,   86,
                                         bosequ:        15.
        1574    modereg                  bos_common:    27.
       12216    mulbos                   bos_tv:        35.
       12202    nextline                 bos_tv:        23.
       12203    nlraw                    bos_tv:        24.
          62    no_esd                   esd:           43,   57,   81.
       12252    octwd                    bos_tv:        63.
         500    ouhist                   bos_common:    14.
       12000    pagectl                  bos_tv:        12,   13.
        7013    pagesw                   apnd_equ:      17.
        7044    pd_check                 apnd_equ:      37.
        7046    pd_getptr                apnd_equ:      39.
        7045    pd_modify                apnd_equ:      38.
           3    pgm                      bosequ:        10.
       12215    phyadd                   bos_tv:        34.
       12213    phybos                   bos_tv:        32.
        7014    pmlsw                    apnd_equ:      18.
        1500    prs                      bos_common:    18.
        1600    ptrlen                   bos_common:    29.
       12251    punch                    bos_tv:        62.
        7035    put                      apnd_equ:      30.
        7047    pvt_to_devt              apnd_equ:      40.
        2020    quietsw                  bos_common:    59.
       12267    rdclock                  bos_tv:        76.
       12211    rdev                     bos_tv:        30.
        2016    rdrchanno                bos_common:    57.
       12234    rdsec                    bos_tv:        49.
       12246    readcd                   bos_tv:        59.
       12247    readtty                  bos_tv:        60.
        2030    readysw                  bos_common:    67.
        7006    read_args                apnd_equ:      13.
       12232    rec_per_dev_list         bos_tv:        47.
        1520    regs                     bos_common:    19.
       12260    rjust                    bos_tv:        69.
        4000    runcom_bit               bosequ:        19.
       12200    scan                     bos_tv:        21.
        1540    scu                      esd:           60,   64,
                                         bos_common:    22.
        2000    scu.apu.dsptw            mc:            57.
          10    scu.apu.fabs             mc:            64.
          20    scu.apu.fanp             mc:            63.
          40    scu.apu.fap              mc:            62.
        4000    scu.apu.pi_ap            mc:            56.
         200    scu.apu.ptw              mc:            60.
         100    scu.apu.ptw2             mc:            61.
       20000    scu.apu.ptwm             mc:            54.
       10000    scu.apu.pt_on            mc:            55.
      100000    scu.apu.sdwm             mc:            52.
        1000    scu.apu.sdwnp            mc:            58.
         400    scu.apu.sdwp             mc:            59.
       40000    scu.apu.sd_on            mc:            53.
      200000    scu.apu.xsf              mc:            51.
           0    scu.apu_stat_word        mc:            49.
          22    scu.ca_shift             mc:           209.
           5    scu.ca_word              mc:           208.
         700    scu.con_chan_mask        mc:           117.
           6    scu.con_chan_shift       mc:           118.
         700    scu.cpu_no_mask          mc:           141.
           2    scu.cpu_no_word          mc:           139.
           6    scu.cpu_shift            mc:           142.
           7    scu.cpu_tag_mask         mc:           234.
           5    scu.cpu_tag_word         mc:           232.
         100    scu.cu.if                mc:           229.
        1000    scu.cu.poa               mc:           226.
       10000    scu.cu.pon               mc:           221.
       20000    scu.cu.pot               mc:           220.
      100000    scu.cu.rd                mc:           217.
      400000    scu.cu.rf                mc:           214.
         400    scu.cu.rfi               mc:           227.
       40000    scu.cu.rl                mc:           218.
      200000    scu.cu.rpt               mc:           216.
        4000    scu.cu.xde               mc:           223.
        2000    scu.cu.xdo               mc:           224.
           5    scu.cu_stat_word         mc:           212.
          77    scu.delta_mask           mc:           147.
           2    scu.delta_word           mc:           145.
          36    scu.even_inst_word       mc:           239.
           7    scu.fault_cntr_mask      mc:            69.
           0    scu.fault_cntr_word      mc:            67.
           1    scu.fault_data_word      mc:            75.
          10    scu.fd.am_er             mc:            91.
         200    scu.fd.boc               mc:            87.
          40    scu.fd.crt               mc:            89.
      100000    scu.fd.e_off             mc:            79.
      100000    scu.fd.ia_im             mc:           102.
         100    scu.fd.inret             mc:            88.
      200000    scu.fd.ioc               mc:           101.
       20000    scu.fd.ipr               mc:           104.
      400000    scu.fd.iro               mc:            77.
      400000    scu.fd.isn               mc:           100.
       40000    scu.fd.isp               mc:           103.
       10000    scu.fd.nea               mc:           105.
        2000    scu.fd.no_ga             mc:            84.
         400    scu.fd.ocall             mc:            86.
        1000    scu.fd.ocb               mc:            85.
      200000    scu.fd.oeb               mc:            78.
      400000    scu.fd.onc_1             mc:            96.
      200000    scu.fd.onc_2             mc:            97.
        4000    scu.fd.oobb              mc:           106.
           4    scu.fd.oosb              mc:            92.
       40000    scu.fd.orb               mc:            80.
       10000    scu.fd.owb               mc:            82.
           1    scu.fd.parl              mc:            94.
           2    scu.fd.paru              mc:            93.
          20    scu.fd.ralr              mc:            90.
       20000    scu.fd.r_off             mc:            81.
        4000    scu.fd.w_off             mc:            83.
           1    scu.fi_flag_mask         mc:           123.
          76    scu.fi_num_mask          mc:           120.
           1    scu.fi_num_shift         mc:           121.
        7000    scu.iac_mask             mc:           114.
          11    scu.iac_shift            mc:           115.
      170000    scu.ial_mask             mc:           111.
          14    scu.ial_shift            mc:           112.
          22    scu.ilc_shift            mc:           184.
           4    scu.ilc_word             esd:           64,
                                         mc:           183.
           4    scu.indicators_word      mc:           187.
          20    scu.ir.abs               mc:           202.
         200    scu.ir.bm                esd:           63,
                                         mc:           199.
      100000    scu.ir.carry             mc:           191.
       20000    scu.ir.eovf              mc:           193.
       10000    scu.ir.eufl              mc:           194.
          40    scu.ir.mif               mc:           201.
      200000    scu.ir.neg               mc:           190.
        4000    scu.ir.oflm              mc:           195.
       40000    scu.ir.ovfl              mc:           192.
        1000    scu.ir.par               mc:           197.
         400    scu.ir.parm              mc:           198.
        2000    scu.ir.tro               mc:           196.
         100    scu.ir.tru               mc:           200.
      400000    scu.ir.zero              mc:           189.
          37    scu.odd_inst_word        mc:           241.
           1    scu.port_stat_word       mc:           109.
      400000    scu.ppr.p                esd:           59,
                                         mc:            45.
      700000    scu.ppr.prr_mask         mc:            35.
          41    scu.ppr.prr_shift        mc:            36.
           0    scu.ppr.prr_word         mc:            34.
       77777    scu.ppr.psr_mask         mc:            40.
          22    scu.ppr.psr_shift        mc:            41.
           0    scu.ppr.psr_word         esd:           60,
                                         mc:            39.
           0    scu.ppr.p_word           mc:            44.
          77    scu.tpr.tbr_mask         mc:           177.
           3    scu.tpr.tbr_word         mc:           175.
      700000    scu.tpr.trr_mask         mc:           130.
          41    scu.tpr.trr_shift        mc:           131.
           2    scu.tpr.trr_word         mc:           129.
       77777    scu.tpr.tsr_mask         mc:           135.
          22    scu.tpr.tsr_shift        mc:           136.
           2    scu.tpr.tsr_word         mc:           134.
      700000    scu.tsna.prn_mask        mc:           159.
          17    scu.tsna.prn_shift       mc:           160.
       40000    scu.tsna.prv             mc:           161.
      740000    scu.tsna_mask            mc:           158.
       34000    scu.tsnb.prn_mask        mc:           164.
          13    scu.tsnb.prn_shift       mc:           165.
        2000    scu.tsnb.prv             mc:           166.
       36000    scu.tsnb_mask            mc:           163.
        1600    scu.tsnc.prn_mask        mc:           169.
           7    scu.tsnc.prn_shift       mc:           170.
         100    scu.tsnc.prv             mc:           171.
          13    scu.tsnc_mask            mc:           168.
      777700    scu.tsr_stat_mask        mc:           155.
           6    scu.tsr_stat_shift       mc:           156.
           3    scu.tsr_stat_word        mc:           153.
       12204    search                   bos_tv:        25.
       12230    sect_per_cyl_list        bos_tv:        45.
       12231    sect_per_dev_list        bos_tv:        46.
        7000    seg6length               bos_common:    90.
        2004    setuparea                bos_common:    49.
        2025    skipsw                   bos_common:    64.
        7042    sltsearch                esd:           55,
                                         apnd_equ:      35.
        7011    sltseg                   apnd_equ:      15.
        7016    sstsdw                   apnd_equ:      19.
        2000    storlen                  bos_common:    36.
       12262    stripa                   bos_tv:        71.
       12263    stripg                   bos_tv:        72.
        2015    tapechanno               bos_common:    56.
           1    tmp                      bosequ:         8.
        2017    ttychanno                bos_common:    58.
       12245    ttyinit                  esd:           37,
                                         bos_tv:        58.
        2026    ttypmtsw                 bos_common:    65.
          57    ttyrequest               esd:           38,   76.
       12200    tv_org                   bos_tv:        19,   21,   22,   23,   24,   25,   26,   27,   28,   29,   30,   31,
                                                        32,   33,   34,   35,   36,   37,   38,   39,   40,   41,   42,   43,
                                                        44,   45,   46,   47,   48,   49,   50,   51,   52,   53,   54,   55,
                                                        56,   57,   58,   59,   60,   61,   62,   63,   64,   65,   66,   67,
                                                        68,   69,   70,   71,   72,   73,   74,   75,   76,   77,   78,   79,
                                                        80,   81,   82,   83,   84,   85,   86,   87,   88,   89,   90,   91,
                                                        92,   93,   94,   95,   96.
       12244    type                     bos_tv:        57.
        7033    unapnd                   apnd_equ:      28.
        7040    unfetch                  apnd_equ:      33.
        2013    unitgroup                bos_common:    54.
        2002    useable                  bos_common:    46.
        2001    used                     bos_common:    45.
        2005    utilarea                 bos_common:    50.
       12000    utilorg                  bosequ:        22,
                                         bos_tv:        12,   19.
       12301    wantflt                  bos_tv:        86.
       12212    wdev                     bos_tv:        31.
       12235    wtsec                    bos_tv:        50.
          33    x2                       esd:           33,   70,   77,   84.
       12277    xio_wait                 bos_tv:        84.
           4    xs1                      bosequ:        11.
           5    xs2                      bosequ:        12.


NO FATAL ERRORS


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
