ASSEMBLY LISTING OF SEGMENT >spec>h>3.17>ptpkg.alm                       
ASSEMBLED ON:	11/29/83  1530.7 mst Tue
OPTIONS USED:	list 
ASSEMBLED BY:	ALM Version  6.6  November 1982 
ASSEMBLER CREATED:	09/21/83  1227.3 mst Wed

                                     1  " ***********************************************************
                                     2  " *                                                         *
                                     3  " * Copyright, (C) Honeywell Information Systems Inc., 1982 *
                                     4  " *                                                         *
                                     5  " ***********************************************************
                                     6  " PTPKG - Print Package for Producing On-line Dumps.
                                     7  "	Modified 9/79 by R.J.C. Kissel try 800, 1600 and 6250 bpi densities.
                                     8  
                                     9  "  ******************************************************
                                    10  "  *                                                    *
                                    11  "  *                                                    *
                                    12  "  * Copyright (c) 1972 by Massachusetts Institute of   *
                                    13  "  * Technology and Honeywell Information Systems, Inc. *
                                    14  "  *                                                    *
                                    15  "  *                                                    *
                                    16  "  ******************************************************
                                    17  
                                    18  " Last modified 2/11/81 by Sherman D. Sprague for support of tst3bt
                                    19  
    000000                          20  	name	ptpkg
                                    21  
                                    22  
                        000026      23  	equ	words_per_line,22		Num words per line.
                                    24  
                                    25  
                                    26  	include	bosequ
                                   1-1  " Begin include file ...... bosequ.incl.alm
                                   1-2  " Modified 8/25/76 by N. I. Morris
                                   1-3  " Modified 8/79 by R.J.C. Kissel to expand BOS.
                                   1-4  " Modified November 1981 by C. Hornig to add pgmorg.
                                   1-5  " Modified October 1982 by J. Bongiovanni to take it out
                                   1-6  
                        000000     1-7  	bool	ds,0		descriptor segment
                        000001     1-8  	bool	tmp,1		temp seg
                        000002     1-9  	bool	bf,2		buffer segment for save/restor
                        000003    1-10  	bool	pgm,3		program in control
                        000004    1-11  	bool	xs1,4		spare segment
                        000005    1-12  	bool	xs2,5		spare segment
                        000005    1-13  	bool	fgb,5		flagbox segment
                        000006    1-14  	bool	com,6		common
                        000007    1-15  	bool	mem,7		all memory
                                  1-16  
                        000017    1-17  	equ	arglen,15		max number of args from scan
                                  1-18  
                        004000    1-19  	bool	runcom_bit,4000	runcom bit in dir entry
                        002000    1-20  	bool	firmware_bit,2000	firmware bit in dir entry
                                  1-21  
                        012000    1-22  	bool	utilorg,12000	origin of utility package
                                  1-23  
                                  1-24  " End of include file ...... bosequ.incl.alm
                                    27  
                                    28  	include	pt_equ
                                   2-1  " 
                                   2-2  " Begin include file ...... pt_equ.incl.alm
                                   2-3  " Created 8/28/73 by N. I. Morris
                                   2-4  " Modified 8/79 by R.J.C. Kissel to use expanded BOS.
                                   2-5  " Last modified by Sherman D. Sprague 02/11/81 for DPS8 support.
                        006000     2-6  	bool	pt_org,6000
                                   2-7  
                        006000     2-8  	equ	printon,pt_org+0		turn on printer
                        006001     2-9  	equ	tapeon,pt_org+1		turn on tape
                        006002    2-10  	equ	wteof,pt_org+2		close out tape or print
                        006003    2-11  	equ	space,pt_org+3		fill line with blanks
                        006004    2-12  	equ	headform,pt_org+4		print header
                        006005    2-13  	equ	print,pt_org+5		print line
                        006006    2-14  	equ	ptblock,pt_org+6		print block of data
                        006010    2-15  	equ	initprint,pt_org+8		init print package
                        006011    2-16  	equ	print_edited,pt_org+9	print edited
                        006014    2-17  	equ	ptbfirst,pt_org+12		non-zero on first call to ptblock
                        006015    2-18  	equ	ptsegno,pt_org+13		non-zero to print segment #
                        006016    2-19  	equ	pthdr,pt_org+14		page heading
                                  2-20  
                                  2-21  " End of include file ...... pt_equ.incl.alm
                                  2-22  
                                    29  
                                    30  " 
                                    31  
                        006000      32  	org	printon
    006000  0a   006044 7100 00     33  	tra	printon_
                                    34  
                        006001      35  	org	tapeon
    006001  0a   006051 7100 00     36  	tra	tapeon_
                                    37  
                        006002      38  	org	wteof
    006002  0a   006154 7100 00     39  	tra	wteof_
                                    40  
                        006003      41  	org	space
    006003  0a   006430 7100 00     42  	tra	space_
                                    43  
                        006004      44  	org	headform
    006004  0a   006471 7100 00     45  	tra	headform_
                                    46  
                        006005      47  	org	print
    006005  0a   006435 7100 00     48  	tra	print_
                                    49  
                        006006      50  	org	ptblock
    006006  0a   006205 7100 00     51  	tra	ptblock_
                                    52  
                                    53  
                        006010      54  	org	initprint
    006010  0a   006554 7100 00     55  	tra	initprint_
                                    56  
                        006011      57  	org	print_edited
    006011  0a   006467 7100 00     58  	tra	print_edited_
                                    59  
                        006014      60  	org	ptbfirst
    006014  aa   000000 000000      61  	oct	0
                                    62  
                        006015      63  	org	ptsegno
    006015  aa   000000 000000      64  	zero	0
                                    65  
                        006016      66  	org	pthdr
    006016  aa  202 020 202 020     67  	bci	' ',6*words_per_line
    006017  aa  202 020 202 020
    006020  aa  202 020 202 020
    006021  aa  202 020 202 020
    006022  aa  202 020 202 020
    006023  aa  202 020 202 020
    006024  aa  202 020 202 020
    006025  aa  202 020 202 020
    006026  aa  202 020 202 020
    006027  aa  202 020 202 020
    006030  aa  202 020 202 020
    006031  aa  202 020 202 020
    006032  aa  202 020 202 020
    006033  aa  202 020 202 020
    006034  aa  202 020 202 020
    006035  aa  202 020 202 020
    006036  aa  202 020 202 020
    006037  aa  202 020 202 020
    006040  aa  202 020 202 020
    006041  aa  202 020 202 020
    006042  aa  202 020 202 020
    006043  aa  202 020 202 020
                                    68  
                                    69  " 
                                    70  
                                    71  " Entry to turn on printer.
                                    72  
    006044  0a   006050 7420 00     73  printon_:	stx2	pox			"may be called
    006045  0a   006562 5540 00     74  	stc1	prtsw			"all set, set switches
    006046  0a   006563 4500 00     75  	stz	prtno			reset channel number
    006047  aa   006010 7020 00     76  	tsx2	initprint
    006050  0a   006050 7100 00     77  pox:	tra	*			"return
                                    78  
                                    79  
                                    80  
                                    81  "entry to turn on tape dump
                                    82  
    006051  0a   006104 7420 00     83  tapeon_:	stx2	tox
    006052  aa   012061 2350 00     84  	lda	darg+1			"get tape number in decimal
    006053  0a   006055 6054 00     85  	tpnz	*+2			"if all ones, use one
    006054  aa   000001 2350 07     86  	lda	=1,dl
    006055  aa   000014 7350 00     87  	als	12
    006056  0a   006564 7510 04     88  	stca	tapeno,04			"store in tape channel number
    006057  0a   006562 4500 00     89  	stz	prtsw
                                    90  
    006060  aa   012240 7020 00     91  	tsx2	itapew
    006061  0a   006564 0000 00     92  	arg	tapeno
    006062  0a   006565 0000 00     93  	arg	tapeden		"try 800 bpi
    006063  0a   006065 7100 00     94  	tra	try1600		Error return
    006064  0a   006104 7100 00     95  	tra	tox		Normal return
                                    96  
    006065                          97  try1600:
    006065  0a   006137 7550 00     98  	sta	st800		Save status
    006066  aa   000065 2350 07     99  	lda	=o65,dl		Try 1600 bpi
    006067  0a   006565 7550 00    100  	sta	tapeden
    006070  aa   012240 7020 00    101  	tsx2	itapew
    006071  0a   006564 0000 00    102  	 arg	tapeno
    006072  0a   006565 0000 00    103  	 arg	tapeden
    006073  0a   006075 7100 00    104  	tra	try6250		Error return
    006074  0a   006104 7100 00    105  	tra	tox		Normal return
                                   106  
    006075                         107  try6250:
    006075  0a   006140 7550 00    108  	sta	st1600		Save status
    006076  aa   000041 2350 07    109  	lda	=o41,dl
    006077  0a   006565 7550 00    110  	sta	tapeden
    006100  aa   012240 7020 00    111  	tsx2	itapew
    006101  0a   006564 0000 00    112  	 arg	tapeno
    006102  0a   006565 0000 00    113  	 arg	tapeden
    006103  0a   006105 7100 00    114  	tra	denerr		Error return
                                   115  
    006104  0a   006104 7100 00    116  tox:	tra	*		Normal return
                                   117  
    006105                         118  denerr:
    006105  0a   006141 7550 00    119  	sta	st6250		Save status
    006106  aa   012241 7020 00    120  	tsx2	erpt
    006107  aa  116 160 164 160    121  	 acc	"ptpkg: Unable to set density. (800 status=^w, 1600 status=^w, 6250 status=^w)."
    006110  aa  153 147 072 040
    006111  aa  125 156 141 142
    006112  aa  154 145 040 164
    006113  aa  157 040 163 145
    006114  aa  164 040 144 145
    006115  aa  156 163 151 164
    006116  aa  171 056 040 050
    006117  aa  070 060 060 040
    006120  aa  163 164 141 164
    006121  aa  165 163 075 136
    006122  aa  167 054 040 061
    006123  aa  066 060 060 040
    006124  aa  163 164 141 164
    006125  aa  165 163 075 136
    006126  aa  167 054 040 066
    006127  aa  062 065 060 040
    006130  aa  163 164 141 164
    006131  aa  165 163 075 136
    006132  aa  167 051 056 000
    006133  0a   006137 0000 00    122  	 arg	st800
    006134  0a   006140 0000 00    123  	 arg	st1600
    006135  0a   006141 0000 00    124  	 arg	st6250
    006136  0a   006104 7100 00    125  	tra	tox		Return
                                   126  
    006137  aa   000000 000000     127  st800:	oct	0
    006140  aa   000000 000000     128  st1600:	oct	0
    006141  aa   000000 000000     129  st6250:	oct	0
                                   130  "
                                   131  " Entry to Decide if tape or printer in use.
                                   132  
    006142  0a   006567 4500 00    133  torp:	stz	pterrsw		clear error switch
    006143  0a   006562 2340 00    134  	szn	prtsw		printing?
    006144  aa   000000 6000 12    135  	tze	0,2		if not, return to first arg
                                   136  
    006145  0a   006563 2340 00    137  	szn	prtno		printing.  Do we know channel?
    006146  aa   000001 6010 12    138  	tnz	1,2		if so, return to second arg
                                   139  
    006147  0a   006152 7420 00    140  	stx2	torpx2		save X2
    006150  aa   012250 7020 00    141  	tsx2	getprt		get a printer channel
    006151  0a   006563 7550 00    142  	sta	prtno		and save
                                   143  
    006152  0a   006152 6220 00    144  torpx2:	eax2	*
    006153  aa   000001 7100 12    145  	tra	1,2
                                   146  
                                   147  
                                   148  "
                                   149  "entry to write eof
                                   150  
    006154  0a   006204 7420 00    151  wteof_:	stx2	wtex2
    006155  0a   006142 7020 00    152  	tsx2	torp			"decide if tape or printer
    006156  0a   006160 7100 00    153  	tra	eoftp
    006157  0a   006175 7100 00    154  	tra	eofpt
                                   155  
    006160  aa   000005 2210 03    156  eoftp:	ldx1	=5,du
    006161                         157  wteof_write:
    006161  aa   012277 7020 00    158  	tsx2	xio_wait
    006162  aa   000000 000000     159  	zero
    006163  0a   006564 000055     160  	zero	tapeno,45			"write eof commnad
    006164  0a   006161 7100 00    161  	tra	wteof_write
    006165  aa   000001 1610 03    162  	sbx1	=1,du
    006166  0a   006161 6010 00    163  	tnz	wteof_write
                                   164  
    006167  aa   012277 7020 00    165  	tsx2	xio_wait			"and unload tape
    006170  aa   000000 000000     166  	zero
    006171  0a   006564 000072     167  	zero	tapeno,58
    006172  0a   006622 7100 00    168  	tra	check_tape_status
                                   169  
    006173  aa   006000 7020 00    170  	tsx2	printon			go back to printer
    006174  0a   006204 7100 00    171  	tra	wtex2
                                   172  
    006175  aa   000006 2210 03    173  eofpt:	ldx1	=6,du			"eject paper
    006176  aa   012277 7020 00    174  ejl:	tsx2	xio_wait
    006177  aa   000000 000000     175  	zero
    006200  0a   006563 000063     176  	zero	prtno,51
    006201  0a   006676 7100 00    177  	tra	printerr
    006202  aa   000001 1610 03    178  	sbx1	=1,du
    006203  0a   006176 6010 00    179  	tnz	ejl			"do it 10 times
    006204  0a   006204 7100 00    180  wtex2:	tra	*
                                   181  
                                   182  "
                                   183  "	stc1	ptbfirst		before first call
                                   184  "	tsx2	ptblock		to print n word block
                                   185  "	zero	fetchout,n
                                   186  
                                   187  
    006205  0a   006321 7420 00    188  ptblock_:	stx2	ptbx2			"save xr
    006206  0a   006322 7400 00    189  	stx0	ptbx2+1
    006207  0a   006355 5450 00    190  	sprp5	ptsavp5
                                   191  
    006210  aa   000000 2270 12    192  	ldx7	0,2
    006211  0a   006362 7470 00    193  	stx7	ptbiw
                                   194  
    006212  aa   000000 7200 12    195  	lxl0	0,2			"if only 8 words, dont print addrs
    006213  0a   006301 7400 00    196  	stx0	ptbcount
    006214  0a   006361 4500 00    197  	stz	ptbsupno
    006215  aa   000011 1000 03    198  	cmpx0	=9,du
    006216  0a   006220 6050 00    199  	tpl	*+2
    006217  0a   006361 5540 00    200  	stc1	ptbsupno
                                   201  
    006220  aa   000000 6200 00    202  	eax0	0			"word counter
    006221  0a   006362 3714 20    203  	epp5	ptbiw,*			"pr5 -> data to be printed
                                   204  
    006222  aa   006014 2340 00    205  	szn	ptbfirst			If 1st call, skip check for repeated lines
    006223  0a   006230 6000 00    206  	tze	ptbloop
                                   207  
    006224  0a   006357 4500 00    208  	stz	ptbsup
    006225  aa   006014 4500 00    209  	stz	ptbfirst
    006226  0a   006360 7500 00    210  	stc2	ptbtmp			insure that first line is printed
    006227  0a   006231 7100 00    211  	tra	*+2
                                   212  
    006230  0a   006360 4500 00    213  ptbloop:	stz	ptbtmp			clear duplicate switch
    006231  0a   006325 6350 00    214  	eaa	prtflt
    006232  aa   012301 7550 20    215  	sta	wantflt,*			and get faults
                                   216  
    006233  aa  0 00000 1065 00    217  	cmpc	(pr),()			compare against last
    006234  aa   500000 000040     218  	desc9a	pr5|0,8*4
    006235  0a   006420 000040     219  	desc9a	ptbold,8*4
    006236  0a   006243 6000 00    220  	tze	ptb1
    006237  0a   006360 7500 00    221  	stc2	ptbtmp			set non-zero if different
                                   222  
    006240  aa  0 00000 1005 00    223  	mlr	(pr),()			copy data into old
    006241  aa   500000 000040     224  	desc9a	pr5|0,8*4
    006242  0a   006420 000040     225  	desc9a	ptbold,8*4
                                   226  
    006243  aa   012301 4500 20    227  ptb1:	stz	wantflt,*			faults now stop
                                   228  
    006244  0a   006360 2340 00    229  	szn	ptbtmp			any different?
    006245  0a   006310 6000 00    230  	tze	ptbsame			if not, tra
                                   231  
    006246  aa   020000 1004 00    232  	mlr	(),(),fill(20)		"blank out most of line
    006247  0a   006247 020000     233  	desc6a	*,0
    006250  aa   012004 020162     234  	desc6a	line+3,(words_per_line-3)*6
                                   235  
    006251  aa   000000 6350 10    236  	eaa	0,0			"get block location
    006252  aa   012252 7020 00    237  	tsx2	octwd
    006253  0a   006361 2340 00    238  	szn	ptbsupno			"if not to print locs
    006254  0a   006257 6000 00    239  	tze	*+3
    006255  aa   012003 2360 00    240  	ldq	line+2
    006256  aa   000014 7370 00    241  	lls	12
    006257  0a   006730 2360 00    242  	ldq	=h      "			"and store in line
    006260  0a   006357 2340 00    243  	szn	ptbsup
    006261  0a   006264 6000 00    244  	tze	*+3
    006262  0a   006357 4500 00    245  	stz	ptbsup			"if suppressed lines, add *
    006263  0a   006731 2360 00    246  	ldq	=h  *   "
    006264  aa   000014 7730 00    247  	lrl	12
    006265  aa   012003 7560 00    248  	stq	line+2
                                   249  
    006266  aa   000000 6270 00    250  	eax7	0			"here to format and convert line
    006267  aa   000000 6250 00    251  	eax5	0
                                   252  
    006270  aa   000000 1604 15    253  ptbcl:	mvt	(x5),()			"unpack and translate
    006271  0a   006420 020006     254  	desc6a	ptbold,6
    006272  0a   006363 000006     255  	desc9a	ptbword,6
    006273  0a   006365 0000 00    256  	arg	octtab
                                   257  
    006274  aa   020017 1004 00    258  	mlr	(),(x7),fill(20)		"move into line and pad with blanks
    006275  0a   006363 040014     259  	desc4a	ptbword,12
    006276  aa   012004 020016     260  	desc6a	line+3,14
                                   261  
    006277  aa   000016 6270 17    262  	eax7	14,7			"step offset 14 chars
    006300  aa   000001 6200 10    263  	eax0	1,0			"step to next word
    006301  0a   006301 1000 03    264  ptbcount:	cmpx0	*,du
    006302  0a   006306 6050 00    265  	tpl	ptbout
    006303  aa   000006 6250 15    266  	eax5	6,5			"step to next word
    006304  aa   000060 1050 03    267  	cmpx5	8*6,du
    006305  0a   006270 6040 00    268  	tmi	ptbcl
                                   269  
    006306  aa   006005 7020 00    270  ptbout:	tsx2	print
    006307  0a   006312 7100 00    271  	tra	ptbend
                                   272  
    006310  0a   006357 5540 00    273  ptbsame:	stc1	ptbsup			"same, suppress line
    006311  aa   000010 6200 10    274  	eax0	8,0			"skip words
                                   275  
    006312  aa  5 00010 3715 00    276  ptbend:	epp5	pr5|8
    006313  0a   006301 1000 00    277  	cmpx0	ptbcount
    006314  0a   006230 6040 00    278  	tmi	ptbloop
                                   279  
    006315  aa   012274 7020 00    280  	tsx2	check_status		"poll for status
    006316  0a   006732 0000 00    281  	arg	=0
    006317  0a   006321 7100 00    282  	tra	*+2
    006320  0a   006321 7100 00    283  	tra	*+1
                                   284  
    006321  0a   006321 6220 00    285  ptbx2:	eax2	*			"restore and return
    006322  0a   006322 6200 00    286  	eax0	*
    006323  0a   006355 7650 00    287  	lprp5	ptsavp5
    006324  aa   000001 7100 12    288  	tra	1,2
                                   289  
                                   290  
                                   291  
    006325  0a   006410 7530 00    292  prtflt:	sreg	ptbregs			save regs
    006326  aa   012121 2350 00    293  	lda	fltscu+scu.fault_data_word	here for fault in ptblock
    006327  aa   000076 3750 07    294  	ana	scu.fi_num_mask,dl		test for parity fault
    006330  aa   000022 1150 07    295  	cmpa	=o22,dl
    006331  0a   006331 6010 00    296  	tnz	*			if not, loop
                                   297  
    006332  0a   006362 2120 20    298  	absa	ptbiw,*			get absolute address
    006333  aa   000000 2360 07    299  	ldq	0,dl
    006334  aa   000036 7730 00    300  	lrl	12+18
    006335  0a   006363 0330 00    301  	adl	ptbiw+1
    006336  aa   000022 7370 00    302  	lls	18
    006337  0a   006356 7550 00    303  	sta	ptbo			store abs loc
                                   304  
    006340  aa   012241 7020 00    305  	tsx2	erpt			print error message
    006341  aa  034 155 145 155    306  	acc	'memory parity at ^o, word ^w'
    006342  aa  157 162 171 040
    006343  aa  160 141 162 151
    006344  aa  164 171 040 141
    006345  aa  164 040 136 157
    006346  aa  054 040 167 157
    006347  aa  162 144 040 136
    006350  aa  167 000 000 000
    006351  0a   006356 0000 00    307  	arg	ptbo
    006352  0a   006414 0000 00    308  	arg	ptbregs+4			a reg
                                   309  
    006353  0a   006410 0730 00    310  	lreg	ptbregs			restore and return
    006354  0a   006243 7100 00    311  	tra	ptb1
                                   312  
    006355                         313  ptsavp5:	bss	,1
    006356  aa   000000 000000     314  ptbo:	oct	0
    006357  aa   000000 000000     315  ptbsup:	oct	0
    006360  aa   000000 000000     316  ptbtmp:	oct	0
    006361  aa   000000 000000     317  ptbsupno:	oct	0
    006362  0a   006362 0000 20    318  ptbiw:	arg	*,*
                                   319  
    006363                         320  ptbword:	bss	,2
                                   321  
    006365                         322  octtab:
    006365  aa   000001 002003     323  	vfd	5/0,4/0,5/0,4/1,5/0,4/2,5/0,4/3,5/0,4/4,5/0,4/5,5/0,4/6,5/0,4/7
    006366  aa   004005 006007 
    006367  aa   020021 022023     324  	vfd	5/1,4/0,5/1,4/1,5/1,4/2,5/1,4/3,5/1,4/4,5/1,4/5,5/1,4/6,5/1,4/7
    006370  aa   024025 026027 
    006371  aa   040041 042043     325  	vfd	5/2,4/0,5/2,4/1,5/2,4/2,5/2,4/3,5/2,4/4,5/2,4/5,5/2,4/6,5/2,4/7
    006372  aa   044045 046047 
    006373  aa   060061 062063     326  	vfd	5/3,4/0,5/3,4/1,5/3,4/2,5/3,4/3,5/3,4/4,5/3,4/5,5/3,4/6,5/3,4/7
    006374  aa   064065 066067 
    006375  aa   100101 102103     327  	vfd	5/4,4/0,5/4,4/1,5/4,4/2,5/4,4/3,5/4,4/4,5/4,4/5,5/4,4/6,5/4,4/7
    006376  aa   104105 106107 
    006377  aa   120121 122123     328  	vfd	5/5,4/0,5/5,4/1,5/5,4/2,5/5,4/3,5/5,4/4,5/5,4/5,5/5,4/6,5/5,4/7
    006400  aa   124125 126127 
    006401  aa   140141 142143     329  	vfd	5/6,4/0,5/6,4/1,5/6,4/2,5/6,4/3,5/6,4/4,5/6,4/5,5/6,4/6,5/6,4/7
    006402  aa   144145 146147 
    006403  aa   160161 162163     330  	vfd	5/7,4/0,5/7,4/1,5/7,4/2,5/7,4/3,5/7,4/4,5/7,4/5,5/7,4/6,5/7,4/7
    006404  aa   164165 166167 
                                   331  
    006405  aa   000000 0110 03    332  	eight
    006406  aa   000000 0110 03
    006407  aa   000000 0110 03
    006410                         333  	bss	ptbregs,8
                                   334  
    006420                         335  	bss	ptbold,8			"last 8 words
                                   336  "
                                   337  "	tsx2	space		 spacefill line
                                   338  
    006430                         339  space_:
    006430  aa   020000 1004 00    340  	mlr	(),(),fill(20)		"fill with blanks
    006431  0a   006431 020000     341  	desc6a	*,0
    006432  aa   012001 020204     342  	desc6a	line,words_per_line*6
    006433  aa   006014 5540 00    343  	stc1	ptbfirst			"don't check for dup line
    006434  aa   000000 7100 12    344  	tra	0,2			"return
                                   345  
                                   346  
                                   347  "
                                   348  "printing subroutines
                                   349  "	tsx2	print		prints line
                                   350  
    006435                         351  print_:
    006435  aa   000011 2350 07    352  	lda	printone,dl	get print cmd
    006436                         353  print_merge:
    006436  0a   006444 7510 01    354  	stca	print_cmd_loc,01
    006437  0a   006464 7420 00    355  	stx2	pretn			"save return
    006440  0a   006142 7020 00    356  	tsx2	torp			"decide tape or printer
    006441  0a   006447 7100 00    357  	tra	nopa
    006442  aa   012277 7020 00    358  	tsx2	xio_wait			" Print line.
    006443  aa   012001 002600     359  	vfd	18/line,12/words_per_line	"words_per_line words beginning at line
    006444                         360  print_cmd_loc:
    006444  0a   006563 000000     361  	zero	prtno,*-*			"print and slew one line
    006445  0a   006676 7100 00    362  	tra	printerr			" Keep trying until it works.
    006446  0a   006456 7100 00    363  	tra	no_tape
                                   364  
    006447  aa   000000 1004 00    365  nopa:	mlr	(),()			"copy line with carriage control
    006450  aa   012000 520205     366  	desc6a	pagectl(5),words_per_line*6+1	"so that it starts on word boundary
    006451  0a   006574 020204     367  	desc6a	tbuff,words_per_line*6
    006452  aa   012277 7020 00    368  	tsx2	xio_wait			"write bcd record
    006453  0a   006574 002600     369  	vfd	18/tbuff,12/words_per_line	"include page control char
    006454  0a   006564 000014     370  	zero	tapeno,12
    006455  0a   006622 7100 00    371  	tra	check_tape_status		Bad status, could be end of tape.
                                   372  
    006456  0a   006730 2350 00    373  no_tape:	lda	=h      "			Set page control word.
    006457  aa   012000 7550 00    374  	sta	pagectl			reset page control to one space
                                   375  
    006460  0a   006560 0540 00    376  	aos	prlinecnt			"update line count
    006461  0a   006560 2350 00    377  	lda	prlinecnt			"check for end of page
    006462  0a   006561 1150 00    378  	cmpa	prmaxline
    006463  0a   006465 6050 00    379  	tpl	*+2			"need new page
    006464  0a   006464 7100 00    380  pretn:	tra	*			"return
                                   381  
    006465  aa   006004 7020 00    382  	tsx2	headform
    006466  0a   006464 7100 00    383  	tra	pretn
                                   384  
    006467                         385  print_edited_:
    006467  aa   000031 2350 07    386  	lda	printone_edited,dl
    006470  0a   006436 7100 00    387  	tra	print_merge
                                   388  
                                   389  "
                                   390  "	tsx2	headform		slew to top of page
                                   391  
    006471                         392  headform_:
    006471  aa   006014 5540 00    393  	stc1	ptbfirst			Don't supress dup lines
    006472  0a   006553 7420 00    394  	stx2	headretn
    006473  0a   006142 7020 00    395  	tsx2	torp			" Decide tape or printer
    006474  0a   006501 7100 00    396  	tra	noph
    006475  aa   012277 7020 00    397  	tsx2	xio_wait
    006476  aa   000000 000000     398  	oct	0
    006477  0a   006563 000063     399  	zero	prtno,skiphead		"slew to new page
    006500  0a   006676 7100 00    400  	tra	printerr			"if error retry
                                   401  
    006501  aa   000002 2350 07    402  noph:	lda	=2,dl
    006502  0a   006560 7550 00    403  	sta	prlinecnt			"set line count
                                   404  
    006503  0a   006730 2350 00    405  	lda	=h      "
    006504  aa   006041 7550 00    406  	sta	pthdr+19
    006505  aa   006042 7550 00    407  	sta	pthdr+20
    006506  aa   006043 7550 00    408  	sta	pthdr+21
                                   409  
    006507  aa   006015 2350 00    410  	lda	ptsegno			"if printing a segment
    006510  0a   006521 6000 00    411  	tze	nosegnumber
    006511  aa   012252 7020 00    412  	tsx2	octwd
    006512  aa   012261 7020 00    413  	tsx2	bzel			" supress leading zeros
    006513  aa   000006 7750 00    414  	alr	6			" make line end with blank
    006514  aa   006043 7550 00    415  	sta	pthdr+21
                                   416  
    006515  0a   006733 2350 00    417  	lda	=h     s
    006516  aa   006041 7550 00    418  	sta	pthdr+19
    006517  0a   006734 2350 00    419  	lda	=hegment
    006520  aa   006042 7550 00    420  	sta	pthdr+20
                                   421  
    006521                         422  nosegnumber:
                                   423  
    006521  aa   000000 3014 00    424  	btd	(),()
    006522  0a   006570 000004     425  	desc9a	binpage,4
    006523  0a   006571 030010     426  	desc9ns	pagenum,8
                                   427  
    006524  0a   006570 0540 00    428  	aos	binpage
    006525  aa   000000 0244 00    429  	mvne	(),(),()			" insert page number in output
    006526  0a   006572 230003     430  	desc9ns	pagenum+1(1),3
    006527  0a   006573 000004     431  	desc9a	pgedit,4
    006530  aa   006041 020003     432  	desc6a	pthdr+19,3
                                   433  
    006531  0a   006735 2350 00    434  	lda	=h page "
    006532  aa   006040 7550 00    435  	sta	pthdr+18
                                   436  
    006533  0a   006562 2340 00    437  	szn	prtsw			"if printing
    006534  0a   006545 6000 00    438  	tze	nopb
                                   439  
    006535  aa   020000 1004 00    440  	mlr	(),(),fill(20)		"copy header without carriage control
    006536  aa   006016 120203     441  	desc6a	pthdr(1),words_per_line*6-1
    006537  0a   006574 020204     442  	desc6a	tbuff,words_per_line*6
    006540  aa   012277 7020 00    443  	tsx2	xio_wait
    006541  0a   006574 002600     444  	vfd	18/tbuff,12/words_per_line	"print heading
    006542  0a   006563 000012     445  	zero	prtno,printtwo		"print and slew two lines
    006543  0a   006676 7100 00    446  	tra	printerr			" Repeat until successful.
    006544  0a   006551 7100 00    447  	tra	tapesw_off
                                   448  
    006545  aa   012277 7020 00    449  nopb:	tsx2	xio_wait			"write header on tape
    006546  aa   006016 002600     450  	vfd	18/pthdr,12/words_per_line
    006547  0a   006564 000014     451  	zero	tapeno,12
    006550  0a   006622 7100 00    452  	tra	check_tape_status		" Check for EOT or other status.
    006551                         453  tapesw_off:
    006551  aa   000000 2350 07    454  	lda	=0,dl
    006552  aa   012000 7550 00    455  	sta	pagectl			Set for double space
                                   456  
    006553  0a   006553 7100 00    457  headretn:	tra	*			"return
                                   458  
                                   459  " 
                                   460  "	tsx2	initprint
                                   461  
    006554                         462  initprint_:
    006554  aa   000001 2350 07    463  	lda	1,dl
    006555  0a   006570 7550 00    464  	sta	binpage
    006556  0a   006560 4500 00    465  	stz	prlinecnt			"reset line count
    006557  aa   000000 7100 12    466  	tra	0,2			"return
                                   467  
                                   468  
                                   469  
                                   470  
    006560  aa   000000 000000     471  prlinecnt: oct	0			"currentline count
    006561  aa   000000 000072     472  prmaxline: dec	58			"max lines per page
    006562  aa   000000 000001     473  prtsw:	oct	1			"normal to print
    006563                         474  prtno:	bss	,1			"channel no of printer
    006564                         475  tapeno:	bss	,1			"tape channel
    006565  aa   000000 000060     476  tapeden:	oct	60			"set density command--800 bpi
    006566                         477  ptstat:	bss	,1			"I/O status word
    006567                         478  pterrsw:	bss	,1			"to suppress redundant errors
                                   479  
                        000011     480  	bool	printone,11		"print one line and slew one l
                        000031     481  	bool	printone_edited,31		"same, edited
                        000012     482  	bool	printtwo,12		"print and slew two lines
                        000063     483  	bool	skiphead,63		"slew to top of page
                                   484  
                        000055     485  	bool	wef,55			"write EOF on tape
                        000072     486  	bool	run,72			"rewind and unload tape
                                   487  
                                   488  
    006570  aa   000000 000000     489  binpage:	oct	0
    006571  aa  060 060 060 060    490  pagenum:	aci	"00000000"
    006572  aa  060 060 060 060
    006573  aa   401020 102321     491  pgedit:	vfd	9/lte+1,o9/20,9/mvzb+2,9/mvc+1
                                   492  
    006574                         493  tbuff:	bss	,words_per_line
                                   494  
                                   495  "
    006622                         496  check_tape_status:
    006622  0a   006656 7420 00    497  	stx2	ctp_x2
    006623  0a   006657 7410 00    498  	stx1	ctp_x2+1
                                   499  
    006624  0a   006566 7550 00    500  	sta	ptstat
    006625  aa   174000 3750 03    501  	ana	=o174000,du
    006626  aa   034000 1150 03    502  	cmpa	=o034000,du		" Check for data alert - end of tape.
    006627  0a   006661 6010 00    503  	tnz	taperr			" Not EOT, repeat xio_move call.
                                   504  
    006630  aa   000004 6210 00    505  	eax1	5-1			" Write 5 EOF's.
    006631  aa   012277 7020 00    506  ctpeof:	tsx2	xio_wait
    006632  aa   000000 000000     507  	zero
    006633  0a   006564 000055     508  	zero	tapeno,wef		 " Write EOF - 55 octal.
    006634  0a   006635 7100 00    509  	tra	*+1
    006635  aa   000001 1610 03    510  	sbx1	1,du
    006636  0a   006631 6050 00    511  	tpl	ctpeof
                                   512  
    006637  aa   012277 7020 00    513  	tsx2	xio_wait			" Unload tape.
    006640  aa   000000 000000     514  	zero
    006641  0a   006564 000072     515  	zero	tapeno,run		" Rewind and unload - 72 octal.
    006642  0a   006637 7100 00    516  	tra	*-3
                                   517  
    006643  aa   012241 7020 00    518  	tsx2	erpt			" Request next tape.
    006644  aa  033 124 141 160    519  	acc	"Tape full. Mount next tape."
    006645  aa  145 040 146 165
    006646  aa  154 154 056 040
    006647  aa  115 157 165 156
    006650  aa  164 040 156 145
    006651  aa  170 164 040 164
    006652  aa  141 160 145 056
                                   520  
    006653  aa   012240 7020 00    521  	tsx2	itapew
    006654  0a   006564 0000 00    522  	arg	tapeno
    006655  0a   006565 0000 00    523  	arg	tapeden		use 800 bpi
                                   524  
    006656  0a   006656 6220 00    525  ctp_x2:	eax2	*
    006657  0a   006657 6210 00    526  	eax1	*
    006660  aa   777777 7100 12    527  	tra	-1,2			" Write data record again anyway.
                                   528  
                                   529  
    006661  0a   006567 2340 00    530  taperr:	szn	pterrsw
    006662  0a   006656 6010 00    531  	tnz	ctp_x2			" suppress redundant messages
    006663  0a   006567 5540 00    532  	stc1	pterrsw
    006664  aa   012241 7020 00    533  	tsx2	erpt
    006665  aa  030 164 141 160    534  	acc	"tape error. status = ^w."
    006666  aa  145 040 145 162
    006667  aa  162 157 162 056
    006670  aa  040 163 164 141
    006671  aa  164 165 163 040
    006672  aa  075 040 136 167
    006673  aa  056 000 000 000
    006674  0a   006566 0000 00    535  	arg	ptstat
    006675  0a   006656 7100 00    536  	tra	ctp_x2
                                   537  
                                   538  " 
                                   539  
    006676                         540  printerr:
    006676  0a   006567 2340 00    541  	szn	pterrsw
    006677  0a   006716 6010 00    542  	tnz	printer0
    006700  0a   006567 7500 00    543  	stc2	pterrsw		stop redundant errors
                                   544  
    006701  0a   006714 7420 00    545  	stx2	ptex2
    006702  0a   006566 7550 00    546  	sta	ptstat
    006703  aa   012241 7020 00    547  	tsx2	erpt
    006704  aa  033 160 162 151    548  	acc	"printer error. status = ^w."
    006705  aa  156 164 145 162
    006706  aa  040 145 162 162
    006707  aa  157 162 056 040
    006710  aa  163 164 141 164
    006711  aa  165 163 040 075
    006712  aa  040 136 167 056
    006713  0a   006566 0000 00    549  	arg	ptstat
    006714  0a   006714 6220 00    550  ptex2:	eax2	*
    006715  0a   006566 2350 00    551  	lda	ptstat		status in A
                                   552  
    006716                         553  printer0:
    006716  0a   006736 2360 00    554  	ldq	=o607777777777	mask in Q
    006717  aa   030000 2110 03    555  	cmk	=o030000,du	device data alert?
    006720  0a   006724 6010 00    556  	tnz	printer1		if not, skip following
    006721  aa   000200 3150 03    557  	cana	=o000200,du	error before printing commenced?
    006722  aa   000003 6000 12    558  	tze	3,2		if not, take normal return
    006723  aa   777777 7100 12    559  	tra	-1,2
    006724                         560  printer1:
    006724  aa   000002 3150 03    561  	cana	=o2,du		error during initiation?
    006725  aa   000003 6000 12    562  	tze	3,2		no, take normal return
    006726  aa   777777 7100 12    563  	tra	-1,2
                                   564  
                                   565  "
                                   566  
                                   567  	include	mc
                                   3-1  "
                                   3-2  "	BEGIN INCLUDE FILE  mc.incl.alm  6/72 SHW
                                   3-3  "	Modified 8/80 by J. A. Bush for dps8/70M CPU
                                   3-4  "
                                   3-5  
                                   3-6  "	General layout of data items.
                                   3-7  
                        000000     3-8  	equ	mc.prs,0		pointer registers
                        000020     3-9  	equ	mc.regs,16	registers
                        000030    3-10  	equ	mc.scu,24		SCU data
                        000050    3-11  	equ	mc.eis_info,40	pointers and lengths for EIS
                                  3-12  
                                  3-13  "	Temporary storage for software
                                  3-14  
                        000040    3-15  	equ	mc.mask,32	system controller mask at time of fault
                        000042    3-16  	equ	mc.ips_temp,34	temporary storage for IPS info
                        000043    3-17  	equ	mc.errcode,35	error code
                        000044    3-18  	equ	mc.fim_temp,36	temporary to hold fault index and unique index
                        000045    3-19  	equ	mc.fault_reg,37	fault register
                        000046    3-20  	equ	mc.fault_time,38	time of fault
                        000046    3-21  	equ	mc.cpu_type_word,38	CPU type from  rsw (2). overlays part of time word
                        300000    3-22  	bool	mc.cpu_type_mask,300000 DU
                        000046    3-23  	equ	mc.ext_fault_reg,38	ext fault reg for dps8. overlays part of time word
                        077774    3-24  	bool	mc.ext_fault_reg_mask,77774 DU
                        000003    3-25  	equ	mc.cpu_type_shift,3 positions to shift right or left
                                  3-26  
                                  3-27  
                                  3-28  
                                  3-29  "	SCU  DATA
                                  3-30  
                                  3-31  "	WORD  (0)		PROCEDURE POINTER REGISTER
                                  3-32  
                        000030    3-33  	equ	mc.scu.ppr.prr_word,24	Procedure Ring Register
                        000000    3-34  	equ	scu.ppr.prr_word,0
                        700000    3-35  	bool	scu.ppr.prr_mask,700000	DU
                        000041    3-36  	equ	scu.ppr.prr_shift,33
                                  3-37  
                        000030    3-38  	equ	mc.scu.ppr.psr_word,24	Procedure Segment Register
                        000000    3-39  	equ	scu.ppr.psr_word,0
                        077777    3-40  	bool	scu.ppr.psr_mask,077777	DU
                        000022    3-41  	equ	scu.ppr.psr_shift,18
                                  3-42  
                        000030    3-43  	equ	mc.scu.ppr.p_word,24	Procedure Privileged Bit
                        000000    3-44  	equ	scu.ppr.p_word,0
                        400000    3-45  	bool	scu.ppr.p,400000		DL
                                  3-46  
                                  3-47  "	  APPENDING UNIT STATUS
                        000030    3-48  	equ	mc.scu.apu_stat_word,24	APPENDING UNIT STATUS
                        000000    3-49  	equ	scu.apu_stat_word,0		
                                  3-50  
                        200000    3-51  	bool	scu.apu.xsf,200000		DL - Ext Seg Flag - IT mod.
                        100000    3-52  	bool	scu.apu.sdwm,100000		DL - Match in SDW Ass. Mem.
                        040000    3-53  	bool	scu.apu.sd_on,040000	DL - SDW Ass. Mem.  ON
                        020000    3-54  	bool	scu.apu.ptwm,020000		DL - Match in PTW Ass. Mem.
                        010000    3-55  	bool	scu.apu.pt_on,010000	DL - PTW Ass. Mem.  ON
                        004000    3-56  	bool	scu.apu.pi_ap,004000	DL - Instr fetch or Append cycle
                        002000    3-57  	bool	scu.apu.dsptw,002000	DL - Fetch of DSPTW
                        001000    3-58  	bool	scu.apu.sdwnp,001000	DL - Fetch of SDW non-paged
                        000400    3-59  	bool	scu.apu.sdwp,000400		DL - Fetch of SDW paged
                        000200    3-60  	bool	scu.apu.ptw,000200		DL - Fetch of PTW
                        000100    3-61  	bool	scu.apu.ptw2,000100		DL - Fetch of pre-paged  PTW
                        000040    3-62  	bool	scu.apu.fap,000040		DL - Fetch of final address paged
                        000020    3-63  	bool	scu.apu.fanp,000020		DL - Fetch final address non-paged
                        000010    3-64  	bool	scu.apu.fabs,000010		DL - Fetch of final address absolute
                                  3-65  
                        000030    3-66  	equ	mc.scu.fault_cntr_word,24	Num of retrys of EIS instructions.
                        000000    3-67  	equ	scu.fault_cntr_word,0	
                                  3-68  
                        000007    3-69  	bool	scu.fault_cntr_mask,000007
                                  3-70  
                                  3-71  
                                  3-72  "	WORD  (1)		FAULT DATA
                                  3-73  
                        000031    3-74  	equ	mc.scu.fault_data_word,25	FAULT  DATA
                        000001    3-75  	equ	scu.fault_data_word,1
                                  3-76  
                        400000    3-77  	bool	scu.fd.iro,400000		DU - Illegal Ring Order
                        200000    3-78  	bool	scu.fd.oeb,200000		DU - Not In Execute Bracket
                        100000    3-79  	bool	scu.fd.e_off,100000		DU - No  Execute
                        040000    3-80  	bool	scu.fd.orb,040000		DU - Not In Read Bracket
                        020000    3-81  	bool	scu.fd.r_off,020000		DU - No  Read
                        010000    3-82  	bool	scu.fd.owb,010000		DU - Not In Write Bracket
                        004000    3-83  	bool	scu.fd.w_off,004000		DU - No  Write
                        002000    3-84  	bool	scu.fd.no_ga,002000		DU - Not A Gate
                        001000    3-85  	bool	scu.fd.ocb,001000		DU - Not in  Call Bracket
                        000400    3-86  	bool	scu.fd.ocall,000400		DU - Outward Call
                        000200    3-87  	bool	scu.fd.boc,000200		DU - Bad Outward Call
                        000100    3-88  	bool	scu.fd.inret,000100		DU - Inward Return
                        000040    3-89  	bool	scu.fd.crt,000040		DU - Cross  Ring Transfer
                        000020    3-90  	bool	scu.fd.ralr,000020		DU - Ring   Alarm
                        000010    3-91  	bool	scu.fd.am_er,000010		DU - Assoc. Mem. Fault
                        000004    3-92  	bool	scu.fd.oosb,000004		DU - Out Of Bounds
                        000002    3-93  	bool	scu.fd.paru,000002		DU - Parity Upper
                        000001    3-94  	bool	scu.fd.parl,000001		DU - Parity Lower
                                  3-95  
                        400000    3-96  	bool	scu.fd.onc_1,400000		DL - Op Not Complete
                        200000    3-97  	bool	scu.fd.onc_2,200000		DL - Op Not Complete
                                  3-98  
                                  3-99  "  	  GROUP II  FAULT DATA
                        400000   3-100  	bool	scu.fd.isn,400000		DU - Illegal Segment Number
                        200000   3-101  	bool	scu.fd.ioc,200000		DU - Illegal Op Code
                        100000   3-102  	bool	scu.fd.ia_im,100000		DU - Illegal Addr - Modifier
                        040000   3-103  	bool	scu.fd.isp,040000		DU - Illegal Slave Procedure
                        020000   3-104  	bool	scu.fd.ipr,020000		DU - Illegal Procedure
                        010000   3-105  	bool	scu.fd.nea,010000		DU - Non Existent Address
                        004000   3-106  	bool	scu.fd.oobb,004000		DU - Out Of  Bounds
                                 3-107  
                        000031   3-108  	equ	mc.scu.port_stat_word,25	PORT STATUS
                        000001   3-109  	equ	scu.port_stat_word,1
                                 3-110  
                        170000   3-111  	bool	scu.ial_mask,170000		DL - Illegal Action Lines
                        000014   3-112  	equ	scu.ial_shift,12
                                 3-113  
                        007000   3-114  	bool	scu.iac_mask,007000		DL - Illegal Action Channel
                        000011   3-115  	equ	scu.iac_shift,9
                                 3-116  
                        000700   3-117  	bool	scu.con_chan_mask,000700	DL - Connect Channel
                        000006   3-118  	equ	scu.con_chan_shift,6
                                 3-119  
                        000076   3-120  	bool	scu.fi_num_mask,000076	DL - Fault / Interrupt  Number
                        000001   3-121  	equ	scu.fi_num_shift,1
                                 3-122  
                        000001   3-123  	bool	scu.fi_flag_mask,000001	DL - Fault / Interrupt  Flag
                                 3-124  
                                 3-125  
                                 3-126  "	WORD  (2)		TEMPORARY POINTER REGISTER
                                 3-127  
                        000032   3-128  	equ	mc.scu.tpr.trr_word,26	Temporary Ring Register
                        000002   3-129  	equ	scu.tpr.trr_word,2
                        700000   3-130  	bool	scu.tpr.trr_mask,700000	DU
                        000041   3-131  	equ	scu.tpr.trr_shift,33
                                 3-132  
                        000032   3-133  	equ	mc.scu.tpr.tsr_word,26	Temporary Segment Register
                        000002   3-134  	equ	scu.tpr.tsr_word,2
                        077777   3-135  	bool	scu.tpr.tsr_mask,077777	DU
                        000022   3-136  	equ	scu.tpr.tsr_shift,18
                                 3-137  
                        000032   3-138  	equ	mc.scu.cpu_no_word,26	CPU  Number
                        000002   3-139  	equ	scu.cpu_no_word,2
                                 3-140  
                        000700   3-141  	bool	scu.cpu_no_mask,000700	DL
                        000006   3-142  	equ	scu.cpu_shift,6
                                 3-143  
                        000032   3-144  	equ	mc.scu.delta_word,26	Tally Modification DELTA
                        000002   3-145  	equ	scu.delta_word,2
                                 3-146  
                        000077   3-147  	bool	scu.delta_mask,000077	DL
                                 3-148  
                                 3-149  
                                 3-150  "	WORD  (3)		TSR STATUS
                                 3-151  
                        000033   3-152  	equ	mc.scu.tsr_stat_word,27	TSR STATUS for 1,2, and 3
                        000003   3-153  	equ	scu.tsr_stat_word,3		Word Instructions
                                 3-154  
                        777700   3-155  	bool	scu.tsr_stat_mask,777700	DL - All of Status
                        000006   3-156  	equ	scu.tsr_stat_shift,6
                                 3-157  
                        740000   3-158  	bool	scu.tsna_mask,740000	DL - Word 1 Status
                        700000   3-159  	bool	scu.tsna.prn_mask,700000	DL - Word 1 PR num
                        000017   3-160  	equ	scu.tsna.prn_shift,15
                        040000   3-161  	bool	scu.tsna.prv,040000		DL - Word 1 PR valid bit
                                 3-162  
                        036000   3-163  	bool	scu.tsnb_mask,036000	DL - Word 2 Status
                        034000   3-164  	bool	scu.tsnb.prn_mask,034000	DL - Word 2 PR num
                        000013   3-165  	equ	scu.tsnb.prn_shift,11
                        002000   3-166  	bool	scu.tsnb.prv,002000		DL - Word 2 PR valid bit
                                 3-167  
                        000013   3-168  	bool	scu.tsnc_mask,0013		DL - Word 3 Status
                        001600   3-169  	bool 	scu.tsnc.prn_mask,001600	DL - Word 3 PR num
                        000007   3-170  	equ	scu.tsnc.prn_shift,7
                        000100   3-171  	bool	scu.tsnc.prv,000100		DL - Word 3 PR valid bit
                                 3-172  
                                 3-173  
                        000033   3-174  	equ	mc.scu.tpr.tbr_word,27	TPR.TBR  Field
                        000003   3-175  	equ	scu.tpr.tbr_word,3
                                 3-176  
                        000077   3-177  	bool	scu.tpr.tbr_mask,000077	DL
                                 3-178  
                                 3-179  
                                 3-180  "	WORD  (4)		INSTRUCTION COUNTER
                                 3-181  
                        000034   3-182  	equ	mc.scu.ilc_word,28		INSTRUCTION  COUNTER
                        000004   3-183  	equ	scu.ilc_word,4
                        000022   3-184  	equ	scu.ilc_shift,18
                                 3-185  
                        000034   3-186  	equ	mc.scu.indicators_word,28	INDICATOR  REGISTERS
                        000004   3-187  	equ	scu.indicators_word,4
                                 3-188  
                        400000   3-189  	bool	scu.ir.zero,400000		DL - Zero  Indicator
                        200000   3-190  	bool	scu.ir.neg,200000		DL - Negative Indicator
                        100000   3-191  	bool	scu.ir.carry,100000		DL - Carry Indicator
                        040000   3-192  	bool	scu.ir.ovfl,040000		DL - Overflow Indicator
                        020000   3-193  	bool	scu.ir.eovf,020000		DL - Exponent Overflow  Ind
                        010000   3-194  	bool	scu.ir.eufl,010000		DL - Exponent Underflow Ind
                        004000   3-195  	bool	scu.ir.oflm,004000		DL - Overflow Mask Indicator
                        002000   3-196  	bool	scu.ir.tro,002000		DL - Tally Runout  Indicator
                        001000   3-197  	bool	scu.ir.par,001000		DL - Parity  Indicator
                        000400   3-198  	bool	scu.ir.parm,000400		DL - Parity  Mask  Indicator
                        000200   3-199  	bool	scu.ir.bm,000200			DL - Bar  Mode  Indicator
                        000100   3-200  	bool	scu.ir.tru,000100		DL - Truncation Indicator
                        000040   3-201  	bool	scu.ir.mif,000040		DL - Multiword  Indicator
                        000020   3-202  	bool	scu.ir.abs,000020		DL - Absolute   Indicator
                                 3-203  
                                 3-204  
                                 3-205  "	WORD  (5)		COMPUTED ADDRESS
                                 3-206  
                        000035   3-207  	equ	mc.scu.ca_word,29		COMPUTED  ADDRESS
                        000005   3-208  	equ	scu.ca_word,5
                        000022   3-209  	equ	scu.ca_shift,18
                                 3-210  
                        000035   3-211  	equ	mc.scu.cu_stat_word,29	CONTROL UNIT STATUS
                        000005   3-212  	equ	scu.cu_stat_word,5
                                 3-213  
                        400000   3-214  	bool	scu.cu.rf,400000		DL - Repeat First
                                 3-215  "					On First Cycle of Repeat Inst.
                        200000   3-216  	bool	scu.cu.rpt,200000		DL - Repeat Instruction
                        100000   3-217  	bool	scu.cu.rd,100000		DL - Repeat Double Instr.
                        040000   3-218  	bool	scu.cu.rl,040000		DL - Repeat Link   Instr.
                                 3-219  
                        020000   3-220  	bool	scu.cu.pot,020000		DL - IT Modification
                        010000   3-221  	bool	scu.cu.pon,010000		DL - Return Type Instruction
                                 3-222  
                        004000   3-223  	bool	scu.cu.xde,004000		DL - XDE from Even Location
                        002000   3-224  	bool	scu.cu.xdo,002000		DL - XDE from Odd  Location
                                 3-225  
                        001000   3-226  	bool	scu.cu.poa,001000		DL - Operand Preparation
                        000400   3-227  	bool	scu.cu.rfi,000400		DL - Tells CPU to refetch instruction
                                 3-228  "	This Bit  Not Used    (000200)
                        000100   3-229  	bool	scu.cu.if,000100		DL - Fault occurred during instruction fetch
                                 3-230  
                        000035   3-231  	equ	mc.scu.cpu_tag_word,29	Computed Tag Field
                        000005   3-232  	equ	scu.cpu_tag_word,5
                                 3-233  
                        000007   3-234  	bool	scu.cpu_tag_mask,000007	DL
                                 3-235  
                                 3-236  
                                 3-237  "	WORDS  (6,7)	INSTRUCTIONS
                                 3-238  
                        000036   3-239  	equ	scu.even_inst_word,30	Even Instruction
                                 3-240  
                        000037   3-241  	equ	scu.odd_inst_word,31	Odd  Instruction
                                 3-242  
                                 3-243  
                                 3-244  "	END INCLUDE FILE incl.alm
                                   568  	include	eis_micro_ops
                        000020     4-1  	bool	insm,020
                        000040     4-2  	bool	enf,040
                        000060     4-3  	bool	ses,060
                        000100     4-4  	bool	mvzb,100
                        000120     4-5  	bool	mvza,120
                        000140     4-6  	bool	mfls,140
                        000160     4-7  	bool	mflc,160
                        000200     4-8  	bool	insb,200
                        000220     4-9  	bool	insa,220
                        000240    4-10  	bool	insn,240
                        000260    4-11  	bool	insp,260
                        000300    4-12  	bool	ign,300
                        000320    4-13  	bool	mvc,320
                        000340    4-14  	bool	mses,340
                        000360    4-15  	bool	mors,360
                        000400    4-16  	bool	lte,400
                        000420    4-17  	bool	cht,420
                                  4-18  "
                        000010    4-19  	bool	if0,10
                        000004    4-20  	bool	if1,4
                        000002    4-21  	bool	if2,2
                        000001    4-22  	bool	if3,1
                                   569  	include	bos_tv
                                   5-1  " 
                                   5-2  " Begin include file ...... bos_tv.incl.alm
                                   5-3  " Created in November 1971 by N. I. Morris.
                                   5-4  " Modified 9/9/76 by Noel I. Morris
                                   5-5  " Modified by Sherman D. Sprague 02/11/81 for DPS8 support.
                                   5-6  " Modified November 1981 by C. Hornig to remove iom_connect_rel.
                                   5-7  " Modified January 1982 by J. Bongiovanni to add getport_info
                                   5-8  " Modified May 1982 by Sherman D. Sprague to add getmpc.
                                   5-9  
                                  5-10  " BOS Utility Package Transfer Vector.
                                  5-11  
                        012000    5-12  	equ	pagectl,utilorg
                        012001    5-13  	equ	line,pagectl+1
                        012040    5-14  	equ	arg,line+31
                        012060    5-15  	equ	darg,arg+arglen+1
                        012100    5-16  	equ	earg,darg+arglen+1
                        012120    5-17  	equ	fltscu,earg+arglen+1
                                  5-18  
                        012200    5-19  	equ	tv_org,utilorg+128
                                  5-20  
                        012200    5-21  	equ	scan,tv_org+0
                        012201    5-22  	equ	arg_count,tv_org+1
                        012202    5-23  	equ	nextline,tv_org+2
                        012203    5-24  	equ	nlraw,tv_org+3
                        012204    5-25  	equ	search,tv_org+4
                        012205    5-26  	equ	makefil,tv_org+5
                        012206    5-27  	equ	ldcom,tv_org+6
                        012207    5-28  	equ	getsec,tv_org+7
                        012210    5-29  	equ	cvinit,tv_org+8
                        012211    5-30  	equ	rdev,tv_org+9
                        012212    5-31  	equ	wdev,tv_org+10
                        012213    5-32  	equ	phybos,tv_org+11
                        012214    5-33  	equ	bosphy,tv_org+12
                        012215    5-34  	equ	phyadd,tv_org+13
                        012216    5-35  	equ	mulbos,tv_org+14
                        012217    5-36  	equ	bosmul,tv_org+15
                        012220    5-37  	equ	lookup_devmodel,tv_org+16
                        012221    5-38  	equ	makesdw,tv_org+17
                        012222    5-39  	equ	argbos,tv_org+18
                        012223    5-40  	equ	argmul,tv_org+19
                        012224    5-41  	equ	amdvt,tv_org+20
                        012225    5-42  	equ	amfirst,tv_org+21
                        012226    5-43  	equ	amlast,tv_org+22
                        012227    5-44  	equ	cvnamla,tv_org+23
                        012230    5-45  	equ	sect_per_cyl_list,tv_org+24
                        012231    5-46  	equ	sect_per_dev_list,tv_org+25
                        012232    5-47  	equ	rec_per_dev_list,tv_org+26
                        012233    5-48  	equ	amaxio,tv_org+27
                        012234    5-49  	equ	rdsec,tv_org+28
                        012235    5-50  	equ	wtsec,tv_org+29
                        012236    5-51  	equ	disk_brief,tv_org+30
                        012237    5-52  	equ	itaper,tv_org+31
                        012240    5-53  	equ	itapew,tv_org+32
                        012241    5-54  	equ	erpt,tv_org+33
                        012242    5-55  	equ	ercv,tv_org+34
                        012243    5-56  	equ	erbuf,tv_org+35
                        012244    5-57  	equ	type,tv_org+36
                        012245    5-58  	equ	ttyinit,tv_org+37
                        012246    5-59  	equ	readcd,tv_org+38
                        012247    5-60  	equ	readtty,tv_org+39
                        012250    5-61  	equ	getprt,tv_org+40
                        012251    5-62  	equ	punch,tv_org+41
                        012252    5-63  	equ	octwd,tv_org+42
                        012253    5-64  	equ	geas,tv_org+43
                        012254    5-65  	equ	geastab,tv_org+44
                        012255    5-66  	equ	asge,tv_org+45
                        012256    5-67  	equ	asgetab,tv_org+46
                        012257    5-68  	equ	ljust,tv_org+47
                        012260    5-69  	equ	rjust,tv_org+48
                        012261    5-70  	equ	bzel,tv_org+49
                        012262    5-71  	equ	stripa,tv_org+50
                        012263    5-72  	equ	stripg,tv_org+51
                        012264    5-73  	equ	getconf,tv_org+52
                        012265    5-74  	equ	getmore,tv_org+53
                        012266    5-75  	equ	getperiph,tv_org+54
                        012267    5-76  	equ	rdclock,tv_org+55
                        012270    5-77  	equ	cvclock,tv_org+56
                        012271    5-78  	equ	init_io,tv_org+57
                        012272    5-79  	equ	connect_iom,tv_org+58
                        012273    5-80  	equ	getmpc,tv_org+59
                        012274    5-81  	equ	check_status,tv_org+60
                        012275    5-82  	equ	get_special_interrupt,tv_org+61
                        012276    5-83  	equ	get_status_interrupt,tv_org+62
                        012277    5-84  	equ	xio_wait,tv_org+63
                        012300    5-85  	equ	initint,tv_org+64
                        012301    5-86  	equ	wantflt,tv_org+65
                        012302    5-87  	equ	intno,tv_org+66
                        012303    5-88  	equ	intrpts1,tv_org+67
                        012304    5-89  	equ	hexwd,tv_org+68
                        012305    5-90  	equ	find_disk,tv_org+69
                        012306    5-91  	equ	find_root,tv_org+70
                        012307    5-92  	equ	find_part,tv_org+71
                        012310    5-93  	equ	check_status_no_stat,tv_org+72
                        012311    5-94  	equ	check_special_status,tv_org+73
                        012312    5-95  	equ	check_cpu_type,tv_org+74
                        012313    5-96  	equ	getportinfo,tv_org+75
                                  5-97  
                                  5-98  " End of include file ...... bos_tv.incl.alm
                                  5-99  
                                   570  	include	bos_common
                                   6-1  "
                                   6-2  " Begin include file ...... bos_common.incl.alm
                                   6-3  " Modified on 8/31/76 by N. I. Morris
                                   6-4  " Modified on 9/01/80 by Sherman D. Sprague for DPS8 operation
                                   6-5  " Modified on 5/26/82 by Sherman D. Sprague to lengthen config size
                                   6-6  " Modified on 3/01/83 by Sherman D. Sprague to lengthen dirlen
                                   6-7  "	MACHINE CONDITIONS AREA
                                   6-8  "		Its length is "storlen".
                                   6-9  
                        000000    6-10  	equ	amptwregs,0	Ass. Mem  PTW registers
                        000100    6-11  	equ	amptwptr,64	Ass. Mem  PTW pointers
                        000200    6-12  	equ	amsdwregs,128	Ass. Mem  SDW registers
                        000400    6-13  	equ	amsdwptr,256	Ass. Mem  SDW pointers
                        000500    6-14  	equ	ouhist,320	operations hist regs
                        000700    6-15  	equ	cuhist,448	control unit hist regs
                        001100    6-16  	equ	eishist,576	eis hist regs
                        001300    6-17  	equ	aphist,704	appending unit hist regs
                        001500    6-18  	equ	prs,832		pointer regs
                        001520    6-19  	equ	regs,848		sreg
                        001530    6-20  	equ	low_order_port,856	port to read clock from
                        001532    6-21  	equ	mctime,858	bootload memory clock
                        001540    6-22  	equ	scu,864
                        001550    6-23  	equ	mcm,872		memory masks 8 ports 
                        001570    6-24  	equ	dbr,888
                        001572    6-25  	equ	intrpts,890	waiting interrupts
                        001573    6-26  	equ	bar,891		bar
                        001574    6-27  	equ	modereg,892	processor & cache mode registers
                        001576    6-28  	equ	faultreg,894	processor fault register
                        001600    6-29  	equ	ptrlen,896	pointer-lengths EIS 0 mod 8
                        001610    6-30  	equ	coreblocks,904	array of port information
                                  6-31  "				Bits  0-17 => num 1st 64-word block
                                  6-32  "				Bits 18-35 => num of 64-word blocks
                                  6-33  "				(-1) => no mem on this port
                        001620    6-34  	equ	lowport_cfg,912	Saved CFG from bootload SCU
                                  6-35  
                        002000    6-36  	equ	storlen,1024
                                  6-37  
                                  6-38  
                                  6-39  
                                  6-40  "	BOS COMMAND DIRECTORY
                                  6-41  "		Its length is "dirlen".
                                  6-42  
                        002000    6-43  	equ	dir,1024		( 0-23) => sector # of first sector on BOS disk
                                  6-44  "				(24-35) => # of sectors in BOS common
                        002001    6-45  	equ	used,dir+1	( 0-23) => # of next available sector on BOS disk
                        002002    6-46  	equ	useable,dir+2	( 0-23) => first unavailable sector on BOS disk
                        002003    6-47  	equ	corearea,dir+3	( 0-23) => starting sector of Multics core image
                                  6-48  "				(24-35) => # of sectors in Multics core image
                        002004    6-49  	equ	setuparea,dir+4	Sector and length of setup
                        002005    6-50  	equ	utilarea,dir+5	where utility package is kept
                        002010    6-51  	equ	iom_mxbase,dir+8	IOM IMW area address
                        002011    6-52  	equ	iom_mbbase,dir+9	IOM mailbox base
                        002012    6-53  	equ	bos_dvt,dir+10	BOS disk loc: (o3/iom,o6/chn,o9/drive,o18/devtype)
                        002013    6-54  	equ	unitgroup,dir+11	disk unitgroup (device no. or area no.)
                        002014    6-55  	equ	diskchanno,dir+12	channel to be used for disk
                        002015    6-56  	equ	tapechanno,dir+13	channel # for tapes
                        002016    6-57  	equ	rdrchanno,dir+14	channel number for card reader
                        002017    6-58  	equ	ttychanno,dir+15	channel # for operator's tty
                        002020    6-59  	equ	quietsw,dir+16	if on, don't print card and macro commands
                        002021    6-60  	equ	inputsw,dir+17	read from tty, cards, macros
                        002022    6-61  	equ	macroloc,dir+18	disk addr, buffer index of macro file
                        002023    6-62  	equ	fdump_state,dir+19	completion flag for last FDUMP
                        002024    6-63  	equ	d355_state,dir+20	= 1 if DataNet 355 loaded successfully
                        002025    6-64  	equ	skipsw,dir+21	if on, skip runcom lines
                        002026    6-65  	equ	ttypmtsw,dir+22	if on, prompt
                        002027    6-66  	equ	curtcmd,dir+23	current bos command
                        002030    6-67  	equ	readysw,dir+24	if on, print ready message
                        002032    6-68  	equ	cmdlst,dir+26	list of commands
                                  6-69  
                        000600    6-70  	equ	dirlen,384
                                  6-71  
                                  6-72  
                                  6-73  
                                  6-74  "	MACRO BUFFER AREA
                                  6-75  
                        002600    6-76  	equ	macrobuf,dir+dirlen  io buffer for macro files
                        002700    6-77  	equ	macroline,macrobuf+64  runcom command line
                        002716    6-78  	equ	macroargs,macroline+14  argument descriptors for runcom
                                  6-79  
                                  6-80  
                                  6-81  
                                  6-82  "	CONFIGURATION CARD AREA
                                  6-83  "		Its length is 2048 words.
                                  6-84  
                        003000    6-85  	equ	conf,macrobuf+128	start of configuration info
                        007000    6-86  	equ	econf,conf+2048	end of configuration info
                        000020    6-87  	equ	confl,16		length of each line
                                  6-88  
                                  6-89  
                        007000    6-90  	equ	seg6length,econf	length of bos_common area segment
                                  6-91  
                                  6-92  " End of include file ...... bos_common.incl.alm
                                  6-93  
                                   571  
                                   572  
                                   573  
                                   574  	end
LITERALS
     
    006730  aa   202020 202020 
    006731  aa   202054 202020 
    006732  aa   000000 000000 
    006733  aa   202020 202062 
    006734  aa   252744 254563 
    006735  aa   204721 272520 
    006736  aa   607777 777777 
NAME DEFINITIONS FOR ENTRY POINTS AND SEGDEFS

    006737  5a   000003 000000 
    006740  5a   000017 600000 
    006741  aa   000000 000000 
    006742  55   000010 000002 
    006743  5a   000002 400003 
    006744  55   000006 000010 
    006745  aa  005 160 164 160
    006746  aa  153 147 000 000
    006747  55   000002 000003 
    006750  6a   000000 400002 
    006751  55   000013 000003 
    006752  aa  014 163 171 155         symbol_table
    006753  aa  142 157 154 137
    006754  aa  164 141 142 154
    006755  aa  145 000 000 000

DEFINITIONS HASH TABLE

    006756  aa   000000 000015 
    006757  aa   000000 000000 
    006760  aa   000000 000000 
    006761  aa   000000 000000 
    006762  aa   000000 000000 
    006763  aa   000000 000000 
    006764  aa   000000 000000 
    006765  5a   000010 000000 
    006766  aa   000000 000000 
    006767  aa   000000 000000 
    006770  aa   000000 000000 
    006771  aa   000000 000000 
    006772  aa   000000 000000 
    006773  aa   000000 000000 

NO EXTERNAL NAMES

NO TRAP POINTER WORDS

TYPE PAIR BLOCKS

    006774  aa   000001 000000 
    006775  aa   000000 000000 

INTERNAL EXPRESSION WORDS

LINKAGE INFORMATION
      
    000000  aa   000000 000000 
    000001  0a   006737 000000 
    000002  aa   000000 000000 
    000003  aa   000000 000000 
    000004  aa   000000 000000 
    000005  aa   000000 000000 
    000006  22   000010 000010 
    000007  a2   000000 000000 
SYMBOL INFORMATION
     
SYMBOL TABLE HEADER
     
    000000  aa   000000 000001 
    000001  aa   163171 155142 
    000002  aa   164162 145145 
    000003  aa   000000 000004 
    000004  aa   000000 112143 
    000005  aa   305203 523135 
    000006  aa   000000 112272 
    000007  aa   230502 636767 
    000010  aa   141154 155040 
    000011  aa   040040 040040 
    000012  aa   000024 000040 
    000013  aa   000034 000040 
    000014  aa   000044 000100 
    000015  aa   000010 000002 
    000016  aa   000064 000000 
    000017  aa   000000 000562 
    000020  aa   000000 000210 
    000021  aa   000000 000545 
    000022  aa   000550 000210 
    000023  aa   000064 000000 
    000024  aa   101114 115040 
    000025  aa   126145 162163 
    000026  aa   151157 156040 
    000027  aa   040066 056066 
    000030  aa   040040 116157 
    000031  aa   166145 155142 
    000032  aa   145162 040061 
    000033  aa   071070 062040 
    000034  aa   110157 154155 
    000035  aa   163164 145144 
    000036  aa   164056 123171 
    000037  aa   163115 141151 
    000040  aa   156164 056141 
    000041  aa   040040 040040 
    000042  aa   040040 040040 
    000043  aa   040040 040040 
    000044  aa   154151 163164 
    000045  aa   040040 040040 
    000046  aa   040040 040040 
    000047  aa   040040 040040 
    000050  aa   040040 040040 
    000051  aa   040040 040040 
    000052  aa   040040 040040 
    000053  aa   040040 040040 
    000054  aa   040040 040040 
    000055  aa   040040 040040 
    000056  aa   040040 040040 
    000057  aa   040040 040040 
    000060  aa   040040 040040 
    000061  aa   040040 040040 
    000062  aa   040040 040040 
    000063  aa   040040 040040 
    000064  aa   000000 000001 
    000065  aa   000000 000007 
    000066  aa   000122 000026 
    000067  aa   122721 273101 
    000070  aa   000000 112272 
    000071  aa   216172 600000 
    000072  aa   000130 000040 
    000073  aa   113400 415301 
    000074  aa   000000 111341 
    000075  aa   220414 400000 
    000076  aa   000140 000040 
    000077  aa   077322 074066 
    000100  aa   000000 107733 
    000101  aa   111404 200000 
    000102  aa   000150 000030 
    000103  aa   077377 110471 
    000104  aa   000000 107737 
    000105  aa   746246 400000 
    000106  aa   000156 000043 
    000107  aa   043243 127523 
    000110  aa   000000 101621 
    000111  aa   351624 000000 
    000112  aa   000167 000040 
    000113  aa   110235 072677 
    000114  aa   000000 111024 
    000115  aa   524460 600000 
    000116  aa   000177 000044 
    000117  aa   121622 277475 
    000120  aa   000000 112162 
    000121  aa   321563 400000 
    000122  aa   076163 160145          >spec>h>3.17>ptpkg.alm
    000123  aa   143076 150076 
    000124  aa   063056 061067 
    000125  aa   076160 164160 
    000126  aa   153147 056141 
    000127  aa   154155 040040 
    000130  aa   076154 144144          >ldd>bos>include>bosequ.incl.alm
    000131  aa   076142 157163 
    000132  aa   076151 156143 
    000133  aa   154165 144145 
    000134  aa   076142 157163 
    000135  aa   145161 165056 
    000136  aa   151156 143154 
    000137  aa   056141 154155 
    000140  aa   076154 144144          >ldd>bos>include>pt_equ.incl.alm
    000141  aa   076142 157163 
    000142  aa   076151 156143 
    000143  aa   154165 144145 
    000144  aa   076160 164137 
    000145  aa   145161 165056 
    000146  aa   151156 143154 
    000147  aa   056141 154155 
    000150  aa   076154 144144          >ldd>include>mc.incl.alm
    000151  aa   076151 156143 
    000152  aa   154165 144145 
    000153  aa   076155 143056 
    000154  aa   151156 143154 
    000155  aa   056141 154155 
    000156  aa   076154 144144          >ldd>include>eis_micro_ops.incl.alm
    000157  aa   076151 156143 
    000160  aa   154165 144145 
    000161  aa   076145 151163 
    000162  aa   137155 151143 
    000163  aa   162157 137157 
    000164  aa   160163 056151 
    000165  aa   156143 154056 
    000166  aa   141154 155040 
    000167  aa   076154 144144          >ldd>bos>include>bos_tv.incl.alm
    000170  aa   076142 157163 
    000171  aa   076151 156143 
    000172  aa   154165 144145 
    000173  aa   076142 157163 
    000174  aa   137164 166056 
    000175  aa   151156 143154 
    000176  aa   056141 154155 
    000177  aa   076154 144144          >ldd>bos>include>bos_common.incl.alm
    000200  aa   076142 157163 
    000201  aa   076151 156143 
    000202  aa   154165 144145 
    000203  aa   076142 157163 
    000204  aa   137143 157155 
    000205  aa   155157 156056 
    000206  aa   151156 143154 
    000207  aa   056141 154155 
               MULTICS ASSEMBLY CROSS REFERENCE LISTING

   Value        Symbol                   Source file   Line number

       12233    amaxio                   bos_tv:        48.
       12224    amdvt                    bos_tv:        41.
       12225    amfirst                  bos_tv:        42.
       12226    amlast                   bos_tv:        43.
         100    amptwptr                 bos_common:    11.
           0    amptwregs                bos_common:    10.
         400    amsdwptr                 bos_common:    13.
         200    amsdwregs                bos_common:    12.
        1300    aphist                   bos_common:    17.
       12040    arg                      bos_tv:        14,   15.
       12222    argbos                   bos_tv:        39.
          17    arglen                   bosequ:        17,
                                         bos_tv:        15,   16,   17.
       12223    argmul                   bos_tv:        40.
       12201    arg_count                bos_tv:        22.
       12255    asge                     bos_tv:        66.
       12256    asgetab                  bos_tv:        67.
        1573    bar                      bos_common:    26.
           2    bf                       bosequ:         9.
        6570    binpage                  ptpkg:        425,  428,  464,  489.
       12217    bosmul                   bos_tv:        36.
       12214    bosphy                   bos_tv:        33.
        2012    bos_dvt                  bos_common:    53.
       12261    bzel                     ptpkg:        413,
                                         bos_tv:        70.
       12312    check_cpu_type           bos_tv:        95.
       12311    check_special_status     bos_tv:        94.
       12274    check_status             ptpkg:        280,
                                         bos_tv:        81.
       12310    check_status_no_stat     bos_tv:        93.
        6622    check_tape_status        ptpkg:        168,  371,  452,  496.
         420    cht                      eis_micro_ops:       17.
        2032    cmdlst                   bos_common:    68.
           6    com                      bosequ:        14.
        3000    conf                     bos_common:    85,   86.
          20    confl                    bos_common:    87.
       12272    connect_iom              bos_tv:        79.
        2003    corearea                 bos_common:    47.
        1610    coreblocks               bos_common:    30.
        6631    ctpeof                   ptpkg:        506,  511.
        6656    ctp_x2                   ptpkg:        497,  498,  525,  531,  536.
         700    cuhist                   bos_common:    15.
        2027    curtcmd                  bos_common:    66.
       12270    cvclock                  bos_tv:        77.
       12210    cvinit                   bos_tv:        29.
       12227    cvnamla                  bos_tv:        44.
        2024    d355_state               bos_common:    63.
       12060    darg                     ptpkg:         84,
                                         bos_tv:        15,   16.
        1570    dbr                      bos_common:    24.
        6105    denerr                   ptpkg:        114,  118.
        2000    dir                      bos_common:    43,   45,   46,   47,   49,   50,   51,   52,   53,   54,   55,   56,
                                                        57,   58,   59,   60,   61,   62,   63,   64,   65,   66,   67,   68,   76.
         600    dirlen                   bos_common:    70,   76.
        2014    diskchanno               bos_common:    55.
       12236    disk_brief               bos_tv:        51.
           0    ds                       bosequ:         7.
       12100    earg                     bos_tv:        16,   17.
        7000    econf                    bos_common:    86,   90.
        1100    eishist                  bos_common:    16.
        6176    ejl                      ptpkg:        174,  179.
          40    enf                      eis_micro_ops:        2.
        6175    eofpt                    ptpkg:        154,  173.
        6160    eoftp                    ptpkg:        153,  156.
       12243    erbuf                    bos_tv:        56.
       12242    ercv                     bos_tv:        55.
       12241    erpt                     ptpkg:        120,  305,  518,  533,  547,
                                         bos_tv:        54.
        1576    faultreg                 bos_common:    28.
        2023    fdump_state              bos_common:    62.
           5    fgb                      bosequ:        13.
       12305    find_disk                bos_tv:        90.
       12307    find_part                bos_tv:        92.
       12306    find_root                bos_tv:        91.
        2000    firmware_bit             bosequ:        20.
       12120    fltscu                   ptpkg:        293,
                                         bos_tv:        17.
       12253    geas                     bos_tv:        64.
       12254    geastab                  bos_tv:        65.
       12264    getconf                  bos_tv:        73.
       12265    getmore                  bos_tv:        74.
       12273    getmpc                   bos_tv:        80.
       12266    getperiph                bos_tv:        75.
       12313    getportinfo              bos_tv:        96.
       12250    getprt                   ptpkg:        141,
                                         bos_tv:        61.
       12207    getsec                   bos_tv:        28.
       12275    get_special_interrupt    bos_tv:        82.
       12276    get_status_interrupt     bos_tv:        83.
        6004    headform                 ptpkg:         44,  382,
                                         pt_equ:        12.
        6471    headform_                ptpkg:         45,  392.
        6553    headretn                 ptpkg:        394,  457.
       12304    hexwd                    bos_tv:        89.
          10    if0                      eis_micro_ops:       19.
           4    if1                      eis_micro_ops:       20.
           2    if2                      eis_micro_ops:       21.
           1    if3                      eis_micro_ops:       22.
         300    ign                      eis_micro_ops:       12.
       12300    initint                  bos_tv:        85.
        6010    initprint                ptpkg:         54,   76,
                                         pt_equ:        15.
        6554    initprint_               ptpkg:         55,  462.
       12271    init_io                  bos_tv:        78.
        2021    inputsw                  bos_common:    60.
         220    insa                     eis_micro_ops:        9.
         200    insb                     eis_micro_ops:        8.
          20    insm                     eis_micro_ops:        1.
         240    insn                     eis_micro_ops:       10.
         260    insp                     eis_micro_ops:       11.
       12302    intno                    bos_tv:        87.
        1572    intrpts                  bos_common:    25.
       12303    intrpts1                 bos_tv:        88.
        2011    iom_mbbase               bos_common:    52.
        2010    iom_mxbase               bos_common:    51.
       12237    itaper                   bos_tv:        52.
       12240    itapew                   ptpkg:         91,  101,  111,  521,
                                         bos_tv:        53.
       12206    ldcom                    bos_tv:        27.
       12001    line                     ptpkg:        234,  240,  248,  260,  342,  359,
                                         bos_tv:        13,   14.
       12257    ljust                    bos_tv:        68.
       12220    lookup_devmodel          bos_tv:        37.
        1620    lowport_cfg              bos_common:    34.
        1530    low_order_port           bos_common:    20.
         400    lte                      ptpkg:        491,
                                         eis_micro_ops:       16.
        2716    macroargs                bos_common:    78.
        2600    macrobuf                 bos_common:    76,   77,   85.
        2700    macroline                bos_common:    77,   78.
        2022    macroloc                 bos_common:    61.
       12205    makefil                  bos_tv:        26.
       12221    makesdw                  bos_tv:        38.
      300000    mc.cpu_type_mask         mc:            22.
           3    mc.cpu_type_shift        mc:            25.
          46    mc.cpu_type_word         mc:            21.
          50    mc.eis_info              mc:            11.
          43    mc.errcode               mc:            17.
          46    mc.ext_fault_reg         mc:            23.
       77774    mc.ext_fault_reg_mask    mc:            24.
          45    mc.fault_reg             mc:            19.
          46    mc.fault_time            mc:            20.
          44    mc.fim_temp              mc:            18.
          42    mc.ips_temp              mc:            16.
          40    mc.mask                  mc:            15.
           0    mc.prs                   mc:             8.
          20    mc.regs                  mc:             9.
          30    mc.scu                   mc:            10.
          30    mc.scu.apu_stat_word     mc:            48.
          35    mc.scu.ca_word           mc:           207.
          32    mc.scu.cpu_no_word       mc:           138.
          35    mc.scu.cpu_tag_word      mc:           231.
          35    mc.scu.cu_stat_word      mc:           211.
          32    mc.scu.delta_word        mc:           144.
          30    mc.scu.fault_cntr_word   mc:            66.
          31    mc.scu.fault_data_word   mc:            74.
          34    mc.scu.ilc_word          mc:           182.
          34    mc.scu.indicators_word   mc:           186.
          31    mc.scu.port_stat_word    mc:           108.
          30    mc.scu.ppr.prr_word      mc:            33.
          30    mc.scu.ppr.psr_word      mc:            38.
          30    mc.scu.ppr.p_word        mc:            43.
          33    mc.scu.tpr.tbr_word      mc:           174.
          32    mc.scu.tpr.trr_word      mc:           128.
          32    mc.scu.tpr.tsr_word      mc:           133.
          33    mc.scu.tsr_stat_word     mc:           152.
        1550    mcm                      bos_common:    23.
        1532    mctime                   bos_common:    21.
           7    mem                      bosequ:        15.
         160    mflc                     eis_micro_ops:        7.
         140    mfls                     eis_micro_ops:        6.
        1574    modereg                  bos_common:    27.
         360    mors                     eis_micro_ops:       15.
         340    mses                     eis_micro_ops:       14.
       12216    mulbos                   bos_tv:        35.
         320    mvc                      ptpkg:        491,
                                         eis_micro_ops:       13.
         120    mvza                     eis_micro_ops:        5.
         100    mvzb                     ptpkg:        491,
                                         eis_micro_ops:        4.
       12202    nextline                 bos_tv:        23.
       12203    nlraw                    bos_tv:        24.
        6447    nopa                     ptpkg:        357,  365.
        6545    nopb                     ptpkg:        438,  449.
        6501    noph                     ptpkg:        396,  402.
        6521    nosegnumber              ptpkg:        411,  422.
        6456    no_tape                  ptpkg:        363,  373.
        6365    octtab                   ptpkg:        256,  322.
       12252    octwd                    ptpkg:        237,  412,
                                         bos_tv:        63.
         500    ouhist                   bos_common:    14.
       12000    pagectl                  ptpkg:        366,  374,  455,
                                         bos_tv:        12,   13.
        6571    pagenum                  ptpkg:        426,  430,  490.
        6573    pgedit                   ptpkg:        431,  491.
           3    pgm                      bosequ:        10.
       12215    phyadd                   bos_tv:        34.
       12213    phybos                   bos_tv:        32.
        6050    pox                      ptpkg:         73,   77.
        6464    pretn                    ptpkg:        355,  380,  383.
        6005    print                    ptpkg:         47,  270,
                                         pt_equ:        13.
        6716    printer0                 ptpkg:        542,  553.
        6724    printer1                 ptpkg:        556,  560.
        6676    printerr                 ptpkg:        177,  362,  400,  446,  540.
        6000    printon                  ptpkg:         32,  170,
                                         pt_equ:         8.
          11    printone                 ptpkg:        352,  480.
          31    printone_edited          ptpkg:        386,  481.
        6044    printon_                 ptpkg:         33,   73.
          12    printtwo                 ptpkg:        445,  482.
        6435    print_                   ptpkg:         48,  351.
        6444    print_cmd_loc            ptpkg:        354,  360.
        6011    print_edited             ptpkg:         57,
                                         pt_equ:        16.
        6467    print_edited_            ptpkg:         58,  385.
        6436    print_merge              ptpkg:        353,  387.
        6560    prlinecnt                ptpkg:        376,  377,  403,  465,  471.
        6561    prmaxline                ptpkg:        378,  472.
        1500    prs                      bos_common:    18.
        6325    prtflt                   ptpkg:        214,  292.
        6563    prtno                    ptpkg:         75,  137,  142,  176,  361,  399,  445,  474.
        6562    prtsw                    ptpkg:         74,   89,  134,  437,  473.
        6243    ptb1                     ptpkg:        220,  227,  311.
        6270    ptbcl                    ptpkg:        253,  268.
        6301    ptbcount                 ptpkg:        196,  264,  277.
        6312    ptbend                   ptpkg:        271,  276.
        6014    ptbfirst                 ptpkg:         60,  205,  209,  343,  393,
                                         pt_equ:        17.
        6362    ptbiw                    ptpkg:        193,  203,  298,  301,  318.
        6006    ptblock                  ptpkg:         50,
                                         pt_equ:        14.
        6205    ptblock_                 ptpkg:         51,  188.
        6230    ptbloop                  ptpkg:        206,  213,  278.
        6356    ptbo                     ptpkg:        303,  307,  314.
        6420    ptbold                   ptpkg:        219,  225,  254,  335.
        6306    ptbout                   ptpkg:        265,  270.
        6410    ptbregs                  ptpkg:        292,  308,  310,  333.
        6310    ptbsame                  ptpkg:        230,  273.
        6357    ptbsup                   ptpkg:        208,  243,  245,  273,  315.
        6361    ptbsupno                 ptpkg:        197,  200,  238,  317.
        6360    ptbtmp                   ptpkg:        210,  213,  221,  229,  316.
        6363    ptbword                  ptpkg:        255,  259,  320.
        6321    ptbx2                    ptpkg:        188,  189,  285.
        6567    pterrsw                  ptpkg:        133,  478,  530,  532,  541,  543.
        6714    ptex2                    ptpkg:        545,  550.
        6016    pthdr                    ptpkg:         66,  406,  407,  408,  415,  418,  420,  432,  435,  441,  450,
                                         pt_equ:        19.
        1600    ptrlen                   bos_common:    29.
        6355    ptsavp5                  ptpkg:        190,  287,  313.
        6015    ptsegno                  ptpkg:         63,  410,
                                         pt_equ:        18.
        6566    ptstat                   ptpkg:        477,  500,  535,  546,  549,  551.
        6000    pt_org                   pt_equ:         6,    8,    9,   10,   11,   12,   13,   14,   15,   16,   17,   18,   19.
       12251    punch                    bos_tv:        62.
        2020    quietsw                  bos_common:    59.
       12267    rdclock                  bos_tv:        76.
       12211    rdev                     bos_tv:        30.
        2016    rdrchanno                bos_common:    57.
       12234    rdsec                    bos_tv:        49.
       12246    readcd                   bos_tv:        59.
       12247    readtty                  bos_tv:        60.
        2030    readysw                  bos_common:    67.
       12232    rec_per_dev_list         bos_tv:        47.
        1520    regs                     bos_common:    19.
       12260    rjust                    bos_tv:        69.
          72    run                      ptpkg:        486,  515.
        4000    runcom_bit               bosequ:        19.
       12200    scan                     bos_tv:        21.
        1540    scu                      bos_common:    22.
        2000    scu.apu.dsptw            mc:            57.
          10    scu.apu.fabs             mc:            64.
          20    scu.apu.fanp             mc:            63.
          40    scu.apu.fap              mc:            62.
        4000    scu.apu.pi_ap            mc:            56.
         200    scu.apu.ptw              mc:            60.
         100    scu.apu.ptw2             mc:            61.
       20000    scu.apu.ptwm             mc:            54.
       10000    scu.apu.pt_on            mc:            55.
      100000    scu.apu.sdwm             mc:            52.
        1000    scu.apu.sdwnp            mc:            58.
         400    scu.apu.sdwp             mc:            59.
       40000    scu.apu.sd_on            mc:            53.
      200000    scu.apu.xsf              mc:            51.
           0    scu.apu_stat_word        mc:            49.
          22    scu.ca_shift             mc:           209.
           5    scu.ca_word              mc:           208.
         700    scu.con_chan_mask        mc:           117.
           6    scu.con_chan_shift       mc:           118.
         700    scu.cpu_no_mask          mc:           141.
           2    scu.cpu_no_word          mc:           139.
           6    scu.cpu_shift            mc:           142.
           7    scu.cpu_tag_mask         mc:           234.
           5    scu.cpu_tag_word         mc:           232.
         100    scu.cu.if                mc:           229.
        1000    scu.cu.poa               mc:           226.
       10000    scu.cu.pon               mc:           221.
       20000    scu.cu.pot               mc:           220.
      100000    scu.cu.rd                mc:           217.
      400000    scu.cu.rf                mc:           214.
         400    scu.cu.rfi               mc:           227.
       40000    scu.cu.rl                mc:           218.
      200000    scu.cu.rpt               mc:           216.
        4000    scu.cu.xde               mc:           223.
        2000    scu.cu.xdo               mc:           224.
           5    scu.cu_stat_word         mc:           212.
          77    scu.delta_mask           mc:           147.
           2    scu.delta_word           mc:           145.
          36    scu.even_inst_word       mc:           239.
           7    scu.fault_cntr_mask      mc:            69.
           0    scu.fault_cntr_word      mc:            67.
           1    scu.fault_data_word      ptpkg:        293,
                                         mc:            75.
          10    scu.fd.am_er             mc:            91.
         200    scu.fd.boc               mc:            87.
          40    scu.fd.crt               mc:            89.
      100000    scu.fd.e_off             mc:            79.
      100000    scu.fd.ia_im             mc:           102.
         100    scu.fd.inret             mc:            88.
      200000    scu.fd.ioc               mc:           101.
       20000    scu.fd.ipr               mc:           104.
      400000    scu.fd.iro               mc:            77.
      400000    scu.fd.isn               mc:           100.
       40000    scu.fd.isp               mc:           103.
       10000    scu.fd.nea               mc:           105.
        2000    scu.fd.no_ga             mc:            84.
         400    scu.fd.ocall             mc:            86.
        1000    scu.fd.ocb               mc:            85.
      200000    scu.fd.oeb               mc:            78.
      400000    scu.fd.onc_1             mc:            96.
      200000    scu.fd.onc_2             mc:            97.
        4000    scu.fd.oobb              mc:           106.
           4    scu.fd.oosb              mc:            92.
       40000    scu.fd.orb               mc:            80.
       10000    scu.fd.owb               mc:            82.
           1    scu.fd.parl              mc:            94.
           2    scu.fd.paru              mc:            93.
          20    scu.fd.ralr              mc:            90.
       20000    scu.fd.r_off             mc:            81.
        4000    scu.fd.w_off             mc:            83.
           1    scu.fi_flag_mask         mc:           123.
          76    scu.fi_num_mask          ptpkg:        294,
                                         mc:           120.
           1    scu.fi_num_shift         mc:           121.
        7000    scu.iac_mask             mc:           114.
          11    scu.iac_shift            mc:           115.
      170000    scu.ial_mask             mc:           111.
          14    scu.ial_shift            mc:           112.
          22    scu.ilc_shift            mc:           184.
           4    scu.ilc_word             mc:           183.
           4    scu.indicators_word      mc:           187.
          20    scu.ir.abs               mc:           202.
         200    scu.ir.bm                mc:           199.
      100000    scu.ir.carry             mc:           191.
       20000    scu.ir.eovf              mc:           193.
       10000    scu.ir.eufl              mc:           194.
          40    scu.ir.mif               mc:           201.
      200000    scu.ir.neg               mc:           190.
        4000    scu.ir.oflm              mc:           195.
       40000    scu.ir.ovfl              mc:           192.
        1000    scu.ir.par               mc:           197.
         400    scu.ir.parm              mc:           198.
        2000    scu.ir.tro               mc:           196.
         100    scu.ir.tru               mc:           200.
      400000    scu.ir.zero              mc:           189.
          37    scu.odd_inst_word        mc:           241.
           1    scu.port_stat_word       mc:           109.
      400000    scu.ppr.p                mc:            45.
      700000    scu.ppr.prr_mask         mc:            35.
          41    scu.ppr.prr_shift        mc:            36.
           0    scu.ppr.prr_word         mc:            34.
       77777    scu.ppr.psr_mask         mc:            40.
          22    scu.ppr.psr_shift        mc:            41.
           0    scu.ppr.psr_word         mc:            39.
           0    scu.ppr.p_word           mc:            44.
          77    scu.tpr.tbr_mask         mc:           177.
           3    scu.tpr.tbr_word         mc:           175.
      700000    scu.tpr.trr_mask         mc:           130.
          41    scu.tpr.trr_shift        mc:           131.
           2    scu.tpr.trr_word         mc:           129.
       77777    scu.tpr.tsr_mask         mc:           135.
          22    scu.tpr.tsr_shift        mc:           136.
           2    scu.tpr.tsr_word         mc:           134.
      700000    scu.tsna.prn_mask        mc:           159.
          17    scu.tsna.prn_shift       mc:           160.
       40000    scu.tsna.prv             mc:           161.
      740000    scu.tsna_mask            mc:           158.
       34000    scu.tsnb.prn_mask        mc:           164.
          13    scu.tsnb.prn_shift       mc:           165.
        2000    scu.tsnb.prv             mc:           166.
       36000    scu.tsnb_mask            mc:           163.
        1600    scu.tsnc.prn_mask        mc:           169.
           7    scu.tsnc.prn_shift       mc:           170.
         100    scu.tsnc.prv             mc:           171.
          13    scu.tsnc_mask            mc:           168.
      777700    scu.tsr_stat_mask        mc:           155.
           6    scu.tsr_stat_shift       mc:           156.
           3    scu.tsr_stat_word        mc:           153.
       12204    search                   bos_tv:        25.
       12230    sect_per_cyl_list        bos_tv:        45.
       12231    sect_per_dev_list        bos_tv:        46.
        7000    seg6length               bos_common:    90.
          60    ses                      eis_micro_ops:        3.
        2004    setuparea                bos_common:    49.
          63    skiphead                 ptpkg:        399,  483.
        2025    skipsw                   bos_common:    64.
        6003    space                    ptpkg:         41,
                                         pt_equ:        11.
        6430    space_                   ptpkg:         42,  339.
        6140    st1600                   ptpkg:        108,  123,  128.
        6141    st6250                   ptpkg:        119,  124,  129.
        6137    st800                    ptpkg:         98,  122,  127.
        2000    storlen                  bos_common:    36.
       12262    stripa                   bos_tv:        71.
       12263    stripg                   bos_tv:        72.
        2015    tapechanno               bos_common:    56.
        6565    tapeden                  ptpkg:         93,  100,  103,  110,  113,  476,  523.
        6564    tapeno                   ptpkg:         88,   92,  102,  112,  160,  167,  370,  451,  475,  508,  515,  522.
        6001    tapeon                   ptpkg:         35,
                                         pt_equ:         9.
        6051    tapeon_                  ptpkg:         36,   83.
        6661    taperr                   ptpkg:        503,  530.
        6551    tapesw_off               ptpkg:        447,  453.
        6574    tbuff                    ptpkg:        367,  369,  442,  444,  493.
           1    tmp                      bosequ:         8.
        6142    torp                     ptpkg:        133,  152,  356,  395.
        6152    torpx2                   ptpkg:        140,  144.
        6104    tox                      ptpkg:         83,   95,  105,  116,  125.
        6065    try1600                  ptpkg:         94,   97.
        6075    try6250                  ptpkg:        104,  107.
        2017    ttychanno                bos_common:    58.
       12245    ttyinit                  bos_tv:        58.
        2026    ttypmtsw                 bos_common:    65.
       12200    tv_org                   bos_tv:        19,   21,   22,   23,   24,   25,   26,   27,   28,   29,   30,   31,
                                                        32,   33,   34,   35,   36,   37,   38,   39,   40,   41,   42,   43,
                                                        44,   45,   46,   47,   48,   49,   50,   51,   52,   53,   54,   55,
                                                        56,   57,   58,   59,   60,   61,   62,   63,   64,   65,   66,   67,
                                                        68,   69,   70,   71,   72,   73,   74,   75,   76,   77,   78,   79,
                                                        80,   81,   82,   83,   84,   85,   86,   87,   88,   89,   90,   91,
                                                        92,   93,   94,   95,   96.
       12244    type                     bos_tv:        57.
        2013    unitgroup                bos_common:    54.
        2002    useable                  bos_common:    46.
        2001    used                     bos_common:    45.
        2005    utilarea                 bos_common:    50.
       12000    utilorg                  bosequ:        22,
                                         bos_tv:        12,   19.
       12301    wantflt                  ptpkg:        215,  227,
                                         bos_tv:        86.
       12212    wdev                     bos_tv:        31.
          55    wef                      ptpkg:        485,  508.
          26    words_per_line           ptpkg:         23,   67,  234,  342,  359,  366,  367,  369,  441,  442,  444,  450,  493.
        6002    wteof                    ptpkg:         38,
                                         pt_equ:        10.
        6154    wteof_                   ptpkg:         39,  151.
        6161    wteof_write              ptpkg:        157,  161,  163.
        6204    wtex2                    ptpkg:        151,  171,  180.
       12235    wtsec                    bos_tv:        50.
       12277    xio_wait                 ptpkg:        158,  165,  174,  358,  368,  397,  443,  449,  506,  513,
                                         bos_tv:        84.
           4    xs1                      bosequ:        11.
           5    xs2                      bosequ:        12.


NO FATAL ERRORS


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
