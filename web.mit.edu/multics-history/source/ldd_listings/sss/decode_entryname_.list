	COMPILATION LISTING OF SEGMENT decode_entryname_
	Compiled by: Multics PL/I Compiler, Release 27d, of October 11, 1982
	Compiled at: Honeywell LISD Phoenix, System M
	Compiled on: 11/04/82  1831.7 mst Thu
	    Options: optimize map

        1 /* ***********************************************************
        2*   *                                                         *
        3*   * Copyright, (C) Honeywell Information Systems Inc., 1982 *
        4*   *                                                         *
        5*   * Copyright (c) 1972 by Massachusetts Institute of        *
        6*   * Technology and Honeywell Information Systems, Inc.      *
        7*   *                                                         *
        8*   *********************************************************** */
        9 
       10 
       11 decode_entryname_:	procedure (cname, rname, ename);
       12 
       13 
       14 /*
       15*
       16*	This procedure, given an entryname of the form "a$b" will
       17*	return the refname and entry portions separately, i.e. "a"
       18*	and "b".  If no "$" is found in the input string, "a$a" is
       19*	assumed.  If the input string is of the form "a$", "a" and
       20*	"" are returned.
       21*
       22*	P. Bos, May 1972
       23*
       24**/
       25 
       26      dcl	cname			char(*),		/* entryname, "a$b" */
       27 	rname			char(32),		/* refname "a" */
       28 	ename			char(32);		/* entry "b" */
       29 
       30      dcl (index, length, substr)	builtin;
       31 
       32      dcl (i, l)			fixed bin;
       33 
       34 
       35 /*  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  */
       36 
       37 
       38 	l = length (cname);				/* get length of input string */
       39 	i = index (cname, "$");			/* scan for delimiter */
       40 	if i = 0 then do;				/* no "$", assume "a$a" */
       41 	     rname, ename = cname;			/* set return values */
       42 	     return;				/* and exit */
       43 	     end;
       44 	rname = substr (cname, 1, i-1);		/* extract "a" portion */
       45 	if i < l then				/* if "$" was not last char */
       46 	     ename = substr (cname, i+1, l-i);		/* then extract "b" */
       47 	else					/* input was "a$" */
       48 	     ename = "";				/* give null string for entry */
       49 
       50 	return;					/* exit */
       51 
       52 
       53 	end decode_entryname_;
	SOURCE FILES USED IN THIS COMPILATION.

LINE      NUMBER  DATE MODIFIED     NAME			PATHNAME
             0    11/04/82  1630.7  decode_entryname_.pl1             >dumps>old>recomp>decode_entryname_.pl1
	NAMES DECLARED IN THIS COMPILATION.

IDENTIFIER	     OFFSET    LOC STORAGE CLASS   DATA TYPE		ATTRIBUTES AND REFERENCES
								(* indicates a set context)

NAMES DECLARED BY DECLARE STATEMENT.
cname                                  parameter       char                     unaligned dcl 26 ref 11 38 39 41 44 45
ename                                  parameter       char(32)                 unaligned dcl 26 set ref 11 41* 45* 47*
i                               000100 automatic       fixed bin(17,0)          dcl 32 set ref 39* 40 44 45 45 45
index                                                  builtin function         dcl 30 ref 39
l                               000101 automatic       fixed bin(17,0)          dcl 32 set ref 38* 45 45
length                                                 builtin function         dcl 30 ref 38
rname                                  parameter       char(32)                 unaligned dcl 26 set ref 11 41* 44*
substr                                                 builtin function         dcl 30 ref 44 45

NAME DECLARED BY EXPLICIT CONTEXT.
decode_entryname_               000006 constant        entry                    external dcl 11

THERE WERE NO NAMES DECLARED BY CONTEXT OR IMPLICATION.

STORAGE REQUIREMENTS FOR THIS PROGRAM.

	Object	Text	Link	Symbol	Defs	Static
Start          0       0       130         140     102         140
Length       302     102        10         126      26           0

BLOCK NAME	         STACK SIZE     TYPE		WHY NONQUICK/WHO SHARES STACK FRAME
decode_entryname_                    67 external procedure  is an external procedure.  

STORAGE FOR AUTOMATIC VARIABLES.

STACK FRAME                 LOC IDENTIFIER                  BLOCK NAME
decode_entryname_        000100 i                           decode_entryname_
                         000101 l                           decode_entryname_

THE FOLLOWING EXTERNAL OPERATORS ARE USED BY THIS PROGRAM.
alloc_cs            return              shorten_stack       ext_entry_desc

NO EXTERNAL ENTRIES ARE CALLED BY THIS PROGRAM.

NO EXTERNAL VARIABLES ARE USED BY THIS PROGRAM.




   LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC   
     11 000002        38 000021        39 000022        40 000035        41 000036        42 000053        44 000055
     45 000062        47 000075        50 000101


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
