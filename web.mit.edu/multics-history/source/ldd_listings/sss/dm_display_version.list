	COMPILATION LISTING OF SEGMENT dm_display_version
	Compiled by: Multics PL/I Compiler, Release 28e, of February 14, 1985
	Compiled at: Honeywell Multics Op. - System M
	Compiled on: 04/24/85  0830.8 mst Wed
	    Options: optimize map

        1 /* ***********************************************************
        2*   *                                                         *
        3*   * Copyright, (C) Honeywell Information Systems Inc., 1985 *
        4*   *                                                         *
        5*   *********************************************************** */
        6 /* DESCRIPTION:
        7*
        8*This command displays the version of the Data Management System software currently
        9*in use by the executing process.
       10**/
       11 
       12 /* HISTORY:
       13*
       14*Written by Lindsey L. Spratt, 01/24/85.
       15*Modified:
       16*02/15/85 by Lindsey L. Spratt:  Added comparison of
       17*            dm_misc_util_$get_system_version with the
       18*            dm_system_data_template_$system_software_version.
       19*03/19/85 by S. Cox: Added dm_not_available_ handler.
       20*04/16/85 by Lindsey L. Spratt:  Added a pnotice.
       21**/
       22 /* format: style2,ind3 */
       23 
       24 dm_display_version:
       25    proc ();
       26 
       27 /* START OF DECLARATIONS */
       28 /* Automatic */
       29 
       30       dcl	    arg_list_ptr	       ptr init (null);
       31       dcl	    bootload_version       char (8) aligned init ("");
       32       dcl	    code		       fixed bin (35);
       33       dcl	    dm_ring_version	       char (8) aligned init ("");
       34       dcl	    number_of_args	       fixed bin;
       35       dcl	    sci_ptr	       ptr init (null);
       36       dcl	    user_ring_version      char (8) aligned init (dm_system_data_template_$system_software_version);
       37 
       38 /* Based */
       39 /* Builtin */
       40 
       41       dcl	    null		       builtin;
       42 
       43 /* Condition */
       44 
       45       dcl	    (cleanup, dm_not_available_)
       46 			       condition;
       47 
       48 /* Constant */
       49 
       50       dcl	    myname	       init ("dm_display_version") char (18) internal static options (constant);
       51 
       52 /* Entry */
       53 
       54       dcl	    cu_$arg_list_ptr       entry (ptr);
       55       dcl	    dm_misc_util_$get_system_version
       56 			       entry (char (8) aligned, char (8) aligned);
       57       dcl	    ioa_		       entry () options (variable);
       58       dcl	    ssu_$abort_line	       entry () options (variable);
       59       dcl	    ssu_$arg_count	       entry (ptr, fixed bin);
       60       dcl	    ssu_$destroy_invocation
       61 			       entry (ptr);
       62       dcl	    ssu_$standalone_invocation
       63 			       entry (ptr, char (*), char (*), ptr, entry, fixed bin (35));
       64 
       65 /* External */
       66 
       67       dcl	    dm_system_data_template_$system_software_version
       68 			       char (8) aligned external;
       69       dcl	    dm_error_$system_not_initialized
       70 			       fixed bin (35) ext static;
       71       dcl	    error_table_$badopt    fixed bin (35) external;
       72 
       73 /* END OF DECLARATIONS */
       74       call cu_$arg_list_ptr (arg_list_ptr);
       75       call ssu_$standalone_invocation (sci_ptr, myname, "", arg_list_ptr, ABORT_ENTRY, code);
       76 
       77       on dm_not_available_ call ssu_$abort_line (sci_ptr, dm_error_$system_not_initialized);
       78 
       79       on cleanup call CLEANUP ();
       80 
       81       call ssu_$arg_count (sci_ptr, number_of_args);
       82 
       83       if number_of_args > 0
       84       then call ssu_$abort_line (sci_ptr, error_table_$badopt, "This command takes no arguments.");
       85 
       86       call dm_misc_util_$get_system_version (bootload_version, dm_ring_version);
       87 
       88       if bootload_version = dm_ring_version & bootload_version = user_ring_version
       89       then call ioa_ ("Data Management System version is ""^a"".", bootload_version);
       90       else call ioa_ ("Data Management System version at DM bootload time was ""^a"",
       91 the version of DM in use by this process in the user ring is ""^a"",
       92 the version of DM in use by this process in the DM ring is ""^a"".", bootload_version, user_ring_version,
       93 	      dm_ring_version);
       94 
       95       call FINISH ();
       96 
       97 MAIN_RETURN:
       98       return;
       99 
      100 ABORT_ENTRY:
      101    procedure ();
      102       go to MAIN_RETURN;
      103    end ABORT_ENTRY;
      104 
      105 
      106 
      107 CLEANUP:
      108    procedure ();
      109       call FINISH ();
      110    end CLEANUP;
      111 
      112 FINISH:
      113    proc ();
      114       call ssu_$destroy_invocation (sci_ptr);
      115    end FINISH;
      116 
      117    end dm_display_version;
	SOURCE FILES USED IN THIS COMPILATION.

LINE      NUMBER  DATE MODIFIED     NAME			PATHNAME
             0    04/24/85  0802.8  dm_display_version.pl1            >spec>on>41-21>dm_display_version.pl1
	NAMES DECLARED IN THIS COMPILATION.

IDENTIFIER	     OFFSET    LOC STORAGE CLASS   DATA TYPE		ATTRIBUTES AND REFERENCES
								(* indicates a set context)

NAMES DECLARED BY DECLARE STATEMENT.
arg_list_ptr                    000100 automatic       pointer                  initial dcl 30 set ref 30* 74* 75*
bootload_version                000102 automatic       char(8)                  initial dcl 31 set ref 31* 86* 88 88 88* 90*
cleanup                         000116 stack reference condition                dcl 45 ref 79
code                            000104 automatic       fixed bin(35,0)          dcl 32 set ref 75*
cu_$arg_list_ptr                000010 constant        entry                    external dcl 54 ref 74
dm_error_$system_not_initialized
                                000030 external static fixed bin(35,0)          dcl 69 set ref 77*
dm_misc_util_$get_system_version
                                000012 constant        entry                    external dcl 55 ref 86
dm_not_available_               000124 stack reference condition                dcl 45 ref 77
dm_ring_version                 000106 automatic       char(8)                  initial dcl 33 set ref 33* 86* 88 90*
dm_system_data_template_$system_software_version
                                000026 external static char(8)                  dcl 67 ref 36
error_table_$badopt             000032 external static fixed bin(35,0)          dcl 71 set ref 83*
ioa_                            000014 constant        entry                    external dcl 57 ref 88 90
myname                          000000 constant        char(18)                 initial unaligned dcl 50 set ref 75*
null                                                   builtin function         dcl 41 ref 30 35
number_of_args                  000110 automatic       fixed bin(17,0)          dcl 34 set ref 81* 83
sci_ptr                         000112 automatic       pointer                  initial dcl 35 set ref 35* 75* 77* 81* 83* 114*
ssu_$abort_line                 000016 constant        entry                    external dcl 58 ref 77 83
ssu_$arg_count                  000020 constant        entry                    external dcl 59 ref 81
ssu_$destroy_invocation         000022 constant        entry                    external dcl 60 ref 114
ssu_$standalone_invocation      000024 constant        entry                    external dcl 62 ref 75
user_ring_version               000114 automatic       char(8)                  initial dcl 36 set ref 36* 88 90*

NAMES DECLARED BY EXPLICIT CONTEXT.
ABORT_ENTRY                     000423 constant        entry                    internal dcl 100 ref 75 75
CLEANUP                         000433 constant        entry                    internal dcl 107 ref 79
FINISH                          000443 constant        entry                    internal dcl 112 ref 95 109
MAIN_RETURN                     000421 constant        label                    dcl 97 ref 102
dm_display_version              000134 constant        entry                    external dcl 24

THERE WERE NO NAMES DECLARED BY CONTEXT OR IMPLICATION.

STORAGE REQUIREMENTS FOR THIS PROGRAM.

	Object	Text	Link	Symbol	Defs	Static
Start          0       0       674         730     460         704
Length      1122     460        34         155     214           0

BLOCK NAME	         STACK SIZE     TYPE		WHY NONQUICK/WHO SHARES STACK FRAME
dm_display_version                  184 external procedure  is an external procedure.  
on unit on line 77                   74 on unit               
on unit on line 79                   70 on unit               
ABORT_ENTRY                          64 internal procedure  is assigned to an entry variable.  
CLEANUP                                 internal procedure  shares stack frame of on unit on line 79.  
FINISH                               68 internal procedure  is called by several nonquick procedures.  

STORAGE FOR AUTOMATIC VARIABLES.

STACK FRAME                 LOC IDENTIFIER                  BLOCK NAME
dm_display_version       000100 arg_list_ptr                dm_display_version
                         000102 bootload_version            dm_display_version
                         000104 code                        dm_display_version
                         000106 dm_ring_version             dm_display_version
                         000110 number_of_args              dm_display_version
                         000112 sci_ptr                     dm_display_version
                         000114 user_ring_version           dm_display_version

THE FOLLOWING EXTERNAL OPERATORS ARE USED BY THIS PROGRAM.
call_ext_out_desc   call_ext_out        call_int_this       call_int_other      return              tra_ext
enable              ext_entry           int_entry

THE FOLLOWING EXTERNAL ENTRIES ARE CALLED BY THIS PROGRAM.
cu_$arg_list_ptr              dm_misc_util_$get_system_version                            ioa_
ssu_$abort_line               ssu_$arg_count                ssu_$destroy_invocation       ssu_$standalone_invocation

THE FOLLOWING EXTERNAL VARIABLES ARE USED BY THIS PROGRAM.
dm_error_$system_not_initialized                            dm_system_data_template_$system_software_version
error_table_$badopt




   LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC   
     24 000133        30 000141        31 000143        33 000145        35 000146        36 000150        74 000154
     75 000162        77 000221        79 000253        81 000271        83 000302        86 000330        88 000341
     90 000367        95 000415        97 000421       100 000422       102 000430       107 000433       109 000434
    110 000441       112 000442       114 000450       115 000457


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
