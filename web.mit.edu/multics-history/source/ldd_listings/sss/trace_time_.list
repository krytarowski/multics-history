	COMPILATION LISTING OF SEGMENT trace_time_
	Compiled by: Multics PL/I Compiler, Release 28d, of October 4, 1983
	Compiled at: Honeywell Multics Op. - System M
	Compiled on: 10/23/84  1253.8 mst Tue
	    Options: optimize map

        1 /* ***********************************************************
        2*   *                                                         *
        3*   * Copyright, (C) Honeywell Information Systems Inc., 1982 *
        4*   *                                                         *
        5*   *********************************************************** */
        6 
        7 /*
        8*   This program is called by trace_print_ to get a formatted clock reading.
        9*   The format is HH:MM:SS.FFF.
       10*
       11*   Written:  May 1984 by Jeffrey D. Ives.
       12**/
       13 
       14 /* format: style2,ifthendo,^indnoniterdo,thendo,^inditerdo,indproc,ind2,dclind5,idind32 */
       15 
       16 trace_time_:
       17   proc (clock_reading_i) returns (char (12));
       18 
       19     zone = "";
       20     call
       21       decode_clock_value_$date_time (clock_reading_i, de.month, de.dom, de.year, de.hour, de.minute, de.second,
       22       de.microsecond, de.dow, zone, code);
       23     if code ^= 0
       24     then de = 0;
       25 
       26     dec3 = de.hour;
       27     unspec (formatted_string.hour) = substr (unspec (dec3), 19, 18);
       28     formatted_string.colon1 = ":";
       29     dec3 = de.minute;
       30     unspec (formatted_string.minute) = substr (unspec (dec3), 19, 18);
       31     formatted_string.colon2 = ":";
       32     dec3 = de.second;
       33     unspec (formatted_string.second) = substr (unspec (dec3), 19, 18);
       34     formatted_string.dot = ".";
       35     dec3 = divide (de.microsecond, 1000, 20);
       36     unspec (formatted_string.millisecond) = substr (unspec (dec3), 10, 27);
       37 
       38     return (string (formatted_string));
       39 
       40 /* START OF DECLARATIONS */
       41 /* format: ^insnl,^delnl */
       42 
       43 
       44 /* Parameters */
       45 
       46     dcl  clock_reading_i		 fixed bin (71) parm;
       47 
       48 
       49 /* Automatic */
       50 
       51     dcl  code			 fixed bin (35);
       52     dcl  dec3			 fixed dec (3) aligned;
       53     dcl  zone			 char (3);
       54 
       55     dcl  1 de			 aligned,		/* Read de as decoded.			*/
       56 	 2 month			 fixed bin,
       57 	 2 dom			 fixed bin,
       58 	 2 year			 fixed bin,
       59 	 2 hour			 fixed bin,
       60 	 2 minute			 fixed bin,
       61 	 2 second			 fixed bin,
       62 	 2 microsecond		 fixed bin (71),
       63 	 2 dow			 fixed bin;
       64 
       65     dcl  1 formatted_string		 unal,
       66 	 2 hour			 char (2),
       67 	 2 colon1			 char (1),
       68 	 2 minute			 char (2),
       69 	 2 colon2			 char (1),
       70 	 2 second			 char (2),
       71 	 2 dot			 char (1),
       72 	 2 millisecond		 char (3);
       73 
       74 
       75 /* Static */
       76 
       77 
       78 /* Conditions */
       79 
       80 
       81 /* Based */
       82 
       83 
       84 /* External Variables */
       85 
       86 
       87 /* External Entries */
       88 
       89     dcl  decode_clock_value_$date_time	 entry (fixed bin (71), fixed bin, fixed bin, fixed bin, fixed bin, fixed bin, fixed bin, fixed bin (71), fixed bin, char (3), fixed bin (35));
       90 
       91 
       92 /* format: insnl,delnl */
       93 /* END OF DECLARATIONS */
       94 
       95   end trace_time_;
	SOURCE FILES USED IN THIS COMPILATION.

LINE      NUMBER  DATE MODIFIED     NAME			PATHNAME
             0    10/23/84  1219.2  trace_time_.pl1                   >special_ldd>online>6972-10/23/84>trace_time_.pl1
	NAMES DECLARED IN THIS COMPILATION.

IDENTIFIER	     OFFSET    LOC STORAGE CLASS   DATA TYPE		ATTRIBUTES AND REFERENCES
								(* indicates a set context)

NAMES DECLARED BY DECLARE STATEMENT.
clock_reading_i                        parameter       fixed bin(71,0)          dcl 46 set ref 16 20*
code                            000100 automatic       fixed bin(35,0)          dcl 51 set ref 20* 23
colon1                    0(18) 000115 automatic       char(1)                  level 2 packed unaligned dcl 65 set ref 28*
colon2                    1(09) 000115 automatic       char(1)                  level 2 packed unaligned dcl 65 set ref 31*
de                              000104 automatic       structure                level 1 dcl 55 set ref 23*
dec3                            000101 automatic       fixed dec(3,0)           dcl 52 set ref 26* 27 29* 30 32* 33 35* 36
decode_clock_value_$date_time   000010 constant        entry                    external dcl 89 ref 20
dom                       1     000104 automatic       fixed bin(17,0)          level 2 dcl 55 set ref 20*
dot                       2     000115 automatic       char(1)                  level 2 packed unaligned dcl 65 set ref 34*
dow                      10     000104 automatic       fixed bin(17,0)          level 2 dcl 55 set ref 20*
formatted_string                000115 automatic       structure                level 1 packed unaligned dcl 65 set ref 38
hour                      3     000104 automatic       fixed bin(17,0)          level 2 in structure "de" dcl 55 in procedure
                                                                                  "trace_time_" set ref 20* 26
hour                            000115 automatic       char(2)                  level 2 in structure "formatted_string" packed
                                                                                  unaligned dcl 65 in procedure "trace_time_" set
                                                                                  ref 27*
microsecond               6     000104 automatic       fixed bin(71,0)          level 2 dcl 55 set ref 20* 35
millisecond               2(09) 000115 automatic       char(3)                  level 2 packed unaligned dcl 65 set ref 36*
minute                    0(27) 000115 automatic       char(2)                  level 2 in structure "formatted_string" packed
                                                                                  unaligned dcl 65 in procedure "trace_time_" set
                                                                                  ref 30*
minute                    4     000104 automatic       fixed bin(17,0)          level 2 in structure "de" dcl 55 in procedure
                                                                                  "trace_time_" set ref 20* 29
month                           000104 automatic       fixed bin(17,0)          level 2 dcl 55 set ref 20*
second                    5     000104 automatic       fixed bin(17,0)          level 2 in structure "de" dcl 55 in procedure
                                                                                  "trace_time_" set ref 20* 32
second                    1(18) 000115 automatic       char(2)                  level 2 in structure "formatted_string" packed
                                                                                  unaligned dcl 65 in procedure "trace_time_" set
                                                                                  ref 33*
year                      2     000104 automatic       fixed bin(17,0)          level 2 dcl 55 set ref 20*
zone                            000102 automatic       char(3)                  unaligned dcl 53 set ref 19* 20*

NAME DECLARED BY EXPLICIT CONTEXT.
trace_time_                     000012 constant        entry                    external dcl 16

NAMES DECLARED BY CONTEXT OR IMPLICATION.
divide                                                 builtin function         ref 35
string                                                 builtin function         ref 38
substr                                                 builtin function         ref 27 30 33 36
unspec                                                 builtin function         set ref 27 27 30* 30 33* 33 36* 36

STORAGE REQUIREMENTS FOR THIS PROGRAM.

	Object	Text	Link	Symbol	Defs	Static
Start          0       0       200         212     140         210
Length       356     140        12         130      37           0

BLOCK NAME	         STACK SIZE     TYPE		WHY NONQUICK/WHO SHARES STACK FRAME
trace_time_                         105 external procedure  is an external procedure.  

STORAGE FOR AUTOMATIC VARIABLES.

STACK FRAME                 LOC IDENTIFIER                  BLOCK NAME
trace_time_              000100 code                        trace_time_
                         000101 dec3                        trace_time_
                         000102 zone                        trace_time_
                         000104 de                          trace_time_
                         000115 formatted_string            trace_time_

THE FOLLOWING EXTERNAL OPERATORS ARE USED BY THIS PROGRAM.
call_ext_out        return              ext_entry           divide_fx3

THE FOLLOWING EXTERNAL ENTRIES ARE CALLED BY THIS PROGRAM.
decode_clock_value_$date_time

NO EXTERNAL VARIABLES ARE USED BY THIS PROGRAM.




   LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC   
     16 000006        19 000017        20 000021        23 000054        26 000067        27 000072        28 000075
     29 000077        30 000102        31 000106        32 000110        33 000113        34 000115        35 000117
     36 000127        38 000131


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
