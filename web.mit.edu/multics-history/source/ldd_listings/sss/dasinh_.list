	COMPILATION LISTING OF SEGMENT dasinh_
	Compiled by: Multics PL/I Compiler, Release 28d, of September 14, 1983
	Compiled at: Honeywell LCPD Phoenix, System M
	Compiled on: 10/03/83  1358.2 mst Mon
	    Options: optimize map

        1 /* ******************************************************
        2*   *                                                    *
        3*   *                                                    *
        4*   * Copyright (c) 1972 by Massachusetts Institute of   *
        5*   * Technology and Honeywell Information Systems, Inc. *
        6*   *                                                    *
        7*   *                                                    *
        8*   ****************************************************** */
        9 
       10 dasinh_: procedure (number) returns (float binary (63));
       11 
       12 /*       compute the hyperbolic arcsine or arccosine of a double-precision floating-point number       */
       13 declare (number, f, n, p, q, r) float binary (63),
       14 	(abs, log, sqrt) builtin;
       15 dcl  code_ ext entry (fixed bin);
       16 	n = number;
       17 	f = abs (n);
       18 	if f < 1.e-10 then go to negate;
       19 	if f >= 3037000500.e0 then go to setup;
       20 	p = f*f;
       21 	q = sqrt (p + 1.e0);
       22 	r = q - 1.e0;
       23 	p = (r*r + p) * 0.5e0 / q;
       24 loner:	f = log (f + p + 1);
       25 negate:	if n < 0.0e0 then f = -f;
       26 	return (f);
       27 dacosh_: entry (number) returns (float binary (63));
       28 	f, n = abs (number);
       29 if f < 1.e0 then err: do;
       30 	     call code_ (35);
       31 	     return (0.0e0);
       32 	end err;
       33 setup:	p = f - 1.e0;
       34 	if f < 3037000500.e0 then f = sqrt ((f + 1.e0) * p);
       35 	go to loner;
       36      end dasinh_;
	SOURCE FILES USED IN THIS COMPILATION.

LINE      NUMBER  DATE MODIFIED     NAME			PATHNAME
             0    10/03/83  1004.9  dasinh_.pl1                       >spec>on>pl128d>dasinh_.pl1
	NAMES DECLARED IN THIS COMPILATION.

IDENTIFIER	     OFFSET    LOC STORAGE CLASS   DATA TYPE		ATTRIBUTES AND REFERENCES
								(* indicates a set context)

NAMES DECLARED BY DECLARE STATEMENT.
abs                                                    builtin function         dcl 13 ref 17 28
code_                           000010 constant        entry                    external dcl 15 ref 30
f                               000100 automatic       float bin(63)            dcl 13 set ref 17* 18 19 20 20 24* 24 25* 25 26 28*
                                                                                  29 33 34 34* 34
log                                                    builtin function         dcl 13 ref 24
n                               000102 automatic       float bin(63)            dcl 13 set ref 16* 17 25 28*
number                                 parameter       float bin(63)            dcl 13 ref 10 16 27 28
p                               000104 automatic       float bin(63)            dcl 13 set ref 20* 21 23* 23 24 33* 34
q                               000106 automatic       float bin(63)            dcl 13 set ref 21* 22 23
r                               000110 automatic       float bin(63)            dcl 13 set ref 22* 23 23
sqrt                                                   builtin function         dcl 13 ref 21 34

NAMES DECLARED BY EXPLICIT CONTEXT.
dacosh_                         000071 constant        entry                    external dcl 27
dasinh_                         000012 constant        entry                    external dcl 10
err                             000107 constant        label                    dcl 29
loner                           000050 constant        label                    dcl 24 ref 35
negate                          000056 constant        label                    dcl 25 ref 18
setup                           000124 constant        label                    dcl 33 ref 19

THERE WERE NO NAMES DECLARED BY CONTEXT OR IMPLICATION.

STORAGE REQUIREMENTS FOR THIS PROGRAM.

	Object	Text	Link	Symbol	Defs	Static
Start          0       0       176         210     140         206
Length       352     140        12         125      35           0

BLOCK NAME	         STACK SIZE     TYPE		WHY NONQUICK/WHO SHARES STACK FRAME
dasinh_                             107 external procedure  is an external procedure.  

STORAGE FOR AUTOMATIC VARIABLES.

STACK FRAME                 LOC IDENTIFIER                  BLOCK NAME
dasinh_                  000100 f                           dasinh_
                         000102 n                           dasinh_
                         000104 p                           dasinh_
                         000106 q                           dasinh_
                         000110 r                           dasinh_

THE FOLLOWING EXTERNAL OPERATORS ARE USED BY THIS PROGRAM.
call_ext_out        return              ext_entry           dsqrt               dlog

THE FOLLOWING EXTERNAL ENTRIES ARE CALLED BY THIS PROGRAM.
code_

NO EXTERNAL VARIABLES ARE USED BY THIS PROGRAM.




   LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC   
     10 000006        16 000017        17 000022        18 000025        19 000030        20 000033        21 000035
     22 000041        23 000043        24 000050        25 000056        26 000063        27 000067        28 000076
     29 000104        30 000107        31 000120        33 000124        34 000127        35 000137


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
