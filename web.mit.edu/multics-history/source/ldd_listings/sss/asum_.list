	COMPILATION LISTING OF SEGMENT asum_
	Compiled by: Multics PL/I Compiler, Release 29, of July 28, 1986
	Compiled at: Honeywell Bull, Phx. Az., Sys-M 
	Compiled on: 08/04/87  1329.2 mst Tue
	    Options: optimize map

        1 /****^  ***********************************************************
        2*        *                                                         *
        3*        * Copyright, (C) Honeywell Bull Inc., 1987                *
        4*        *                                                         *
        5*        * Copyright, (C) Honeywell Information Systems Inc., 1985 *
        6*        *                                                         *
        7*        *********************************************************** */
        8 
        9 /**** asum_.pl1 -- Gate target for as_user_message_ subsystem */
       10 
       11 /* format: style2 */
       12 
       13 /**** Written 1985-02-20 by BIM */
       14 
       15 
       16 /****^  HISTORY COMMENTS:
       17*  1) change(87-06-24,GDixon), approve(87-07-07,MCR7719),
       18*     audit(87-06-25,Hartogs), install(87-08-04,MR12.1-1055):
       19*     Change declaration of asum_read_delete_ops_$priv_delete_process_id to
       20*     match the actual subroutine.
       21*                                                   END HISTORY COMMENTS */
       22 
       23 asum_:
       24      procedure;
       25 
       26 	declare asum_inner_ring_caller_
       27 				 entry (entry, pointer);
       28 	declare asum_inner_ring_caller_$initial
       29 				 entry (entry, pointer);
       30 	declare asum_add_message_	 entry (pointer, fixed binary (35));
       31 	declare asum_read_delete_ops_$user_read_message
       32 				 entry (pointer, pointer, fixed binary (35));
       33 	declare asum_read_delete_ops_$priv_delete_message_id
       34 				 entry (bit (72) aligned, fixed binary (35));
       35 	declare asum_read_delete_ops_$priv_delete_process_id
       36 				 entry (bit (36) aligned, fixed binary (35));
       37 	declare asum_read_delete_ops_$admin_read
       38 				 entry (pointer, pointer, pointer, fixed binary (35));
       39 
       40 	declare asum_system_init_	 entry (fixed binary (35));
       41 	declare cu_$arg_list_ptr	 entry returns (pointer);
       42 
       43 
       44 priv_add:
       45      entry;
       46 	call asum_inner_ring_caller_ (asum_add_message_, cu_$arg_list_ptr ());
       47 	return;
       48 
       49 user_read:
       50      entry;
       51 	call asum_inner_ring_caller_ (asum_read_delete_ops_$user_read_message, cu_$arg_list_ptr ());
       52 	return;
       53 
       54 priv_delete_process_messages:
       55      entry;
       56 	call asum_inner_ring_caller_ (asum_read_delete_ops_$priv_delete_process_id, cu_$arg_list_ptr ());
       57 	return;
       58 
       59 priv_delete_message_id:
       60      entry;
       61 	call asum_inner_ring_caller_ (asum_read_delete_ops_$priv_delete_message_id, cu_$arg_list_ptr ());
       62 	return;
       63 
       64 admin_read:
       65      entry;
       66 	call asum_inner_ring_caller_ (asum_read_delete_ops_$admin_read, cu_$arg_list_ptr ());
       67 	return;
       68 
       69 system_init:
       70      entry;
       71 	call asum_inner_ring_caller_$initial (asum_system_init_, cu_$arg_list_ptr ());
       72 
       73      end asum_;
	SOURCE FILES USED IN THIS COMPILATION.

LINE      NUMBER  DATE MODIFIED     NAME			PATHNAME
             0    08/04/87  1221.5  asum_.pl1                         >special_ldd>install>MR12.1-1054>asum_.pl1
	NAMES DECLARED IN THIS COMPILATION.

IDENTIFIER	     OFFSET    LOC STORAGE CLASS   DATA TYPE		ATTRIBUTES AND REFERENCES
								(* indicates a set context)

NAMES DECLARED BY DECLARE STATEMENT.
asum_add_message_               000014 constant        entry                    external dcl 30 ref 46 46
asum_inner_ring_caller_         000010 constant        entry                    external dcl 26 ref 46 51 56 61 66
asum_inner_ring_caller_$initial 000012 constant        entry                    external dcl 28 ref 71
asum_read_delete_ops_$admin_read
                                000024 constant        entry                    external dcl 37 ref 66 66
asum_read_delete_ops_$priv_delete_message_id
                                000020 constant        entry                    external dcl 33 ref 61 61
asum_read_delete_ops_$priv_delete_process_id
                                000022 constant        entry                    external dcl 35 ref 56 56
asum_read_delete_ops_$user_read_message
                                000016 constant        entry                    external dcl 31 ref 51 51
asum_system_init_               000026 constant        entry                    external dcl 40 ref 71 71
cu_$arg_list_ptr                000030 constant        entry                    external dcl 41 ref 46 46 51 51 56 56 61 61 66 66 71
                                                                                  71

NAMES DECLARED BY EXPLICIT CONTEXT.
admin_read                      000164 constant        entry                    external dcl 64
asum_                           000002 constant        entry                    external dcl 23
priv_add                        000011 constant        entry                    external dcl 44
priv_delete_message_id          000131 constant        entry                    external dcl 59
priv_delete_process_messages    000076 constant        entry                    external dcl 54
system_init                     000217 constant        entry                    external dcl 69
user_read                       000043 constant        entry                    external dcl 49

THERE WERE NO NAMES DECLARED BY CONTEXT OR IMPLICATION.

STORAGE REQUIREMENTS FOR THIS PROGRAM.

	Object	Text	Link	Symbol	Defs	Static
Start          0       0       456         510     254         466
Length       702     254        32         156     202           0

BLOCK NAME	         STACK SIZE     TYPE		WHY NONQUICK/WHO SHARES STACK FRAME
asum_                                80 external procedure  is an external procedure.  

THE FOLLOWING EXTERNAL OPERATORS ARE USED BY THIS PROGRAM.
call_ext_out        return_mac          ext_entry

THE FOLLOWING EXTERNAL ENTRIES ARE CALLED BY THIS PROGRAM.
asum_add_message_             asum_inner_ring_caller_       asum_inner_ring_caller_$initial
asum_read_delete_ops_$admin_read                            asum_read_delete_ops_$priv_delete_message_id
asum_read_delete_ops_$priv_delete_process_id                asum_read_delete_ops_$user_read_message
asum_system_init_             cu_$arg_list_ptr

NO EXTERNAL VARIABLES ARE USED BY THIS PROGRAM.




   LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC   
     23 000001        44 000007        46 000016        47 000041        49 000042        51 000050        52 000074
     54 000075        56 000103        57 000127        59 000130        61 000136        62 000162        64 000163
     66 000171        67 000215        69 000216        71 000224        73 000250


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
