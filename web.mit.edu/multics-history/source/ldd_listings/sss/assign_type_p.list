	COMPILATION LISTING OF SEGMENT assign_type_p
	Compiled by: Multics PL/I Compiler, Release 28d, of September 14, 1983
	Compiled at: Honeywell LCPD Phoenix, System M
	Compiled on: 10/03/83  1407.9 mst Mon
	    Options: optimize map

        1 /* ******************************************************
        2*   *                                                    *
        3*   *                                                    *
        4*   * Copyright (c) 1972 by Massachusetts Institute of   *
        5*   * Technology and Honeywell Information Systems, Inc. *
        6*   *                                                    *
        7*   *                                                    *
        8*   ****************************************************** */
        9 
       10 assign_type_p:	proc(p,assign_type,scale_prec) options(support);
       11 
       12 dcl	p ptr;
       13 
       14 dcl	assign_type	fixed bin(17),
       15 	scale_prec	fixed bin(35),
       16 
       17 	1 fo		based(addr(scale_prec)) aligned,
       18 	2 scale		fixed bin(17) unal,
       19 	2 prec		fixed bin(17) unal;
       20 
       21 dcl	addr builtin;
       22 
  1     1 dcl (	s_fixed_real_desc		init( 1),
  1     2 	d_fixed_real_desc		init( 2),
  1     3 	s_float_real_desc		init( 3),
  1     4 	d_float_real_desc		init( 4),
  1     5 	s_fixed_cplx_desc		init( 5),
  1     6 	d_fixed_cplx_desc		init( 6),
  1     7 	s_float_cplx_desc		init( 7),
  1     8 	d_float_cplx_desc		init( 8),
  1     9 
  1    10 	D_fixed_real_desc		init( 9),
  1    11 	D_float_real_desc		init(10),
  1    12 	D_fixed_cplx_desc		init(11),
  1    13 	D_float_cplx_desc		init(12),
  1    14 
  1    15 	pointer_desc		init(13),
  1    16 	offset_desc		init(14),
  1    17 	label_desc		init(15),
  1    18 	entry_desc		init(16),
  1    19 	structure_desc		init(17),
  1    20 	area_desc			init(18),
  1    21 
  1    22 	bit_desc			init(19),
  1    23 	v_bit_desc		init(20),
  1    24 
  1    25 	char_desc			init(21),
  1    26 	v_char_desc		init(22),
  1    27 
  1    28 	file_desc			init(23)
  1    29 					) fixed bin int static options(constant);
       23 
  2     1 dcl	type(24:28) fixed bin(15) int static init
  2     2 	(	42,	/* character */
  2     3 		18,	/* real fixed dec */
  2     4 		22,	/* cplx fixed dec */
  2     5 		20,	/* real float dec */
  2     6 		24);	/* cplx float dec */
       24 
  3     1 /* BEGIN INCLUDE FILE ... picture_image.incl.pl1
  3     2*
  3     3*   James R. Davis  12 Mar 79
  3     4**/
  3     5 
  3     6      dcl	   1 picture_image	      aligned based,
  3     7 	     2 type	      fixed bin (8) unal,
  3     8 	     2 prec	      fixed bin (8) unal,	/* precision or length of associated value */
  3     9 	     2 scale	      fixed bin (8) unal,	/* for both fixed and float pictures,
  3    10*							=ndigits after "v" - scale_factor */
  3    11 	     2 piclength	      fixed bin (8) unal,	/* length of picture_constant.chars, <64
  3    12*							=length of normalized-picture-string */
  3    13 	     2 varlength	      fixed bin (8) unal,	/* length of pictured variable in chars, <64
  3    14*							=length of normalized_picture_string - "k" and "v" */
  3    15 	     2 scalefactor	      fixed bin (8) unal,	/* value of pict-sc-f, -256<=x<256  */
  3    16 	     2 explength	      fixed bin (8) unal,	/* length of exp field for float */
  3    17 	     2 drift_character    char (1) unal,
  3    18 	     2 chars	      char (0 refer (picture_image.piclength)) aligned;
  3    19 
  3    20      dcl	   (
  3    21 	   picture_char_type      init (24),
  3    22 	   picture_realfix_type   init (25),
  3    23 	   picture_complexfix_type
  3    24 			      init (26),
  3    25 	   picture_realflo_type   init (27),
  3    26 	   picture_complexflo_type
  3    27 			      init (28)
  3    28 	   )		      fixed bin (8) unal static internal options (constant);
  3    29 
  3    30 /* END INCLUDE FILE  ... picture_image.incl.pl1  */
       25 
       26 
       27 	assign_type = type(p->picture_image.type);
       28 	fo.scale = p->picture_image.scale - p->picture_image.scalefactor;
       29 
       30 	if assign_type=char_desc*2
       31 	then	fo.prec = p->picture_image.varlength;
       32 	else	fo.prec = p->picture_image.prec;
       33 
       34 	end assign_type_p;
	SOURCE FILES USED IN THIS COMPILATION.

LINE      NUMBER  DATE MODIFIED     NAME			PATHNAME
             0    10/03/83  1005.3  assign_type_p.pl1                 >spec>on>pl128d>assign_type_p.pl1
23           1    01/12/79  1059.7  desc_types.incl.pl1               >ldd>include>desc_types.incl.pl1
24           2    05/06/74  1742.6  picture_desc_.incl.pl1            >ldd>include>picture_desc_.incl.pl1
25           3    06/28/79  1204.8  picture_image.incl.pl1            >ldd>include>picture_image.incl.pl1
	NAMES DECLARED IN THIS COMPILATION.

IDENTIFIER	     OFFSET    LOC STORAGE CLASS   DATA TYPE		ATTRIBUTES AND REFERENCES
								(* indicates a set context)

NAMES DECLARED BY DECLARE STATEMENT.
addr                                                   builtin function         dcl 21 ref 28 30 32
assign_type                            parameter       fixed bin(17,0)          dcl 14 set ref 10 27* 30
char_desc                              constant        fixed bin(17,0)          initial dcl 1-1 ref 30
fo                                     based           structure                level 1 dcl 14
p                                      parameter       pointer                  dcl 12 ref 10 27 28 28 30 32
picture_image                          based           structure                level 1 dcl 3-6
prec                      0(09)        based           fixed bin(8,0)           level 2 in structure "picture_image" packed
                                                                                  unaligned dcl 3-6 in procedure "assign_type_p" ref
                                                                                  32
prec                      0(18)        based           fixed bin(17,0)          level 2 in structure "fo" packed unaligned dcl 14
                                                                                  in procedure "assign_type_p" set ref 30* 32*
scale                     0(18)        based           fixed bin(8,0)           level 2 in structure "picture_image" packed
                                                                                  unaligned dcl 3-6 in procedure "assign_type_p" ref
                                                                                  28
scale                                  based           fixed bin(17,0)          level 2 in structure "fo" packed unaligned dcl 14
                                                                                  in procedure "assign_type_p" set ref 28*
scale_prec                             parameter       fixed bin(35,0)          dcl 14 set ref 10 28 30 32
scalefactor               1(09)        based           fixed bin(8,0)           level 2 packed unaligned dcl 3-6 ref 28
type                            000000 constant        fixed bin(15,0)          initial array dcl 2-1 in procedure "assign_type_p"
                                                                                  ref 27
type                                   based           fixed bin(8,0)           level 2 in structure "picture_image" packed
                                                                                  unaligned dcl 3-6 in procedure "assign_type_p" ref
                                                                                  27
varlength                 1            based           fixed bin(8,0)           level 2 packed unaligned dcl 3-6 ref 30

NAMES DECLARED BY DECLARE STATEMENT AND NEVER REFERENCED.
D_fixed_cplx_desc                      internal static fixed bin(17,0)          initial dcl 1-1
D_fixed_real_desc                      internal static fixed bin(17,0)          initial dcl 1-1
D_float_cplx_desc                      internal static fixed bin(17,0)          initial dcl 1-1
D_float_real_desc                      internal static fixed bin(17,0)          initial dcl 1-1
area_desc                              internal static fixed bin(17,0)          initial dcl 1-1
bit_desc                               internal static fixed bin(17,0)          initial dcl 1-1
d_fixed_cplx_desc                      internal static fixed bin(17,0)          initial dcl 1-1
d_fixed_real_desc                      internal static fixed bin(17,0)          initial dcl 1-1
d_float_cplx_desc                      internal static fixed bin(17,0)          initial dcl 1-1
d_float_real_desc                      internal static fixed bin(17,0)          initial dcl 1-1
entry_desc                             internal static fixed bin(17,0)          initial dcl 1-1
file_desc                              internal static fixed bin(17,0)          initial dcl 1-1
label_desc                             internal static fixed bin(17,0)          initial dcl 1-1
offset_desc                            internal static fixed bin(17,0)          initial dcl 1-1
picture_char_type                      internal static fixed bin(8,0)           initial unaligned dcl 3-20
picture_complexfix_type                internal static fixed bin(8,0)           initial unaligned dcl 3-20
picture_complexflo_type                internal static fixed bin(8,0)           initial unaligned dcl 3-20
picture_realfix_type                   internal static fixed bin(8,0)           initial unaligned dcl 3-20
picture_realflo_type                   internal static fixed bin(8,0)           initial unaligned dcl 3-20
pointer_desc                           internal static fixed bin(17,0)          initial dcl 1-1
s_fixed_cplx_desc                      internal static fixed bin(17,0)          initial dcl 1-1
s_fixed_real_desc                      internal static fixed bin(17,0)          initial dcl 1-1
s_float_cplx_desc                      internal static fixed bin(17,0)          initial dcl 1-1
s_float_real_desc                      internal static fixed bin(17,0)          initial dcl 1-1
structure_desc                         internal static fixed bin(17,0)          initial dcl 1-1
v_bit_desc                             internal static fixed bin(17,0)          initial dcl 1-1
v_char_desc                            internal static fixed bin(17,0)          initial dcl 1-1

NAME DECLARED BY EXPLICIT CONTEXT.
assign_type_p                   000014 constant        entry                    external dcl 10

THERE WERE NO NAMES DECLARED BY CONTEXT OR IMPLICATION.

STORAGE REQUIREMENTS FOR THIS PROGRAM.

	Object	Text	Link	Symbol	Defs	Static
Start          0       0       112         122      64         122
Length       334      64        10         175      25           0

BLOCK NAME	         STACK SIZE     TYPE		WHY NONQUICK/WHO SHARES STACK FRAME
assign_type_p                        68 external procedure  is an external procedure.  

THE FOLLOWING EXTERNAL OPERATORS ARE USED BY THIS PROGRAM.
return              ext_entry           set_support

NO EXTERNAL ENTRIES ARE CALLED BY THIS PROGRAM.

NO EXTERNAL VARIABLES ARE USED BY THIS PROGRAM.




   LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC   
     10 000010        27 000022        28 000030        30 000044        32 000056        34 000063


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
