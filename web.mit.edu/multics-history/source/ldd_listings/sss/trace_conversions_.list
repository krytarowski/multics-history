	COMPILATION LISTING OF SEGMENT trace_conversions_
	Compiled by: Multics PL/I Compiler, Release 28d, of October 4, 1983
	Compiled at: Honeywell Multics Op. - System M
	Compiled on: 10/23/84  1239.9 mst Tue
	    Options: optimize map

        1 /* ***********************************************************
        2*   *                                                         *
        3*   * Copyright, (C) Honeywell Information Systems Inc., 1984 *
        4*   *                                                         *
        5*   *********************************************************** */
        6 /*
        7*   This program contains data conversion logic for the trace facility.
        8*
        9*   Written: May 1984 by Jeffrey D. Ives.
       10**/
       11 /* format: style2,ifthendo,^indnoniterdo,thendo,^inditerdo,indproc,ind2,dclind5,idind32 */
       12 
       13 
       14 trace_conversions_:
       15   procedure ();
       16     signal error;
       17 
       18 
       19 cv_inout_to_bits:
       20   entry (char8_i) returns (bit (2) aligned);
       21     char8 = char8_i;
       22     if char8 = "on" | char8 = "inout" | char8 = "both"
       23     then return ("11"b);
       24     else if char8 = "off" | char8 = "none" | char8 = "neither"
       25     then return ("00"b);
       26     else if char8 = "in"
       27     then return ("10"b);
       28     else if char8 = "out"
       29     then return ("01"b);
       30     else call
       31 	 sub_err_ (error_table_$bad_arg, trace_$me (), ACTION_CANT_RESTART, null (), rv,
       32 	 "I don't understand ""^a"".  I was expecting in, out, on, or off.", char8);
       33 
       34 
       35 cv_bits_to_inout:
       36   entry (bit2_i) returns (char (8) aligned);
       37     bit2 = bit2_i;
       38     if bit2 = "00"b
       39     then return ("off");
       40     else if bit2 = "01"b
       41     then return ("out");
       42     else if bit2 = "10"b
       43     then return ("in");
       44     else if bit2 = "11"b
       45     then return ("on");
       46     else signal error;
       47 
       48 
       49 cv_n_to_number:
       50   entry (char16_i) returns (fixed bin (34));
       51     char16 = char16_i;
       52     on conversion, size
       53       call
       54         sub_err_ (error_table_$bad_arg, trace_$me (), ACTION_CANT_RESTART, null (), rv,
       55         "I can not interpret ""^a"" as a number between 0 and ^d.", char16, MAX_34_BIT_NUMBER);
       56 (size):
       57     number = convert (number, char16);
       58     if number < 0 | number > MAX_34_BIT_NUMBER
       59     then call
       60 	 sub_err_ (error_table_$bad_arg, trace_$me (), ACTION_CANT_RESTART, null (), rv,
       61 	 "I can not interpret ""^a"" as a number between 0 and ^d.", char16, MAX_34_BIT_NUMBER);
       62     return (number);
       63 
       64 
       65 cv_onoff_to_bit:
       66   entry (char8_i) returns (bit aligned);
       67     char8 = char8_i;
       68     if char8 = "on"
       69     then return ("1"b);
       70     else if char8 = "off"
       71     then return ("0"b);
       72     else call
       73 	 sub_err_ (error_table_$bad_arg, trace_$me (), ACTION_CANT_RESTART, null (), rv,
       74 	 "I don't understand ""^a"".  I was expecting on, or off.", char8);
       75 
       76 
       77 cv_bit_to_onoff:
       78   entry (bit1_i) returns (char (8) aligned);
       79     if bit1_i
       80     then return ("on");
       81     else return ("off");
       82 
       83 /* START OF DEC_LARATIONS */
       84 /* format: ^insnl,^delnl */
       85 
       86 /* Parameters */
       87 
       88     dcl  bit1_i			 bit aligned parm;
       89     dcl  bit2_i			 bit (2) aligned parm;
       90     dcl  char8_i			 char (8) aligned parm;
       91     dcl  char16_i			 char (16) parm;
       92 
       93 
       94 /* Automatic */
       95 
       96     dcl  bit2			 bit (2) aligned;
       97     dcl  char8			 char (8) aligned;
       98     dcl  char16			 char (16);
       99     dcl  code			 fixed bin (35);
      100     dcl  number			 fixed bin (35);
      101     dcl  rv			 fixed bin (35);
      102 
      103 
      104 /* Static */
      105 
      106     dcl  MAX_34_BIT_NUMBER		 fixed bin (35) static options (constant) init (17179869183);
      107     dcl  ZERO			 fixed bin (35) static options (constant) init (0);
      108 
      109 
      110 /* Conditions */
      111 
      112     dcl  conversion			 condition;
      113     dcl  error			 condition;
      114     dcl  size			 condition;
      115 
      116 
      117 /* Based */
      118 
      119 
      120 /* External Variables */
      121 
      122     dcl  error_table_$bad_arg		 fixed bin (35) ext;
      123 
      124 
      125 /* External Entries */
      126 
      127     dcl  sub_err_			 entry () options (variable);
      128 
      129 
      130 /* format: insnl,delnl */
      131 /* END OF DECLARATIONS */
      132 
      133 /* START OF INCLUDE FILES */
      134 
      135 
      136 
  1     1 /* BEGIN INCLUDE FILE sub_err_flags.incl.pl1 BIM 11/81 */
  1     2 /* format: style3 */
  1     3 
  1     4 /* These constants are to be used for the flags argument of sub_err_ */
  1     5 /* They are just "string (condition_info_header.action_flags)" */
  1     6 
  1     7 declare	(
  1     8 	ACTION_CAN_RESTART	init (""b),
  1     9 	ACTION_CANT_RESTART init ("1"b),
  1    10 	ACTION_DEFAULT_RESTART
  1    11 			init ("01"b),
  1    12 	ACTION_QUIET_RESTART
  1    13 			init ("001"b),
  1    14 	ACTION_SUPPORT_SIGNAL
  1    15 			init ("0001"b)
  1    16 	)		bit (36) aligned internal static options (constant);
  1    17 
  1    18 /* End include file */
      137 
      138 
  2     1 /*  START OF:	trace_interface.incl.pl1		  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  */
  2     2 /* Written: May 1984 by Jeffrey D. Ives. */
  2     3 /* format: style2,^inddcls,^indnoniterdo,^inditerdo,dclind5,idind35 */
  2     4 
  2     5 /* IDENTIFICATION */
  2     6 
  2     7 dcl  trace_$me			entry () returns (char (32));
  2     8 dcl  trace_$version			entry () returns (char (32));
  2     9 
  2    10 /* TRANSACTIONS */
  2    11 
  2    12 dcl  trace_$transaction_begin		entry (fixed bin (71)) returns (bit aligned);
  2    13 dcl  trace_$transaction_begin_force	entry (fixed bin (71));
  2    14 dcl  trace_$transaction_end		entry (fixed bin (71)) returns (bit aligned);
  2    15 
  2    16 /* ACTIONS */
  2    17 
  2    18 dcl  trace_$update_default_parms	entry () returns (bit aligned);
  2    19 dcl  trace_$update_global_parms	entry () returns (bit aligned);
  2    20 dcl  trace_$add_specified_eps		entry (fixed bin, fixed bin);
  2    21 dcl  trace_$add_specified_locs	entry (fixed bin, fixed bin);
  2    22 dcl  trace_$remove_specified_eps	entry (fixed bin);
  2    23 dcl  trace_$remove_specified_locs	entry (fixed bin);
  2    24 dcl  trace_$turn_on_specified_eps	entry (fixed bin);
  2    25 dcl  trace_$turn_off_specified_eps	entry (fixed bin);
  2    26 
  2    27 /* CONVERSION */
  2    28 
  2    29 dcl  trace_$cv_inout_to_bits		entry (char (8) aligned) returns (bit (2) aligned);
  2    30 dcl  trace_$cv_bits_to_inout		entry (bit (2) aligned) returns (char (8) aligned);
  2    31 dcl  trace_$cv_n_to_number		entry (char (16)) returns (fixed bin (34));
  2    32 dcl  trace_$cv_onoff_to_bit		entry (char (8) aligned) returns (bit aligned);
  2    33 dcl  trace_$cv_bit_to_onoff		entry (bit aligned) returns (char (8) aligned);
  2    34 dcl  trace_$cv_entry_name_to_spp	entry (char (256) var, ptr) returns (1 like stop_proc aligned);
  2    35 dcl  trace_$cv_file_path_to_osw	entry (char (256) var, ptr) returns (1 like output_switch aligned);
  2    36 dcl  trace_$cv_stream_name_to_osw	entry (char (32) var) returns (1 like output_switch aligned);
  2    37 
  2    38 /* METERS */
  2    39 
  2    40 dcl  trace_$entrypoint_counts		entry (fixed bin) returns (1 aligned like counts);
  2    41 dcl  trace_$entrypoint_global_meters	entry (fixed bin) returns (1 like meters aligned);
  2    42 dcl  trace_$entrypoint_local_meters	entry (fixed bin) returns (1 like meters aligned);
  2    43 dcl  trace_$metered			entry () returns (1 like meters aligned);
  2    44 dcl  trace_$removed			entry () returns (1 like meters aligned);
  2    45 dcl  trace_$reset_meters		entry ();
  2    46 
  2    47 /* ENTRYPOINTS */
  2    48 
  2    49 dcl  trace_$entrypoint_index		entry (ptr unal) returns (fixed bin);
  2    50 dcl  trace_$entrypoint_name		entry (fixed bin) returns (char (65) var);
  2    51 dcl  trace_$entrypoint_ptr		entry (fixed bin) returns (ptr);
  2    52 dcl  trace_$entrypoint_seg_path	entry (fixed bin) returns (char (256) var);
  2    53 dcl  trace_$entrypoint_status		entry (fixed bin) returns (char (32) var);
  2    54 dcl  trace_$function		entry (fixed bin) returns (bit aligned);
  2    55 dcl  trace_$num_entrypoints		entry () returns (fixed bin);
  2    56 dcl  trace_$num_specified_entrypoints	entry () returns (fixed bin);
  2    57 dcl  trace_$specified_entrypoint_index	entry (fixed bin) returns (fixed bin);
  2    58 dcl  trace_$specify_entrypoints	entry (char (256) var, ptr);
  2    59 dcl  trace_$translator_id		entry (fixed bin) returns (fixed bin);
  2    60 
  2    61 /* LOCATIONS */
  2    62 
  2    63 dcl  trace_$location_ptr		entry (fixed bin) returns (ptr);
  2    64 dcl  trace_$location_seg_path		entry (fixed bin) returns (char (256) var);
  2    65 dcl  trace_$location_values		entry (fixed bin) returns (1 aligned like watch_values);
  2    66 dcl  trace_$num_locations		entry () returns (fixed bin);
  2    67 dcl  trace_$num_specified_locations	entry () returns (fixed bin);
  2    68 dcl  trace_$specified_location_index	entry (fixed bin) returns (fixed bin);
  2    69 dcl  trace_$specify_locations		entry (char (256) var);
  2    70 dcl  trace_$specify_changed_locations	entry ();
  2    71 
  2    72 /* EVENT BUFFER */
  2    73 
  2    74 dcl  trace_$buffer_counts		entry (fixed bin (34), fixed bin (34));
  2    75 dcl  trace_$buffer_event		entry (fixed bin (34), fixed bin, char (2), ptr unal, 1 like counts aligned, 1 like meters aligned);
  2    76 dcl  trace_$buffer_event_header	entry (fixed bin (34)) returns (char (256) var);
  2    77 dcl  trace_$buffer_event_string	entry (fixed bin (34)) returns (char (256) var);
  2    78 dcl  trace_$buffer_ptr		entry () returns (ptr unal);
  2    79 
  2    80 /* TRACE PARAMETERS */
  2    81 
  2    82 dcl  trace_$arguments		entry (fixed bin) returns (bit (2) aligned);
  2    83 dcl  trace_$set_arguments		entry (bit (2) aligned);
  2    84 dcl  trace_$call			entry (fixed bin) returns (char (256) var);
  2    85 dcl  trace_$set_call		entry (char (256) var);
  2    86 dcl  trace_$every			entry (fixed bin) returns (fixed bin (34));
  2    87 dcl  trace_$set_every		entry (fixed bin (34));
  2    88 dcl  trace_$first			entry (fixed bin) returns (fixed bin (34));
  2    89 dcl  trace_$set_first		entry (fixed bin (34));
  2    90 dcl  trace_$high			entry (fixed bin) returns (fixed bin (34));
  2    91 dcl  trace_$set_high		entry (fixed bin (34));
  2    92 dcl  trace_$last			entry (fixed bin) returns (fixed bin (34));
  2    93 dcl  trace_$set_last		entry (fixed bin (34));
  2    94 dcl  trace_$low			entry (fixed bin) returns (fixed bin (34));
  2    95 dcl  trace_$set_low			entry (fixed bin (34));
  2    96 dcl  trace_$new_high		entry (fixed bin) returns (bit aligned);
  2    97 dcl  trace_$set_new_high		entry (bit aligned);
  2    98 dcl  trace_$parms_string		entry (fixed bin, bit aligned) returns (char (256) var);
  2    99 dcl  trace_$parms_specified		entry () returns (bit aligned);
  2   100 dcl  trace_$stop			entry (fixed bin) returns (bit (2) aligned);
  2   101 dcl  trace_$set_stop		entry (bit (2) aligned);
  2   102 dcl  trace_$stop_every		entry (fixed bin) returns (fixed bin (34));
  2   103 dcl  trace_$set_stop_every		entry (fixed bin (34));
  2   104 dcl  trace_$stop_low		entry (fixed bin) returns (fixed bin (34));
  2   105 dcl  trace_$set_stop_low		entry (fixed bin (34));
  2   106 dcl  trace_$trace			entry (fixed bin) returns (bit (2) aligned);
  2   107 dcl  trace_$set_trace		entry (bit (2) aligned);
  2   108 
  2   109 /* GLOBAL PARAMETERS */
  2   110 
  2   111 dcl  trace_$alm			entry () returns (bit aligned);
  2   112 dcl  trace_$set_alm			entry (bit aligned);
  2   113 dcl  trace_$automatic		entry () returns (bit aligned);
  2   114 dcl  trace_$set_automatic		entry (bit aligned);
  2   115 dcl  trace_$buffer			entry () returns (bit aligned);
  2   116 dcl  trace_$set_buffer		entry (bit aligned);
  2   117 dcl  trace_$calibrate		entry () returns (bit aligned);
  2   118 dcl  trace_$set_calibrate		entry (bit aligned);
  2   119 dcl  trace_$compensation		entry (fixed bin) returns (1 aligned like compensation);
  2   120 dcl  trace_$set_compensation		entry (fixed bin, 1 aligned like compensation);
  2   121 dcl  trace_$enabled			entry () returns (bit aligned);
  2   122 dcl  trace_$set_enabled		entry (bit aligned);
  2   123 dcl  trace_$global_parms_string	entry () returns (char (256) var);
  2   124 dcl  trace_$long			entry () returns (bit aligned);
  2   125 dcl  trace_$set_long		entry (bit aligned);
  2   126 dcl  trace_$meter			entry () returns (bit aligned);
  2   127 dcl  trace_$set_meter		entry (bit aligned);
  2   128 dcl  trace_$output_switch		entry () returns (1 like output_switch aligned);
  2   129 dcl  trace_$set_output_switch		entry (1 like output_switch aligned);
  2   130 dcl  trace_$signals			entry () returns (bit aligned);
  2   131 dcl  trace_$set_signals		entry (bit aligned);
  2   132 dcl  trace_$stop_proc		entry () returns (1 like stop_proc);
  2   133 dcl  trace_$set_stop_proc		entry (1 like stop_proc);
  2   134 dcl  trace_$stop_routine		entry () returns (entry);
  2   135 dcl  trace_$set_stop_routine		entry (entry);
  2   136 dcl  trace_$trace_routine		entry () returns (entry);
  2   137 dcl  trace_$set_trace_routine		entry (entry);
  2   138 dcl  trace_$loud			entry () returns (bit aligned);
  2   139 dcl  trace_$set_loud		entry (bit aligned);
  2   140 
  2   141 /* MISCELLANEOUS */
  2   142 
  2   143 dcl  trace_$in_trace		entry () returns (bit aligned);
  2   144 
  2   145 /* STRUCTURES AND CONSTANTS */
  2   146 
  2   147 dcl  1 watch_values			aligned,
  2   148        2 old			bit (36),
  2   149        2 new			bit (36);
  2   150 
  2   151 dcl  1 counts			aligned,
  2   152        2 calls			fixed bin (53),	/* total number of calls			*/
  2   153        2 level			fixed bin (34),	/* current recursion level			*/
  2   154        2 max_level			fixed bin (34);	/* max ever recursion level			*/
  2   155 
  2   156 
  2   157 dcl  1 meters			aligned,
  2   158        2 real_time			fixed bin (53),	/* The total amount of real time metered.	*/
  2   159        2 vcpu_time			fixed bin (53),	/* The total amount of virtual cpu time metered.	*/
  2   160        2 page_faults		fixed bin (34);	/* The total number of page faults metered.	*/
  2   161 
  2   162 dcl  1 output_switch		aligned based,
  2   163        2 iocb_ptr			ptr,
  2   164        2 stream_name		char (32) var,
  2   165        2 file_path			char (256) var;
  2   166 
  2   167 dcl  1 stop_proc			aligned based,
  2   168        2 entry_value		entry (),
  2   169        2 entry_name			char (256) var;
  2   170 
  2   171 dcl  1 compensation			aligned,
  2   172        2 real_time			fixed bin (53),
  2   173        2 vcpu_time			fixed bin (53);
  2   174 
  2   175 dcl  (
  2   176      COMPENSATION_FROM_ENTRY_TO_ENTRY	init (1),
  2   177      COMPENSATION_FROM_ENTRY_TO_RETURN	init (2),
  2   178      COMPENSATION_FROM_RETURN_TO_ENTRY	init (3),
  2   179      COMPENSATION_FROM_RETURN_TO_RETURN init (4)
  2   180      )				static options (constant);
  2   181 
  2   182 /*  END OF:	trace_interface.incl.pl1		  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  */
      139 
      140 
      141   end trace_conversions_;
	SOURCE FILES USED IN THIS COMPILATION.

LINE      NUMBER  DATE MODIFIED     NAME			PATHNAME
             0    10/23/84  1219.1  trace_conversions_.pl1            >special_ldd>online>6972-10/23/84>trace_conversions_.pl1
137          1    04/16/82  0958.1  sub_err_flags.incl.pl1            >ldd>include>sub_err_flags.incl.pl1
139          2    10/23/84  1226.2  trace_interface.incl.pl1          >special_ldd>online>6972-10/23/84>trace_interface.incl.pl1
	NAMES DECLARED IN THIS COMPILATION.

IDENTIFIER	     OFFSET    LOC STORAGE CLASS   DATA TYPE		ATTRIBUTES AND REFERENCES
								(* indicates a set context)

NAMES DECLARED BY DECLARE STATEMENT.
ACTION_CANT_RESTART             000012 constant        bit(36)                  initial dcl 1-7 set ref 30* 52* 58* 72*
MAX_34_BIT_NUMBER               000000 constant        fixed bin(35,0)          initial dcl 106 set ref 52* 58 58*
bit1_i                                 parameter       bit(1)                   dcl 88 ref 77 79
bit2                            000100 automatic       bit(2)                   dcl 96 set ref 37* 38 40 42 44
bit2_i                                 parameter       bit(2)                   dcl 89 ref 35 37
char16                          000104 automatic       char(16)                 unaligned dcl 98 set ref 51* 52* 56 58*
char16_i                               parameter       char(16)                 unaligned dcl 91 ref 49 51
char8                           000102 automatic       char(8)                  dcl 97 set ref 21* 22 22 22 24 24 24 26 28 30* 67*
                                                                                  68 70 72*
char8_i                                parameter       char(8)                  dcl 90 ref 19 21 65 67
compensation                    000150 automatic       structure                level 1 dcl 2-171
conversion                      000112 stack reference condition                dcl 112 ref 52
counts                          000136 automatic       structure                level 1 dcl 2-151
error                           000120 stack reference condition                dcl 113 ref 16 46
error_table_$bad_arg            000010 external static fixed bin(35,0)          dcl 122 set ref 30* 52* 58* 72*
meters                          000142 automatic       structure                level 1 dcl 2-157
number                          000110 automatic       fixed bin(35,0)          dcl 100 set ref 56* 56 58 58 62
output_switch                          based           structure                level 1 dcl 2-162
rv                              000111 automatic       fixed bin(35,0)          dcl 101 set ref 30* 52* 58* 72*
size                            000126 stack reference condition                dcl 114 ref 52
stop_proc                              based           structure                level 1 dcl 2-167
sub_err_                        000012 constant        entry                    external dcl 127 ref 30 52 58 72
trace_$me                       000014 constant        entry                    external dcl 2-7 ref 30 30 52 52 58 58 72 72
watch_values                    000134 automatic       structure                level 1 dcl 2-147

NAMES DECLARED BY DECLARE STATEMENT AND NEVER REFERENCED.
ACTION_CAN_RESTART                     internal static bit(36)                  initial dcl 1-7
ACTION_DEFAULT_RESTART                 internal static bit(36)                  initial dcl 1-7
ACTION_QUIET_RESTART                   internal static bit(36)                  initial dcl 1-7
ACTION_SUPPORT_SIGNAL                  internal static bit(36)                  initial dcl 1-7
COMPENSATION_FROM_ENTRY_TO_ENTRY       internal static fixed bin(17,0)          initial dcl 2-175
COMPENSATION_FROM_ENTRY_TO_RETURN      internal static fixed bin(17,0)          initial dcl 2-175
COMPENSATION_FROM_RETURN_TO_ENTRY      internal static fixed bin(17,0)          initial dcl 2-175
COMPENSATION_FROM_RETURN_TO_RETURN     internal static fixed bin(17,0)          initial dcl 2-175
ZERO                                   internal static fixed bin(35,0)          initial dcl 107
code                                   automatic       fixed bin(35,0)          dcl 99
trace_$add_specified_eps        000000 constant        entry                    external dcl 2-20
trace_$add_specified_locs       000000 constant        entry                    external dcl 2-21
trace_$alm                      000000 constant        entry                    external dcl 2-111
trace_$arguments                000000 constant        entry                    external dcl 2-82
trace_$automatic                000000 constant        entry                    external dcl 2-113
trace_$buffer                   000000 constant        entry                    external dcl 2-115
trace_$buffer_counts            000000 constant        entry                    external dcl 2-74
trace_$buffer_event             000000 constant        entry                    external dcl 2-75
trace_$buffer_event_header      000000 constant        entry                    external dcl 2-76
trace_$buffer_event_string      000000 constant        entry                    external dcl 2-77
trace_$buffer_ptr               000000 constant        entry                    external dcl 2-78
trace_$calibrate                000000 constant        entry                    external dcl 2-117
trace_$call                     000000 constant        entry                    external dcl 2-84
trace_$compensation             000000 constant        entry                    external dcl 2-119
trace_$cv_bit_to_onoff          000000 constant        entry                    external dcl 2-33
trace_$cv_bits_to_inout         000000 constant        entry                    external dcl 2-30
trace_$cv_entry_name_to_spp     000000 constant        entry                    external dcl 2-34
trace_$cv_file_path_to_osw      000000 constant        entry                    external dcl 2-35
trace_$cv_inout_to_bits         000000 constant        entry                    external dcl 2-29
trace_$cv_n_to_number           000000 constant        entry                    external dcl 2-31
trace_$cv_onoff_to_bit          000000 constant        entry                    external dcl 2-32
trace_$cv_stream_name_to_osw    000000 constant        entry                    external dcl 2-36
trace_$enabled                  000000 constant        entry                    external dcl 2-121
trace_$entrypoint_counts        000000 constant        entry                    external dcl 2-40
trace_$entrypoint_global_meters 000000 constant        entry                    external dcl 2-41
trace_$entrypoint_index         000000 constant        entry                    external dcl 2-49
trace_$entrypoint_local_meters  000000 constant        entry                    external dcl 2-42
trace_$entrypoint_name          000000 constant        entry                    external dcl 2-50
trace_$entrypoint_ptr           000000 constant        entry                    external dcl 2-51
trace_$entrypoint_seg_path      000000 constant        entry                    external dcl 2-52
trace_$entrypoint_status        000000 constant        entry                    external dcl 2-53
trace_$every                    000000 constant        entry                    external dcl 2-86
trace_$first                    000000 constant        entry                    external dcl 2-88
trace_$function                 000000 constant        entry                    external dcl 2-54
trace_$global_parms_string      000000 constant        entry                    external dcl 2-123
trace_$high                     000000 constant        entry                    external dcl 2-90
trace_$in_trace                 000000 constant        entry                    external dcl 2-143
trace_$last                     000000 constant        entry                    external dcl 2-92
trace_$location_ptr             000000 constant        entry                    external dcl 2-63
trace_$location_seg_path        000000 constant        entry                    external dcl 2-64
trace_$location_values          000000 constant        entry                    external dcl 2-65
trace_$long                     000000 constant        entry                    external dcl 2-124
trace_$loud                     000000 constant        entry                    external dcl 2-138
trace_$low                      000000 constant        entry                    external dcl 2-94
trace_$meter                    000000 constant        entry                    external dcl 2-126
trace_$metered                  000000 constant        entry                    external dcl 2-43
trace_$new_high                 000000 constant        entry                    external dcl 2-96
trace_$num_entrypoints          000000 constant        entry                    external dcl 2-55
trace_$num_locations            000000 constant        entry                    external dcl 2-66
trace_$num_specified_entrypoints
                                000000 constant        entry                    external dcl 2-56
trace_$num_specified_locations  000000 constant        entry                    external dcl 2-67
trace_$output_switch            000000 constant        entry                    external dcl 2-128
trace_$parms_specified          000000 constant        entry                    external dcl 2-99
trace_$parms_string             000000 constant        entry                    external dcl 2-98
trace_$remove_specified_eps     000000 constant        entry                    external dcl 2-22
trace_$remove_specified_locs    000000 constant        entry                    external dcl 2-23
trace_$removed                  000000 constant        entry                    external dcl 2-44
trace_$reset_meters             000000 constant        entry                    external dcl 2-45
trace_$set_alm                  000000 constant        entry                    external dcl 2-112
trace_$set_arguments            000000 constant        entry                    external dcl 2-83
trace_$set_automatic            000000 constant        entry                    external dcl 2-114
trace_$set_buffer               000000 constant        entry                    external dcl 2-116
trace_$set_calibrate            000000 constant        entry                    external dcl 2-118
trace_$set_call                 000000 constant        entry                    external dcl 2-85
trace_$set_compensation         000000 constant        entry                    external dcl 2-120
trace_$set_enabled              000000 constant        entry                    external dcl 2-122
trace_$set_every                000000 constant        entry                    external dcl 2-87
trace_$set_first                000000 constant        entry                    external dcl 2-89
trace_$set_high                 000000 constant        entry                    external dcl 2-91
trace_$set_last                 000000 constant        entry                    external dcl 2-93
trace_$set_long                 000000 constant        entry                    external dcl 2-125
trace_$set_loud                 000000 constant        entry                    external dcl 2-139
trace_$set_low                  000000 constant        entry                    external dcl 2-95
trace_$set_meter                000000 constant        entry                    external dcl 2-127
trace_$set_new_high             000000 constant        entry                    external dcl 2-97
trace_$set_output_switch        000000 constant        entry                    external dcl 2-129
trace_$set_signals              000000 constant        entry                    external dcl 2-131
trace_$set_stop                 000000 constant        entry                    external dcl 2-101
trace_$set_stop_every           000000 constant        entry                    external dcl 2-103
trace_$set_stop_low             000000 constant        entry                    external dcl 2-105
trace_$set_stop_proc            000000 constant        entry                    external dcl 2-133
trace_$set_stop_routine         000000 constant        entry                    external dcl 2-135
trace_$set_trace                000000 constant        entry                    external dcl 2-107
trace_$set_trace_routine        000000 constant        entry                    external dcl 2-137
trace_$signals                  000000 constant        entry                    external dcl 2-130
trace_$specified_entrypoint_index
                                000000 constant        entry                    external dcl 2-57
trace_$specified_location_index 000000 constant        entry                    external dcl 2-68
trace_$specify_changed_locations
                                000000 constant        entry                    external dcl 2-70
trace_$specify_entrypoints      000000 constant        entry                    external dcl 2-58
trace_$specify_locations        000000 constant        entry                    external dcl 2-69
trace_$stop                     000000 constant        entry                    external dcl 2-100
trace_$stop_every               000000 constant        entry                    external dcl 2-102
trace_$stop_low                 000000 constant        entry                    external dcl 2-104
trace_$stop_proc                000000 constant        entry                    external dcl 2-132
trace_$stop_routine             000000 constant        entry                    external dcl 2-134
trace_$trace                    000000 constant        entry                    external dcl 2-106
trace_$trace_routine            000000 constant        entry                    external dcl 2-136
trace_$transaction_begin        000000 constant        entry                    external dcl 2-12
trace_$transaction_begin_force  000000 constant        entry                    external dcl 2-13
trace_$transaction_end          000000 constant        entry                    external dcl 2-14
trace_$translator_id            000000 constant        entry                    external dcl 2-59
trace_$turn_off_specified_eps   000000 constant        entry                    external dcl 2-25
trace_$turn_on_specified_eps    000000 constant        entry                    external dcl 2-24
trace_$update_default_parms     000000 constant        entry                    external dcl 2-18
trace_$update_global_parms      000000 constant        entry                    external dcl 2-19
trace_$version                  000000 constant        entry                    external dcl 2-8

NAMES DECLARED BY EXPLICIT CONTEXT.
cv_bit_to_onoff                 001353 constant        entry                    external dcl 77
cv_bits_to_inout                000527 constant        entry                    external dcl 35
cv_inout_to_bits                000220 constant        entry                    external dcl 19
cv_n_to_number                  000667 constant        entry                    external dcl 49
cv_onoff_to_bit                 001164 constant        entry                    external dcl 65
trace_conversions_              000201 constant        entry                    external dcl 14

NAMES DECLARED BY CONTEXT OR IMPLICATION.
convert                                                builtin function         ref 56
null                                                   builtin function         ref 30 30 52 52 58 58 72 72

STORAGE REQUIREMENTS FOR THIS PROGRAM.

	Object	Text	Link	Symbol	Defs	Static
Start          0       0      1560        1576    1432        1570
Length      2030    1432        16         216     125           0

BLOCK NAME	         STACK SIZE     TYPE		WHY NONQUICK/WHO SHARES STACK FRAME
trace_conversions_                  328 external procedure  is an external procedure.  
on unit on line 52                  126 on unit               

STORAGE FOR AUTOMATIC VARIABLES.

STACK FRAME                 LOC IDENTIFIER                  BLOCK NAME
trace_conversions_       000100 bit2                        trace_conversions_
                         000102 char8                       trace_conversions_
                         000104 char16                      trace_conversions_
                         000110 number                      trace_conversions_
                         000111 rv                          trace_conversions_
                         000134 watch_values                trace_conversions_
                         000136 counts                      trace_conversions_
                         000142 meters                      trace_conversions_
                         000150 compensation                trace_conversions_

THE FOLLOWING EXTERNAL OPERATORS ARE USED BY THIS PROGRAM.
call_ext_out_desc   call_ext_out        return              signal              enable              ext_entry
int_entry           size_check_fx1      any_to_any_tr

THE FOLLOWING EXTERNAL ENTRIES ARE CALLED BY THIS PROGRAM.
sub_err_                      trace_$me

THE FOLLOWING EXTERNAL VARIABLES ARE USED BY THIS PROGRAM.
error_table_$bad_arg




   LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC   
     14 000200        16 000210        19 000213        21 000227        22 000234        24 000304        26 000351
     28 000410        30 000446        35 000522        37 000536        38 000542        40 000563        42 000607
     44 000633        46 000657        49 000662        51 000676        52 000703        56 001004        58 001020
     62 001103        65 001160        67 001172        68 001177        70 001236        72 001272        77 001346
     79 001362        81 001406       141 001427


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
