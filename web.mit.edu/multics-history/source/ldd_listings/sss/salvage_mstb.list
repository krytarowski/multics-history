	COMPILATION LISTING OF SEGMENT salvage_mstb
	Compiled by: Multics PL/I Compiler, Release 28d, of October 4, 1983
	Compiled at: Honeywell Multics Op. - System M
	Compiled on: 12/05/84  1102.5 mst Wed
	    Options: optimize list

        1 /* ***********************************************************
        2*   *                                                         *
        3*   * Copyright, (C) Honeywell Information Systems Inc., 1983 *
        4*   *                                                         *
        5*   * Copyright (c) 1972 by Massachusetts Institute of        *
        6*   * Technology and Honeywell Information Systems, Inc.      *
        7*   *                                                         *
        8*   *********************************************************** */
        9 
       10 
       11 /* format: style4,delnl,insnl,ifthenstmt,indend,declareind8,dclind4 */
       12 salvage_mstb:
       13      procedure options (variable);
       14 
       15 /* Recover and rahash a multi-segment table. */
       16 /* Written by C. Hornig, January 1980. */
       17 /* Modified by B. Margolin, July 1983, for Version 2 MSTB */
       18 /* Modified 1984-08-17 by E. Swenson for Version 3 MSTBs. */
       19 
  1     1 /* Begin include file ms_table_info.incl.pl1 */
  1     2 /* Written by C. Hornig, June 1979 */
  1     3 /* Modified by B. Margolin, July 1983, for version 2 */
  1     4 /* Modified 1984-07-24 BIM for V3, improved hash, checksums */
  1     5 
  1     6 /* This information is passed to ms_table_mgr_$create when a multi-segment
  1     7*   table is created. */
  1     8 
  1     9 /* format: style3 */
  1    10 
  1    11 declare	MS_TABLE_INFO_VERSION_3
  1    12 			fixed init (3) internal static options (constant);
  1    13 
  1    14 declare	1 ms_table_info	aligned based,
  1    15 	  2 version	fixed,			/* Should be 3 */
  1    16 	  2 type		character (32),		/* what table is this? */
  1    17 	  2 (
  1    18 	  header_size,				/* length of table header in words */
  1    19 	  entry_size
  1    20 	  )		unsigned fixed (18),	/* same for table entries */
  1    21 	  2 max_entries	unsigned fixed bin (18),	/* how many entries */
  1    22 	  2 max_size	fixed bin (19),		/* max segment length */
  1    23 	  2 keep_meters	bit (1) aligned;		/* table is writable to readers */
  1    24 
  1    25 /* End include file ms_table_info.incl.pl1 */
       20 
       21 
       22 dcl error_table_$bad_conversion fixed bin (35) ext static;
       23 dcl error_table_$checksum_failure fixed bin (35) external static;
       24 dcl error_table_$unimplemented_version fixed bin (35) ext static;
       25 dcl error_table_$no_record fixed bin (35) ext static;
       26 dcl error_table_$bad_index fixed bin (35) ext static;
       27 dcl error_table_$id_already_exists fixed bin (35) ext static;
       28 dcl iox_$error_output ptr external static;
       29 
       30 dcl ME char (32) init ("salvage_mstb") static options (constant);
       31 dcl NO_WRITE bit (1) aligned initial ("0"b) internal static options (constant);
       32 
       33 dcl com_err_ entry options (variable);
       34 dcl copy_acl_ entry (char (*), char (*), char (*), char (*), bit (1) aligned, fixed bin (35));
       35 dcl cu_$arg_count entry returns (fixed bin);
       36 dcl cu_$arg_ptr entry (fixed bin, ptr, fixed bin (21), fixed bin (35));
       37 dcl cv_dec_check_ entry (char (*), fixed bin (35)) returns (fixed bin (35));
       38 dcl expand_pathname_ entry (char (*), char (*), char (*), fixed bin (35));
       39 dcl hcs_$chname_file entry (char (*), char (*), char (*), char (*), fixed bin (35));
       40 dcl ioa_$ioa_switch entry options (variable);
       41 dcl ms_table_mgr_$abs_entry entry (ptr, fixed bin (35), char (*), bit (1) aligned, ptr, fixed bin (35), fixed bin (35));
       42 dcl ms_table_mgr_$create entry (char (*), char (*), ptr, fixed bin (35));
       43 dcl ms_table_mgr_$close entry (ptr, fixed bin (35));
       44 dcl ms_table_mgr_$open entry (char (*), char (*), char (*), ptr, ptr, fixed bin (35));
       45 dcl ms_table_mgr_$new_entry entry (ptr, char (*), ptr, fixed bin (35));
       46 dcl ms_table_mgr_$table_data entry (ptr, ptr, ptr, fixed bin (35), fixed bin (35));
       47 dcl ms_table_mgr_$update_entry entry (ptr, ptr, fixed bin (35));
       48 dcl unique_chars_ entry (bit (*)) returns (char (15));
       49 
       50 dcl copy_header (mti.header_size) fixed bin (35) based;
       51 dcl copy_entry (mti.entry_size) fixed bin (35) based;
       52 
       53 dcl 1 mti aligned like ms_table_info;
       54 dcl (tp, ntp, hp, nhp, ep, nep) ptr;
       55 dcl key char (32);
       56 dcl ndirname char (168);
       57 dcl (nename, oename) char (32);
       58 dcl ne fixed bin (35);
       59 dcl code fixed bin (35);
       60 dcl i fixed bin (35);
       61 dcl ap ptr;
       62 dcl al fixed bin (21);
       63 dcl argument char (al) based (ap);
       64 
       65 dcl addr builtin;
       66 
       67 dcl rtrim builtin;
       68 
       69 /* * * * * * * * * * * SALVAGE_MSTB * * * * * * * * * */
       70 
       71 	i = cu_$arg_count ();
       72 	if i < 1 | i > 2 then do;
       73 	     call com_err_ (0, ME, "Usage: salvage_mstb path {entries}");
       74 	     return;
       75 	end;
       76 	call cu_$arg_ptr (1, ap, al, code);		/* get the path */
       77 	call expand_pathname_ (argument, ndirname, oename, code);
       78 	if code ^= 0 then do;
       79 	     call com_err_ (code, ME, "^a", argument);
       80 	     return;
       81 	end;
       82 
       83 	call ms_table_mgr_$open (ndirname, oename, "", tp, hp, code);
       84 						/* open the old MSTB */
       85 	if code ^= 0 then do;
       86 	     call com_err_ (code, ME, "Opening MSTB ^a>^a.", ndirname, oename);
       87 	     return;
       88 	end;
       89 
       90 	call ms_table_mgr_$table_data (tp, addr (mti), hp, ne, code);
       91 						/* find out about the old one */
       92 	if code ^= 0 then do;
       93 	     call com_err_ (code, ME, "Getting MSTB data.");
       94 	     return;
       95 	end;
       96 
       97 	if mti.version ^= MS_TABLE_INFO_VERSION_3 then do;
       98 	     call com_err_ (error_table_$unimplemented_version, ME);
       99 	     return;
      100 	end;
      101 
      102 	call cu_$arg_ptr (2, ap, al, code);		/* did the caller specify the table size? */
      103 	if code ^= 0
      104 	then mti.max_entries = 3 * ne;		/* no, default to 1/3 full */
      105 	else do;
      106 	     mti.max_entries = cv_dec_check_ (argument, code);
      107 						/* yes, get it */
      108 	     if code ^= 0 then do;
      109 		call com_err_ (error_table_$bad_conversion, ME, "^a", argument);
      110 		return;
      111 	     end;
      112 	end;
      113 
      114 	nename = unique_chars_ (""b) || "." || oename;
      115 	call ms_table_mgr_$create (ndirname, nename, addr (mti), code);
      116 						/* create the new copy */
      117 	if code ^= 0 then do;
      118 	     call com_err_ (code, ME, "Creating new MSTB.");
      119 	     return;
      120 	end;
      121 	call ms_table_mgr_$open (ndirname, nename, (mti.type), ntp, nhp, code);
      122 	if code ^= 0 then do;
      123 	     call com_err_ (code, ME, "Opening new MSTB.");
      124 	     return;
      125 	end;
      126 
      127 	nhp -> copy_header = hp -> copy_header;		/* copy the table header */
      128 	do i = 1 by 1;				/* now copy the records */
      129 	     call ms_table_mgr_$abs_entry (tp, i, key, NO_WRITE, ep, (0), code);
      130 	     if code = 0 then do;			/* got one */
      131 		call ms_table_mgr_$new_entry (ntp, key, nep, code);
      132 						/* create in new copy */
      133 		if code = 0 then do;		/* got an entry */
      134 		     call COPY_ENTRY ();		/* Copy the entry */
      135 		     if code ^= 0 then goto ENTRY_ERROR;
      136 		end;
      137 		else if code = error_table_$id_already_exists then ;
      138 						/* ignore */
      139 		else do;
      140 ENTRY_ERROR:
      141 		     call com_err_ (code, ME, "Processing entry ^d key ^a.", i, key);
      142 		     return;
      143 		end;
      144 	     end;
      145 	     else if code = error_table_$bad_index then goto done_copying_entries;
      146 	     else if code = error_table_$no_record then ;
      147 	     else if code = error_table_$checksum_failure
      148 	     then call ioa_$ioa_switch (iox_$error_output, "^a: Checksum failure processing entry ^d.", ME, i);
      149 	     else do;
      150 		call com_err_ (code, ME, "Reading entry ^d.", i);
      151 		return;
      152 	     end;
      153 	     end;
      154 done_copying_entries:
      155 	call ms_table_mgr_$close (ntp, (0));		/* and clean up */
      156 	call ms_table_mgr_$close (tp, (0));		/* switch names: */
      157 	call copy_acl_ (ndirname, oename, ndirname, nename, ("0"b), code);
      158 	if code ^= 0 then call com_err_ (code, ME, "Unable to copy MSTB ACL.");
      159 	call hcs_$chname_file (ndirname, oename, oename, rtrim (oename) || ".-." || unique_chars_ (""b), code);
      160 						/* XXX -> XXX.-.!shriek */
      161 	if code ^= 0 then call com_err_ (code, ME, "Unable to rename old MSTB.");
      162 	call hcs_$chname_file (ndirname, nename, nename, oename, code);
      163 						/* !shriek.XXX -> XXX */
      164 	if code ^= 0 then call com_err_ (code, ME, "Unable to rename new MSTB.");
      165 
      166 	return;
      167 
      168 COPY_ENTRY:
      169      procedure ();
      170 
      171 /**** This internal procedure copies the old entry into the new entry
      172*      and updates the table entry. */
      173 
      174 	nep -> copy_entry = ep -> copy_entry;		/* Slurp */
      175 	call ms_table_mgr_$update_entry (ntp, nep, code);
      176 	return;
      177      end COPY_ENTRY;
      178 
      179      end salvage_mstb;
      180 
      181 
	SOURCE FILES USED IN THIS COMPILATION.

LINE      NUMBER  DATE MODIFIED     NAME			PATHNAME
             0    12/05/84  0851.1  salvage_mstb.pl1                  >special_ldd>temp>as>salvage_mstb.pl1
20           1    12/05/84  0834.4  ms_table_info.incl.pl1            >special_ldd>temp>as>ms_table_info.incl.pl1
	NAMES DECLARED IN THIS COMPILATION.

IDENTIFIER	     OFFSET    LOC STORAGE CLASS   DATA TYPE		ATTRIBUTES AND REFERENCES
								(* indicates a set context)

NAMES DECLARED BY DECLARE STATEMENT.
ME                              000000 constant        char(32)                 initial unaligned dcl 30 set ref 73* 79* 86* 93* 98*
                                                                                  109* 118* 123* 140* 147* 150* 158* 161* 164*
MS_TABLE_INFO_VERSION_3                constant        fixed bin(17,0)          initial dcl 1-11 ref 97
NO_WRITE                        000033 constant        bit(1)                   initial dcl 31 set ref 129*
addr                                                   builtin function         dcl 65 ref 90 90 115 115
al                              000242 automatic       fixed bin(21,0)          dcl 62 set ref 76* 77 77 79 79 102* 106 106 109 109
ap                              000240 automatic       pointer                  dcl 61 set ref 76* 77 79 102* 106 109
argument                               based           char                     unaligned dcl 63 set ref 77* 79* 106* 109*
code                            000235 automatic       fixed bin(35,0)          dcl 59 set ref 76* 77* 78 79* 83* 85 86* 90* 92 93*
                                                                                  102* 103 106* 108 115* 117 118* 121* 122 123* 129*
                                                                                  130 131* 133 135 137 140* 145 146 147 150* 157*
                                                                                  158 158* 159* 161 161* 162* 164 164* 175*
com_err_                        000026 constant        entry                    external dcl 33 ref 73 79 86 93 98 109 118 123 140
                                                                                  150 158 161 164
copy_acl_                       000030 constant        entry                    external dcl 34 ref 157
copy_entry                             based           fixed bin(35,0)          array dcl 51 set ref 174* 174
copy_header                            based           fixed bin(35,0)          array dcl 50 set ref 127* 127
cu_$arg_count                   000032 constant        entry                    external dcl 35 ref 71
cu_$arg_ptr                     000034 constant        entry                    external dcl 36 ref 76 102
cv_dec_check_                   000036 constant        entry                    external dcl 37 ref 106
entry_size               12     000100 automatic       fixed bin(18,0)          level 2 unsigned dcl 53 set ref 174
ep                              000126 automatic       pointer                  dcl 54 set ref 129* 174
error_table_$bad_conversion     000010 external static fixed bin(35,0)          dcl 22 set ref 109*
error_table_$bad_index          000020 external static fixed bin(35,0)          dcl 26 ref 145
error_table_$checksum_failure   000012 external static fixed bin(35,0)          dcl 23 ref 147
error_table_$id_already_exists  000022 external static fixed bin(35,0)          dcl 27 ref 137
error_table_$no_record          000016 external static fixed bin(35,0)          dcl 25 ref 146
error_table_$unimplemented_version
                                000014 external static fixed bin(35,0)          dcl 24 set ref 98*
expand_pathname_                000040 constant        entry                    external dcl 38 ref 77
hcs_$chname_file                000042 constant        entry                    external dcl 39 ref 159 162
header_size              11     000100 automatic       fixed bin(18,0)          level 2 unsigned dcl 53 set ref 127
hp                              000122 automatic       pointer                  dcl 54 set ref 83* 90* 127
i                               000236 automatic       fixed bin(35,0)          dcl 60 set ref 71* 72 72 128* 129* 140* 147* 150*
ioa_$ioa_switch                 000044 constant        entry                    external dcl 40 ref 147
iox_$error_output               000024 external static pointer                  dcl 28 set ref 147*
key                             000132 automatic       char(32)                 unaligned dcl 55 set ref 129* 131* 140*
max_entries              13     000100 automatic       fixed bin(18,0)          level 2 unsigned dcl 53 set ref 103* 106*
ms_table_info                          based           structure                level 1 dcl 1-14
ms_table_mgr_$abs_entry         000046 constant        entry                    external dcl 41 ref 129
ms_table_mgr_$close             000052 constant        entry                    external dcl 43 ref 154 156
ms_table_mgr_$create            000050 constant        entry                    external dcl 42 ref 115
ms_table_mgr_$new_entry         000056 constant        entry                    external dcl 45 ref 131
ms_table_mgr_$open              000054 constant        entry                    external dcl 44 ref 83 121
ms_table_mgr_$table_data        000060 constant        entry                    external dcl 46 ref 90
ms_table_mgr_$update_entry      000062 constant        entry                    external dcl 47 ref 175
mti                             000100 automatic       structure                level 1 dcl 53 set ref 90 90 115 115
ndirname                        000142 automatic       char(168)                unaligned dcl 56 set ref 77* 83* 86* 115* 121* 157*
                                                                                  157* 159* 162*
ne                              000234 automatic       fixed bin(35,0)          dcl 58 set ref 90* 103
nename                          000214 automatic       char(32)                 unaligned dcl 57 set ref 114* 115* 121* 157* 162*
                                                                                  162*
nep                             000130 automatic       pointer                  dcl 54 set ref 131* 174 175*
nhp                             000124 automatic       pointer                  dcl 54 set ref 121* 127
ntp                             000120 automatic       pointer                  dcl 54 set ref 121* 131* 154* 175*
oename                          000224 automatic       char(32)                 unaligned dcl 57 set ref 77* 83* 86* 114 157* 159*
                                                                                  159* 159 162*
rtrim                                                  builtin function         dcl 67 ref 159
tp                              000116 automatic       pointer                  dcl 54 set ref 83* 90* 129* 156*
type                      1     000100 automatic       char(32)                 level 2 dcl 53 set ref 121
unique_chars_                   000064 constant        entry                    external dcl 48 ref 114 159
version                         000100 automatic       fixed bin(17,0)          level 2 dcl 53 set ref 97

NAMES DECLARED BY EXPLICIT CONTEXT.
COPY_ENTRY                      001605 constant        entry                    internal dcl 168 ref 134
ENTRY_ERROR                     001135 constant        label                    dcl 140 ref 135
done_copying_entries            001265 constant        label                    dcl 154 ref 145
salvage_mstb                    000150 constant        entry                    external dcl 12

THERE WERE NO NAMES DECLARED BY CONTEXT OR IMPLICATION.

STORAGE REQUIREMENTS FOR THIS PROGRAM.

	Object	Text	Link	Symbol	Defs	Static
Start          0       0      2122        2210    1632        2132
Length      2446    1632        66         222     270           0

BLOCK NAME	         STACK SIZE     TYPE		WHY NONQUICK/WHO SHARES STACK FRAME
salvage_mstb                        286 external procedure  is an external procedure.  
COPY_ENTRY                              internal procedure  shares stack frame of external procedure salvage_mstb.  

STORAGE FOR AUTOMATIC VARIABLES.

STACK FRAME                 LOC IDENTIFIER                  BLOCK NAME
salvage_mstb             000100 mti                         salvage_mstb
                         000116 tp                          salvage_mstb
                         000120 ntp                         salvage_mstb
                         000122 hp                          salvage_mstb
                         000124 nhp                         salvage_mstb
                         000126 ep                          salvage_mstb
                         000130 nep                         salvage_mstb
                         000132 key                         salvage_mstb
                         000142 ndirname                    salvage_mstb
                         000214 nename                      salvage_mstb
                         000224 oename                      salvage_mstb
                         000234 ne                          salvage_mstb
                         000235 code                        salvage_mstb
                         000236 i                           salvage_mstb
                         000240 ap                          salvage_mstb
                         000242 al                          salvage_mstb

THE FOLLOWING EXTERNAL OPERATORS ARE USED BY THIS PROGRAM.
alloc_cs            cat_realloc_cs      call_ext_out_desc   call_ext_out        return              shorten_stack
ext_entry

THE FOLLOWING EXTERNAL ENTRIES ARE CALLED BY THIS PROGRAM.
com_err_                      copy_acl_                     cu_$arg_count                 cu_$arg_ptr
cv_dec_check_                 expand_pathname_              hcs_$chname_file              ioa_$ioa_switch
ms_table_mgr_$abs_entry       ms_table_mgr_$close           ms_table_mgr_$create          ms_table_mgr_$new_entry
ms_table_mgr_$open            ms_table_mgr_$table_data      ms_table_mgr_$update_entry    unique_chars_

THE FOLLOWING EXTERNAL VARIABLES ARE USED BY THIS PROGRAM.
error_table_$bad_conversion   error_table_$bad_index        error_table_$checksum_failure
error_table_$id_already_exists                              error_table_$no_record
error_table_$unimplemented_version                          iox_$error_output


CONSTANTS
000000  aa  163 141 154 166	salv
000001  aa  141 147 145 137	age_
000002  aa  155 163 164 142	mstb
000003  aa  040 040 040 040	    
000004  aa  040 040 040 040	    
000005  aa  040 040 040 040	    
000006  aa  040 040 040 040	    
000007  aa  040 040 040 040	    

000010  aa     524000000032

000011  aa  056 055 056 000	.-.

000012  aa     524000000030

000013  aa     524000000051

000014  aa     524000000033

000015  aa     514000000001

000016  aa     524000000021

000017  aa     524000000040

001631  aa  056 000 000 000	.

000020  aa     514000000000

000021  aa     524000000022

000022  aa     524000000023

000023  aa     464000000000

000024  aa     524000000000

000025  aa     524000000002

000026  aa     526000000250

000027  aa     526000000000

000030  aa     524000000042

000031  aa     526000000040

000032  aa     404000000005

000033  aa     000000000000

000034  aa     526000000017

000035  aa     404000000043

000036  aa     404000000021

000037  aa  122 145 141 144	Read
000040  aa  151 156 147 040	ing 
000041  aa  145 156 164 162	entr
000042  aa  171 040 136 144	y ^d
000043  aa  056 000 000 000	.

000044  aa  117 160 145 156	Open
000045  aa  151 156 147 040	ing 
000046  aa  156 145 167 040	new 
000047  aa  115 123 124 102	MSTB
000050  aa  056 000 000 000	.

000051  aa  103 162 145 141	Crea
000052  aa  164 151 156 147	ting
000053  aa  040 156 145 167	 new
000054  aa  040 115 123 124	 MST
000055  aa  102 056 000 000	B.

000056  aa  107 145 164 164	Gett
000057  aa  151 156 147 040	ing 
000060  aa  115 123 124 102	MSTB
000061  aa  040 144 141 164	 dat
000062  aa  141 056 000 000	a.

000063  aa  117 160 145 156	Open
000064  aa  151 156 147 040	ing 
000065  aa  115 123 124 102	MSTB
000066  aa  040 136 141 076	 ^a>
000067  aa  136 141 056 000	^a.

000070  aa  125 156 141 142	Unab
000071  aa  154 145 040 164	le t
000072  aa  157 040 143 157	o co
000073  aa  160 171 040 115	py M
000074  aa  123 124 102 040	STB 
000075  aa  101 103 114 056	ACL.

000076  aa  125 156 141 142	Unab
000077  aa  154 145 040 164	le t
000100  aa  157 040 162 145	o re
000101  aa  156 141 155 145	name
000102  aa  040 156 145 167	 new
000103  aa  040 115 123 124	 MST
000104  aa  102 056 000 000	B.

000105  aa  125 156 141 142	Unab
000106  aa  154 145 040 164	le t
000107  aa  157 040 162 145	o re
000110  aa  156 141 155 145	name
000111  aa  040 157 154 144	 old
000112  aa  040 115 123 124	 MST
000113  aa  102 056 000 000	B.

000114  aa  120 162 157 143	Proc
000115  aa  145 163 163 151	essi
000116  aa  156 147 040 145	ng e
000117  aa  156 164 162 171	ntry
000120  aa  040 136 144 040	 ^d 
000121  aa  153 145 171 040	key 
000122  aa  136 141 056 000	^a.

000123  aa  125 163 141 147	Usag
000124  aa  145 072 040 163	e: s
000125  aa  141 154 166 141	alva
000126  aa  147 145 137 155	ge_m
000127  aa  163 164 142 040	stb 
000130  aa  160 141 164 150	path
000131  aa  040 173 145 156	 {en
000132  aa  164 162 151 145	trie
000133  aa  163 175 000 000	s}

000134  aa  136 141 072 040	^a: 
000135  aa  103 150 145 143	Chec
000136  aa  153 163 165 155	ksum
000137  aa  040 146 141 151	 fai
000140  aa  154 165 162 145	lure
000141  aa  040 160 162 157	 pro
000142  aa  143 145 163 163	cess
000143  aa  151 156 147 040	ing 
000144  aa  145 156 164 162	entr
000145  aa  171 040 136 144	y ^d
000146  aa  056 000 000 000	.

BEGIN PROCEDURE salvage_mstb
ENTRY TO salvage_mstb                                       STATEMENT 1 ON LINE 12
salvage_mstb:
     procedure options (variable);

000147  da     000264240000
000150  aa   000440 6270 00	eax7 	288
000151  aa  7 00034 3521 20	epp2 	pr7|28,*
000152  aa  2 01045 2721 00	tsp2 	pr2|549		ext_entry
000153  aa     000000000000
000154  aa     000000000000
						STATEMENT 1 ON LINE 71
	i = cu_$arg_count ();

000155  aa  6 00252 3521 00	epp2 	pr6|170
000156  aa  6 00256 2521 00	spri2	pr6|174
000157  aa  6 00254 6211 00	eax1 	pr6|172
000160  aa   004000 4310 07	fld  	2048,dl
000161  la  4 00032 3521 20	epp2 	pr4|26,*		cu_$arg_count
000162  aa  0 00623 7001 00	tsx0 	pr0|403		call_ext_out
000163  aa  6 00252 2361 00	ldq  	pr6|170
000164  aa  6 00236 7561 00	stq  	pr6|158		i
						STATEMENT 1 ON LINE 72
	if i < 1 | i > 2 then do;

000165  aa   000001 1160 07	cmpq 	1,dl
000166  aa   000003 6040 04	tmi  	3,ic		000171
000167  aa   000002 1160 07	cmpq 	2,dl
000170  aa   000027 6044 04	tmoz 	23,ic		000217
						STATEMENT 1 ON LINE 73
	     call com_err_ (0, ME, "Usage: salvage_mstb path {entries}");

000171  aa  6 00252 4501 00	stz  	pr6|170
000172  aa  000 100 100 404	mlr  	(ic),(pr),fill(000)
000173  aa   777731 00 0044	desc9a	-39,36		000123 = 125163141147
000174  aa  6 00260 00 0044	desc9a	pr6|176,36
000175  aa  6 00252 3521 00	epp2 	pr6|170
000176  aa  6 00274 2521 00	spri2	pr6|188
000177  aa   777601 3520 04	epp2 	-127,ic		000000 = 163141154166
000200  aa  6 00276 2521 00	spri2	pr6|190
000201  aa  6 00260 3521 00	epp2 	pr6|176
000202  aa  6 00300 2521 00	spri2	pr6|192
000203  aa   777627 3520 04	epp2 	-105,ic		000032 = 404000000005
000204  aa  6 00302 2521 00	spri2	pr6|194
000205  aa   777624 3520 04	epp2 	-108,ic		000031 = 526000000040
000206  aa  6 00304 2521 00	spri2	pr6|196
000207  aa   777621 3520 04	epp2 	-111,ic		000030 = 524000000042
000210  aa  6 00306 2521 00	spri2	pr6|198
000211  aa  6 00272 6211 00	eax1 	pr6|186
000212  aa   014000 4310 07	fld  	6144,dl
000213  aa  6 00044 3701 20	epp4 	pr6|36,*
000214  la  4 00026 3521 20	epp2 	pr4|22,*		com_err_
000215  aa  0 00622 7001 00	tsx0 	pr0|402		call_ext_out_desc
						STATEMENT 1 ON LINE 74
	     return;

000216  aa  0 00631 7101 00	tra  	pr0|409		return
						STATEMENT 1 ON LINE 75
	end;

						STATEMENT 1 ON LINE 76
	call cu_$arg_ptr (1, ap, al, code);

000217  aa   000001 2360 07	ldq  	1,dl
000220  aa  6 00252 7561 00	stq  	pr6|170
000221  aa  6 00252 3521 00	epp2 	pr6|170
000222  aa  6 00274 2521 00	spri2	pr6|188
000223  aa  6 00240 3521 00	epp2 	pr6|160		ap
000224  aa  6 00276 2521 00	spri2	pr6|190
000225  aa  6 00242 3521 00	epp2 	pr6|162		al
000226  aa  6 00300 2521 00	spri2	pr6|192
000227  aa  6 00235 3521 00	epp2 	pr6|157		code
000230  aa  6 00302 2521 00	spri2	pr6|194
000231  aa  6 00272 6211 00	eax1 	pr6|186
000232  aa   020000 4310 07	fld  	8192,dl
000233  aa  6 00044 3701 20	epp4 	pr6|36,*
000234  la  4 00034 3521 20	epp2 	pr4|28,*		cu_$arg_ptr
000235  aa  0 00623 7001 00	tsx0 	pr0|403		call_ext_out
						STATEMENT 1 ON LINE 77
	call expand_pathname_ (argument, ndirname, oename, code);

000236  aa  6 00242 2361 00	ldq  	pr6|162		al
000237  aa   526000 2760 03	orq  	175104,du
000240  aa  6 00252 7561 00	stq  	pr6|170
000241  aa  6 00240 3521 20	epp2 	pr6|160,*		argument
000242  aa  6 00312 2521 00	spri2	pr6|202
000243  aa  6 00142 3521 00	epp2 	pr6|98		ndirname
000244  aa  6 00314 2521 00	spri2	pr6|204
000245  aa  6 00224 3521 00	epp2 	pr6|148		oename
000246  aa  6 00316 2521 00	spri2	pr6|206
000247  aa  6 00235 3521 00	epp2 	pr6|157		code
000250  aa  6 00320 2521 00	spri2	pr6|208
000251  aa  6 00252 3521 00	epp2 	pr6|170
000252  aa  6 00322 2521 00	spri2	pr6|210
000253  aa   777553 3520 04	epp2 	-149,ic		000026 = 526000000250
000254  aa  6 00324 2521 00	spri2	pr6|212
000255  aa   777554 3520 04	epp2 	-148,ic		000031 = 526000000040
000256  aa  6 00326 2521 00	spri2	pr6|214
000257  aa   777556 3520 04	epp2 	-146,ic		000035 = 404000000043
000260  aa  6 00330 2521 00	spri2	pr6|216
000261  aa  6 00310 6211 00	eax1 	pr6|200
000262  aa   020000 4310 07	fld  	8192,dl
000263  aa  6 00044 3701 20	epp4 	pr6|36,*
000264  la  4 00040 3521 20	epp2 	pr4|32,*		expand_pathname_
000265  aa  0 00622 7001 00	tsx0 	pr0|402		call_ext_out_desc
						STATEMENT 1 ON LINE 78
	if code ^= 0 then do;

000266  aa  6 00235 2361 00	ldq  	pr6|157		code
000267  aa   000034 6000 04	tze  	28,ic		000323
						STATEMENT 1 ON LINE 79
	     call com_err_ (code, ME, "^a", argument);

000270  aa  6 00242 2361 00	ldq  	pr6|162		al
000271  aa   526000 2760 03	orq  	175104,du
000272  aa  6 00252 7561 00	stq  	pr6|170
000273  aa   136141 2350 03	lda  	48225,du
000274  aa  6 00271 7551 00	sta  	pr6|185
000275  aa  6 00235 3521 00	epp2 	pr6|157		code
000276  aa  6 00312 2521 00	spri2	pr6|202
000277  aa   777501 3520 04	epp2 	-191,ic		000000 = 163141154166
000300  aa  6 00314 2521 00	spri2	pr6|204
000301  aa  6 00271 3521 00	epp2 	pr6|185
000302  aa  6 00316 2521 00	spri2	pr6|206
000303  aa  6 00240 3521 20	epp2 	pr6|160,*		argument
000304  aa  6 00320 2521 00	spri2	pr6|208
000305  aa   777530 3520 04	epp2 	-168,ic		000035 = 404000000043
000306  aa  6 00322 2521 00	spri2	pr6|210
000307  aa   777522 3520 04	epp2 	-174,ic		000031 = 526000000040
000310  aa  6 00324 2521 00	spri2	pr6|212
000311  aa   777514 3520 04	epp2 	-180,ic		000025 = 524000000002
000312  aa  6 00326 2521 00	spri2	pr6|214
000313  aa  6 00252 3521 00	epp2 	pr6|170
000314  aa  6 00330 2521 00	spri2	pr6|216
000315  aa  6 00310 6211 00	eax1 	pr6|200
000316  aa   020000 4310 07	fld  	8192,dl
000317  aa  6 00044 3701 20	epp4 	pr6|36,*
000320  la  4 00026 3521 20	epp2 	pr4|22,*		com_err_
000321  aa  0 00622 7001 00	tsx0 	pr0|402		call_ext_out_desc
						STATEMENT 1 ON LINE 80
	     return;

000322  aa  0 00631 7101 00	tra  	pr0|409		return
						STATEMENT 1 ON LINE 81
	end;

						STATEMENT 1 ON LINE 83
	call ms_table_mgr_$open (ndirname, oename, "", tp, hp, code);

000323  aa  6 00142 3521 00	epp2 	pr6|98		ndirname
000324  aa  6 00334 2521 00	spri2	pr6|220
000325  aa  6 00224 3521 00	epp2 	pr6|148		oename
000326  aa  6 00336 2521 00	spri2	pr6|222
000327  aa  6 00252 3521 00	epp2 	pr6|170
000330  aa  6 00340 2521 00	spri2	pr6|224
000331  aa  6 00116 3521 00	epp2 	pr6|78		tp
000332  aa  6 00342 2521 00	spri2	pr6|226
000333  aa  6 00122 3521 00	epp2 	pr6|82		hp
000334  aa  6 00344 2521 00	spri2	pr6|228
000335  aa  6 00235 3521 00	epp2 	pr6|157		code
000336  aa  6 00346 2521 00	spri2	pr6|230
000337  aa   777467 3520 04	epp2 	-201,ic		000026 = 526000000250
000340  aa  6 00350 2521 00	spri2	pr6|232
000341  aa   777470 3520 04	epp2 	-200,ic		000031 = 526000000040
000342  aa  6 00352 2521 00	spri2	pr6|234
000343  aa   777461 3520 04	epp2 	-207,ic		000024 = 524000000000
000344  aa  6 00354 2521 00	spri2	pr6|236
000345  aa   777456 3520 04	epp2 	-210,ic		000023 = 464000000000
000346  aa  6 00356 2521 00	spri2	pr6|238
000347  aa  6 00360 2521 00	spri2	pr6|240
000350  aa   777465 3520 04	epp2 	-203,ic		000035 = 404000000043
000351  aa  6 00362 2521 00	spri2	pr6|242
000352  aa  6 00332 6211 00	eax1 	pr6|218
000353  aa   030000 4310 07	fld  	12288,dl
000354  aa  6 00044 3701 20	epp4 	pr6|36,*
000355  la  4 00054 3521 20	epp2 	pr4|44,*		ms_table_mgr_$open
000356  aa  0 00622 7001 00	tsx0 	pr0|402		call_ext_out_desc
						STATEMENT 1 ON LINE 85
	if code ^= 0 then do;

000357  aa  6 00235 2361 00	ldq  	pr6|157		code
000360  aa   000035 6000 04	tze  	29,ic		000415
						STATEMENT 1 ON LINE 86
	     call com_err_ (code, ME, "Opening MSTB ^a>^a.", ndirname, oename);

000361  aa  000 100 100 404	mlr  	(ic),(pr),fill(000)
000362  aa   777502 00 0024	desc9a	-190,20		000063 = 117160145156
000363  aa  6 00260 00 0024	desc9a	pr6|176,20
000364  aa  6 00235 3521 00	epp2 	pr6|157		code
000365  aa  6 00334 2521 00	spri2	pr6|220
000366  aa   777412 3520 04	epp2 	-246,ic		000000 = 163141154166
000367  aa  6 00336 2521 00	spri2	pr6|222
000370  aa  6 00260 3521 00	epp2 	pr6|176
000371  aa  6 00340 2521 00	spri2	pr6|224
000372  aa  6 00142 3521 00	epp2 	pr6|98		ndirname
000373  aa  6 00342 2521 00	spri2	pr6|226
000374  aa  6 00224 3521 00	epp2 	pr6|148		oename
000375  aa  6 00344 2521 00	spri2	pr6|228
000376  aa   777437 3520 04	epp2 	-225,ic		000035 = 404000000043
000377  aa  6 00346 2521 00	spri2	pr6|230
000400  aa   777431 3520 04	epp2 	-231,ic		000031 = 526000000040
000401  aa  6 00350 2521 00	spri2	pr6|232
000402  aa  6 00356 2521 00	spri2	pr6|238
000403  aa   777417 3520 04	epp2 	-241,ic		000022 = 524000000023
000404  aa  6 00352 2521 00	spri2	pr6|234
000405  aa   777421 3520 04	epp2 	-239,ic		000026 = 526000000250
000406  aa  6 00354 2521 00	spri2	pr6|236
000407  aa  6 00332 6211 00	eax1 	pr6|218
000410  aa   024000 4310 07	fld  	10240,dl
000411  aa  6 00044 3701 20	epp4 	pr6|36,*
000412  la  4 00026 3521 20	epp2 	pr4|22,*		com_err_
000413  aa  0 00622 7001 00	tsx0 	pr0|402		call_ext_out_desc
						STATEMENT 1 ON LINE 87
	     return;

000414  aa  0 00631 7101 00	tra  	pr0|409		return
						STATEMENT 1 ON LINE 88
	end;

						STATEMENT 1 ON LINE 90
	call ms_table_mgr_$table_data (tp, addr (mti), hp, ne, code);

000415  aa  6 00100 3735 00	epp7 	pr6|64		mti
000416  aa  6 00364 6535 00	spri7	pr6|244
000417  aa  6 00116 3521 00	epp2 	pr6|78		tp
000420  aa  6 00274 2521 00	spri2	pr6|188
000421  aa  6 00364 3521 00	epp2 	pr6|244
000422  aa  6 00276 2521 00	spri2	pr6|190
000423  aa  6 00122 3521 00	epp2 	pr6|82		hp
000424  aa  6 00300 2521 00	spri2	pr6|192
000425  aa  6 00234 3521 00	epp2 	pr6|156		ne
000426  aa  6 00302 2521 00	spri2	pr6|194
000427  aa  6 00235 3521 00	epp2 	pr6|157		code
000430  aa  6 00304 2521 00	spri2	pr6|196
000431  aa  6 00272 6211 00	eax1 	pr6|186
000432  aa   024000 4310 07	fld  	10240,dl
000433  aa  6 00044 3701 20	epp4 	pr6|36,*
000434  la  4 00060 3521 20	epp2 	pr4|48,*		ms_table_mgr_$table_data
000435  aa  0 00623 7001 00	tsx0 	pr0|403		call_ext_out
						STATEMENT 1 ON LINE 92
	if code ^= 0 then do;

000436  aa  6 00235 2361 00	ldq  	pr6|157		code
000437  aa   000031 6000 04	tze  	25,ic		000470
						STATEMENT 1 ON LINE 93
	     call com_err_ (code, ME, "Getting MSTB data.");

000440  aa   777416 2370 04	ldaq 	-242,ic		000056 = 107145164164 151156147040
000441  aa  6 00260 7571 00	staq 	pr6|176
000442  aa   777416 2370 04	ldaq 	-242,ic		000060 = 115123124102 040144141164
000443  aa  6 00262 7571 00	staq 	pr6|178
000444  aa   141056 2350 03	lda  	49710,du
000445  aa  6 00264 7551 00	sta  	pr6|180
000446  aa  6 00235 3521 00	epp2 	pr6|157		code
000447  aa  6 00274 2521 00	spri2	pr6|188
000450  aa   777330 3520 04	epp2 	-296,ic		000000 = 163141154166
000451  aa  6 00276 2521 00	spri2	pr6|190
000452  aa  6 00260 3521 00	epp2 	pr6|176
000453  aa  6 00300 2521 00	spri2	pr6|192
000454  aa   777361 3520 04	epp2 	-271,ic		000035 = 404000000043
000455  aa  6 00302 2521 00	spri2	pr6|194
000456  aa   777353 3520 04	epp2 	-277,ic		000031 = 526000000040
000457  aa  6 00304 2521 00	spri2	pr6|196
000460  aa   777341 3520 04	epp2 	-287,ic		000021 = 524000000022
000461  aa  6 00306 2521 00	spri2	pr6|198
000462  aa  6 00272 6211 00	eax1 	pr6|186
000463  aa   014000 4310 07	fld  	6144,dl
000464  aa  6 00044 3701 20	epp4 	pr6|36,*
000465  la  4 00026 3521 20	epp2 	pr4|22,*		com_err_
000466  aa  0 00622 7001 00	tsx0 	pr0|402		call_ext_out_desc
						STATEMENT 1 ON LINE 94
	     return;

000467  aa  0 00631 7101 00	tra  	pr0|409		return
						STATEMENT 1 ON LINE 95
	end;

						STATEMENT 1 ON LINE 97
	if mti.version ^= MS_TABLE_INFO_VERSION_3 then do;

000470  aa  6 00100 2361 00	ldq  	pr6|64		mti.version
000471  aa   000003 1160 07	cmpq 	3,dl
000472  aa   000017 6000 04	tze  	15,ic		000511
						STATEMENT 1 ON LINE 98
	     call com_err_ (error_table_$unimplemented_version, ME);

000473  aa  6 00044 3701 20	epp4 	pr6|36,*
000474  la  4 00014 3521 20	epp2 	pr4|12,*		error_table_$unimplemented_version
000475  aa  6 00274 2521 00	spri2	pr6|188
000476  aa   777302 3520 04	epp2 	-318,ic		000000 = 163141154166
000477  aa  6 00276 2521 00	spri2	pr6|190
000500  aa   777335 3520 04	epp2 	-291,ic		000035 = 404000000043
000501  aa  6 00300 2521 00	spri2	pr6|192
000502  aa   777327 3520 04	epp2 	-297,ic		000031 = 526000000040
000503  aa  6 00302 2521 00	spri2	pr6|194
000504  aa  6 00272 6211 00	eax1 	pr6|186
000505  aa   010000 4310 07	fld  	4096,dl
000506  la  4 00026 3521 20	epp2 	pr4|22,*		com_err_
000507  aa  0 00622 7001 00	tsx0 	pr0|402		call_ext_out_desc
						STATEMENT 1 ON LINE 99
	     return;

000510  aa  0 00631 7101 00	tra  	pr0|409		return
						STATEMENT 1 ON LINE 100
	end;

						STATEMENT 1 ON LINE 102
	call cu_$arg_ptr (2, ap, al, code);

000511  aa   000002 2360 07	ldq  	2,dl
000512  aa  6 00252 7561 00	stq  	pr6|170
000513  aa  6 00252 3521 00	epp2 	pr6|170
000514  aa  6 00274 2521 00	spri2	pr6|188
000515  aa  6 00240 3521 00	epp2 	pr6|160		ap
000516  aa  6 00276 2521 00	spri2	pr6|190
000517  aa  6 00242 3521 00	epp2 	pr6|162		al
000520  aa  6 00300 2521 00	spri2	pr6|192
000521  aa  6 00235 3521 00	epp2 	pr6|157		code
000522  aa  6 00302 2521 00	spri2	pr6|194
000523  aa  6 00272 6211 00	eax1 	pr6|186
000524  aa   020000 4310 07	fld  	8192,dl
000525  aa  6 00044 3701 20	epp4 	pr6|36,*
000526  la  4 00034 3521 20	epp2 	pr4|28,*		cu_$arg_ptr
000527  aa  0 00623 7001 00	tsx0 	pr0|403		call_ext_out
						STATEMENT 1 ON LINE 103
	if code ^= 0
	then mti.max_entries = 3 * ne;

000530  aa  6 00235 2361 00	ldq  	pr6|157		code
000531  aa   000005 6000 04	tze  	5,ic		000536
000532  aa   000003 2360 07	ldq  	3,dl
000533  aa  6 00234 4021 00	mpy  	pr6|156		ne
000534  aa  6 00113 7561 00	stq  	pr6|75		mti.max_entries
000535  aa   000063 7100 04	tra  	51,ic		000620
						STATEMENT 1 ON LINE 105
	else do;

						STATEMENT 1 ON LINE 106
	     mti.max_entries = cv_dec_check_ (argument, code);

000536  aa  6 00242 2361 00	ldq  	pr6|162		al
000537  aa   526000 2760 03	orq  	175104,du
000540  aa  6 00252 7561 00	stq  	pr6|170
000541  aa  6 00240 3521 20	epp2 	pr6|160,*		argument
000542  aa  6 00274 2521 00	spri2	pr6|188
000543  aa  6 00235 3521 00	epp2 	pr6|157		code
000544  aa  6 00276 2521 00	spri2	pr6|190
000545  aa  6 00271 3521 00	epp2 	pr6|185
000546  aa  6 00300 2521 00	spri2	pr6|192
000547  aa  6 00252 3521 00	epp2 	pr6|170
000550  aa  6 00302 2521 00	spri2	pr6|194
000551  aa   777264 3520 04	epp2 	-332,ic		000035 = 404000000043
000552  aa  6 00304 2521 00	spri2	pr6|196
000553  aa  6 00306 2521 00	spri2	pr6|198
000554  aa  6 00272 6211 00	eax1 	pr6|186
000555  aa   014000 4310 07	fld  	6144,dl
000556  aa  6 00044 3701 20	epp4 	pr6|36,*
000557  la  4 00036 3521 20	epp2 	pr4|30,*		cv_dec_check_
000560  aa  0 00622 7001 00	tsx0 	pr0|402		call_ext_out_desc
000561  aa  6 00271 2361 00	ldq  	pr6|185
000562  aa  6 00113 7561 00	stq  	pr6|75		mti.max_entries
						STATEMENT 1 ON LINE 108
	     if code ^= 0 then do;

000563  aa  6 00235 2361 00	ldq  	pr6|157		code
000564  aa   000034 6000 04	tze  	28,ic		000620
						STATEMENT 1 ON LINE 109
		call com_err_ (error_table_$bad_conversion, ME, "^a", argument);

000565  aa  6 00242 2361 00	ldq  	pr6|162		al
000566  aa   526000 2760 03	orq  	175104,du
000567  aa  6 00252 7561 00	stq  	pr6|170
000570  aa   136141 2350 03	lda  	48225,du
000571  aa  6 00271 7551 00	sta  	pr6|185
000572  aa  6 00044 3701 20	epp4 	pr6|36,*
000573  la  4 00010 3521 20	epp2 	pr4|8,*		error_table_$bad_conversion
000574  aa  6 00312 2521 00	spri2	pr6|202
000575  aa   777203 3520 04	epp2 	-381,ic		000000 = 163141154166
000576  aa  6 00314 2521 00	spri2	pr6|204
000577  aa  6 00271 3521 00	epp2 	pr6|185
000600  aa  6 00316 2521 00	spri2	pr6|206
000601  aa  6 00240 3521 20	epp2 	pr6|160,*		argument
000602  aa  6 00320 2521 00	spri2	pr6|208
000603  aa   777232 3520 04	epp2 	-358,ic		000035 = 404000000043
000604  aa  6 00322 2521 00	spri2	pr6|210
000605  aa   777224 3520 04	epp2 	-364,ic		000031 = 526000000040
000606  aa  6 00324 2521 00	spri2	pr6|212
000607  aa   777216 3520 04	epp2 	-370,ic		000025 = 524000000002
000610  aa  6 00326 2521 00	spri2	pr6|214
000611  aa  6 00252 3521 00	epp2 	pr6|170
000612  aa  6 00330 2521 00	spri2	pr6|216
000613  aa  6 00310 6211 00	eax1 	pr6|200
000614  aa   020000 4310 07	fld  	8192,dl
000615  la  4 00026 3521 20	epp2 	pr4|22,*		com_err_
000616  aa  0 00622 7001 00	tsx0 	pr0|402		call_ext_out_desc
						STATEMENT 1 ON LINE 110
		return;

000617  aa  0 00631 7101 00	tra  	pr0|409		return
						STATEMENT 1 ON LINE 111
	     end;

						STATEMENT 1 ON LINE 112
	end;

						STATEMENT 1 ON LINE 114
	nename = unique_chars_ (""b) || "." || oename;

000620  aa  6 00252 3521 00	epp2 	pr6|170
000621  aa  6 00274 2521 00	spri2	pr6|188
000622  aa  6 00254 3521 00	epp2 	pr6|172
000623  aa  6 00276 2521 00	spri2	pr6|190
000624  aa   777174 3520 04	epp2 	-388,ic		000020 = 514000000000
000625  aa  6 00300 2521 00	spri2	pr6|192
000626  aa   777206 3520 04	epp2 	-378,ic		000034 = 526000000017
000627  aa  6 00302 2521 00	spri2	pr6|194
000630  aa  6 00272 6211 00	eax1 	pr6|186
000631  aa   010000 4310 07	fld  	4096,dl
000632  aa  6 00044 3701 20	epp4 	pr6|36,*
000633  la  4 00064 3521 20	epp2 	pr4|52,*		unique_chars_
000634  aa  0 00622 7001 00	tsx0 	pr0|402		call_ext_out_desc
000635  aa   000020 2360 07	ldq  	16,dl
000636  aa  0 00551 7001 00	tsx0 	pr0|361		alloc_cs
000637  aa  040 100 100 500	mlr  	(pr),(pr),fill(040)
000640  aa  6 00254 00 0017	desc9a	pr6|172,15
000641  aa  2 00000 00 0017	desc9a	pr2|0,15
000642  aa  040 100 100 404	mlr  	(ic),(pr),fill(040)
000643  aa   000767 00 0001	desc9a	503,1		001631 = 056000000000
000644  aa  2 00003 60 0001	desc9a	pr2|3(3),1
000645  aa   000060 2360 07	ldq  	48,dl
000646  aa  0 00606 7001 00	tsx0 	pr0|390		cat_realloc_cs
000647  aa  040 100 100 500	mlr  	(pr),(pr),fill(040)
000650  aa  6 00224 00 0040	desc9a	pr6|148,32	oename
000651  aa  2 00004 00 0040	desc9a	pr2|4,32
000652  aa  000 100 100 500	mlr  	(pr),(pr),fill(000)
000653  aa  2 00000 00 0040	desc9a	pr2|0,32
000654  aa  6 00214 00 0040	desc9a	pr6|140,32	nename
						STATEMENT 1 ON LINE 115
	call ms_table_mgr_$create (ndirname, nename, addr (mti), code);

000655  aa  0 01014 7001 00	tsx0 	pr0|524		shorten_stack
000656  aa  6 00100 3735 00	epp7 	pr6|64		mti
000657  aa  6 00364 6535 00	spri7	pr6|244
000660  aa  6 00142 3521 00	epp2 	pr6|98		ndirname
000661  aa  6 00312 2521 00	spri2	pr6|202
000662  aa  6 00214 3521 00	epp2 	pr6|140		nename
000663  aa  6 00314 2521 00	spri2	pr6|204
000664  aa  6 00364 3521 00	epp2 	pr6|244
000665  aa  6 00316 2521 00	spri2	pr6|206
000666  aa  6 00235 3521 00	epp2 	pr6|157		code
000667  aa  6 00320 2521 00	spri2	pr6|208
000670  aa   777136 3520 04	epp2 	-418,ic		000026 = 526000000250
000671  aa  6 00322 2521 00	spri2	pr6|210
000672  aa   777137 3520 04	epp2 	-417,ic		000031 = 526000000040
000673  aa  6 00324 2521 00	spri2	pr6|212
000674  aa   777127 3520 04	epp2 	-425,ic		000023 = 464000000000
000675  aa  6 00326 2521 00	spri2	pr6|214
000676  aa   777137 3520 04	epp2 	-417,ic		000035 = 404000000043
000677  aa  6 00330 2521 00	spri2	pr6|216
000700  aa  6 00310 6211 00	eax1 	pr6|200
000701  aa   020000 4310 07	fld  	8192,dl
000702  aa  6 00044 3701 20	epp4 	pr6|36,*
000703  la  4 00050 3521 20	epp2 	pr4|40,*		ms_table_mgr_$create
000704  aa  0 00622 7001 00	tsx0 	pr0|402		call_ext_out_desc
						STATEMENT 1 ON LINE 117
	if code ^= 0 then do;

000705  aa  6 00235 2361 00	ldq  	pr6|157		code
000706  aa   000026 6000 04	tze  	22,ic		000734
						STATEMENT 1 ON LINE 118
	     call com_err_ (code, ME, "Creating new MSTB.");

000707  aa  000 100 100 404	mlr  	(ic),(pr),fill(000)
000710  aa   777142 00 0024	desc9a	-414,20		000051 = 103162145141
000711  aa  6 00260 00 0024	desc9a	pr6|176,20
000712  aa  6 00235 3521 00	epp2 	pr6|157		code
000713  aa  6 00274 2521 00	spri2	pr6|188
000714  aa   777064 3520 04	epp2 	-460,ic		000000 = 163141154166
000715  aa  6 00276 2521 00	spri2	pr6|190
000716  aa  6 00260 3521 00	epp2 	pr6|176
000717  aa  6 00300 2521 00	spri2	pr6|192
000720  aa   777115 3520 04	epp2 	-435,ic		000035 = 404000000043
000721  aa  6 00302 2521 00	spri2	pr6|194
000722  aa   777107 3520 04	epp2 	-441,ic		000031 = 526000000040
000723  aa  6 00304 2521 00	spri2	pr6|196
000724  aa   777075 3520 04	epp2 	-451,ic		000021 = 524000000022
000725  aa  6 00306 2521 00	spri2	pr6|198
000726  aa  6 00272 6211 00	eax1 	pr6|186
000727  aa   014000 4310 07	fld  	6144,dl
000730  aa  6 00044 3701 20	epp4 	pr6|36,*
000731  la  4 00026 3521 20	epp2 	pr4|22,*		com_err_
000732  aa  0 00622 7001 00	tsx0 	pr0|402		call_ext_out_desc
						STATEMENT 1 ON LINE 119
	     return;

000733  aa  0 00631 7101 00	tra  	pr0|409		return
						STATEMENT 1 ON LINE 120
	end;

						STATEMENT 1 ON LINE 121
	call ms_table_mgr_$open (ndirname, nename, (mti.type), ntp, nhp, code);

000734  aa  000 100 100 500	mlr  	(pr),(pr),fill(000)
000735  aa  6 00101 00 0040	desc9a	pr6|65,32		mti.type
000736  aa  6 00260 00 0040	desc9a	pr6|176,32
000737  aa  6 00142 3521 00	epp2 	pr6|98		ndirname
000740  aa  6 00334 2521 00	spri2	pr6|220
000741  aa  6 00214 3521 00	epp2 	pr6|140		nename
000742  aa  6 00336 2521 00	spri2	pr6|222
000743  aa  6 00260 3521 00	epp2 	pr6|176
000744  aa  6 00340 2521 00	spri2	pr6|224
000745  aa  6 00120 3521 00	epp2 	pr6|80		ntp
000746  aa  6 00342 2521 00	spri2	pr6|226
000747  aa  6 00124 3521 00	epp2 	pr6|84		nhp
000750  aa  6 00344 2521 00	spri2	pr6|228
000751  aa  6 00235 3521 00	epp2 	pr6|157		code
000752  aa  6 00346 2521 00	spri2	pr6|230
000753  aa   777053 3520 04	epp2 	-469,ic		000026 = 526000000250
000754  aa  6 00350 2521 00	spri2	pr6|232
000755  aa   777054 3520 04	epp2 	-468,ic		000031 = 526000000040
000756  aa  6 00352 2521 00	spri2	pr6|234
000757  aa   777040 3520 04	epp2 	-480,ic		000017 = 524000000040
000760  aa  6 00354 2521 00	spri2	pr6|236
000761  aa   777042 3520 04	epp2 	-478,ic		000023 = 464000000000
000762  aa  6 00356 2521 00	spri2	pr6|238
000763  aa  6 00360 2521 00	spri2	pr6|240
000764  aa   777051 3520 04	epp2 	-471,ic		000035 = 404000000043
000765  aa  6 00362 2521 00	spri2	pr6|242
000766  aa  6 00332 6211 00	eax1 	pr6|218
000767  aa   030000 4310 07	fld  	12288,dl
000770  aa  6 00044 3701 20	epp4 	pr6|36,*
000771  la  4 00054 3521 20	epp2 	pr4|44,*		ms_table_mgr_$open
000772  aa  0 00622 7001 00	tsx0 	pr0|402		call_ext_out_desc
						STATEMENT 1 ON LINE 122
	if code ^= 0 then do;

000773  aa  6 00235 2361 00	ldq  	pr6|157		code
000774  aa   000031 6000 04	tze  	25,ic		001025
						STATEMENT 1 ON LINE 123
	     call com_err_ (code, ME, "Opening new MSTB.");

000775  aa   777047 2370 04	ldaq 	-473,ic		000044 = 117160145156 151156147040
000776  aa  6 00260 7571 00	staq 	pr6|176
000777  aa   777047 2370 04	ldaq 	-473,ic		000046 = 156145167040 115123124102
001000  aa  6 00262 7571 00	staq 	pr6|178
001001  aa   056000 2350 03	lda  	23552,du
001002  aa  6 00264 7551 00	sta  	pr6|180
001003  aa  6 00235 3521 00	epp2 	pr6|157		code
001004  aa  6 00274 2521 00	spri2	pr6|188
001005  aa   776773 3520 04	epp2 	-517,ic		000000 = 163141154166
001006  aa  6 00276 2521 00	spri2	pr6|190
001007  aa  6 00260 3521 00	epp2 	pr6|176
001010  aa  6 00300 2521 00	spri2	pr6|192
001011  aa   777024 3520 04	epp2 	-492,ic		000035 = 404000000043
001012  aa  6 00302 2521 00	spri2	pr6|194
001013  aa   777016 3520 04	epp2 	-498,ic		000031 = 526000000040
001014  aa  6 00304 2521 00	spri2	pr6|196
001015  aa   777001 3520 04	epp2 	-511,ic		000016 = 524000000021
001016  aa  6 00306 2521 00	spri2	pr6|198
001017  aa  6 00272 6211 00	eax1 	pr6|186
001020  aa   014000 4310 07	fld  	6144,dl
001021  aa  6 00044 3701 20	epp4 	pr6|36,*
001022  la  4 00026 3521 20	epp2 	pr4|22,*		com_err_
001023  aa  0 00622 7001 00	tsx0 	pr0|402		call_ext_out_desc
						STATEMENT 1 ON LINE 124
	     return;

001024  aa  0 00631 7101 00	tra  	pr0|409		return
						STATEMENT 1 ON LINE 125
	end;

						STATEMENT 1 ON LINE 127
	nhp -> copy_header = hp -> copy_header;

001025  aa  6 00111 2361 00	ldq  	pr6|73		mti.header_size
001026  aa   000002 7360 00	qls  	2
001027  aa  6 00124 3735 20	epp7 	pr6|84,*		nhp
001030  aa  6 00122 3715 20	epp5 	pr6|82,*		hp
001031  aa  000 140 100 540	mlr  	(pr,rl),(pr,rl),fill(000)
001032  aa  5 00000 00 0006	desc9a	pr5|0,ql		copy_header
001033  aa  7 00000 00 0006	desc9a	pr7|0,ql		copy_header
						STATEMENT 1 ON LINE 128
	do i = 1 by 1;

001034  aa   000001 2360 07	ldq  	1,dl
001035  aa  6 00236 7561 00	stq  	pr6|158		i
						STATEMENT 1 ON LINE 129
	     call ms_table_mgr_$abs_entry (tp, i, key, NO_WRITE, ep, (0), code);

001036  aa  6 00252 4501 00	stz  	pr6|170
001037  aa  6 00116 3521 00	epp2 	pr6|78		tp
001040  aa  6 00370 2521 00	spri2	pr6|248
001041  aa  6 00236 3521 00	epp2 	pr6|158		i
001042  aa  6 00372 2521 00	spri2	pr6|250
001043  aa  6 00132 3521 00	epp2 	pr6|90		key
001044  aa  6 00374 2521 00	spri2	pr6|252
001045  aa   776766 3520 04	epp2 	-522,ic		000033 = 000000000000
001046  aa  6 00376 2521 00	spri2	pr6|254
001047  aa  6 00126 3521 00	epp2 	pr6|86		ep
001050  aa  6 00400 2521 00	spri2	pr6|256
001051  aa  6 00252 3521 00	epp2 	pr6|170
001052  aa  6 00402 2521 00	spri2	pr6|258
001053  aa  6 00235 3521 00	epp2 	pr6|157		code
001054  aa  6 00404 2521 00	spri2	pr6|260
001055  aa   776746 3520 04	epp2 	-538,ic		000023 = 464000000000
001056  aa  6 00406 2521 00	spri2	pr6|262
001057  aa  6 00416 2521 00	spri2	pr6|270
001060  aa   776755 3520 04	epp2 	-531,ic		000035 = 404000000043
001061  aa  6 00410 2521 00	spri2	pr6|264
001062  aa  6 00420 2521 00	spri2	pr6|272
001063  aa  6 00422 2521 00	spri2	pr6|274
001064  aa   776745 3520 04	epp2 	-539,ic		000031 = 526000000040
001065  aa  6 00412 2521 00	spri2	pr6|266
001066  aa   776727 3520 04	epp2 	-553,ic		000015 = 514000000001
001067  aa  6 00414 2521 00	spri2	pr6|268
001070  aa  6 00366 6211 00	eax1 	pr6|246
001071  aa   034000 4310 07	fld  	14336,dl
001072  aa  6 00044 3701 20	epp4 	pr6|36,*
001073  la  4 00046 3521 20	epp2 	pr4|38,*		ms_table_mgr_$abs_entry
001074  aa  0 00622 7001 00	tsx0 	pr0|402		call_ext_out_desc
						STATEMENT 1 ON LINE 130
	     if code = 0 then do;

001075  aa  6 00235 2361 00	ldq  	pr6|157		code
001076  aa   000073 6010 04	tnz  	59,ic		001171
						STATEMENT 1 ON LINE 131
		call ms_table_mgr_$new_entry (ntp, key, nep, code);

001077  aa  6 00120 3521 00	epp2 	pr6|80		ntp
001100  aa  6 00312 2521 00	spri2	pr6|202
001101  aa  6 00132 3521 00	epp2 	pr6|90		key
001102  aa  6 00314 2521 00	spri2	pr6|204
001103  aa  6 00130 3521 00	epp2 	pr6|88		nep
001104  aa  6 00316 2521 00	spri2	pr6|206
001105  aa  6 00235 3521 00	epp2 	pr6|157		code
001106  aa  6 00320 2521 00	spri2	pr6|208
001107  aa   776714 3520 04	epp2 	-564,ic		000023 = 464000000000
001110  aa  6 00322 2521 00	spri2	pr6|210
001111  aa  6 00326 2521 00	spri2	pr6|214
001112  aa   776717 3520 04	epp2 	-561,ic		000031 = 526000000040
001113  aa  6 00324 2521 00	spri2	pr6|212
001114  aa   776721 3520 04	epp2 	-559,ic		000035 = 404000000043
001115  aa  6 00330 2521 00	spri2	pr6|216
001116  aa  6 00310 6211 00	eax1 	pr6|200
001117  aa   020000 4310 07	fld  	8192,dl
001120  aa  6 00044 3701 20	epp4 	pr6|36,*
001121  la  4 00056 3521 20	epp2 	pr4|46,*		ms_table_mgr_$new_entry
001122  aa  0 00622 7001 00	tsx0 	pr0|402		call_ext_out_desc
						STATEMENT 1 ON LINE 133
		if code = 0 then do;

001123  aa  6 00235 2361 00	ldq  	pr6|157		code
001124  aa   000005 6010 04	tnz  	5,ic		001131
						STATEMENT 1 ON LINE 134
		     call COPY_ENTRY ();

001125  aa   000460 6700 04	tsp4 	304,ic		001605
						STATEMENT 1 ON LINE 135
		     if code ^= 0 then goto ENTRY_ERROR;

001126  aa  6 00235 2361 00	ldq  	pr6|157		code
001127  aa   000006 6010 04	tnz  	6,ic		001135
						STATEMENT 1 ON LINE 136
		end;

001130  aa   000130 7100 04	tra  	88,ic		001260
						STATEMENT 1 ON LINE 137
		else if code = error_table_$id_already_exists then ;

001131  aa  6 00044 3701 20	epp4 	pr6|36,*
001132  la  4 00022 1161 20	cmpq 	pr4|18,*		error_table_$id_already_exists
001133  aa   000002 6010 04	tnz  	2,ic		001135
001134  aa   000124 7100 04	tra  	84,ic		001260
						STATEMENT 1 ON LINE 139
		else do;

						STATEMENT 1 ON LINE 140
ENTRY_ERROR:
		     call com_err_ (code, ME, "Processing entry ^d key ^a.", i, key);

001135  aa  000 100 100 404	mlr  	(ic),(pr),fill(000)
001136  aa   776757 00 0034	desc9a	-529,28		000114 = 120162157143
001137  aa  6 00260 00 0034	desc9a	pr6|176,28
001140  aa  6 00235 3521 00	epp2 	pr6|157		code
001141  aa  6 00334 2521 00	spri2	pr6|220
001142  aa   776636 3520 04	epp2 	-610,ic		000000 = 163141154166
001143  aa  6 00336 2521 00	spri2	pr6|222
001144  aa  6 00260 3521 00	epp2 	pr6|176
001145  aa  6 00340 2521 00	spri2	pr6|224
001146  aa  6 00236 3521 00	epp2 	pr6|158		i
001147  aa  6 00342 2521 00	spri2	pr6|226
001150  aa  6 00132 3521 00	epp2 	pr6|90		key
001151  aa  6 00344 2521 00	spri2	pr6|228
001152  aa   776663 3520 04	epp2 	-589,ic		000035 = 404000000043
001153  aa  6 00346 2521 00	spri2	pr6|230
001154  aa  6 00354 2521 00	spri2	pr6|236
001155  aa   776654 3520 04	epp2 	-596,ic		000031 = 526000000040
001156  aa  6 00350 2521 00	spri2	pr6|232
001157  aa  6 00356 2521 00	spri2	pr6|238
001160  aa   776634 3520 04	epp2 	-612,ic		000014 = 524000000033
001161  aa  6 00352 2521 00	spri2	pr6|234
001162  aa  6 00332 6211 00	eax1 	pr6|218
001163  aa   024000 4310 07	fld  	10240,dl
001164  aa  6 00044 3701 20	epp4 	pr6|36,*
001165  la  4 00026 3521 20	epp2 	pr4|22,*		com_err_
001166  aa  0 00622 7001 00	tsx0 	pr0|402		call_ext_out_desc
						STATEMENT 1 ON LINE 142
		     return;

001167  aa  0 00631 7101 00	tra  	pr0|409		return
						STATEMENT 1 ON LINE 143
		end;

						STATEMENT 1 ON LINE 144
	     end;

001170  aa   000070 7100 04	tra  	56,ic		001260
						STATEMENT 1 ON LINE 145
	     else if code = error_table_$bad_index then goto done_copying_entries;

001171  aa  6 00044 3701 20	epp4 	pr6|36,*
001172  la  4 00020 1161 20	cmpq 	pr4|16,*		error_table_$bad_index
001173  aa   000072 6000 04	tze  	58,ic		001265
						STATEMENT 1 ON LINE 146
	     else if code = error_table_$no_record then ;

001174  la  4 00016 1161 20	cmpq 	pr4|14,*		error_table_$no_record
001175  aa   000002 6010 04	tnz  	2,ic		001177
001176  aa   000062 7100 04	tra  	50,ic		001260
						STATEMENT 1 ON LINE 147
	     else if code = error_table_$checksum_failure
	     then call ioa_$ioa_switch (iox_$error_output, "^a: Checksum failure processing entry ^d.", ME, i);

001177  la  4 00012 1161 20	cmpq 	pr4|10,*		error_table_$checksum_failure
001200  aa   000031 6010 04	tnz  	25,ic		001231
001201  aa  000 100 100 404	mlr  	(ic),(pr),fill(000)
001202  aa   776733 00 0054	desc9a	-549,44		000134 = 136141072040
001203  aa  6 00272 00 0054	desc9a	pr6|186,44
001204  la  4 00024 3521 20	epp2 	pr4|20,*		iox_$error_output
001205  aa  6 00312 2521 00	spri2	pr6|202
001206  aa  6 00272 3521 00	epp2 	pr6|186
001207  aa  6 00314 2521 00	spri2	pr6|204
001210  aa   776570 3520 04	epp2 	-648,ic		000000 = 163141154166
001211  aa  6 00316 2521 00	spri2	pr6|206
001212  aa  6 00236 3521 00	epp2 	pr6|158		i
001213  aa  6 00320 2521 00	spri2	pr6|208
001214  aa   776607 3520 04	epp2 	-633,ic		000023 = 464000000000
001215  aa  6 00322 2521 00	spri2	pr6|210
001216  aa   776575 3520 04	epp2 	-643,ic		000013 = 524000000051
001217  aa  6 00324 2521 00	spri2	pr6|212
001220  aa   776611 3520 04	epp2 	-631,ic		000031 = 526000000040
001221  aa  6 00326 2521 00	spri2	pr6|214
001222  aa   776613 3520 04	epp2 	-629,ic		000035 = 404000000043
001223  aa  6 00330 2521 00	spri2	pr6|216
001224  aa  6 00310 6211 00	eax1 	pr6|200
001225  aa   020000 4310 07	fld  	8192,dl
001226  la  4 00044 3521 20	epp2 	pr4|36,*		ioa_$ioa_switch
001227  aa  0 00622 7001 00	tsx0 	pr0|402		call_ext_out_desc
001230  aa   000030 7100 04	tra  	24,ic		001260
						STATEMENT 1 ON LINE 149
	     else do;

						STATEMENT 1 ON LINE 150
		call com_err_ (code, ME, "Reading entry ^d.", i);

001231  aa  000 100 100 404	mlr  	(ic),(pr),fill(000)
001232  aa   776606 00 0024	desc9a	-634,20		000037 = 122145141144
001233  aa  6 00260 00 0024	desc9a	pr6|176,20
001234  aa  6 00235 3521 00	epp2 	pr6|157		code
001235  aa  6 00312 2521 00	spri2	pr6|202
001236  aa   776542 3520 04	epp2 	-670,ic		000000 = 163141154166
001237  aa  6 00314 2521 00	spri2	pr6|204
001240  aa  6 00260 3521 00	epp2 	pr6|176
001241  aa  6 00316 2521 00	spri2	pr6|206
001242  aa  6 00236 3521 00	epp2 	pr6|158		i
001243  aa  6 00320 2521 00	spri2	pr6|208
001244  aa   776571 3520 04	epp2 	-647,ic		000035 = 404000000043
001245  aa  6 00322 2521 00	spri2	pr6|210
001246  aa  6 00330 2521 00	spri2	pr6|216
001247  aa   776562 3520 04	epp2 	-654,ic		000031 = 526000000040
001250  aa  6 00324 2521 00	spri2	pr6|212
001251  aa   776545 3520 04	epp2 	-667,ic		000016 = 524000000021
001252  aa  6 00326 2521 00	spri2	pr6|214
001253  aa  6 00310 6211 00	eax1 	pr6|200
001254  aa   020000 4310 07	fld  	8192,dl
001255  la  4 00026 3521 20	epp2 	pr4|22,*		com_err_
001256  aa  0 00622 7001 00	tsx0 	pr0|402		call_ext_out_desc
						STATEMENT 1 ON LINE 151
		return;

001257  aa  0 00631 7101 00	tra  	pr0|409		return
						STATEMENT 1 ON LINE 152
	     end;

						STATEMENT 1 ON LINE 153
	     end;

001260  aa  6 00236 2351 00	lda  	pr6|158		i
001261  aa   000044 7330 00	lrs  	36
001262  aa   000001 0330 07	adl  	1,dl
001263  aa  6 00236 7561 00	stq  	pr6|158		i
001264  aa   777552 7100 04	tra  	-150,ic		001036
						STATEMENT 1 ON LINE 154
done_copying_entries:
	call ms_table_mgr_$close (ntp, (0));

001265  aa  6 00252 4501 00	stz  	pr6|170
001266  aa  6 00120 3521 00	epp2 	pr6|80		ntp
001267  aa  6 00262 2521 00	spri2	pr6|178
001270  aa  6 00252 3521 00	epp2 	pr6|170
001271  aa  6 00264 2521 00	spri2	pr6|180
001272  aa  6 00260 6211 00	eax1 	pr6|176
001273  aa   010000 4310 07	fld  	4096,dl
001274  aa  6 00044 3701 20	epp4 	pr6|36,*
001275  la  4 00052 3521 20	epp2 	pr4|42,*		ms_table_mgr_$close
001276  aa  0 00623 7001 00	tsx0 	pr0|403		call_ext_out
						STATEMENT 1 ON LINE 156
	call ms_table_mgr_$close (tp, (0));

001277  aa  6 00252 4501 00	stz  	pr6|170
001300  aa  6 00116 3521 00	epp2 	pr6|78		tp
001301  aa  6 00262 2521 00	spri2	pr6|178
001302  aa  6 00252 3521 00	epp2 	pr6|170
001303  aa  6 00264 2521 00	spri2	pr6|180
001304  aa  6 00260 6211 00	eax1 	pr6|176
001305  aa   010000 4310 07	fld  	4096,dl
001306  aa  6 00044 3701 20	epp4 	pr6|36,*
001307  la  4 00052 3521 20	epp2 	pr4|42,*		ms_table_mgr_$close
001310  aa  0 00623 7001 00	tsx0 	pr0|403		call_ext_out
						STATEMENT 1 ON LINE 157
	call copy_acl_ (ndirname, oename, ndirname, nename, ("0"b), code);

001311  aa   000000 2350 07	lda  	0,dl
001312  aa  6 00252 7551 00	sta  	pr6|170
001313  aa  6 00142 3521 00	epp2 	pr6|98		ndirname
001314  aa  6 00334 2521 00	spri2	pr6|220
001315  aa  6 00224 3521 00	epp2 	pr6|148		oename
001316  aa  6 00336 2521 00	spri2	pr6|222
001317  aa  6 00142 3521 00	epp2 	pr6|98		ndirname
001320  aa  6 00340 2521 00	spri2	pr6|224
001321  aa  6 00214 3521 00	epp2 	pr6|140		nename
001322  aa  6 00342 2521 00	spri2	pr6|226
001323  aa  6 00252 3521 00	epp2 	pr6|170
001324  aa  6 00344 2521 00	spri2	pr6|228
001325  aa  6 00235 3521 00	epp2 	pr6|157		code
001326  aa  6 00346 2521 00	spri2	pr6|230
001327  aa   776477 3520 04	epp2 	-705,ic		000026 = 526000000250
001330  aa  6 00350 2521 00	spri2	pr6|232
001331  aa  6 00354 2521 00	spri2	pr6|236
001332  aa   776477 3520 04	epp2 	-705,ic		000031 = 526000000040
001333  aa  6 00352 2521 00	spri2	pr6|234
001334  aa  6 00356 2521 00	spri2	pr6|238
001335  aa   776460 3520 04	epp2 	-720,ic		000015 = 514000000001
001336  aa  6 00360 2521 00	spri2	pr6|240
001337  aa   776476 3520 04	epp2 	-706,ic		000035 = 404000000043
001340  aa  6 00362 2521 00	spri2	pr6|242
001341  aa  6 00332 6211 00	eax1 	pr6|218
001342  aa   030000 4310 07	fld  	12288,dl
001343  aa  6 00044 3701 20	epp4 	pr6|36,*
001344  la  4 00030 3521 20	epp2 	pr4|24,*		copy_acl_
001345  aa  0 00622 7001 00	tsx0 	pr0|402		call_ext_out_desc
						STATEMENT 1 ON LINE 158
	if code ^= 0 then call com_err_ (code, ME, "Unable to copy MSTB ACL.");

001346  aa  6 00235 2361 00	ldq  	pr6|157		code
001347  aa   000030 6000 04	tze  	24,ic		001377
001350  aa   776520 2370 04	ldaq 	-688,ic		000070 = 125156141142 154145040164
001351  aa  6 00260 7571 00	staq 	pr6|176
001352  aa   776520 2370 04	ldaq 	-688,ic		000072 = 157040143157 160171040115
001353  aa  6 00262 7571 00	staq 	pr6|178
001354  aa   776520 2370 04	ldaq 	-688,ic		000074 = 123124102040 101103114056
001355  aa  6 00264 7571 00	staq 	pr6|180
001356  aa  6 00235 3521 00	epp2 	pr6|157		code
001357  aa  6 00274 2521 00	spri2	pr6|188
001360  aa   776420 3520 04	epp2 	-752,ic		000000 = 163141154166
001361  aa  6 00276 2521 00	spri2	pr6|190
001362  aa  6 00260 3521 00	epp2 	pr6|176
001363  aa  6 00300 2521 00	spri2	pr6|192
001364  aa   776451 3520 04	epp2 	-727,ic		000035 = 404000000043
001365  aa  6 00302 2521 00	spri2	pr6|194
001366  aa   776443 3520 04	epp2 	-733,ic		000031 = 526000000040
001367  aa  6 00304 2521 00	spri2	pr6|196
001370  aa   776422 3520 04	epp2 	-750,ic		000012 = 524000000030
001371  aa  6 00306 2521 00	spri2	pr6|198
001372  aa  6 00272 6211 00	eax1 	pr6|186
001373  aa   014000 4310 07	fld  	6144,dl
001374  aa  6 00044 3701 20	epp4 	pr6|36,*
001375  la  4 00026 3521 20	epp2 	pr4|22,*		com_err_
001376  aa  0 00622 7001 00	tsx0 	pr0|402		call_ext_out_desc
						STATEMENT 1 ON LINE 159
	call hcs_$chname_file (ndirname, oename, oename, rtrim (oename) || ".-." || unique_chars_ (""b), code);

001377  aa  000 000 165 500	tctr 	(pr)
001400  aa  6 00224 00 0040	desc9a	pr6|148,32	oename
001401  aa  0 76605 0001 00	arg  	pr0|-635		= 777777777777
001402  aa  6 00056 0001 00	arg  	pr6|46
001403  aa  6 00056 2361 00	ldq  	pr6|46
001404  aa  0 00242 3761 00	anq  	pr0|162		= 000777777777
001405  aa  6 00271 7561 00	stq  	pr6|185
001406  aa   000040 2360 07	ldq  	32,dl
001407  aa  6 00271 1761 00	sbq  	pr6|185
001410  aa  6 00271 7561 00	stq  	pr6|185
001411  aa   000003 0760 07	adq  	3,dl
001412  aa  6 00253 7561 00	stq  	pr6|171
001413  aa   000017 0760 07	adq  	15,dl
001414  aa  6 00424 7561 00	stq  	pr6|276
001415  aa   524000 2760 03	orq  	174080,du
001416  aa  6 00252 7561 00	stq  	pr6|170
001417  aa  6 00425 3521 00	epp2 	pr6|277
001420  aa  6 00274 2521 00	spri2	pr6|188
001421  aa  6 00254 3521 00	epp2 	pr6|172
001422  aa  6 00276 2521 00	spri2	pr6|190
001423  aa   776375 3520 04	epp2 	-771,ic		000020 = 514000000000
001424  aa  6 00300 2521 00	spri2	pr6|192
001425  aa   776407 3520 04	epp2 	-761,ic		000034 = 526000000017
001426  aa  6 00302 2521 00	spri2	pr6|194
001427  aa  6 00272 6211 00	eax1 	pr6|186
001430  aa   010000 4310 07	fld  	4096,dl
001431  aa  6 00044 3701 20	epp4 	pr6|36,*
001432  la  4 00064 3521 20	epp2 	pr4|52,*		unique_chars_
001433  aa  0 00622 7001 00	tsx0 	pr0|402		call_ext_out_desc
001434  aa  6 00253 2361 00	ldq  	pr6|171
001435  aa  0 00551 7001 00	tsx0 	pr0|361		alloc_cs
001436  aa  6 00271 2351 00	lda  	pr6|185
001437  aa  040 140 100 540	mlr  	(pr,rl),(pr,rl),fill(040)
001440  aa  6 00224 00 0005	desc9a	pr6|148,al	oename
001441  aa  2 00000 00 0005	desc9a	pr2|0,al
001442  aa  040 105 100 404	mlr  	(ic),(pr,al),fill(040)
001443  aa   776347 00 0003	desc9a	-793,3		000011 = 056055056000
001444  aa  2 00000 00 0003	desc9a	pr2|0,3
001445  aa  6 00424 2361 00	ldq  	pr6|276
001446  aa  0 00606 7001 00	tsx0 	pr0|390		cat_realloc_cs
001447  aa  6 00253 2351 00	lda  	pr6|171
001450  aa  040 105 100 500	mlr  	(pr),(pr,al),fill(040)
001451  aa  6 00254 00 0017	desc9a	pr6|172,15
001452  aa  2 00000 00 0017	desc9a	pr2|0,15
001453  aa  6 00342 2521 00	spri2	pr6|226
001454  aa  6 00142 3521 00	epp2 	pr6|98		ndirname
001455  aa  6 00334 2521 00	spri2	pr6|220
001456  aa  6 00224 3521 00	epp2 	pr6|148		oename
001457  aa  6 00336 2521 00	spri2	pr6|222
001460  aa  6 00340 2521 00	spri2	pr6|224
001461  aa  6 00235 3521 00	epp2 	pr6|157		code
001462  aa  6 00344 2521 00	spri2	pr6|228
001463  aa   776343 3520 04	epp2 	-797,ic		000026 = 526000000250
001464  aa  6 00346 2521 00	spri2	pr6|230
001465  aa   776344 3520 04	epp2 	-796,ic		000031 = 526000000040
001466  aa  6 00350 2521 00	spri2	pr6|232
001467  aa  6 00352 2521 00	spri2	pr6|234
001470  aa  6 00252 3521 00	epp2 	pr6|170
001471  aa  6 00354 2521 00	spri2	pr6|236
001472  aa   776343 3520 04	epp2 	-797,ic		000035 = 404000000043
001473  aa  6 00356 2521 00	spri2	pr6|238
001474  aa  6 00332 6211 00	eax1 	pr6|218
001475  aa   024000 4310 07	fld  	10240,dl
001476  aa  6 00044 3701 20	epp4 	pr6|36,*
001477  la  4 00042 3521 20	epp2 	pr4|34,*		hcs_$chname_file
001500  aa  0 00622 7001 00	tsx0 	pr0|402		call_ext_out_desc
						STATEMENT 1 ON LINE 161
	if code ^= 0 then call com_err_ (code, ME, "Unable to rename old MSTB.");

001501  aa  0 01014 7001 00	tsx0 	pr0|524		shorten_stack
001502  aa  6 00235 2361 00	ldq  	pr6|157		code
001503  aa   000025 6000 04	tze  	21,ic		001530
001504  aa  000 100 100 404	mlr  	(ic),(pr),fill(000)
001505  aa   776401 00 0034	desc9a	-767,28		000105 = 125156141142
001506  aa  6 00260 00 0034	desc9a	pr6|176,28
001507  aa  6 00235 3521 00	epp2 	pr6|157		code
001510  aa  6 00274 2521 00	spri2	pr6|188
001511  aa   776267 3520 04	epp2 	-841,ic		000000 = 163141154166
001512  aa  6 00276 2521 00	spri2	pr6|190
001513  aa  6 00260 3521 00	epp2 	pr6|176
001514  aa  6 00300 2521 00	spri2	pr6|192
001515  aa   776320 3520 04	epp2 	-816,ic		000035 = 404000000043
001516  aa  6 00302 2521 00	spri2	pr6|194
001517  aa   776312 3520 04	epp2 	-822,ic		000031 = 526000000040
001520  aa  6 00304 2521 00	spri2	pr6|196
001521  aa   776267 3520 04	epp2 	-841,ic		000010 = 524000000032
001522  aa  6 00306 2521 00	spri2	pr6|198
001523  aa  6 00272 6211 00	eax1 	pr6|186
001524  aa   014000 4310 07	fld  	6144,dl
001525  aa  6 00044 3701 20	epp4 	pr6|36,*
001526  la  4 00026 3521 20	epp2 	pr4|22,*		com_err_
001527  aa  0 00622 7001 00	tsx0 	pr0|402		call_ext_out_desc
						STATEMENT 1 ON LINE 162
	call hcs_$chname_file (ndirname, nename, nename, oename, code);

001530  aa  6 00142 3521 00	epp2 	pr6|98		ndirname
001531  aa  6 00334 2521 00	spri2	pr6|220
001532  aa  6 00214 3521 00	epp2 	pr6|140		nename
001533  aa  6 00336 2521 00	spri2	pr6|222
001534  aa  6 00340 2521 00	spri2	pr6|224
001535  aa  6 00224 3521 00	epp2 	pr6|148		oename
001536  aa  6 00342 2521 00	spri2	pr6|226
001537  aa  6 00235 3521 00	epp2 	pr6|157		code
001540  aa  6 00344 2521 00	spri2	pr6|228
001541  aa   776265 3520 04	epp2 	-843,ic		000026 = 526000000250
001542  aa  6 00346 2521 00	spri2	pr6|230
001543  aa   776266 3520 04	epp2 	-842,ic		000031 = 526000000040
001544  aa  6 00350 2521 00	spri2	pr6|232
001545  aa  6 00352 2521 00	spri2	pr6|234
001546  aa  6 00354 2521 00	spri2	pr6|236
001547  aa   776266 3520 04	epp2 	-842,ic		000035 = 404000000043
001550  aa  6 00356 2521 00	spri2	pr6|238
001551  aa  6 00332 6211 00	eax1 	pr6|218
001552  aa   024000 4310 07	fld  	10240,dl
001553  aa  6 00044 3701 20	epp4 	pr6|36,*
001554  la  4 00042 3521 20	epp2 	pr4|34,*		hcs_$chname_file
001555  aa  0 00622 7001 00	tsx0 	pr0|402		call_ext_out_desc
						STATEMENT 1 ON LINE 164
	if code ^= 0 then call com_err_ (code, ME, "Unable to rename new MSTB.");

001556  aa  6 00235 2361 00	ldq  	pr6|157		code
001557  aa   000025 6000 04	tze  	21,ic		001604
001560  aa  000 100 100 404	mlr  	(ic),(pr),fill(000)
001561  aa   776316 00 0034	desc9a	-818,28		000076 = 125156141142
001562  aa  6 00260 00 0034	desc9a	pr6|176,28
001563  aa  6 00235 3521 00	epp2 	pr6|157		code
001564  aa  6 00274 2521 00	spri2	pr6|188
001565  aa   776213 3520 04	epp2 	-885,ic		000000 = 163141154166
001566  aa  6 00276 2521 00	spri2	pr6|190
001567  aa  6 00260 3521 00	epp2 	pr6|176
001570  aa  6 00300 2521 00	spri2	pr6|192
001571  aa   776244 3520 04	epp2 	-860,ic		000035 = 404000000043
001572  aa  6 00302 2521 00	spri2	pr6|194
001573  aa   776236 3520 04	epp2 	-866,ic		000031 = 526000000040
001574  aa  6 00304 2521 00	spri2	pr6|196
001575  aa   776213 3520 04	epp2 	-885,ic		000010 = 524000000032
001576  aa  6 00306 2521 00	spri2	pr6|198
001577  aa  6 00272 6211 00	eax1 	pr6|186
001600  aa   014000 4310 07	fld  	6144,dl
001601  aa  6 00044 3701 20	epp4 	pr6|36,*
001602  la  4 00026 3521 20	epp2 	pr4|22,*		com_err_
001603  aa  0 00622 7001 00	tsx0 	pr0|402		call_ext_out_desc
						STATEMENT 1 ON LINE 166
	return;

001604  aa  0 00631 7101 00	tra  	pr0|409		return
						STATEMENT 1 ON LINE 179
     end salvage_mstb;

BEGIN PROCEDURE COPY_ENTRY
ENTRY TO COPY_ENTRY                                         STATEMENT 1 ON LINE 168
COPY_ENTRY:
     procedure ();

001605  aa  6 00244 6501 00	spri4	pr6|164
						STATEMENT 1 ON LINE 174
	nep -> copy_entry = ep -> copy_entry;

001606  aa  6 00112 2361 00	ldq  	pr6|74		mti.entry_size
001607  aa   000002 7360 00	qls  	2
001610  aa  6 00130 3735 20	epp7 	pr6|88,*		nep
001611  aa  6 00126 3715 20	epp5 	pr6|86,*		ep
001612  aa  000 140 100 540	mlr  	(pr,rl),(pr,rl),fill(000)
001613  aa  5 00000 00 0006	desc9a	pr5|0,ql		copy_entry
001614  aa  7 00000 00 0006	desc9a	pr7|0,ql		copy_entry
						STATEMENT 1 ON LINE 175
	call ms_table_mgr_$update_entry (ntp, nep, code);

001615  aa  6 00120 3521 00	epp2 	pr6|80		ntp
001616  aa  6 00430 2521 00	spri2	pr6|280
001617  aa  6 00130 3521 00	epp2 	pr6|88		nep
001620  aa  6 00432 2521 00	spri2	pr6|282
001621  aa  6 00235 3521 00	epp2 	pr6|157		code
001622  aa  6 00434 2521 00	spri2	pr6|284
001623  aa  6 00426 6211 00	eax1 	pr6|278
001624  aa   014000 4310 07	fld  	6144,dl
001625  aa  6 00044 3701 20	epp4 	pr6|36,*
001626  la  4 00062 3521 20	epp2 	pr4|50,*		ms_table_mgr_$update_entry
001627  aa  0 00623 7001 00	tsx0 	pr0|403		call_ext_out
						STATEMENT 1 ON LINE 176
	return;

001630  aa  6 00244 6101 00	rtcd 	pr6|164
						STATEMENT 1 ON LINE 177
     end COPY_ENTRY;

  END PROCEDURE COPY_ENTRY
  END PROCEDURE salvage_mstb


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
