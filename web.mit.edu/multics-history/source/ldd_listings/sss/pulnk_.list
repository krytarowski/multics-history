	COMPILATION LISTING OF SEGMENT pulnk_
	Compiled by: Multics PL/I Compiler, Release 31a, of October 12, 1988
	Compiled at: Honeywell Bull, Phoenix AZ, SysM
	Compiled on: 10/17/88  0944.0 mst Mon
	    Options: optimize map

        1 /****^  ***********************************************************
        2*        *                                                         *
        3*        * Copyright, (C) Honeywell Bull Inc., 1988                *
        4*        *                                                         *
        5*        * Copyright, (C) Honeywell Information Systems Inc., 1982 *
        6*        *                                                         *
        7*        * Copyright (c) 1972 by Massachusetts Institute of        *
        8*        * Technology and Honeywell Information Systems, Inc.      *
        9*        *                                                         *
       10*        *********************************************************** */
       11 
       12 
       13 pulnk_:
       14 	procedure( pc, word, relwrd ) ;
       15 
       16 /* N. Adleman on June 24, 1970 at 1011  */
       17 /* Modified for separate static on 06/15/75 by Eugene E Wiatrowski */
       18   
       19 	/* makes calls to stack the linkage words and stack the
       20*	  associated relocation bits in the scratch segment */
       21 
       22 declare (pc, word, relwrd) fixed bin (26);
       23 declare (lbits, rbits, itemp, nl, nr, i, ik, ival ) fixed bin ( 17 ) aligned ;
       24 
       25 declare eb_data_$stat_len ext fixed bin(26);
       26 declare eb_data_$separate_static ext bit(1) aligned;
       27 
  1     1 /* Begin include file objnfo.incl.pl1.
  1     2*   Parameters saved for object map.
  1     3*   Last modified on 05/12/72 at 01:10:27 by R F Mabee. */
  1     4 
  1     5  
  1     6 /****^  HISTORY COMMENTS:
  1     7*  1) change(86-10-01,JRGray), approve(86-10-01,MCR7507),
  1     8*     audit(86-10-27,RWaters), install(86-11-12,MR12.0-1202):
  1     9*     Modified to add definition count used to join blocks to the definition
  1    10*     section.
  1    11*                                                   END HISTORY COMMENTS */
  1    12 
  1    13 declare	1 eb_data_$objnfo external static aligned,
  1    14 	  2 (itxpc, ilkpc, istpc, idfpc, itxcnt, ilkcnt, istcnt, idfcnt) fixed bin (26) aligned,
  1    15 	  2 (new_text_offset, new_definition_offset, new_link_offset, new_static_offset, new_symbol_offset) fixed bin (26) aligned,
  1    16 	  2 (new_text_length, new_definition_length, new_link_length, new_static_length, new_symbol_length) fixed bin (26) aligned;
  1    17 
  1    18 /* End of include file objnfo.incl.pl1. */
       28 
       29 
       30 	/* EXTERNAL ENTRIES */
       31 declare	object_$objlk ext entry (fixed bin (26), fixed bin (26)),
       32 	object_$wrblk ext entry (fixed bin (26), fixed bin (26)),
       33 	object_$gtblk ext entry (fixed bin, fixed bin, fixed bin) ;
       34 
       35 /* 	*/
       36 
       37 	call object_$objlk( pc, word ) ;	/* write the linkage into the scratch segment */
       38 
       39 	call object_$wrblk( pc, relwrd ) ;	/* insert the relocation bits into the proper place in the scratch segment */ 
       40 
       41 
       42 	return ;
       43 
       44 
       45 
       46 
       47 lnkcnt:	entry( ival ) ;	/* entry to count the number of relocation bits for the linkage portion */
       48 
       49 	ival = 0 ;
       50 
       51 	if eb_data_$separate_static
       52 	   then do;
       53 	        itemp = (eb_data_$stat_len + ilkpc) - 1;
       54 	        ik = eb_data_$stat_len;
       55 	        end;
       56 	   else do;
       57 	        itemp = ilkpc - 1;
       58 	        ik = 0;
       59 	        end;
       60 
       61 label_1000:
       62 	do i = ik to itemp ;
       63 
       64 		call object_$gtblk( i, lbits, rbits ) ;
       65 
       66 		nl = 1 ;
       67 
       68 		nr = 1 ;
       69 
       70 		if lbits ^= 0 then nl = 5 ;
       71 
       72 		if rbits ^= 0 then nr = 5 ;
       73 
       74 		ival = nl + nr + ival ;
       75 
       76 end label_1000 ;
       77 
       78 	ilkcnt = ival ;
       79 
       80 end pulnk_ ;
	SOURCE FILES USED IN THIS COMPILATION.

LINE      NUMBER  DATE MODIFIED     NAME			PATHNAME
             0    10/17/88  0938.3  pulnk_.pl1                        >spec>install>1170>pulnk_.pl1
28           1    11/12/86  1103.0  objnfo.incl.pl1                   >ldd>include>objnfo.incl.pl1
	NAMES DECLARED IN THIS COMPILATION.

IDENTIFIER	     OFFSET    LOC STORAGE CLASS   DATA TYPE		ATTRIBUTES AND REFERENCES
								(* indicates a set context)

NAMES DECLARED BY DECLARE STATEMENT.
eb_data_$objnfo                 000014 external static structure                level 1 dcl 1-13
eb_data_$separate_static        000012 external static bit(1)                   dcl 26 ref 51
eb_data_$stat_len               000010 external static fixed bin(26,0)          dcl 25 ref 53 54
i                               000105 automatic       fixed bin(17,0)          dcl 23 set ref 61* 64*
ik                              000106 automatic       fixed bin(17,0)          dcl 23 set ref 54* 58* 61
ilkcnt                    5     000014 external static fixed bin(26,0)          level 2 dcl 1-13 set ref 78*
ilkpc                     1     000014 external static fixed bin(26,0)          level 2 dcl 1-13 ref 53 57
itemp                           000102 automatic       fixed bin(17,0)          dcl 23 set ref 53* 57* 61
ival                                   parameter       fixed bin(17,0)          dcl 23 set ref 47 49* 74* 74 78
lbits                           000100 automatic       fixed bin(17,0)          dcl 23 set ref 64* 70
nl                              000103 automatic       fixed bin(17,0)          dcl 23 set ref 66* 70* 74
nr                              000104 automatic       fixed bin(17,0)          dcl 23 set ref 68* 72* 74
object_$gtblk                   000022 constant        entry                    external dcl 31 ref 64
object_$objlk                   000016 constant        entry                    external dcl 31 ref 37
object_$wrblk                   000020 constant        entry                    external dcl 31 ref 39
pc                                     parameter       fixed bin(26,0)          dcl 22 set ref 13 37* 39*
rbits                           000101 automatic       fixed bin(17,0)          dcl 23 set ref 64* 72
relwrd                                 parameter       fixed bin(26,0)          dcl 22 set ref 13 39*
word                                   parameter       fixed bin(26,0)          dcl 22 set ref 13 37*

NAMES DECLARED BY EXPLICIT CONTEXT.
label_1000                      000071 constant        label                    dcl 61
lnkcnt                          000042 constant        entry                    external dcl 47
pulnk_                          000006 constant        entry                    external dcl 13

THERE WERE NO NAMES DECLARED BY CONTEXT OR IMPLICATION.

STORAGE REQUIREMENTS FOR THIS PROGRAM.

	Object	Text	Link	Symbol	Defs	Static
Start          0       0       242         266     143         252
Length       452     143        24         147      76           0

BLOCK NAME	         STACK SIZE     TYPE		WHY NONQUICK/WHO SHARES STACK FRAME
pulnk_                               86 external procedure  is an external procedure.  

STORAGE FOR AUTOMATIC VARIABLES.

STACK FRAME                 LOC IDENTIFIER                  BLOCK NAME
pulnk_                   000100 lbits                       pulnk_
                         000101 rbits                       pulnk_
                         000102 itemp                       pulnk_
                         000103 nl                          pulnk_
                         000104 nr                          pulnk_
                         000105 i                           pulnk_
                         000106 ik                          pulnk_

THE FOLLOWING EXTERNAL OPERATORS ARE USED BY THIS PROGRAM.
call_ext_out        return_mac          ext_entry

THE FOLLOWING EXTERNAL ENTRIES ARE CALLED BY THIS PROGRAM.
object_$gtblk                 object_$objlk                 object_$wrblk

THE FOLLOWING EXTERNAL VARIABLES ARE USED BY THIS PROGRAM.
eb_data_$objnfo               eb_data_$separate_static      eb_data_$stat_len




   LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC   
     13 000002        37 000013        39 000024        42 000036        47 000037        49 000047        51 000051
     53 000054        54 000061        55 000063        57 000064        58 000070        61 000071        64 000101
     66 000114        68 000116        70 000117        72 000123        74 000127        76 000133        78 000135
     80 000142


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
