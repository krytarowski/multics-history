	COMPILATION LISTING OF SEGMENT vu_cv_string_to_pva
	Compiled by: Multics PL/I Compiler, Release 28d, of October 4, 1983
	Compiled at: Honeywell Multics Op. - System M
	Compiled on: 02/16/84  1305.5 mst Thu
	    Options: optimize map

        1 /* ***********************************************************
        2*   *                                                         *
        3*   * Copyright, (C) Honeywell Information Systems Inc., 1983 *
        4*   *                                                         *
        5*   *********************************************************** */
        6 /* format: style2,ind3 */
        7 vu_cv_string_to_pva:
        8    proc (p_pva_string_ptr, p_pva_string_length, p_area_ptr, p_print_vector_array_ptr, p_code);
        9 
       10 /* DESCRIPTION:
       11*
       12*         This    entry    converts   a   pva_string   representation   of   a
       13*     print_vector_array back into a print_vector_array.
       14**/
       15 
       16 /* HISTORY:
       17*
       18*Written by Lindsey L. Spratt, 07/24/83.
       19*Modified:
       20**/
       21 
       22 /* START OF DECLARATIONS */
       23 /* Parameter */
       24 
       25       dcl	    p_pva_string_ptr       ptr;		/*is a pointer to a pva_string.*/
       26       dcl	    p_pva_string_length    fixed bin (35);	/*is the length of the pva_string
       27*                                             in bytes.*/
       28       dcl	    p_area_ptr	       ptr;		/*is a pointer to a PL1 area in
       29*                                             which the converted
       30*                                             print_vector_array is to be
       31*                                             placed.*/
       32       dcl	    p_print_vector_array_ptr
       33 			       ptr;		/*is a pointer to a
       34*                                             print_vector_array which is the
       35*                                             converted version of the
       36*                                             pva_string.*/
       37       dcl	    p_code	       fixed bin (35);	/*is a standard system error
       38*                                             code.*/
       39 
       40 /* Automatic */
       41 
       42       dcl	    (dim_idx, vector_idx)  fixed bin (17) init (0);
       43       dcl	    current_pva_string_word_offset
       44 			       fixed bin (35) init (0);
       45 
       46 /* Based */
       47 /* Builtin */
       48 
       49       dcl	    (addwordno, currentsize, length, max, null)
       50 			       builtin;
       51 
       52 /* Constant */
       53 
       54       dcl	    (
       55 	    DEFAULT_SLOT_INCREASE_FACTOR
       56 			       init (0) fixed bin (35),
       57 	    DEFAULT_VECTOR_SLOT_IDX
       58 			       init (-1) fixed bin (35),
       59 	    DONT_FREE_OLD_PVA      init ("0"b) bit (1) aligned,
       60 	    myname	       init ("vu_cv_string_to_pva") char (32) varying
       61 	    )		       internal static options (constant);
       62 
       63 /* Entry */
       64 
       65       dcl	    sub_err_	       entry () options (variable);
       66 
       67 /* External */
       68 
       69       dcl	    error_table_$unimplemented_version
       70 			       fixed bin (35) ext;
       71 
       72 /* END OF DECLARATIONS */
       73 
       74       pva_string_ptr = p_pva_string_ptr;
       75       call CHECK_VERSION (pva_string.version, PVA_STRING_VERSION_1, "pva_string");
       76 
       77       call
       78          vector_util_$init_print_vector_array (p_area_ptr, bin (pva_string.number_of_vectors, 35, 0),
       79          bin (pva_string.number_of_dimensions, 35, 0), bin (pva_string.maximum_name_length, 35, 0),
       80          print_vector_array_ptr, p_code);
       81       if p_code ^= 0
       82       then return;
       83 
       84       call CHECK_VERSION_FB (print_vector_array.version, PRINT_VECTOR_ARRAY_VERSION_2, "print_vector_array");
       85 
       86       print_vector_array.number_of_vectors = 0;		/* This value is incremented by $append_general_print_vector */
       87 
       88       do dim_idx = 1 to pva_string.number_of_dimensions;
       89          print_vector_array.dimension_table (dim_idx).name = pva_string.dimension_table (dim_idx).name;
       90          print_vector_array.dimension_table (dim_idx).maximum_value_length = 0;
       91       end;
       92 
       93       current_pva_string_word_offset = currentsize (pva_string);
       94 
       95       do vector_idx = 1 to pva_string.number_of_vectors;
       96 
       97          pv_string_ptr = addwordno (pva_string_ptr, current_pva_string_word_offset);
       98 
       99          call
      100 	  vector_util_$append_general_print_vector (p_area_ptr, DEFAULT_SLOT_INCREASE_FACTOR, DONT_FREE_OLD_PVA,
      101 	  DEFAULT_VECTOR_SLOT_IDX, bin (pv_string.number_of_dimensions, 35, 0),
      102 	  bin (pv_string.maximum_value_length, 35, 0), print_vector_array_ptr, p_code);
      103          if p_code ^= 0
      104          then call ERROR_RETURN ();
      105 
      106          print_vector_ptr = print_vector_array.vector_slot (print_vector_array.number_of_vectors);
      107 
      108          do dim_idx = 1 to pv_string.number_of_dimensions;
      109 	  print_vector.dimension (dim_idx).identifier = pv_string.dimension (dim_idx).identifier;
      110 	  print_vector.dimension (dim_idx).value = pv_string.dimension (dim_idx).value;
      111 	  print_vector_array.dimension_table (print_vector.dimension (dim_idx).identifier).maximum_value_length =
      112 	     max (print_vector_array.dimension_table (print_vector.dimension (dim_idx).identifier).maximum_value_length,
      113 	     length (print_vector.dimension (dim_idx).value));
      114          end;
      115 
      116          current_pva_string_word_offset = current_pva_string_word_offset + currentsize (pv_string);
      117 
      118       end;
      119 
      120       p_print_vector_array_ptr = print_vector_array_ptr;
      121 
      122 MAIN_RETURN:
      123       return;
      124 
      125 CHECK_VERSION:
      126    proc (p_received_version, p_expected_version, p_structure_name);
      127       dcl	    p_received_version     char (*);
      128       dcl	    p_expected_version     char (*);
      129       dcl	    p_structure_name       char (*);
      130 
      131       if p_received_version ^= p_expected_version
      132       then call
      133 	    sub_err_ (error_table_$unimplemented_version, myname, ACTION_CANT_RESTART, null, 0,
      134 	    "^/Expected version ^a of the ^a structure.
      135 Received version ^d instead.", p_expected_version, p_structure_name, p_received_version);
      136 
      137    end CHECK_VERSION;
      138 
      139 CHECK_VERSION_FB:
      140    proc (p_received_version, p_expected_version, p_structure_name);
      141       dcl	    p_received_version     fixed bin (35);
      142       dcl	    p_expected_version     fixed bin (35);
      143       dcl	    p_structure_name       char (*);
      144 
      145       if p_received_version ^= p_expected_version
      146       then call
      147 	    sub_err_ (error_table_$unimplemented_version, myname, ACTION_CANT_RESTART, null, 0,
      148 	    "^/Expected version ^a of the ^a structure.
      149 Received version ^d instead.", p_expected_version, p_structure_name, p_received_version);
      150 
      151    end CHECK_VERSION_FB;
      152 
      153 ERROR_RETURN:
      154    proc;
      155       goto MAIN_RETURN;
      156    end ERROR_RETURN;
      157 
  1     1 /* BEGIN INCLUDE FILE sub_err_flags.incl.pl1 BIM 11/81 */
  1     2 /* format: style3 */
  1     3 
  1     4 /* These constants are to be used for the flags argument of sub_err_ */
  1     5 /* They are just "string (condition_info_header.action_flags)" */
  1     6 
  1     7 declare	(
  1     8 	ACTION_CAN_RESTART	init (""b),
  1     9 	ACTION_CANT_RESTART init ("1"b),
  1    10 	ACTION_DEFAULT_RESTART
  1    11 			init ("01"b),
  1    12 	ACTION_QUIET_RESTART
  1    13 			init ("001"b),
  1    14 	ACTION_SUPPORT_SIGNAL
  1    15 			init ("0001"b)
  1    16 	)		bit (36) aligned internal static options (constant);
  1    17 
  1    18 /* End include file */
      158 
      159 
  2     1 /* ***********************************************************
  2     2*   *                                                         *
  2     3*   * Copyright, (C) Honeywell Information Systems Inc., 1983 *
  2     4*   *                                                         *
  2     5*   *********************************************************** */
  2     6 /* BEGIN INCLUDE FILE  -  vu_print_vector_array.incl.pl1 */
  2     7 /* Written by Matthew C. Pierret, 01/21/82
  2     8*Modified:
  2     9**/
  2    10 
  2    11 /* format: style2,ind3 */
  2    12      dcl	   1 print_vector_array   based (print_vector_array_ptr),
  2    13 	     2 version	      fixed bin (35),
  2    14 	     2 number_of_dimensions
  2    15 			      fixed bin (17),
  2    16 	     2 maximum_dimension_name_length
  2    17 			      fixed bin (17),
  2    18 	     2 number_of_vectors  fixed bin (17),
  2    19 	     2 number_of_vector_slots
  2    20 			      fixed bin (17),
  2    21 	     2 dimension_table    (pva_number_of_dimensions refer (print_vector_array.number_of_dimensions)),
  2    22 	       3 name	      char (pva_maximum_dimension_name_length
  2    23 			      refer (print_vector_array.maximum_dimension_name_length)) varying,
  2    24 	       3 descriptor_ptr   ptr,
  2    25 	       3 cv_to_print      entry (ptr, fixed bin (17), fixed bin (17), ptr, ptr, fixed bin (35)),
  2    26 	       3 cv_to_typed      entry (ptr, fixed bin (17), fixed bin (17), ptr, ptr, fixed bin (35)),
  2    27 	       3 maximum_value_length
  2    28 			      fixed bin (17),
  2    29 	     2 vector_slot	      (pva_number_of_vector_slots refer (print_vector_array.number_of_vector_slots)) ptr;
  2    30 
  2    31      dcl	   1 print_vector	      based (print_vector_ptr),
  2    32 	     2 number_of_dimensions
  2    33 			      fixed bin (17),
  2    34 	     2 maximum_value_length
  2    35 			      fixed bin (35),
  2    36 	     2 dimension	      (pv_number_of_dimensions refer (print_vector.number_of_dimensions)),
  2    37 	       3 identifier	      fixed bin (17),
  2    38 	       3 value	      char (pv_maximum_value_length refer (print_vector.maximum_value_length)) varying;
  2    39 
  2    40      dcl	   pva_number_of_dimensions
  2    41 			      fixed bin;
  2    42      dcl	   pva_number_of_vector_slots
  2    43 			      fixed bin;
  2    44      dcl	   pva_maximum_dimension_name_length
  2    45 			      fixed bin;
  2    46      dcl	   pv_number_of_dimensions
  2    47 			      fixed bin;
  2    48      dcl	   pv_maximum_value_length
  2    49 			      fixed bin;
  2    50 
  2    51      dcl	   print_vector_array_ptr ptr;
  2    52      dcl	   print_vector_ptr	      ptr;
  2    53      dcl	   PRINT_VECTOR_ARRAY_VERSION_2
  2    54 			      fixed bin (35) init (2) internal static options (constant);
  2    55 
  2    56 /* END INCLUDE FILE  -  vu_print_vector_array.incl.pl1 */
      160 
      161 
  3     1 /* BEGIN INCLUDE FILE - vu_pva_string.incl.pl1 */
  3     2 
  3     3 /* DESCRIPTION:
  3     4*          This include file defines the pva_string  and pv_string structures.
  3     5*     A pva_string consists of the pva_string structure followed by N pv_string
  3     6*     structures, where N = pva_string.number_of_vectors.  The pva_string is a
  3     7*     representation of the print_vector_array which can be permanently stored,
  3     8*     and from which the print_vector_array can be reconstructed.
  3     9**/
  3    10 
  3    11 /* HISTORY:
  3    12*Written by Lindsey Spratt, 07/24/83.
  3    13*Modified:
  3    14**/
  3    15 
  3    16 /* format: style2,ind3 */
  3    17      dcl	   1 pva_string	      based (pva_string_ptr),
  3    18 	     2 version	      char (8) init (PVA_STRING_VERSION_1),
  3    19 	     2 number_of_vectors  fixed bin (17) unal,
  3    20 	     2 number_of_dimensions
  3    21 			      fixed bin (17) unal,
  3    22 	     2 maximum_name_length
  3    23 			      fixed bin (17) unal,
  3    24 	     2 pad	      bit (18) unal,
  3    25 	     2 dimension_table    (pvas_number_of_dimensions refer (pva_string.number_of_dimensions)),
  3    26 	       3 name	      char (pvas_maximum_name_length refer (pva_string.maximum_name_length)) varying;
  3    27 
  3    28      dcl	   pva_string_ptr	      ptr init (null);
  3    29      dcl	   pvas_number_of_dimensions
  3    30 			      fixed bin (17) init (0);
  3    31      dcl	   pvas_maximum_name_length
  3    32 			      fixed bin (17) init (0);
  3    33 
  3    34      dcl	   PVA_STRING_VERSION_1   char (8) init ("pvastr 1") internal static options (constant);
  3    35 
  3    36      dcl	   1 pv_string	      based (pv_string_ptr),
  3    37 	     2 number_of_dimensions
  3    38 			      fixed bin (17) unal,
  3    39 	     2 pad	      bit (18) unal,
  3    40 	     2 maximum_value_length
  3    41 			      fixed bin (35),
  3    42 	     2 dimension	      (pvs_number_of_dimensions refer (pv_string.number_of_dimensions)),
  3    43 	       3 identifier	      fixed bin (17) unal,
  3    44 	       3 pad	      bit (18) unal,
  3    45 	       3 value	      char (pvs_maximum_value_length refer (pv_string.maximum_value_length)) varying;
  3    46 
  3    47      dcl	   pv_string_ptr	      ptr init (null);
  3    48      dcl	   pvs_number_of_dimensions
  3    49 			      fixed bin (17) init (0);
  3    50      dcl	   pvs_maximum_value_length
  3    51 			      fixed bin (35) init (0);
  3    52 
  3    53 /* END INCLUDE FILE - vu_pva_string.incl.pl1 */
      162 
      163 
  4     1 /* ***********************************************************
  4     2*   *                                                         *
  4     3*   * Copyright, (C) Honeywell Information Systems Inc., 1983 *
  4     4*   *                                                         *
  4     5*   *********************************************************** */
  4     6 /* BEGIN INCLUDE FILE - vu_entry_dcls.incl.pl1 */
  4     7 
  4     8 /* Written 03/01/82 by Lindsey Spratt.
  4     9*Modified:
  4    10*09/23/82 by Lindsey Spratt:  Added the append_simple_typed_vector,
  4    11*            free_typed_vector_array, and free_typed_vector entries.
  4    12*07/24/83 by Lindsey Spratt:  Added $cv_pva_to_string and $cv_string_to_pva.
  4    13**/
  4    14 
  4    15 /* format: style2,ind3 */
  4    16      dcl     vector_util_$display   entry (ptr, ptr, fixed bin (35));
  4    17      dcl     vector_util_$sort_print
  4    18                                     entry (ptr, ptr, fixed bin (35));
  4    19 
  4    20      dcl     vector_util_$init_print_vector_array
  4    21                                     entry options (variable);
  4    22      dcl     vector_util_$init_typed_vector_array
  4    23                                     entry options (variable);
  4    24 
  4    25      dcl     vector_util_$append_dimension_print
  4    26                                     entry (ptr, bit (1) aligned, char (*), ptr, ptr, fixed bin, fixed bin (35));
  4    27 
  4    28      dcl     vector_util_$append_simple_print_vector
  4    29                                     entry options (variable);
  4    30      dcl     vector_util_$append_general_print_vector
  4    31                                     entry options (variable);
  4    32 
  4    33      dcl     vector_util_$append_simple_typed_vector
  4    34                                     entry options (variable);
  4    35 
  4    36 /* call vector_util_$free_typed_vector_array (work_area_ptr, typed_vector_array_ptr, code) */
  4    37      dcl     vector_util_$free_typed_vector_array
  4    38                                     entry (ptr, ptr, fixed bin (35));
  4    39 
  4    40 /* call vector_util_$free_typed_vector (work_area_ptr,typed_vector_array_ptr,typed_vector_ptr,code) */
  4    41      dcl     vector_util_$free_typed_vector
  4    42                                     entry (ptr, ptr, ptr, fixed bin (35));
  4    43 
  4    44      dcl     vector_util_$cv_typed_to_print
  4    45                                     entry (ptr, ptr, ptr, fixed bin (35));
  4    46      dcl     vector_util_$cv_any_to_print_dimension
  4    47                                     entry (ptr, ptr, ptr, fixed bin (35), char (*) varying, fixed bin (35));
  4    48 
  4    49      dcl     vector_util_$cv_pva_to_string
  4    50                                     entry (ptr, ptr, fixed bin (35), fixed bin (35));
  4    51      dcl     vector_util_$cv_string_to_pva
  4    52                                     entry (ptr, fixed bin (35), ptr, ptr, fixed bin (35));
  4    53 
  4    54      dcl     vector_util_$err_no_operation
  4    55                                     entry (ptr, fixed bin (17), fixed bin (17), ptr, ptr, fixed bin (35));
  4    56 
  4    57 /*  END INCLUDE FILE - vu_entry_dcls.incl.pl1 */
  4    58 
      164 
      165    end vu_cv_string_to_pva;
      166 
	SOURCE FILES USED IN THIS COMPILATION.

LINE      NUMBER  DATE MODIFIED     NAME			PATHNAME
             0    02/16/84  1249.9  vu_cv_string_to_pva.pl1           >spec>on>mtape>vu_cv_string_to_pva.pl1
158          1    04/16/82  0958.1  sub_err_flags.incl.pl1            >ldd>include>sub_err_flags.incl.pl1
160          2    02/16/84  1230.3  vu_print_vector_array.incl.pl1    >spec>on>mtape>vu_print_vector_array.incl.pl1
162          3    02/16/84  1230.3  vu_pva_string.incl.pl1            >spec>on>mtape>vu_pva_string.incl.pl1
164          4    02/16/84  1230.3  vu_entry_dcls.incl.pl1            >spec>on>mtape>vu_entry_dcls.incl.pl1
	NAMES DECLARED IN THIS COMPILATION.

IDENTIFIER	     OFFSET    LOC STORAGE CLASS   DATA TYPE		ATTRIBUTES AND REFERENCES
								(* indicates a set context)

NAMES DECLARED BY DECLARE STATEMENT.
ACTION_CANT_RESTART             000002 constant        bit(36)                  initial dcl 1-7 set ref 131* 145*
DEFAULT_SLOT_INCREASE_FACTOR    000024 constant        fixed bin(35,0)          initial dcl 54 set ref 99*
DEFAULT_VECTOR_SLOT_IDX         000014 constant        fixed bin(35,0)          initial dcl 54 set ref 99*
DONT_FREE_OLD_PVA               000024 constant        bit(1)                   initial dcl 54 set ref 99*
PRINT_VECTOR_ARRAY_VERSION_2    000027 constant        fixed bin(35,0)          initial dcl 2-53 set ref 84*
PVA_STRING_VERSION_1            000000 constant        char(8)                  initial unaligned dcl 3-34 set ref 75*
addwordno                                              builtin function         dcl 49 ref 97
current_pva_string_word_offset  000102 automatic       fixed bin(35,0)          initial dcl 43 set ref 43* 93* 97 116* 116
currentsize                                            builtin function         dcl 49 ref 93 116
dim_idx                         000100 automatic       fixed bin(17,0)          initial dcl 42 set ref 42* 88* 89 89 90* 108* 109
                                                                                  109 110 110 111 111 111*
dimension                 2            based           structure                array level 2 in structure "pv_string" unaligned
                                                                                  dcl 3-36 in procedure "vu_cv_string_to_pva"
dimension                 2            based           structure                array level 2 in structure "print_vector" unaligned
                                                                                  dcl 2-31 in procedure "vu_cv_string_to_pva"
dimension_table           4            based           structure                array level 2 in structure "pva_string" unaligned
                                                                                  dcl 3-17 in procedure "vu_cv_string_to_pva"
dimension_table           6            based           structure                array level 2 in structure "print_vector_array"
                                                                                  unaligned dcl 2-12 in procedure
                                                                                  "vu_cv_string_to_pva"
error_table_$unimplemented_version
                                000012 external static fixed bin(35,0)          dcl 69 set ref 131* 145*
identifier                2            based           fixed bin(17,0)          array level 3 in structure "print_vector" dcl 2-31
                                                                                  in procedure "vu_cv_string_to_pva" set ref 109*
                                                                                  111 111
identifier                2            based           fixed bin(17,0)          array level 3 in structure "pv_string" packed
                                                                                  unaligned dcl 3-36 in procedure
                                                                                  "vu_cv_string_to_pva" ref 109
length                                                 builtin function         dcl 49 ref 111
max                                                    builtin function         dcl 49 ref 111
maximum_dimension_name_length
                          2            based           fixed bin(17,0)          level 2 dcl 2-12 ref 89 89 89 90 90 90 106 111 111
                                                                                  111 111 111 111
maximum_name_length       3            based           fixed bin(17,0)          level 2 packed unaligned dcl 3-17 ref 77 77 89 89 93
maximum_value_length                   based           fixed bin(17,0)          array level 3 in structure "print_vector_array"
                                                                                  dcl 2-12 in procedure "vu_cv_string_to_pva" set
                                                                                  ref 90* 111* 111
maximum_value_length      1            based           fixed bin(35,0)          level 2 in structure "print_vector" dcl 2-31
                                                                                  in procedure "vu_cv_string_to_pva" ref 109 109 110
                                                                                  110 110 111 111 111 111 111 111
maximum_value_length      1            based           fixed bin(35,0)          level 2 in structure "pv_string" dcl 3-36
                                                                                  in procedure "vu_cv_string_to_pva" ref 99 99 109
                                                                                  109 110 110 116
myname                          000003 constant        varying char(32)         initial dcl 54 set ref 131* 145*
name                      6            based           varying char             array level 3 in structure "print_vector_array"
                                                                                  dcl 2-12 in procedure "vu_cv_string_to_pva" set
                                                                                  ref 89*
name                      4            based           varying char             array level 3 in structure "pva_string" dcl 3-17
                                                                                  in procedure "vu_cv_string_to_pva" ref 89
null                                                   builtin function         dcl 49 ref 3-28 3-47 131 131 145 145
number_of_dimensions      1            based           fixed bin(17,0)          level 2 in structure "print_vector_array" dcl 2-12
                                                                                  in procedure "vu_cv_string_to_pva" ref 106
number_of_dimensions                   based           fixed bin(17,0)          level 2 in structure "pv_string" packed unaligned
                                                                                  dcl 3-36 in procedure "vu_cv_string_to_pva" ref 99
                                                                                  99 108 116
number_of_dimensions      2(18)        based           fixed bin(17,0)          level 2 in structure "pva_string" packed unaligned
                                                                                  dcl 3-17 in procedure "vu_cv_string_to_pva" ref 77
                                                                                  77 88 93
number_of_vectors         2            based           fixed bin(17,0)          level 2 in structure "pva_string" packed unaligned
                                                                                  dcl 3-17 in procedure "vu_cv_string_to_pva" ref 77
                                                                                  77 95
number_of_vectors         3            based           fixed bin(17,0)          level 2 in structure "print_vector_array" dcl 2-12
                                                                                  in procedure "vu_cv_string_to_pva" set ref 86* 106
p_area_ptr                             parameter       pointer                  dcl 28 set ref 7 77* 99*
p_code                                 parameter       fixed bin(35,0)          dcl 37 set ref 7 77* 81 99* 103
p_expected_version                     parameter       char                     unaligned dcl 128 in procedure "CHECK_VERSION" set
                                                                                  ref 125 131 131*
p_expected_version                     parameter       fixed bin(35,0)          dcl 142 in procedure "CHECK_VERSION_FB" set ref 139
                                                                                  145 145*
p_print_vector_array_ptr               parameter       pointer                  dcl 32 set ref 7 120*
p_pva_string_length                    parameter       fixed bin(35,0)          dcl 26 ref 7
p_pva_string_ptr                       parameter       pointer                  dcl 25 ref 7 74
p_received_version                     parameter       fixed bin(35,0)          dcl 141 in procedure "CHECK_VERSION_FB" set ref 139
                                                                                  145 145*
p_received_version                     parameter       char                     unaligned dcl 127 in procedure "CHECK_VERSION" set
                                                                                  ref 125 131 131*
p_structure_name                       parameter       char                     unaligned dcl 129 in procedure "CHECK_VERSION" set
                                                                                  ref 125 131*
p_structure_name                       parameter       char                     unaligned dcl 143 in procedure "CHECK_VERSION_FB"
                                                                                  set ref 139 145*
print_vector                           based           structure                level 1 unaligned dcl 2-31
print_vector_array                     based           structure                level 1 unaligned dcl 2-12
print_vector_array_ptr          000104 automatic       pointer                  dcl 2-51 set ref 77* 84 86 89 90 99* 106 106 111 111
                                                                                  120
print_vector_ptr                000106 automatic       pointer                  dcl 2-52 set ref 106* 109 110 111 111 111
pv_string                              based           structure                level 1 unaligned dcl 3-36 ref 116
pv_string_ptr                   000114 automatic       pointer                  initial dcl 3-47 set ref 97* 99 99 99 99 108 109 110
                                                                                  116 3-47*
pva_string                             based           structure                level 1 unaligned dcl 3-17 set ref 93
pva_string_ptr                  000110 automatic       pointer                  initial dcl 3-28 set ref 74* 75 77 77 77 77 77 77 88
                                                                                  89 93 95 97 3-28*
pvas_maximum_name_length        000113 automatic       fixed bin(17,0)          initial dcl 3-31 set ref 3-31*
pvas_number_of_dimensions       000112 automatic       fixed bin(17,0)          initial dcl 3-29 set ref 3-29*
pvs_maximum_value_length        000117 automatic       fixed bin(35,0)          initial dcl 3-50 set ref 3-50*
pvs_number_of_dimensions        000116 automatic       fixed bin(17,0)          initial dcl 3-48 set ref 3-48*
sub_err_                        000010 constant        entry                    external dcl 65 ref 131 145
value                     3            based           varying char             array level 3 in structure "print_vector" dcl 2-31
                                                                                  in procedure "vu_cv_string_to_pva" set ref 110*
                                                                                  111
value                     3            based           varying char             array level 3 in structure "pv_string" dcl 3-36
                                                                                  in procedure "vu_cv_string_to_pva" ref 110
vector_idx                      000101 automatic       fixed bin(17,0)          initial dcl 42 set ref 42* 95*
vector_slot                            based           pointer                  array level 2 dcl 2-12 ref 106
vector_util_$append_general_print_vector
                                000016 constant        entry                    external dcl 4-30 ref 99
vector_util_$init_print_vector_array
                                000014 constant        entry                    external dcl 4-20 ref 77
version                                based           char(8)                  initial level 2 in structure "pva_string" packed
                                                                                  unaligned dcl 3-17 in procedure
                                                                                  "vu_cv_string_to_pva" set ref 75*
version                                based           fixed bin(35,0)          level 2 in structure "print_vector_array" dcl 2-12
                                                                                  in procedure "vu_cv_string_to_pva" set ref 84*

NAMES DECLARED BY DECLARE STATEMENT AND NEVER REFERENCED.
ACTION_CAN_RESTART                     internal static bit(36)                  initial dcl 1-7
ACTION_DEFAULT_RESTART                 internal static bit(36)                  initial dcl 1-7
ACTION_QUIET_RESTART                   internal static bit(36)                  initial dcl 1-7
ACTION_SUPPORT_SIGNAL                  internal static bit(36)                  initial dcl 1-7
pv_maximum_value_length                automatic       fixed bin(17,0)          dcl 2-48
pv_number_of_dimensions                automatic       fixed bin(17,0)          dcl 2-46
pva_maximum_dimension_name_length      automatic       fixed bin(17,0)          dcl 2-44
pva_number_of_dimensions               automatic       fixed bin(17,0)          dcl 2-40
pva_number_of_vector_slots             automatic       fixed bin(17,0)          dcl 2-42
vector_util_$append_dimension_print
                                000000 constant        entry                    external dcl 4-25
vector_util_$append_simple_print_vector
                                000000 constant        entry                    external dcl 4-28
vector_util_$append_simple_typed_vector
                                000000 constant        entry                    external dcl 4-33
vector_util_$cv_any_to_print_dimension
                                000000 constant        entry                    external dcl 4-46
vector_util_$cv_pva_to_string   000000 constant        entry                    external dcl 4-49
vector_util_$cv_string_to_pva   000000 constant        entry                    external dcl 4-51
vector_util_$cv_typed_to_print  000000 constant        entry                    external dcl 4-44
vector_util_$display            000000 constant        entry                    external dcl 4-16
vector_util_$err_no_operation   000000 constant        entry                    external dcl 4-54
vector_util_$free_typed_vector  000000 constant        entry                    external dcl 4-41
vector_util_$free_typed_vector_array
                                000000 constant        entry                    external dcl 4-37
vector_util_$init_typed_vector_array
                                000000 constant        entry                    external dcl 4-22
vector_util_$sort_print         000000 constant        entry                    external dcl 4-17

NAMES DECLARED BY EXPLICIT CONTEXT.
CHECK_VERSION                   000602 constant        entry                    internal dcl 125 ref 75
CHECK_VERSION_FB                000717 constant        entry                    internal dcl 139 ref 84
ERROR_RETURN                    001013 constant        entry                    internal dcl 153 ref 103
MAIN_RETURN                     000601 constant        label                    dcl 122 ref 155
vu_cv_string_to_pva             000073 constant        entry                    external dcl 7

NAME DECLARED BY CONTEXT OR IMPLICATION.
bin                                                    builtin function         ref 77 77 77 77 77 77 99 99 99 99

STORAGE REQUIREMENTS FOR THIS PROGRAM.

	Object	Text	Link	Symbol	Defs	Static
Start          0       0      1116        1136    1015        1126
Length      1402    1015        20         227     100           0

BLOCK NAME	         STACK SIZE     TYPE		WHY NONQUICK/WHO SHARES STACK FRAME
vu_cv_string_to_pva                 358 external procedure  is an external procedure.  
CHECK_VERSION                           internal procedure  shares stack frame of external procedure vu_cv_string_to_pva.  
CHECK_VERSION_FB                        internal procedure  shares stack frame of external procedure vu_cv_string_to_pva.  
ERROR_RETURN                            internal procedure  shares stack frame of external procedure vu_cv_string_to_pva.  

STORAGE FOR AUTOMATIC VARIABLES.

STACK FRAME                 LOC IDENTIFIER                  BLOCK NAME
vu_cv_string_to_pva      000100 dim_idx                     vu_cv_string_to_pva
                         000101 vector_idx                  vu_cv_string_to_pva
                         000102 current_pva_string_word_offset
                                                            vu_cv_string_to_pva
                         000104 print_vector_array_ptr      vu_cv_string_to_pva
                         000106 print_vector_ptr            vu_cv_string_to_pva
                         000110 pva_string_ptr              vu_cv_string_to_pva
                         000112 pvas_number_of_dimensions   vu_cv_string_to_pva
                         000113 pvas_maximum_name_length    vu_cv_string_to_pva
                         000114 pv_string_ptr               vu_cv_string_to_pva
                         000116 pvs_number_of_dimensions    vu_cv_string_to_pva
                         000117 pvs_maximum_value_length    vu_cv_string_to_pva

THE FOLLOWING EXTERNAL OPERATORS ARE USED BY THIS PROGRAM.
call_ext_out_desc   return              ext_entry

THE FOLLOWING EXTERNAL ENTRIES ARE CALLED BY THIS PROGRAM.
sub_err_                      vector_util_$append_general_print_vector
vector_util_$init_print_vector_array

THE FOLLOWING EXTERNAL VARIABLES ARE USED BY THIS PROGRAM.
error_table_$unimplemented_version




   LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC   
      7 000066        42 000100        43 000102    3   28 000103    3   29 000105    3   31 000106    3   47 000107
 3   48 000110    3   50 000111        74 000112        75 000116        77 000141        81 000206        84 000211
     86 000233        88 000235        89 000247        90 000312        91 000322        93 000324        95 000341
     97 000351        99 000355       103 000423       106 000427       108 000455       109 000465       110 000512
    111 000524       114 000554       116 000556       118 000574       120 000576       122 000601       125 000602
    131 000625       137 000716       139 000717       145 000730       151 001012       153 001013       155 001014


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
