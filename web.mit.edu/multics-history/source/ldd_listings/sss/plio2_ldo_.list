	COMPILATION LISTING OF SEGMENT plio2_ldo_
	Compiled by: Multics PL/I Compiler, Release 28d, of September 14, 1983
	Compiled at: Honeywell LCPD Phoenix, System M
	Compiled on: 10/03/83  1416.4 mst Mon
	    Options: optimize map

        1 /* ******************************************************
        2*   *                                                    *
        3*   *                                                    *
        4*   * Copyright (c) 1972 by Massachusetts Institute of   *
        5*   * Technology and Honeywell Information Systems, Inc. *
        6*   *                                                    *
        7*   *                                                    *
        8*   ****************************************************** */
        9 
       10 	/* Modified: 05/01/78 by PCK to implement unsigned binary	*/
       11 
       12 plio2_ldo_:proc(pspp) options(support);
       13 put_value_list_:entry(pspp);
       14 
       15 dcl	(pspp,psp,picture_p) ptr;
       16 
       17 dcl	based_bit36 bit (36) aligned based;
       18 dcl	based_chars char (1044480) based;
       19 dcl	p_vector (100) ptr based;
       20 	dcl based_bits bit(1000) unal based;
       21 	dcl (code,erno,n_out,i ) fixed bin(15);
       22 	dcl output char(516) unaligned;
       23 
       24 	dcl v_output char(516) varying;
       25 
       26 	dcl (addr,addrel,fixed,length,substr,unspec) builtin;
       27 
       28 	dcl plio2_signal_$s_ ext entry(ptr,char(*),char(*),fixed bin(15));
       29 	dcl plio2_put_util_$put_field_ ext entry(ptr,ptr,fixed bin(15));
       30 	dcl plio2_put_util_$put_prep_ ext entry(ptr);
       31 	dcl dnd$with_strings ext entry(bit(36) aligned,ptr,fixed bin(15));
       32 
       33 	dcl plio2_resig_ ext entry(ptr);
       34 	dcl conversion condition;
       35 
       36 
       37 	dcl based_VL fixed bin(35) based;
       38 
       39 	dcl x char(1) aligned;
       40 	dcl 1 descriptive aligned,
       41 		2 type5 aligned,
       42 			3 (cr,bd,ff,ls,pack) char(1) unal,
       43 		2 ( prec,scale,bit_length,type) fixed bin(15);
       44 
       45 
  1     1 /* BEGIN INCLUDE FILE ... desc_dcls.incl.pl1 */
  1     2 
  1     3 /* This include segment contains declarations for use with assign_ */
  1     4 
  1     5 dcl	intype		fixed bin (17),
  1     6 	outtype		fixed bin (17);
  1     7 
  1     8 dcl	inscale_prec	fixed bin (35),
  1     9 	outscale_prec	fixed bin (35);
  1    10 
  1    11 dcl	1 info		based (addr (inscale_prec)) aligned,
  1    12 	2 inscale		fixed bin (17) unal,
  1    13 	2 inprec		fixed bin (17) unal;
  1    14 
  1    15 dcl	1 outfo		based (addr (outscale_prec)) aligned,
  1    16 	2 outscale	fixed bin (17) unal,
  1    17 	2 outprec		fixed bin (17) unal;
  1    18 
  1    19 dcl	inclength fixed bin(31) aligned based(addr(inscale_prec));
  1    20 dcl	outclength fixed bin(31) aligned based(addr(outscale_prec));
  1    21 
  1    22 dcl	char_to_numeric_	entry (ptr, fixed bin (17), fixed bin (35), ptr, fixed bin (17)), 
  1    23 	assign_		entry (ptr, fixed bin (17), fixed bin (35), ptr, fixed bin (17), fixed bin (35)), 
  1    24 	assign_round_	entry (ptr, fixed bin (17), fixed bin (35), ptr, fixed bin (17), fixed bin (35)), 
  1    25 	assign_truncate_	entry (ptr, fixed bin (17), fixed bin (35), ptr, fixed bin (17), fixed bin (35));
  1    26 
  1    27 /* END INCLUDE FILE ... desc_dcls.incl.pl1 */
       46 
  2     1 dcl (	s_fixed_real_desc		init( 1),
  2     2 	d_fixed_real_desc		init( 2),
  2     3 	s_float_real_desc		init( 3),
  2     4 	d_float_real_desc		init( 4),
  2     5 	s_fixed_cplx_desc		init( 5),
  2     6 	d_fixed_cplx_desc		init( 6),
  2     7 	s_float_cplx_desc		init( 7),
  2     8 	d_float_cplx_desc		init( 8),
  2     9 
  2    10 	D_fixed_real_desc		init( 9),
  2    11 	D_float_real_desc		init(10),
  2    12 	D_fixed_cplx_desc		init(11),
  2    13 	D_float_cplx_desc		init(12),
  2    14 
  2    15 	pointer_desc		init(13),
  2    16 	offset_desc		init(14),
  2    17 	label_desc		init(15),
  2    18 	entry_desc		init(16),
  2    19 	structure_desc		init(17),
  2    20 	area_desc			init(18),
  2    21 
  2    22 	bit_desc			init(19),
  2    23 	v_bit_desc		init(20),
  2    24 
  2    25 	char_desc			init(21),
  2    26 	v_char_desc		init(22),
  2    27 
  2    28 	file_desc			init(23)
  2    29 					) fixed bin int static options(constant);
       47 
  3     1 /*	BEGIN INCLUDE FILE ... descriptor.incl.pl1	*/
  3     2 
  3     3 dcl	1 desc_		aligned,
  3     4 	2 version2_	bit(1) unal,
  3     5 	2 type_		fixed bin(6) unsigned unal,
  3     6 	2 pack_		bit(1) unal,
  3     7 	2 dimension_	bit(4) unal,
  3     8 	2 scale_		fixed bin(11) unal,
  3     9 	2 precision_	fixed bin(11) unal;
  3    10 
  3    11 /*	END INCLUDE FILE ... descriptor.incl.pl1	*/
       48 
  4     1 /* BEGIN INCLUDE FILE ... picture_image.incl.pl1
  4     2*
  4     3*   James R. Davis  12 Mar 79
  4     4**/
  4     5 
  4     6      dcl	   1 picture_image	      aligned based,
  4     7 	     2 type	      fixed bin (8) unal,
  4     8 	     2 prec	      fixed bin (8) unal,	/* precision or length of associated value */
  4     9 	     2 scale	      fixed bin (8) unal,	/* for both fixed and float pictures,
  4    10*							=ndigits after "v" - scale_factor */
  4    11 	     2 piclength	      fixed bin (8) unal,	/* length of picture_constant.chars, <64
  4    12*							=length of normalized-picture-string */
  4    13 	     2 varlength	      fixed bin (8) unal,	/* length of pictured variable in chars, <64
  4    14*							=length of normalized_picture_string - "k" and "v" */
  4    15 	     2 scalefactor	      fixed bin (8) unal,	/* value of pict-sc-f, -256<=x<256  */
  4    16 	     2 explength	      fixed bin (8) unal,	/* length of exp field for float */
  4    17 	     2 drift_character    char (1) unal,
  4    18 	     2 chars	      char (0 refer (picture_image.piclength)) aligned;
  4    19 
  4    20      dcl	   (
  4    21 	   picture_char_type      init (24),
  4    22 	   picture_realfix_type   init (25),
  4    23 	   picture_complexfix_type
  4    24 			      init (26),
  4    25 	   picture_realflo_type   init (27),
  4    26 	   picture_complexflo_type
  4    27 			      init (28)
  4    28 	   )		      fixed bin (8) unal static internal options (constant);
  4    29 
  4    30 /* END INCLUDE FILE  ... picture_image.incl.pl1  */
       49 
  5     1 dcl (	char_picture	init(24),
  5     2 	real_fixed_picture	init(25),
  5     3 	cplx_fixed_picture	init(26),
  5     4 	real_float_picture	init(27),
  5     5 	cplx_float_picture	init(28))	fixed bin int static options(constant);
       50 
  6     1 /* BEGIN INCLUDE FILE ... picture_util.incl.pl1 */
  6     2 
  6     3 dcl	pack_picture_		entry (char (1), char (1), char (1)),
  6     4 	unpack_picture_		entry (char (1), char (1), char (1)),
  6     5 	validate_picture_		entry (char (1), char (1), fixed bin (15), fixed bin (15)),
  6     6 
  6     7 	assign_type_d		entry (bit (36) aligned, ptr, ptr, fixed bin (17), fixed bin (35)),
  6     8 	assign_type_p		entry (ptr, fixed bin (17), fixed bin (35)),
  6     9 
  6    10 	char1			char (1) based;
  6    11 
  6    12 /* END INCLUDE FILE ... picture_util.incl.pl1 */
       51 
  7     1 /* BEGIN INCLUDE FILE ... plio2_fsb.incl.pl1 */
  7     2 /* format: style3,idind30 */
  7     3 
  7     4 declare	1 fsb			aligned based (fsbp),
  7     5 	  2 switch		aligned,
  7     6 	    3 zot			(2) bit (1) unaligned,
  7     7 	    3 version_2		bit (1) unaligned,
  7     8 	    3 open		bit (1) unaligned,
  7     9 	    3 print		bit (1) unaligned,
  7    10 	    3 input		bit (1) unaligned,
  7    11 	    3 output		bit (1) unaligned,
  7    12 	    3 update		bit (1) unaligned,
  7    13 	    3 stream		bit (1) unaligned,
  7    14 	    3 notkeyed		bit (1) unaligned,
  7    15 	    3 record		bit (1) unaligned,
  7    16 	    3 sequential		bit (1) unaligned,
  7    17 	    3 direct		bit (1) unaligned,
  7    18 	    3 interactive		bit (1) unaligned,
  7    19 	    3 not_used_1		bit (1) unaligned,
  7    20 	    3 not_used_2		bit (1) unaligned,
  7    21 	    3 stringvalue		bit (1) unaligned,
  7    22 	    3 keyed		bit (1) unaligned,
  7    23 	    3 namelist		bit (1) unaligned,
  7    24 	    3 implementation	bit (1) unaligned,
  7    25 	    3 not_used_4		bit (1) unaligned,	/* old get-input eof flag */
  7    26 	    3 transmit_error	bit (1) unaligned,
  7    27 	    3 buffer_in_use		bit (1) unaligned,
  7    28 	    3 copy		bit (1) unaligned,
  7    29 	    3 detach		bit (1) unaligned,
  7    30 	    3 te_hold		bit (1) unaligned,
  7    31 	    3 not_used_5		bit (1) unaligned,
  7    32 	    3 internal		bit (1) unaligned,
  7    33 	    3 threaded		bit (1) unaligned,
  7    34 	    3 fsb_in_use		bit (1) unaligned,
  7    35 	    3 console		bit (1) unaligned,
  7    36 	    3 emptyline		bit (1) unaligned,
  7    37 	    3 iox_close		bit (1) unaligned,
  7    38 	    3 xxx4		bit (1) unaligned,
  7    39 	    3 xxx5		bit (1) unaligned,
  7    40 	    3 xxx6		bit (1) unaligned,
  7    41 	  2 nono			aligned,
  7    42 	    3 bit_string		bit (1) unaligned,
  7    43 	    3 not_used_3		bit (1) unaligned,
  7    44 	    3 read		bit (1) unaligned,
  7    45 	    3 write		bit (1) unaligned,
  7    46 	    3 rewrite		bit (1) unaligned,
  7    47 	    3 delete		bit (1) unaligned,
  7    48 	    3 locate		bit (1) unaligned,
  7    49 	    3 key			bit (1) unaligned,
  7    50 	    3 keyto		bit (1) unaligned,
  7    51 	    3 keyfrom		bit (1) unaligned,
  7    52 	    3 set			bit (1) unaligned,
  7    53 	    3 into		bit (1) unaligned,
  7    54 	    3 ignore		bit (1) unaligned,
  7    55 	    3 from		bit (1) unaligned,
  7    56 	    3 nofrom		bit (1) unaligned,
  7    57 	    3 nokey		bit (1) unaligned,
  7    58 	    3 nokeyfrom		bit (1) unaligned,
  7    59 	    3 nolock		bit (1) unaligned,
  7    60 	  2 lsep			fixed bin (15),	/* (1,COMMA)(2,BL)(3,TAB)(4,NL)(5,SEMI) */
  7    61 	  2 iocb_p		ptr unaligned,	/* identifies data_set to iox_ */
  7    62 	  2 blc			fixed bin (21),	/* buffer's last character (input) */
  7    63 	  2 bsize			fixed bin (21),	/* size of buffer */
  7    64 	  2 bptr			ptr,		/* address of buffer */
  7    65 	  2 bnc			fixed bin (15),	/* next character in buffer */
  7    66 	  2 kol			fixed bin (15),	/* last column read from or written into */
  7    67 	  2 lsize			fixed bin (15),	/* line size (output) */
  7    68 	  2 lineno		fixed bin (15),	/* current line (output) - starts at 1 on each new page */
  7    69 	  2 psize			fixed bin (35),	/* page size (output) */
  7    70 	  2 pageno		fixed bin (15),	/* current page number, starts at 1 */
  7    71 	  2 limit			fixed bin (15),
  7    72 	  2 lnzc			fixed bin (35),
  7    73 	  2 filename		char (32) aligned,	/* declared file name */
  7    74 	  2 title			char (32) unaligned,/* Multics I/O switch */
  7    75 	  2 fsb_thread		ptr,
  7    76 	  2 buffer		(212) fixed bin (15),
  7    77 	  2 path_name		char (168) unal,	/* title option */
  7    78 	  2 declared_attributes	(2) bit (36) aligned;
  7    79 
  7    80 declare	xbuf			char (1000) unaligned based (fsb.bptr);
  7    81 
  7    82 /* END INCLUDE FILE ... plio2_fsb.incl.pl1 */
       52 
  8     1 /* BEGIN INCLUDE FILE ... plio2_ps.incl.pl1 */
  8     2 /* Stream I/O data block used by PL/I I/O runtime routines.
  8     3*
  8     4*   Modified: 31 January 1978 by RAB to change plio2_data_$fsb_thread to plio2_data_fsb_thread_
  8     5**/
  8     6 /* format: style3,idind30 */
  8     7 
  8     8 /* based */
  8     9 
  8    10 declare	1 ps			aligned based (psp),/* items set NORMALLY by compiled procedures */
  8    11 	  2 stack_frame_p		ptr,		/* items set in block prologue */
  8    12 	  2 ST_top_p		ptr,
  8    13 	  2 ST_block_p		ptr,
  8    14 	  2 format_area_p		ptr,
  8    15 	  2 ss_list_p		ptr,
  8    16 	  2 ab_return,				/* items set in prep call */
  8    17 	    3 abret		(3) ptr,
  8    18 	  2 source_p		ptr,		/* addr(fakefsb) for string option,
  8    19*						   addr(file) for explicit file option */
  8    20 	  2 special_list_p		ptr,		/* addr(OKlist) for get data, addr(format_list) for edit */
  8    21 	  2 copy_file_p		ptr,
  8    22 	  2 job			aligned,
  8    23 	    3 explicit_file		bit (1) unal,
  8    24 	    3 string		bit (1) unal,
  8    25 	    3 varying_string	bit (1) unal,
  8    26 	    3 data		bit (1) unal,
  8    27 	    3 edit		bit (1) unal,
  8    28 	    3 list		bit (1) unal,
  8    29 	    3 get			bit (1) unal,
  8    30 	    3 put			bit (1) unal,
  8    31 	    3 page		bit (1) unal,
  8    32 	    3 line		bit (1) unal,
  8    33 	    3 skip		bit (1) unal,
  8    34 	    3 copy		bit (1) unal,
  8    35 	    3 p1p2		bit (1) unal,
  8    36 	    3 bit_string		bit (1) unal,	/* for environment(stringvalue) */
  8    37 	    3 char_string		bit (1) unal,
  8    38 	    3 read		bit (1) unal,
  8    39 	    3 write		bit (1) unal,
  8    40 	    3 rewrite		bit (1) unal,
  8    41 	    3 delete		bit (1) unal,
  8    42 	    3 locate		bit (1) unal,
  8    43 	    3 key			bit (1) unal,
  8    44 	    3 keyto		bit (1) unal,
  8    45 	    3 keyfrom		bit (1) unal,
  8    46 	    3 set			bit (1) unal,
  8    47 	    3 into		bit (1) unal,
  8    48 	    3 ignore		bit (1) unal,
  8    49 	    3 from		bit (1) unal,
  8    50 	    3 version		bit (6) unal,
  8    51 	    3 not_byte_buffer	bit (1) unal,
  8    52 	    3 pad1		bit (1) unal,
  8    53 	    3 packed_ptr		bit (1) unal,
  8    54 	  2 number		fixed bin (15),
  8    55 	  2 value_p		ptr,		/* items set NORMALLY by compiled procedures per transmission */
  8    56 	  2 descriptor		bit (36) aligned,
  8    57 	  2 length		fixed bin (15),	/* may be swallowed into descriptor */
  8    58 	  2 top_half		bit (18) unal,
  8    59 	  2 offset		bit (18) unal,
  8    60 	  2 prep			fixed bin (15),	/* items treated ABNORMALLY, written by user and PLIO */
  8    61 	  2 new_format		fixed bin (15),
  8    62 	  2 switch		aligned,		/* items used by PLIO and not touched by compiled procedures */
  8    63 	    3 first_field		bit (1) unal,
  8    64 	    3 file		bit (1) unal,
  8    65 	    3 transmit_error	bit (1) unal,
  8    66 	    3 semi_sep		bit (1) unal,
  8    67 	    3 pad2		bit (32) unal,
  8    68 	  2 file_p		ptr,
  8    69 	  2 fsbp			ptr,
  8    70 	  2 auxp			ptr,		/* used as addr(ldidata) for GETs */
  8    71 	  2 fabp			ptr,
  8    72 	  2 fab2p			ptr,
  8    73 	  2 vp			ptr,
  8    74 	  2 descr			bit (36) aligned,
  8    75 	  2 start_copy		fixed bin (15),
  8    76 	  2 quick_stream_storage,
  8    77 	    3 a_stored		fixed bin (35),
  8    78 	    3 q_stored		fixed bin (35);
  8    79 
  8    80 /* external static */
  8    81 
  8    82 declare	(
  8    83 	plio2_data_$pspstat,
  8    84 	plio2_data_$fsbpstat,
  8    85 	plio2_data_$badfsbp,
  8    86 	plio2_data_$fabpstat,
  8    87 	plio2_data_$fab2pstat,
  8    88 	plio2_data_$pliostringfsbp
  8    89 	)			ptr external static;
  8    90 
  8    91 dcl	plio2_data_fsb_thread_	ptr ext static initial (null);
  8    92 						/* *system var */
  8    93 
  8    94 declare	(
  8    95 	plio2_data_$badjob		bit (36) aligned,
  8    96 	plio2_data_$undef_file_sw	bit (1) aligned
  8    97 	)			external static;
  8    98 
  8    99 /* END INCLUDE FILE ... plio2_ps.incl.pl1 */
       53 
       54 /* 		START   */
       55 	psp=pspp;
       56 	if ps.prep^=0 then call plio2_put_util_$put_prep_(psp);
       57 
       58 	ps.vp=ps.value_p;
       59 	ps.descr=ps.descriptor;
       60 	go to common;
       61 
       62 
       63 err232:
       64 		/* bad descriptor of output item */
       65 	erno=232;
       66 	goto sandr;
       67 
       68 string_too_big:
       69 err242:
       70 		/* strings of length >256 not handled */
       71 	erno=242;
       72 	goto sandr;
       73 
       74 sandr:	call plio2_signal_$s_(psp,"ERROR","LDO",erno);
       75 	return;
       76 
       77 ldo_for_data:entry(pspp);
       78 	psp=pspp;
       79 		/*  desc & ptr have already been moved to ps.vp,ps.descr
       80*		    and put_prep_ has already been called             */
       81 
       82 
       83 
       84 common:
       85 	on conversion call plio2_resig_(psp);
       86 
       87 	i=0;
       88 	substr(addr(i)->based_bit36,30,7)=substr(ps.descr,1,7);
       89 	if i<77 then goto standard_types;		/* arithmetic data types 1-12	*/
       90 	if i<83 then goto non_standard_types;		/* address, area, structure data types 13-18	*/
       91 	if i<87 then goto standard_types;		/* string data types 19-22	*/
       92 	if i=87 then goto non_standard_types;		/* file data type 23	*/
       93 						/* unsigned binary and packed decimal data types 33-46	*/
       94 standard_types:
       95 
       96 	call dnd$with_strings(ps.descr,addr(descriptive),code);
       97 	if code=1 then goto err232;
       98 	if type5.cr="s" then go to is_string;
       99 
      100 	call assign_type_d(ps.descr,psp,picture_p,intype,inscale_prec);
      101 
      102 	if ps.descr="0"b
      103 	then do;
      104 		intype = char_desc*2;
      105 		if picture_p->picture_image.type = cplx_fixed_picture
      106 		|  picture_p->picture_image.type = cplx_float_picture
      107 		then inscale_prec = picture_p->picture_image.varlength * 2;	/* a cplx pic's varlength is len of real part only */
      108 		else inscale_prec = picture_p->picture_image.varlength;
      109 	end;
      110 
      111 	call assign_(addr(v_output),v_char_desc*2,516,ps.vp,intype,inscale_prec);
      112 
      113 	n_out = length(v_output);
      114 	output = v_output;
      115 
      116 publish:
      117 
      118 
      119 	/* put_field will put on the terminal blank
      120*	   or, if it is the last data directed, the semi in due course
      121*	   as "    x=5 "  OR  "     x=5;"    */
      122 
      123 	call plio2_put_util_$put_field_(psp,addr(output),n_out);
      124 	return;
      125 
      126 is_string:
      127 	if type5.ff="v"  /* varying */ then descriptive.prec=addrel(ps.vp,-1)->based_VL;
      128 	if descriptive.prec > 256 then goto string_too_big;
      129 	if type5.bd="b" then go to bits;
      130 	if ps.fsbp->fsb.switch.print then if ps.job.list then
      131 		do;
      132 		n_out=descriptive.prec;
      133 		substr(output,1,n_out)=substr(ps.vp->based_chars,1,n_out);
      134 		go to publish;
      135 		end;
      136 
      137 	substr(output,1,1)="""";
      138 	n_out=2;
      139 
      140 	do i=1 to descriptive.prec;
      141 	x=substr(ps.vp->based_chars,i,1);
      142 	if x="""" then
      143 		do;
      144 		substr(output,n_out,1)="""";
      145 		n_out=n_out+1;
      146 		end;
      147 	substr(output,n_out,1)=x;
      148 	n_out=n_out+1;
      149 	end;
      150 
      151 	substr(output,n_out,1)="""";
      152 	go to publish;
      153 
      154 bits:
      155 
      156 	substr(output,1,1)="""";
      157 	do i=1 to descriptive.prec;
      158 	if substr(ps.vp->based_bits,i,1) then x="1";
      159 	else x="0";
      160 	substr(output,i+1,1)=x;
      161 	end;
      162 
      163 	n_out=descriptive.prec+3;
      164 	substr(output,n_out-1,2)="""b";
      165 	go to publish;
      166 
      167 /*  */
      168 
      169 	dcl packed bit(1) aligned;
      170 	dcl b36 bit(36) aligned;
      171 	dcl pt ptr;
      172 	dcl based_ptr ptr based;
      173 	dcl based_packed_ptr ptr unaligned based;
      174 	dcl title5 char(5) aligned;
      175 	dcl title7 char(7) aligned;
      176 	dcl ioa_$rsnnl entry options(variable);
      177 
      178 non_standard_types:
      179 
      180 	packed=substr(ps.descr,8,1);
      181 	goto nst(i);
      182 
      183 nst(77):
      184 	if packed then pt=ps.vp->based_packed_ptr;
      185 	          else pt=ps.vp->based_ptr;
      186 
      187 	title7="pointer";
      188 single_ptr:
      189 	call ioa_$rsnnl("^a(^p)",output,n_out,title7,pt);
      190 	goto publish;
      191 
      192 nst(78):
      193 	if packed then b36=substr(ps.vp->based_bits,1,36);
      194 	          else b36=ps.vp->based_bit36;
      195 	call ioa_$rsnnl("offset(^w)",output,n_out,b36);
      196 	goto publish;
      197 
      198 nst(79):
      199 	title5="label";
      200 	goto double_ptr;
      201 
      202 nst(80):
      203 	title5="entry";
      204 	goto double_ptr;
      205 
      206 nst(87):
      207 	title5="file ";
      208 	goto double_ptr;
      209 
      210 double_ptr:
      211 	call ioa_$rsnnl("^a(^p,^p)",output,n_out,title5,ps.vp->p_vector(1),ps.vp->p_vector(2));
      212 	goto publish;
      213 
      214 nst(82):
      215 	title7="area at";
      216 	goto single_ptr;
      217 
      218 nst(81):
      219 	substr(output,1,9)="structure";
      220 	n_out=9;
      221 	goto publish;
      222 
      223 end plio2_ldo_;
	SOURCE FILES USED IN THIS COMPILATION.

LINE      NUMBER  DATE MODIFIED     NAME			PATHNAME
             0    10/03/83  1005.4  plio2_ldo_.pl1                    >spec>on>pl128d>plio2_ldo_.pl1
46           1    11/30/78  1227.5  desc_dcls.incl.pl1                >ldd>include>desc_dcls.incl.pl1
47           2    01/12/79  1059.7  desc_types.incl.pl1               >ldd>include>desc_types.incl.pl1
48           3    11/30/78  1227.5  descriptor.incl.pl1               >ldd>include>descriptor.incl.pl1
49           4    06/28/79  1204.8  picture_image.incl.pl1            >ldd>include>picture_image.incl.pl1
50           5    05/03/76  1320.4  picture_types.incl.pl1            >ldd>include>picture_types.incl.pl1
51           6    09/14/77  1705.7  picture_util.incl.pl1             >ldd>include>picture_util.incl.pl1
52           7    08/13/81  2043.5  plio2_fsb.incl.pl1                >ldd>include>plio2_fsb.incl.pl1
53           8    08/13/81  2043.5  plio2_ps.incl.pl1                 >ldd>include>plio2_ps.incl.pl1
	NAMES DECLARED IN THIS COMPILATION.

IDENTIFIER	     OFFSET    LOC STORAGE CLASS   DATA TYPE		ATTRIBUTES AND REFERENCES
								(* indicates a set context)

NAMES DECLARED BY DECLARE STATEMENT.
addr                                                   builtin function         dcl 26 ref 88 94 94 111 111 116 116
addrel                                                 builtin function         dcl 26 ref 126
assign_                         000022 constant        entry                    external dcl 1-22 ref 111
assign_type_d                   000024 constant        entry                    external dcl 6-3 ref 100
b36                             000534 automatic       bit(36)                  dcl 170 set ref 192* 194* 195*
based_VL                               based           fixed bin(35,0)          dcl 37 ref 126
based_bit36                            based           bit(36)                  dcl 17 set ref 88* 194
based_bits                             based           bit(1000)                unaligned dcl 20 ref 158 192
based_chars                            based           char(1044480)            unaligned dcl 18 ref 133 141
based_packed_ptr                       based           pointer                  unaligned dcl 173 ref 183
based_ptr                              based           pointer                  dcl 172 ref 185
bd                        0(09) 000523 automatic       char(1)                  level 3 packed unaligned dcl 40 set ref 129
char_desc                              constant        fixed bin(17,0)          initial dcl 2-1 ref 104
code                            000104 automatic       fixed bin(15,0)          dcl 21 set ref 94* 97
conversion                      000514 stack reference condition                dcl 34 ref 84
cplx_fixed_picture                     constant        fixed bin(17,0)          initial dcl 5-1 ref 105
cplx_float_picture                     constant        fixed bin(17,0)          initial dcl 5-1 ref 105
cr                              000523 automatic       char(1)                  level 3 packed unaligned dcl 40 set ref 98
descr                    54            based           bit(36)                  level 2 dcl 8-10 set ref 59* 88 94* 100* 102 178
descriptive                     000523 automatic       structure                level 1 dcl 40 set ref 94 94
descriptor               32            based           bit(36)                  level 2 dcl 8-10 ref 59
dnd$with_strings                000016 constant        entry                    external dcl 31 ref 94
erno                            000105 automatic       fixed bin(15,0)          dcl 21 set ref 63* 68* 74*
ff                        0(18) 000523 automatic       char(1)                  level 3 packed unaligned dcl 40 set ref 126
fsb                                    based           structure                level 1 dcl 7-4
fsbp                     42            based           pointer                  level 2 dcl 8-10 ref 130
i                               000107 automatic       fixed bin(15,0)          dcl 21 set ref 87* 88 89 90 91 92 140* 141* 157* 158
                                                                                  160* 181
inscale_prec                    000532 automatic       fixed bin(35,0)          dcl 1-8 set ref 100* 105* 108* 111*
intype                          000531 automatic       fixed bin(17,0)          dcl 1-5 set ref 100* 104* 111*
ioa_$rsnnl                      000026 constant        entry                    external dcl 176 ref 188 195 210
job                      26            based           structure                level 2 dcl 8-10
length                                                 builtin function         dcl 26 ref 113
list                     26(05)        based           bit(1)                   level 3 packed unaligned dcl 8-10 ref 130
n_out                           000106 automatic       fixed bin(15,0)          dcl 21 set ref 113* 116* 132* 133 133 138* 144 145*
                                                                                  145 147 148* 148 151 163* 164 188* 195* 210* 220*
output                          000110 automatic       char(516)                unaligned dcl 22 set ref 114* 116 116 133* 137* 144*
                                                                                  147* 151* 154* 160* 164* 188* 195* 210* 218*
p_vector                               based           pointer                  array dcl 19 set ref 210* 210*
packed                          000533 automatic       bit(1)                   dcl 169 set ref 178* 183 192
picture_image                          based           structure                level 1 dcl 4-6
picture_p                       000102 automatic       pointer                  dcl 15 set ref 100* 105 105 105 108
plio2_put_util_$put_field_      000012 constant        entry                    external dcl 29 ref 116
plio2_put_util_$put_prep_       000014 constant        entry                    external dcl 30 ref 56
plio2_resig_                    000020 constant        entry                    external dcl 33 ref 84
plio2_signal_$s_                000010 constant        entry                    external dcl 28 ref 74
prec                      2     000523 automatic       fixed bin(15,0)          level 2 dcl 40 set ref 126* 128 132 140 157 163
prep                     35            based           fixed bin(15,0)          level 2 dcl 8-10 ref 56
print                     0(04)        based           bit(1)                   level 3 packed unaligned dcl 7-4 ref 130
ps                                     based           structure                level 1 dcl 8-10
psp                             000100 automatic       pointer                  dcl 15 set ref 55* 56 56* 58 58 59 59 74* 78* 84* 88
                                                                                  94 100 100* 102 111 116* 126 130 130 133 141 158
                                                                                  178 183 185 192 194 210 210
pspp                                   parameter       pointer                  dcl 15 ref 12 13 55 77 78
pt                              000536 automatic       pointer                  dcl 171 set ref 183* 185* 188*
substr                                                 builtin function         dcl 26 set ref 88* 88 133* 133 137* 141 144* 147*
                                                                                  151* 154* 158 160* 164* 178 192 218*
switch                                 based           structure                level 2 dcl 7-4
title5                          000540 automatic       char(5)                  dcl 174 set ref 198* 202* 206* 210*
title7                          000542 automatic       char(7)                  dcl 175 set ref 187* 188* 214*
type                                   based           fixed bin(8,0)           level 2 packed unaligned dcl 4-6 ref 105 105
type5                           000523 automatic       structure                level 2 dcl 40
v_char_desc                            constant        fixed bin(17,0)          initial dcl 2-1 ref 111
v_output                        000311 automatic       varying char(516)        dcl 24 set ref 111 111 113 114
value_p                  30            based           pointer                  level 2 dcl 8-10 ref 58
varlength                 1            based           fixed bin(8,0)           level 2 packed unaligned dcl 4-6 ref 105 108
vp                       52            based           pointer                  level 2 dcl 8-10 set ref 58* 111* 126 133 141 158
                                                                                  183 185 192 194 210 210
x                               000522 automatic       char(1)                  dcl 39 set ref 141* 142 147 158* 159* 160

NAMES DECLARED BY DECLARE STATEMENT AND NEVER REFERENCED.
D_fixed_cplx_desc                      internal static fixed bin(17,0)          initial dcl 2-1
D_fixed_real_desc                      internal static fixed bin(17,0)          initial dcl 2-1
D_float_cplx_desc                      internal static fixed bin(17,0)          initial dcl 2-1
D_float_real_desc                      internal static fixed bin(17,0)          initial dcl 2-1
area_desc                              internal static fixed bin(17,0)          initial dcl 2-1
assign_round_                   000000 constant        entry                    external dcl 1-22
assign_truncate_                000000 constant        entry                    external dcl 1-22
assign_type_p                   000000 constant        entry                    external dcl 6-3
bit_desc                               internal static fixed bin(17,0)          initial dcl 2-1
char1                                  based           char(1)                  unaligned dcl 6-3
char_picture                           internal static fixed bin(17,0)          initial dcl 5-1
char_to_numeric_                000000 constant        entry                    external dcl 1-22
d_fixed_cplx_desc                      internal static fixed bin(17,0)          initial dcl 2-1
d_fixed_real_desc                      internal static fixed bin(17,0)          initial dcl 2-1
d_float_cplx_desc                      internal static fixed bin(17,0)          initial dcl 2-1
d_float_real_desc                      internal static fixed bin(17,0)          initial dcl 2-1
desc_                                  automatic       structure                level 1 dcl 3-3
entry_desc                             internal static fixed bin(17,0)          initial dcl 2-1
file_desc                              internal static fixed bin(17,0)          initial dcl 2-1
fixed                                                  builtin function         dcl 26
inclength                              based           fixed bin(31,0)          dcl 1-19
info                                   based           structure                level 1 dcl 1-11
label_desc                             internal static fixed bin(17,0)          initial dcl 2-1
offset_desc                            internal static fixed bin(17,0)          initial dcl 2-1
outclength                             based           fixed bin(31,0)          dcl 1-20
outfo                                  based           structure                level 1 dcl 1-15
outscale_prec                          automatic       fixed bin(35,0)          dcl 1-8
outtype                                automatic       fixed bin(17,0)          dcl 1-5
pack_picture_                   000000 constant        entry                    external dcl 6-3
picture_char_type                      internal static fixed bin(8,0)           initial unaligned dcl 4-20
picture_complexfix_type                internal static fixed bin(8,0)           initial unaligned dcl 4-20
picture_complexflo_type                internal static fixed bin(8,0)           initial unaligned dcl 4-20
picture_realfix_type                   internal static fixed bin(8,0)           initial unaligned dcl 4-20
picture_realflo_type                   internal static fixed bin(8,0)           initial unaligned dcl 4-20
plio2_data_$badfsbp                    external static pointer                  dcl 8-82
plio2_data_$badjob                     external static bit(36)                  dcl 8-94
plio2_data_$fab2pstat                  external static pointer                  dcl 8-82
plio2_data_$fabpstat                   external static pointer                  dcl 8-82
plio2_data_$fsbpstat                   external static pointer                  dcl 8-82
plio2_data_$pliostringfsbp             external static pointer                  dcl 8-82
plio2_data_$pspstat                    external static pointer                  dcl 8-82
plio2_data_$undef_file_sw              external static bit(1)                   dcl 8-94
plio2_data_fsb_thread_                 external static pointer                  initial dcl 8-91
pointer_desc                           internal static fixed bin(17,0)          initial dcl 2-1
real_fixed_picture                     internal static fixed bin(17,0)          initial dcl 5-1
real_float_picture                     internal static fixed bin(17,0)          initial dcl 5-1
s_fixed_cplx_desc                      internal static fixed bin(17,0)          initial dcl 2-1
s_fixed_real_desc                      internal static fixed bin(17,0)          initial dcl 2-1
s_float_cplx_desc                      internal static fixed bin(17,0)          initial dcl 2-1
s_float_real_desc                      internal static fixed bin(17,0)          initial dcl 2-1
structure_desc                         internal static fixed bin(17,0)          initial dcl 2-1
unpack_picture_                 000000 constant        entry                    external dcl 6-3
unspec                                                 builtin function         dcl 26
v_bit_desc                             internal static fixed bin(17,0)          initial dcl 2-1
validate_picture_               000000 constant        entry                    external dcl 6-3
xbuf                                   based           char(1000)               unaligned dcl 7-80

NAMES DECLARED BY EXPLICIT CONTEXT.
bits                            000517 constant        label                    dcl 154 ref 129
common                          000201 constant        label                    dcl 84 ref 60
double_ptr                      000714 constant        label                    dcl 210 ref 200 204 208
err232                          000125 constant        label                    dcl 63 set ref 97
err242                          000130 constant        label                    dcl 68
is_string                       000412 constant        label                    dcl 126 ref 98
ldo_for_data                    000167 constant        entry                    external dcl 77
non_standard_types              000560 constant        label                    dcl 178 ref 90 92
nst                             000000 constant        label                    array(77:87) dcl 183 ref 181
plio2_ldo_                      000063 constant        entry                    external dcl 12
publish                         000374 constant        label                    dcl 116 ref 134 152 165 190 196 212 221
put_value_list_                 000074 constant        entry                    external dcl 13
sandr                           000133 constant        label                    dcl 74 ref 66 72
single_ptr                      000604 constant        label                    dcl 188 ref 216
standard_types                  000245 constant        label                    dcl 94 ref 89 91
string_too_big                  000130 constant        label                    dcl 68 ref 128

THERE WERE NO NAMES DECLARED BY CONTEXT OR IMPLICATION.

STORAGE REQUIREMENTS FOR THIS PROGRAM.

	Object	Text	Link	Symbol	Defs	Static
Start          0       0      1134        1164     771        1144
Length      1514     771        30         313     143           0

BLOCK NAME	         STACK SIZE     TYPE		WHY NONQUICK/WHO SHARES STACK FRAME
plio2_ldo_                          432 external procedure  is an external procedure.  
on unit on line 84                   68 on unit               

STORAGE FOR AUTOMATIC VARIABLES.

STACK FRAME                 LOC IDENTIFIER                  BLOCK NAME
plio2_ldo_               000100 psp                         plio2_ldo_
                         000102 picture_p                   plio2_ldo_
                         000104 code                        plio2_ldo_
                         000105 erno                        plio2_ldo_
                         000106 n_out                       plio2_ldo_
                         000107 i                           plio2_ldo_
                         000110 output                      plio2_ldo_
                         000311 v_output                    plio2_ldo_
                         000522 x                           plio2_ldo_
                         000523 descriptive                 plio2_ldo_
                         000531 intype                      plio2_ldo_
                         000532 inscale_prec                plio2_ldo_
                         000533 packed                      plio2_ldo_
                         000534 b36                         plio2_ldo_
                         000536 pt                          plio2_ldo_
                         000540 title5                      plio2_ldo_
                         000542 title7                      plio2_ldo_

THE FOLLOWING EXTERNAL OPERATORS ARE USED BY THIS PROGRAM.
call_ext_out_desc   call_ext_out        return              enable              ext_entry           int_entry
set_support

THE FOLLOWING EXTERNAL ENTRIES ARE CALLED BY THIS PROGRAM.
assign_                       assign_type_d                 dnd$with_strings              ioa_$rsnnl
plio2_put_util_$put_field_    plio2_put_util_$put_prep_     plio2_resig_                  plio2_signal_$s_

NO EXTERNAL VARIABLES ARE USED BY THIS PROGRAM.




   LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC   
     12 000060        13 000071        55 000102        56 000106        58 000116        59 000122        60 000124
     63 000125        66 000127        68 000130        72 000132        74 000133        75 000164        77 000165
     78 000175        84 000201        87 000226        88 000227        89 000235        90 000240        91 000242
     92 000244        94 000245        97 000262        98 000265       100 000271       102 000311       104 000314
    105 000316       108 000333       111 000337       113 000366       114 000370       116 000374       124 000411
    126 000412       128 000424       129 000427       130 000434       132 000443       133 000445       134 000451
    137 000452       138 000454       140 000456       141 000465       142 000473       144 000476       145 000502
    147 000503       148 000507       149 000510       151 000512       152 000516       154 000517       157 000521
    158 000531       159 000542       160 000544       161 000547       163 000551       164 000554       165 000557
    178 000560       181 000564       183 000566       185 000577       187 000602       188 000604       190 000637
    192 000640       194 000647       195 000651       196 000702       198 000703       200 000705       202 000706
    204 000710       206 000711       208 000713       210 000714       212 000756       214 000757       216 000761
    218 000762       220 000765       221 000767


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
