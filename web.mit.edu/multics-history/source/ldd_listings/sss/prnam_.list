	COMPILATION LISTING OF SEGMENT prnam_
	Compiled by: Multics PL/I Compiler, Release 31a, of October 12, 1988
	Compiled at: Honeywell Bull, Phoenix AZ, SysM
	Compiled on: 10/17/88  1004.7 mst Mon
	    Options: optimize map

        1 /****^  ***********************************************************
        2*        *                                                         *
        3*        * Copyright, (C) Honeywell Bull Inc., 1988                *
        4*        *                                                         *
        5*        * Copyright, (C) Honeywell Information Systems Inc., 1982 *
        6*        *                                                         *
        7*        *********************************************************** */
        8 
        9 /* ******************************************************
       10*   *                                                    *
       11*   *                                                    *
       12*   * Copyright (c) 1972 by Massachusetts Institute of   *
       13*   * Technology and Honeywell Information Systems, Inc. *
       14*   *                                                    *
       15*   *                                                    *
       16*   ****************************************************** */
       17 
       18 prnam_:	proc( link );		/* this procedure puts symbols in the listing for postp2_ by
       19*				faking a source line */
       20 /**/
  1     1 /* Begin include file varcom.incl.pl1. */
  1     2 /* RHG added new variables 9/7/70. */
  1     3 /* RFM added new cells for new object segment format and first-reference trap, 27 March 1972. */
  1     4 /* RFM added include file stuff, then cross referencer stuff, 23 July 1972. */
  1     5 /* Last modified on 07/23/72 at 04:19:25 by R F Mabee. */
  1     6   
  1     7  declare	1 eb_data_$varcom external aligned,
  1     8 	  2 (brk(2),	nbrk(2),	sym(8),	dsym(8),old_locsym,	pc,	spc,	tpc,
  1     9 	   pclst,		p2pcl,	old_ndpcls,	tvorg,	tvcnt,	tvlth,	litorg,
  1    10 	   litc,		deforg,	defc,	defcnt,	stkc,	lnkc,	lnkno,
  1    11 	   litlst,	old_ndltls, lnklst,	old_ndlkls,	explst,	blklst,	namlst,
  1    12 	   trplst,	xdflst,	tvlst,	begin_line, tpass1,	tpass2,	tpostp,
  1    13 	   tinhib,	tmmode,	txonly,	tmm2,	txo2,	tprot,	tcall,
  1    14 	   tmvdef,	tpulnk,	tfatal,	calrho,	lreter,	passwd,	binlin,
  1    15 	   nboxes,   box(0:210),   myfil,	mynam,	myblk,	mylnk,	tpost1 ) fixed bin (26) ,
  1    16 	  2 source_printed bit(1) aligned,
  1    17 	  2 (ndpcls,	ndltls,	ndlkls,	ndtvls) ptr,
  1    18 	  2 (basno,	value,	admod,	b29,	iaddr,	symlnk ) fixed bin (26),
  1    19 	  2 (itxtmod, ilnkmod, entrieslc, include_file_list, include_index,
  1    20 	     first_ref_trap_proc_linkno, first_ref_trap_arg_linkno,
  1    21 	     text_section_length) fixed binary (26),
  1    22 	  2 (include_info_stack, include_name_list_base, include_name_list_top) pointer,
  1    23 	  2 symbol_tree_rel fixed binary (26);
  1    24 
  1    25 /* End of the include file varcom.incl.pl1. */
       21 
  2     1 
  2     2 
  2     3 
  2     4 	/* the include file LSTCOM */
  2     5 
  2     6 declare 1 eb_data_$lstcom ext aligned,
  2     7         2 tnolst fixed bin (17) ;
  2     8 
  2     9 
  2    10 	/* end of the include file LSTCOM */
  2    11 
       22 
       23 /**/
       24 dcl	(link, segname, symname)	ptr;
       25 dcl	(count,count2)	fixed bin;
       26 
       27 dcl	1 array_overlay	based aligned,
       28 	2 words(count2)	bit(36) aligned;
       29 
       30 dcl	char	based char(1) aligned;
       31 
       32 dcl	1 eb_data_$oulst external, 2 oulst char(68) aligned;
       33 /**/
       34 	if tnolst ^= 0 then return;				/* ignore call if no listing */
       35 	count = fixed(unspec(substr(link->char,1,1)),9,0);	/* get the count of the string */
       36 	count2 = divide(count+4, 4, 17, 0);			/* convert it to words */
       37 	addr(oulst) -> array_overlay = link -> array_overlay;	/* do a word by word move */
       38 common:	substr(oulst, count+2, 1) = "
       39 ";							/* append a new_line */
       40 	source_printed = "0"b;				/* set a flag so prwrd will print the line */
       41 	return;
       42 /**/
       43 prnam2:	entry(segname, symname);	/* like prnam except takes two symbols and puts a | between them */
       44 	if tnolst ^= 0 then return;				/* ignore the call if no listing */
       45 	count = fixed(unspec(substr(segname->char,1,1)),9,0);	/* get the character count */
       46 	count2 = divide(count+4, 4, 17, 0);			/* get the word count */
       47 	addr(oulst) -> array_overlay = segname -> array_overlay;	/* do a word by word move */
       48 	count = count + 1;					/* add a character for the count at the beginning */
       49 	substr(oulst, count+1, 1) = "|";			/* put in the | */
       50 	count2 = fixed(unspec(substr(symname->char,1,1)),9,0);	/* get the character count of the second symbol */
       51 	substr(oulst, count+2, count2) = substr(symname->char, 2, count2);/*append it to the first*/
       52 	count = count + count2;				/* get the total count */
       53 	goto common;					/* and finish up */
       54 /**/
       55 	end prnam_;
	SOURCE FILES USED IN THIS COMPILATION.

LINE      NUMBER  DATE MODIFIED     NAME			PATHNAME
             0    10/17/88  0938.4  prnam_.pl1                        >spec>install>1170>prnam_.pl1
21           1    10/21/74  1242.9  varcom.incl.pl1                   >ldd>include>varcom.incl.pl1
22           2    05/06/74  1742.2  lstcom.incl.pl1                   >ldd>include>lstcom.incl.pl1
	NAMES DECLARED IN THIS COMPILATION.

IDENTIFIER	     OFFSET    LOC STORAGE CLASS   DATA TYPE		ATTRIBUTES AND REFERENCES
								(* indicates a set context)

NAMES DECLARED BY DECLARE STATEMENT.
array_overlay                          based           structure                level 1 dcl 27 set ref 37* 37 47* 47
char                                   based           char(1)                  dcl 30 ref 35 45 50 51
count                           000100 automatic       fixed bin(17,0)          dcl 25 set ref 35* 36 38 45* 46 48* 48 49 51 52* 52
count2                          000101 automatic       fixed bin(17,0)          dcl 25 set ref 36* 37 46* 47 50* 51 51 52
eb_data_$lstcom                 000012 external static structure                level 1 dcl 2-6
eb_data_$oulst                  000014 external static structure                level 1 unaligned dcl 32
eb_data_$varcom                 000010 external static structure                level 1 dcl 1-7
link                                   parameter       pointer                  dcl 24 ref 18 35 37
oulst                           000014 external static char(68)                 level 2 dcl 32 set ref 37 38* 47 49* 51*
segname                                parameter       pointer                  dcl 24 ref 43 45 47
source_printed          433     000010 external static bit(1)                   level 2 dcl 1-7 set ref 40*
symname                                parameter       pointer                  dcl 24 ref 43 50 51
tnolst                          000012 external static fixed bin(17,0)          level 2 dcl 2-6 ref 34 44

NAMES DECLARED BY EXPLICIT CONTEXT.
common                          000031 constant        label                    dcl 38 set ref 53
prnam2                          000046 constant        entry                    external dcl 43
prnam_                          000004 constant        entry                    external dcl 18

NAMES DECLARED BY CONTEXT OR IMPLICATION.
addr                                                   builtin function         ref 37 47
divide                                                 builtin function         ref 36 46
fixed                                                  builtin function         ref 35 45 50
substr                                                 builtin function         set ref 35 38* 45 49* 50 51* 51
unspec                                                 builtin function         ref 35 45 50

STORAGE REQUIREMENTS FOR THIS PROGRAM.

	Object	Text	Link	Symbol	Defs	Static
Start          0       0       172         210     117         202
Length       404     117        16         157      52           0

BLOCK NAME	         STACK SIZE     TYPE		WHY NONQUICK/WHO SHARES STACK FRAME
prnam_                               66 external procedure  is an external procedure.  

STORAGE FOR AUTOMATIC VARIABLES.

STACK FRAME                 LOC IDENTIFIER                  BLOCK NAME
prnam_                   000100 count                       prnam_
                         000101 count2                      prnam_

THE FOLLOWING EXTERNAL OPERATORS ARE USED BY THIS PROGRAM.
return_mac          ext_entry

NO EXTERNAL ENTRIES ARE CALLED BY THIS PROGRAM.

THE FOLLOWING EXTERNAL VARIABLES ARE USED BY THIS PROGRAM.
eb_data_$lstcom               eb_data_$oulst                eb_data_$varcom




   LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC   
     18 000001        34 000011        35 000013        36 000020        37 000023        38 000031        40 000037
     41 000041        43 000042        44 000053        45 000056        46 000063        47 000066        48 000074
     49 000075        50 000102        51 000106        52 000114        53 000116


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
