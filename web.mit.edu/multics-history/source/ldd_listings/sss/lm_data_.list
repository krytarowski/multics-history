	COMPILATION LISTING OF SEGMENT !BBBJPPGnJZKzJp
	Compiled by: Multics PL/I Compiler, Release 28d, of October 4, 1983
	Compiled at: Honeywell Multics Op. - System M
	Compiled on: 01/03/85  1421.8 mst Thu
	    Options: table map

        1 /* ***********************************************************
        2*   *                                                         *
        3*   * Copyright, (C) Honeywell Information Systems Inc., 1983 *
        4*   *                                                         *
        5*   *********************************************************** */
        6 /* Description:
        7*   Lock manager per_process definitions */
        8 
        9 /* HISTORY:
       10*
       11*Written by BIM, 0483.
       12*Modified:
       13*830426 added trace_ switch 
       14*830506 BIM added ev_channel so we wouldn't create one per txn. 
       15*841018 SSC added lock_list_meters_ptr
       16**/
       17 
       18 /* format: style3,idind30 */
       19 lm_data_:
       20      procedure;
       21 
       22 /*  Automatic  */
       23 
       24 dcl	code			fixed bin (35);
       25 dcl	1 local_cds_args		aligned like cds_args;
       26 
       27 dcl	1 lock_data		aligned,
       28 	  2 current_txn_id		bit (36) aligned init (""b),
       29 	  2 txn_table_ptr             pointer init (null ()),
       30 	  2 lock_seg_ptr		pointer init (null ()),
       31 	  2 lock_segments_ptr	pointer init (null ()),
       32 	  2 n_lock_segments		fixed bin init (0),
       33 	  2 lock_per_process_ptr	pointer init (null ()),
       34 	  2 fast_lock_data_ptr        pointer init (null ()),
       35 	  2 lock_list_meters_ptr	pointer init (null ()),
       36 	  2 trace 		bit (1) aligned init ("0"b),
       37 	  2 ev_channel		fixed bin (71) aligned init (0);
       38 
       39 /*  Static  */
       40 
       41 dcl	EXCLUDE_ARRAY		(1) char (32) int static options (constant) init ("pad*");
       42 dcl	MYNAME			char (15) int static options (constant) init ("lm_data_");
       43 
       44 /*  Entry  */
       45 
       46 dcl	com_err_			entry options (variable);
       47 dcl	create_data_segment_	entry (ptr, fixed bin (35));
       48 
       49 /*  Builtin  */
       50 
       51 dcl	addr			builtin;
       52 dcl	hbound			builtin;
       53 dcl	null			builtin;
       54 dcl	size			builtin;
       55 dcl	unspec			builtin;
       56 
       57 
       58 	unspec (local_cds_args) = ""b;
       59 
       60 	local_cds_args.sections (2).p = addr (lock_data);
       61 	local_cds_args.sections (2).len = size (lock_data);
       62 	local_cds_args.sections (2).struct_name = "lock_data";
       63 	local_cds_args.seg_name = MYNAME;
       64 	local_cds_args.exclude_array_ptr = addr (EXCLUDE_ARRAY);
       65 	local_cds_args.num_exclude_names = hbound (EXCLUDE_ARRAY, 1);
       66 	local_cds_args.switches.have_static = "1"b;
       67 
       68 	call create_data_segment_ (addr (local_cds_args), code);
       69 	if code ^= 0
       70 	then call com_err_ (code, MYNAME);
       71 
       72 	return;
       73 
  1     1 /* BEGIN INCLUDE FILE cds_args.incl.pl1 */
  1     2 
  1     3 dcl 1 cds_args based aligned,
  1     4     2 sections (2),
  1     5       3 p ptr,					/* pointer to data for text/static section */
  1     6       3 len fixed bin (18),				/* size of text/static section */
  1     7       3 struct_name char (32),			/* name of declared structure for this section */
  1     8     2 seg_name char (32),				/* name to create segment by */
  1     9     2 num_exclude_names fixed bin,			/* number of names in exclude array */
  1    10     2 exclude_array_ptr ptr,				/* pointer to array of exclude names */
  1    11     2 switches,					/* control switches */
  1    12       3 defs_in_link bit (1) unal,			/* says put defs in linkage */
  1    13       3 separate_static bit (1) unal,			/* says separate static section is wanted */
  1    14       3 have_text bit (1) unal,			/* ON if text section given */
  1    15       3 have_static bit (1) unal,			/* ON if static section given */
  1    16       3 pad bit (32) unal;
  1    17 
  1    18 dcl  exclude_names (1) char (32) based;			/* pointed to be cds_args.exclude_array_ptr */
  1    19 
  1    20 /* END INCLUDE FILE cds_args.incl.pl1 */
       74 
       75 
       76      end lm_data_;
	SOURCE FILES USED IN THIS COMPILATION.

LINE      NUMBER  DATE MODIFIED     NAME			PATHNAME
             0    01/03/85  1151.1  !BBBJPPGnJZKzJp.pl1               >spec>temp>famis1>lm_data_.cds
74           1    04/01/76  2209.5  cds_args.incl.pl1                 >ldd>include>cds_args.incl.pl1
	NAMES DECLARED IN THIS COMPILATION.

IDENTIFIER	     OFFSET    LOC STORAGE CLASS   DATA TYPE		ATTRIBUTES AND REFERENCES
								(* indicates a set context)

NAMES DECLARED BY DECLARE STATEMENT.
EXCLUDE_ARRAY                   000004 constant        char(32)                 initial array unaligned dcl 41 set ref 64 65
MYNAME                          000000 constant        char(15)                 initial unaligned dcl 42 set ref 63 69*
addr                                                   builtin function         dcl 51 ref 60 64 68 68
cds_args                               based           structure                level 1 dcl 1-3
code                            000100 automatic       fixed bin(35,0)          dcl 24 set ref 68* 69 69*
com_err_                        000012 constant        entry                    external dcl 46 ref 69
create_data_segment_            000014 constant        entry                    external dcl 47 ref 68
current_txn_id                  000150 automatic       bit(36)                  initial level 2 dcl 27 set ref 27*
ev_channel               22     000150 automatic       fixed bin(71,0)          initial level 2 dcl 27 set ref 27*
exclude_array_ptr        42     000102 automatic       pointer                  level 2 dcl 25 set ref 64*
fast_lock_data_ptr       14     000150 automatic       pointer                  initial level 2 dcl 27 set ref 27*
have_static              44(03) 000102 automatic       bit(1)                   level 3 packed unaligned dcl 25 set ref 66*
hbound                                                 builtin function         dcl 52 ref 65
len                       2     000102 automatic       fixed bin(18,0)          array level 3 dcl 25 set ref 61*
local_cds_args                  000102 automatic       structure                level 1 dcl 25 set ref 58* 68 68
lock_data                       000150 automatic       structure                level 1 dcl 27 set ref 60 61
lock_list_meters_ptr     16     000150 automatic       pointer                  initial level 2 dcl 27 set ref 27*
lock_per_process_ptr     12     000150 automatic       pointer                  initial level 2 dcl 27 set ref 27*
lock_seg_ptr              4     000150 automatic       pointer                  initial level 2 dcl 27 set ref 27*
lock_segments_ptr         6     000150 automatic       pointer                  initial level 2 dcl 27 set ref 27*
n_lock_segments          10     000150 automatic       fixed bin(17,0)          initial level 2 dcl 27 set ref 27*
null                                                   builtin function         dcl 53 ref 27 27 27 27 27 27
num_exclude_names        40     000102 automatic       fixed bin(17,0)          level 2 dcl 25 set ref 65*
p                               000102 automatic       pointer                  array level 3 dcl 25 set ref 60*
sections                        000102 automatic       structure                array level 2 dcl 25
seg_name                 30     000102 automatic       char(32)                 level 2 dcl 25 set ref 63*
size                                                   builtin function         dcl 54 ref 61
struct_name               3     000102 automatic       char(32)                 array level 3 dcl 25 set ref 62*
switches                 44     000102 automatic       structure                level 2 dcl 25
trace                    20     000150 automatic       bit(1)                   initial level 2 dcl 27 set ref 27*
txn_table_ptr             2     000150 automatic       pointer                  initial level 2 dcl 27 set ref 27*
unspec                                                 builtin function         dcl 55 set ref 58*

NAME DECLARED BY DECLARE STATEMENT AND NEVER REFERENCED.
exclude_names                          based           char(32)                 array unaligned dcl 1-18

NAME DECLARED BY EXPLICIT CONTEXT.
lm_data_                        000026 constant        entry                    external dcl 19

THERE WERE NO NAMES DECLARED BY CONTEXT OR IMPLICATION.

STORAGE REQUIREMENTS FOR THIS PROGRAM.

	Object	Text	Link	Symbol	Defs	Static
Start          0       0       176         214     124         206
Length      1322     124        16        1071      52           0

BLOCK NAME	         STACK SIZE     TYPE		WHY NONQUICK/WHO SHARES STACK FRAME
lm_data_                            142 external procedure  is an external procedure.  

STORAGE FOR AUTOMATIC VARIABLES.

STACK FRAME                 LOC IDENTIFIER                  BLOCK NAME
lm_data_                 000100 code                        lm_data_
                         000102 local_cds_args              lm_data_
                         000150 lock_data                   lm_data_

THE FOLLOWING EXTERNAL OPERATORS ARE USED BY THIS PROGRAM.
call_ext_out_desc   call_ext_out        return              ext_entry

THE FOLLOWING EXTERNAL ENTRIES ARE CALLED BY THIS PROGRAM.
com_err_                      create_data_segment_

NO EXTERNAL VARIABLES ARE USED BY THIS PROGRAM.




   LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC   
     19 000025        27 000033        58 000047        60 000052        61 000054        62 000056        63 000061
     64 000064        65 000066        66 000070        68 000072        69 000104        72 000123


Object Segment >spec>temp>famis1>lm_data_
Created on 01/03/85  1422.0 mst Thu
by GJohnson.SysMaint.m
using create_data_segment_, Version II of Friday, November 30, 1984

        Object    Text    Defs    Link    Symb  Static
Start        0       0       0     132     166     142
Length     341       0     132      34     137      24


12 Definitions:


segname:    lm_data_

link|10         current_txn_id
link|32         ev_channel
link|24         fast_lock_data_ptr
link|26         lock_list_meters_ptr
link|22         lock_per_process_ptr
link|14         lock_seg_ptr
link|16         lock_segments_ptr
link|20         n_lock_segments
symb|0          symbol_table
link|30         trace
link|12         txn_table_ptr


No Links.





                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
