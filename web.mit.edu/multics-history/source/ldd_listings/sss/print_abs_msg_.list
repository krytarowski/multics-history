	COMPILATION LISTING OF SEGMENT print_abs_msg_
	Compiled by: Multics PL/I Compiler, Release 28d, of October 4, 1983
	Compiled at: Honeywell Multics Op. - System M
	Compiled on: 10/15/84  1042.2 mst Mon
	    Options: optimize map

        1 /* ***********************************************************
        2*   *                                                         *
        3*   * Copyright, (C) Honeywell Information Systems Inc., 1982 *
        4*   *                                                         *
        5*   * Copyright (c) 1972 by Massachusetts Institute of        *
        6*   * Technology and Honeywell Information Systems, Inc.      *
        7*   *                                                         *
        8*   *********************************************************** */
        9 
       10 
       11 /* format: style2 */
       12 /* First thusly manifested at some unknown time, courtesy of some masked (and wired) man -- probably BIM. */
       13 /* Fixed to rtrim its control strings, to prevent trailing space in absouts 09/15/82 S. Herbst */
       14 /* Modified October 1982 by E. N. Kittlitz to print absentee request id */
       15 /* Modified June 1984 by J A Falksen to utilize date_time_$format("date_time",... */
       16 
       17 print_abs_msg_:
       18 print_abs_logout_msg_:
       19      procedure;					/* synonym for logout */
       20 
       21 
       22 	dcl     request_id		 fixed bin (71);
       23 	dcl     time		 char (64)var;
       24 	dcl     person		 char (22);
       25 	dcl     project		 char (9);
       26 	dcl     login_time		 fixed bin (71);
       27 	dcl     (mins, secs)	 fixed bin (35);
       28 	dcl     minstring		 char (16);
       29 	dcl     anonymous		 fixed bin;	/* = 1 if this is an anonymous process */
       30 
       31 	dcl     date_time_$format	 entry (char(*), fixed bin(71), char(*), char(*)) returns(char(250) var);
       32 	dcl     (
       33 	        ioa_$ioa_switch,
       34 	        ioa_$rsnnl
       35 	        )			 entry options (variable);
       36 	dcl     hcs_$get_process_usage entry (ptr, fixed bin (35));
       37 	dcl     request_id_ entry (fixed bin(71)) returns(char(19));
       38 	dcl     user_info_$absentee_request_id entry (fixed bin (71));
       39 	dcl     user_info_$login_data	 entry options (variable);
       40 
       41 	dcl     logout_control	 char (120) aligned static options (constant)
       42 				 init (
       43 				 "^/^[A^;Anonymous a^]bsentee user ^a ^a logged out ^a^/CPU usage ^a, memory usage ^.1f units"
       44 				 );
       45 
       46 	dcl     login_control	 char (120) aligned static options (constant)
       47 				 init ("^/^[A^;Anonymous a^]bsentee user ^a ^a logged in: ^a, request_id: ^a");
       48 
       49 	dcl     1 data,				/* filled in by hcs_$get_process_usage */
       50 		2 wanted		 fixed bin,
       51 		2 can_get		 fixed bin,
       52 		2 cpu_usage	 fixed bin (71),
       53 		2 memory		 fixed bin (71),
       54 		2 demand_page	 fixed bin (35),
       55 		2 pre_page	 fixed bin (35),
       56 		2 virtual_cpu	 fixed bin (71);
       57 
       58 dcl  iox_$user_io ptr ext static;
       59 
       60 dcl (addr, clock, divide, float, mod, rtrim) builtin;
       61 
       62 logout:
       63      entry;
       64 	call user_info_$login_data (person, project, (""), anonymous);
       65 	data.wanted = 5;
       66 	call hcs_$get_process_usage (addr (data), (0));	/* get data for logout message */
       67 	secs = float (data.virtual_cpu, 63) / 1e6 + .5e0; /* convert microseconds to seconds, rounded */
       68 	data.memory = float (data.memory, 63) / 1e3;	/* convert memory units to kilomemory units */
       69 	if secs >= 60
       70 	then do;					/* must print out minutes */
       71 		mins = divide (secs, 60, 35, 0);	/* calculate minutes */
       72 		secs = mod (secs, 60);		/* calculate remaining seconds */
       73 		call ioa_$rsnnl ("^d min ^d sec", minstring, (0), mins, secs);
       74 	     end;
       75 	else do;					/* need seconds only */
       76 		call ioa_$rsnnl ("^d sec", minstring, (0), secs);
       77 	     end;
       78 	time = date_time_$format ("date_time",clock (),"","");   /* get time */
       79 	call ioa_$ioa_switch (iox_$user_io, rtrim (logout_control), (anonymous ^= 1), person, project, time, minstring, data.memory);  
       80 						/* print absentee logout message */
       81 
       82 	return;
       83 
       84 login:
       85      entry;
       86 
       87 	call user_info_$login_data (person, project, "", anonymous, (0), (0), login_time);
       88 	call user_info_$absentee_request_id (request_id);
       89 
       90 	time = date_time_$format ("date_time",login_time,"","");
       91 	call ioa_$ioa_switch (iox_$user_io, rtrim (login_control), (anonymous ^= 1), person, project, time, request_id_ (request_id));
       92 						/* recurse to put out the chars */
       93 	return;
       94 
       95      end print_abs_logout_msg_;
	SOURCE FILES USED IN THIS COMPILATION.

LINE      NUMBER  DATE MODIFIED     NAME			PATHNAME
             0    10/15/84  1024.0  print_abs_msg_.pl1                >spec>on>6962>print_abs_msg_.pl1
	NAMES DECLARED IN THIS COMPILATION.

IDENTIFIER	     OFFSET    LOC STORAGE CLASS   DATA TYPE		ATTRIBUTES AND REFERENCES
								(* indicates a set context)

NAMES DECLARED BY DECLARE STATEMENT.
addr                                                   builtin function         dcl 60 ref 66 66
anonymous                       000144 automatic       fixed bin(17,0)          dcl 29 set ref 64* 79 87* 91
clock                                                  builtin function         dcl 60 ref 78 78
data                            000146 automatic       structure                level 1 unaligned dcl 49 set ref 66 66
date_time_$format               000010 constant        entry                    external dcl 31 ref 78 90
divide                                                 builtin function         dcl 60 ref 71
float                                                  builtin function         dcl 60 ref 67 68
hcs_$get_process_usage          000016 constant        entry                    external dcl 36 ref 66
ioa_$ioa_switch                 000012 constant        entry                    external dcl 32 ref 79 91
ioa_$rsnnl                      000014 constant        entry                    external dcl 32 ref 73 76
iox_$user_io                    000026 external static pointer                  dcl 58 set ref 79* 91*
login_control                   000000 constant        char(120)                initial dcl 46 ref 91 91
login_time                      000134 automatic       fixed bin(71,0)          dcl 26 set ref 87* 90*
logout_control                  000036 constant        char(120)                initial dcl 41 ref 79 79
memory                    4     000146 automatic       fixed bin(71,0)          level 2 dcl 49 set ref 68* 68 79*
mins                            000136 automatic       fixed bin(35,0)          dcl 27 set ref 71* 73*
minstring                       000140 automatic       char(16)                 unaligned dcl 28 set ref 73* 76* 79*
mod                                                    builtin function         dcl 60 ref 72
person                          000123 automatic       char(22)                 unaligned dcl 24 set ref 64* 79* 87* 91*
project                         000131 automatic       char(9)                  unaligned dcl 25 set ref 64* 79* 87* 91*
request_id                      000100 automatic       fixed bin(71,0)          dcl 22 set ref 88* 91* 91*
request_id_                     000020 constant        entry                    external dcl 37 ref 91 91
rtrim                                                  builtin function         dcl 60 ref 79 79 91 91
secs                            000137 automatic       fixed bin(35,0)          dcl 27 set ref 67* 69 71 72* 72 73* 76*
time                            000102 automatic       varying char(64)         dcl 23 set ref 78* 79* 90* 91*
user_info_$absentee_request_id  000022 constant        entry                    external dcl 38 ref 88
user_info_$login_data           000024 constant        entry                    external dcl 39 ref 64 87
virtual_cpu              10     000146 automatic       fixed bin(71,0)          level 2 dcl 49 set ref 67
wanted                          000146 automatic       fixed bin(17,0)          level 2 dcl 49 set ref 65*

NAMES DECLARED BY EXPLICIT CONTEXT.
login                           000501 constant        entry                    external dcl 84
logout                          000146 constant        entry                    external dcl 62
print_abs_logout_msg_           000130 constant        entry                    external dcl 17
print_abs_msg_                  000137 constant        entry                    external dcl 17

THERE WERE NO NAMES DECLARED BY CONTEXT OR IMPLICATION.

STORAGE REQUIREMENTS FOR THIS PROGRAM.

	Object	Text	Link	Symbol	Defs	Static
Start          0       0      1074        1124     726        1104
Length      1310     726        30         147     145           0

BLOCK NAME	         STACK SIZE     TYPE		WHY NONQUICK/WHO SHARES STACK FRAME
print_abs_logout_msg_               221 external procedure  is an external procedure.  

STORAGE FOR AUTOMATIC VARIABLES.

STACK FRAME                 LOC IDENTIFIER                  BLOCK NAME
print_abs_logout_msg_    000100 request_id                  print_abs_logout_msg_
                         000102 time                        print_abs_logout_msg_
                         000123 person                      print_abs_logout_msg_
                         000131 project                     print_abs_logout_msg_
                         000134 login_time                  print_abs_logout_msg_
                         000136 mins                        print_abs_logout_msg_
                         000137 secs                        print_abs_logout_msg_
                         000140 minstring                   print_abs_logout_msg_
                         000144 anonymous                   print_abs_logout_msg_
                         000146 data                        print_abs_logout_msg_

THE FOLLOWING EXTERNAL OPERATORS ARE USED BY THIS PROGRAM.
r_ne_as             alloc_cs            call_ext_out_desc   call_ext_out        return              fl2_to_fx1
fl2_to_fx2          mod_fx1             shorten_stack       ext_entry           clock

THE FOLLOWING EXTERNAL ENTRIES ARE CALLED BY THIS PROGRAM.
date_time_$format             hcs_$get_process_usage        ioa_$ioa_switch               ioa_$rsnnl
request_id_                   user_info_$absentee_request_id                              user_info_$login_data

THE FOLLOWING EXTERNAL VARIABLES ARE USED BY THIS PROGRAM.
iox_$user_io




   LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC   
     17 000127        62 000144        64 000153        65 000177        66 000201        67 000215        68 000226
     69 000236        71 000241        72 000243        73 000247        74 000306        76 000307        78 000337
     79 000405        82 000476        84 000500        87 000506        88 000550        90 000557        91 000623
     93 000723


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
