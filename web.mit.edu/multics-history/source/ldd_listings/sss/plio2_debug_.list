	COMPILATION LISTING OF SEGMENT plio2_debug_
	Compiled by: Multics PL/I Compiler, Release 28d, of September 14, 1983
	Compiled at: Honeywell LCPD Phoenix, System M
	Compiled on: 10/03/83  1409.4 mst Mon
	    Options: optimize map

        1 /* ******************************************************
        2*   *                                                    *
        3*   *                                                    *
        4*   * Copyright (c) 1972 by Massachusetts Institute of   *
        5*   * Technology and Honeywell Information Systems, Inc. *
        6*   *                                                    *
        7*   *                                                    *
        8*   ****************************************************** */
        9 
       10 plio2_debug_:proc options(support);
  1     1 /* BEGIN INCLUDE FILE ... plio2_ps.incl.pl1 */
  1     2 /* Stream I/O data block used by PL/I I/O runtime routines.
  1     3*
  1     4*   Modified: 31 January 1978 by RAB to change plio2_data_$fsb_thread to plio2_data_fsb_thread_
  1     5**/
  1     6 /* format: style3,idind30 */
  1     7 
  1     8 /* based */
  1     9 
  1    10 declare	1 ps			aligned based (psp),/* items set NORMALLY by compiled procedures */
  1    11 	  2 stack_frame_p		ptr,		/* items set in block prologue */
  1    12 	  2 ST_top_p		ptr,
  1    13 	  2 ST_block_p		ptr,
  1    14 	  2 format_area_p		ptr,
  1    15 	  2 ss_list_p		ptr,
  1    16 	  2 ab_return,				/* items set in prep call */
  1    17 	    3 abret		(3) ptr,
  1    18 	  2 source_p		ptr,		/* addr(fakefsb) for string option,
  1    19*						   addr(file) for explicit file option */
  1    20 	  2 special_list_p		ptr,		/* addr(OKlist) for get data, addr(format_list) for edit */
  1    21 	  2 copy_file_p		ptr,
  1    22 	  2 job			aligned,
  1    23 	    3 explicit_file		bit (1) unal,
  1    24 	    3 string		bit (1) unal,
  1    25 	    3 varying_string	bit (1) unal,
  1    26 	    3 data		bit (1) unal,
  1    27 	    3 edit		bit (1) unal,
  1    28 	    3 list		bit (1) unal,
  1    29 	    3 get			bit (1) unal,
  1    30 	    3 put			bit (1) unal,
  1    31 	    3 page		bit (1) unal,
  1    32 	    3 line		bit (1) unal,
  1    33 	    3 skip		bit (1) unal,
  1    34 	    3 copy		bit (1) unal,
  1    35 	    3 p1p2		bit (1) unal,
  1    36 	    3 bit_string		bit (1) unal,	/* for environment(stringvalue) */
  1    37 	    3 char_string		bit (1) unal,
  1    38 	    3 read		bit (1) unal,
  1    39 	    3 write		bit (1) unal,
  1    40 	    3 rewrite		bit (1) unal,
  1    41 	    3 delete		bit (1) unal,
  1    42 	    3 locate		bit (1) unal,
  1    43 	    3 key			bit (1) unal,
  1    44 	    3 keyto		bit (1) unal,
  1    45 	    3 keyfrom		bit (1) unal,
  1    46 	    3 set			bit (1) unal,
  1    47 	    3 into		bit (1) unal,
  1    48 	    3 ignore		bit (1) unal,
  1    49 	    3 from		bit (1) unal,
  1    50 	    3 version		bit (6) unal,
  1    51 	    3 not_byte_buffer	bit (1) unal,
  1    52 	    3 pad1		bit (1) unal,
  1    53 	    3 packed_ptr		bit (1) unal,
  1    54 	  2 number		fixed bin (15),
  1    55 	  2 value_p		ptr,		/* items set NORMALLY by compiled procedures per transmission */
  1    56 	  2 descriptor		bit (36) aligned,
  1    57 	  2 length		fixed bin (15),	/* may be swallowed into descriptor */
  1    58 	  2 top_half		bit (18) unal,
  1    59 	  2 offset		bit (18) unal,
  1    60 	  2 prep			fixed bin (15),	/* items treated ABNORMALLY, written by user and PLIO */
  1    61 	  2 new_format		fixed bin (15),
  1    62 	  2 switch		aligned,		/* items used by PLIO and not touched by compiled procedures */
  1    63 	    3 first_field		bit (1) unal,
  1    64 	    3 file		bit (1) unal,
  1    65 	    3 transmit_error	bit (1) unal,
  1    66 	    3 semi_sep		bit (1) unal,
  1    67 	    3 pad2		bit (32) unal,
  1    68 	  2 file_p		ptr,
  1    69 	  2 fsbp			ptr,
  1    70 	  2 auxp			ptr,		/* used as addr(ldidata) for GETs */
  1    71 	  2 fabp			ptr,
  1    72 	  2 fab2p			ptr,
  1    73 	  2 vp			ptr,
  1    74 	  2 descr			bit (36) aligned,
  1    75 	  2 start_copy		fixed bin (15),
  1    76 	  2 quick_stream_storage,
  1    77 	    3 a_stored		fixed bin (35),
  1    78 	    3 q_stored		fixed bin (35);
  1    79 
  1    80 /* external static */
  1    81 
  1    82 declare	(
  1    83 	plio2_data_$pspstat,
  1    84 	plio2_data_$fsbpstat,
  1    85 	plio2_data_$badfsbp,
  1    86 	plio2_data_$fabpstat,
  1    87 	plio2_data_$fab2pstat,
  1    88 	plio2_data_$pliostringfsbp
  1    89 	)			ptr external static;
  1    90 
  1    91 dcl	plio2_data_fsb_thread_	ptr ext static initial (null);
  1    92 						/* *system var */
  1    93 
  1    94 declare	(
  1    95 	plio2_data_$badjob		bit (36) aligned,
  1    96 	plio2_data_$undef_file_sw	bit (1) aligned
  1    97 	)			external static;
  1    98 
  1    99 /* END INCLUDE FILE ... plio2_ps.incl.pl1 */
       11 
  2     1 /* BEGIN INCLUDE FILE ... plio2_fsb.incl.pl1 */
  2     2 /* format: style3,idind30 */
  2     3 
  2     4 declare	1 fsb			aligned based (fsbp),
  2     5 	  2 switch		aligned,
  2     6 	    3 zot			(2) bit (1) unaligned,
  2     7 	    3 version_2		bit (1) unaligned,
  2     8 	    3 open		bit (1) unaligned,
  2     9 	    3 print		bit (1) unaligned,
  2    10 	    3 input		bit (1) unaligned,
  2    11 	    3 output		bit (1) unaligned,
  2    12 	    3 update		bit (1) unaligned,
  2    13 	    3 stream		bit (1) unaligned,
  2    14 	    3 notkeyed		bit (1) unaligned,
  2    15 	    3 record		bit (1) unaligned,
  2    16 	    3 sequential		bit (1) unaligned,
  2    17 	    3 direct		bit (1) unaligned,
  2    18 	    3 interactive		bit (1) unaligned,
  2    19 	    3 not_used_1		bit (1) unaligned,
  2    20 	    3 not_used_2		bit (1) unaligned,
  2    21 	    3 stringvalue		bit (1) unaligned,
  2    22 	    3 keyed		bit (1) unaligned,
  2    23 	    3 namelist		bit (1) unaligned,
  2    24 	    3 implementation	bit (1) unaligned,
  2    25 	    3 not_used_4		bit (1) unaligned,	/* old get-input eof flag */
  2    26 	    3 transmit_error	bit (1) unaligned,
  2    27 	    3 buffer_in_use		bit (1) unaligned,
  2    28 	    3 copy		bit (1) unaligned,
  2    29 	    3 detach		bit (1) unaligned,
  2    30 	    3 te_hold		bit (1) unaligned,
  2    31 	    3 not_used_5		bit (1) unaligned,
  2    32 	    3 internal		bit (1) unaligned,
  2    33 	    3 threaded		bit (1) unaligned,
  2    34 	    3 fsb_in_use		bit (1) unaligned,
  2    35 	    3 console		bit (1) unaligned,
  2    36 	    3 emptyline		bit (1) unaligned,
  2    37 	    3 iox_close		bit (1) unaligned,
  2    38 	    3 xxx4		bit (1) unaligned,
  2    39 	    3 xxx5		bit (1) unaligned,
  2    40 	    3 xxx6		bit (1) unaligned,
  2    41 	  2 nono			aligned,
  2    42 	    3 bit_string		bit (1) unaligned,
  2    43 	    3 not_used_3		bit (1) unaligned,
  2    44 	    3 read		bit (1) unaligned,
  2    45 	    3 write		bit (1) unaligned,
  2    46 	    3 rewrite		bit (1) unaligned,
  2    47 	    3 delete		bit (1) unaligned,
  2    48 	    3 locate		bit (1) unaligned,
  2    49 	    3 key			bit (1) unaligned,
  2    50 	    3 keyto		bit (1) unaligned,
  2    51 	    3 keyfrom		bit (1) unaligned,
  2    52 	    3 set			bit (1) unaligned,
  2    53 	    3 into		bit (1) unaligned,
  2    54 	    3 ignore		bit (1) unaligned,
  2    55 	    3 from		bit (1) unaligned,
  2    56 	    3 nofrom		bit (1) unaligned,
  2    57 	    3 nokey		bit (1) unaligned,
  2    58 	    3 nokeyfrom		bit (1) unaligned,
  2    59 	    3 nolock		bit (1) unaligned,
  2    60 	  2 lsep			fixed bin (15),	/* (1,COMMA)(2,BL)(3,TAB)(4,NL)(5,SEMI) */
  2    61 	  2 iocb_p		ptr unaligned,	/* identifies data_set to iox_ */
  2    62 	  2 blc			fixed bin (21),	/* buffer's last character (input) */
  2    63 	  2 bsize			fixed bin (21),	/* size of buffer */
  2    64 	  2 bptr			ptr,		/* address of buffer */
  2    65 	  2 bnc			fixed bin (15),	/* next character in buffer */
  2    66 	  2 kol			fixed bin (15),	/* last column read from or written into */
  2    67 	  2 lsize			fixed bin (15),	/* line size (output) */
  2    68 	  2 lineno		fixed bin (15),	/* current line (output) - starts at 1 on each new page */
  2    69 	  2 psize			fixed bin (35),	/* page size (output) */
  2    70 	  2 pageno		fixed bin (15),	/* current page number, starts at 1 */
  2    71 	  2 limit			fixed bin (15),
  2    72 	  2 lnzc			fixed bin (35),
  2    73 	  2 filename		char (32) aligned,	/* declared file name */
  2    74 	  2 title			char (32) unaligned,/* Multics I/O switch */
  2    75 	  2 fsb_thread		ptr,
  2    76 	  2 buffer		(212) fixed bin (15),
  2    77 	  2 path_name		char (168) unal,	/* title option */
  2    78 	  2 declared_attributes	(2) bit (36) aligned;
  2    79 
  2    80 declare	xbuf			char (1000) unaligned based (fsb.bptr);
  2    81 
  2    82 /* END INCLUDE FILE ... plio2_fsb.incl.pl1 */
       12 
       13 
       14 dcl (null, string) builtin;
       15 dcl (fsbp,psp,jobp) ptr;
       16 /*  */
       17 
       18 renew_cur:entry;
       19 	jobp=plio2_data_$fsbpstat;
       20 	goto work;
       21 
       22 renew:	entry(sn,of);
       23 	dcl (sn,of) char(*);
       24 	dcl octptr entry(char(*),char(*)) returns(ptr);
       25 
       26 	jobp=octptr(sn,of);
       27 	goto work;
       28 
       29 
       30 work:
       31 	/* closes and unthreads the JOB file */
       32 
       33 	fsbp=plio2_data_fsb_thread_;
       34 	do while(fsbp^=null);
       35 	if fsb.fsb_thread=jobp then
       36 		do;
       37 		fsb.fsb_thread=fsb.fsb_thread->fsb.fsb_thread;
       38 		jobp->fsb.fsb_thread=null;
       39 		string(jobp->fsb.switch)="0"b;
       40 		return;
       41 		end;
       42 	fsbp=fsb.fsb_thread;
       43 	end;
       44 
       45 	return;
       46 end;
	SOURCE FILES USED IN THIS COMPILATION.

LINE      NUMBER  DATE MODIFIED     NAME			PATHNAME
             0    10/03/83  1005.4  plio2_debug_.pl1                  >spec>on>pl128d>plio2_debug_.pl1
11           1    08/13/81  2043.5  plio2_ps.incl.pl1                 >ldd>include>plio2_ps.incl.pl1
12           2    08/13/81  2043.5  plio2_fsb.incl.pl1                >ldd>include>plio2_fsb.incl.pl1
	NAMES DECLARED IN THIS COMPILATION.

IDENTIFIER	     OFFSET    LOC STORAGE CLASS   DATA TYPE		ATTRIBUTES AND REFERENCES
								(* indicates a set context)

NAMES DECLARED BY DECLARE STATEMENT.
fsb                                    based           structure                level 1 dcl 2-4
fsb_thread               40            based           pointer                  level 2 dcl 2-4 set ref 35 37* 37 37 38* 42
fsbp                            000100 automatic       pointer                  dcl 15 set ref 30* 34 35 37 37 42* 42
jobp                            000102 automatic       pointer                  dcl 15 set ref 19* 26* 35 38 39
null                                                   builtin function         dcl 14 ref 34 38
octptr                          000014 constant        entry                    external dcl 24 ref 26
of                                     parameter       char                     unaligned dcl 23 set ref 22 26*
plio2_data_$fsbpstat            000010 external static pointer                  dcl 1-82 ref 19
plio2_data_fsb_thread_          000012 external static pointer                  initial dcl 1-91 ref 30
sn                                     parameter       char                     unaligned dcl 23 set ref 22 26*
string                                                 builtin function         dcl 14 set ref 39*
switch                                 based           structure                level 2 dcl 2-4 set ref 39*

NAMES DECLARED BY DECLARE STATEMENT AND NEVER REFERENCED.
plio2_data_$badfsbp                    external static pointer                  dcl 1-82
plio2_data_$badjob                     external static bit(36)                  dcl 1-94
plio2_data_$fab2pstat                  external static pointer                  dcl 1-82
plio2_data_$fabpstat                   external static pointer                  dcl 1-82
plio2_data_$pliostringfsbp             external static pointer                  dcl 1-82
plio2_data_$pspstat                    external static pointer                  dcl 1-82
plio2_data_$undef_file_sw              external static bit(1)                   dcl 1-94
ps                                     based           structure                level 1 dcl 1-10
psp                                    automatic       pointer                  dcl 15
xbuf                                   based           char(1000)               unaligned dcl 2-80

NAMES DECLARED BY EXPLICIT CONTEXT.
plio2_debug_                    000005 constant        entry                    external dcl 10
renew                           000033 constant        entry                    external dcl 22
renew_cur                       000015 constant        entry                    external dcl 18
work                            000100 constant        label                    dcl 30 ref 20 27

THERE WERE NO NAMES DECLARED BY CONTEXT OR IMPLICATION.

STORAGE REQUIREMENTS FOR THIS PROGRAM.

	Object	Text	Link	Symbol	Defs	Static
Start          0       0       224         242     131         234
Length       442     131        16         164      73           0

BLOCK NAME	         STACK SIZE     TYPE		WHY NONQUICK/WHO SHARES STACK FRAME
plio2_debug_                         84 external procedure  is an external procedure.  

STORAGE FOR AUTOMATIC VARIABLES.

STACK FRAME                 LOC IDENTIFIER                  BLOCK NAME
plio2_debug_             000100 fsbp                        plio2_debug_
                         000102 jobp                        plio2_debug_

THE FOLLOWING EXTERNAL OPERATORS ARE USED BY THIS PROGRAM.
call_ext_out_desc   return              ext_entry           ext_entry_desc      set_support

THE FOLLOWING EXTERNAL ENTRIES ARE CALLED BY THIS PROGRAM.
octptr

THE FOLLOWING EXTERNAL VARIABLES ARE USED BY THIS PROGRAM.
plio2_data_$fsbpstat          plio2_data_fsb_thread_




   LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC   
     10 000004        18 000013        19 000023        20 000026        22 000027        26 000054        27 000077
     30 000100        34 000104        35 000110        37 000115        38 000120        39 000123        40 000124
     42 000125        43 000127        45 000130


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
