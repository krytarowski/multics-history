	COMPILATION LISTING OF SEGMENT set_mdir_owner
	Compiled by: Multics PL/I Compiler, Release 27d, of October 11, 1982
	Compiled at: Honeywell LISD Phoenix, System M
	Compiled on: 11/04/82  1640.1 mst Thu
	    Options: optimize map

        1 /* ***********************************************************
        2*   *                                                         *
        3*   * Copyright, (C) Honeywell Information Systems Inc., 1982 *
        4*   *                                                         *
        5*   * Copyright (c) 1972 by Massachusetts Institute of        *
        6*   * Technology and Honeywell Information Systems, Inc.      *
        7*   *                                                         *
        8*   *********************************************************** */
        9 
       10 
       11 /* SET_MDIR_OWNER: Command to change the owner of a master directory */
       12 
       13 /* Written March 1976 by Larry Johnson */
       14 
       15 set_mdir_owner: smdo: proc;
       16 
       17 dcl  code fixed bin (35);				/* system status code */
       18 dcl  name char (14) int static options (constant) init ("set_mdir_owner");
       19 dcl  arg_ptr ptr;
       20 dcl  arg_len fixed bin;
       21 dcl  arg char (arg_len) based (arg_ptr);
       22 dcl  dir char (168);
       23 dcl  ename char (32);
       24 dcl  owner char (32);
       25 
       26 dcl  ioa_ entry options (variable);
       27 dcl  com_err_ entry options (variable);
       28 dcl  mdc_$set_mdir_owner entry (char (*), char (*), char (*), fixed bin (35));
       29 dcl  expand_path_ entry (ptr, fixed bin, ptr, ptr, fixed bin (35));
       30 dcl  cu_$arg_ptr entry (fixed bin, ptr, fixed bin, fixed bin (35));
       31 dcl  get_group_id_$tag_star entry returns (char (32));
       32 
       33 dcl (addr) builtin;
       34 
       35 	call cu_$arg_ptr (1, arg_ptr, arg_len, code);	/* get path */
       36 	if code ^= 0 then do;
       37 	     call ioa_ ("Usage: ^a path -owner-", name);
       38 	     return;
       39 	end;
       40 	call expand_path_ (arg_ptr, arg_len, addr (dir), addr (ename), code);
       41 	if code ^= 0 then do;
       42 	     call com_err_ (code, name, "^a", arg);
       43 	     return;
       44 	end;
       45 
       46 	call cu_$arg_ptr (2, arg_ptr, arg_len, code);	/* new owner */
       47 	if code ^= 0 then owner = get_group_id_$tag_star ();
       48 	else owner = arg;
       49 
       50 	call mdc_$set_mdir_owner (dir, ename, owner, code);
       51 	if code ^= 0 then call com_err_ (code, name);
       52 	return;
       53 
       54      end set_mdir_owner;
	SOURCE FILES USED IN THIS COMPILATION.

LINE      NUMBER  DATE MODIFIED     NAME			PATHNAME
             0    11/04/82  1613.1  set_mdir_owner.pl1                >dumps>old>recomp>set_mdir_owner.pl1
	NAMES DECLARED IN THIS COMPILATION.

IDENTIFIER	     OFFSET    LOC STORAGE CLASS   DATA TYPE		ATTRIBUTES AND REFERENCES
								(* indicates a set context)

NAMES DECLARED BY DECLARE STATEMENT.
addr                                                   builtin function         dcl 33 ref 40 40 40 40
arg                                    based           char                     unaligned dcl 21 set ref 42* 48
arg_len                         000104 automatic       fixed bin(17,0)          dcl 20 set ref 35* 40* 42 42 46* 48
arg_ptr                         000102 automatic       pointer                  dcl 19 set ref 35* 40* 42 46* 48
code                            000100 automatic       fixed bin(35,0)          dcl 17 set ref 35* 36 40* 41 42* 46* 47 50* 51 51*
com_err_                        000012 constant        entry                    external dcl 27 ref 42 51
cu_$arg_ptr                     000020 constant        entry                    external dcl 30 ref 35 46
dir                             000105 automatic       char(168)                unaligned dcl 22 set ref 40 40 50*
ename                           000157 automatic       char(32)                 unaligned dcl 23 set ref 40 40 50*
expand_path_                    000016 constant        entry                    external dcl 29 ref 40
get_group_id_$tag_star          000022 constant        entry                    external dcl 31 ref 47
ioa_                            000010 constant        entry                    external dcl 26 ref 37
mdc_$set_mdir_owner             000014 constant        entry                    external dcl 28 ref 50
name                            000000 constant        char(14)                 initial unaligned dcl 18 set ref 37* 42* 51*
owner                           000167 automatic       char(32)                 unaligned dcl 24 set ref 47* 48* 50*

NAMES DECLARED BY EXPLICIT CONTEXT.
set_mdir_owner                  000031 constant        entry                    external dcl 15
smdo                            000022 constant        entry                    external dcl 15

THERE WERE NO NAMES DECLARED BY CONTEXT OR IMPLICATION.

STORAGE REQUIREMENTS FOR THIS PROGRAM.

	Object	Text	Link	Symbol	Defs	Static
Start          0       0       362         406     261         372
Length       562     261        24         137     101           0

BLOCK NAME	         STACK SIZE     TYPE		WHY NONQUICK/WHO SHARES STACK FRAME
smdo                                184 external procedure  is an external procedure.  

STORAGE FOR AUTOMATIC VARIABLES.

STACK FRAME                 LOC IDENTIFIER                  BLOCK NAME
smdo                     000100 code                        smdo
                         000102 arg_ptr                     smdo
                         000104 arg_len                     smdo
                         000105 dir                         smdo
                         000157 ename                       smdo
                         000167 owner                       smdo

THE FOLLOWING EXTERNAL OPERATORS ARE USED BY THIS PROGRAM.
call_ext_out_desc   call_ext_out        return              ext_entry

THE FOLLOWING EXTERNAL ENTRIES ARE CALLED BY THIS PROGRAM.
com_err_                      cu_$arg_ptr                   expand_path_                  get_group_id_$tag_star
ioa_                          mdc_$set_mdir_owner

NO EXTERNAL VARIABLES ARE USED BY THIS PROGRAM.




   LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC   
     15 000021        35 000036        36 000054        37 000056        38 000076        40 000077        41 000122
     42 000124        43 000156        46 000157        47 000176        48 000210        50 000215        51 000241
     52 000260


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
