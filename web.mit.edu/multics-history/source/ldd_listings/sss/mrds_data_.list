	COMPILATION LISTING OF SEGMENT !BBBJXcllppHgnM
	Compiled by: Multics PL/I Compiler, Release 30, of February 16, 1988
	Compiled at: Honeywell Bull, Phoenix AZ, SysM
	Compiled on: 08/01/88  1340.9 mst Mon
	    Options: table map

        1 /* ***********************************************************
        2*   *                                                         *
        3*   * Copyright, (C) Honeywell Bull Inc., 1988                *
        4*   *                                                         *
        5*   * Copyright, (C) Honeywell Information Systems Inc., 1981 *
        6*   *                                                         *
        7*   * Copyright (c) 1972 by Massachusetts Institute of        *
        8*   * Technology and Honeywell Information Systems, Inc.      *
        9*   *                                                         *
       10*   *********************************************************** */
       11 
       12 
       13 
       14 /* HISTORY COMMENTS:
       15*  1) change(86-05-14,Dupuis), approve(86-08-08,MCR7491), audit(86-08-08,Blair),
       16*     install(86-08-15,MR12.0-1127):
       17*     Added the "number_of_resultant_attributes" field to fix phx20301
       18*     (mrds #154) and changed saved_res_version to rslt0003.
       19*  2) change(86-06-01,Spitzer), approve(85-12-03,MCR7311),
       20*     audit(86-08-29,Blair), install(86-10-16,MR12.0-1187):
       21*     Add rmdb_info_directory.
       22*  3) change(86-11-18,Blair), approve(86-11-18,PBF7311), audit(86-11-26,Dupuis),
       23*     install(86-12-09,MR12.0-1237):
       24*     Add the relation_blocking_factor so we have a consistent number of control
       25*     intervals in all relations created.
       26*  4) change(88-07-14,Hergert), approve(88-07-15,MCR7903),
       27*     audit(88-07-15,Dupuis), install(88-08-01,MR12.2-1073):
       28*     Added max_nested_expr for new parser.
       29*                                                   END HISTORY COMMENTS */
       30 
       31 
       32 mrds_data_: proc;
       33 
       34 /* NOTES:
       35*
       36*   This procedure creates the mrds_data_ database.
       37**/
       38 
       39 
       40 /* HISTORY:
       41*
       42*   78-09-01 J. A. Weeldreyer: Initially written.
       43*
       44*   80-05-01 Jim Gray: Modified to delete unused data items,  and  to
       45*   add comments.
       46*
       47*   80-06-23 Jim Gray: Modified to change  max_string_size  to  4096,
       48*   from  50000,  for  a more resonable maximum attribute size and to
       49*   add max_line_size, to separate  the  function  of  the  two  data
       50*   items.
       51*
       52*   80-10-01 Lindsey Spratt: Changed the dsmd_version_number  from  4
       53*   to 5.
       54*
       55*   80-11-03 Jim Gray: Modified to add  temp_seg_name  item,  so  the
       56*   routines  search, close, and delete_se have a common place to get
       57*   this name used in managing the temp segs on a per opening basis.
       58*
       59*   80-11-06 Jim Gray: Modified to add current_version_status  entry,
       60*   so that display_mrds_dm can handle when not to display file info,
       61*   and  mrds_rst_create_db  can  properly  init  the  version_status
       62*   structure.
       63*
       64*   80-11-07 Jim Gray: Modified to add  submodel_dir_name  entry,  so
       65*   mrds and users will have a standard to refer to.
       66*
       67*   80-12-09  Jim  Gray:  added  control_segment_name  which  is  now
       68*   db.control  as  part  of the conversion from r-u to r-s-m-d scope
       69*   modes.
       70*
       71*   81-01-14 Rickie E. Brinegar: changed max_and_groups  from  10  to
       72*   100.   This   should  only  affect  the  predicate  structure  in
       73*   mrds_dsl_optimize. It will now allocate 100 pointers  instead  of
       74*   10 pointers.
       75*
       76*   81-03-20 Jim Gray: combined  mrds_data_  and  mdbm_data_  tables,
       77*   also removed unused data items.
       78*
       79*   81-03-26 Jim Gray : added max_vfile_wait_time to be used with the
       80*   -share option at open time for the vfile attach descriptions.
       81*
       82*   81-04-22 Jim Gray :  removed  max_db_open  as  part  of  removing
       83*   module mrds_dm_open_table_mgr from mrds.
       84*
       85*
       86*   81-04-24 Jim Gray : changed max_dbs value  from  64  to  128,  to
       87*   allow  up to 128 simultaneous opening of databases. This will not
       88*   up the 64 limit on version 3 databases.
       89*
       90*   81-04-25 Jim Gray : changed  length  of  temp_seg_name  to  allow
       91*   three  digits in the db_index part of the name, for getting up to
       92*   128 openings.
       93*
       94*   81-04-30 Jim Gray : changed max_relations  to  256,  as  part  of
       95*   changing max rels that cmdb can create, and that are usable.
       96*
       97*   81-05-19 Jim Gray : changed max_select_items, max_pred_nodes, and
       98*   max_pred_ops  to  256,  to agree with change of max_attributes to
       99*   256.
      100*
      101*   81-07-02 Jim Gray : added  statistics  update  mrds  data  items,
      102*   indicating  when  next  update is to be done in terms of relation
      103*   references and real time. The update count value is set to number
      104*   of possible tuple variables, so that max tup vars on one rel only
      105*   causes one call to mu_get_rel_size for that relation. The  update
      106*   time was set to five minutes initially.
      107*
      108*   81-07-06 Jim Gray : added size of small relations to  be  updated
      109*   once  per  S.E.  to reduce problems with large percentage changes
      110*   for this case. Also reduced update count to 10, since things  are
      111*   now  managed  on  an  S.E.  reference, rather than tuple variable
      112*   reference manner.
      113*
      114*   81-07-22 Jim Gray : added key_search_threshold for  the  strategy
      115*   logic in mrds_dsl_gen_srch_prog.
      116*
      117*   81-08-27  Davids:  changed  max_select_items,  max_pred_ops,  and
      118*   max_pred_notes to 256 from 100.
      119*
      120*   81-12-02 Davids: changed max_and_terms to 100 from 20.
      121*
      122*   82-03-15 R. Lackey : Added valid_rel_and_attr_name_chars
      123*
      124*   82-06-03 Mike Kubicar : Changed quiesce_wait (the default quiesce wait
      125*   time to 0.  Default is now don't wait.
      126*
      127*   83-02-14 R. Harvey : removed the following: file_id_len_pad, inv_thresh,
      128*   key_search_threshold, max_children, max_kattr_len, max_vfile_wait_time.
      129*
      130*   83-05-19 Davids: Added the saved_res_version element.
      131*
      132*   83-10-24 Mike Kubicar : Added $max_tids_returned_per_call, the maximum
      133*   number of tuple ids to return during calls to
      134*   relation_manager_$get_tuple_ids.
      135*
      136*   84-05-18 Bert Moberg : Changed lock_wait_time to 900
      137*
      138*   84-09-07 John Hergert: Added caller_compile for dsl_$compile. Changed 
      139*   saved_res_version to "rslt0001"
      140*
      141*   85-04-08 Thanh Nguyen: Added max_safe_tids_returned_per_call with value 
      142*   of one.
      143*
      144*   85-04-14 Thanh Nguyen: Changed saved_res_version to "rslt0002".
      145**/
      146 
  1     1 /* BEGIN INCLUDE FILE cds_args.incl.pl1 */
  1     2 
  1     3 dcl 1 cds_args based aligned,
  1     4     2 sections (2),
  1     5       3 p ptr,					/* pointer to data for text/static section */
  1     6       3 len fixed bin (18),				/* size of text/static section */
  1     7       3 struct_name char (32),			/* name of declared structure for this section */
  1     8     2 seg_name char (32),				/* name to create segment by */
  1     9     2 num_exclude_names fixed bin,			/* number of names in exclude array */
  1    10     2 exclude_array_ptr ptr,				/* pointer to array of exclude names */
  1    11     2 switches,					/* control switches */
  1    12       3 defs_in_link bit (1) unal,			/* says put defs in linkage */
  1    13       3 separate_static bit (1) unal,			/* says separate static section is wanted */
  1    14       3 have_text bit (1) unal,			/* ON if text section given */
  1    15       3 have_static bit (1) unal,			/* ON if static section given */
  1    16       3 pad bit (32) unal;
  1    17 
  1    18 dcl  exclude_names (1) char (32) based;			/* pointed to be cds_args.exclude_array_ptr */
  1    19 
  1    20 /* END INCLUDE FILE cds_args.incl.pl1 */
      147 
      148 
      149 
      150 dcl 1 md aligned,					/* the values to go into mrds_data_ */
      151     2 caller_compile fixed bin (35) init (5),     	/* translate called by compile */
      152     2 caller_define_temp_rel fixed bin (35) init (4),	/* translate called by define_temp_rel */
      153     2 caller_delete fixed bin (35) init (1),		/* translate called by delete */
      154     2 caller_modify fixed bin (35) init (2),		/* translate called by modify */
      155     2 caller_retrieve fixed bin (35) init (3),		/* translate called by retrieve */
      156     2 cleanup_lock_wait fixed bin (35) init (120),	/* wait time to lock acs control segment in cleanup handlers */
      157     2 control_segment_name char (32) init ("db.control"),	/* name of database concurrency control segment */
      158     2 current_version fixed bin (35) init (4),		/* current database version */
      159     2 current_version_status fixed bin (35) init (8),	/* current version_status structure major number */
      160     2 dmd_version fixed bin (35) init (4),		/* version of model header structure */
      161     2 dsmd_version_number fixed bin (35) init (5),	/* version of submodel header structure */
      162     2 lit_string_size fixed bin (35) init (73728),	/* max length of a literal string */
      163     2 lock_wait fixed bin (35) init (900),		/* wait time to lock acs control segment */
      164     2 lock_wait_time fixed bin (35) init (900),		/* set_scope default wait time */
      165     2 max_and_groups fixed bin (35) init (100),		/* max "and_groups" allowed in s.e. pred tree */
      166     2 max_and_terms fixed bin (35) init (100),		/* max terms allowed in an and_group in pred tree */
      167     2 max_attributes fixed bin (35) init (256),		/* max attrs allowed per relation by CMDB */
      168     2 max_builtin_args fixed bin (35) init (4),		/* max number of arguments to a builtin function */
      169     2 max_data_length fixed bin (35) init (2000),		/* max temp rel record data length */
      170     2 max_dbs fixed bin (35) init (128),		/* number of database openings allowed */
      171     2 max_expr_items fixed bin (35) init (20),		/* stack depth for eval of s.e. expressions */
      172     2 max_expr_stack_size fixed bin (35) init (14),	/* stack depth for eval of s.e. expressions */
      173     2 max_id_len fixed bin (35) init (32),		/* max character length of a tuple variable name */
      174     2 max_key_len fixed bin (35) init (253),		/* max total chars from attrs making up key field in rels */
      175     2 max_line_size fixed bin (35) init (50000),		/* largest output line for cmdb listing */
      176     2 max_lit_string_size fixed bin (35) init (254),	/* max repeated string literal size */
      177     2 max_nested_expr fixed bin (35) init (5),		/* max number of expression that can be nested in a where clause */
      178     2 max_pred_depth fixed bin (35) init (30),		/* size of stack for conversion pred tree to disj. norm. form */
      179     2 max_pred_nodes fixed bin (35) init (256),		/* max number of pred tree tuple attr leaf nodes */
      180     2 max_pred_ops fixed bin (35) init (256),		/* max number of pred tree operator leaf nodes */
      181     2 max_relations fixed bin (35) init (256),		/* largest number of relations cmdb can create */
      182     2 max_select_items fixed bin (35) init (256),		/* s.e. select clause max item count */
      183     2 max_sets fixed bin (35) init (20),		/* s.e. max number of set operators */
      184     2 max_sf_args fixed bin (35) init (30),		/* max number of args for scalar function */
      185     2 max_string_size fixed bin (35) init (4096),		/* largest parsable token for cmdb */
      186     2 max_td_len fixed bin (35) init (10),		/* largest array space for token data */
      187     2 max_temp_rels fixed bin (35) init (20),		/* most simultaneous temp rels */
      188     2 max_tids_returned_per_call fixed bin (35) init (1000), /* Most tids returned in a call to relation_manager_$get_tuple_ids */
      189     2 max_safe_tids_returned_per_call fixed bin (35) init (1), /* Most tids returned in a call to relation_manager_$get_tuple_ids
      190*      with a guaranty match for a select expression. */
      191     2 max_token_size fixed bin (35) init (65),		/* largest s.e. token length */
      192     2 max_tup_var fixed bin (35) init (20),		/* most s.e. tuple variables allowed */
      193     2 max_tuple_default fixed bin (35) init (1000),	/* blocked file relation -max_tuples option default */
      194     2 normal_mode fixed bin init (1),			/* normal data base access mode */
      195     2 number_of_resultant_attributes fixed bin init (500),  /* for refer extent of resultant_attributes_info structure */
      196     2 quiesce_mode fixed bin init (2),			/* quiesce data base access mode */
      197     2 quiesce_wait fixed bin (35) init (0),		/* wait time to quiesce files */
      198     2 relation_blocking_factor fixed bin init (255),        /* no. control intervals per segment */
      199     2 rmdb_info_directory char (168) init (">doc>ss>rmdb"),	/* directory containing rmdb info segs */
      200     2 saved_res_version char (8) init ("rslt0003"),         /* most up to date version of the resultant */
      201     2 statistics_update_count_interval fixed bin (35) init (10), /* number of rel ref times before statistics are next updated */
      202     2 statistics_update_time_interval fixed bin (71) init (300000000), /* real time til statistics next updated */
      203     2 statistics_update_small_rel_size fixed bin (35) init (100), /* max  size of rel to be updated every S.E. */
      204     2 submodel_dir_name char (16) init ("secure.submodels"), /* name of submodel_dir in new architecture */
      205     2 temp_seg_name char (23) init ("mrds_search_tidtemp.dbi"), /* common name for tid search temp segs */
      206     2 valid_id_chars char (128) varying
      207      init ("abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789_-") , /* legal s.e. token characters */
      208     2 valid_rel_and_attr_name_chars char (128) varying
      209      init ("abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789_-") ; /* Valid relation name character (Names can NOT begin with _ - or numeric) */
      210 
      211 dcl 1 cdsa like cds_args;
      212 dcl  code fixed bin (35);
      213 
      214 dcl (addr,
      215      size,
      216      string,
      217      null) builtin;
      218 
      219 dcl  create_data_segment_ entry (ptr, fixed bin (35));
      220 dcl  com_err_ entry options (variable);
      221 
      222 	cdsa.sections.p (1) = addr (md);		/* init. info for cds */
      223 	cdsa.sections.len (1) = size (md);
      224 	cdsa.sections.struct_name (1) = "md";
      225 	cdsa.seg_name = "mrds_data_";
      226 	cdsa.num_exclude_names = 0;
      227 	cdsa.exclude_array_ptr = null;
      228 	string (cdsa.switches) = "0"b;
      229 	cdsa.switches.have_text = "1"b;
      230 
      231 	call create_data_segment_ (addr (cdsa), code);
      232 	if code ^= 0 then call com_err_ (code, "mrds_data_");
      233 	return;
      234 
      235      end mrds_data_;
	SOURCE FILES USED IN THIS COMPILATION.

LINE      NUMBER  DATE MODIFIED     NAME			PATHNAME
             0    08/01/88  1300.0  !BBBJXcllppHgnM.pl1               >special_ldd>install>MR12.2-1073>mrds_data_.cds
147          1    04/01/76  2209.5  cds_args.incl.pl1                 >ldd>include>cds_args.incl.pl1
	NAMES DECLARED IN THIS COMPILATION.

IDENTIFIER	     OFFSET    LOC STORAGE CLASS   DATA TYPE		ATTRIBUTES AND REFERENCES
								(* indicates a set context)

NAMES DECLARED BY DECLARE STATEMENT.
addr                                                   builtin function         dcl 214 ref 222 231 231
caller_compile                  000100 automatic       fixed bin(35,0)          initial level 2 dcl 150 set ref 150*
caller_define_temp_rel
                          1     000100 automatic       fixed bin(35,0)          initial level 2 dcl 150 set ref 150*
caller_delete             2     000100 automatic       fixed bin(35,0)          initial level 2 dcl 150 set ref 150*
caller_modify             3     000100 automatic       fixed bin(35,0)          initial level 2 dcl 150 set ref 150*
caller_retrieve           4     000100 automatic       fixed bin(35,0)          initial level 2 dcl 150 set ref 150*
cds_args                               based           structure                level 1 dcl 1-3
cdsa                            000364 automatic       structure                level 1 unaligned dcl 211 set ref 231 231
cleanup_lock_wait         5     000100 automatic       fixed bin(35,0)          initial level 2 dcl 150 set ref 150*
code                            000431 automatic       fixed bin(35,0)          dcl 212 set ref 231* 232 232*
com_err_                        000014 constant        entry                    external dcl 220 ref 232
control_segment_name      6     000100 automatic       char(32)                 initial level 2 dcl 150 set ref 150*
create_data_segment_            000012 constant        entry                    external dcl 219 ref 231
current_version          16     000100 automatic       fixed bin(35,0)          initial level 2 dcl 150 set ref 150*
current_version_status
                         17     000100 automatic       fixed bin(35,0)          initial level 2 dcl 150 set ref 150*
dmd_version              20     000100 automatic       fixed bin(35,0)          initial level 2 dcl 150 set ref 150*
dsmd_version_number      21     000100 automatic       fixed bin(35,0)          initial level 2 dcl 150 set ref 150*
exclude_array_ptr        42     000364 automatic       pointer                  level 2 dcl 211 set ref 227*
have_text                44(02) 000364 automatic       bit(1)                   level 3 packed packed unaligned dcl 211 set ref 229*
len                       2     000364 automatic       fixed bin(18,0)          array level 3 dcl 211 set ref 223*
lit_string_size          22     000100 automatic       fixed bin(35,0)          initial level 2 dcl 150 set ref 150*
lock_wait                23     000100 automatic       fixed bin(35,0)          initial level 2 dcl 150 set ref 150*
lock_wait_time           24     000100 automatic       fixed bin(35,0)          initial level 2 dcl 150 set ref 150*
max_and_groups           25     000100 automatic       fixed bin(35,0)          initial level 2 dcl 150 set ref 150*
max_and_terms            26     000100 automatic       fixed bin(35,0)          initial level 2 dcl 150 set ref 150*
max_attributes           27     000100 automatic       fixed bin(35,0)          initial level 2 dcl 150 set ref 150*
max_builtin_args         30     000100 automatic       fixed bin(35,0)          initial level 2 dcl 150 set ref 150*
max_data_length          31     000100 automatic       fixed bin(35,0)          initial level 2 dcl 150 set ref 150*
max_dbs                  32     000100 automatic       fixed bin(35,0)          initial level 2 dcl 150 set ref 150*
max_expr_items           33     000100 automatic       fixed bin(35,0)          initial level 2 dcl 150 set ref 150*
max_expr_stack_size      34     000100 automatic       fixed bin(35,0)          initial level 2 dcl 150 set ref 150*
max_id_len               35     000100 automatic       fixed bin(35,0)          initial level 2 dcl 150 set ref 150*
max_key_len              36     000100 automatic       fixed bin(35,0)          initial level 2 dcl 150 set ref 150*
max_line_size            37     000100 automatic       fixed bin(35,0)          initial level 2 dcl 150 set ref 150*
max_lit_string_size      40     000100 automatic       fixed bin(35,0)          initial level 2 dcl 150 set ref 150*
max_nested_expr          41     000100 automatic       fixed bin(35,0)          initial level 2 dcl 150 set ref 150*
max_pred_depth           42     000100 automatic       fixed bin(35,0)          initial level 2 dcl 150 set ref 150*
max_pred_nodes           43     000100 automatic       fixed bin(35,0)          initial level 2 dcl 150 set ref 150*
max_pred_ops             44     000100 automatic       fixed bin(35,0)          initial level 2 dcl 150 set ref 150*
max_relations            45     000100 automatic       fixed bin(35,0)          initial level 2 dcl 150 set ref 150*
max_safe_tids_returned_per_call
                         55     000100 automatic       fixed bin(35,0)          initial level 2 dcl 150 set ref 150*
max_select_items         46     000100 automatic       fixed bin(35,0)          initial level 2 dcl 150 set ref 150*
max_sets                 47     000100 automatic       fixed bin(35,0)          initial level 2 dcl 150 set ref 150*
max_sf_args              50     000100 automatic       fixed bin(35,0)          initial level 2 dcl 150 set ref 150*
max_string_size          51     000100 automatic       fixed bin(35,0)          initial level 2 dcl 150 set ref 150*
max_td_len               52     000100 automatic       fixed bin(35,0)          initial level 2 dcl 150 set ref 150*
max_temp_rels            53     000100 automatic       fixed bin(35,0)          initial level 2 dcl 150 set ref 150*
max_tids_returned_per_call
                         54     000100 automatic       fixed bin(35,0)          initial level 2 dcl 150 set ref 150*
max_token_size           56     000100 automatic       fixed bin(35,0)          initial level 2 dcl 150 set ref 150*
max_tup_var              57     000100 automatic       fixed bin(35,0)          initial level 2 dcl 150 set ref 150*
max_tuple_default        60     000100 automatic       fixed bin(35,0)          initial level 2 dcl 150 set ref 150*
md                              000100 automatic       structure                level 1 dcl 150 set ref 222 223
normal_mode              61     000100 automatic       fixed bin(17,0)          initial level 2 dcl 150 set ref 150*
null                                                   builtin function         dcl 214 ref 227
num_exclude_names        40     000364 automatic       fixed bin(17,0)          level 2 dcl 211 set ref 226*
number_of_resultant_attributes
                         62     000100 automatic       fixed bin(17,0)          initial level 2 dcl 150 set ref 150*
p                               000364 automatic       pointer                  array level 3 dcl 211 set ref 222*
quiesce_mode             63     000100 automatic       fixed bin(17,0)          initial level 2 dcl 150 set ref 150*
quiesce_wait             64     000100 automatic       fixed bin(35,0)          initial level 2 dcl 150 set ref 150*
relation_blocking_factor
                         65     000100 automatic       fixed bin(17,0)          initial level 2 dcl 150 set ref 150*
rmdb_info_directory      66     000100 automatic       char(168)                initial level 2 dcl 150 set ref 150*
saved_res_version       140     000100 automatic       char(8)                  initial level 2 dcl 150 set ref 150*
sections                        000364 automatic       structure                array level 2 unaligned dcl 211
seg_name                 30     000364 automatic       char(32)                 level 2 packed packed unaligned dcl 211 set ref 225*
size                                                   builtin function         dcl 214 ref 223
statistics_update_count_interval
                        142     000100 automatic       fixed bin(35,0)          initial level 2 dcl 150 set ref 150*
statistics_update_small_rel_size
                        146     000100 automatic       fixed bin(35,0)          initial level 2 dcl 150 set ref 150*
statistics_update_time_interval
                        144     000100 automatic       fixed bin(71,0)          initial level 2 dcl 150 set ref 150*
string                                                 builtin function         dcl 214 set ref 228*
struct_name               3     000364 automatic       char(32)                 array level 3 packed packed unaligned dcl 211 set
                                                                                  ref 224*
submodel_dir_name       147     000100 automatic       char(16)                 initial level 2 dcl 150 set ref 150*
switches                 44     000364 automatic       structure                level 2 packed packed unaligned dcl 211 set ref 228*
temp_seg_name           153     000100 automatic       char(23)                 initial level 2 dcl 150 set ref 150*
valid_id_chars          161     000100 automatic       varying char(128)        initial level 2 dcl 150 set ref 150*
valid_rel_and_attr_name_chars
                        222     000100 automatic       varying char(128)        initial level 2 dcl 150 set ref 150*

NAME DECLARED BY DECLARE STATEMENT AND NEVER REFERENCED.
exclude_names                          based           char(32)                 array packed unaligned dcl 1-18

NAME DECLARED BY EXPLICIT CONTEXT.
mrds_data_                      000054 constant        entry                    external dcl 32

THERE WERE NO NAMES DECLARED BY CONTEXT OR IMPLICATION.

STORAGE REQUIREMENTS FOR THIS PROGRAM.

	Object	Text	Link	Symbol	Defs	Static
Start          0       0       376         414     323         406
Length      2526     323        16        2076      52           0

BLOCK NAME	         STACK SIZE     TYPE		WHY NONQUICK/WHO SHARES STACK FRAME
mrds_data_                          300 external procedure  is an external procedure.  

STORAGE FOR AUTOMATIC VARIABLES.

STACK FRAME                 LOC IDENTIFIER                  BLOCK NAME
mrds_data_               000100 md                          mrds_data_
                         000364 cdsa                        mrds_data_
                         000431 code                        mrds_data_

THE FOLLOWING EXTERNAL OPERATORS ARE USED BY THIS PROGRAM.
call_ext_out_desc   call_ext_out        return_mac          ext_entry

THE FOLLOWING EXTERNAL ENTRIES ARE CALLED BY THIS PROGRAM.
com_err_                      create_data_segment_

NO EXTERNAL VARIABLES ARE USED BY THIS PROGRAM.




   LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC   
     32 000053       150 000061       222 000244       223 000246       224 000250       225 000253       226 000256
    227 000257       228 000261       229 000262       231 000264       232 000276       233 000321


Object Segment >special_ldd>install>MR12.2-1073>mrds_data_
Created on 08/01/88  1341.0 mst Mon
by Hirneisen.SysMaint.a
using create_data_segment_, Version II of Thursday, November 20, 1986

        Object    Text    Defs    Link    Symb  Static
Start        0       0     264    1162    1172    1172
Length    1434     264     676      10     226       0


58 Definitions:


segname:    mrds_data_

text|0          caller_compile
text|1          caller_define_temp_rel
text|2          caller_delete
text|3          caller_modify
text|4          caller_retrieve
text|5          cleanup_lock_wait
text|6          control_segment_name
text|16         current_version
text|17         current_version_status
text|20         dmd_version
text|21         dsmd_version_number
text|22         lit_string_size
text|23         lock_wait
text|24         lock_wait_time
text|25         max_and_groups
text|26         max_and_terms
text|27         max_attributes
text|30         max_builtin_args
text|31         max_data_length
text|32         max_dbs
text|33         max_expr_items
text|34         max_expr_stack_size
text|35         max_id_len
text|36         max_key_len
text|37         max_line_size
text|40         max_lit_string_size
text|41         max_nested_expr
text|42         max_pred_depth
text|43         max_pred_nodes
text|44         max_pred_ops
text|45         max_relations
text|55         max_safe_tids_returned_per_call
text|46         max_select_items
text|47         max_sets
text|50         max_sf_args
text|51         max_string_size
text|52         max_td_len
text|53         max_temp_rels
text|54         max_tids_returned_per_call
text|56         max_token_size
text|57         max_tup_var
text|60         max_tuple_default
text|61         normal_mode
text|62         number_of_resultant_attributes
text|63         quiesce_mode
text|64         quiesce_wait
text|65         relation_blocking_factor
text|66         rmdb_info_directory
text|140        saved_res_version
text|142        statistics_update_count_interval
text|146        statistics_update_small_rel_size
text|144        statistics_update_time_interval
text|147        submodel_dir_name
symb|0          symbol_table
text|153        temp_seg_name
text|161        valid_id_chars
text|222        valid_rel_and_attr_name_chars


No Links.





                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
