	COMPILATION LISTING OF SEGMENT equal_
	Compiled by: Multics PL/I Compiler, Release 28d, of October 4, 1983
	Compiled at: Honeywell LCPD Phoenix, System M
	Compiled on: 10/25/83  1540.8 mst Tue
	    Options: optimize map

        1 /* ***********************************************************
        2*   *                                                         *
        3*   * Copyright, (C) Honeywell Information Systems Inc., 1982 *
        4*   *                                                         *
        5*   * Copyright (c) 1972 by Massachusetts Institute of        *
        6*   * Technology and Honeywell Information Systems, Inc.      *
        7*   *                                                         *
        8*   *********************************************************** */
        9 
       10 
       11 
       12 	/*  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */
       13 	/*									*/
       14 	/* N__a_m_e:  equal_								*/
       15 	/*									*/
       16 	/*      This program provides an interface between the obsolete routine, equal_, and	*/
       17 	/* the routine which has replaced it, get_equal_name_.  equal_ scans its character string	*/
       18 	/* arguments to compute their length, according to the algorithm:			*/
       19 	/*									*/
       20 	/*	do Larg = 1 to 32 while (substr (arg, Larg, 1) ^= " ");			*/
       21 	/*	     end;								*/
       22 	/*	Larg = Larg - 1;							*/
       23 	/*									*/
       24 	/* and then calls get_equal_name_ with these arguments, and returns its results.	*/
       25 	/* Eventually, this obsolete routine should be deleted.				*/
       26 	/*									*/
       27 	/* S__t_a_t_u_s									*/
       28 	/*									*/
       29 	/* 0) Created:  July, 1973 by G. C. Dixon					*/
       30 	/*									*/
       31 	/*  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */
       32 
       33 equal_:	procedure	(Pentry, Pequal, Ptarget, code);
       34 
       35      dcl	Pentry			ptr,		/* ptr to an entry name of 32 or fewer chars.(In)	*/
       36 	Pequal			ptr,		/* ptr to an equal name of 32 or fewer chars.(In)	*/
       37 	Ptarget			ptr,		/* ptr to a target name of 32 chars.(In)	*/
       38 	code			fixed bin(35);	/* a status code.				*/
       39 
       40      dcl	Lentry			fixed bin,	/* length of entry name.			*/
       41 	Lequal			fixed bin,	/* length of equal name.			*/
       42 	entry			char(Lentry) based (Pentry),
       43 	equal			char(Lequal) based (Pequal),
       44          (error_table_$bad_equal_name,
       45 	error_table_$badequal)	fixed bin(35) ext static,
       46 	get_equal_name_		entry (char(*), char(*), char(*), fixed bin(35)),
       47 	substr			builtin,
       48 	target			char(32) based (Ptarget);
       49 
       50 	do Lentry = 1 to 32 while (substr (entry, Lentry, 1) ^= " ");
       51 	     end;
       52 	Lentry = Lentry - 1;
       53 	do Lequal = 1 to 32 while (substr (equal, Lequal, 1) ^= " ");
       54 	     end;
       55 	Lequal = Lequal - 1;
       56 	call get_equal_name_ (entry, equal, target, code);
       57 	if code = error_table_$bad_equal_name then
       58 	     code = error_table_$badequal;
       59 
       60 	end equal_;
	SOURCE FILES USED IN THIS COMPILATION.

LINE      NUMBER  DATE MODIFIED     NAME			PATHNAME
             0    10/25/83  1444.6  equal_.pl1                        >spec>on>eod-fix>equal_.pl1
	NAMES DECLARED IN THIS COMPILATION.

IDENTIFIER	     OFFSET    LOC STORAGE CLASS   DATA TYPE		ATTRIBUTES AND REFERENCES
								(* indicates a set context)

NAMES DECLARED BY DECLARE STATEMENT.
Lentry                          000100 automatic       fixed bin(17,0)          dcl 40 set ref 50* 50 50* 52* 52 56 56
Lequal                          000101 automatic       fixed bin(17,0)          dcl 40 set ref 53* 53 53* 55* 55 56 56
Pentry                                 parameter       pointer                  dcl 35 ref 33 50 56
Pequal                                 parameter       pointer                  dcl 35 ref 33 53 56
Ptarget                                parameter       pointer                  dcl 35 ref 33 56
code                                   parameter       fixed bin(35,0)          dcl 35 set ref 33 56* 57 57*
entry                                  based           char                     unaligned dcl 40 set ref 50 56*
equal                                  based           char                     unaligned dcl 40 set ref 53 56*
error_table_$bad_equal_name     000010 external static fixed bin(35,0)          dcl 40 ref 57
error_table_$badequal           000012 external static fixed bin(35,0)          dcl 40 ref 57
get_equal_name_                 000014 constant        entry                    external dcl 40 ref 56
substr                                                 builtin function         dcl 40 ref 50 53
target                                 based           char(32)                 unaligned dcl 40 set ref 56*

NAME DECLARED BY EXPLICIT CONTEXT.
equal_                          000011 constant        entry                    external dcl 33

THERE WERE NO NAMES DECLARED BY CONTEXT OR IMPLICATION.

STORAGE REQUIREMENTS FOR THIS PROGRAM.

	Object	Text	Link	Symbol	Defs	Static
Start          0       0       202         220     126         212
Length       362     126        16         125      53           0

BLOCK NAME	         STACK SIZE     TYPE		WHY NONQUICK/WHO SHARES STACK FRAME
equal_                               86 external procedure  is an external procedure.  

STORAGE FOR AUTOMATIC VARIABLES.

STACK FRAME                 LOC IDENTIFIER                  BLOCK NAME
equal_                   000100 Lentry                      equal_
                         000101 Lequal                      equal_

THE FOLLOWING EXTERNAL OPERATORS ARE USED BY THIS PROGRAM.
call_ext_out_desc   return              ext_entry

THE FOLLOWING EXTERNAL ENTRIES ARE CALLED BY THIS PROGRAM.
get_equal_name_

THE FOLLOWING EXTERNAL VARIABLES ARE USED BY THIS PROGRAM.
error_table_$bad_equal_name   error_table_$badequal




   LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC   
     33 000004        50 000016        51 000032        52 000034        53 000036        54 000052        55 000054
     56 000056        57 000115        60 000124


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
