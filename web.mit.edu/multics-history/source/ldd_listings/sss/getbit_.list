	COMPILATION LISTING OF SEGMENT getbit_
	Compiled by: Multics PL/I Compiler, Release 31a, of October 12, 1988
	Compiled at: Honeywell Bull, Phoenix AZ, SysM
	Compiled on: 10/17/88  1008.0 mst Mon
	    Options: optimize map

        1 /****^  ***********************************************************
        2*        *                                                         *
        3*        * Copyright, (C) Honeywell Bull Inc., 1988                *
        4*        *                                                         *
        5*        * Copyright, (C) Honeywell Information Systems Inc., 1982 *
        6*        *                                                         *
        7*        * Copyright (c) 1972 by Massachusetts Institute of        *
        8*        * Technology and Honeywell Information Systems, Inc.      *
        9*        *                                                         *
       10*        *********************************************************** */
       11 
       12 
       13 
       14 
       15 /****^  HISTORY COMMENTS:
       16*  1) change(86-10-01,JRGray), approve(86-10-01,MCR7507),
       17*     audit(86-10-27,RWaters), install(86-11-12,MR12.0-1202):
       18*     Modified to support special definition relocation (part of join to
       19*     definition section support).
       20*                                                   END HISTORY COMMENTS */
       21 
       22 
       23 getbit_:
       24 	procedure (iaddr, basno, b29, relwrd);
       25 
       26           /* Modified for separate static on 06/15/75 by Eugene E Wiatrowski */
       27 	/* Modified on 11/02/72 at 18:46:27 by R F Mabee. */
       28 	/* Modified on 2 November 1972 by R F Mabee to allow linkage relocation on any base reference. */
       29 	/* Modified on 6 May 1972 by R F Mabee to distinguish linkage relocation from internal static. */
       30 	/* Modified by NA on June 23, 1970 at 1956 for ext entry dcln's */
       31 
       32  declare	 (iaddr, basno, b29, relwrd, itemp) fixed binary (26);
       33  declare   eb_data_$separate_static ext bit(1) aligned;
       34 
  1     1 
  1     2 
  1     3 
  1     4 	/* include file for RELBIT */
  1     5 
  1     6 declare 1 eb_data_$relbit ext aligned,
  1     7         2 (	iabsol,	itext,	imtext,	ilink,	imlink,	ilkptr,	idefpt,	isymbl,
  1     8 		imsymb,	ilblok,	imblok,	iselfr,	iresv1,	iresv2,	iresv3,	iresv4,
  1     9 		iescap,	iltext,	illink,	ilsymb,	ildefs,	ibits(3) ) fixed bin (26) aligned ;
  1    10 
  1    11 	/* end of the include file RELBIT */
  1    12 
  1    13 
  1    14 
       35 
       36 
  2     1 
  2     2 
  2     3 
  2     4 	/* the include file for LCSECT */
  2     5 
  2     6 declare 1 eb_data_$lcsect ext aligned,
  2     7         2 (lpsect,	lcsect(2) ) fixed bin (17) aligned ;
  2     8 
  2     9 
  2    10 
  2    11 	/* end of the include file for LCSECT */
  2    12 
       37 
       38 
  3     1 /* Begin include file alm_options.incl.pl1.
  3     2*   This file defines the external cells used to pass options to the various modules of the assembler.
  3     3*   Created on 03/17/72 at 01:39:44 by R F Mabee.
  3     4*   Last modified on 07/23/72 at 22:02:34 by R F Mabee. */
  3     5 
  3     6  declare	1 eb_data_$alm_options external static aligned,
  3     7 	  2 tnewcall fixed binary,		/* Use new call/save/return operators. */
  3     8 	  2 tnewmachine fixed binary,		/* Use followon hardware instruction set. */
  3     9 	  2 tnewobject fixed binary,		/* Use new object segment format. */
  3    10 	  2 tcheckcompatibility fixed binary,	/* Check for instructions changed in followon. */
  3    11 	  2 tquietsw fixed binary,		/* Suppress online printout of error messages. */
  3    12 	  2 tfirstreftrap fixed binary,	/* A first reference trap procedure was given. */
  3    13 	  2 tnoxref fixed binary;		/* Zero if cross reference if to be produced. */
  3    14 
  3    15 /* End of include file alm_options.incl.pl1  */
       39 
       40 
       41  declare	glpl_$crh external entry (fixed bin (26)) returns (fixed bin (26));
       42 
       43 
       44 	relwrd = 0;
       45 	if iaddr = 0 then return;
       46 
       47 	itemp = glpl_$crh (iaddr+4);
       48 
       49 	if b29 = 0
       50 /* If 18-bit address field. */
       51 	then if itemp = 1 then if tnewobject = 0 then relwrd = ilink;
       52 			   else if iaddr = lpsect then relwrd = ilink;	/* Reference to links. */
       53 			   else relwrd = ilblok;	/* New 18-bit internal static address. */
       54 	     else relwrd = ibits (itemp + 1);	/* Text or symbol section. */
       55 /* Else 15-bit address field. */
       56 	else if itemp = 1 then if tnewobject = 0 then relwrd = ilkptr;
       57 			else if iaddr = lpsect then relwrd = ilkptr;	/* 15-bit reference to links. */
       58 			else relwrd = imblok;	/* New internal static 15-bit address. */
       59 	     else;		/* Base reference, not in linkage section, absolute. */
       60 
       61 	if itemp = 8 then relwrd = 27; /* defn (33 octal) */
       62 	else if itemp = 4
       63 	   then if eb_data_$separate_static
       64 	        	 then if b29 = 0
       65 		         then relwrd = ilblok;
       66 		         else relwrd = imblok;
       67 
       68 	return;
       69 
       70 end getbit_;
	SOURCE FILES USED IN THIS COMPILATION.

LINE      NUMBER  DATE MODIFIED     NAME			PATHNAME
             0    10/17/88  0938.8  getbit_.pl1                       >spec>install>1170>getbit_.pl1
35           1    10/21/74  1242.9  relbit.incl.pl1                   >ldd>include>relbit.incl.pl1
37           2    05/06/74  1742.2  lcsect.incl.pl1                   >ldd>include>lcsect.incl.pl1
39           3    05/06/74  1740.2  alm_options.incl.pl1              >ldd>include>alm_options.incl.pl1
	NAMES DECLARED IN THIS COMPILATION.

IDENTIFIER	     OFFSET    LOC STORAGE CLASS   DATA TYPE		ATTRIBUTES AND REFERENCES
								(* indicates a set context)

NAMES DECLARED BY DECLARE STATEMENT.
b29                                    parameter       fixed bin(26,0)          dcl 32 ref 23 49 62
basno                                  parameter       fixed bin(26,0)          dcl 32 ref 23
eb_data_$alm_options            000016 external static structure                level 1 dcl 3-6
eb_data_$lcsect                 000014 external static structure                level 1 dcl 2-6
eb_data_$relbit                 000012 external static structure                level 1 dcl 1-6
eb_data_$separate_static        000010 external static bit(1)                   dcl 33 ref 62
glpl_$crh                       000020 constant        entry                    external dcl 41 ref 47
iaddr                                  parameter       fixed bin(26,0)          dcl 32 ref 23 45 47 52 57
ibits                    25     000012 external static fixed bin(26,0)          array level 2 dcl 1-6 ref 54
ilblok                   11     000012 external static fixed bin(26,0)          level 2 dcl 1-6 ref 53 62
ilink                     3     000012 external static fixed bin(26,0)          level 2 dcl 1-6 ref 49 52
ilkptr                    5     000012 external static fixed bin(26,0)          level 2 dcl 1-6 ref 56 57
imblok                   12     000012 external static fixed bin(26,0)          level 2 dcl 1-6 ref 58 66
itemp                           000100 automatic       fixed bin(26,0)          dcl 32 set ref 47* 49 54 56 61 62
lpsect                          000014 external static fixed bin(17,0)          level 2 dcl 2-6 ref 52 57
relwrd                                 parameter       fixed bin(26,0)          dcl 32 set ref 23 44* 49* 52* 53* 54* 56* 57* 58*
                                                                                  61* 62* 66*
tnewobject                2     000016 external static fixed bin(17,0)          level 2 dcl 3-6 ref 49 56

NAME DECLARED BY EXPLICIT CONTEXT.
getbit_                         000006 constant        entry                    external dcl 23

THERE WERE NO NAMES DECLARED BY CONTEXT OR IMPLICATION.

STORAGE REQUIREMENTS FOR THIS PROGRAM.

	Object	Text	Link	Symbol	Defs	Static
Start          0       0       224         246     141         234
Length       462     141        22         177      63           0

BLOCK NAME	         STACK SIZE     TYPE		WHY NONQUICK/WHO SHARES STACK FRAME
getbit_                              72 external procedure  is an external procedure.  

STORAGE FOR AUTOMATIC VARIABLES.

STACK FRAME                 LOC IDENTIFIER                  BLOCK NAME
getbit_                  000100 itemp                       getbit_

THE FOLLOWING EXTERNAL OPERATORS ARE USED BY THIS PROGRAM.
call_ext_out        return_mac          ext_entry

THE FOLLOWING EXTERNAL ENTRIES ARE CALLED BY THIS PROGRAM.
glpl_$crh

THE FOLLOWING EXTERNAL VARIABLES ARE USED BY THIS PROGRAM.
eb_data_$alm_options          eb_data_$lcsect               eb_data_$relbit               eb_data_$separate_static




   LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC   
     23 000001        44 000013        45 000015        47 000017        49 000031        52 000047        53 000056
     54 000062        56 000067        57 000102        58 000111        61 000114        62 000122        66 000135
     68 000140


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
