	COMPILATION LISTING OF SEGMENT signal_io_error_
	Compiled by: Multics PL/I Compiler, Release 27d, of October 11, 1982
	Compiled at: Honeywell LISD Phoenix, System M
	Compiled on: 11/04/82  1714.3 mst Thu
	    Options: optimize map

        1 /* ***********************************************************
        2*   *                                                         *
        3*   * Copyright, (C) Honeywell Information Systems Inc., 1982 *
        4*   *                                                         *
        5*   * Copyright (c) 1972 by Massachusetts Institute of        *
        6*   * Technology and Honeywell Information Systems, Inc.      *
        7*   *                                                         *
        8*   *********************************************************** */
        9 
       10 
       11 /* format: style3,idind30,ll122,ifthenstmt */
       12 
       13 signal_io_error_:
       14      procedure (message, switch, status);
       15 
       16 declare	message			char (*),
       17 	switch			ptr,
       18 	status			fixed bin (35);
       19 
       20 declare	signal_			entry () options (variable);
       21 
       22 declare	1 io_error_info		aligned,
       23 	  2 length		fixed bin,
       24 	  2 version		fixed bin initial (1),
       25 	  2 action_flags,
       26 	    3 cant_restart		bit (1) unaligned initial ("0"b),
       27 	    3 default_restart	bit (1) unaligned initial ("0"b),
       28 	    3 pad			bit (34) unaligned initial (""b),
       29 	  2 info_string		char (256) varying initial (message),
       30 	  2 status_code		fixed bin (35) initial (status),
       31 	  2 stream		char (32) initial (switch -> iocb.name),
       32 	  2 io_status		bit (72) initial (""b);
       33 
  1     1 /* BEGIN INCLUDE FILE ..... iocb.incl.pl1 ..... 13 Feb 1975, M. Asherman */
  1     2 /* format: style2 */
  1     3 
  1     4      dcl	   1 iocb		      aligned based,	/* I/O control block. */
  1     5 	     2 version	      character (4) aligned,
  1     6 	     2 name	      char (32),		/* I/O name of this block. */
  1     7 	     2 actual_iocb_ptr    ptr,		/* IOCB ultimately SYNed to. */
  1     8 	     2 attach_descrip_ptr ptr,		/* Ptr to printable attach description. */
  1     9 	     2 attach_data_ptr    ptr,		/* Ptr to attach data structure. */
  1    10 	     2 open_descrip_ptr   ptr,		/* Ptr to printable open description. */
  1    11 	     2 open_data_ptr      ptr,		/* Ptr to open data structure (old SDB). */
  1    12 	     2 reserved	      bit (72),		/* Reserved for future use. */
  1    13 	     2 detach_iocb	      entry (ptr, fixed (35)),/* detach_iocb(p,s) */
  1    14 	     2 open	      entry (ptr, fixed, bit (1) aligned, fixed (35)),
  1    15 						/* open(p,mode,not_used,s) */
  1    16 	     2 close	      entry (ptr, fixed (35)),/* close(p,s) */
  1    17 	     2 get_line	      entry (ptr, ptr, fixed (21), fixed (21), fixed (35)),
  1    18 						/* get_line(p,bufptr,buflen,actlen,s) */
  1    19 	     2 get_chars	      entry (ptr, ptr, fixed (21), fixed (21), fixed (35)),
  1    20 						/* get_chars(p,bufptr,buflen,actlen,s) */
  1    21 	     2 put_chars	      entry (ptr, ptr, fixed (21), fixed (35)),
  1    22 						/* put_chars(p,bufptr,buflen,s) */
  1    23 	     2 modes	      entry (ptr, char (*), char (*), fixed (35)),
  1    24 						/* modes(p,newmode,oldmode,s) */
  1    25 	     2 position	      entry (ptr, fixed, fixed (21), fixed (35)),
  1    26 						/* position(p,u1,u2,s) */
  1    27 	     2 control	      entry (ptr, char (*), ptr, fixed (35)),
  1    28 						/* control(p,order,infptr,s) */
  1    29 	     2 read_record	      entry (ptr, ptr, fixed (21), fixed (21), fixed (35)),
  1    30 						/* read_record(p,bufptr,buflen,actlen,s) */
  1    31 	     2 write_record	      entry (ptr, ptr, fixed (21), fixed (35)),
  1    32 						/* write_record(p,bufptr,buflen,s) */
  1    33 	     2 rewrite_record     entry (ptr, ptr, fixed (21), fixed (35)),
  1    34 						/* rewrite_record(p,bufptr,buflen,s) */
  1    35 	     2 delete_record      entry (ptr, fixed (35)),/* delete_record(p,s) */
  1    36 	     2 seek_key	      entry (ptr, char (256) varying, fixed (21), fixed (35)),
  1    37 						/* seek_key(p,key,len,s) */
  1    38 	     2 read_key	      entry (ptr, char (256) varying, fixed (21), fixed (35)),
  1    39 						/* read_key(p,key,len,s) */
  1    40 	     2 read_length	      entry (ptr, fixed (21), fixed (35));
  1    41 						/* read_length(p,len,s) */
  1    42 
  1    43      declare iox_$iocb_version_sentinel
  1    44 			      character (4) aligned external static;
  1    45 
  1    46 /* END INCLUDE FILE ..... iocb.incl.pl1 ..... */
       34 
       35 
       36 	io_error_info.length = size (io_error_info);	/* Compiler won't allow this as initial attribute		*/
       37 
       38 	call signal_ ("io_error", null (), addr (io_error_info));
       39 
       40 	return;
       41      end signal_io_error_;
	SOURCE FILES USED IN THIS COMPILATION.

LINE      NUMBER  DATE MODIFIED     NAME			PATHNAME
             0    11/04/82  1618.0  signal_io_error_.pl1              >dumps>old>recomp>signal_io_error_.pl1
34           1    07/28/81  1333.4  iocb.incl.pl1                     >ldd>include>iocb.incl.pl1
	NAMES DECLARED IN THIS COMPILATION.

IDENTIFIER	     OFFSET    LOC STORAGE CLASS   DATA TYPE		ATTRIBUTES AND REFERENCES
								(* indicates a set context)

NAMES DECLARED BY DECLARE STATEMENT.
action_flags              2     000100 automatic       structure                level 2 dcl 22
cant_restart              2     000100 automatic       bit(1)                   initial level 3 packed unaligned dcl 22 set ref 22*
default_restart           2(01) 000100 automatic       bit(1)                   initial level 3 packed unaligned dcl 22 set ref 22*
info_string               3     000100 automatic       varying char(256)        initial level 2 dcl 22 set ref 22*
io_error_info                   000100 automatic       structure                level 1 dcl 22 set ref 36 38 38
io_status               115     000100 automatic       bit(72)                  initial level 2 dcl 22 set ref 22*
iocb                                   based           structure                level 1 dcl 1-4
length                          000100 automatic       fixed bin(17,0)          level 2 dcl 22 set ref 36*
message                                parameter       char                     unaligned dcl 16 ref 13 22
name                      1            based           char(32)                 level 2 dcl 1-4 ref 22
pad                       2(02) 000100 automatic       bit(34)                  initial level 3 packed unaligned dcl 22 set ref 22*
signal_                         000010 constant        entry                    external dcl 20 ref 38
status                                 parameter       fixed bin(35,0)          dcl 16 ref 13 22
status_code             104     000100 automatic       fixed bin(35,0)          initial level 2 dcl 22 set ref 22*
stream                  105     000100 automatic       char(32)                 initial level 2 dcl 22 set ref 22*
switch                                 parameter       pointer                  dcl 16 ref 13 22
version                   1     000100 automatic       fixed bin(17,0)          initial level 2 dcl 22 set ref 22*

NAME DECLARED BY DECLARE STATEMENT AND NEVER REFERENCED.
iox_$iocb_version_sentinel             external static char(4)                  dcl 1-43

NAME DECLARED BY EXPLICIT CONTEXT.
signal_io_error_                000016 constant        entry                    external dcl 13

NAMES DECLARED BY CONTEXT OR IMPLICATION.
addr                                                   builtin function         ref 38 38
null                                                   builtin function         ref 38 38
size                                                   builtin function         ref 36

STORAGE REQUIREMENTS FOR THIS PROGRAM.

	Object	Text	Link	Symbol	Defs	Static
Start          0       0       152         164     117         162
Length       342     117        12         141      33           0

BLOCK NAME	         STACK SIZE     TYPE		WHY NONQUICK/WHO SHARES STACK FRAME
signal_io_error_                    164 external procedure  is an external procedure.  

STORAGE FOR AUTOMATIC VARIABLES.

STACK FRAME                 LOC IDENTIFIER                  BLOCK NAME
signal_io_error_         000100 io_error_info               signal_io_error_

THE FOLLOWING EXTERNAL OPERATORS ARE USED BY THIS PROGRAM.
call_ext_out_desc   return              ext_entry_desc

THE FOLLOWING EXTERNAL ENTRIES ARE CALLED BY THIS PROGRAM.
signal_

NO EXTERNAL VARIABLES ARE USED BY THIS PROGRAM.




   LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC   
     13 000012        22 000031        36 000065        38 000067        40 000114


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
