	COMPILATION LISTING OF SEGMENT create_array
	Compiled by: Multics PL/I Compiler, Release 28d, of September 14, 1983
	Compiled at: Honeywell LCPD Phoenix, System M
	Compiled on: 10/03/83  1602.6 mst Mon
	    Options: optimize map

        1 /* ***********************************************************
        2*   *                                                         *
        3*   * Copyright, (C) Honeywell Information Systems Inc., 1982 *
        4*   *                                                         *
        5*   *********************************************************** */
        6 
        7 /* ******************************************************
        8*   *                                                    *
        9*   *                                                    *
       10*   * Copyright (c) 1972 by Massachusetts Institute of   *
       11*   * Technology and Honeywell Information Systems, Inc. *
       12*   *                                                    *
       13*   *                                                    *
       14*   ****************************************************** */
       15 
       16 create_array: proc returns(ptr) ;
       17 
       18 /*	Modified on:	April 1977 by RHS for new allocation methods */
       19 
       20 dcl	1 pl1_nodes_template_$array_template external like array aligned;
       21 
       22 dcl	p ptr;
       23 dcl	null builtin;
       24 dcl	pl1_stat_$node_uses(32) fixed bin ext;
       25 
  1     1 /* BEGIN INCLUDE FILE ... pl1_tree_areas.incl.pl1 */
  1     2 
  1     3 /* format: style3 */
  1     4 dcl	tree_area		area based (pl1_stat_$tree_area_ptr);
  1     5 dcl	xeq_tree_area	area based (pl1_stat_$xeq_tree_area_ptr);
  1     6 
  1     7 dcl	pl1_stat_$tree_area_ptr
  1     8 			ptr ext static,
  1     9 	pl1_stat_$xeq_tree_area_ptr
  1    10 			ptr ext static;
  1    11 
  1    12 /* END INCLUDE FILE ... op_codes.incl.pl1 */
       26 
  2     1 /* BEGIN INCLUDE FILE ... nodes.incl.pl1 */
  2     2 
  2     3 /* Modified: 26 Dec 1979 by PCK to implement by name assignment */
  2     4 
  2     5 dcl (	block_node		initial("000000001"b),
  2     6 	statement_node		initial("000000010"b),
  2     7 	operator_node		initial("000000011"b),
  2     8 	reference_node		initial("000000100"b),
  2     9 	token_node		initial("000000101"b),
  2    10 	symbol_node		initial("000000110"b),
  2    11 	context_node		initial("000000111"b),
  2    12 	array_node		initial("000001000"b),
  2    13 	bound_node		initial("000001001"b),
  2    14 	format_value_node		initial("000001010"b),
  2    15 	list_node			initial("000001011"b),
  2    16 	default_node		initial("000001100"b),
  2    17 	machine_state_node		initial("000001101"b),
  2    18 	source_node		initial("000001110"b),
  2    19 	label_node		initial("000001111"b),
  2    20 	cross_reference_node	initial("000010000"b),
  2    21 	sf_par_node		initial("000010001"b),
  2    22 	temporary_node		initial("000010010"b),
  2    23 	label_array_element_node	initial("000010011"b),
  2    24 	by_name_agg_node		initial("000010100"b))
  2    25 				bit(9) internal static aligned options(constant);
  2    26 
  2    27 dcl	1 node			based aligned,
  2    28 	2 type			unal bit(9),
  2    29 	2 source_id		unal structure,
  2    30 	  3 file_number		bit(8),
  2    31 	  3 line_number		bit(14),
  2    32 	  3 statement_number	bit(5);
  2    33 
  2    34 /* END INCLUDE FILE ... nodes.incl.pl1 */
       27 
  3     1 dcl	1 array			based aligned,
  3     2 	2 node_type		bit(9) unaligned,
  3     3 	2 reserved		bit(34) unaligned,
  3     4 	2 number_of_dimensions	fixed(7) unaligned,
  3     5 	2 own_number_of_dimensions	fixed(7) unaligned,
  3     6 	2 element_boundary		fixed(3) unaligned,
  3     7 	2 size_units		fixed(3) unaligned,
  3     8 	2 offset_units		fixed(3) unaligned,
  3     9 	2 interleaved		bit(1) unaligned,
  3    10 	2 c_element_size		fixed(24),
  3    11 	2 c_element_size_bits	fixed(24),
  3    12 	2 c_virtual_origin		fixed(24),
  3    13 	2 element_size		ptr unaligned,
  3    14 	2 element_size_bits		ptr unaligned,
  3    15 	2 virtual_origin		ptr unaligned,
  3    16 	2 symtab_virtual_origin	ptr unaligned,
  3    17 	2 symtab_element_size	ptr unaligned,
  3    18 	2 bounds			ptr unaligned,
  3    19 	2 element_descriptor	ptr unaligned;
  3    20 
  3    21 dcl	1 bound			based aligned,
  3    22 	2 node_type		bit(9),
  3    23 	2 c_lower			fixed(24),
  3    24 	2 c_upper			fixed(24),
  3    25 	2 c_multiplier		fixed(24),
  3    26 	2 c_desc_multiplier		fixed(24),
  3    27 	2 lower			ptr unaligned,
  3    28 	2 upper			ptr unaligned,
  3    29 	2 multiplier		ptr unaligned,
  3    30 	2 desc_multiplier		ptr unaligned,
  3    31 	2 symtab_lower		ptr unaligned,
  3    32 	2 symtab_upper		ptr unaligned,
  3    33 	2 symtab_multiplier		ptr unaligned,
  3    34 	2 next			ptr unaligned;
       28 
       29 
       30 
       31 			/*      */
       32 
       33 	pl1_stat_$node_uses(8) = pl1_stat_$node_uses(8) + 1;
       34 
       35 	allocate array in(tree_area) set(p);
       36 
       37 	p->array = pl1_nodes_template_$array_template;
       38 
       39 	return(p);
       40 
       41 	end create_array;
	SOURCE FILES USED IN THIS COMPILATION.

LINE      NUMBER  DATE MODIFIED     NAME			PATHNAME
             0    10/03/83  1007.2  create_array.pl1                  >spec>on>pl128d>create_array.pl1
26           1    07/21/80  1546.3  pl1_tree_areas.incl.pl1           >ldd>include>pl1_tree_areas.incl.pl1
27           2    07/21/80  1546.3  nodes.incl.pl1                    >ldd>include>nodes.incl.pl1
28           3    05/06/74  1741.6  array.incl.pl1                    >ldd>include>array.incl.pl1
	NAMES DECLARED IN THIS COMPILATION.

IDENTIFIER	     OFFSET    LOC STORAGE CLASS   DATA TYPE		ATTRIBUTES AND REFERENCES
								(* indicates a set context)

NAMES DECLARED BY DECLARE STATEMENT.
array                                  based           structure                level 1 dcl 3-1 set ref 35 37*
p                               000100 automatic       pointer                  dcl 22 set ref 35* 37 39
pl1_nodes_template_$array_template
                                000010 external static structure                level 1 dcl 20 ref 37
pl1_stat_$node_uses             000012 external static fixed bin(17,0)          array dcl 24 set ref 33* 33
pl1_stat_$tree_area_ptr         000014 external static pointer                  dcl 1-7 ref 35
tree_area                              based           area(1024)               dcl 1-4 ref 35

NAMES DECLARED BY DECLARE STATEMENT AND NEVER REFERENCED.
array_node                             internal static bit(9)                   initial dcl 2-5
block_node                             internal static bit(9)                   initial dcl 2-5
bound                                  based           structure                level 1 dcl 3-21
bound_node                             internal static bit(9)                   initial dcl 2-5
by_name_agg_node                       internal static bit(9)                   initial dcl 2-5
context_node                           internal static bit(9)                   initial dcl 2-5
cross_reference_node                   internal static bit(9)                   initial dcl 2-5
default_node                           internal static bit(9)                   initial dcl 2-5
format_value_node                      internal static bit(9)                   initial dcl 2-5
label_array_element_node               internal static bit(9)                   initial dcl 2-5
label_node                             internal static bit(9)                   initial dcl 2-5
list_node                              internal static bit(9)                   initial dcl 2-5
machine_state_node                     internal static bit(9)                   initial dcl 2-5
node                                   based           structure                level 1 dcl 2-27
null                                                   builtin function         dcl 23
operator_node                          internal static bit(9)                   initial dcl 2-5
pl1_stat_$xeq_tree_area_ptr            external static pointer                  dcl 1-7
reference_node                         internal static bit(9)                   initial dcl 2-5
sf_par_node                            internal static bit(9)                   initial dcl 2-5
source_node                            internal static bit(9)                   initial dcl 2-5
statement_node                         internal static bit(9)                   initial dcl 2-5
symbol_node                            internal static bit(9)                   initial dcl 2-5
temporary_node                         internal static bit(9)                   initial dcl 2-5
token_node                             internal static bit(9)                   initial dcl 2-5
xeq_tree_area                          based           area(1024)               dcl 1-5

NAME DECLARED BY EXPLICIT CONTEXT.
create_array                    000004 constant        entry                    external dcl 16

THERE WERE NO NAMES DECLARED BY CONTEXT OR IMPLICATION.

STORAGE REQUIREMENTS FOR THIS PROGRAM.

	Object	Text	Link	Symbol	Defs	Static
Start          0       0       114         132      32         124
Length       342      32        16         174      61           0

BLOCK NAME	         STACK SIZE     TYPE		WHY NONQUICK/WHO SHARES STACK FRAME
create_array                         66 external procedure  is an external procedure.  

STORAGE FOR AUTOMATIC VARIABLES.

STACK FRAME                 LOC IDENTIFIER                  BLOCK NAME
create_array             000100 p                           create_array

THE FOLLOWING EXTERNAL OPERATORS ARE USED BY THIS PROGRAM.
return              ext_entry           alloc_based

NO EXTERNAL ENTRIES ARE CALLED BY THIS PROGRAM.

THE FOLLOWING EXTERNAL VARIABLES ARE USED BY THIS PROGRAM.
pl1_nodes_template_$array_template                          pl1_stat_$node_uses           pl1_stat_$tree_area_ptr




   LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC   
     16 000001        33 000011        35 000013        37 000022        39 000027


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
