	COMPILATION LISTING OF SEGMENT octevl_
	Compiled by: Multics PL/I Compiler, Release 31a, of October 12, 1988
	Compiled at: Honeywell Bull, Phoenix AZ, SysM
	Compiled on: 10/17/88  1006.8 mst Mon
	    Options: optimize map

        1 /****^  ***********************************************************
        2*        *                                                         *
        3*        * Copyright, (C) Honeywell Bull Inc., 1988                *
        4*        *                                                         *
        5*        * Copyright, (C) Honeywell Information Systems Inc., 1982 *
        6*        *                                                         *
        7*        * Copyright (c) 1972 by Massachusetts Institute of        *
        8*        * Technology and Honeywell Information Systems, Inc.      *
        9*        *                                                         *
       10*        *********************************************************** */
       11 
       12 
       13 
       14 /****^  HISTORY COMMENTS:
       15*  1) change(86-09-03,Oke), approve(86-09-03,MCR7543), audit(86-09-30,JRGray),
       16*     install(86-10-08,MR12.0-1180):
       17*     Extend octal input
       18*     processing to permit 1 or 2 word values.  Double precision is selected
       19*     if an "L" suffix is supplied.  Previously >12 digits wasg an F error,
       20*     now an "F" error is >12 digits if single, >24 digits if double.  Permits
       21*     double-word octal literals and constants to be generated.
       22*                                                   END HISTORY COMMENTS */
       23 
       24 octevl_:
       25 	procedure( rslts ) returns ( fixed bin(17) );
       26 
       27 /* OCTEVL:     evaluates octal literal field and returns results and brk. */
       28 /* octevl returns one word if no "L" suffix, two words if "L" suffix  */
       29 /* supplied.  Modifier done by litevl. */
       30 /*  note that according to bsa conventions, no negative sign is */
       31 /*  allowed in octal fields, and fields may be separated by */
       32 /*  commas followed by blanks. */
       33 
       34 	/* Last modified by Nate Adleman on June 28, 1970 at 2104 for the new CODTAB */
       35 
       36 /* INCLUDE FILES USED BY OCTEVL */
       37 
  1     1 /* Begin include file varcom.incl.pl1. */
  1     2 /* RHG added new variables 9/7/70. */
  1     3 /* RFM added new cells for new object segment format and first-reference trap, 27 March 1972. */
  1     4 /* RFM added include file stuff, then cross referencer stuff, 23 July 1972. */
  1     5 /* Last modified on 07/23/72 at 04:19:25 by R F Mabee. */
  1     6   
  1     7  declare	1 eb_data_$varcom external aligned,
  1     8 	  2 (brk(2),	nbrk(2),	sym(8),	dsym(8),old_locsym,	pc,	spc,	tpc,
  1     9 	   pclst,		p2pcl,	old_ndpcls,	tvorg,	tvcnt,	tvlth,	litorg,
  1    10 	   litc,		deforg,	defc,	defcnt,	stkc,	lnkc,	lnkno,
  1    11 	   litlst,	old_ndltls, lnklst,	old_ndlkls,	explst,	blklst,	namlst,
  1    12 	   trplst,	xdflst,	tvlst,	begin_line, tpass1,	tpass2,	tpostp,
  1    13 	   tinhib,	tmmode,	txonly,	tmm2,	txo2,	tprot,	tcall,
  1    14 	   tmvdef,	tpulnk,	tfatal,	calrho,	lreter,	passwd,	binlin,
  1    15 	   nboxes,   box(0:210),   myfil,	mynam,	myblk,	mylnk,	tpost1 ) fixed bin (26) ,
  1    16 	  2 source_printed bit(1) aligned,
  1    17 	  2 (ndpcls,	ndltls,	ndlkls,	ndtvls) ptr,
  1    18 	  2 (basno,	value,	admod,	b29,	iaddr,	symlnk ) fixed bin (26),
  1    19 	  2 (itxtmod, ilnkmod, entrieslc, include_file_list, include_index,
  1    20 	     first_ref_trap_proc_linkno, first_ref_trap_arg_linkno,
  1    21 	     text_section_length) fixed binary (26),
  1    22 	  2 (include_info_stack, include_name_list_base, include_name_list_top) pointer,
  1    23 	  2 symbol_tree_rel fixed binary (26);
  1    24 
  1    25 /* End of the include file varcom.incl.pl1. */
       38 
  2     1 
  2     2 /* Last modified by EBush on 2/5/81 to add prnta */
  2     3 
  2     4 
  2     5  declare 1 eb_data_$erflgs ext aligned,
  2     6           2 flgvec (36) fixed bin  (17) aligned ;
  2     7   
  2     8   
  2     9   declare 1 eb_data_$erflgs_overlay ext aligned,	/* overlays the FLGVEC */
  2    10           2 (prnte, prntf, prntm, prntn, prnto, prntp,
  2    11   	 prntr, prnts, prntt, prntu, prntx, prntb,
  2    12   	 prntc, prntd, prnta, prnt5, prnt6, prnt7,
  2    13   	 tstsw(18)	) fixed bin (17) aligned ;
  2    14   
  2    15   
       39 
  3     1 
  3     2 
  3     3 
  3     4 	/* include file for CODTAB */
  3     5 
  3     6 declare 1 eb_data_$codtab ext aligned,
  3     7         2 (	inul,	isoh,	istx,	ietx,	ieot,	ienq,	iack,	ibel,
  3     8 		ibs,	iht,	inl,	ivt,	iff,	icr,	irrs,	ibrs,
  3     9 		idle,	irht,	ihlf,	irvt,	ihlr,	inak,	isyn,	ietb,
  3    10 		ican,	iem,	iss,	iesc,	ifs,	igs,	irs,	ius,
  3    11 		isp,	ixclm,	iquot,	ilb,	idolr,	ipcnt,	iampr,	iapos,
  3    12 		ilpar,	irpar,	istar,	iplus,	icomma,	iminus,	ipoint,	islash,
  3    13 		inum, inum_pad(9), icol,	isc,	ilpb,	iequal,	irpb,	iques,	iat,
  3    14 		ilet, ilet_pad(25), ilsb,	irslsh,	irsb,	icflx,	iulin,	igrv,    illet,illet_pad(25),
  3    15 		ilbrc,	ivlin,	irbrc,	itldf,	idel ) fixed bin (17) ;
  3    16 					/* NA on June 26, 1970 at 1344 for padded arrays */
       40 
       41 
       42 /* AUTOMATIC DATA USED BY OCTEVL */
       43 
       44 declare double bit (1);
       45 declare nochrs fixed bin(17) ;
       46 dcl rslts(2) fixed bin (35);
       47 dcl num bit (72) aligned;
       48 dcl num_array (2) fixed bin (35) unaligned based (addr (num));
       49 /* EXTERNAL ENTRIES CALLED BY OCTEVL */
       50 
       51 declare	inputs_$next ext entry,
       52 	inputs_$nxtnb ext entry ;
       53 
       54 
       55 /* EXTERNAL FUNCTIONS USED BY OCTEVL */
       56 
       57 declare	utils_$and ext entry (fixed bin(26), fixed bin(26)) returns (fixed bin(26)) ;
       58  
       59  
       60 /**/
       61 /* - - - - - - - - - PROGRAM STARTS HERE - - - - - - - - */
       62 
       63 	/* setup num and get next character */
       64 
       65 label_100:
       66 	double = ""b;
       67 	num = "0"b;
       68 	nochrs = 0;
       69 	call inputs_$nxtnb;
       70 
       71 /*   conversion loop. */
       72 
       73 label_110:
       74 	if (brk(1) ^= inum) then go to label_150;
       75 
       76 /*   check to see that only octal digits are in the expression */
       77 /* by  seeing if the digit is greater than 7 */
       78 /* 55 is 067 octal which is the ascii character 7 */
       79 
       80 	if  brk(2) > 55 then  prnt7 = 1;	/*TRUE*/
       81 
       82 /* now check to see that there are  no more than 12 characters */
       83 /* in the expression */
       84 
       85 	nochrs = nochrs + 1;
       86 	if  nochrs > 24  then prntf = 1;	/*TRUE*/
       87 	num = substr (num, 4, 69) || bit (fixed (brk(2)-48, 3));
       88 	call inputs_$next;
       89 	go to label_110;
       90 
       91 /*   set results and return to caller. */
       92 
       93 label_150:
       94 	if byte(brk(2)) = "L" then do;
       95 	     double = "1"b;
       96 	     call inputs_$next;
       97 	end;
       98 	if ^double then do;
       99 	     if nochrs > 12 then prntf = 1;	/*TRUE*/
      100 	     rslts(1) = num_array (2);
      101 	     return(1);
      102 	end;
      103 
      104 /* return two words. */
      105 
      106 	rslts(1) = num_array (1);
      107 	rslts(2) = num_array (2);
      108 	return (2);
      109 	end octevl_ ;
	SOURCE FILES USED IN THIS COMPILATION.

LINE      NUMBER  DATE MODIFIED     NAME			PATHNAME
             0    10/17/88  0938.7  octevl_.pl1                       >spec>install>1170>octevl_.pl1
38           1    10/21/74  1242.9  varcom.incl.pl1                   >ldd>include>varcom.incl.pl1
39           2    07/17/81  1911.5  erflgs.incl.pl1                   >ldd>include>erflgs.incl.pl1
40           3    05/06/74  1741.0  codtab.incl.pl1                   >ldd>include>codtab.incl.pl1
	NAMES DECLARED IN THIS COMPILATION.

IDENTIFIER	     OFFSET    LOC STORAGE CLASS   DATA TYPE		ATTRIBUTES AND REFERENCES
								(* indicates a set context)

NAMES DECLARED BY DECLARE STATEMENT.
brk                             000010 external static fixed bin(26,0)          array level 2 dcl 1-7 ref 73 80 87 93
double                          000100 automatic       bit(1)                   packed unaligned dcl 44 set ref 65* 95* 98
eb_data_$codtab                 000014 external static structure                level 1 dcl 3-6
eb_data_$erflgs_overlay         000012 external static structure                level 1 dcl 2-9
eb_data_$varcom                 000010 external static structure                level 1 dcl 1-7
inputs_$next                    000016 constant        entry                    external dcl 51 ref 88 96
inputs_$nxtnb                   000020 constant        entry                    external dcl 51 ref 69
inum                     60     000014 external static fixed bin(17,0)          level 2 dcl 3-6 ref 73
nochrs                          000101 automatic       fixed bin(17,0)          dcl 45 set ref 68* 85* 85 86 99
num                             000102 automatic       bit(72)                  dcl 47 set ref 67* 87* 87 100 106 107
num_array                              based           fixed bin(35,0)          array packed unaligned dcl 48 ref 100 106 107
prnt7                    21     000012 external static fixed bin(17,0)          level 2 dcl 2-9 set ref 80*
prntf                     1     000012 external static fixed bin(17,0)          level 2 dcl 2-9 set ref 86* 99*
rslts                                  parameter       fixed bin(35,0)          array dcl 46 set ref 24 100* 106* 107*

NAMES DECLARED BY DECLARE STATEMENT AND NEVER REFERENCED.
eb_data_$erflgs                        external static structure                level 1 dcl 2-5
utils_$and                      000000 constant        entry                    external dcl 57

NAMES DECLARED BY EXPLICIT CONTEXT.
label_100                       000021 constant        label                    dcl 65
label_110                       000031 constant        label                    dcl 73 ref 89
label_150                       000074 constant        label                    dcl 93 ref 73
octevl_                         000014 constant        entry                    external dcl 24

NAMES DECLARED BY CONTEXT OR IMPLICATION.
addr                                                   builtin function         ref 100 106 107
bit                                                    builtin function         ref 87
byte                                                   builtin function         ref 93
fixed                                                  builtin function         ref 87
substr                                                 builtin function         ref 87

STORAGE REQUIREMENTS FOR THIS PROGRAM.

	Object	Text	Link	Symbol	Defs	Static
Start          0       0       222         244     137         232
Length       454     137        22         174      63           0

BLOCK NAME	         STACK SIZE     TYPE		WHY NONQUICK/WHO SHARES STACK FRAME
octevl_                              70 external procedure  is an external procedure.  

STORAGE FOR AUTOMATIC VARIABLES.

STACK FRAME                 LOC IDENTIFIER                  BLOCK NAME
octevl_                  000100 double                      octevl_
                         000101 nochrs                      octevl_
                         000102 num                         octevl_

THE FOLLOWING EXTERNAL OPERATORS ARE USED BY THIS PROGRAM.
call_ext_out        return_mac          ext_entry

THE FOLLOWING EXTERNAL ENTRIES ARE CALLED BY THIS PROGRAM.
inputs_$next                  inputs_$nxtnb

THE FOLLOWING EXTERNAL VARIABLES ARE USED BY THIS PROGRAM.
eb_data_$codtab               eb_data_$erflgs_overlay       eb_data_$varcom




   LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC   
     24 000010        65 000021        67 000022        68 000024        69 000025        73 000031        80 000036
     85 000045        86 000046        87 000054        88 000067        89 000073        93 000074        95 000101
     96 000103        98 000107        99 000111       100 000120       101 000123       106 000126       107 000131
    108 000134


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
