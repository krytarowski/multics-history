	COMPILATION LISTING OF SEGMENT set_epilogue_command
	Compiled by: Multics PL/I Compiler, Release 27d, of October 11, 1982
	Compiled at: Honeywell LISD Phoenix, System M
	Compiled on: 11/04/82  1818.6 mst Thu
	    Options: optimize map

        1 /* ***********************************************************
        2*   *                                                         *
        3*   * Copyright, (C) Honeywell Information Systems Inc., 1982 *
        4*   *                                                         *
        5*   * Copyright (c) 1972 by Massachusetts Institute of        *
        6*   * Technology and Honeywell Information Systems, Inc.      *
        7*   *                                                         *
        8*   *********************************************************** */
        9 
       10 
       11 set_epilogue_command: sec: proc;
       12 
       13 dcl  command char (256) int static init ("");
       14 dcl  code fixed bin (35);
       15 dcl  argp ptr;
       16 dcl  arglen fixed bin;
       17 dcl  arg char (arglen) based (argp);
       18 
       19 dcl  cu_$arg_ptr entry (fixed bin, ptr, fixed bin, fixed bin (35));
       20 dcl  com_err_ entry options (variable);
       21 dcl  default_error_handler_$add_finish_handler entry (entry, fixed bin (35));
       22 dcl  cu_$cp entry (ptr, fixed bin, fixed bin (35));
       23 
       24 	code = 0;
       25 	call cu_$arg_ptr (1, argp, arglen, code);
       26 	if code ^= 0 then goto ret;
       27 	command = arg;
       28 	call default_error_handler_$add_finish_handler (do, code);
       29 ret:
       30 	if code ^= 0 then call com_err_ (code, "set_epilogue_command");
       31 	return;
       32 
       33 do:	entry;
       34 	call cu_$cp (addr (command), length (command), code);
       35 	return;
       36 
       37      end set_epilogue_command;
	SOURCE FILES USED IN THIS COMPILATION.

LINE      NUMBER  DATE MODIFIED     NAME			PATHNAME
             0    11/04/82  1627.5  set_epilogue_command.pl1          >dumps>old>recomp>set_epilogue_command.pl1
	NAMES DECLARED IN THIS COMPILATION.

IDENTIFIER	     OFFSET    LOC STORAGE CLASS   DATA TYPE		ATTRIBUTES AND REFERENCES
								(* indicates a set context)

NAMES DECLARED BY DECLARE STATEMENT.
arg                                    based           char                     unaligned dcl 17 ref 27
arglen                          000104 automatic       fixed bin(17,0)          dcl 16 set ref 25* 27
argp                            000102 automatic       pointer                  dcl 15 set ref 25* 27
code                            000100 automatic       fixed bin(35,0)          dcl 14 set ref 24* 25* 26 28* 29 29* 34*
com_err_                        000112 constant        entry                    external dcl 20 ref 29
command                         000010 internal static char(256)                initial unaligned dcl 13 set ref 27* 34 34 34 34
cu_$arg_ptr                     000110 constant        entry                    external dcl 19 ref 25
cu_$cp                          000116 constant        entry                    external dcl 22 ref 34
default_error_handler_$add_finish_handler
                                000114 constant        entry                    external dcl 21 ref 28

NAMES DECLARED BY EXPLICIT CONTEXT.
do                              000116 constant        entry                    external dcl 33 ref 28 28
ret                             000067 constant        label                    dcl 29 ref 26
sec                             000010 constant        entry                    external dcl 11
set_epilogue_command            000017 constant        entry                    external dcl 11

NAMES DECLARED BY CONTEXT OR IMPLICATION.
addr                                                   builtin function         ref 34 34
length                                                 builtin function         ref 34 34

STORAGE REQUIREMENTS FOR THIS PROGRAM.

	Object	Text	Link	Symbol	Defs	Static
Start          0       0       244         364     146         254
Length       540     146       120         140      75         100

BLOCK NAME	         STACK SIZE     TYPE		WHY NONQUICK/WHO SHARES STACK FRAME
sec                                  88 external procedure  is an external procedure.  

STORAGE FOR INTERNAL STATIC VARIABLES.

   LOC IDENTIFIER                  BLOCK NAME
000010 command                     sec

STORAGE FOR AUTOMATIC VARIABLES.

STACK FRAME                 LOC IDENTIFIER                  BLOCK NAME
sec                      000100 code                        sec
                         000102 argp                        sec
                         000104 arglen                      sec

THE FOLLOWING EXTERNAL OPERATORS ARE USED BY THIS PROGRAM.
call_ext_out_desc   call_ext_out        return              ext_entry

THE FOLLOWING EXTERNAL ENTRIES ARE CALLED BY THIS PROGRAM.
com_err_                      cu_$arg_ptr                   cu_$cp
default_error_handler_$add_finish_handler

NO EXTERNAL VARIABLES ARE USED BY THIS PROGRAM.




   LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC   
     11 000007        24 000024        25 000025        26 000043        27 000045        28 000053        29 000067
     31 000114        33 000115        34 000123        35 000142


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
