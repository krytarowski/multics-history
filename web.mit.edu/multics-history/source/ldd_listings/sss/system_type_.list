	COMPILATION LISTING OF SEGMENT system_type_
	Compiled by: Multics PL/I Compiler, Release 27d, of October 11, 1982
	Compiled at: Honeywell LISD Phoenix, System M
	Compiled on: 11/04/82  1803.5 mst Thu
	    Options: optimize map

        1 /* ***********************************************************
        2*   *                                                         *
        3*   * Copyright, (C) Honeywell Information Systems Inc., 1982 *
        4*   *                                                         *
        5*   * Copyright (c) 1972 by Massachusetts Institute of        *
        6*   * Technology and Honeywell Information Systems, Inc.      *
        7*   *                                                         *
        8*   *********************************************************** */
        9 
       10 
       11 system_type_: proc (P_name, P_canonical_name, P_type, P_code);
       12 
       13 /* *	SYSTEM_TYPE_
       14*   *
       15*   *	This is the subroutine used to canonicalize the values of the operands of
       16*   *	the "-target" control argument, and of the ALM "decor" pseudo-op.
       17*   *
       18*   *	03/23/81, W. Olin Sibert
       19*   */
       20 
       21 dcl  P_name char (*) parameter;			/* Input: user-specified system type name */
       22 dcl  P_canonical_name char (*) parameter;		/* Output: canonical name for this system type */
       23 dcl  P_type fixed bin parameter;			/* Output: integer value of this system type */
       24 dcl  P_code fixed bin (35) parameter;			/* Output: error code */
       25 
       26 dcl  name char (32);
       27 dcl  type fixed bin;
       28 
       29 dcl  sys_info$system_type fixed bin external static;
       30 
       31 dcl  error_table_$invalid_system_type fixed bin (35) external static;
       32 
       33 dcl  LC_ALPHA char (26) internal static options (constant) init ("abcdefghijklmnopqrstuvwxyz");
       34 dcl  UC_ALPHA char (26) internal static options (constant) init ("ABCDEFGHIJKLMNOPQRSTUVWXYZ");
       35 
       36 dcl  translate builtin;
       37 
       38 /*  */
       39 
       40 	name = translate (P_name, LC_ALPHA, UC_ALPHA);
       41 
       42 	if (name = "") then type = sys_info$system_type;	/* Default */
       43 
       44 	else if (name = "l68") then type = L68_SYSTEM;	/* Various names for Level 68 */
       45 	else if (name = "dps") then type = L68_SYSTEM;
       46 	else if (name = "dps2") then type = L68_SYSTEM;
       47 	else if (name = "level68") then type = L68_SYSTEM;
       48 	else if (name = "level_68") then type = L68_SYSTEM;
       49 	else if (name = "6180") then type = L68_SYSTEM;
       50 	else if (name = "6880") then type = L68_SYSTEM;
       51 	else if (name = "68/80") then type = L68_SYSTEM;
       52 
       53 	else if (name = "dpse") then type = L68_SYSTEM;	/* DPS-8 is the same as Level 68 */
       54 	else if (name = "dps8") then type = L68_SYSTEM;
       55 	else if (name = "dps-8") then type = L68_SYSTEM;
       56 	else if (name = "8/70") then type = L68_SYSTEM;
       57 	else if (name = "dps8/70") then type = L68_SYSTEM;
       58 	else if (name = "dps-8/70") then type = L68_SYSTEM;
       59 
       60 	else if (name = "adp") then type = ADP_SYSTEM;	/* The Next Generation */
       61 	else if (name = "orion") then type = ADP_SYSTEM;
       62 
       63 	else do;
       64 	     P_canonical_name = "???";
       65 	     P_type = -1;
       66 	     P_code = error_table_$invalid_system_type;
       67 	     return;
       68 	     end;
       69 
       70 	P_canonical_name = SYSTEM_TYPE_NAME (type);
       71 	P_type = type;
       72 	P_code = 0;
       73 	return;
       74 
       75  /* BEGIN INCLUDE FILE ... system_types.incl.pl1 ... 03/23/81 ... W. Olin Sibert */
  1     2 
  1     3 dcl  L68_SYSTEM	fixed bin (17) internal static options (constant) init (1);
  1     4 dcl  ADP_SYSTEM	fixed bin (17) internal static options (constant) init (2);
  1     5 
  1     6 dcl  SYSTEM_TYPE_NAME (2) char (8) internal static options (constant) init
  1     7     ("Level68", "ADP");
  1     8 
  1     9 /* END INCLUDE FILE ... system_types.incl.pl1 */
       75 
       76 
       77 	end system_type_;
	SOURCE FILES USED IN THIS COMPILATION.

LINE      NUMBER  DATE MODIFIED     NAME			PATHNAME
             0    11/04/82  1625.2  system_type_.pl1                  >dumps>old>recomp>system_type_.pl1
75           1    06/19/81  2115.0  system_types.incl.pl1             >ldd>include>system_types.incl.pl1
	NAMES DECLARED IN THIS COMPILATION.

IDENTIFIER	     OFFSET    LOC STORAGE CLASS   DATA TYPE		ATTRIBUTES AND REFERENCES
								(* indicates a set context)

NAMES DECLARED BY DECLARE STATEMENT.
ADP_SYSTEM                             constant        fixed bin(17,0)          initial dcl 1-4 ref 60 61
L68_SYSTEM                             constant        fixed bin(17,0)          initial dcl 1-3 ref 44 45 46 47 48 49 50 51 53 54 55
                                                                                  56 57 58
LC_ALPHA                        000013 constant        char(26)                 initial unaligned dcl 33 ref 40
P_canonical_name                       parameter       char                     unaligned dcl 22 set ref 11 64* 70*
P_code                                 parameter       fixed bin(35,0)          dcl 24 set ref 11 66* 72*
P_name                                 parameter       char                     unaligned dcl 21 ref 11 40
P_type                                 parameter       fixed bin(17,0)          dcl 23 set ref 11 65* 71*
SYSTEM_TYPE_NAME                000000 constant        char(8)                  initial array unaligned dcl 1-6 ref 70
UC_ALPHA                        000004 constant        char(26)                 initial unaligned dcl 34 ref 40
error_table_$invalid_system_type
                                000012 external static fixed bin(35,0)          dcl 31 ref 66
name                            000100 automatic       char(32)                 unaligned dcl 26 set ref 40* 42 44 45 46 47 48 49 50
                                                                                  51 53 54 55 56 57 58 60 61
sys_info$system_type            000010 external static fixed bin(17,0)          dcl 29 ref 42
translate                                              builtin function         dcl 36 ref 40
type                            000110 automatic       fixed bin(17,0)          dcl 27 set ref 42* 44* 45* 46* 47* 48* 49* 50* 51*
                                                                                  53* 54* 55* 56* 57* 58* 60* 61* 70 71

NAME DECLARED BY EXPLICIT CONTEXT.
system_type_                    000063 constant        entry                    external dcl 11

THERE WERE NO NAMES DECLARED BY CONTEXT OR IMPLICATION.

STORAGE REQUIREMENTS FOR THIS PROGRAM.

	Object	Text	Link	Symbol	Defs	Static
Start          0       0       606         622     533         616
Length      1004     533        14         145      52           0

BLOCK NAME	         STACK SIZE     TYPE		WHY NONQUICK/WHO SHARES STACK FRAME
system_type_                         75 external procedure  is an external procedure.  

STORAGE FOR AUTOMATIC VARIABLES.

STACK FRAME                 LOC IDENTIFIER                  BLOCK NAME
system_type_             000100 name                        system_type_
                         000110 type                        system_type_

THE FOLLOWING EXTERNAL OPERATORS ARE USED BY THIS PROGRAM.
alloc_cs            return              shorten_stack       ext_entry_desc

NO EXTERNAL ENTRIES ARE CALLED BY THIS PROGRAM.

THE FOLLOWING EXTERNAL VARIABLES ARE USED BY THIS PROGRAM.
error_table_$invalid_system_type                            sys_info$system_type




   LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC   
     11 000056        40 000103        42 000116        44 000126        45 000135        46 000144        47 000153
     48 000162        49 000171        50 000200        51 000207        53 000216        54 000225        55 000234
     56 000243        57 000252        58 000261        60 000270        61 000277        64 000306        65 000313
     66 000315        67 000317        70 000320        71 000327        72 000331        73 000332


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
