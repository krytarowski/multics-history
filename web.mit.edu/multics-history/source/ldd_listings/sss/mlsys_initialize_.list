	COMPILATION LISTING OF SEGMENT mlsys_initialize_
	Compiled by: Multics PL/I Compiler, Release 28e, of February 14, 1985
	Compiled at: Honeywell Multics Op. - System M
	Compiled on: 06/30/86  1356.0 mst Mon
	    Options: optimize map

        1 /* ***********************************************************
        2*   *                                                         *
        3*   * Copyright, (C) Honeywell Information Systems Inc., 1981 *
        4*   *                                                         *
        5*   *********************************************************** */
        6 
        7 /* format: off */
        8 
        9 /* Initialize static data used by the Multics mail system */
       10 
       11 /* Created:  July 1981 by G. Palter */
       12 /* Modified: June 1983 by G. Palter to merge mlsys_data_ and mlsys_internal_data_ and for multi-ring mail system */
       13 /* Modified: March 1984 by G. Palter to fix mail system error #0428 -- during initialization, the mail system extracts the
       14*      user's full name from the default default value segment (>udd>Project>Person>Person.value) rather than the current
       15*      default value segment as set by the value_set_path command */
       16 
       17 /* format: on,style4,delnl,insnl,ifthenstmt,ifthen */
       18 
       19 
       20 mlsys_initialize_:
       21      procedure ();
       22 
       23 
       24 /* Declarations */
       25 
       26 dcl  mlsys_gate_ptr pointer;
       27 dcl  mlsys_gate_brackets (3) fixed binary (3);
       28 
       29 dcl  (person_id, project_id) character (32);
       30 dcl  anonymous_flag fixed binary;
       31 
       32 dcl  users_full_name character (256) varying;
       33 
       34 dcl  code fixed binary (35);
       35 
       36 dcl  MAIL_SYSTEM_ character (32) static options (constant) initial ("mail_system_");
       37 
       38 dcl  PERMANENT_VALUES bit (36) aligned static options (constant) initial ("200000000000"b3);
       39 
       40 dcl  FULL_NAME_NAME character (32) static options (constant) initial ("full_name._");
       41 
       42 dcl  get_initial_ring_ entry () returns (fixed binary (3));
       43 dcl  get_ring_ entry () returns (fixed binary (3));
       44 dcl  hcs_$fs_get_brackets entry (pointer, fixed binary (5), (3) fixed binary (3), fixed binary (35));
       45 dcl  hcs_$make_ptr entry (pointer, character (*), character (*), pointer, fixed binary (35));
       46 dcl  mail_system_$get_users_addresses entry (pointer, pointer, pointer);
       47 dcl  mail_system_$set_users_full_name entry (character (*) varying);
       48 dcl  mlsys_address_mgr_$create_invalid_address
       49 	entry (character (*) varying, character (*) varying, character (*) varying, pointer, fixed binary (35));
       50 dcl  mlsys_address_mgr_$create_logbox_address
       51 	entry (character (*) varying, character (*) varying, character (*) varying, pointer, fixed binary (35));
       52 dcl  mlsys_address_mgr_$create_mail_table_address
       53 	entry (character (*) varying, character (*) varying, character (*) varying, pointer, fixed binary (35));
       54 dcl  mlsys_address_mgr_$create_user_mailbox_address
       55 	entry (character (*) varying, character (*) varying, character (*) varying, pointer, fixed binary (35));
       56 dcl  mlsys_address_mgr_$protect_address entry (pointer);
       57 dcl  mlsys_hash_$initialize entry ();
       58 dcl  mlsys_storage_mgr_$initialize entry ();
       59 dcl  mlsys_transmit_$initialize_cache entry ();
       60 dcl  sub_err_ entry () options (variable);
       61 dcl  user_info_$login_data entry (character (*), character (*), character (*), fixed binary);
       62 dcl  value_$get entry () options (variable);
       63 
       64 dcl  (codeptr, null, rtrim) builtin;
       65 
       66 /* mlsys_initialize_: entry (); */
       67 
       68 	call hcs_$make_ptr (codeptr (mlsys_initialize_), MAIL_SYSTEM_, "", mlsys_gate_ptr, code);
       69 	if code ^= 0 then do;			/* grumble: impossible to initialize the mail system ... */
       70 RESIGNAL_INITIALIZATION_FAILURE:
       71 	     call sub_err_ (code, MAIL_SYSTEM_, ACTION_CANT_RESTART, null (), (0),
       72 		"Unable to initialize the mail system.^/Contact your system programming staff.");
       73 	     go to RESIGNAL_INITIALIZATION_FAILURE;
       74 	end;
       75 
       76 	call hcs_$fs_get_brackets (mlsys_gate_ptr, (0), mlsys_gate_brackets, code);
       77 	if code ^= 0 then go to RESIGNAL_INITIALIZATION_FAILURE;
       78 
       79 	mlsys_data_$subsystem_ring = mlsys_gate_brackets (2);
       80 	mlsys_data_$highest_usable_ring = mlsys_gate_brackets (3);
       81 
       82 	call user_info_$login_data (person_id, project_id, ((32)" "), anonymous_flag);
       83 
       84 	mlsys_data_$user_is_anonymous = (anonymous_flag = 1);
       85 
       86 	mlsys_data_$person_id = rtrim (person_id);
       87 	mlsys_data_$project_id = rtrim (project_id);
       88 	mlsys_data_$user_id = mlsys_data_$person_id || "." || mlsys_data_$project_id;
       89 
       90 	if get_ring_ () <= mlsys_data_$subsystem_ring then/* in (or below) the mail system ring */
       91 	     call initialize_mail_system_ring ();
       92 	else call mail_system_$get_users_addresses (mlsys_data_$user_default_mailbox_address,
       93 		mlsys_data_$user_mail_table_address, mlsys_data_$user_logbox_address);
       94 
       95 	if get_ring_ () >= get_initial_ring_ () then	/* see the internal procedure for an explanation */
       96 	     call set_users_full_name ();
       97 
       98 	return;
       99 
      100 /* Initializes static data which is only maintained by the Mail System in its protected ring:  Such data includes
      101*   temporary areas/segments, hash tables, and the three address "constants" */
      102 
      103 initialize_mail_system_ring:
      104      procedure ();
      105 
      106 	call mlsys_storage_mgr_$initialize ();		/* area/temporary segment management */
      107 
      108 	call mlsys_hash_$initialize ();		/* hash tables used by the mail system */
      109 
      110 	call mlsys_transmit_$initialize_cache ();	/* cache of recently used mailboxes */
      111 
      112 	call mlsys_address_mgr_$create_user_mailbox_address (mlsys_data_$user_id, "", "",
      113 	     mlsys_data_$user_default_mailbox_address, (0));
      114 
      115 	if mlsys_data_$user_is_anonymous then		/* anonymous users don't have mail table entries */
      116 	     call mlsys_address_mgr_$create_invalid_address (mlsys_data_$person_id, "", "",
      117 		mlsys_data_$user_mail_table_address, (0));
      118 	else call mlsys_address_mgr_$create_mail_table_address (mlsys_data_$person_id, "", "",
      119 		mlsys_data_$user_mail_table_address, (0));
      120 
      121 	call mlsys_address_mgr_$create_logbox_address (mlsys_data_$user_id, "", "", mlsys_data_$user_logbox_address,
      122 	     (0));
      123 
      124 	/*** prevent the user from accidently destroying these addresses */
      125 	call mlsys_address_mgr_$protect_address (mlsys_data_$user_default_mailbox_address);
      126 	call mlsys_address_mgr_$protect_address (mlsys_data_$user_mail_table_address);
      127 	call mlsys_address_mgr_$protect_address (mlsys_data_$user_logbox_address);
      128 
      129 	return;
      130 
      131      end initialize_mail_system_ring;
      132 
      133 /* Sets the user's full name in the constant addresses maintained by the mail system:  This procedure is only invoked from
      134*   the user's initial ring of execution or above in case the user uses the value_set_path command to change their default
      135*   value segment */
      136 
      137 set_users_full_name:
      138      procedure ();
      139 
      140 	if mlsys_data_$user_is_anonymous then		/* anonymous user's don't have full names */
      141 	     users_full_name = "";
      142 	else do;					/* look in the user's value segment */
      143 	     call value_$get (null (), PERMANENT_VALUES, (rtrim (mlsys_data_$person_id) || "." || FULL_NAME_NAME),
      144 		users_full_name, code);
      145 	     if code ^= 0 then			/* ... Person_id.full_name._ not there: try just full_name._ */
      146 		call value_$get (null (), PERMANENT_VALUES, FULL_NAME_NAME, users_full_name, code);
      147 	     if code ^= 0 then users_full_name = "";	/* ... not found */
      148 	end;
      149 
      150 	if users_full_name ^= "" then call mail_system_$set_users_full_name (users_full_name);
      151 
      152 	return;
      153 
      154      end set_users_full_name;
      155 
  1     1 /* BEGIN INCLUDE FILE ... mlsys_data.incl.pl1 */
  1     2 /* Created:  20 Decembber 1978 by G. Palter */
  1     3 /* Modified: 1 July 1983 by G. Palter to merge with mlsys_internal_data_ */
  1     4 
  1     5 /* Constants defined by the Multics mail system for external use */
  1     6 
  1     7 dcl  mlsys_data_$system_directory character (168) external; /* directory containing per-system data (mail table/queues) */
  1     8 
  1     9 
  1    10 /* Static data defined by the Multics mail system for external use */
  1    11 
  1    12 dcl  mlsys_data_$user_default_mailbox_address pointer external;
  1    13 						/* -> the address of the user's default mailbox */
  1    14 dcl  mlsys_data_$user_mail_table_address pointer external;	/* -> the address of the user's entry in the mail table */
  1    15 dcl  mlsys_data_$user_logbox_address pointer external;	/* -> the address of the user's logbox */
  1    16 
  1    17 /* END INCLUDE FILE ... mlsys_data.incl.pl1 */
      156 
      157 
  2     1 /* BEGIN INCLUDE FILE ... mlsys_internal_data.incl.pl1 */
  2     2 
  2     3 
  2     4 /****^  HISTORY COMMENTS:
  2     5*  1) change(86-06-11,Mills), approve(86-06-11,MCR7419),
  2     6*     audit(86-06-17,Margolin), install(86-06-30,MR12.0-1080):
  2     7*     Added mlsys_data_$domains_available.
  2     8*                                                   END HISTORY COMMENTS */
  2     9 
  2    10 
  2    11 /* Created:  May 1981 by G. Palter */
  2    12 /* Modified: July 1983 by G. Palter to merge with mlsys_data_ */
  2    13 
  2    14 /* Constants used internally by the Multics mail system */
  2    15 
  2    16 dcl  mlsys_data_$max_opening_retries fixed binary external; /* maximum number of times to reopen a mailbox if it gets
  2    17*                                                               damaged and salvaged while open */
  2    18 
  2    19 dcl  mlsys_data_$max_lock_wait_retries fixed binary external;
  2    20                                                             /* maximum number of times to try to send a message while the
  2    21*                                                               mailbox is locked (being salvaged?) */
  2    22 
  2    23 
  2    24 /* Allocation overhead factors:  When allocating those structures with refer extents, insure that the variable portion of
  2    25*   the structure contains a multiple of the appropriate constant number of slots.  These extra slots will be used for
  2    26*   later additions to the structure; when a new element must be added to a full structure, add this many new slots (rather
  2    27*   than a single new slot)
  2    28*
  2    29*   The following expression should be used to determine the initial allocation:
  2    30*
  2    31*          n_slots_to_allocate = n_slots_needed + CONSTANT - mod (n_slots_needed, CONSTANT); */
  2    32 
  2    33 dcl (mlsys_data_$mailbox_allocation,                        /* mailbox.messages */
  2    34      mlsys_data_$message_body_sections_allocation,          /* message.body_sections */
  2    35      mlsys_data_$message_redistributions_list_allocation,   /* message_redistributions_list.redistributions */
  2    36      mlsys_data_$message_user_fields_allocation,            /* message_user_fields_list.user_fields */
  2    37      mlsys_data_$message_references_list_allocation,        /* message_references_list.references */
  2    38      mlsys_data_$address_list_allocation)                   /* address_list.addresses */
  2    39           fixed binary external;
  2    40 
  2    41 
  2    42 /* Static data user by the Multics mail system */
  2    43 
  2    44 dcl (mlsys_data_$forum_not_available,                       /* 1 => forum isn't available on the system or in this ring */
  2    45      mlsys_data_$ism_not_available,                         /* 1 => no inter-system mailer on this system */
  2    46      mlsys_data_$domains_available)                         /* 1 =>  domain name system software on this sytem */
  2    47           fixed binary (1) external;
  2    48 
  2    49 dcl (mlsys_data_$subsystem_ring,                            /* ring in which the mail system is secured */
  2    50      mlsys_data_$highest_usable_ring,                       /* highest ring of execution which may use the mail system */
  2    51      mlsys_data_$lowest_forum_ring)                         /* lowest ring of execution with access to forum */
  2    52           fixed binary (3) external;
  2    53 
  2    54 dcl  mlsys_data_$temp_segment_list_ptr pointer external;    /* -> list of all mail system temporary segments */
  2    55 
  2    56 dcl  mlsys_data_$valid_segments (0:4095) bit (1) unaligned external;
  2    57                                                             /* indicates which segments have been used by the mail system
  2    58*                                                               for the allocation of user-visible data in order to
  2    59*                                                               validate that pointers passed from the user-ring are OK */
  2    60 
  2    61 dcl  mlsys_area area based (mlsys_data_$subsystem_area_ptr);/* area used for all user-visible allocations ... */
  2    62 dcl  mlsys_data_$subsystem_area_ptr pointer external;       /* ... and the pointer on which it is based */
  2    63 
  2    64 dcl  mlsys_data_$hash_tables_segment_ptr pointer external;  /* -> hash tables used by the mail system */
  2    65 
  2    66 dcl  mlsys_data_$transmit_cache_ptr pointer external;       /* -> cache of recently used mailboxes for mlsys_transmit_ */
  2    67 
  2    68 dcl  mlsys_data_$user_is_anonymous bit (1) aligned external;/* ON => the user is an anonymous user */
  2    69 
  2    70 dcl  mlsys_data_$person_id character (24) varying external; /* the user's Person_id */
  2    71 dcl  mlsys_data_$project_id character (12) varying external;/* the user's Project_id */
  2    72 dcl  mlsys_data_$user_id character (32) varying external;   /* the user's User_id (Person_id.Project_id) */
  2    73 
  2    74 /* END INCLUDE FILE ... mlsys_internal_data.incl.pl1 */
      158 
      159 
  3     1 /* BEGIN INCLUDE FILE sub_err_flags.incl.pl1 BIM 11/81 */
  3     2 /* format: style3 */
  3     3 
  3     4 /* These constants are to be used for the flags argument of sub_err_ */
  3     5 /* They are just "string (condition_info_header.action_flags)" */
  3     6 
  3     7 declare	(
  3     8 	ACTION_CAN_RESTART	init (""b),
  3     9 	ACTION_CANT_RESTART init ("1"b),
  3    10 	ACTION_DEFAULT_RESTART
  3    11 			init ("01"b),
  3    12 	ACTION_QUIET_RESTART
  3    13 			init ("001"b),
  3    14 	ACTION_SUPPORT_SIGNAL
  3    15 			init ("0001"b)
  3    16 	)		bit (36) aligned internal static options (constant);
  3    17 
  3    18 /* End include file */
      160 
      161 
      162      end mlsys_initialize_;
	SOURCE FILES USED IN THIS COMPILATION.

LINE      NUMBER  DATE MODIFIED     NAME			PATHNAME
             0    06/30/86  1343.4  mlsys_initialize_.pl1             >spec>install>1080>mlsys_initialize_.pl1
156          1    10/27/83  2104.2  mlsys_data.incl.pl1               >ldd>include>mlsys_data.incl.pl1
158          2    06/30/86  1338.7  mlsys_internal_data.incl.pl1      >spec>install>1080>mlsys_internal_data.incl.pl1
160          3    04/16/82  0958.1  sub_err_flags.incl.pl1            >ldd>include>sub_err_flags.incl.pl1
	NAMES DECLARED IN THIS COMPILATION.

IDENTIFIER	     OFFSET    LOC STORAGE CLASS   DATA TYPE		ATTRIBUTES AND REFERENCES
								(* indicates a set context)

NAMES DECLARED BY DECLARE STATEMENT.
ACTION_CANT_RESTART             000000 constant        bit(36)                  initial dcl 3-7 set ref 70*
FULL_NAME_NAME                  000001 constant        char(32)                 initial unaligned dcl 40 set ref 143 145*
MAIL_SYSTEM_                    000012 constant        char(32)                 initial unaligned dcl 36 set ref 68* 70*
PERMANENT_VALUES                000011 constant        bit(36)                  initial dcl 38 set ref 143* 145*
anonymous_flag                  000125 automatic       fixed bin(17,0)          dcl 30 set ref 82* 84
code                            000227 automatic       fixed bin(35,0)          dcl 34 set ref 68* 69 70* 76* 77 143* 145 145* 147
codeptr                                                builtin function         dcl 64 ref 68 68
get_initial_ring_               000010 constant        entry                    external dcl 42 ref 95
get_ring_                       000012 constant        entry                    external dcl 43 ref 90 95
hcs_$fs_get_brackets            000014 constant        entry                    external dcl 44 ref 76
hcs_$make_ptr                   000016 constant        entry                    external dcl 45 ref 68
mail_system_$get_users_addresses
                                000020 constant        entry                    external dcl 46 ref 92
mail_system_$set_users_full_name
                                000022 constant        entry                    external dcl 47 ref 150
mlsys_address_mgr_$create_invalid_address
                                000024 constant        entry                    external dcl 48 ref 115
mlsys_address_mgr_$create_logbox_address
                                000026 constant        entry                    external dcl 50 ref 121
mlsys_address_mgr_$create_mail_table_address
                                000030 constant        entry                    external dcl 52 ref 118
mlsys_address_mgr_$create_user_mailbox_address
                                000032 constant        entry                    external dcl 54 ref 112
mlsys_address_mgr_$protect_address
                                000034 constant        entry                    external dcl 56 ref 125 126 127
mlsys_data_$highest_usable_ring 000062 external static fixed bin(3,0)           dcl 2-49 set ref 80*
mlsys_data_$person_id           000066 external static varying char(24)         dcl 2-70 set ref 86* 88 115* 118* 143
mlsys_data_$project_id          000070 external static varying char(12)         dcl 2-71 set ref 87* 88
mlsys_data_$subsystem_ring      000060 external static fixed bin(3,0)           dcl 2-49 set ref 79* 90
mlsys_data_$user_default_mailbox_address
                                000052 external static pointer                  dcl 1-12 set ref 92* 112* 125*
mlsys_data_$user_id             000072 external static varying char(32)         dcl 2-72 set ref 88* 112* 121*
mlsys_data_$user_is_anonymous   000064 external static bit(1)                   dcl 2-68 set ref 84* 115 140
mlsys_data_$user_logbox_address 000056 external static pointer                  dcl 1-15 set ref 92* 121* 127*
mlsys_data_$user_mail_table_address
                                000054 external static pointer                  dcl 1-14 set ref 92* 115* 118* 126*
mlsys_gate_brackets             000102 automatic       fixed bin(3,0)           array dcl 27 set ref 76* 79 80
mlsys_gate_ptr                  000100 automatic       pointer                  dcl 26 set ref 68* 76*
mlsys_hash_$initialize          000036 constant        entry                    external dcl 57 ref 108
mlsys_storage_mgr_$initialize   000040 constant        entry                    external dcl 58 ref 106
mlsys_transmit_$initialize_cache
                                000042 constant        entry                    external dcl 59 ref 110
null                                                   builtin function         dcl 64 ref 70 70 143 143 145 145
person_id                       000105 automatic       char(32)                 unaligned dcl 29 set ref 82* 86
project_id                      000115 automatic       char(32)                 unaligned dcl 29 set ref 82* 87
rtrim                                                  builtin function         dcl 64 ref 86 87 143
sub_err_                        000044 constant        entry                    external dcl 60 ref 70
user_info_$login_data           000046 constant        entry                    external dcl 61 ref 82
users_full_name                 000126 automatic       varying char(256)        dcl 32 set ref 140* 143* 145* 147* 150 150*
value_$get                      000050 constant        entry                    external dcl 62 ref 143 145

NAMES DECLARED BY DECLARE STATEMENT AND NEVER REFERENCED.
ACTION_CAN_RESTART                     internal static bit(36)                  initial dcl 3-7
ACTION_DEFAULT_RESTART                 internal static bit(36)                  initial dcl 3-7
ACTION_QUIET_RESTART                   internal static bit(36)                  initial dcl 3-7
ACTION_SUPPORT_SIGNAL                  internal static bit(36)                  initial dcl 3-7
mlsys_area                             based           area(1024)               dcl 2-61
mlsys_data_$address_list_allocation    external static fixed bin(17,0)          dcl 2-33
mlsys_data_$domains_available          external static fixed bin(1,0)           dcl 2-44
mlsys_data_$forum_not_available        external static fixed bin(1,0)           dcl 2-44
mlsys_data_$hash_tables_segment_ptr    external static pointer                  dcl 2-64
mlsys_data_$ism_not_available          external static fixed bin(1,0)           dcl 2-44
mlsys_data_$lowest_forum_ring          external static fixed bin(3,0)           dcl 2-49
mlsys_data_$mailbox_allocation         external static fixed bin(17,0)          dcl 2-33
mlsys_data_$max_lock_wait_retries      external static fixed bin(17,0)          dcl 2-19
mlsys_data_$max_opening_retries        external static fixed bin(17,0)          dcl 2-16
mlsys_data_$message_body_sections_allocation
                                       external static fixed bin(17,0)          dcl 2-33
mlsys_data_$message_redistributions_list_allocation
                                       external static fixed bin(17,0)          dcl 2-33
mlsys_data_$message_references_list_allocation
                                       external static fixed bin(17,0)          dcl 2-33
mlsys_data_$message_user_fields_allocation
                                       external static fixed bin(17,0)          dcl 2-33
mlsys_data_$subsystem_area_ptr         external static pointer                  dcl 2-62
mlsys_data_$system_directory           external static char(168)                unaligned dcl 1-7
mlsys_data_$temp_segment_list_ptr      external static pointer                  dcl 2-54
mlsys_data_$transmit_cache_ptr         external static pointer                  dcl 2-66
mlsys_data_$valid_segments             external static bit(1)                   array unaligned dcl 2-56

NAMES DECLARED BY EXPLICIT CONTEXT.
RESIGNAL_INITIALIZATION_FAILURE 000127 constant        label                    dcl 70 ref 73 77
initialize_mail_system_ring     000424 constant        entry                    internal dcl 103 ref 90
mlsys_initialize_               000067 constant        entry                    external dcl 20 ref 68 68
set_users_full_name             000654 constant        entry                    internal dcl 137 ref 95

THERE WERE NO NAMES DECLARED BY CONTEXT OR IMPLICATION.

STORAGE REQUIREMENTS FOR THIS PROGRAM.

	Object	Text	Link	Symbol	Defs	Static
Start          0       0      1420        1514    1035        1430
Length      2012    1035        74         262     362           0

BLOCK NAME	         STACK SIZE     TYPE		WHY NONQUICK/WHO SHARES STACK FRAME
mlsys_initialize_                   272 external procedure  is an external procedure.  
initialize_mail_system_ring             internal procedure  shares stack frame of external procedure mlsys_initialize_.  
set_users_full_name                     internal procedure  shares stack frame of external procedure mlsys_initialize_.  

STORAGE FOR AUTOMATIC VARIABLES.

STACK FRAME                 LOC IDENTIFIER                  BLOCK NAME
mlsys_initialize_        000100 mlsys_gate_ptr              mlsys_initialize_
                         000102 mlsys_gate_brackets         mlsys_initialize_
                         000105 person_id                   mlsys_initialize_
                         000115 project_id                  mlsys_initialize_
                         000125 anonymous_flag              mlsys_initialize_
                         000126 users_full_name             mlsys_initialize_
                         000227 code                        mlsys_initialize_

THE FOLLOWING EXTERNAL OPERATORS ARE USED BY THIS PROGRAM.
r_e_as              alloc_cs            cat_realloc_cs      call_ext_out_desc   call_ext_out        return
shorten_stack       ext_entry

THE FOLLOWING EXTERNAL ENTRIES ARE CALLED BY THIS PROGRAM.
get_initial_ring_             get_ring_                     hcs_$fs_get_brackets          hcs_$make_ptr
mail_system_$get_users_addresses                            mail_system_$set_users_full_name
mlsys_address_mgr_$create_invalid_address                   mlsys_address_mgr_$create_logbox_address
mlsys_address_mgr_$create_mail_table_address                mlsys_address_mgr_$create_user_mailbox_address
mlsys_address_mgr_$protect_address                          mlsys_hash_$initialize        mlsys_storage_mgr_$initialize
mlsys_transmit_$initialize_cache                            sub_err_                      user_info_$login_data
value_$get

THE FOLLOWING EXTERNAL VARIABLES ARE USED BY THIS PROGRAM.
mlsys_data_$highest_usable_ring                             mlsys_data_$person_id         mlsys_data_$project_id
mlsys_data_$subsystem_ring    mlsys_data_$user_default_mailbox_address                    mlsys_data_$user_id
mlsys_data_$user_is_anonymous mlsys_data_$user_logbox_address
mlsys_data_$user_mail_table_address




   LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC   
     20 000066        68 000074        69 000125        70 000127        73 000172        76 000173        77 000211
     79 000213        80 000216        82 000220        84 000246        86 000253        87 000274        88 000315
     90 000352        92 000367        95 000401        98 000423       103 000424       106 000425       108 000432
    110 000437       112 000444       115 000500       118 000537       121 000572       125 000626       126 000635
    127 000644       129 000653       137 000654       140 000655       143 000662       145 000754       147 001012
    150 001015       152 001033


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
