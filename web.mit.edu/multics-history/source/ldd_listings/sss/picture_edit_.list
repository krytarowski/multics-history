	COMPILATION LISTING OF SEGMENT picture_edit_
	Compiled by: Multics PL/I Compiler, Release 28d, of September 14, 1983
	Compiled at: Honeywell LCPD Phoenix, System M
	Compiled on: 10/03/83  1439.3 mst Mon
	    Options: optimize map

        1 /* ***********************************************************
        2*   *                                                         *
        3*   * Copyright, (C) Honeywell Information Systems Inc., 1982 *
        4*   *                                                         *
        5*   *********************************************************** */
        6 picture_edit_: proc(picture,target_pt,target_length,source_pt,source_type,source_length);
        7 
        8 dcl	picture		char(*) aligned,
        9 	target_pt		ptr,
       10 	target_length	fixed bin,
       11 	source_pt		ptr,
       12 	source_type	fixed bin,
       13 	source_length	fixed bin;
       14 
       15 dcl	buff(20) fixed binary,
       16 	temp(128) char(1) unaligned,
       17 	temp_length fixed binary;
       18 
       19 dcl	bit1 bit(1) unaligned based;
       20 
       21 dcl	picture_info_ entry(char(*) aligned,ptr,fixed bin),
       22 	assign_ entry(ptr,fixed bin,fixed bin,ptr,fixed bin,fixed bin),
       23 	pack_picture_ options(variable);
       24 
       25 dcl	map_type(24:28) fixed bin int static
       26 	init(	42,	/* character */
       27 		18,	/* real fixed dec */
       28 		22,	/* cplx fixed dec */
       29 		20,	/* real float dec */
       30 		24	/* cplx float dec */);
       31 
       32 dcl	1 info aligned based(addr(buff)) like picture_image;
       33 
  1     1 /* BEGIN INCLUDE FILE ... picture_image.incl.pl1
  1     2*
  1     3*   James R. Davis  12 Mar 79
  1     4**/
  1     5 
  1     6      dcl	   1 picture_image	      aligned based,
  1     7 	     2 type	      fixed bin (8) unal,
  1     8 	     2 prec	      fixed bin (8) unal,	/* precision or length of associated value */
  1     9 	     2 scale	      fixed bin (8) unal,	/* for both fixed and float pictures,
  1    10*							=ndigits after "v" - scale_factor */
  1    11 	     2 piclength	      fixed bin (8) unal,	/* length of picture_constant.chars, <64
  1    12*							=length of normalized-picture-string */
  1    13 	     2 varlength	      fixed bin (8) unal,	/* length of pictured variable in chars, <64
  1    14*							=length of normalized_picture_string - "k" and "v" */
  1    15 	     2 scalefactor	      fixed bin (8) unal,	/* value of pict-sc-f, -256<=x<256  */
  1    16 	     2 explength	      fixed bin (8) unal,	/* length of exp field for float */
  1    17 	     2 drift_character    char (1) unal,
  1    18 	     2 chars	      char (0 refer (picture_image.piclength)) aligned;
  1    19 
  1    20      dcl	   (
  1    21 	   picture_char_type      init (24),
  1    22 	   picture_realfix_type   init (25),
  1    23 	   picture_complexfix_type
  1    24 			      init (26),
  1    25 	   picture_realflo_type   init (27),
  1    26 	   picture_complexflo_type
  1    27 			      init (28)
  1    28 	   )		      fixed bin (8) unal static internal options (constant);
  1    29 
  1    30 /* END INCLUDE FILE  ... picture_image.incl.pl1  */
       34 
       35 
       36 	call picture_info_(picture,addr(buff),target_length);
       37 
       38 	if target_length ^= 0 then return;
       39 
       40 	temp_length = info.prec + 262144 * (info.scale - info.scalefactor);
       41 
       42 	call assign_(addr(temp),map_type(info.type),temp_length,source_pt,source_type,source_length);
       43 
       44 	call pack_picture_(target_pt -> bit1,buff,temp);
       45 
       46 	target_length = info.varlength;
       47 	end;
	SOURCE FILES USED IN THIS COMPILATION.

LINE      NUMBER  DATE MODIFIED     NAME			PATHNAME
             0    10/03/83  1247.3  picture_edit_.pl1                 >spec>on>pl128d>picture_edit_.pl1
34           1    06/28/79  1204.8  picture_image.incl.pl1            >ldd>include>picture_image.incl.pl1
	NAMES DECLARED IN THIS COMPILATION.

IDENTIFIER	     OFFSET    LOC STORAGE CLASS   DATA TYPE		ATTRIBUTES AND REFERENCES
								(* indicates a set context)

NAMES DECLARED BY DECLARE STATEMENT.
assign_                         000020 constant        entry                    external dcl 21 ref 42
bit1                                   based           bit(1)                   unaligned dcl 19 set ref 44*
buff                            000100 automatic       fixed bin(17,0)          array dcl 15 set ref 36 36 40 40 40 42 44* 46
info                                   based           structure                level 1 dcl 32
map_type                        000010 internal static fixed bin(17,0)          initial array dcl 25 set ref 42*
pack_picture_                   000022 constant        entry                    external dcl 21 ref 44
picture                                parameter       char                     dcl 8 set ref 6 36*
picture_image                          based           structure                level 1 dcl 1-6
picture_info_                   000016 constant        entry                    external dcl 21 ref 36
prec                      0(09)        based           fixed bin(8,0)           level 2 packed unaligned dcl 32 ref 40
scale                     0(18)        based           fixed bin(8,0)           level 2 packed unaligned dcl 32 ref 40
scalefactor               1(09)        based           fixed bin(8,0)           level 2 packed unaligned dcl 32 ref 40
source_length                          parameter       fixed bin(17,0)          dcl 8 set ref 6 42*
source_pt                              parameter       pointer                  dcl 8 set ref 6 42*
source_type                            parameter       fixed bin(17,0)          dcl 8 set ref 6 42*
target_length                          parameter       fixed bin(17,0)          dcl 8 set ref 6 36* 38 46*
target_pt                              parameter       pointer                  dcl 8 ref 6 44
temp                            000124 automatic       char(1)                  array unaligned dcl 15 set ref 42 42 44*
temp_length                     000164 automatic       fixed bin(17,0)          dcl 15 set ref 40* 42*
type                                   based           fixed bin(8,0)           level 2 packed unaligned dcl 32 ref 42
varlength                 1            based           fixed bin(8,0)           level 2 packed unaligned dcl 32 ref 46

NAMES DECLARED BY DECLARE STATEMENT AND NEVER REFERENCED.
picture_char_type                      internal static fixed bin(8,0)           initial unaligned dcl 1-20
picture_complexfix_type                internal static fixed bin(8,0)           initial unaligned dcl 1-20
picture_complexflo_type                internal static fixed bin(8,0)           initial unaligned dcl 1-20
picture_realfix_type                   internal static fixed bin(8,0)           initial unaligned dcl 1-20
picture_realflo_type                   internal static fixed bin(8,0)           initial unaligned dcl 1-20

NAME DECLARED BY EXPLICIT CONTEXT.
picture_edit_                   000022 constant        entry                    external dcl 6

NAME DECLARED BY CONTEXT OR IMPLICATION.
addr                                                   builtin function         ref 36 36 40 40 40 42 42 42 46

STORAGE REQUIREMENTS FOR THIS PROGRAM.

	Object	Text	Link	Symbol	Defs	Static
Start          0       0       230         254     157         240
Length       442     157        24         151      50           6

BLOCK NAME	         STACK SIZE     TYPE		WHY NONQUICK/WHO SHARES STACK FRAME
picture_edit_                       135 external procedure  is an external procedure.  

STORAGE FOR INTERNAL STATIC VARIABLES.

   LOC IDENTIFIER                  BLOCK NAME
000010 map_type                    picture_edit_

STORAGE FOR AUTOMATIC VARIABLES.

STACK FRAME                 LOC IDENTIFIER                  BLOCK NAME
picture_edit_            000100 buff                        picture_edit_
                         000124 temp                        picture_edit_
                         000164 temp_length                 picture_edit_

THE FOLLOWING EXTERNAL OPERATORS ARE USED BY THIS PROGRAM.
call_ext_out_desc   call_ext_out        return              ext_entry_desc

THE FOLLOWING EXTERNAL ENTRIES ARE CALLED BY THIS PROGRAM.
assign_                       pack_picture_                 picture_info_

NO EXTERNAL VARIABLES ARE USED BY THIS PROGRAM.




   LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC   
      6 000014        36 000035        38 000060        40 000063        42 000102        44 000127        46 000152
     47 000156


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
