	COMPILATION LISTING OF SEGMENT bj_ppte_register
	Compiled by: Multics PL/I Compiler, Release 28e, of February 14, 1985
	Compiled at: Honeywell Multics Op. - System M
	Compiled on: 03/05/85  0853.7 mst Tue
	    Options: optimize map

        1 /* ***********************************************************
        2*   *                                                         *
        3*   * Copyright, (C) Honeywell Information Systems Inc., 1983 *
        4*   *                                                         *
        5*   *********************************************************** */
        6 
        7 /* DESCRIPTION
        8*
        9*	bj_ppte_register$check_in increments the number of per-process
       10*     openings for a before journal;  bj_close_oid will decrement this
       11*     count.  Currently, $check_in is the only entry in this module.
       12**/
       13 
       14 /* HISTORY
       15*
       16*Written by Michael A. Pandolf, 08/04/82.
       17*Modified:
       18*02/10/85 by Lee A. Newcomb:  Added Description and History sections; fixed to
       19*            check the verson of PPTE to be updated; minor format fixes.
       20**/
       21 
       22 /* format: style2,ll79,ind3,^indprocbody,ifthendo,ifthen,^indnoniterdo,^inddcls,dclind5,idind35,linecom */
       23 
       24 bj_ppte_register$check_in:
       25    proc (p_bj_ppte_ptr);
       26 
       27 /* DECLARATIONS */
       28 
       29 /* Parameter */
       30 dcl  p_bj_ppte_ptr			pointer parameter;
       31 
       32 /* Builtin */
       33 /* Condition */
       34 /* Constant */
       35 dcl  ME				char (25)
       36 				init ("bj_ppte_register$check_in")
       37 				internal static options (constant);
       38 
       39 /* Entry */
       40 dcl  bj_report_err			entry (fixed bin (35), char (*))
       41 				external;
       42 
       43 /* External */
       44 dcl  dm_error_$bj_bad_ppte_version	fixed bin (35) external static;
       45 
       46 /* Static */
       47 
       48 /* END OF DECLARATIONS */
       49 
       50    bj_ppte_ptr = p_bj_ppte_ptr;
       51 
       52    call CHECK_VERSION_NUMERIC (bj_ppte.version, BJ_PPTE_VERSION_1,
       53         dm_error_$bj_bad_ppte_version);
       54 
       55    bj_ppte.n_opening = bj_ppte.n_opening + 1;
       56 
       57    return;
       58 
       59 /* end bj_ppte_register$check_in; */
       60 
       61 ERROR_RETURN:
       62    proc (er_p_code);
       63 
       64 dcl  er_p_code			fixed bin (35) parameter;
       65 
       66    call bj_report_err (er_p_code, ME);
       67 
       68    end ERROR_RETURN;




       69 
       70 CHECK_VERSION_NUMERIC:
       71    proc (cvn_p_given_version, cvn_p_desired_version, cvn_p_error_to_use);
       72 
       73 dcl  (
       74      cvn_p_given_version		fixed bin,
       75      cvn_p_desired_version		fixed bin,
       76      cvn_p_error_to_use		fixed bin (35)
       77      )				parameter;
       78 
       79    if cvn_p_given_version ^= cvn_p_desired_version then
       80       call ERROR_RETURN (cvn_p_error_to_use);
       81 
       82    end CHECK_VERSION_NUMERIC;
       83 
  1     1 /*  BEGIN INCLUDE FILE:	dm_bj_ppt.incl.pl1	*/
  1     2 /*
  1     3*Layout of the per-process before journal table and entries.
  1     4*
  1     5*Written by Andre Bensoussan June/July 1982
  1     6*Modified:
  1     7*09/29/82 by Lee A. Newcomb:  To make two default oid cells, pad ppte's
  1     8*	  to account for all used space, and use dm_system_data_ for
  1     9*	  determining dimension of bj_ppt.e.
  1    10**/
  1    11 /* format: style4,indattr,idind33,^indcomtxt */
  1    12 
  1    13 dcl  BJ_PPT_VERSION_1	        fixed bin int static options (constant) init (1);
  1    14 dcl  BJ_PPTE_VERSION_1	        fixed bin int static options (constant) init (1);
  1    15 
  1    16 dcl  bj_ppt_ptr		        ptr;
  1    17 
  1    18 dcl  1 bj_ppt		        based (bj_ppt_ptr) aligned,
  1    19        2 version		        fixed bin,
  1    20        2 max_n_entries	        fixed bin,		/* should be = dm_system_data_$bj_max_n_journals */
  1    21        2 n_entries_used	        fixed bin,		/* # of BJs open in this process */
  1    22        2 highest_ix_used	        fixed bin,		/* max. # of BJs ever opened in this process */
  1    23        2 default_bj,				/* for selecting a txn def. BJ by write_before_mark protocol */
  1    24          3 user_set_oid	        bit (36),		/* explicit user setting via $set_default_bj */
  1    25          3 last_opened_oid	        bit (36),		/* implicit if no user setting, set by open and close */
  1    26 						/* if both zero, use system default BJ */
  1    27        2 process_id		        bit (36),		/* so we don't have to keep calling for it. */
  1    28        2 process_ix		        fixed bin,		/* index into bj_check_in_table */
  1    29        2 mod_list_area	        (100) fixed bin (35), /* for keeping track of ppt mods, not curr. used */
  1    30 
  1    31        2 e		        dim (dm_system_data_$bj_max_n_journals refer (bj_ppt.max_n_entries))
  1    32 			        like bj_ppte;	/* an entry for each BJ open in this process */
  1    33 						/* always make sure bj_ppt.e is on a even word boundary */
  1    34 
  1    35 /* now specify the format of each per-process BJ table entry */
  1    36 
  1    37 dcl  bj_ppte_ptr		        ptr;
  1    38 
  1    39 dcl  1 bj_ppte		        based (bj_ppte_ptr) aligned,
  1    40        2 version		        fixed bin,		/* better be the same for all entries in a bj_ppt */
  1    41        2 bj_uid		        bit (36),		/* UID of the BJ page file */
  1    42        2 pf_oid		        bit (36),		/* OID of the BJ page file */
  1    43        2 n_opening		        fixed bin,		/* how many openings this process has done for this BJ */
  1    44        2 bj_pste_ptr	        ptr,		/* "link" to per-system BJ table entry */
  1    45        2 open_time		        fixed bin (71);	/* used to fill in bj_ppt.default_bj.last_opened_oid */
  1    46 						/* if the last opened BJ is closed */
  1    47 
  1    48 /* END INCLUDE FILE:	bj_ppt.incl.pl1	*/
       84 
       85 
  2     1 	/* BEGIN dm_bj_static.incl.pl1 */
  2     2 /*
  2     3*Modified: 
  2     4*10/04/82 by Lee A. Newcomb:  To change from internal static to external
  2     5*	  static.
  2     6**/
  2     7 
  2     8 dcl dm_system_data_$bj_max_n_journals		fixed bin ext static;
  2     9 dcl dm_system_data_$bj_max_n_processes		fixed bin ext static;
  2    10 dcl dm_system_data_$max_n_transactions     fixed bin ext static;
  2    11 
  2    12 	/* END dm_bj_static.incl.pl1 */
  2    13 
       86 
       87 
       88 
       89    end bj_ppte_register$check_in;
	SOURCE FILES USED IN THIS COMPILATION.

LINE      NUMBER  DATE MODIFIED     NAME			PATHNAME
             0    03/05/85  0757.7  bj_ppte_register.pl1              >spec>on>7138.pbf>bj_ppte_register.pl1
84           1    01/07/85  0857.6  dm_bj_ppt.incl.pl1                >ldd>include>dm_bj_ppt.incl.pl1
86           2    01/07/85  0857.8  dm_bj_static.incl.pl1             >ldd>include>dm_bj_static.incl.pl1
	NAMES DECLARED IN THIS COMPILATION.

IDENTIFIER	     OFFSET    LOC STORAGE CLASS   DATA TYPE		ATTRIBUTES AND REFERENCES
								(* indicates a set context)

NAMES DECLARED BY DECLARE STATEMENT.
BJ_PPTE_VERSION_1               000012 constant        fixed bin(17,0)          initial dcl 1-14 set ref 52*
ME                              000000 constant        char(25)                 initial unaligned dcl 35 set ref 66*
bj_ppte                                based           structure                level 1 dcl 1-39
bj_ppte_ptr                     000100 automatic       pointer                  dcl 1-37 set ref 50* 52 55 55
bj_report_err                   000010 constant        entry                    external dcl 40 ref 66
cvn_p_desired_version                  parameter       fixed bin(17,0)          dcl 73 ref 70 79
cvn_p_error_to_use                     parameter       fixed bin(35,0)          dcl 73 set ref 70 79*
cvn_p_given_version                    parameter       fixed bin(17,0)          dcl 73 ref 70 79
dm_error_$bj_bad_ppte_version   000012 external static fixed bin(35,0)          dcl 44 set ref 52*
er_p_code                              parameter       fixed bin(35,0)          dcl 64 set ref 61 66*
n_opening                 3            based           fixed bin(17,0)          level 2 dcl 1-39 set ref 55* 55
p_bj_ppte_ptr                          parameter       pointer                  dcl 30 ref 24 50
version                                based           fixed bin(17,0)          level 2 dcl 1-39 set ref 52*

NAMES DECLARED BY DECLARE STATEMENT AND NEVER REFERENCED.
BJ_PPT_VERSION_1                       internal static fixed bin(17,0)          initial dcl 1-13
bj_ppt                                 based           structure                level 1 dcl 1-18
bj_ppt_ptr                             automatic       pointer                  dcl 1-16
dm_system_data_$bj_max_n_journals      external static fixed bin(17,0)          dcl 2-8
dm_system_data_$bj_max_n_processes     external static fixed bin(17,0)          dcl 2-9
dm_system_data_$max_n_transactions     external static fixed bin(17,0)          dcl 2-10

NAMES DECLARED BY EXPLICIT CONTEXT.
CHECK_VERSION_NUMERIC           000065 constant        entry                    internal dcl 70 ref 52
ERROR_RETURN                    000045 constant        entry                    internal dcl 61 ref 79
bj_ppte_register$check_in       000017 constant        entry                    external dcl 24

THERE WERE NO NAMES DECLARED BY CONTEXT OR IMPLICATION.

STORAGE REQUIREMENTS FOR THIS PROGRAM.

	Object	Text	Link	Symbol	Defs	Static
Start          0       0       166         202     101         176
Length       402     101        14         163      65           0

BLOCK NAME	         STACK SIZE     TYPE		WHY NONQUICK/WHO SHARES STACK FRAME
bj_ppte_register$check_in           104 external procedure  is an external procedure.  
ERROR_RETURN                            internal procedure  shares stack frame of external procedure bj_ppte_register$check_in.  
CHECK_VERSION_NUMERIC                   internal procedure  shares stack frame of external procedure bj_ppte_register$check_in.  

STORAGE FOR AUTOMATIC VARIABLES.

STACK FRAME                 LOC IDENTIFIER                  BLOCK NAME
bj_ppte_register$check_in
                         000100 bj_ppte_ptr                 bj_ppte_register$check_in

THE FOLLOWING EXTERNAL OPERATORS ARE USED BY THIS PROGRAM.
call_ext_out_desc   return              ext_entry

THE FOLLOWING EXTERNAL ENTRIES ARE CALLED BY THIS PROGRAM.
bj_report_err

THE FOLLOWING EXTERNAL VARIABLES ARE USED BY THIS PROGRAM.
dm_error_$bj_bad_ppte_version




   LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC   
     24 000014        50 000024        52 000030        55 000042        57 000044        61 000045        66 000047
     68 000064        70 000065        79 000067        82 000100


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
