	COMPILATION LISTING OF SEGMENT tm_error_state
	Compiled by: Multics PL/I Compiler, Release 28e, of February 14, 1985
	Compiled at: Honeywell Multics Op. - System M
	Compiled on: 04/04/85  0948.9 mst Thu
	    Options: optimize map

        1 /* ***********************************************************
        2*   *                                                         *
        3*   * Copyright, (C) Honeywell Information Systems Inc., 1983 *
        4*   *                                                         *
        5*   *********************************************************** */
        6 /* format: style4,ifthenstmt,^indproc,^indcomtxt */
        7 /*---------------*/
        8 
        9 tm_error_state: proc (A_txn_index, A_state, A_code, A_caller, A_name);
       10 
       11 /* DESCRIPTION:
       12*   Puts  a  specified  transaction in a specified error state, and logs
       13*   the error by calling dm_misc_util_$log.   Also  zeroes  dm_data_$current_txn_id  so
       14*   that  protected  data operations will be prohibited until the transaction
       15*   is fixed.
       16**/
       17 /* HISTORY:
       18*
       19*Written by Steve Herbst, 01/14/83.
       20*Modified:
       21*10/18/84 by Steve Herbst: Changed in response to audit comments.
       22*01/04/85 by Steve Herbst: Changed ACTION_DEFAULT_RESTART to ACTION_CANT_RESTART.
       23*01/29/85 by Steve Herbst: Fixed to not zero dm_data_$current_txn_id.
       24*03/05/85 by Steve Herbst: Replaced dm_log_ with dm_misc_util_$log.
       25**/
       26 
       27 /* DECLARATIONS */
       28 
       29 /* Parameters */
       30 
       31 dcl  A_txn_index fixed bin parameter;
       32 dcl  A_state fixed bin parameter;
       33 dcl  A_code fixed parameter;
       34 dcl  A_caller char (*) parameter;
       35 dcl  A_name char (*) parameter;
       36 
       37 
       38 /* Constants */
       39 
       40 /* Based */
       41 
       42 /* Static */
       43 
       44 /* Automatic */
       45 
       46 dcl txn_index fixed bin;
       47 
       48 /* External */
       49 
       50 dcl dm_data_$current_txn_id bit (36) aligned ext;
       51 dcl dm_data_$tm_tdt_ptr ptr ext;
       52 dcl dm_system_data_$initializer_processid bit (36) aligned ext;
       53 dcl error_table_$unimplemented_version fixed bin (35) ext;
       54 
       55 /* Entries */
       56 
       57 dcl dm_misc_util_$log entry options (variable);
       58 dcl get_process_id_ entry returns (bit (36) aligned);
       59 dcl sub_err_ entry options (variable);
       60 
       61 /* Builtins */
       62 
       63 dcl (fixed, null) builtin;
       64 
       65 /* Conditions */
       66 
       67 /* END OF DECLARATIONS */
       68 
       69 	txn_index = A_txn_index;
       70 	tm_tdt_ptr = dm_data_$tm_tdt_ptr;
       71 
       72 	if tm_tdt.version ^= TM_TDT_VERSION_3 then do;
       73 	     call sub_err_ (error_table_$unimplemented_version, "tm_error_state", ACTION_CANT_RESTART,
       74 		null, 0, "Expected TDT version ^a, received version ^a", TM_TDT_VERSION_3, tm_tdt.version);
       75 	     return;
       76 	end;
       77 
       78 	call dm_misc_util_$log (ERROR_SV, A_code, A_caller,
       79 	     "  (index = ^d, TID = ^o, owner = ^a) Calling ^a",
       80 	     txn_index, fixed (tm_tdt.txn_id (txn_index)), tm_tdt.owner_name (txn_index), A_name);
       81 
       82 	tm_tdt.state (txn_index) = A_state;
       83 
       84 	tm_tdt.error_sw (txn_index) = "1"b;
       85 	tm_tdt.error_code (txn_index) = A_code;
       86 
       87 	if get_process_id_ () ^= dm_system_data_$initializer_processid then
       88 	     tm_tdt.daemon_adjust_count (txn_index) = 0;	/* user call; let the daemon try to adjust again */
       89 
       90 	return;
       91 
  1     1 /*  START OF:	dm_tm_tdt.incl.pl1		*/
  1     2 
  1     3 /* Transaction Definition Table for transaction_manager_ */
  1     4 /* This structure is used to reference the TDT. The process_id field for the
  1     5*   i'th TDT entry, for example, is usually referenced as tm_tdt.process_id (i).
  1     6*   A TDT entry is in use by a process when its process_id field is nonzero.
  1     7*   An entry is reserved by using the stacq builtin to set process_id, if and
  1     8*   only if it is already zero. The entry is being used for a transaction when
  1     9*   tm_tdt.txn_id (i) is nonzero. The possible values of tm_tdt.state (i) are
  1    10*   listed in dm_tm_states.incl.pl1. If state = 0, no operation has been
  1    11*   performed yet on the transaction. */
  1    12 
  1    13 
  1    14 /* HISTORY:
  1    15*Designed by Matt Pierret, 01/26/82.
  1    16*Coded by Steve Herbst, 07/27/82.
  1    17*Modified:
  1    18*08/05/82 by Steve Herbst: Added tm_tdt.operation and padded last_uid to full word.
  1    19*08/05/82 by Steve Herbst: Changed creator_process_id to bit (36).
  1    20*08/16/82 by Steve Herbst: Added contents of dm_tm_tdt_entry.incl.pl1.
  1    21*09/09/82 by Steve Herbst: Removed in_use flag from TDT entry and rearranged fields.
  1    22*09/20/82 by Steve Herbst: Removed tm_tdt.operation.
  1    23*11/01/82 by Steve Herbst: Added event_channel and error_sw to tm_tdt_entry.
  1    24*11/05/82 by Steve Herbst: Added suspended_sw and error_code to tm_tdt_entry.
  1    25*11/11/82 by Steve Herbst: Deleted tm_tdt_entry.alloc_complete.
  1    26*11/23/82 by Steve Herbst: Compacted, changed some numbers to unsigned.
  1    27*12/14/82 by Steve Herbst: Added tm_tdt_entry.daemon_error_sw.
  1    28*01/11/83 by Steve Herbst: Added owner_name, abandoned_sw & kill_sw to tm_tdt_entry.
  1    29*01/24/83 by Steve Herbst: Replaced daemon_error_sw with daemon_adjust_count.
  1    30*01/25/83 by Steve Herbst: Moved abandoned_sw from transaction portion to entry header portion.
  1    31*05/13/83 by Steve Herbst: Version 3, changed all fixed bin (18) unal uns numbers to fixed bin (17) unaligned.
  1    32*05/26/83 by Steve Herbst: Added rollback_count and checkpoint_id.
  1    33**/
  1    34 
  1    35 dcl	tm_tdt_ptr	ptr;
  1    36 dcl	tdt_max_count	fixed bin;
  1    37 
  1    38 dcl TM_TDT_VERSION_3 char (8) int static options (constant) init ("TM-TDT 3");
  1    39 
  1    40 
  1    41 dcl  1	tm_tdt		aligned based (tm_tdt_ptr),
  1    42       2	version char (8),				/* = "TM-TDT 3" */
  1    43       2	lock fixed bin (71),			/* (currently not used) */
  1    44       2	last_uid		bit (27) aligned,		/* last transaction uid assigned */
  1    45       2	flags,
  1    46        3	no_begins		bit (1) unaligned,		/* ON => only priv process can begin transaction */
  1    47        3	mbz1		bit (35) unaligned,
  1    48       2	entry_count	fixed bin,		/* number of slots allocated */
  1    49       2	mbz2		fixed bin,		/* for even word boundary */
  1    50       2	entry  (tdt_max_count refer (tm_tdt.entry_count))
  1    51 			like tm_tdt_entry;
  1    52 
  1    53 
  1    54 
  1    55 /* TDT entries: */
  1    56 
  1    57 dcl	tm_tdt_entry_ptr	ptr;
  1    58 
  1    59 dcl  1	tm_tdt_entry	aligned based (tm_tdt_entry_ptr),
  1    60       2	event_channel	fixed bin (71),		/* for communication with the process */
  1    61       2	process_id	bit (36) aligned,		/* process for which this entry is reserved */
  1    62       2	owner_name	char (32),		/* person.project of owner process */
  1    63       2	entry_flags,
  1    64        3	abandoned_sw	bit (1) unaligned,		/* ON => owner has called tm_$abandon on this entry */
  1    65        3	mbz3		bit (35) unaligned,
  1    66       2	transaction	unaligned,
  1    67        3	txn_id		bit (36) aligned,		/* unique identifier assigned at begin time */
  1    68        3	date_time_created	fixed bin (71) aligned,
  1    69        3	mode		fixed bin (17) unaligned,	/* mode specified with transaction begin */
  1    70        3	state		fixed bin (17) unaligned,	/* state transaction is currently in */
  1    71        3  error_code	fixed bin (35) aligned,	/* goes along with error_sw and error state */
  1    72        3 	checkpoint_id	fixed bin (17) unaligned,	/* identifier of the current rollback checkpoint */
  1    73        3	rollback_count	fixed bin (17) unaligned,	/* number of times bjm_$rollback has been called */
  1    74        3	daemon_adjust_count	fixed bin (17) unaligned,	/* number of times daemon has tried to adjust since user */
  1    75        3	return_idx	fixed bin (17) unaligned,	/* parent transaction, or zero */
  1    76        3	flags,
  1    77         4 dead_process_sw	bit (1) unaligned,		/* ON => treat process as dead even if it isn't yet */
  1    78         4 suspended_sw	bit (1) unaligned,		/* ON => suspended by tm_$suspend_txn */
  1    79         4 error_sw		bit (1) unaligned,		/* ON => state is one of the error states */
  1    80         4 kill_sw		bit (1) unaligned,		/* ON => being processed by tm_$kill */
  1    81         4	mbz4		bit (29) unaligned,
  1    82        3	post_commit_flags,
  1    83         4 (fmgr,
  1    84 	 bjmgr,
  1    85 	 ajmgr)	 	 bit (1) unaligned,
  1    86        3	mbz4		fixed bin;
  1    87 
  1    88 
  1    89 /*  END OF:	dm_tm_tdt.incl.pl1		*/
       92 
       93 
  2     1 /* BEGIN INCLUDE FILE dm_log_sv_codes.incl.pl1 */
  2     2 
  2     3 /* format: ^indcom */
  2     4 
  2     5 /* DESCRIPTION:
  2     6*   These are the severity codes used by the dms daemon when calling its logger.
  2     7*   The severity is ranked thusly:
  2     8*
  2     9*   severity log write situation
  2    10*   -------- --- ----- ---------
  2    11*          0 no  yes   standard output, query, etc.
  2    12*          1 yes yes   fatal error, terminate dms daemon.
  2    13*          2 yes yes   nonfatal error.
  2    14*          3 yes yes   informative message.
  2    15*          4 yes no    log information only.
  2    16**/
  2    17 
  2    18 /* HISTORY:
  2    19*
  2    20*Written by M. Pandolf, 10/06/82.
  2    21*Modified:
  2    22*12/10/84 by R. Michael Tague: Rename and reformat description/history.
  2    23*01/13/85 by Lee A. Newcomb:  Renamed to dm_log_sv_codes from
  2    24*            dm_daemon_sv_codes as the severity codes for the DM log are not
  2    25*            restrained to the DM Daemon's use.
  2    26*01/24/85 by Lee A. Newcomb:  Fixed to say dm_log_sv_codes.incl.pl1 in the
  2    27*            BEGIN and END INCLUDE comments, instead of dm_daemon_sv_codes.==.
  2    28**/
  2    29 
  2    30 /* format: style5 */
  2    31 
  2    32      dcl	   (PRINT_SV, QUERY_SV)    fixed bin internal static
  2    33 			       options (constant) init (0);
  2    34      dcl	   (CRASH_SV, FATAL_SV)    fixed bin internal static
  2    35 			       options (constant) init (1);
  2    36      dcl	   ERROR_SV	       fixed bin internal static
  2    37 			       options (constant) init (2);
  2    38      dcl	   INFORM_SV	       fixed bin internal static
  2    39 			       options (constant) init (3);
  2    40      dcl	   LOG_SV		       fixed bin internal static
  2    41 			       options (constant) init (4);
  2    42 
  2    43 /* END INCLUDE FILE dm_log_sv_codes.incl.pl1 */
       94 
       95 
  3     1 /* BEGIN INCLUDE FILE sub_err_flags.incl.pl1 BIM 11/81 */
  3     2 /* format: style3 */
  3     3 
  3     4 /* These constants are to be used for the flags argument of sub_err_ */
  3     5 /* They are just "string (condition_info_header.action_flags)" */
  3     6 
  3     7 declare	(
  3     8 	ACTION_CAN_RESTART	init (""b),
  3     9 	ACTION_CANT_RESTART init ("1"b),
  3    10 	ACTION_DEFAULT_RESTART
  3    11 			init ("01"b),
  3    12 	ACTION_QUIET_RESTART
  3    13 			init ("001"b),
  3    14 	ACTION_SUPPORT_SIGNAL
  3    15 			init ("0001"b)
  3    16 	)		bit (36) aligned internal static options (constant);
  3    17 
  3    18 /* End include file */
       96 
       97 
       98 
       99 end tm_error_state;
	SOURCE FILES USED IN THIS COMPILATION.

LINE      NUMBER  DATE MODIFIED     NAME			PATHNAME
             0    04/04/85  0827.1  tm_error_state.pl1                >spec>on>7192.pbf-04/04/85>tm_error_state.pl1
92           1    01/07/85  0900.1  dm_tm_tdt.incl.pl1                >ldd>include>dm_tm_tdt.incl.pl1
94           2    03/06/85  1031.1  dm_log_sv_codes.incl.pl1          >ldd>include>dm_log_sv_codes.incl.pl1
96           3    04/16/82  0958.1  sub_err_flags.incl.pl1            >ldd>include>sub_err_flags.incl.pl1
	NAMES DECLARED IN THIS COMPILATION.

IDENTIFIER	     OFFSET    LOC STORAGE CLASS   DATA TYPE		ATTRIBUTES AND REFERENCES
								(* indicates a set context)

NAMES DECLARED BY DECLARE STATEMENT.
ACTION_CANT_RESTART             000002 constant        bit(36)                  initial dcl 3-7 set ref 73*
A_caller                               parameter       char                     unaligned dcl 34 set ref 9 78*
A_code                                 parameter       fixed bin(17,0)          dcl 33 set ref 9 78* 85
A_name                                 parameter       char                     unaligned dcl 35 set ref 9 78*
A_state                                parameter       fixed bin(17,0)          dcl 32 ref 9 82
A_txn_index                            parameter       fixed bin(17,0)          dcl 31 ref 9 69
ERROR_SV                        000017 constant        fixed bin(17,0)          initial dcl 2-36 set ref 78*
TM_TDT_VERSION_3                000000 constant        char(8)                  initial unaligned dcl 1-38 set ref 72 73*
daemon_adjust_count      33            based           fixed bin(17,0)          array level 4 packed unaligned dcl 1-41 set ref 87*
dm_data_$tm_tdt_ptr             000010 external static pointer                  dcl 51 ref 70
dm_misc_util_$log               000016 constant        entry                    external dcl 57 ref 78
dm_system_data_$initializer_processid
                                000012 external static bit(36)                  dcl 52 ref 87
entry                    10            based           structure                array level 2 dcl 1-41
error_code               31            based           fixed bin(35,0)          array level 4 dcl 1-41 set ref 85*
error_sw                 34(02)        based           bit(1)                   array level 5 packed unaligned dcl 1-41 set ref 84*
error_table_$unimplemented_version
                                000014 external static fixed bin(35,0)          dcl 53 set ref 73*
fixed                                                  builtin function         dcl 63 ref 78 78
flags                    34            based           structure                array level 4 packed unaligned dcl 1-41
get_process_id_                 000020 constant        entry                    external dcl 58 ref 87
null                                                   builtin function         dcl 63 ref 73 73
owner_name               13            based           char(32)                 array level 3 dcl 1-41 set ref 78*
state                    30(18)        based           fixed bin(17,0)          array level 4 packed unaligned dcl 1-41 set ref 82*
sub_err_                        000022 constant        entry                    external dcl 59 ref 73
tm_tdt                                 based           structure                level 1 dcl 1-41
tm_tdt_entry                           based           structure                level 1 dcl 1-59
tm_tdt_ptr                      000102 automatic       pointer                  dcl 1-35 set ref 70* 72 73 78 78 78 82 84 85 87
transaction              24            based           structure                array level 3 unaligned dcl 1-41
txn_id                   24            based           bit(36)                  array level 4 dcl 1-41 ref 78 78
txn_index                       000100 automatic       fixed bin(17,0)          dcl 46 set ref 69* 78* 78 78 78 82 84 85 87
version                                based           char(8)                  level 2 dcl 1-41 set ref 72 73*

NAMES DECLARED BY DECLARE STATEMENT AND NEVER REFERENCED.
ACTION_CAN_RESTART                     internal static bit(36)                  initial dcl 3-7
ACTION_DEFAULT_RESTART                 internal static bit(36)                  initial dcl 3-7
ACTION_QUIET_RESTART                   internal static bit(36)                  initial dcl 3-7
ACTION_SUPPORT_SIGNAL                  internal static bit(36)                  initial dcl 3-7
CRASH_SV                               internal static fixed bin(17,0)          initial dcl 2-34
FATAL_SV                               internal static fixed bin(17,0)          initial dcl 2-34
INFORM_SV                              internal static fixed bin(17,0)          initial dcl 2-38
LOG_SV                                 internal static fixed bin(17,0)          initial dcl 2-40
PRINT_SV                               internal static fixed bin(17,0)          initial dcl 2-32
QUERY_SV                               internal static fixed bin(17,0)          initial dcl 2-32
dm_data_$current_txn_id                external static bit(36)                  dcl 50
tdt_max_count                          automatic       fixed bin(17,0)          dcl 1-36
tm_tdt_entry_ptr                       automatic       pointer                  dcl 1-57

NAME DECLARED BY EXPLICIT CONTEXT.
tm_error_state                  000064 constant        entry                    external dcl 9

THERE WERE NO NAMES DECLARED BY CONTEXT OR IMPLICATION.

STORAGE REQUIREMENTS FOR THIS PROGRAM.

	Object	Text	Link	Symbol	Defs	Static
Start          0       0       426         452     311         436
Length       676     311        24         210     115           0

BLOCK NAME	         STACK SIZE     TYPE		WHY NONQUICK/WHO SHARES STACK FRAME
tm_error_state                      158 external procedure  is an external procedure.  

STORAGE FOR AUTOMATIC VARIABLES.

STACK FRAME                 LOC IDENTIFIER                  BLOCK NAME
tm_error_state           000100 txn_index                   tm_error_state
                         000102 tm_tdt_ptr                  tm_error_state

THE FOLLOWING EXTERNAL OPERATORS ARE USED BY THIS PROGRAM.
call_ext_out_desc   call_ext_out        return              ext_entry_desc

THE FOLLOWING EXTERNAL ENTRIES ARE CALLED BY THIS PROGRAM.
dm_misc_util_$log             get_process_id_               sub_err_

THE FOLLOWING EXTERNAL VARIABLES ARE USED BY THIS PROGRAM.
dm_data_$tm_tdt_ptr           dm_system_data_$initializer_processid
error_table_$unimplemented_version




   LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC   
      9 000057        69 000104        70 000107        72 000112        73 000117        75 000175        78 000176
     82 000253        84 000263        85 000265        87 000267        90 000310


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
