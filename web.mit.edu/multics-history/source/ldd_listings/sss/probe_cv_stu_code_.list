	COMPILATION LISTING OF SEGMENT probe_cv_stu_code_
	Compiled by: Multics PL/I Compiler, Release 31a, of October 12, 1988
	Compiled at: Honeywell Bull, Phoenix AZ, SysM
	Compiled on: 10/24/88  1601.0 mst Mon
	    Options: optimize map

        1 /****^  ***********************************************************
        2*        *                                                         *
        3*        * Copyright, (C) Honeywell Bull Inc., 1988                *
        4*        *                                                         *
        5*        * Copyright, (C) Honeywell Information Systems Inc., 1982 *
        6*        *                                                         *
        7*        * Copyright (c) 1972 by Massachusetts Institute of        *
        8*        * Technology and Honeywell Information Systems, Inc.      *
        9*        *                                                         *
       10*        *********************************************************** */
       11 
       12 
       13 
       14 /****^  HISTORY COMMENTS:
       15*  1) change(88-09-07,WAAnderson), approve(88-09-30,MCR7952),
       16*     audit(88-09-30,JRGray), install(88-10-24,MR12.2-1184):
       17*     Added format control comment to make the source more readable.
       18*                                                   END HISTORY COMMENTS */
       19 
       20 
       21 /* format: style1,insnl,ifthendo,indthenelse,^indnoniterdo,^inditerdo,indcom,^indthenbegin,^indprocbody,ind2,ll78,initcol0,dclind4,idind24,struclvlind1,comcol41 */
       22 
       23 /****  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  */
       24 
       25 probe_cv_stu_code_:
       26   proc (P_code);
       27 
       28   /* *	This procedure exists solely to convert the silly status code from stu_
       29*   *	(called steps) into a more useful probe_et_ code. */
       30 
       31   dcl P_code		fixed bin (35) parameter;
       32 				/* input and output */
       33 
       34   dcl (
       35       probe_et_$no_block,
       36       probe_et_$too_many_levels,
       37       probe_et_$too_long,
       38       probe_et_$no_dcl,
       39       probe_et_$ambiguous_ref
       40       )			fixed bin (35) external;
       41 
       42   if P_code >= 0
       43     then return;
       44   else if P_code < -5
       45     then return;
       46   else if P_code = -1
       47     then P_code = probe_et_$no_block;
       48   else if P_code = -2
       49     then P_code = probe_et_$too_many_levels;
       50   else if P_code = -3
       51     then P_code = probe_et_$too_long;
       52   else if P_code = -4
       53     then P_code = probe_et_$no_dcl;
       54   else if P_code = -5
       55     then P_code = probe_et_$ambiguous_ref;
       56 
       57   return;
       58   end;				/* probe_cv_stu_code_ external procedure */
	SOURCE FILES USED IN THIS COMPILATION.

LINE      NUMBER  DATE MODIFIED     NAME			PATHNAME
             0    10/24/88  1342.3  probe_cv_stu_code_.pl1            >special_ldd>install>MR12.2-1184>probe_cv_stu_code_.pl1
	NAMES DECLARED IN THIS COMPILATION.

IDENTIFIER	     OFFSET    LOC STORAGE CLASS   DATA TYPE		ATTRIBUTES AND REFERENCES
								(* indicates a set context)

NAMES DECLARED BY DECLARE STATEMENT.
P_code                                 parameter       fixed bin(35,0)          dcl 31 set ref 25 42 44 46 46* 48 48* 50 50* 52 52*
                                                                                  54 54*
probe_et_$ambiguous_ref         000020 external static fixed bin(35,0)          dcl 34 ref 54
probe_et_$no_block              000010 external static fixed bin(35,0)          dcl 34 ref 46
probe_et_$no_dcl                000016 external static fixed bin(35,0)          dcl 34 ref 52
probe_et_$too_long              000014 external static fixed bin(35,0)          dcl 34 ref 50
probe_et_$too_many_levels       000012 external static fixed bin(35,0)          dcl 34 ref 48

NAME DECLARED BY EXPLICIT CONTEXT.
probe_cv_stu_code_              000004 constant        entry                    external dcl 25

THERE WERE NO NAMES DECLARED BY CONTEXT OR IMPLICATION.

STORAGE REQUIREMENTS FOR THIS PROGRAM.

	Object	Text	Link	Symbol	Defs	Static
Start          0       0       146         170      55         156
Length       346      55        22         142      70           0

BLOCK NAME	         STACK SIZE     TYPE		WHY NONQUICK/WHO SHARES STACK FRAME
probe_cv_stu_code_                   64 external procedure  is an external procedure.  

THE FOLLOWING EXTERNAL OPERATORS ARE USED BY THIS PROGRAM.
return_mac          ext_entry

NO EXTERNAL ENTRIES ARE CALLED BY THIS PROGRAM.

THE FOLLOWING EXTERNAL VARIABLES ARE USED BY THIS PROGRAM.
probe_et_$ambiguous_ref       probe_et_$no_block            probe_et_$no_dcl              probe_et_$too_long
probe_et_$too_many_levels




   LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC   
     25 000001        42 000011        44 000014        46 000017        48 000024        50 000031        52 000036
     54 000043        57 000047


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
