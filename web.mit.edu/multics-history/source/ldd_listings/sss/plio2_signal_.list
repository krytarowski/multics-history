	COMPILATION LISTING OF SEGMENT plio2_signal_
	Compiled by: Multics PL/I Compiler, Release 33e, of October 6, 1992
	Compiled at: CGI                             
	Compiled on: 2000-04-18_1131.38_Tue_mdt
	    Options: optimize map

        1 /****^  *********************************************************
        2*        *                                                       *
        3*        * Copyright, (C) BULL HN Information Systems Inc., 1989 *
        4*        *                                                       *
        5*        * Copyright (c) 1972 by Massachusetts Institute of      *
        6*        * Technology and Honeywell Information Systems, Inc.    *
        7*        *                                                       *
        8*        ********************************************************* */
        9 
       10 
       11 /****^  HISTORY COMMENTS:
       12*  1) change(89-03-24,Huen), approve(89-03-24,MCR8102), 
       13*     audit(89-09-15,Vu), install(89-21-09,MR12.3-1071):	
       14*     Modify r_ to branch to the correct label "work_1" instead of the label
       15*     "work" so that the parameter "condition_name" which is undefined will not
       16*     be referenced.  (pl1_2197)
       17*                                                   END HISTORY COMMENTS */
       18 
       19 /* updated 5-13-72 by PAB to shift burden to HELP_PLIO2_SIGNAL_  */
       20 
       21 
       22 plio2_signal_: proc options(support);
       23 
       24 
       25 /* 	plio2_signal_$
       26*   s_			signals
       27*   s_l_			signals with datafield
       28*   s_r_			signals and does abnormal return
       29*   s_r_l_			signals with datafield and does abnormal return
       30*   r_                         does abnormal return
       31*   conversion_error_	signals conversion condition, repairs string */
       32 
       33 /* 	DECLARATION */
       34 
       35 dcl c fixed bin (15);              /* conversion */
       36 dcl l fixed bin (15);              /* data field */
       37 dcl r fixed bin (15);              /* abnormal return */
       38 dcl s fixed bin (15);              /* signal */
       39 dcl (erno, n1,n2,n3,oncharind) fixed bin(15);
       40 dcl (addr, null, string, substr) builtin;
       41 dcl CN char(20) aligned;
       42 dcl (psp,pspp,fsbp,chp,file_ptr,p2(2) based) ptr;
       43 dcl based_chars char (1044480) based;
       44 dcl based_label label based;
       45 dcl onsource char(256) varying;
       46 dcl (condition_name,msg,datafield) char(*);
       47 dcl plio2_signal_$s_r_ ext entry(ptr,char(*),char(*),fixed bin(15));
       48 dcl plio2_put_util_$put_publish_ ext entry (ptr);
       49 dcl put_copy_ ext entry(ptr,fixed bin(15));
       50 dcl pl1_signal_$help_plio2_signal_ ext entry(char(*),ptr,fixed bin(15),char(256) varying,fixed bin(15));
       51 
  1     1 /* BEGIN INCLUDE FILE ... plio2_fsb.incl.pl1 */
  1     2 /* format: style3,idind30 */
  1     3 
  1     4 declare	1 fsb			aligned based (fsbp),
  1     5 	  2 switch		aligned,
  1     6 	    3 zot			(2) bit (1) unaligned,
  1     7 	    3 version_2		bit (1) unaligned,
  1     8 	    3 open		bit (1) unaligned,
  1     9 	    3 print		bit (1) unaligned,
  1    10 	    3 input		bit (1) unaligned,
  1    11 	    3 output		bit (1) unaligned,
  1    12 	    3 update		bit (1) unaligned,
  1    13 	    3 stream		bit (1) unaligned,
  1    14 	    3 notkeyed		bit (1) unaligned,
  1    15 	    3 record		bit (1) unaligned,
  1    16 	    3 sequential		bit (1) unaligned,
  1    17 	    3 direct		bit (1) unaligned,
  1    18 	    3 interactive		bit (1) unaligned,
  1    19 	    3 not_used_1		bit (1) unaligned,
  1    20 	    3 not_used_2		bit (1) unaligned,
  1    21 	    3 stringvalue		bit (1) unaligned,
  1    22 	    3 keyed		bit (1) unaligned,
  1    23 	    3 namelist		bit (1) unaligned,
  1    24 	    3 implementation	bit (1) unaligned,
  1    25 	    3 not_used_4		bit (1) unaligned,	/* old get-input eof flag */
  1    26 	    3 transmit_error	bit (1) unaligned,
  1    27 	    3 buffer_in_use		bit (1) unaligned,
  1    28 	    3 copy		bit (1) unaligned,
  1    29 	    3 detach		bit (1) unaligned,
  1    30 	    3 te_hold		bit (1) unaligned,
  1    31 	    3 not_used_5		bit (1) unaligned,
  1    32 	    3 internal		bit (1) unaligned,
  1    33 	    3 threaded		bit (1) unaligned,
  1    34 	    3 fsb_in_use		bit (1) unaligned,
  1    35 	    3 console		bit (1) unaligned,
  1    36 	    3 emptyline		bit (1) unaligned,
  1    37 	    3 iox_close		bit (1) unaligned,
  1    38 	    3 xxx4		bit (1) unaligned,
  1    39 	    3 xxx5		bit (1) unaligned,
  1    40 	    3 xxx6		bit (1) unaligned,
  1    41 	  2 nono			aligned,
  1    42 	    3 bit_string		bit (1) unaligned,
  1    43 	    3 not_used_3		bit (1) unaligned,
  1    44 	    3 read		bit (1) unaligned,
  1    45 	    3 write		bit (1) unaligned,
  1    46 	    3 rewrite		bit (1) unaligned,
  1    47 	    3 delete		bit (1) unaligned,
  1    48 	    3 locate		bit (1) unaligned,
  1    49 	    3 key			bit (1) unaligned,
  1    50 	    3 keyto		bit (1) unaligned,
  1    51 	    3 keyfrom		bit (1) unaligned,
  1    52 	    3 set			bit (1) unaligned,
  1    53 	    3 into		bit (1) unaligned,
  1    54 	    3 ignore		bit (1) unaligned,
  1    55 	    3 from		bit (1) unaligned,
  1    56 	    3 nofrom		bit (1) unaligned,
  1    57 	    3 nokey		bit (1) unaligned,
  1    58 	    3 nokeyfrom		bit (1) unaligned,
  1    59 	    3 nolock		bit (1) unaligned,
  1    60 	  2 lsep			fixed bin (15),	/* (1,COMMA)(2,BL)(3,TAB)(4,NL)(5,SEMI) */
  1    61 	  2 iocb_p		ptr unaligned,	/* identifies data_set to iox_ */
  1    62 	  2 blc			fixed bin (21),	/* buffer's last character (input) */
  1    63 	  2 bsize			fixed bin (21),	/* size of buffer */
  1    64 	  2 bptr			ptr,		/* address of buffer */
  1    65 	  2 bnc			fixed bin (15),	/* next character in buffer */
  1    66 	  2 kol			fixed bin (15),	/* last column read from or written into */
  1    67 	  2 lsize			fixed bin (15),	/* line size (output) */
  1    68 	  2 lineno		fixed bin (15),	/* current line (output) - starts at 1 on each new page */
  1    69 	  2 psize			fixed bin (35),	/* page size (output) */
  1    70 	  2 pageno		fixed bin (15),	/* current page number, starts at 1 */
  1    71 	  2 limit			fixed bin (15),
  1    72 	  2 lnzc			fixed bin (35),
  1    73 	  2 filename		char (32) aligned,	/* declared file name */
  1    74 	  2 title			char (32) unaligned,/* Multics I/O switch */
  1    75 	  2 fsb_thread		ptr,
  1    76 	  2 buffer		(212) fixed bin (15),
  1    77 	  2 path_name		char (168) unal,	/* title option */
  1    78 	  2 declared_attributes	(2) bit (36) aligned;
  1    79 
  1    80 declare	xbuf			char (1000) unaligned based (fsb.bptr);
  1    81 
  1    82 /* END INCLUDE FILE ... plio2_fsb.incl.pl1 */
       52 
  2     1 /* BEGIN INCLUDE FILE ... plio2_ps.incl.pl1 */
  2     2 /* Stream I/O data block used by PL/I I/O runtime routines.
  2     3*
  2     4*   Modified: 31 January 1978 by RAB to change plio2_data_$fsb_thread to plio2_data_fsb_thread_
  2     5**/
  2     6 /* format: style3,idind30 */
  2     7 
  2     8 /* based */
  2     9 
  2    10 declare	1 ps			aligned based (psp),/* items set NORMALLY by compiled procedures */
  2    11 	  2 stack_frame_p		ptr,		/* items set in block prologue */
  2    12 	  2 ST_top_p		ptr,
  2    13 	  2 ST_block_p		ptr,
  2    14 	  2 format_area_p		ptr,
  2    15 	  2 ss_list_p		ptr,
  2    16 	  2 ab_return,				/* items set in prep call */
  2    17 	    3 abret		(3) ptr,
  2    18 	  2 source_p		ptr,		/* addr(fakefsb) for string option,
  2    19*						   addr(file) for explicit file option */
  2    20 	  2 special_list_p		ptr,		/* addr(OKlist) for get data, addr(format_list) for edit */
  2    21 	  2 copy_file_p		ptr,
  2    22 	  2 job			aligned,
  2    23 	    3 explicit_file		bit (1) unal,
  2    24 	    3 string		bit (1) unal,
  2    25 	    3 varying_string	bit (1) unal,
  2    26 	    3 data		bit (1) unal,
  2    27 	    3 edit		bit (1) unal,
  2    28 	    3 list		bit (1) unal,
  2    29 	    3 get			bit (1) unal,
  2    30 	    3 put			bit (1) unal,
  2    31 	    3 page		bit (1) unal,
  2    32 	    3 line		bit (1) unal,
  2    33 	    3 skip		bit (1) unal,
  2    34 	    3 copy		bit (1) unal,
  2    35 	    3 p1p2		bit (1) unal,
  2    36 	    3 bit_string		bit (1) unal,	/* for environment(stringvalue) */
  2    37 	    3 char_string		bit (1) unal,
  2    38 	    3 read		bit (1) unal,
  2    39 	    3 write		bit (1) unal,
  2    40 	    3 rewrite		bit (1) unal,
  2    41 	    3 delete		bit (1) unal,
  2    42 	    3 locate		bit (1) unal,
  2    43 	    3 key			bit (1) unal,
  2    44 	    3 keyto		bit (1) unal,
  2    45 	    3 keyfrom		bit (1) unal,
  2    46 	    3 set			bit (1) unal,
  2    47 	    3 into		bit (1) unal,
  2    48 	    3 ignore		bit (1) unal,
  2    49 	    3 from		bit (1) unal,
  2    50 	    3 version		bit (6) unal,
  2    51 	    3 not_byte_buffer	bit (1) unal,
  2    52 	    3 pad1		bit (1) unal,
  2    53 	    3 packed_ptr		bit (1) unal,
  2    54 	  2 number		fixed bin (15),
  2    55 	  2 value_p		ptr,		/* items set NORMALLY by compiled procedures per transmission */
  2    56 	  2 descriptor		bit (36) aligned,
  2    57 	  2 length		fixed bin (15),	/* may be swallowed into descriptor */
  2    58 	  2 top_half		bit (18) unal,
  2    59 	  2 offset		bit (18) unal,
  2    60 	  2 prep			fixed bin (15),	/* items treated ABNORMALLY, written by user and PLIO */
  2    61 	  2 new_format		fixed bin (15),
  2    62 	  2 switch		aligned,		/* items used by PLIO and not touched by compiled procedures */
  2    63 	    3 first_field		bit (1) unal,
  2    64 	    3 file		bit (1) unal,
  2    65 	    3 transmit_error	bit (1) unal,
  2    66 	    3 semi_sep		bit (1) unal,
  2    67 	    3 pad2		bit (32) unal,
  2    68 	  2 file_p		ptr,
  2    69 	  2 fsbp			ptr,
  2    70 	  2 auxp			ptr,		/* used as addr(ldidata) for GETs */
  2    71 	  2 fabp			ptr,
  2    72 	  2 fab2p			ptr,
  2    73 	  2 vp			ptr,
  2    74 	  2 descr			bit (36) aligned,
  2    75 	  2 start_copy		fixed bin (15),
  2    76 	  2 quick_stream_storage,
  2    77 	    3 a_stored		fixed bin (35),
  2    78 	    3 q_stored		fixed bin (35);
  2    79 
  2    80 /* external static */
  2    81 
  2    82 declare	(
  2    83 	plio2_data_$pspstat,
  2    84 	plio2_data_$fsbpstat,
  2    85 	plio2_data_$badfsbp,
  2    86 	plio2_data_$fabpstat,
  2    87 	plio2_data_$fab2pstat,
  2    88 	plio2_data_$pliostringfsbp
  2    89 	)			ptr external static;
  2    90 
  2    91 dcl	plio2_data_fsb_thread_	ptr ext static initial (null);
  2    92 						/* *system var */
  2    93 
  2    94 declare	(
  2    95 	plio2_data_$badjob		bit (36) aligned,
  2    96 	plio2_data_$undef_file_sw	bit (1) aligned
  2    97 	)			external static;
  2    98 
  2    99 /* END INCLUDE FILE ... plio2_ps.incl.pl1 */
       53 
  3     1 /* BEGIN INCLUDE FILE ... plio2_psr.incl.pl1 */
  3     2 /* Record I/O data block used by PL/I I/O runtime routines. */
  3     3 /* format: style3,idind30 */
  3     4 
  3     5 declare	1 psr			aligned based (psp),
  3     6 	  2 pad0			(5) ptr,		/* items set NORMALLY by compiled procedures */
  3     7 	  2 ab_return,				/* items set in prep call */
  3     8 	    3 abret		(3) ptr,
  3     9 	  2 source_p		ptr,		/* addr(file) for explicit file option */
  3    10 	  2 set_p_p		ptr,
  3    11 	  2 pad1			bit (36) aligned,
  3    12 	  2 variable_bitlen		fixed bin (35),
  3    13 	  2 job			aligned,
  3    14 	    3 explicit_file		bit (1) unal,
  3    15 	    3 string		bit (1) unal,
  3    16 	    3 varying_string	bit (1) unal,
  3    17 	    3 data		bit (1) unal,
  3    18 	    3 edit		bit (1) unal,
  3    19 	    3 list		bit (1) unal,
  3    20 	    3 get			bit (1) unal,
  3    21 	    3 put			bit (1) unal,
  3    22 	    3 page		bit (1) unal,
  3    23 	    3 line		bit (1) unal,
  3    24 	    3 skip		bit (1) unal,
  3    25 	    3 copy		bit (1) unal,
  3    26 	    3 p1p2		bit (1) unal,
  3    27 	    3 bit_string		bit (1) unal,	/* for environment(stringvalue) */
  3    28 	    3 char_string		bit (1) unal,
  3    29 	    3 read		bit (1) unal,
  3    30 	    3 write		bit (1) unal,
  3    31 	    3 rewrite		bit (1) unal,
  3    32 	    3 delete		bit (1) unal,
  3    33 	    3 locate		bit (1) unal,
  3    34 	    3 key			bit (1) unal,
  3    35 	    3 keyto		bit (1) unal,
  3    36 	    3 keyfrom		bit (1) unal,
  3    37 	    3 set			bit (1) unal,
  3    38 	    3 into		bit (1) unal,
  3    39 	    3 ignore		bit (1) unal,
  3    40 	    3 from		bit (1) unal,
  3    41 	    3 version		bit (6) unal,
  3    42 	    3 not_bytebuffer	bit (1) unal,
  3    43 	    3 varying_array		bit (1) unal,
  3    44 	    3 packedptr		bit (1) unal,
  3    45 	  2 number		fixed bin (21),
  3    46 	  2 variable_p		ptr,		/* items set NORMALLY by compiled procedures per transmission */
  3    47 	  2 pad2			bit (36) aligned,
  3    48 	  2 pad3			bit (36) aligned,
  3    49 	  2 pad4			bit (36) aligned,
  3    50 	  2 locking_switch		bit (36) aligned,	/* items treated ABNORMALLY, written by user and PLIO */
  3    51 						/* "prep" for stream I/O */
  3    52 	  2 new_format		fixed bin (15),	/* for stream I/O only */
  3    53 	  2 pad5			bit (36) aligned,	/* items used by PLIO and not touched by compiled procedures */
  3    54 	  2 file_p		ptr,
  3    55 	  2 fsbp			ptr,
  3    56 	  2 auxp			ptr,
  3    57 	  2 fabp			ptr,
  3    58 	  2 fab2p			ptr,
  3    59 	  2 pad6			bit (36) aligned,
  3    60 	  2 pad7			bit (36) aligned,
  3    61 	  2 pad8			bit (36) aligned,
  3    62 	  2 pad9			bit (36) aligned,
  3    63 	  2 pad10			bit (36) aligned,
  3    64 	  2 pl1_ops_flags		aligned,		/* for communication between pl1_operators_ and plio2 */
  3    65 	    3 keyto_keyset		bit (1) unal,	/* ON after keyto assignment done */
  3    66 	    3 pad11		bit (35) unal,
  3    67 	  2 keytemp		char (256) varying; /* used for key, keyto, and keyfrom */
  3    68 
  3    69 /* END INCLUDE FILE ... plio2_psr.incl.pl1 */
       54 
       55 						/* 	ENTRIES	 */
       56 
       57 s_:	entry(pspp,condition_name,msg,erno);
       58 	s = 1;
       59 	c,l,r = 0;
       60 	go to work;
       61 
       62 r_:	entry(pspp);
       63 	r = 1;
       64 	c,l,s = 0;
       65 	CN="";                                    /* bug 2197 */
       66 	go to work_1;
       67 
       68 s_r_:	entry(pspp,condition_name,msg,erno);
       69 	r,s = 1;
       70 	c,l = 0;
       71 	go to work;
       72 
       73 s_r_l_:	entry(pspp,condition_name,msg,erno,datafield);
       74 	s,r,l = 1;
       75 	c = 0;
       76 	go to work;
       77 
       78 s_l_:	entry(pspp,condition_name,msg,erno,datafield);
       79 	s,l = 1;
       80 	c,r = 0;
       81 	go to work;
       82 
       83 conversion_error_: entry(pspp,msg,erno,chp,n1,n2,n3);
       84 	c,s = 1;
       85 	l,r = 0;
       86 	CN="CONVERSION";
       87 	go to work_1;
       88 
       89 work:
       90 
       91 	CN=condition_name;
       92 work_1:
       93 	psp = pspp;
       94 	if CN = "UNDEFINEDFILE"
       95 	then plio2_data_$undef_file_sw = "1"b;
       96 	else plio2_data_$undef_file_sw = "0"b;
       97 
       98 	if psp^=null 
       99 	then do;
      100 		fsbp=ps.fsbp;
      101 		plio2_data_$badfsbp = ps.fsbp;
      102 		plio2_data_$badjob = string(psr.job);	/* MUST use psr.job, not ps.job, to get all 36 bits! */
      103 		end;
      104 	else goto work_2;
      105 
      106 	if CN = "UNDEFINEDFILE" then goto work_2;	/* ps.job is garbage if error was in plio2_open_ ! */
      107 
      108 
      109 	/* Here there may be materials which need to be "put":
      110*	   either the present contents of the output buffer for PUT
      111*	   or the current content of the COPY-STACK for GET/COPY  */
      112 
      113 	if ps.job.copy then
      114 		do;
      115 		call put_copy_(psp,fsb.bnc-1);
      116 		ps.start_copy=fsb.bnc;
      117 		end;
      118 
      119 	if ps.job.put then if ^ps.job.string then call plio2_put_util_$put_publish_(psp);
      120 
      121 work_2:
      122 	if s^=1 then go to return_test;
      123 	oncharind=0;
      124 	onsource="";
      125 
      126 
      127 	if psp^=null then file_ptr=ps.file_p;
      128 	else file_ptr=null;
      129 	if file_ptr^=null then
      130 		do;
      131 		fsbp=file_ptr->p2(2);
      132 		if CN = "ENDFILE"
      133 		|  CN = "TRANSMIT"
      134 		|  CN = "UNDEFINEDFILE"
      135 		|  CN = "KEY"
      136 		|  CN = "RECORD"
      137 		then;
      138 		else fsb.lnzc = 0;
      139 
      140 		if fsb.switch.record & fsb.switch.keyed then
      141 			do;
      142 			onsource=msg;
      143 			oncharind=-1;
      144 			end;
      145 		/* SEVERAL conditions will be accompanied with KEY */
      146 		end;
      147 
      148 
      149 	if CN = "CONVERSION"	then CN = "conversion";
      150   else	if CN = "SIZE"		then CN = "size";
      151   else	if CN = "ENDFILE"		then CN = "endfile";
      152   else	if CN = "ENDPAGE"		then CN = "endpage";
      153   else	if CN = "TRANSMIT"		then CN = "transmit";
      154   else	if CN = "UNDEFINEDFILE"	then CN = "undefinedfile";
      155   else	if CN = "NAME"		then CN = "name";
      156   else	if CN = "KEY"		then CN = "key";
      157   else	if CN = "RECORD"		then CN = "record";
      158   else	if CN = "ERROR"		then CN = "error";
      159   else	if CN = "OVERFLOW"		then CN = "overflow";
      160   else	if CN = "UNDERFLOW"		then CN = "underflow";
      161   else	if CN="MATH_ERROR"		then CN = "error";
      162   else	if CN="FIXEDOVERFLOW"	then CN = "fixedoverflow";
      163   else	if CN="ZERODIVIDE"		then CN = "zerodivide";
      164   else	if CN="STRINGRANGE"		then CN = "stringrange";
      165   else	if CN="STRINGSIZE"		then CN = "stringsize";
      166   else	if CN="SUBSCRIPTRANGE"	then CN = "subscriptrange";
      167 
      168 
      169 	if c = 1 then
      170 	do;
      171 	     if n1>n2|n3<n1|n3>n2 then
      172 		call plio2_signal_$s_r_(psp,"ERROR","CE",116);
      173 	     onsource = substr(chp->based_chars,n1,n2+1-n1);
      174 	     oncharind=n3-n1+1;
      175 	end;
      176 
      177 	if l = 1 then onsource = datafield;
      178 	call pl1_signal_$help_plio2_signal_((CN),pspp,erno,onsource,oncharind);
      179 	if c = 1 then substr(chp->based_chars,n1,n2+1-n1) = onsource;
      180 
      181 return_test: 
      182 	if r = 1 then go to addr(ps.ab_return)->based_label;     /* ABNORMAL RETURN */
      183 	return;
      184 
      185 end plio2_signal_;
	SOURCE FILES USED IN THIS COMPILATION.

LINE      NUMBER  DATE MODIFIED     NAME			PATHNAME
             0    04/18/00  1131.3  plio2_signal_.pl1                 >udd>sm>ds>w>ml>plio2_signal_.pl1
52           1    08/13/81  2143.5  plio2_fsb.incl.pl1                >ldd>incl>plio2_fsb.incl.pl1
53           2    08/13/81  2143.5  plio2_ps.incl.pl1                 >ldd>incl>plio2_ps.incl.pl1
54           3    08/13/81  2143.5  plio2_psr.incl.pl1                >ldd>incl>plio2_psr.incl.pl1
	NAMES DECLARED IN THIS COMPILATION.

IDENTIFIER	     OFFSET    LOC STORAGE CLASS   DATA TYPE		ATTRIBUTES AND REFERENCES
								(* indicates a set context)

NAMES DECLARED BY DECLARE STATEMENT.
CN                              000105 automatic       char(20)                 dcl 41 set ref 65* 86* 89* 94 106 132 132 132 132
                                                                                  132 149 149* 150 150* 151 151* 152 152* 153 153*
                                                                                  154 154* 155 155* 156 156* 157 157* 158 158* 159
                                                                                  159* 160 160* 161 161* 162 162* 163 163* 164 164*
                                                                                  165 165* 166 166* 178
ab_return                12            based           structure                level 2 dcl 2-10 set ref 181
addr                                                   builtin function         dcl 40 ref 181
based_chars                            based           char(1044480)            packed unaligned dcl 43 set ref 173 179*
based_label                            based           label variable           dcl 44 ref 181
bnc                      10            based           fixed bin(15,0)          level 2 dcl 1-4 ref 115 116
c                               000100 automatic       fixed bin(15,0)          dcl 35 set ref 59* 64* 70* 75* 80* 84* 169 179
chp                                    parameter       pointer                  dcl 42 ref 83 173 179
condition_name                         parameter       char                     packed unaligned dcl 46 ref 57 68 73 78 89
copy                     26(11)        based           bit(1)                   level 3 packed packed unaligned dcl 2-10 ref 113
datafield                              parameter       char                     packed unaligned dcl 46 ref 73 78 177
erno                                   parameter       fixed bin(15,0)          dcl 39 set ref 57 68 73 78 83 178*
file_p                   40            based           pointer                  level 2 dcl 2-10 ref 127
file_ptr                        000116 automatic       pointer                  dcl 42 set ref 127* 128* 129 131
fsb                                    based           structure                level 1 dcl 1-4
fsbp                     42            based           pointer                  level 2 in structure "ps" dcl 2-10 in procedure
                                                                                  "plio2_signal_" ref 100 101
fsbp                            000114 automatic       pointer                  dcl 42 in procedure "plio2_signal_" set ref 100* 115
                                                                                  116 131* 138 140 140
job                      26            based           structure                level 2 in structure "psr" dcl 3-5 in procedure
                                                                                  "plio2_signal_" ref 102
job                      26            based           structure                level 2 in structure "ps" dcl 2-10 in procedure
                                                                                  "plio2_signal_"
keyed                     0(17)        based           bit(1)                   level 3 packed packed unaligned dcl 1-4 ref 140
l                               000101 automatic       fixed bin(15,0)          dcl 36 set ref 59* 64* 70* 74* 79* 85* 177
lnzc                     17            based           fixed bin(35,0)          level 2 dcl 1-4 set ref 138*
msg                                    parameter       char                     packed unaligned dcl 46 ref 57 68 73 78 83 142
n1                                     parameter       fixed bin(15,0)          dcl 39 ref 83 171 171 173 173 174 179 179
n2                                     parameter       fixed bin(15,0)          dcl 39 ref 83 171 171 173 179
n3                                     parameter       fixed bin(15,0)          dcl 39 ref 83 171 171 174
null                                                   builtin function         dcl 40 ref 98 127 128 129
oncharind                       000104 automatic       fixed bin(15,0)          dcl 39 set ref 123* 143* 174* 178*
onsource                        000120 automatic       varying char(256)        dcl 45 set ref 124* 142* 173* 177* 178* 179
p2                                     based           pointer                  array dcl 42 ref 131
pl1_signal_$help_plio2_signal_  000016 constant        entry                    external dcl 50 ref 178
plio2_data_$badfsbp             000020 external static pointer                  dcl 2-82 set ref 101*
plio2_data_$badjob              000022 external static bit(36)                  dcl 2-94 set ref 102*
plio2_data_$undef_file_sw       000024 external static bit(1)                   dcl 2-94 set ref 94* 96*
plio2_put_util_$put_publish_    000012 constant        entry                    external dcl 48 ref 119
plio2_signal_$s_r_              000010 constant        entry                    external dcl 47 ref 171
ps                                     based           structure                level 1 dcl 2-10
psp                             000112 automatic       pointer                  dcl 42 set ref 92* 98 100 101 102 113 115* 116 119
                                                                                  119 119* 127 127 171* 181
pspp                                   parameter       pointer                  dcl 42 set ref 57 62 68 73 78 83 92 178*
psr                                    based           structure                level 1 dcl 3-5
put                      26(07)        based           bit(1)                   level 3 packed packed unaligned dcl 2-10 ref 119
put_copy_                       000014 constant        entry                    external dcl 49 ref 115
r                               000102 automatic       fixed bin(15,0)          dcl 37 set ref 59* 63* 69* 74* 80* 85* 181
record                    0(10)        based           bit(1)                   level 3 packed packed unaligned dcl 1-4 ref 140
s                               000103 automatic       fixed bin(15,0)          dcl 38 set ref 58* 64* 69* 74* 79* 84* 121
start_copy               55            based           fixed bin(15,0)          level 2 dcl 2-10 set ref 116*
string                                                 builtin function         dcl 40 in procedure "plio2_signal_" ref 102
string                   26(01)        based           bit(1)                   level 3 in structure "ps" packed packed unaligned
                                                                                  dcl 2-10 in procedure "plio2_signal_" ref 119
substr                                                 builtin function         dcl 40 set ref 173 179*
switch                                 based           structure                level 2 dcl 1-4

NAMES DECLARED BY DECLARE STATEMENT AND NEVER REFERENCED.
plio2_data_$fab2pstat                  external static pointer                  dcl 2-82
plio2_data_$fabpstat                   external static pointer                  dcl 2-82
plio2_data_$fsbpstat                   external static pointer                  dcl 2-82
plio2_data_$pliostringfsbp             external static pointer                  dcl 2-82
plio2_data_$pspstat                    external static pointer                  dcl 2-82
plio2_data_fsb_thread_                 external static pointer                  initial dcl 2-91
xbuf                                   based           char(1000)               packed unaligned dcl 1-80

NAMES DECLARED BY EXPLICIT CONTEXT.
conversion_error_               000375 constant        entry                    external dcl 83
plio2_signal_                   000142 constant        entry                    external dcl 22
r_                              000212 constant        entry                    external dcl 62
return_test                     001222 constant        label                    dcl 181 ref 121
s_                              000156 constant        entry                    external dcl 57
s_l_                            000331 constant        entry                    external dcl 78
s_r_                            000233 constant        entry                    external dcl 68
s_r_l_                          000271 constant        entry                    external dcl 73
work                            000424 constant        label                    dcl 89 ref 60 71 76 81
work_1                          000432 constant        label                    dcl 92 ref 66 87
work_2                          000525 constant        label                    dcl 121 ref 98 106

THERE WERE NO NAMES DECLARED BY CONTEXT OR IMPLICATION.

STORAGE REQUIREMENTS FOR THIS PROGRAM.

	Object	Text	Link	Symbol	Defs	Static
Start          0       0      1400        1426    1231        1410
Length      1656    1231        26         213     147           0

BLOCK NAME	         STACK SIZE     TYPE		WHY NONQUICK/WHO SHARES STACK FRAME
plio2_signal_                       204 external procedure  is an external procedure.  

STORAGE FOR AUTOMATIC VARIABLES.

STACK FRAME                 LOC IDENTIFIER                  BLOCK NAME
plio2_signal_            000100 c                           plio2_signal_
                         000101 l                           plio2_signal_
                         000102 r                           plio2_signal_
                         000103 s                           plio2_signal_
                         000104 oncharind                   plio2_signal_
                         000105 CN                          plio2_signal_
                         000112 psp                         plio2_signal_
                         000114 fsbp                        plio2_signal_
                         000116 file_ptr                    plio2_signal_
                         000120 onsource                    plio2_signal_

THE FOLLOWING EXTERNAL OPERATORS ARE USED BY THIS PROGRAM.
call_ext_out_desc   call_ext_out        return_mac          tra_ext_2           ext_entry           ext_entry_desc
set_support

THE FOLLOWING EXTERNAL ENTRIES ARE CALLED BY THIS PROGRAM.
pl1_signal_$help_plio2_signal_                              plio2_put_util_$put_publish_  plio2_signal_$s_r_
put_copy_

THE FOLLOWING EXTERNAL VARIABLES ARE USED BY THIS PROGRAM.
plio2_data_$badfsbp           plio2_data_$badjob            plio2_data_$undef_file_sw




   LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC   
     22 000141        57 000150        58 000201        59 000203        60 000206        62 000207        63 000220
     64 000222        65 000225        66 000230        68 000231        69 000256        70 000261        71 000263
     73 000264        74 000321        75 000325        76 000326        78 000327        79 000361        80 000364
     81 000366        83 000367        84 000413        85 000416        86 000420        87 000423        89 000424
     92 000432        94 000436        96 000446        98 000450       100 000454       101 000456       102 000457
    106 000461       113 000465       115 000470       116 000504       119 000510       121 000525       123 000530
    124 000531       127 000532       128 000542       129 000544       131 000550       132 000553       138 000600
    140 000601       142 000605       143 000621       149 000623       150 000633       151 000643       152 000653
    153 000663       154 000673       155 000703       156 000713       157 000723       158 000733       159 000743
    160 000753       161 000763       162 000773       163 001003       164 001013       165 001023       166 001033
    169 001042       171 001045       173 001111       174 001127       177 001133       178 001150       179 001204
    181 001222       183 001230


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
