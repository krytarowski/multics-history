	COMPILATION LISTING OF SEGMENT tut_window_
	Compiled by: Multics PL/I Compiler, Release 28d, of October 4, 1983
	Compiled at: Honeywell Multics Op. - System M
	Compiled on: 09/11/84  1052.3 mst Tue
	    Options: optimize map

        1 /* ***********************************************************
        2*   *                                                         *
        3*   * Copyright, (C) Honeywell Information Systems Inc., 1983 *
        4*   *                                                         *
        5*   *********************************************************** */
        6 
        7 /* format: style2 */
        8 
        9 /* Written by J. Siwila 3/30/83 */
       10 
       11 /* This procedure carves out the menu and io windows for the Tutorial. */
       12 
       13 tut_window_:
       14      proc (iocb_ptr, auto_window_info, new_height, change_origin, code);
       15 
       16 
       17 /* Automatic */
       18 
       19 	dcl     change_origin	 bit (1) aligned;
       20 	dcl     code		 fixed bin (35);
       21 	dcl     ME_TUT_WINDOW	 char (11) init ("tut_window_");
       22 	dcl     iocb_ptr		 ptr;
       23 	dcl     1 user_io_window_info	 like window_position_info;
       24 	dcl     1 auto_window_info	 like window_position_info;
       25 	dcl     new_height		 fixed bin;
       26 	dcl     new_origin		 fixed bin;
       27 	dcl     height_change	 fixed bin;
       28 
       29 /* Builtin */
       30 
       31 	dcl     addr		 builtin;
       32 
       33 /* Entries */
       34 
       35 	dcl     tut_quit_		 entry () options (variable);
       36 
       37 /* Static */
       38 
       39 	dcl     MIN_USER_IO_HEIGHT	 fixed bin static options (constant) init (5);
       40 	dcl     USER_IO		 char (8) static options (constant) init ("user_i/o");
       41 
       42 	auto_window_info.version = window_position_info_version_1;
       43 	call window_$clear_window (iocb_ptr, code);
       44 	if code ^= 0
       45 	then do;
       46 		call tut_quit_ (code, ME_TUT_WINDOW, "This ain't it.", iocb_ptr, auto_window_info);
       47 		return;
       48 	     end;
       49 
       50 	call iox_$control (iocb_ptr, "get_window_info", addr (auto_window_info), code);
       51 	if code ^= 0
       52 	then do;
       53 		call tut_quit_ (code, ME_TUT_WINDOW, "Can't get window info.", iocb_ptr, auto_window_info);
       54 		return;
       55 	     end;
       56 	height_change = new_height - auto_window_info.height;
       57 	if change_origin
       58 	then do;
       59 		if new_height < MIN_USER_IO_HEIGHT
       60 		then do;
       61 			call tut_quit_ (0, ME_TUT_WINDOW, "Window""user_i/o"" is too small.", iocb_ptr,
       62 			     auto_window_info);
       63 			return;
       64 		     end;
       65 		new_origin = auto_window_info.line - height_change;
       66 		auto_window_info.line = new_origin;
       67 	     end;
       68 	auto_window_info.height = new_height;
       69 	call iox_$control (iocb_ptr, "set_window_info", addr (auto_window_info), code);
       70 	if code ^= 0
       71 	then do;
       72 		call tut_quit_ (code, ME_TUT_WINDOW, "Unable to shrink window""user_i/o"".", iocb_ptr,
       73 		     auto_window_info);
       74 		return;
       75 	     end;
       76 
       77 
       78 
  1     1 /* --------------- BEGIN include file iox_dcls.incl.pl1 --------------- */
  1     2 
  1     3 /* Written 05/04/78 by C. D. Tavares */
  1     4 /* Fixed declaration of iox_$find_iocb_n 05/07/80 by R. Holmstedt */
  1     5 /* Modified 5/83 by S. Krupp to add declarations for:  iox_$open_file,
  1     6*     iox_$close_file, iox_$detach and iox_$attach_loud entries. */
  1     7 
  1     8 dcl  iox_$attach_name entry (char (*), pointer, char (*), pointer, fixed bin (35)),
  1     9      iox_$attach_ptr entry (pointer, char (*), pointer, fixed bin (35)),
  1    10      iox_$close entry (pointer, fixed bin (35)),
  1    11      iox_$control entry (pointer, char (*), pointer, fixed bin (35)),
  1    12      iox_$delete_record entry (pointer, fixed bin (35)),
  1    13      iox_$destroy_iocb entry (pointer, fixed bin (35)),
  1    14      iox_$detach_iocb entry (pointer, fixed bin (35)),
  1    15      iox_$err_not_attached entry options (variable),
  1    16      iox_$err_not_closed entry options (variable),
  1    17      iox_$err_no_operation entry options (variable),
  1    18      iox_$err_not_open entry options (variable),
  1    19      iox_$find_iocb entry (char (*), pointer, fixed bin (35)),
  1    20      iox_$find_iocb_n entry (fixed bin, ptr, fixed bin(35)),
  1    21      iox_$get_chars entry (pointer, pointer, fixed bin (21), fixed bin (21), fixed bin (35)),
  1    22      iox_$get_line entry (pointer, pointer, fixed bin (21), fixed bin (21), fixed bin (35)),
  1    23      iox_$look_iocb entry (char (*), pointer, fixed bin (35)),
  1    24      iox_$modes entry (pointer, char (*), char (*), fixed bin (35)),
  1    25      iox_$move_attach entry (pointer, pointer, fixed bin (35)),
  1    26      iox_$open entry (pointer, fixed bin, bit (1) aligned, fixed bin (35)),
  1    27      iox_$position entry (pointer, fixed bin, fixed bin (21), fixed bin (35)),
  1    28      iox_$propagate entry (pointer),
  1    29      iox_$put_chars entry (pointer, pointer, fixed bin (21), fixed bin (35)),
  1    30      iox_$read_key entry (pointer, char (256) varying, fixed bin (21), fixed bin (35)),
  1    31      iox_$read_length entry (pointer, fixed bin (21), fixed bin (35)),
  1    32      iox_$read_record entry (pointer, pointer, fixed bin (21), fixed bin (21), fixed bin (35)),
  1    33      iox_$rewrite_record entry (pointer, pointer, fixed bin (21), fixed bin (35)),
  1    34      iox_$seek_key entry (pointer, char (256) varying, fixed bin (21), fixed bin (35)),
  1    35      iox_$write_record entry (pointer, pointer, fixed bin (21), fixed bin (35)),
  1    36      iox_$open_file entry(ptr, fixed bin, char(*), bit(1) aligned, fixed bin(35)),
  1    37      iox_$close_file entry(ptr, char(*), fixed bin(35)),
  1    38      iox_$detach entry(ptr, char(*), fixed bin(35)),
  1    39      iox_$attach_loud entry(ptr, char(*), ptr, fixed bin(35));
  1    40 
  1    41 dcl (iox_$user_output,
  1    42      iox_$user_input,
  1    43      iox_$user_io,
  1    44      iox_$error_output) external static pointer;
  1    45 
  1    46 /* ---------------- END include file iox_dcls.incl.pl1 ---------------- */
       79 
       80 
  2     1 /* begin include fine window_dcls.incl.pl1 BIM June 1981 */
  2     2 /* Modified 9 October 1983 by Jon A. Rochlis to add window_$edit_line. */
  2     3 
  2     4 /* format: style3 */
  2     5 
  2     6 declare	window_$bell	entry (pointer, fixed binary (35));
  2     7 declare	window_$clear_region
  2     8 			entry (pointer, fixed binary, fixed binary, fixed binary, fixed binary, fixed binary (35));
  2     9 declare	window_$clear_to_end_of_line
  2    10 			entry (pointer, fixed binary (35));
  2    11 declare	window_$clear_to_end_of_window
  2    12 			entry (pointer, fixed binary (35));
  2    13 declare	window_$clear_window
  2    14 			entry (pointer, fixed binary (35));
  2    15 declare	window_$delete_chars
  2    16 			entry (pointer, fixed binary, fixed binary (35));
  2    17 declare	window_$get_cursor_position
  2    18 			entry (pointer, fixed binary, fixed binary, fixed binary (35));
  2    19 
  2    20 /* Call window_$get_echoed_chars (iocb_ptr, n_to_read, read_buffer, n_read, read_break, code); */
  2    21 
  2    22 declare	window_$get_echoed_chars
  2    23 			entry (pointer, fixed binary (21), character (*), fixed binary (21), character (1) var,
  2    24 			fixed binary (35));
  2    25 declare	window_$get_unechoed_chars
  2    26 			entry (pointer, fixed binary (21), character (*), fixed binary (21), character (1) var,
  2    27 			fixed binary (35));
  2    28 declare	window_$insert_text entry (pointer, character (*), fixed binary (35));
  2    29 declare	window_$overwrite_text
  2    30 			entry (pointer, character (*), fixed binary (35));
  2    31 declare	window_$position_cursor
  2    32 			entry (pointer, fixed binary, fixed binary, fixed binary (35));
  2    33 
  2    34 /* Call window_$position_cursor_rel (iocb_ptr, delta_line, delta_column, code); */
  2    35 
  2    36 declare	window_$position_cursor_rel
  2    37 			entry (pointer, fixed binary, fixed binary, fixed binary (35));
  2    38 
  2    39 /* Call window_$scroll_region (iocb_ptr, first_line_of_region, n_lines_of_region, distance_to_scroll_region_negative_is_up,
  2    40*        code); */
  2    41 
  2    42 declare	window_$scroll_region
  2    43 			entry (pointer, fixed binary, fixed binary, fixed binary, fixed binary (35));
  2    44 declare	window_$sync	entry (pointer, fixed binary (35));
  2    45 
  2    46 /* Call window_$write_raw_text (iocb_ptr, text_string, code); */
  2    47 
  2    48 declare	window_$write_raw_text
  2    49 			entry (pointer, character (*), fixed binary (35));
  2    50 
  2    51 /* Call window_$write_sync_read (iocb_ptr, prompt_string, n_to_read, read_buffer, n_read, break_char, code); */
  2    52 
  2    53 declare	window_$write_sync_read
  2    54 			entry (pointer, character (*), fixed bin (21), character (*), fixed binary (21),
  2    55 			character (1) var, fixed binary (35));
  2    56 
  2    57 /* Call window_$change_line (iocb_ptr, new_line, code); */
  2    58 
  2    59 declare	window_$change_line entry (pointer, fixed binary, fixed binary (35));
  2    60 
  2    61 /* Call window_$change_column (iocb_ptr, new_column, code); */
  2    62 
  2    63 declare	window_$change_column
  2    64 			entry (pointer, fixed binary, fixed binary (35));
  2    65 
  2    66 /* Call window_$get_one_unechoed (iocb_ptr, char_or_len_0, block_flag, code); */
  2    67 declare	(
  2    68 	window_$get_one_unechoed,
  2    69 	window_$get_one_unechoed_char
  2    70 	)		entry (pointer, character (1) var, bit (1) aligned, fixed binary (35));
  2    71 
  2    72 declare	window_$create	entry (pointer, pointer, pointer, fixed binary (35));
  2    73 
  2    74 declare	window_$destroy	entry (pointer, fixed binary (35));
  2    75 
  2    76 declare   window_$edit_line	entry (pointer, pointer, pointer, fixed bin(21), fixed bin(21), fixed bin(35));
  2    77 
  2    78 /* call window_$edit_line (iocb_ptr, window_edit_line_info_ptr, buffer_ptr,
  2    79*                           buffer_len, n_returned, code); */
  2    80 
  2    81 
  2    82 /* end include file window_dcls.incl.pl1 */
       81 
       82 
  3     1 /* BEGIN INCLUDE FILE ... window_control_info.incl.pl1 JRD  */
  3     2 /* format: style3 */
  3     3 
  3     4 /* Modified 26 January 1982 by William York to add the set_more_handler
  3     5*   and reset_more_handler control orders. */
  3     6 /* Modified October 1982 by WMY to add set and get_token_characters,
  3     7*   set and get_more_prompt. */
  3     8 /* Modified February 1983 by WMY to add the line_editor_key_binding_info
  3     9*   structure. */
  3    10 /* Modified 30 September 1983 by Jon A. Rochlis to add the origin.column for
  3    11*   partial screen width windows. */
  3    12 /* Modified 9 October 1983 by JR to add version 1 window_edit_line_info. 
  3    13*   This should be removed when window_info.incl.pl1 is created. */
  3    14 /* Modified 29 February 1984 by Barmar to add version 1 
  3    15*   get_editor_key_bindings_info. */
  3    16 /* Modified 1 March 1984 by Barmar to add version 1 
  3    17*   set_editor_key_bindings_info. */
  3    18 /* Modified 2 March 1984 by Barmar to upgrade to version 3
  3    19*   line_editor_key_bindings_info, which includes the name, description, and
  3    20*   info path */
  3    21 
  3    22 /* structure for the set_window_info and get_window_info
  3    23*   control orders. */
  3    24 
  3    25 dcl	1 window_position_info
  3    26 			based (window_position_info_ptr),
  3    27 	  2 version	fixed bin,
  3    28 	  2 origin,
  3    29 	    3 column	fixed bin,
  3    30 	    3 line	fixed bin,
  3    31 	  2 extent,
  3    32 	    3 width	fixed bin,
  3    33 	    3 height	fixed bin;
  3    34 
  3    35 dcl	(window_position_info_version, window_position_info_version_1)
  3    36 			fixed bin internal static init (1) options (constant);
  3    37 dcl	window_position_info_ptr
  3    38 			pointer;
  3    39 
  3    40 /* structure for the set_window_status and get_window_status
  3    41*   control orders */
  3    42 
  3    43 declare	window_status_info_ptr
  3    44 			pointer;
  3    45 declare	1 window_status_info
  3    46 			aligned based (window_status_info_ptr),
  3    47 	  2 version	fixed bin,
  3    48 	  2 status_string	bit (36) aligned;		/* string (window_status) */
  3    49 /* see window_status.incl.pl1 for the contents of this string */
  3    50 
  3    51 
  3    52 declare	(window_status_version, window_status_version_1)
  3    53 			fixed bin internal static init (1) options (constant);
  3    54 
  3    55 /* info structure for the set_more_responses and get_more_responses control 
  3    56*   orders */
  3    57 
  3    58 
  3    59 dcl	1 more_responses_info
  3    60 			aligned based (more_responses_info_ptr),
  3    61 	  2 version	fixed bin,
  3    62 	  2 n_yeses	fixed bin, /* how many valid characters in the strings below */
  3    63 	  2 n_noes	fixed bin,
  3    64 	  2 yeses		char (32) unaligned,
  3    65 	  2 noes		char (32) unaligned;
  3    66 
  3    67 dcl	(more_responses_info_version_1, more_responses_version)
  3    68 			fixed bin internal static init (1) options (constant);
  3    69 dcl	more_responses_info_ptr
  3    70 			pointer;
  3    71 
  3    72 /* structure for the set_break_table and get_break_table
  3    73*   control orders */
  3    74 
  3    75 declare	break_table_ptr	pointer;
  3    76 declare	1 break_table_info	aligned based (break_table_ptr),
  3    77 	  2 version	fixed bin,
  3    78 	  2 breaks	(0:127) bit (1) unaligned;
  3    79 
  3    80 declare	(break_table_info_version, break_table_info_version_1)
  3    81 			fixed bin init (1) internal static options (constant);
  3    82 
  3    83 declare	1 more_handler_info aligned based (more_handler_info_ptr),
  3    84 	  2 version	fixed bin,
  3    85 	  2 flags		unaligned,
  3    86 	    3 old_handler_valid
  3    87 			bit(1),
  3    88 	    3 pad		bit(35),
  3    89 	  2 more_handler	entry (pointer, bit(1) aligned),
  3    90 	  2 old_more_handler entry (pointer, bit(1) aligned);
  3    91 
  3    92 declare	more_handler_info_ptr pointer;
  3    93 
  3    94 declare	(more_handler_info_version, more_handler_info_version_3)
  3    95 			fixed bin internal static options (constant) init (3);
  3    96 			
  3    97 declare   1 token_characters_info aligned based (token_characters_info_ptr),
  3    98 	  2 version	char(8),
  3    99 	  2 token_character_count
  3   100 			fixed bin,
  3   101 	  2 token_characters
  3   102 			char (128) unaligned;
  3   103 
  3   104 declare   token_characters_info_ptr pointer;
  3   105 
  3   106 declare   token_characters_info_version_1 char(8) internal static options (constant) init ("wtci0001");
  3   107 
  3   108 declare   1 more_prompt_info	aligned based (more_prompt_info_ptr),
  3   109 	  2 version	char(8),
  3   110 	  2 more_prompt	char(80);
  3   111 
  3   112 declare   more_prompt_info_ptr pointer;
  3   113 
  3   114 declare   more_prompt_info_version_1 char(8) static options (constant) init ("wsmp0001");
  3   115 
  3   116 /* Line editor stuff ... */
  3   117 
  3   118 dcl  line_editor_key_binding_info_ptr
  3   119 			pointer;
  3   120 
  3   121 dcl  line_editor_binding_count
  3   122 			fixed bin;
  3   123 dcl  line_editor_longest_sequence
  3   124 			fixed bin;
  3   125 /* For each binding, action defines what to do for that sequence. Constants
  3   126*   are defined in window_editor_values.incl.pl1. Only if action is set to
  3   127*   EXTERNAL_ROUTINE does the editor_routine entry variable get examined. */
  3   128 
  3   129 dcl  1 line_editor_key_binding_info
  3   130 			aligned based (line_editor_key_binding_info_ptr),
  3   131        2 version		char(8),
  3   132        2 binding_count	fixed bin,
  3   133        2 longest_sequence	fixed bin,
  3   134        2 bindings		(line_editor_binding_count refer
  3   135 			(line_editor_key_binding_info.binding_count)),
  3   136          3 sequence		char(line_editor_longest_sequence refer
  3   137 			(line_editor_key_binding_info.longest_sequence)) varying,
  3   138          3 action		fixed bin,
  3   139          3 numarg_action      fixed binary,
  3   140          3 editor_routine	entry (pointer, fixed bin(35)),
  3   141          3 name		char (64) varying unaligned,
  3   142          3 description	char (256) varying unaligned,
  3   143          3 info_path	unaligned,
  3   144 	 4 info_dir	char (168),
  3   145 	 4 info_entry	char (32);
  3   146 	
  3   147 
  3   148 dcl  line_editor_key_binding_info_version_3
  3   149 			char(8) static options (constant) init ("lekbi003");
  3   150 
  3   151 dcl 1 get_editor_key_bindings_info	aligned based (get_editor_key_bindings_info_ptr),
  3   152       2 version			char (8),
  3   153       2 flags,
  3   154         3 entire_state		bit (1) unaligned,
  3   155         3 mbz			bit (35) unaligned,
  3   156       2 key_binding_info_ptr		ptr,
  3   157       2 entire_state_ptr		ptr;
  3   158 
  3   159 dcl get_editor_key_bindings_info_ptr	ptr;
  3   160 dcl get_editor_key_bindings_info_version_1 char (8) int static options (constant) init ("gekbi_01");
  3   161 
  3   162 dcl 1 set_editor_key_bindings_info	aligned
  3   163 				based (set_editor_key_bindings_info_ptr),
  3   164       2 version			char (8),
  3   165       2 flags,
  3   166         3 replace			bit (1) unaligned,
  3   167         3 update			bit (1) unaligned,
  3   168         3 mbz			bit (34) unaligned,
  3   169       2 key_binding_info_ptr		ptr;
  3   170 
  3   171 dcl set_editor_key_bindings_info_ptr	ptr;
  3   172 dcl set_editor_key_bindings_info_version_1 char (8) int static options (constant) init ("sekbi_01");
  3   173 
  3   174 /* This should be moved to window_info.incl.pl1 when that include file is
  3   175*   created.  JR 2/1/84 */
  3   176 
  3   177 dcl	1 window_edit_line_info
  3   178 			based (window_edit_line_info_ptr),
  3   179 	  2 version	char (8),
  3   180 	  2 line_ptr	ptr,
  3   181 	  2 line_length	fixed bin (21);		/* later we will hack initial cursor position, key bindings, etc. */
  3   182 
  3   183 dcl	window_edit_line_info_version_1
  3   184 			char (8) static options (constant) init ("wedl0001");
  3   185 
  3   186 dcl	window_edit_line_info_ptr
  3   187 			ptr;
  3   188 
  3   189 /* END INCLUDE FILE window_control_info.incl.pl1 */
       83 
       84 
  4     1 /* BEGIN INCLUDE FILE menu_dcls.incl.pl1
  4     2*   declarations for the menu_ subroutines MTB 493
  4     3*   James R. Davis 26 Jan 81  to 20 Februrary 81
  4     4**/
  4     5 
  4     6 /* format: off */
  4     7 
  4     8 dcl menu_$create      entry (
  4     9 	(*) char (*) varying,			/* input: choices */
  4    10 	(*) char (*) varying,			/* input: headers */
  4    11 	(*) char (*) varying,			/* input: trailers */
  4    12 	pointer,					/* input: to format info */
  4    13 	(*) char (1) unal,				/* input: keys to use */
  4    14 	pointer,					/* input: to area */
  4    15 	pointer,					/* input: to needs str. */
  4    16 	pointer,					/* to menu: output */
  4    17 	fixed bin (35)				/* code */
  4    18 			      );
  4    19 
  4    20 dcl menu_$display entry (
  4    21 	pointer,					/* window */
  4    22 	pointer,					/* menu */
  4    23 	fixed bin (35)				/* code */
  4    24 			      );
  4    25 
  4    26 dcl menu_$get_choice entry (
  4    27 	pointer,					/* window */
  4    28 	pointer,					/* menu */
  4    29 	pointer,					/* to function key info */
  4    30 	bit (1) aligned,				/* function key hi: output */
  4    31 	fixed bin,				/* output: selection number */
  4    32 	fixed bin (35)				/* output: code */
  4    33 			      );
  4    34 
  4    35 dcl menu_$describe entry (
  4    36           pointer,					/* menu */
  4    37 	pointer,					/* needs */
  4    38 	fixed bin (35)				/* code */
  4    39 	                          );
  4    40 
  4    41 dcl menu_$destroy entry (
  4    42           pointer,					/* menu */
  4    43 	fixed bin (35)				/* code */
  4    44                                     );
  4    45 
  4    46 dcl menu_$store entry (
  4    47 	character (*),
  4    48 	character (*),
  4    49 	character (*),
  4    50 	bit (1) aligned,
  4    51 	pointer,
  4    52 	fixed bin (35));
  4    53 
  4    54 dcl menu_$retrieve entry (
  4    55 	character (*),
  4    56 	character (*),
  4    57 	character (*),
  4    58 	pointer,
  4    59 	pointer,
  4    60 	fixed bin (35));
  4    61 dcl  menu_$delete entry (
  4    62 	character (*),
  4    63 	character (*),
  4    64 	character (*),
  4    65 	fixed binary (35));
  4    66 
  4    67 dcl  menu_$list entry (
  4    68 	character (*),
  4    69 	character (*),
  4    70 	character (*),
  4    71 	pointer,
  4    72 	fixed bin,
  4    73 	pointer,
  4    74 	fixed bin (35));
  4    75 
  4    76      dcl	   1 menu_format	      aligned based (menu_format_ptr),
  4    77 	     2 version	      fixed bin,
  4    78 	     2 constraints,
  4    79 	       3 max_width	      fixed bin,
  4    80 	       3 max_height	      fixed bin,
  4    81 	     2 n_columns	      fixed bin,
  4    82 	     2 flags,
  4    83 	       3 center_headers   bit (1) unal,
  4    84 	       3 center_trailers  bit (1) unal,
  4    85 	       3 pad	      bit (34) unal,
  4    86 	     2 pad_char	      char (1);
  4    87 
  4    88      dcl	   1 menu_requirements    aligned based (menu_requirements_ptr),
  4    89 	     2 version	      fixed bin,
  4    90 	     2 lines_needed	      fixed bin,
  4    91 	     2 width_needed	      fixed bin,
  4    92 	     2 n_options	      fixed bin;
  4    93 
  4    94      dcl	   menu_format_ptr	      pointer;
  4    95      dcl	   menu_requirements_ptr  pointer;
  4    96 
  4    97      dcl	   (menu_format_version_1, menu_requirements_version_1)
  4    98 			      fixed bin internal static init (1) options (constant);
  4    99 
  4   100      dcl	   MENU_OPTION_KEYS	      (35) char (1) unal internal static
  4   101 			      options (constant) init
  4   102 	("1", "2", "3", "4", "5", "6", "7", "8", "9",
  4   103 	"A", "B", "C", "D", "E", "F", "G", "H", "I",
  4   104 	"J", "K", "L", "M", "N", "O", "P", "Q", "R",
  4   105 	"S", "T", "U", "V", "W", "X", "Y", "Z");
  4   106 
  4   107 /* END INCLUDE FILE ... menu_dcls.incl.pl1 */
       85 
       86 
       87      end tut_window_;
	SOURCE FILES USED IN THIS COMPILATION.

LINE      NUMBER  DATE MODIFIED     NAME			PATHNAME
             0    09/10/84  1501.9  tut_window_.pl1                   >spec>on>09/04/84-6762>tut_window_.pl1
79           1    05/23/83  0916.6  iox_dcls.incl.pl1                 >ldd>include>iox_dcls.incl.pl1
81           2    09/04/84  1513.7  window_dcls.incl.pl1              >spec>on>09/04/84-6762>window_dcls.incl.pl1
83           3    09/04/84  1513.8  window_control_info.incl.pl1      >spec>on>09/04/84-6762>window_control_info.incl.pl1
85           4    03/27/82  0429.3  menu_dcls.incl.pl1                >ldd>include>menu_dcls.incl.pl1
	NAMES DECLARED IN THIS COMPILATION.

IDENTIFIER	     OFFSET    LOC STORAGE CLASS   DATA TYPE		ATTRIBUTES AND REFERENCES
								(* indicates a set context)

NAMES DECLARED BY DECLARE STATEMENT.
ME_TUT_WINDOW                   000100 automatic       char(11)                 initial unaligned dcl 21 set ref 21* 46* 53* 61* 72*
MIN_USER_IO_HEIGHT                     constant        fixed bin(17,0)          initial dcl 39 ref 59
addr                                                   builtin function         dcl 31 ref 50 50 69 69
auto_window_info                       parameter       structure                level 1 unaligned dcl 24 set ref 13 46* 50 50 53*
                                                                                  61* 69 69 72*
change_origin                          parameter       bit(1)                   dcl 19 ref 13 57
code                                   parameter       fixed bin(35,0)          dcl 20 set ref 13 43* 44 46* 50* 51 53* 69* 70 72*
extent                    3            parameter       structure                level 2 unaligned dcl 24
height                    4            parameter       fixed bin(17,0)          level 3 dcl 24 set ref 56 68*
height_change                   000104 automatic       fixed bin(17,0)          dcl 27 set ref 56* 65
iocb_ptr                               parameter       pointer                  dcl 22 set ref 13 43* 46* 50* 53* 61* 69* 72*
iox_$control                    000012 constant        entry                    external dcl 1-8 ref 50 69
line                      2            parameter       fixed bin(17,0)          level 3 dcl 24 set ref 65 66*
new_height                             parameter       fixed bin(17,0)          dcl 25 ref 13 56 59 68
new_origin                      000103 automatic       fixed bin(17,0)          dcl 26 set ref 65* 66
origin                    1            parameter       structure                level 2 unaligned dcl 24
tut_quit_                       000010 constant        entry                    external dcl 35 ref 46 53 61 72
version                                parameter       fixed bin(17,0)          level 2 dcl 24 set ref 42*
window_$clear_window            000014 constant        entry                    external dcl 2-13 ref 43
window_position_info                   based           structure                level 1 unaligned dcl 3-25
window_position_info_version_1         constant        fixed bin(17,0)          initial dcl 3-35 ref 42

NAMES DECLARED BY DECLARE STATEMENT AND NEVER REFERENCED.
MENU_OPTION_KEYS                       internal static char(1)                  initial array unaligned dcl 4-100
USER_IO                                internal static char(8)                  initial unaligned dcl 40
break_table_info                       based           structure                level 1 dcl 3-76
break_table_info_version               internal static fixed bin(17,0)          initial dcl 3-80
break_table_info_version_1             internal static fixed bin(17,0)          initial dcl 3-80
break_table_ptr                        automatic       pointer                  dcl 3-75
get_editor_key_bindings_info           based           structure                level 1 dcl 3-151
get_editor_key_bindings_info_ptr       automatic       pointer                  dcl 3-159
get_editor_key_bindings_info_version_1 internal static char(8)                  initial unaligned dcl 3-160
iox_$attach_loud                000000 constant        entry                    external dcl 1-8
iox_$attach_name                000000 constant        entry                    external dcl 1-8
iox_$attach_ptr                 000000 constant        entry                    external dcl 1-8
iox_$close                      000000 constant        entry                    external dcl 1-8
iox_$close_file                 000000 constant        entry                    external dcl 1-8
iox_$delete_record              000000 constant        entry                    external dcl 1-8
iox_$destroy_iocb               000000 constant        entry                    external dcl 1-8
iox_$detach                     000000 constant        entry                    external dcl 1-8
iox_$detach_iocb                000000 constant        entry                    external dcl 1-8
iox_$err_no_operation           000000 constant        entry                    external dcl 1-8
iox_$err_not_attached           000000 constant        entry                    external dcl 1-8
iox_$err_not_closed             000000 constant        entry                    external dcl 1-8
iox_$err_not_open               000000 constant        entry                    external dcl 1-8
iox_$error_output                      external static pointer                  dcl 1-41
iox_$find_iocb                  000000 constant        entry                    external dcl 1-8
iox_$find_iocb_n                000000 constant        entry                    external dcl 1-8
iox_$get_chars                  000000 constant        entry                    external dcl 1-8
iox_$get_line                   000000 constant        entry                    external dcl 1-8
iox_$look_iocb                  000000 constant        entry                    external dcl 1-8
iox_$modes                      000000 constant        entry                    external dcl 1-8
iox_$move_attach                000000 constant        entry                    external dcl 1-8
iox_$open                       000000 constant        entry                    external dcl 1-8
iox_$open_file                  000000 constant        entry                    external dcl 1-8
iox_$position                   000000 constant        entry                    external dcl 1-8
iox_$propagate                  000000 constant        entry                    external dcl 1-8
iox_$put_chars                  000000 constant        entry                    external dcl 1-8
iox_$read_key                   000000 constant        entry                    external dcl 1-8
iox_$read_length                000000 constant        entry                    external dcl 1-8
iox_$read_record                000000 constant        entry                    external dcl 1-8
iox_$rewrite_record             000000 constant        entry                    external dcl 1-8
iox_$seek_key                   000000 constant        entry                    external dcl 1-8
iox_$user_input                        external static pointer                  dcl 1-41
iox_$user_io                           external static pointer                  dcl 1-41
iox_$user_output                       external static pointer                  dcl 1-41
iox_$write_record               000000 constant        entry                    external dcl 1-8
line_editor_binding_count              automatic       fixed bin(17,0)          dcl 3-121
line_editor_key_binding_info           based           structure                level 1 dcl 3-129
line_editor_key_binding_info_ptr       automatic       pointer                  dcl 3-118
line_editor_key_binding_info_version_3 internal static char(8)                  initial unaligned dcl 3-148
line_editor_longest_sequence           automatic       fixed bin(17,0)          dcl 3-123
menu_$create                    000000 constant        entry                    external dcl 4-8
menu_$delete                    000000 constant        entry                    external dcl 4-61
menu_$describe                  000000 constant        entry                    external dcl 4-35
menu_$destroy                   000000 constant        entry                    external dcl 4-41
menu_$display                   000000 constant        entry                    external dcl 4-20
menu_$get_choice                000000 constant        entry                    external dcl 4-26
menu_$list                      000000 constant        entry                    external dcl 4-67
menu_$retrieve                  000000 constant        entry                    external dcl 4-54
menu_$store                     000000 constant        entry                    external dcl 4-46
menu_format                            based           structure                level 1 dcl 4-76
menu_format_ptr                        automatic       pointer                  dcl 4-94
menu_format_version_1                  internal static fixed bin(17,0)          initial dcl 4-97
menu_requirements                      based           structure                level 1 dcl 4-88
menu_requirements_ptr                  automatic       pointer                  dcl 4-95
menu_requirements_version_1            internal static fixed bin(17,0)          initial dcl 4-97
more_handler_info                      based           structure                level 1 dcl 3-83
more_handler_info_ptr                  automatic       pointer                  dcl 3-92
more_handler_info_version              internal static fixed bin(17,0)          initial dcl 3-94
more_handler_info_version_3            internal static fixed bin(17,0)          initial dcl 3-94
more_prompt_info                       based           structure                level 1 dcl 3-108
more_prompt_info_ptr                   automatic       pointer                  dcl 3-112
more_prompt_info_version_1             internal static char(8)                  initial unaligned dcl 3-114
more_responses_info                    based           structure                level 1 dcl 3-59
more_responses_info_ptr                automatic       pointer                  dcl 3-69
more_responses_info_version_1          internal static fixed bin(17,0)          initial dcl 3-67
more_responses_version                 internal static fixed bin(17,0)          initial dcl 3-67
set_editor_key_bindings_info           based           structure                level 1 dcl 3-162
set_editor_key_bindings_info_ptr       automatic       pointer                  dcl 3-171
set_editor_key_bindings_info_version_1 internal static char(8)                  initial unaligned dcl 3-172
token_characters_info                  based           structure                level 1 dcl 3-97
token_characters_info_ptr              automatic       pointer                  dcl 3-104
token_characters_info_version_1        internal static char(8)                  initial unaligned dcl 3-106
user_io_window_info                    automatic       structure                level 1 unaligned dcl 23
window_$bell                    000000 constant        entry                    external dcl 2-6
window_$change_column           000000 constant        entry                    external dcl 2-63
window_$change_line             000000 constant        entry                    external dcl 2-59
window_$clear_region            000000 constant        entry                    external dcl 2-7
window_$clear_to_end_of_line    000000 constant        entry                    external dcl 2-9
window_$clear_to_end_of_window  000000 constant        entry                    external dcl 2-11
window_$create                  000000 constant        entry                    external dcl 2-72
window_$delete_chars            000000 constant        entry                    external dcl 2-15
window_$destroy                 000000 constant        entry                    external dcl 2-74
window_$edit_line               000000 constant        entry                    external dcl 2-76
window_$get_cursor_position     000000 constant        entry                    external dcl 2-17
window_$get_echoed_chars        000000 constant        entry                    external dcl 2-22
window_$get_one_unechoed        000000 constant        entry                    external dcl 2-67
window_$get_one_unechoed_char   000000 constant        entry                    external dcl 2-67
window_$get_unechoed_chars      000000 constant        entry                    external dcl 2-25
window_$insert_text             000000 constant        entry                    external dcl 2-28
window_$overwrite_text          000000 constant        entry                    external dcl 2-29
window_$position_cursor         000000 constant        entry                    external dcl 2-31
window_$position_cursor_rel     000000 constant        entry                    external dcl 2-36
window_$scroll_region           000000 constant        entry                    external dcl 2-42
window_$sync                    000000 constant        entry                    external dcl 2-44
window_$write_raw_text          000000 constant        entry                    external dcl 2-48
window_$write_sync_read         000000 constant        entry                    external dcl 2-53
window_edit_line_info                  based           structure                level 1 unaligned dcl 3-177
window_edit_line_info_ptr              automatic       pointer                  dcl 3-186
window_edit_line_info_version_1        internal static char(8)                  initial unaligned dcl 3-183
window_position_info_ptr               automatic       pointer                  dcl 3-37
window_position_info_version           internal static fixed bin(17,0)          initial dcl 3-35
window_status_info                     based           structure                level 1 dcl 3-45
window_status_info_ptr                 automatic       pointer                  dcl 3-43
window_status_version                  internal static fixed bin(17,0)          initial dcl 3-52
window_status_version_1                internal static fixed bin(17,0)          initial dcl 3-52

NAME DECLARED BY EXPLICIT CONTEXT.
tut_window_                     000076 constant        entry                    external dcl 13

THERE WERE NO NAMES DECLARED BY CONTEXT OR IMPLICATION.

STORAGE REQUIREMENTS FOR THIS PROGRAM.

	Object	Text	Link	Symbol	Defs	Static
Start          0       0       504         522     432         514
Length       762     432        16         224      52           0

BLOCK NAME	         STACK SIZE     TYPE		WHY NONQUICK/WHO SHARES STACK FRAME
tut_window_                         122 external procedure  is an external procedure.  

STORAGE FOR AUTOMATIC VARIABLES.

STACK FRAME                 LOC IDENTIFIER                  BLOCK NAME
tut_window_              000100 ME_TUT_WINDOW               tut_window_
                         000103 new_origin                  tut_window_
                         000104 height_change               tut_window_

THE FOLLOWING EXTERNAL OPERATORS ARE USED BY THIS PROGRAM.
call_ext_out_desc   call_ext_out        return              ext_entry

THE FOLLOWING EXTERNAL ENTRIES ARE CALLED BY THIS PROGRAM.
iox_$control                  tut_quit_                     window_$clear_window

NO EXTERNAL VARIABLES ARE USED BY THIS PROGRAM.




   LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC   
     13 000071        21 000103        42 000110        43 000113        44 000123        46 000126        47 000163
     50 000164        51 000216        53 000221        54 000260        56 000261        57 000265        59 000270
     61 000273        63 000330        65 000331        66 000334        68 000335        69 000337        70 000371
     72 000374        74 000430        87 000431


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
