	COMPILATION LISTING OF SEGMENT dsinh_
	Compiled by: Multics PL/I Compiler, Release 28d, of September 14, 1983
	Compiled at: Honeywell LCPD Phoenix, System M
	Compiled on: 10/03/83  1401.7 mst Mon
	    Options: optimize map

        1 /* ******************************************************
        2*   *                                                    *
        3*   *                                                    *
        4*   * Copyright (c) 1972 by Massachusetts Institute of   *
        5*   * Technology and Honeywell Information Systems, Inc. *
        6*   *                                                    *
        7*   *                                                    *
        8*   ****************************************************** */
        9 
       10 dsinh_: procedure (number) returns (float binary (63));
       11 
       12 /*      compute the hyperbolic sine or cosine of a double-precision floating-point number      */
       13 declare (number, b, n, p, r) float binary (63),
       14 	(abs, exp) builtin;
       15 dcl  code_ ext entry (fixed bin);
       16 	n = number;
       17 	r = abs (n);
       18 if r >= 0.7135236e0 then large: do;
       19 	     p = -1.e0;
       20 	     go to sinhs;
       21 	end large;
       22 	if r < 1.e-10 then go to negate;
       23 	b = r*r;
       24 	r = ((((((((0.2811457254345520763e-14 * b + 0.7647163731819816476e-12) * b + 0.1605904383682161460e-9) * b
       25 	+ 0.2505210838544171878e-7) * b + 0.2755731922398589065e-5) * b + 0.1984126984126984127e-3) * b
       26 	+ 0.8333333333333333333e-2) * b + 0.1666666666666666667e0) * b + 1.e0) * n;
       27 	go to finis;
       28 dcosh_: entry (number) returns (float binary (63));
       29 	n, r = abs (number);
       30 	p = 1.e0;
       31 sinhs: if r > 88.028e0 then err: do;
       32 	     call code_ (50);
       33 	     r = 170141182.e30;
       34 	     go to negate;
       35 	end err;
       36 	r = exp (r);
       37 	r = (p/r + r) * 0.5e0;
       38 negate:	if n < 0.0e0 then r = -r;
       39 finis:	return (r);
       40      end dsinh_;
	SOURCE FILES USED IN THIS COMPILATION.

LINE      NUMBER  DATE MODIFIED     NAME			PATHNAME
             0    10/03/83  1005.0  dsinh_.pl1                        >spec>on>pl128d>dsinh_.pl1
	NAMES DECLARED IN THIS COMPILATION.

IDENTIFIER	     OFFSET    LOC STORAGE CLASS   DATA TYPE		ATTRIBUTES AND REFERENCES
								(* indicates a set context)

NAMES DECLARED BY DECLARE STATEMENT.
abs                                                    builtin function         dcl 13 ref 17 29
b                               000100 automatic       float bin(63)            dcl 13 set ref 23* 24 24 24 24 24 24 24 24
code_                           000010 constant        entry                    external dcl 15 ref 32
exp                                                    builtin function         dcl 13 ref 36
n                               000102 automatic       float bin(63)            dcl 13 set ref 16* 17 24 29* 38
number                                 parameter       float bin(63)            dcl 13 ref 10 16 28 29
p                               000104 automatic       float bin(63)            dcl 13 set ref 19* 30* 37
r                               000106 automatic       float bin(63)            dcl 13 set ref 17* 18 22 23 23 24* 29* 31 33* 36* 36
                                                                                  37* 37 37 38* 38 39

NAMES DECLARED BY EXPLICIT CONTEXT.
dcosh_                          000112 constant        entry                    external dcl 28
dsinh_                          000036 constant        entry                    external dcl 10
err                             000132 constant        label                    dcl 31
finis                           000163 constant        label                    dcl 39 ref 27
large                           000054 constant        label                    dcl 18
negate                          000156 constant        label                    dcl 38 ref 22 34
sinhs                           000127 constant        label                    dcl 31 ref 20

THERE WERE NO NAMES DECLARED BY CONTEXT OR IMPLICATION.

STORAGE REQUIREMENTS FOR THIS PROGRAM.

	Object	Text	Link	Symbol	Defs	Static
Start          0       0       224         236     167         234
Length       400     167        12         125      35           0

BLOCK NAME	         STACK SIZE     TYPE		WHY NONQUICK/WHO SHARES STACK FRAME
dsinh_                              110 external procedure  is an external procedure.  

STORAGE FOR AUTOMATIC VARIABLES.

STACK FRAME                 LOC IDENTIFIER                  BLOCK NAME
dsinh_                   000100 b                           dsinh_
                         000102 n                           dsinh_
                         000104 p                           dsinh_
                         000106 r                           dsinh_

THE FOLLOWING EXTERNAL OPERATORS ARE USED BY THIS PROGRAM.
call_ext_out        return              ext_entry           dexp

THE FOLLOWING EXTERNAL ENTRIES ARE CALLED BY THIS PROGRAM.
code_

NO EXTERNAL VARIABLES ARE USED BY THIS PROGRAM.




   LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC   
     10 000032        16 000043        17 000046        18 000051        19 000054        20 000056        22 000057
     23 000062        24 000065        27 000107        28 000110        29 000117        30 000125        31 000127
     32 000132        33 000143        34 000145        36 000146        37 000152        38 000156        39 000163


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
