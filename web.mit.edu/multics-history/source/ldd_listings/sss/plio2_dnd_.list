	COMPILATION LISTING OF SEGMENT plio2_dnd_
	Compiled by: Multics PL/I Compiler, Release 31a, of October 12, 1988
	Compiled at: Honeywell Bull, Phoenix AZ, SysM
	Compiled on: 10/24/88  1531.9 mst Mon
	    Options: optimize map

        1 /* ******************************************************
        2*   *                                                    *
        3*   *                                                    *
        4*   * Copyright (c) 1972 by Massachusetts Institute of   *
        5*   * Technology and Honeywell Information Systems, Inc. *
        6*   *                                                    *
        7*   *                                                    *
        8*   ****************************************************** */
        9 
       10 /*	Modified: 05/01/78 by PCK to implement unsigned binary
       11*	Modified: 9 August 1978 by PCK to fix 1768
       12*	Modified: 25 Apr 1979 by PCK to implement 4-bit decimal */
       13 
       14 dnd:proc(d,p,code) options(support);
       15 	dcl d bit(36) aligned, p ptr, code fixed bin(15);
       16 	/* d is descriptor, p points at D_structure (see below), and code=1 for failure */
       17 
       18 /* updated 5-4-71 */
       19 
       20 	dcl 1 D aligned based(q),	/* this is the D_STRUCTURE ! ! !  */
       21 		2 type5 aligned,
       22 			3 ( cr,bd,ff,ls,pack) char(1) unaligned,
       23 		2 ( precx,
       24 		    scalex,
       25 		    bit_lengthx,
       26 		    typex ) fixed bin(15);
       27 
       28 
       29 
       30 
       31 	dcl ( prec, scale,  bit_length,type ) fixed bin(15);
       32 	dcl q ptr;
       33 dcl (addr, string, substr) builtin;
       34 	dcl WS fixed bin(15);
       35 
       36 	dcl fixed builtin;
  1     1 /* plio2_descriptor_forms */
  1     2 
  1     3 dcl types_table(12) char(4) aligned internal static options(constant) init(
  1     4 /* cr-bd-ff-ls  */
  1     5 
  1     6 /*		NEW DESC		OLD DESC		*/
  1     7 	"rbis",	/* 404 */		/* 00001 */
  1     8 	"rbil",	/* 410 */		/* 00002 */
  1     9 	"rbls",	/* 414 */		/* 00003 */
  1    10 	"rbll",	/* 420 */		/* 00004 */
  1    11 	"cbis",	/* 424 */		/* 00005 */
  1    12 	"cbil",	/* 430 */		/* 00006 */
  1    13 	"cbls",	/* 434 */		/* 00007 */
  1    14 	"cbll",	/* 440 */		/* 00010 */
  1    15 		/* the first 8 agree with old descriptors */
  1    16 	"rdix",	/* 444 */
  1    17 	"rdlx",	/* 450 */
  1    18 	"cdix",	/* 454 */
  1    19 	"cdlx"  	/* 460 */		);
  1    20 
  1    21 
  1    22 	dcl desc_ptr  ptr;
  1    23 
  1    24 
  1    25 dcl  1  old_desc aligned based(desc_ptr),
  1    26 	2 ( od_type bit(15),
  1    27 	    od_junk bit(3),
  1    28 	    od_deci bit(1),
  1    29 	    od_scale bit(8),
  1    30 	    od_prec bit(9) ) unaligned;
  1    31 
  1    32 dcl  1  new_desc aligned based(desc_ptr),
  1    33 	2 ( nd_first bit(1),
  1    34 	    nd_type  bit(6),
  1    35 	    nd_pack  bit(1),
  1    36 	    nd_ndims bit(4),
  1    37 	    nd_scale bit(12),
  1    38 	    nd_prec  bit(12)  )  unaligned;
  1    39 
  2     1 /* begin plio2_unpack  */
  2     2 
  2     3 
  2     4 	dcl mfix fixed bin(35);
  2     5 	dcl mflo float bin(63);
  2     6 
  2     7 	dcl 1 unpack6 aligned based(addr(mfix)),
  2     8 		2 xxx bit(30) unal,
  2     9 		2 m_6 bit(6)  unal;
  2    10 
  2    11 	dcl 1 unpack12 aligned based(addr(mfix)),
  2    12 		2 xxxx bit(24) unal,
  2    13 		2 m_12 bit(12) unal;
  2    14 
  2    15 	dcl 1 unpack15 aligned based(addr(mfix)),
  2    16 		2 xxxx bit(21) unal,
  2    17 		2 m_15 bit(15) unal;
  2    18 
  2    19 	dcl 1 unpackexp aligned based(addr(mflo)),
  2    20 		2 mexp bit(8) unal;
  2    21 
  2    22 	dcl 1 unpack8 aligned based(addr(mfix)),
  2    23 		2 xxx bit(28) unal,
  2    24 		2 m_8 bit(8)  unal;
  2    25 
  2    26 	dcl offset fixed bin(15);
  2    27 
  2    28 	dcl 1 bitbuff unal based,
  2    29 		2 xxx bit(offset),
  2    30 		2 next_bit bit(1);
  2    31 
  2    32 	dcl 1 charbuff unal based,
  2    33 		2 xxx char(offset),
  2    34 		2 next_char char(1);
  2    35 
  2    36 
  2    37 
  2    38 
  2    39 	dcl 1 unpack30 aligned based(addr(mfix)),
  2    40 		2 top_6 bit(6) unal,
  2    41 		2 m_30  bit(30) unal;
  2    42 
  2    43 	dcl based_char5 char(5) aligned based;
  2    44 
  2    45 	dcl dec_array(0:65) char(1) unal based;
  2    46 	dcl based_chars char(1000) unal based;
  2    47 	dcl based_bits bit(1000) unal based;
  2    48 
  2    49 	dcl 1 getlastchar aligned based,
  2    50 		2 xx char(3) unal,
  2    51 		2 last_char char(1) unal;
  2    52 
  2    53 
  2    54 
  2    55 /* end of plio2_unpack  */
  1    40 
  1    41 
  1    42 /* end of plio2_descriptor_forms  */
       37 
  3     1 /* BEGIN INCLUDE FILE ... std_descriptor_types.incl.pl1 */
  3     2 
  3     3 
  3     4 /****^  HISTORY COMMENTS:
  3     5*  1) change(86-09-05,JMAthane), approve(86-09-05,MCR7525),
  3     6*     audit(86-09-11,Martinson), install(86-11-12,MR12.0-1208):
  3     7*     Added pascal_string_type_dtype descriptor type.  Its number is 87.
  3     8*     Objects of this type are PASCAL string types.
  3     9*  2) change(88-09-20,WAAnderson), approve(88-09-20,MCR7952),
  3    10*     audit(88-09-30,JRGray), install(88-10-24,MR12.2-1184):
  3    11*     Added the new C types.
  3    12*                                                   END HISTORY COMMENTS */
  3    13 
  3    14 /* This include file defines mnemonic names for the Multics
  3    15*   standard descriptor types, using both pl1 and cobol terminology.
  3    16*   PG 780613
  3    17*   JRD 790530
  3    18*   JRD 791016
  3    19*   MBW 810731
  3    20*   TGO 830614 Add hex types.
  3    21*   Modified June 83 JMAthane to add PASCAL data types
  3    22*   TGO 840120 Add float dec extended and generic, float binary generic
  3    23**/
  3    24 
  3    25      dcl	   (real_fix_bin_1_dtype  init (1),
  3    26 	   real_fix_bin_2_dtype   init (2),
  3    27 	   real_flt_bin_1_dtype   init (3),
  3    28 	   real_flt_bin_2_dtype   init (4),
  3    29 	   cplx_fix_bin_1_dtype   init (5),
  3    30 	   cplx_fix_bin_2_dtype   init (6),
  3    31 	   cplx_flt_bin_1_dtype   init (7),
  3    32 	   cplx_flt_bin_2_dtype   init (8),
  3    33 	   real_fix_dec_9bit_ls_dtype init (9),
  3    34 	   real_flt_dec_9bit_dtype init (10),
  3    35 	   cplx_fix_dec_9bit_ls_dtype init (11),
  3    36 	   cplx_flt_dec_9bit_dtype init (12),
  3    37 	   pointer_dtype	      init (13),
  3    38 	   offset_dtype	      init (14),
  3    39 	   label_dtype	      init (15),
  3    40 	   entry_dtype	      init (16),
  3    41 	   structure_dtype	      init (17),
  3    42 	   area_dtype	      init (18),
  3    43 	   bit_dtype	      init (19),
  3    44 	   varying_bit_dtype      init (20),
  3    45 	   char_dtype	      init (21),
  3    46 	   varying_char_dtype     init (22),
  3    47 	   file_dtype	      init (23),
  3    48 	   real_fix_dec_9bit_ls_overp_dtype init (29),
  3    49 	   real_fix_dec_9bit_ts_overp_dtype init (30),
  3    50 	   real_fix_bin_1_uns_dtype init (33),
  3    51 	   real_fix_bin_2_uns_dtype init (34),
  3    52 	   real_fix_dec_9bit_uns_dtype init (35),
  3    53 	   real_fix_dec_9bit_ts_dtype init (36),
  3    54 	   real_fix_dec_4bit_uns_dtype init (38),	/* digit-aligned */
  3    55 	   real_fix_dec_4bit_ts_dtype init (39),	/* byte-aligned */
  3    56 	   real_fix_dec_4bit_bytealigned_uns_dtype init (40), /* COBOL */
  3    57 	   real_fix_dec_4bit_ls_dtype init (41),	/* digit-aligned */
  3    58 	   real_flt_dec_4bit_dtype init (42),		/* digit-aligned */
  3    59 	   real_fix_dec_4bit_bytealigned_ls_dtype init (43),
  3    60 	   real_flt_dec_4bit_bytealigned_dtype init (44),
  3    61 	   cplx_fix_dec_4bit_bytealigned_ls_dtype init (45),
  3    62 	   cplx_flt_dec_4bit_bytealigned_dtype init (46),
  3    63 	   real_flt_hex_1_dtype   init (47),
  3    64 	   real_flt_hex_2_dtype   init (48),
  3    65 	   cplx_flt_hex_1_dtype   init (49),
  3    66 	   cplx_flt_hex_2_dtype   init (50),
  3    67 	   c_typeref_dtype        init (54),
  3    68 	   c_enum_dtype           init (55),
  3    69              c_enum_const_dtype     init (56),
  3    70 	   c_union_dtype          init (57),
  3    71 	   algol68_straight_dtype init (59),
  3    72 	   algol68_format_dtype   init (60),
  3    73 	   algol68_array_descriptor_dtype init (61),
  3    74 	   algol68_union_dtype    init (62),
  3    75 
  3    76 	   cobol_comp_6_dtype     init (1),
  3    77 	   cobol_comp_7_dtype     init (1),
  3    78 	   cobol_display_ls_dtype init (9),
  3    79 	   cobol_structure_dtype  init (17),
  3    80 	   cobol_char_string_dtype init (21),
  3    81 	   cobol_display_ls_overp_dtype init (29),
  3    82 	   cobol_display_ts_overp_dtype init (30),
  3    83 	   cobol_display_uns_dtype init (35),
  3    84 	   cobol_display_ts_dtype init (36),
  3    85 	   cobol_comp_8_uns_dtype init (38),		/* digit aligned */
  3    86 	   cobol_comp_5_ts_dtype  init (39),		/* byte aligned */
  3    87 	   cobol_comp_5_uns_dtype init (40),
  3    88 	   cobol_comp_8_ls_dtype  init (41),		/* digit aligned */
  3    89 	   real_flt_dec_extended_dtype init (81),	/* 9-bit exponent */
  3    90 	   cplx_flt_dec_extended_dtype init (82),	/* 9-bit exponent */
  3    91 	   real_flt_dec_generic_dtype init (83),	/* generic float decimal */
  3    92 	   cplx_flt_dec_generic_dtype init (84),
  3    93 	   real_flt_bin_generic_dtype init (85),	/* generic float binary */
  3    94 	   cplx_flt_bin_generic_dtype init (86)) fixed bin internal static options (constant);
  3    95 
  3    96      dcl	   (ft_integer_dtype      init (1),
  3    97 	   ft_real_dtype	      init (3),
  3    98 	   ft_double_dtype	      init (4),
  3    99 	   ft_complex_dtype	      init (7),
  3   100 	   ft_complex_double_dtype init (8),
  3   101 	   ft_external_dtype      init (16),
  3   102 	   ft_logical_dtype	      init (19),
  3   103 	   ft_char_dtype	      init (21),
  3   104 	   ft_hex_real_dtype      init (47),
  3   105 	   ft_hex_double_dtype    init (48),
  3   106 	   ft_hex_complex_dtype   init (49),
  3   107 	   ft_hex_complex_double_dtype init (50)
  3   108 	   )		      fixed bin internal static options (constant);
  3   109 
  3   110      dcl	   (algol68_short_int_dtype init (1),
  3   111 	   algol68_int_dtype      init (1),
  3   112 	   algol68_long_int_dtype init (2),
  3   113 	   algol68_real_dtype     init (3),
  3   114 	   algol68_long_real_dtype init (4),
  3   115 	   algol68_compl_dtype    init (7),
  3   116 	   algol68_long_compl_dtype init (8),
  3   117 	   algol68_bits_dtype     init (19),
  3   118 	   algol68_bool_dtype     init (19),
  3   119 	   algol68_char_dtype     init (21),
  3   120 	   algol68_byte_dtype     init (21),
  3   121 	   algol68_struct_struct_char_dtype init (22),
  3   122 	   algol68_struct_struct_bool_dtype init (20)
  3   123 	   )		      fixed bin internal static options (constant);
  3   124 
  3   125      dcl	   (label_constant_runtime_dtype init (24),
  3   126 	   int_entry_runtime_dtype init (25),
  3   127 	   ext_entry_runtime_dtype init (26),
  3   128 	   ext_procedure_runtime_dtype init (27),
  3   129 	   picture_runtime_dtype  init (63)
  3   130 	   )		      fixed bin internal static options (constant);
  3   131 
  3   132      dcl	   (pascal_integer_dtype  init (1),
  3   133 	   pascal_real_dtype      init (4),
  3   134 	   pascal_label_dtype     init (24),
  3   135 	   pascal_internal_procedure_dtype init (25),
  3   136 	   pascal_exportable_procedure_dtype init (26),
  3   137 	   pascal_imported_procedure_dtype init (27),
  3   138 	   pascal_typed_pointer_type_dtype init (64),
  3   139 	   pascal_char_dtype      init (65),
  3   140 	   pascal_boolean_dtype   init (66),
  3   141 	   pascal_record_file_type_dtype init (67),
  3   142 	   pascal_record_type_dtype init (68),
  3   143 	   pascal_set_dtype	      init (69),
  3   144 	   pascal_enumerated_type_dtype init (70),
  3   145 	   pascal_enumerated_type_element_dtype init (71),
  3   146 	   pascal_enumerated_type_instance_dtype init (72),
  3   147 	   pascal_user_defined_type_dtype init (73),
  3   148 	   pascal_user_defined_type_instance_dtype init (74),
  3   149 	   pascal_text_file_dtype init (75),
  3   150 	   pascal_procedure_type_dtype init (76),
  3   151 	   pascal_variable_formal_parameter_dtype init (77),
  3   152 	   pascal_value_formal_parameter_dtype init (78),
  3   153 	   pascal_entry_formal_parameter_dtype init (79),
  3   154 	   pascal_parameter_procedure_dtype init (80),
  3   155 	   pascal_string_type_dtype init (87)) fixed bin int static options (constant);
  3   156 
  3   157 
  3   158 /* END INCLUDE FILE ... std_descriptor_types.incl.pl1 */
       38 
       39 
       40 	/* 	START */
       41 	WS=0;
       42 common:
       43 
       44 	q=p;
       45 	desc_ptr=addr(d);
       46 	code=0;
       47 
       48 
       49 
       50 	if nd_first then
       51 		do;
       52 		type=fixed(nd_type,6,0);
       53 		if type=0 then go to bad_type;
       54 		if type > cplx_flt_dec_9bit_dtype & type < real_fix_dec_9bit_ls_overp_dtype then		/* if not an arithmetic data type then */
       55 			do;
       56 			if WS=0 then go to bad_type;
       57 			if type < bit_dtype | type > varying_char_dtype then go to bad_type;	/* if not a string data type then */
       58 			addr(D.type5)->based_char5=string_types(type - bit_dtype + 1);
       59 			D.precx=fixed(substr(desc_ptr->based_bits,13,24),24,0);
       60 			go to string_exit;
       61 			end;
       62 
       63 		if type <= cplx_flt_dec_9bit_dtype
       64 		then addr(D.type5)->based_char5=types_table(type)||" ";
       65 		else if type<=real_fix_bin_2_uns_dtype
       66 		     then addr(D.type5)->based_char5=types_table(type - real_fix_bin_1_uns_dtype + real_fix_bin_1_dtype) || " ";
       67 		     else addr(D.type5)->based_char5=types_table(type - real_fix_dec_4bit_bytealigned_ls_dtype + real_fix_dec_9bit_ls_dtype) || " ";
       68 
       69 		prec=fixed(nd_prec,12,0);
       70 
       71 		scale=fixed(nd_scale,12,0);
       72 		if scale>100000000000b then  scale=scale - 1000000000000b;
       73 
       74 		if nd_pack then D.type5.pack="p";
       75 
       76 		if D.type5.bd="d" then
       77 			do;
       78 			if D.type5.ff="l" then bit_length=prec+2;
       79 			else bit_length=prec+1;
       80 
       81 			if type <= cplx_flt_dec_9bit_dtype
       82 			then bit_length=bit_length*9;	/* chars are 9 bits */
       83 			else bit_length=(bit_length+mod(bit_length,2))*4.5; /* 2 digits per character */
       84 			end;
       85 		else	do;
       86 			if nd_pack then
       87 				do;
       88 				if D.type5.ff="l" then bit_length=prec+9;
       89 				else if type <= real_fix_bin_2_dtype
       90 				     then bit_length = prec + 1;
       91 				     else bit_length = prec;
       92 				end;
       93 			else go to unpacked_binary;
       94 			end;
       95 		end;
       96 
       97 	else	do;
       98 		type=fixed(od_type,15,0);
       99 		if type=0
      100 		then	do;
      101 				/* descriptor="0"b is the signal for a pictured item */
      102 			string (D.type5) = "p    ";
      103 			return;
      104 			end;
      105 		if type>8 then
      106 			do;
      107 			if WS=0 then go to bad_type;
      108 			if type>522|type<519 then go to bad_type;
      109 			addr(D.type5)->based_char5=string_types(type-514);
      110 			D.precx=fixed(substr(desc_ptr->based_bits,19,18),18,0);
      111 string_exit:
      112 			if D.bd="b" then D.bit_lengthx=D.precx;
      113 			else D.bit_lengthx=9*D.precx;
      114 			return;
      115 			end;
      116 
      117 		prec=fixed(od_prec,9,0);
      118 
      119 		scale=fixed(od_scale,8,0);
      120 		if scale>10000000b then scale=scale-100000000b;
      121 
      122 		addr(D.type5)->based_char5=types_table(type)||" ";
      123 
      124 unpacked_binary:
      125 		if D.type5.ls="l" then bit_length=72;
      126 		else bit_length=36;
      127 		end;
      128 
      129 
      130 	if prec>63 then
      131 		do;
      132 		if D.type5.bd="d" then goto bad_prec;
      133 		if D.type5.ff="l" then goto bad_prec;
      134 		if prec>71 then goto bad_prec;
      135 		end;
      136 	D.precx=prec;
      137 
      138 
      139 	if scale>127 then goto bad_scale;
      140 	if scale<-128 then goto bad_scale;
      141 	D.scalex=scale;
      142 
      143 	D.typex=type;
      144 	D.bit_lengthx=bit_length;
      145 
      146 	return;
      147 
      148 bad_prec:
      149 bad_scale:
      150 bad_type:
      151 	code=1;
      152 	return;
      153 
      154 with_strings:entry(d,p,code);
      155 	WS=1;
      156 	go to common;
      157 
      158 	dcl string_types(8) char(4) static internal init(
      159 		"sb n", /*	514	*/
      160 		"sbvn", /*	520	*/
      161 		"sc n", /*	524	*/
      162 		"scvn", /*	530	*/
      163 		"sb o", /*	01007	*/
      164 		"sc o", /*	01010	*/
      165 		"sbvo", /*	01011	*/
      166 		"scvo"	 /*	01012	*/	);
      167 
      168 
      169 end;
	SOURCE FILES USED IN THIS COMPILATION.

LINE      NUMBER  DATE MODIFIED     NAME			PATHNAME
             0    10/24/88  1400.1  plio2_dnd_.pl1                    >special_ldd>install>MR12.2-1184>plio2_dnd_.pl1
37           1    04/01/76  2209.5  plio2_descriptor_forms.incl.pl1   >ldd>include>plio2_descriptor_forms.incl.pl1
1-40         2    05/06/74  1742.8  plio2_unpack.incl.pl1             >ldd>include>plio2_unpack.incl.pl1
38           3    10/24/88  1336.9  std_descriptor_types.incl.pl1     >special_ldd>install>MR12.2-1184>std_descriptor_types.incl.pl1
	NAMES DECLARED IN THIS COMPILATION.

IDENTIFIER	     OFFSET    LOC STORAGE CLASS   DATA TYPE		ATTRIBUTES AND REFERENCES
								(* indicates a set context)

NAMES DECLARED BY DECLARE STATEMENT.
D                                      based           structure                level 1 dcl 20
WS                              000106 automatic       fixed bin(15,0)          dcl 34 set ref 41* 56 107 155*
addr                                                   builtin function         dcl 33 ref 45 58 63 65 67 109 122
based_bits                             based           bit(1000)                packed unaligned dcl 2-47 ref 59 110
based_char5                            based           char(5)                  dcl 2-43 set ref 58* 63* 65* 67* 109* 122*
bd                        0(09)        based           char(1)                  level 3 packed packed unaligned dcl 20 set ref 76
                                                                                  111 132
bit_dtype                              constant        fixed bin(17,0)          initial dcl 3-25 ref 57 58
bit_length                      000102 automatic       fixed bin(15,0)          dcl 31 set ref 78* 79* 81* 81 83* 83 83 88* 89* 91*
                                                                                  124* 126* 144
bit_lengthx               4            based           fixed bin(15,0)          level 2 dcl 20 set ref 111* 113* 144*
code                                   parameter       fixed bin(15,0)          dcl 15 set ref 14 46* 148* 154
cplx_flt_dec_9bit_dtype                constant        fixed bin(17,0)          initial dcl 3-25 ref 54 63 81
d                                      parameter       bit(36)                  dcl 15 set ref 14 45 154
desc_ptr                        000110 automatic       pointer                  dcl 1-22 set ref 45* 50 52 59 69 71 74 86 98 110 117
                                                                                  119
ff                        0(18)        based           char(1)                  level 3 packed packed unaligned dcl 20 set ref 78 88
                                                                                  133
fixed                                                  builtin function         dcl 36 ref 52 59 69 71 98 110 117 119
ls                        0(27)        based           char(1)                  level 3 packed packed unaligned dcl 20 set ref 124
nd_first                               based           bit(1)                   level 2 packed packed unaligned dcl 1-32 ref 50
nd_pack                   0(07)        based           bit(1)                   level 2 packed packed unaligned dcl 1-32 ref 74 86
nd_prec                   0(24)        based           bit(12)                  level 2 packed packed unaligned dcl 1-32 ref 69
nd_scale                  0(12)        based           bit(12)                  level 2 packed packed unaligned dcl 1-32 ref 71
nd_type                   0(01)        based           bit(6)                   level 2 packed packed unaligned dcl 1-32 ref 52
new_desc                               based           structure                level 1 dcl 1-32
od_prec                   0(27)        based           bit(9)                   level 2 packed packed unaligned dcl 1-25 ref 117
od_scale                  0(19)        based           bit(8)                   level 2 packed packed unaligned dcl 1-25 ref 119
od_type                                based           bit(15)                  level 2 packed packed unaligned dcl 1-25 ref 98
old_desc                               based           structure                level 1 dcl 1-25
p                                      parameter       pointer                  dcl 15 ref 14 42 154
pack                      1            based           char(1)                  level 3 packed packed unaligned dcl 20 set ref 74*
prec                            000100 automatic       fixed bin(15,0)          dcl 31 set ref 69* 78 79 88 89 91 117* 130 134 136
precx                     2            based           fixed bin(15,0)          level 2 dcl 20 set ref 59* 110* 111 113 136*
q                               000104 automatic       pointer                  dcl 32 set ref 42* 58 59 63 65 67 74 76 78 88 102
                                                                                  109 110 111 111 111 113 113 122 124 132 133 136
                                                                                  141 143 144
real_fix_bin_1_dtype                   constant        fixed bin(17,0)          initial dcl 3-25 ref 65
real_fix_bin_1_uns_dtype               constant        fixed bin(17,0)          initial dcl 3-25 ref 65
real_fix_bin_2_dtype                   constant        fixed bin(17,0)          initial dcl 3-25 ref 89
real_fix_bin_2_uns_dtype               constant        fixed bin(17,0)          initial dcl 3-25 ref 65
real_fix_dec_4bit_bytealigned_ls_dtype constant        fixed bin(17,0)          initial dcl 3-25 ref 67
real_fix_dec_9bit_ls_dtype             constant        fixed bin(17,0)          initial dcl 3-25 ref 67
real_fix_dec_9bit_ls_overp_dtype       constant        fixed bin(17,0)          initial dcl 3-25 ref 54
scale                           000101 automatic       fixed bin(15,0)          dcl 31 set ref 71* 72 72* 72 119* 120 120* 120 139
                                                                                  140 141
scalex                    3            based           fixed bin(15,0)          level 2 dcl 20 set ref 141*
string                                                 builtin function         dcl 33 set ref 102*
string_types                    000000 constant        char(4)                  initial array packed unaligned dcl 158 ref 58 109
substr                                                 builtin function         dcl 33 ref 59 110
type                            000103 automatic       fixed bin(15,0)          dcl 31 set ref 52* 53 54 54 57 57 58 63 63 65 65 67
                                                                                  81 89 98* 99 105 108 108 109 122 143
type5                                  based           structure                level 2 dcl 20 set ref 58 63 65 67 102* 109 122
types_table                     000010 constant        char(4)                  initial array dcl 1-3 ref 63 65 67 122
typex                     5            based           fixed bin(15,0)          level 2 dcl 20 set ref 143*
varying_char_dtype                     constant        fixed bin(17,0)          initial dcl 3-25 ref 57

NAMES DECLARED BY DECLARE STATEMENT AND NEVER REFERENCED.
algol68_array_descriptor_dtype         internal static fixed bin(17,0)          initial dcl 3-25
algol68_bits_dtype                     internal static fixed bin(17,0)          initial dcl 3-110
algol68_bool_dtype                     internal static fixed bin(17,0)          initial dcl 3-110
algol68_byte_dtype                     internal static fixed bin(17,0)          initial dcl 3-110
algol68_char_dtype                     internal static fixed bin(17,0)          initial dcl 3-110
algol68_compl_dtype                    internal static fixed bin(17,0)          initial dcl 3-110
algol68_format_dtype                   internal static fixed bin(17,0)          initial dcl 3-25
algol68_int_dtype                      internal static fixed bin(17,0)          initial dcl 3-110
algol68_long_compl_dtype               internal static fixed bin(17,0)          initial dcl 3-110
algol68_long_int_dtype                 internal static fixed bin(17,0)          initial dcl 3-110
algol68_long_real_dtype                internal static fixed bin(17,0)          initial dcl 3-110
algol68_real_dtype                     internal static fixed bin(17,0)          initial dcl 3-110
algol68_short_int_dtype                internal static fixed bin(17,0)          initial dcl 3-110
algol68_straight_dtype                 internal static fixed bin(17,0)          initial dcl 3-25
algol68_struct_struct_bool_dtype       internal static fixed bin(17,0)          initial dcl 3-110
algol68_struct_struct_char_dtype       internal static fixed bin(17,0)          initial dcl 3-110
algol68_union_dtype                    internal static fixed bin(17,0)          initial dcl 3-25
area_dtype                             internal static fixed bin(17,0)          initial dcl 3-25
based_chars                            based           char(1000)               packed unaligned dcl 2-46
bitbuff                                based           structure                level 1 packed packed unaligned dcl 2-28
c_enum_const_dtype                     internal static fixed bin(17,0)          initial dcl 3-25
c_enum_dtype                           internal static fixed bin(17,0)          initial dcl 3-25
c_typeref_dtype                        internal static fixed bin(17,0)          initial dcl 3-25
c_union_dtype                          internal static fixed bin(17,0)          initial dcl 3-25
char_dtype                             internal static fixed bin(17,0)          initial dcl 3-25
charbuff                               based           structure                level 1 packed packed unaligned dcl 2-32
cobol_char_string_dtype                internal static fixed bin(17,0)          initial dcl 3-25
cobol_comp_5_ts_dtype                  internal static fixed bin(17,0)          initial dcl 3-25
cobol_comp_5_uns_dtype                 internal static fixed bin(17,0)          initial dcl 3-25
cobol_comp_6_dtype                     internal static fixed bin(17,0)          initial dcl 3-25
cobol_comp_7_dtype                     internal static fixed bin(17,0)          initial dcl 3-25
cobol_comp_8_ls_dtype                  internal static fixed bin(17,0)          initial dcl 3-25
cobol_comp_8_uns_dtype                 internal static fixed bin(17,0)          initial dcl 3-25
cobol_display_ls_dtype                 internal static fixed bin(17,0)          initial dcl 3-25
cobol_display_ls_overp_dtype           internal static fixed bin(17,0)          initial dcl 3-25
cobol_display_ts_dtype                 internal static fixed bin(17,0)          initial dcl 3-25
cobol_display_ts_overp_dtype           internal static fixed bin(17,0)          initial dcl 3-25
cobol_display_uns_dtype                internal static fixed bin(17,0)          initial dcl 3-25
cobol_structure_dtype                  internal static fixed bin(17,0)          initial dcl 3-25
cplx_fix_bin_1_dtype                   internal static fixed bin(17,0)          initial dcl 3-25
cplx_fix_bin_2_dtype                   internal static fixed bin(17,0)          initial dcl 3-25
cplx_fix_dec_4bit_bytealigned_ls_dtype internal static fixed bin(17,0)          initial dcl 3-25
cplx_fix_dec_9bit_ls_dtype             internal static fixed bin(17,0)          initial dcl 3-25
cplx_flt_bin_1_dtype                   internal static fixed bin(17,0)          initial dcl 3-25
cplx_flt_bin_2_dtype                   internal static fixed bin(17,0)          initial dcl 3-25
cplx_flt_bin_generic_dtype             internal static fixed bin(17,0)          initial dcl 3-25
cplx_flt_dec_4bit_bytealigned_dtype    internal static fixed bin(17,0)          initial dcl 3-25
cplx_flt_dec_extended_dtype            internal static fixed bin(17,0)          initial dcl 3-25
cplx_flt_dec_generic_dtype             internal static fixed bin(17,0)          initial dcl 3-25
cplx_flt_hex_1_dtype                   internal static fixed bin(17,0)          initial dcl 3-25
cplx_flt_hex_2_dtype                   internal static fixed bin(17,0)          initial dcl 3-25
dec_array                              based           char(1)                  array packed unaligned dcl 2-45
entry_dtype                            internal static fixed bin(17,0)          initial dcl 3-25
ext_entry_runtime_dtype                internal static fixed bin(17,0)          initial dcl 3-125
ext_procedure_runtime_dtype            internal static fixed bin(17,0)          initial dcl 3-125
file_dtype                             internal static fixed bin(17,0)          initial dcl 3-25
ft_char_dtype                          internal static fixed bin(17,0)          initial dcl 3-96
ft_complex_double_dtype                internal static fixed bin(17,0)          initial dcl 3-96
ft_complex_dtype                       internal static fixed bin(17,0)          initial dcl 3-96
ft_double_dtype                        internal static fixed bin(17,0)          initial dcl 3-96
ft_external_dtype                      internal static fixed bin(17,0)          initial dcl 3-96
ft_hex_complex_double_dtype            internal static fixed bin(17,0)          initial dcl 3-96
ft_hex_complex_dtype                   internal static fixed bin(17,0)          initial dcl 3-96
ft_hex_double_dtype                    internal static fixed bin(17,0)          initial dcl 3-96
ft_hex_real_dtype                      internal static fixed bin(17,0)          initial dcl 3-96
ft_integer_dtype                       internal static fixed bin(17,0)          initial dcl 3-96
ft_logical_dtype                       internal static fixed bin(17,0)          initial dcl 3-96
ft_real_dtype                          internal static fixed bin(17,0)          initial dcl 3-96
getlastchar                            based           structure                level 1 dcl 2-49
int_entry_runtime_dtype                internal static fixed bin(17,0)          initial dcl 3-125
label_constant_runtime_dtype           internal static fixed bin(17,0)          initial dcl 3-125
label_dtype                            internal static fixed bin(17,0)          initial dcl 3-25
mfix                                   automatic       fixed bin(35,0)          dcl 2-4
mflo                                   automatic       float bin(63)            dcl 2-5
offset                                 automatic       fixed bin(15,0)          dcl 2-26
offset_dtype                           internal static fixed bin(17,0)          initial dcl 3-25
pascal_boolean_dtype                   internal static fixed bin(17,0)          initial dcl 3-132
pascal_char_dtype                      internal static fixed bin(17,0)          initial dcl 3-132
pascal_entry_formal_parameter_dtype    internal static fixed bin(17,0)          initial dcl 3-132
pascal_enumerated_type_dtype           internal static fixed bin(17,0)          initial dcl 3-132
pascal_enumerated_type_element_dtype   internal static fixed bin(17,0)          initial dcl 3-132
pascal_enumerated_type_instance_dtype  internal static fixed bin(17,0)          initial dcl 3-132
pascal_exportable_procedure_dtype      internal static fixed bin(17,0)          initial dcl 3-132
pascal_imported_procedure_dtype        internal static fixed bin(17,0)          initial dcl 3-132
pascal_integer_dtype                   internal static fixed bin(17,0)          initial dcl 3-132
pascal_internal_procedure_dtype        internal static fixed bin(17,0)          initial dcl 3-132
pascal_label_dtype                     internal static fixed bin(17,0)          initial dcl 3-132
pascal_parameter_procedure_dtype       internal static fixed bin(17,0)          initial dcl 3-132
pascal_procedure_type_dtype            internal static fixed bin(17,0)          initial dcl 3-132
pascal_real_dtype                      internal static fixed bin(17,0)          initial dcl 3-132
pascal_record_file_type_dtype          internal static fixed bin(17,0)          initial dcl 3-132
pascal_record_type_dtype               internal static fixed bin(17,0)          initial dcl 3-132
pascal_set_dtype                       internal static fixed bin(17,0)          initial dcl 3-132
pascal_string_type_dtype               internal static fixed bin(17,0)          initial dcl 3-132
pascal_text_file_dtype                 internal static fixed bin(17,0)          initial dcl 3-132
pascal_typed_pointer_type_dtype        internal static fixed bin(17,0)          initial dcl 3-132
pascal_user_defined_type_dtype         internal static fixed bin(17,0)          initial dcl 3-132
pascal_user_defined_type_instance_dtype
                                       internal static fixed bin(17,0)          initial dcl 3-132
pascal_value_formal_parameter_dtype    internal static fixed bin(17,0)          initial dcl 3-132
pascal_variable_formal_parameter_dtype internal static fixed bin(17,0)          initial dcl 3-132
picture_runtime_dtype                  internal static fixed bin(17,0)          initial dcl 3-125
pointer_dtype                          internal static fixed bin(17,0)          initial dcl 3-25
real_fix_dec_4bit_bytealigned_uns_dtype
                                       internal static fixed bin(17,0)          initial dcl 3-25
real_fix_dec_4bit_ls_dtype             internal static fixed bin(17,0)          initial dcl 3-25
real_fix_dec_4bit_ts_dtype             internal static fixed bin(17,0)          initial dcl 3-25
real_fix_dec_4bit_uns_dtype            internal static fixed bin(17,0)          initial dcl 3-25
real_fix_dec_9bit_ts_dtype             internal static fixed bin(17,0)          initial dcl 3-25
real_fix_dec_9bit_ts_overp_dtype       internal static fixed bin(17,0)          initial dcl 3-25
real_fix_dec_9bit_uns_dtype            internal static fixed bin(17,0)          initial dcl 3-25
real_flt_bin_1_dtype                   internal static fixed bin(17,0)          initial dcl 3-25
real_flt_bin_2_dtype                   internal static fixed bin(17,0)          initial dcl 3-25
real_flt_bin_generic_dtype             internal static fixed bin(17,0)          initial dcl 3-25
real_flt_dec_4bit_bytealigned_dtype    internal static fixed bin(17,0)          initial dcl 3-25
real_flt_dec_4bit_dtype                internal static fixed bin(17,0)          initial dcl 3-25
real_flt_dec_9bit_dtype                internal static fixed bin(17,0)          initial dcl 3-25
real_flt_dec_extended_dtype            internal static fixed bin(17,0)          initial dcl 3-25
real_flt_dec_generic_dtype             internal static fixed bin(17,0)          initial dcl 3-25
real_flt_hex_1_dtype                   internal static fixed bin(17,0)          initial dcl 3-25
real_flt_hex_2_dtype                   internal static fixed bin(17,0)          initial dcl 3-25
structure_dtype                        internal static fixed bin(17,0)          initial dcl 3-25
unpack12                               based           structure                level 1 dcl 2-11
unpack15                               based           structure                level 1 dcl 2-15
unpack30                               based           structure                level 1 dcl 2-39
unpack6                                based           structure                level 1 dcl 2-7
unpack8                                based           structure                level 1 dcl 2-22
unpackexp                              based           structure                level 1 dcl 2-19
varying_bit_dtype                      internal static fixed bin(17,0)          initial dcl 3-25

NAMES DECLARED BY EXPLICIT CONTEXT.
bad_prec                        000411 constant        label                    dcl 148 ref 132 133 134
bad_scale                       000411 constant        label                    dcl 148 ref 139 140
bad_type                        000411 constant        label                    dcl 148 ref 53 56 57 107 108
common                          000045 constant        label                    dcl 42 ref 156
dnd                             000036 constant        entry                    external dcl 14
string_exit                     000310 constant        label                    dcl 111 ref 60
unpacked_binary                 000344 constant        label                    dcl 124 ref 86
with_strings                    000416 constant        entry                    external dcl 154

NAME DECLARED BY CONTEXT OR IMPLICATION.
mod                                                    builtin function         ref 83

STORAGE REQUIREMENTS FOR THIS PROGRAM.

	Object	Text	Link	Symbol	Defs	Static
Start          0       0       466         476     431         476
Length       726     431        10         213      34           0

BLOCK NAME	         STACK SIZE     TYPE		WHY NONQUICK/WHO SHARES STACK FRAME
dnd                                  75 external procedure  is an external procedure.  

STORAGE FOR AUTOMATIC VARIABLES.

STACK FRAME                 LOC IDENTIFIER                  BLOCK NAME
dnd                      000100 prec                        dnd
                         000101 scale                       dnd
                         000102 bit_length                  dnd
                         000103 type                        dnd
                         000104 q                           dnd
                         000106 WS                          dnd
                         000110 desc_ptr                    dnd

THE FOLLOWING EXTERNAL OPERATORS ARE USED BY THIS PROGRAM.
return_mac          mdfx1               ext_entry           trunc_fx1           set_support

NO EXTERNAL ENTRIES ARE CALLED BY THIS PROGRAM.

NO EXTERNAL VARIABLES ARE USED BY THIS PROGRAM.




   LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC   
     14 000032        41 000044        42 000045        45 000051        46 000053        50 000054        52 000057
     53 000063        54 000065        56 000071        57 000073        58 000100        59 000107        60 000115
     63 000116        65 000125        67 000135        69 000142        71 000145        72 000151        74 000155
     76 000164        78 000171        79 000202        81 000205        83 000214        84 000224        86 000225
     88 000227        89 000240        91 000247        95 000251        98 000252        99 000255       102 000257
    103 000262       105 000263       107 000265       108 000267       109 000274       110 000302       111 000310
    113 000320       114 000323       117 000324       119 000327       120 000333       122 000337       124 000344
    126 000353       130 000355       132 000360       133 000365       134 000372       136 000375       139 000376
    140 000401       141 000403       143 000404       144 000406       146 000410       148 000411       152 000413
    154 000414       155 000424       156 000426


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
