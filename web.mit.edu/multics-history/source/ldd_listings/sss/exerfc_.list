	COMPILATION LISTING OF SEGMENT exerfc_
	Compiled by: Multics PL/I Compiler, Release 28d, of September 14, 1983
	Compiled at: Honeywell LCPD Phoenix, System M
	Compiled on: 10/03/83  1403.1 mst Mon
	    Options: optimize map

        1 /* ******************************************************
        2*   *                                                    *
        3*   *                                                    *
        4*   * Copyright (c) 1972 by Massachusetts Institute of   *
        5*   * Technology and Honeywell Information Systems, Inc. *
        6*   *                                                    *
        7*   *                                                    *
        8*   ****************************************************** */
        9 
       10 exerfc_: procedure (number) returns (float binary (27));
       11 
       12 /*       compute the special error function of a single-precision floating-point number       */
       13 declare (number, r, uh, ul, um) float binary (27),
       14 	(abs, exp, erfc) builtin,
       15         (f, n, hn, dh, dl, dm, ph, rh, rl, rm, sh, sl, sm, th, tl, tm) float binary (63);
       16 dcl  code_ ext entry (fixed bin),
       17      round builtin;
       18 	n, r = number + 0.0e0;
       19 if n < -9.30630096e0 then err: do;
       20 	     call code_ (41);
       21 	     return (170141182.e30);
       22 	end err;
       23 	f = abs (n);
       24 	if f < 2.5e0 then th = erfc (r) * exp (f*f);
       25 else large: do;
       26 	     rm, th = 0.5e0 / f;
       27 	     if f >= 1.e5 then go to done;
       28 	     ph = f;
       29 	     rl = 0.0e0;
       30 	     hn = 0.5e0;
       31 	     uh = -1.e10;
       32 loop:	     dm = hn / ph;
       33 	     ph = dm + f;
       34 	     rh = (rl * dm + rm * f) / ph;
       35 	     dl = rl - rm;
       36 	     dh = rh - rm;
       37 	     dm = dh + dl;
       38 	     if dm = 0.0e0 then go to dvc1;
       39 	     sh = (dh/dm) * dl + rm;
       40 	     if hn < 1.25e0 then go to step;
       41 	     dl = sl - sm;
       42 	     dh = sh - sm;
       43 	     dm = dh + dl;
       44 	     if dm = 0.0e0 then go to dvc2;
       45 	     th = (dh/dm) * dl + sm;
       46 	     uh = th;
       47 	     if uh = um then go to done;
       48 	     if uh = ul then go to done;
       49 step:	     hn = hn + 0.5e0;
       50 	     rl = rm;
       51 	     sl = sm;
       52 	     tl = tm;
       53 	     ul = um;
       54 	     rm = rh;
       55 	     sm = sh;
       56 	     tm = th;
       57 	     um = uh;
       58 	     go to loop;
       59 dvc1:	     sh = rh;
       60 dvc2:	     th = sh;
       61 done:	     th = 1.128379167095512574e0 * th;
       62 	     if n < 0.0e0 then th = 2.e0 * exp (f*f) - th;
       63 	end large;
       64 	r = round (th, 28);
       65 	return (r);
       66      end exerfc_;
	SOURCE FILES USED IN THIS COMPILATION.

LINE      NUMBER  DATE MODIFIED     NAME			PATHNAME
             0    10/03/83  1005.0  exerfc_.pl1                       >spec>on>pl128d>exerfc_.pl1
	NAMES DECLARED IN THIS COMPILATION.

IDENTIFIER	     OFFSET    LOC STORAGE CLASS   DATA TYPE		ATTRIBUTES AND REFERENCES
								(* indicates a set context)

NAMES DECLARED BY DECLARE STATEMENT.
abs                                                    builtin function         dcl 13 ref 23
code_                           000012 constant        entry                    external dcl 16 ref 20
dh                              000112 automatic       float bin(63)            dcl 13 set ref 36* 37 39 42* 43 45
dl                              000114 automatic       float bin(63)            dcl 13 set ref 35* 37 39 41* 43 45
dm                              000116 automatic       float bin(63)            dcl 13 set ref 32* 33 34 37* 38 39 43* 44 45
erfc                                                   builtin function         dcl 13 ref 24
exp                                                    builtin function         dcl 13 ref 24 62
f                               000104 automatic       float bin(63)            dcl 13 set ref 23* 24 24 24 26 27 28 33 34 62 62
hn                              000110 automatic       float bin(63)            dcl 13 set ref 30* 32 40 49* 49
n                               000106 automatic       float bin(63)            dcl 13 set ref 18* 19 23 62
number                                 parameter       float bin(27)            dcl 13 ref 10 18
ph                              000120 automatic       float bin(63)            dcl 13 set ref 28* 32 33* 34
r                               000100 automatic       float bin(27)            dcl 13 set ref 18* 24 64* 65
rh                              000122 automatic       float bin(63)            dcl 13 set ref 34* 36 54 59
rl                              000124 automatic       float bin(63)            dcl 13 set ref 29* 34 35 50*
rm                              000126 automatic       float bin(63)            dcl 13 set ref 26* 34 35 36 39 50 54*
round                                                  builtin function         dcl 16 ref 64
sh                              000130 automatic       float bin(63)            dcl 13 set ref 39* 42 55 59* 60
sl                              000132 automatic       float bin(63)            dcl 13 set ref 41 51*
sm                              000134 automatic       float bin(63)            dcl 13 set ref 41 42 45 51 55*
th                              000136 automatic       float bin(63)            dcl 13 set ref 24* 26* 45* 46 56 60* 61* 61 62* 62
                                                                                  64
tl                              000140 automatic       float bin(63)            dcl 13 set ref 52*
tm                              000142 automatic       float bin(63)            dcl 13 set ref 52 56*
uh                              000101 automatic       float bin(27)            dcl 13 set ref 31* 46* 47 48 57
ul                              000102 automatic       float bin(27)            dcl 13 set ref 48 53*
um                              000103 automatic       float bin(27)            dcl 13 set ref 47 53 57*

NAMES DECLARED BY EXPLICIT CONTEXT.
done                            000224 constant        label                    dcl 61 ref 27 47 48
dvc1                            000220 constant        label                    dcl 59 set ref 38
dvc2                            000222 constant        label                    dcl 60 ref 44
err                             000034 constant        label                    dcl 19
exerfc_                         000020 constant        entry                    external dcl 10
large                           000076 constant        label                    dcl 25
loop                            000115 constant        label                    dcl 32 ref 58
step                            000174 constant        label                    dcl 49 ref 40

THERE WERE NO NAMES DECLARED BY CONTEXT OR IMPLICATION.

STORAGE REQUIREMENTS FOR THIS PROGRAM.

	Object	Text	Link	Symbol	Defs	Static
Start          0       0       306         322     247         316
Length       464     247        14         126      37           0

BLOCK NAME	         STACK SIZE     TYPE		WHY NONQUICK/WHO SHARES STACK FRAME
exerfc_                             146 external procedure  is an external procedure.  

STORAGE FOR AUTOMATIC VARIABLES.

STACK FRAME                 LOC IDENTIFIER                  BLOCK NAME
exerfc_                  000100 r                           exerfc_
                         000101 uh                          exerfc_
                         000102 ul                          exerfc_
                         000103 um                          exerfc_
                         000104 f                           exerfc_
                         000106 n                           exerfc_
                         000110 hn                          exerfc_
                         000112 dh                          exerfc_
                         000114 dl                          exerfc_
                         000116 dm                          exerfc_
                         000120 ph                          exerfc_
                         000122 rh                          exerfc_
                         000124 rl                          exerfc_
                         000126 rm                          exerfc_
                         000130 sh                          exerfc_
                         000132 sl                          exerfc_
                         000134 sm                          exerfc_
                         000136 th                          exerfc_
                         000140 tl                          exerfc_
                         000142 tm                          exerfc_

THE FOLLOWING EXTERNAL OPERATORS ARE USED BY THIS PROGRAM.
call_ext_out        return              ext_entry           round_fl            dexp

THE FOLLOWING EXTERNAL ENTRIES ARE CALLED BY THIS PROGRAM.
code_                         erf_$erfc_

NO EXTERNAL VARIABLES ARE USED BY THIS PROGRAM.




   LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC   
     10 000014        18 000025        19 000032        20 000034        21 000044        23 000050        24 000054
     26 000076        27 000102        28 000105        29 000107        30 000111        31 000113        32 000115
     33 000120        34 000122        35 000132        36 000135        37 000140        38 000142        39 000143
     40 000147        41 000152        42 000155        43 000160        44 000162        45 000163        46 000167
     47 000170        48 000172        49 000174        50 000177        51 000201        52 000203        53 000205
     54 000207        55 000211        56 000213        57 000215        58 000217        59 000220        60 000222
     61 000224        62 000227        64 000240        65 000244


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
