	COMPILATION LISTING OF SEGMENT !BBBJWDfxkMCxBJ
	Compiled by: Multics PL/I Compiler, Release 29, of July 28, 1986
	Compiled at: Honeywell Multics Op. - System M
	Compiled on: 12/10/86  1258.3 mst Wed
	    Options: table map

        1 /* ***********************************************************
        2*   *                                                         *
        3*   * Copyright, (C) Honeywell Information Systems Inc., 1986 *
        4*   *                                                         *
        5*   *********************************************************** */
        6 
        7 /* HISTORY COMMENTS:
        8*  1) change(86-08-12,Elhard), approve(86-08-12,MCR7505),
        9*     audit(86-12-10,DGHowe), install(86-12-10,MR12.0-1241):
       10*     Originally written to define constant and static data used by le_.
       11*                                                   END HISTORY COMMENTS */
       12 
       13 /* format: style1,insnl,ifthendo,indthenelse,^indnoniterdo,^inditerdo,indcom,^indthenbegin,^indprocbody,ind2,ll78,initcol0,dclind4,idind24,struclvlind1,comcol41 */
       14 
       15 le_data_:
       16   proc;
       17 
       18   /*** ****************************************************************/
       19   /***							*/
       20   /***	Name:	le_data_					*/
       21   /***	Function:	This procedure is used to create the le_data_	*/
       22   /***		data segment for the linkage editor (le).	*/
       23   /***							*/
       24   /*** ****************************************************************/
       25 
       26   /* constants */
       27 
       28   dcl true		bit (1) static options (constant) init ("1"b);
       29   dcl false		bit (1) static options (constant) init ("0"b);
       30 
       31   /* procedures */
       32 
       33   dcl com_err_		entry () options (variable);
       34   dcl create_data_segment_	entry (ptr, fixed bin (35));
       35 
       36   /* automatic */
       37 
       38   dcl ec			fixed bin (35) automatic;
       39   dcl 01 le_cds_args	aligned like cds_args automatic;
       40   dcl 01 le_static_data	aligned automatic,
       41        02 caller		char (32) varying,
       42        02 debug		bit (1),
       43        02 display_severity	fixed bin,
       44        02 max_severity	fixed bin,
       45        02 patch_ptr		ptr,
       46        02 running		bit (1);
       47   dcl 01 le_text_data	aligned automatic,
       48        02 version_number	fixed bin,
       49        02 version_string	char (64) varying,
       50        02 version_suffix	char (64) varying;
       51 
       52   /* builtin */
       53 
       54   dcl addr		builtin;
       55   dcl null		builtin;
       56   dcl size		builtin;
       57   dcl string		builtin;
       58 
       59   /* build the cds_args structure */
       60 
       61   le_cds_args.sections (1).p = addr (le_text_data);
       62   le_cds_args.sections (1).len = size (le_text_data);
       63   le_cds_args.sections (1).struct_name = "le_text_data";
       64 
       65   le_cds_args.sections (2).p = addr (le_static_data);
       66   le_cds_args.sections (2).len = size (le_static_data);
       67   le_cds_args.sections (2).struct_name = "le_static_data";
       68 
       69   le_cds_args.seg_name = "le_data_";
       70   le_cds_args.num_exclude_names = 0;
       71   le_cds_args.exclude_array_ptr = null;
       72 
       73   string (le_cds_args.switches) = ""b;
       74 
       75   le_cds_args.switches.have_text = true;
       76   le_cds_args.switches.have_static = true;
       77 
       78   /* initialize the text and static section data */
       79 
       80   le_text_data.version_number = 1;
       81   le_text_data.version_string = "le 1.0";
       82   le_text_data.version_suffix = " Version 1.0 of November 27, 1986";
       83 
       84   le_static_data.caller = "";
       85   le_static_data.debug = false;
       86   le_static_data.display_severity = 0;
       87   le_static_data.max_severity = 0;
       88   le_static_data.patch_ptr = null;
       89   le_static_data.running = ""b;
       90 
       91   /* create the segment */
       92 
       93   call create_data_segment_ (addr (le_cds_args), ec);
       94   if ec ^= 0
       95     then call com_err_ (ec, "le_data_");
       96 
       97   return;
       98 
       99 /****  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  */
      100 
      101 /****  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  */
      102 
      103 
  1     1 /* BEGIN INCLUDE FILE cds_args.incl.pl1 */
  1     2 
  1     3 dcl 1 cds_args based aligned,
  1     4     2 sections (2),
  1     5       3 p ptr,					/* pointer to data for text/static section */
  1     6       3 len fixed bin (18),				/* size of text/static section */
  1     7       3 struct_name char (32),			/* name of declared structure for this section */
  1     8     2 seg_name char (32),				/* name to create segment by */
  1     9     2 num_exclude_names fixed bin,			/* number of names in exclude array */
  1    10     2 exclude_array_ptr ptr,				/* pointer to array of exclude names */
  1    11     2 switches,					/* control switches */
  1    12       3 defs_in_link bit (1) unal,			/* says put defs in linkage */
  1    13       3 separate_static bit (1) unal,			/* says separate static section is wanted */
  1    14       3 have_text bit (1) unal,			/* ON if text section given */
  1    15       3 have_static bit (1) unal,			/* ON if static section given */
  1    16       3 pad bit (32) unal;
  1    17 
  1    18 dcl  exclude_names (1) char (32) based;			/* pointed to be cds_args.exclude_array_ptr */
  1    19 
  1    20 /* END INCLUDE FILE cds_args.incl.pl1 */
      104 
      105 
      106   end le_data_;
      107 
	SOURCE FILES USED IN THIS COMPILATION.

LINE      NUMBER  DATE MODIFIED     NAME			PATHNAME
             0    12/10/86  1252.3  !BBBJWDfxkMCxBJ.pl1               >special_ldd>install>MR12.0-1241>le_data_.cds
104          1    04/01/76  2209.5  cds_args.incl.pl1                 >ldd>include>cds_args.incl.pl1
	NAMES DECLARED IN THIS COMPILATION.

IDENTIFIER	     OFFSET    LOC STORAGE CLASS   DATA TYPE		ATTRIBUTES AND REFERENCES
								(* indicates a set context)

NAMES DECLARED BY DECLARE STATEMENT.
addr                                                   builtin function         dcl 54 ref 61 65 93 93
caller                          000150 automatic       varying char(32)         level 2 dcl 40 set ref 84*
cds_args                               based           structure                level 1 dcl 1-3
com_err_                        000012 constant        entry                    external dcl 33 ref 94
create_data_segment_            000014 constant        entry                    external dcl 34 ref 93
debug                    11     000150 automatic       bit(1)                   level 2 dcl 40 set ref 85*
display_severity         12     000150 automatic       fixed bin(17,0)          level 2 dcl 40 set ref 86*
ec                              000100 automatic       fixed bin(35,0)          dcl 38 set ref 93* 94 94*
exclude_array_ptr        42     000102 automatic       pointer                  level 2 dcl 39 set ref 71*
false                           000150 constant        bit(1)                   initial unaligned dcl 29 ref 85
have_static              44(03) 000102 automatic       bit(1)                   level 3 packed unaligned dcl 39 set ref 76*
have_text                44(02) 000102 automatic       bit(1)                   level 3 packed unaligned dcl 39 set ref 75*
le_cds_args                     000102 automatic       structure                level 1 dcl 39 set ref 93 93
le_static_data                  000150 automatic       structure                level 1 dcl 40 set ref 65 66
le_text_data                    000167 automatic       structure                level 1 dcl 47 set ref 61 62
len                       2     000102 automatic       fixed bin(18,0)          array level 3 dcl 39 set ref 62* 66*
max_severity             13     000150 automatic       fixed bin(17,0)          level 2 dcl 40 set ref 87*
null                                                   builtin function         dcl 55 ref 71 88
num_exclude_names        40     000102 automatic       fixed bin(17,0)          level 2 dcl 39 set ref 70*
p                               000102 automatic       pointer                  array level 3 dcl 39 set ref 61* 65*
patch_ptr                14     000150 automatic       pointer                  level 2 dcl 40 set ref 88*
running                  16     000150 automatic       bit(1)                   level 2 dcl 40 set ref 89*
sections                        000102 automatic       structure                array level 2 dcl 39
seg_name                 30     000102 automatic       char(32)                 level 2 dcl 39 set ref 69*
size                                                   builtin function         dcl 56 ref 62 66
string                                                 builtin function         dcl 57 set ref 73*
struct_name               3     000102 automatic       char(32)                 array level 3 dcl 39 set ref 63* 67*
switches                 44     000102 automatic       structure                level 2 dcl 39 set ref 73*
true                            000000 constant        bit(1)                   initial unaligned dcl 28 ref 75 76
version_number                  000167 automatic       fixed bin(17,0)          level 2 dcl 47 set ref 80*
version_string            1     000167 automatic       varying char(64)         level 2 dcl 47 set ref 81*
version_suffix           22     000167 automatic       varying char(64)         level 2 dcl 47 set ref 82*

NAME DECLARED BY DECLARE STATEMENT AND NEVER REFERENCED.
exclude_names                          based           char(32)                 array unaligned dcl 1-18

NAME DECLARED BY EXPLICIT CONTEXT.
le_data_                        000033 constant        entry                    external dcl 15

THERE WERE NO NAMES DECLARED BY CONTEXT OR IMPLICATION.

STORAGE REQUIREMENTS FOR THIS PROGRAM.

	Object	Text	Link	Symbol	Defs	Static
Start          0       0       224         242     151         234
Length      1366     151        16        1107      52           0

BLOCK NAME	         STACK SIZE     TYPE		WHY NONQUICK/WHO SHARES STACK FRAME
le_data_                            172 external procedure  is an external procedure.  

STORAGE FOR AUTOMATIC VARIABLES.

STACK FRAME                 LOC IDENTIFIER                  BLOCK NAME
le_data_                 000100 ec                          le_data_
                         000102 le_cds_args                 le_data_
                         000150 le_static_data              le_data_
                         000167 le_text_data                le_data_

THE FOLLOWING EXTERNAL OPERATORS ARE USED BY THIS PROGRAM.
call_ext_out_desc   call_ext_out        return_mac          ext_entry

THE FOLLOWING EXTERNAL ENTRIES ARE CALLED BY THIS PROGRAM.
com_err_                      create_data_segment_

NO EXTERNAL VARIABLES ARE USED BY THIS PROGRAM.




   LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC   
     15 000032        61 000040        62 000042        63 000044        65 000047        66 000051        67 000053
     69 000056        70 000061        71 000062        73 000064        75 000065        76 000067        80 000071
     81 000073        82 000100        84 000105        85 000106        86 000107        87 000110        88 000111
     89 000113        93 000114        94 000126        97 000147


Object Segment >special_ldd>install>MR12.0-1241>le_data_
Created on 12/10/86  1258.4 mst Wed
by GJohnson.SysMaint.a
using create_data_segment_, Version II of Thursday, November 20, 1986

        Object    Text    Defs    Link    Symb  Static
Start        0       0      44     156     206     166
Length     365      44     112      30     143      20


11 Definitions:


segname:    le_data_

link|10         caller
link|21         debug
link|22         display_severity
link|23         max_severity
link|24         patch_ptr
link|26         running
symb|0          symbol_table
text|0          version_number
text|1          version_string
text|22         version_suffix


No Links.





                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
