THIS FILE IS DAMAGED

	COMPILATION LISTING OF SEGMENT dm_translate_system_config_
	Compiled by: Multics PL/I Compiler, Release 28e, of February 14, 1985
	Compiled at: Honeywell Multics Op. - System M
	Compiled on: 03/17/86  1446.6 mst Mon
	    Options: optimize map

        1 
        2 
        3 	/*  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  */
        4 	/*							*/
        5 	/* COMPILED OUTPUT OF SEGMENT  dm_translate_system_config_.rd  	*/
        6 	/* Compiled by:  reduction_compiler, Version 2.5 of Oct 21, 1985      */
        7 	/* Compiled on:  03/17/86  1446.6 mst Mon                             */
        8 	/*							*/
        9 	/*  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  */
       10 
       11 /* ***********************************************************
       12*   *                                                         *
       13*   * Copyright, (C) Honeywell Information Systems Inc., 1983 *
       14*   *                                                         *
       15*   *********************************************************** */
       16 
       17 /*  DESCRIPTION:
       18*	dm_translate_system_config_ - program to extract DMS configuration
       19*     data from an ascii segment and return a pointer to a structure which
       20*     summarizes the configuration parameters.
       21**/
       22 
       23 /* HISTORY:
       24*Written by M. Pandolf, December 1982.
       25*Modified:
       26*03/15/83 by M. Pandolf:  for default before journal keywords and for
       27*	  logging process terminations.
       28*05/05/83 by L. A. Newcomb:  added recovery_check_mode and fixed the old
       29*	  subsystem_inhibit to be subsystem_disposition.  NOTE:  work
       30*	  needs to be done on error reporting for duplicate settings,
       31*	  such as specifying "^recover, recovery_check_mode".
       32*11/04/83 by M. Pandolf: to check to see if default before journal ends in ".bj"
       33*05/29/84 by Lindsey Spratt: Changed to use version 2 dm_system_config.
       34*	  Removed several elements of the config, to whit; maximum
       35*	  number_of_before_journals, inhibit subsystem, and daemon error
       36*	  trace.  None of these were in use.
       37*06/12/84 by Lindsey Spratt: Added code for shutdown_delay. Changed to check
       38*	  for before_journal_size > 2 instead of 0.
       39**/
       40 /* format: style4,indattr,ifthenstmt,ifthen,^indcomtxt,idind33 */
       41 
       42 /*
       43*   The DM configuration file contains information used at data management initialization
       44*   time to configure the system to site dependent parameters.  These
       45*   parameters override the values built in to the CDS named
       46*   "dm_system_data_".
       47*
       48*   The form of the DM configuration file is as follows:
       49*
       50*   <DM config file> ::= [<spec>]...<end statement>
       51*   <spec> ::=           <default before journal size> |
       52*                        <maximum number of processes> |
       53*                        <maximum number of transactions> |
       54*                        <default before journal> |
       55*                        <previous bootload status> |
       56*                        <current bootload enable> |
       57*                        <daemon idle timeout> |
       58*		    <shutdown delay> |
       59*                        <daemon log proc terms>
       60*   <default before journal size> ::=
       61*                        system_before_journal_size: <decimal integer>;
       62*   <maximum number of processes> ::=
       63*                        max_processes: <decimal integer>;
       64*   <maximum number of transactions> ::=
       65*                        max_transactions: <decimal integer>;
       66*   <default before journal> ::=
       67*                        default_before_journal: <path spec>;
       68*   <previous bootload status> ::=
       69*                        prev_bootload_status: <status option>[,<status option>]...;
       70*   <current bootload enable> ::=
       71*                        current_bootload_enable: force | ^force;
       72*   <daemon idle timeout local> ::=
       73*                        idle_timeout: <decimal integer>;
       74*   <shutdown delay> ::=
       75*		    shutdown_delay: <decimal integer>;
       76*   <daemon log proc terms> ::=
       77*                        log_proc_terms: on | off;
       78*   <end statement> ::=  end;
       79*
       80*   <path spec> ::=      dir=<path> | entry=<segment name> |
       81*		    dir=<path>,entry=<segment name> |
       82*                        entry=<segment name>,dir=<path> | <null string>
       83*
       84*   <status option> ::=  hold | adopt | recover | recovery_check_mode | ^hold | ^adopt | ^recover | ^recovery_check_mode
       85*
       86*   <path> ::=           <absolute pathname> | aim_dir | bootload_dir.
       87*/*++
       88*
       89*BEGIN
       90*1	/ system_before_journal_size : <decimal-integer> ; /
       91*		LEX(2) [	if token.Nvalue > 2
       92*			then dm_system_config.default_bj_size = token.Nvalue;
       93*			else call ERROR(4)]
       94*		LEX(2) / BEGIN \
       95*
       96*2	/ system_before_journal_size <any-token> /
       97*		LEX(2) ERROR(4) NEXT_STMT / BEGIN \
       98*
       99*3	/ system_before_journal_size <no-token> /
      100*		ERROR(8) / BEGIN \
      101*
      102*4	/ max_processes : <decimal-integer> ; /
      103*		LEX(2) [	if token.Nvalue > 0
      104*			then dm_system_config.max_n_proc = token.Nvalue;
      105*			else call ERROR(4)]
      106*		LEX(2) / BEGIN  \
      107*
      108*5	/ max_processes <any-token> /
      109*		LEX(2) ERROR(4) NEXT_STMT / BEGIN \
      110*
      111*6	/ max_processes <no-token> /
      112*		ERROR(8) / BEGIN \
      113*
      114*7	/ max_transactions : <decimal-integer> ; /
      115*		LEX(2) [	if token.Nvalue > 0
      116*			then dm_system_config.max_n_txn = token.Nvalue;
      117*			else call ERROR(4)]
      118*		LEX(2) / BEGIN  \
      119*
      120*8	/ max_transactions <any-token> /
      121*		LEX(2) ERROR(4) NEXT_STMT / BEGIN \
      122*
      123*9	/ max_transactions <no-token> /
      124*		ERROR(8) / BEGIN \
      125*
      126*10	/ idle_timeout : <decimal-integer> ; /
      127*		LEX(2) [	if token.Nvalue > 0
      128*			then dm_system_config.idle_timeout = token.Nvalue;
      129*			else call ERROR(4)]
      130*		LEX(2) / BEGIN  \
      131*
      132*11	/ idle_timeout <any-token> /
      133*		LEX(2) ERROR(4) NEXT_STMT / BEGIN \
      134*
      135*12	/ idle_timeout <no-token> /
      136*		ERROR(8) / BEGIN \
      137*
      138*13	/ shutdown_delay : <date_time_offset> ; /
      139*		LEX(2) [	dm_system_config.shutdown_delay = convert_date_time_offset();
      140*]
      141*		LEX(2) / BEGIN  \
      142*
      143*14	/ shutdown_delay <any-token> /
      144*		LEX(2) ERROR(4) NEXT_STMT / BEGIN \
      145*
      146*15	/ shutdown_delay <no-token> /
      147*		ERROR(8) / BEGIN \
      148*
      149*16	/ default_before_journal : /
      150*		LEX(2) / path_spec \
      151*
      152*17	/ prev_bootload_status : /
      153*		[save_prev_dm_disp = dm_system_config.prev_dm_disp]
      154*		LEX(2) / status_spec \
      155*
      156*18	/ current_bootload_enable : force ; /
      157*		[dm_system_config.curr_dm_enable = DM_FORCE_ENABLE_NEW_BOOTLOAD] LEX(4) / BEGIN \
      158*
      159*19	/ current_bootload_enable : ^force ; /
      160*		[dm_system_config.curr_dm_enable = DM_DO_NOT_FORCE_ENABLE_NEW_BOOTLOAD] LEX(5) / BEGIN \
      161*
      162*20	/ current_bootload_enable <any-token> /
      163*		LEX(2) ERROR(4) NEXT_STMT / BEGIN \
      164*
      165*21	/ current_bootload_enable <no-token> /
      166*		ERROR(8) / BEGIN \
      167*
      168*22	/ log_proc_terms : on ; /
      169*		[dm_system_config.log_proc_terms = "1"b] LEX(4) / BEGIN \
      170*
      171*23	/ log_proc_terms : off ; /
      172*		[dm_system_config.log_proc_terms = "0"b] LEX(4) / BEGIN \
      173*
      174*24	/ log_proc_terms <any-token> /
      175*		LEX(2) ERROR(6a.actc.ab.ca>  ∂ $í ’Q T ﬂÑˆ $   ˇˇns    SERVER  : TO:<Schroth@multics>∂ $í ’R T ﬂë‰√ D   ˇˇns    MAILER  : From:<Network_Server.Daemon@ACTC_MULTICS.ACTC.AB.CA>∂ $í ’S T ﬂíz¸ ,   ˇˇns    MAILER  : To:<Jim_Gee@L66A.ACTC.AB.CA>∂ $í ’T T ﬂ 8 )   ˇˇin    SMTP    : [ 0: 0:30] ACTC.AB.CA (0)   ∂ $í ’U T ﬂÆx .   ˇˇns    SERVER  : FROM:<Jim_Gee@l66a.actc.ab.ca>  ∂ $í ’V T ﬂc $   ˇˇns    SERVER  : TO:<Schroth@multics>∂ $í ’W T ﬂ}å D   ˇˇns    MAILER  : From:<Network_Server.Daemon@ACTC_MULTICS.ACTC.AB.CA>∂ $í ’X T ﬂÒ ,   ˇˇns    MAILER  : To:<Jim_Gee@L66A.ACTC.AB.CA>∂ $í ’Y T ﬂè S )   ˇˇin    SMTP    : [ 0: 0:34] ACTC.AB.CA (0)   ∂ $í ’Z T ﬂê˝! .   ˇˇns    SERVER  : FROM:<Jim_Gee@l66a.actc.ab.ca>  ∂ $í ’[ T ﬂëÉK $   ˇˇns    SERVER  : TO:<Schroth@multics>∂ $í ’\ T ﬂùˇM D   ˇˇns    MAILER  : From:<Network_Server.Daemon@ACTC_MULTICS.ACTC.AB.CA>∂ $í ’] T ﬂû†˚ ,   ˇˇns    MAILER  : To:<Jim_Gee@L66A.ACTC.AB.CA>∂ $í ’^ T ‡ÜÇ )   ˇˇin    SMTP    : [ 0: 0:32] ACTC.AB.CA (0)   ∂ $í ’_ T ‡˝w .   ˇˇns    SERVER  : FROM:<Jim_Gee@l66a.actc.ab.ca>  ∂ $í ’` T ‡e $   ˇˇns    SERVER  : TO:<Schroth@multics>∂ $í ’a T ‡"äA D   ˇˇns    MAILER  : From:<Network_Server.Daemon@ACTC_MULTICS.ACTC.AB.CA>∂ $í ’b T ‡#'Û ,   ˇˇns    MAILER  : To:<Jim_Gee@L66A.ACTC.AB.CA>∂ $í ’c T ‡ùª )   ˇˇin    SMTP    : [ 0: 0:33] ACTC.AB.CA (0)   ∂ $í ’d T ‡ûŒ≈ .   ˇˇns    SERVER  : FROM:<Jim_Gee@l66a.actc.ab.ca>  ∂ $í ’e T ‡üWÿ $   ˇˇns    SERVER  : TO:<Schroth@multics>∂ $í ’f T ‡™öW D   ˇˇns    MAILER  : From:<Network_Server.Daemon@ACTC_MULTICS.ACTC.AB.CA>∂ $í ’g T ‡´+˙ ,   ˇˇns    MAILER  : To:<Jim_Gee@L66A.ACTC.AB.CA>∂ $í ’h T ‡%Î )   ˇˇin    SMTP    : [ 0: 0:33] ACTC.AB.CA (0)   ∂ $í ’i T ‡'èc .   ˇˇns    SERVER  : FROM:<Jim_Gee@l66a.actc.ab.ca>  ∂ $í ’j T ‡(>a $   ˇˇns    SERVER  : TO:<Schroth@multics>∂ $í ’k T ‡3ªõ D   ˇˇns    MAILER  : From:<Network_Server.Daemon@ACTC_MULTICS.ACTC.AB.CA>∂ $í ’l T ‡4V ,   ˇˇns    MAILER  : To:<Jim_Gee@L66A.ACTC.AB.CA>∂ $í ’m T ‡∂Í— )   ˇˇin    SMTP    : [ 0: 0:35] ACTC.AB.CA (0)   ∂ $í ’n T ‡∏Y .   ˇˇns    SERVER  : FROM:<Jim_Gee@l66a.actc.ab.ca>  ∂ $í ’o T ‡∏”q $   ˇˇns    SERVER  : TO:<Schroth@multics>∂ $í ’p T ‡ƒo« D   ˇˇns    MAILER  : From:<Network_Server.Daemon@ACTC_MULTICS.ACTC.AB.CA>∂ $í ’q T ‡≈- ,   ˇˇns    MAILER  : To:<Jim_Gee@L66A.ACTC.AB.CA>∂ $í ’r T ·B…« )   ˇˇin    SMTP    : [ 0: 0:34] ACTC.AB.CA (0)   ∂ $í ’s T ·F∆ó .   ˇˇns    SERVER  : FROM:<Jim_Gee@l66a.actc.ab.ca>  ∂ $í ’t T ·GWè $   ˇˇns    SERVER  : TO:<Schroth@multics>∂ $í ’u T ·SF  D   ˇˇns    MAILER  : From:<Network_Server.Daemon@ACTC_MULTICS.ACTC.AB.CA>∂ $í ’v T ·TÏ∆ ,   ˇˇns    MAILER  : To:<Jim_Gee@L66A.ACTC.AB.CA>∂ $í ’w T ·’;{ )   ˇˇin    SMTP    : [ 0: 0:35] ACTC.AB.CA (0)   ∂ $í ’x T ·◊ì
 .   ˇˇns    SERVER  : FROM:<Jim_Gee@l66a.actc.ab.ca>  ∂ $í ’y T ·ÿ8û $   ˇˇns    SERVER  : TO:<Schroth@multics>∂ $í ’z T ·‰ˆ D   ˇˇns    MAILER  : From:<Network_Server.Daemon@ACTC_MULTICS.ACTC.AB.CA>∂ $í ’{ T ·‰∆ø ,   ˇˇns    MAILER  : To:<Jim_Gee@L66A.ACTC.AB.CA>∂ $í ’| T ·]  )   ˇˇin    SMTP    : [ 0: 0:32] ACTC.AB.CA (0)   ∂ $í ’} T ·_‰b .   ˇˇns    SERVER  : FROM:<Jim_Gee@l66a.actc.ab.ca>  ∂ $í ’~ T ·`q• $   ˇˇns    SERVER  : TO:<Schroth@multics>∂ $í ’ T ·fØî %   ˇˇin    IPX25   : NRESETIND read wakeup   ∂ $í ’Ä T ·f˙M %   ˇˇin    IPX25   : NRESETIND read wakeup   ∂ $í ’Å T ·{˙Ú D   ˇˇns    MAILER  : From:<Network_Server.Daemon@ACTC_MULTICS.ACTC.AB.CA>∂ $í ’Ç T ·|¬ï ,   ˇˇns    MAILER  : To:<Jim_Gee@L66A.ACTC.AB.CA>∂ $í ’É T ·˘í )   ˇˇin    SMTP    : [ 0: 0:34] ACTC.AB.CA (0)   ∂ $í ’Ñ T ·˝˘‰ .   ˇˇns    SERVER  : FROM:<Jim_Gee@l66a.actc.ab.ca>  ∂ $í ’Ö T ·˛b $   ˇˇns    SERVER  : TO:<Schroth@multics>∂ $í ’Ü T ‚Xª %   ˇˇin    IPX25   : NRESETIND read wakeup   ∂ $í ’á T ‚d· %   ˇˇin    IPX25   : NRESETIND read wakeup   ∂ $í ’à T ‚U2 D   ˇˇns    MAILER  : From:<Network_Server.Daemon@ACTC_MULTICS.ACTC.AB.CA>∂ $í ’â T ‚Êb ,   ˇˇns    MAILER  : To:<Jim_Gee@L66A.ACTC.AB.CA>∂ $í ’√ T Î≈3≥ )   ˇˇin    SMTP    : [ 0: 0:35] ACTC.AB.CA (0)   ∂ $í ’ƒ T Î…ÄÀ .   ˇˇns    SERVER  : FROM:<Jim_Gee@l66a.actc.ab.ca>  ∂ $í ’≈ T Î ÊÛ $   ˇˇns    SERVER  : TO:<Schroth@multics>∂ $í ’∆ T ÎŸä D   ˇˇns    MAILER  : From:<Network_Server.Daemon@ACTC_MULTICS.ACTC.AB.CA>∂ $í ’« T ÎŸπÜ ,   ˇˇns    MAILER  : To:<Jim_Gee@L66A.ACTC.AB.CA>∂ $í ’» T ÏWµ )   ˇˇin    SMTP    : [ 0: 0:34] ACTC.AB.CA (0)   ∂ $í ’… T ÏX€ß .   ˇˇns    SERVER  : FROM:<Jim_Gee@l66a.actc.ab.ca>  ∂ $í ’  T ÏY\¿ $   ˇˇns    SERVER  : TO:<Schroth@multics>∂ $í ’À T Ïfµr D   ˇˇns    MAILER  : From:<Network_Server.Daemon@ACTC_MULTICS.ACTC.AB.CA>∂ $í ’Ã T ÏgIs ,   ˇˇns    MAILER  : To:<Jim_Gee@L66A.ACTC.AB.CA>∂ $í ’Õ T Ï·}& )   ˇˇin    SMTP    : [ 0: 0:33] ACTC.AB.CA (0)   ∂ $í ’Œ T Ï‚øË .   ˇˇns    SERVER  : FROM:<Jim_Gee@l66a.actc.ab.ca>  ∂ $í ’œ T Ï„(„ $   ˇˇns    SERVER  : TO:<Schroth@multics>∂ $í ’– T ÏÈÀN %   ˇˇin    IPX25   : NRESETIND read wakeup   ∂ $í ’— T ÏÈÍ %   ˇˇin    IPX25   : NRESETIND read wakeup   ∂ $í ’“ T Ï≥ô D   ˇˇns    MAILER  : From:<Network_Server.Daemon@ACTC_MULTICS.ACTC.AB.CA>∂ $í ’” T ÏFF ,   ˇˇns    MAILER  : To:<Jim_Gee@L66A.ACTC.AB.CA>∂ $í ’‘ T Ï~“• )   ˇˇin    SMTP    : [ 0: 0:34] ACTC.AB.CA (0)   ∂ $í ’’ T Ï‹m .   ˇˇns    SERVER  : FROM:<Jim_Gee@l66a.actc.ab.ca>  ∂ $í ’÷ T ÏÄB≈ $   ˇˇns    SERVER  : TO:<Schroth@multics>∂ $í ’◊ T ÏíV D   ˇˇns    MAILER  : From:<Network_Server.Daemon@ACTC_MULTICS.ACTC.AB.CA>∂ $í ’ÿ T Ïí†à ,   ˇˇns    MAILER  : To:<Jim_Gee@L66A.ACTC.AB.CA>∂ $í ’Ÿ T Ìn∆ )   ˇˇin    SMTP    : [ 0: 0:35] ACTC.AB.CA (0)   ∂ $í ’⁄ T Ìv0 .   ˇˇns    SERVER  : FROM:<Jim_Gee@l66a.actc.ab.ca>  ∂ $í ’€ T ÌCÛ $   ˇˇns    SERVER  : TO:<Schroth@multics>∂ $í ’‹ T Ìí£ %   ˇˇin    IPX25   : NRESETIND read wakeup   ∂ $í ’› T Ìﬂ* %   ˇˇin    IPX25   : NRESETIND read wakeup   ∂ $í ’ﬁ T Ì5=¬ D   ˇˇns    MAILER  : From:<Network_Server.Daemon@ACTC_MULTICS.ACTC.AB.CA>∂ $í ’ﬂ T Ì5÷d ,   ˇˇns    MAILER  : To:<Jim_Gee@L66A.ACTC.AB.CA>∂ $í ’‡ T ÌØè. )   ˇˇin    SMTP    : [ 0: 0:34] ACTC.AB.CA (0)   ∂ $í ’· T Ì±j“ .   ˇˇns    SERVER  : FROM:<Jim_Gee@l66a.actc.ab.ca>  ∂ $í ’‚ T Ì±–t $   ˇˇns    SERVER  : TO:<Schroth@multics>∂ $í ’„ T Ì√ã D   ˇˇns    MAILER  : From:<Network_Server.Daemon@ACTC_MULTICS.ACTC.AB.CA>∂ $í ’‰ T ÌƒœZ ,   ˇˇns    MAILER  : To:<Jim_Gee@L66A.ACTC.AB.CA>∂ $í ’Â T ÌAaˆ )   ˇˇin    SMTP    : [ 0: 0:35] ACTC.AB.CA (0)   ∂ $í ’Ê T ÌC)ú .   ˇˇns    SERVER  : FROM:<Jim_Gee@l66a.actc.ab.ca>  ∂ $í ’Á T ÌCñ≠ $   ˇˇns    SERVER  : TO:<Schroth@multics>∂ $í ’Ë T ÌWIõ D   ˇˇns    MAILER  : From:<Network_Server.Daemon@ACTC_MULTICS.ACTC.AB.CA>∂ $í ’È T ÌX˝B ,   ˇˇns    MAILER  : To:<Jim_Gee@L66A.ACTC.AB.CA>∂ $í ’Í T Ì’tÃ )   ˇˇin    SMTP    : [ 0: 0:36] ACTC.AB.CA (0)   ∂ $í ’Î T ÌŸW .   ˇˇns    SERVER  : FROM:<Jim_Gee@l66a.actc.ab.ca>  ∂ $í ’Ï T Ì⁄ºœ $   ˇˇns    SERVER  : TO:<Schroth@multics>∂ $í ’Ì T ÌÏÔJ D   ˇˇns    MAILER  : From:<Network_Server.Daemon@ACTC_MULTICS.ACTC.AB.CA>∂ $í ’Ó T ÌÌÉ- ,   ˇˇns    MAILER  : To:<Jim_Gee@L66A.ACTC.AB.CA>∂ $í ’Ô T Ócä )   ˇˇin    SMTP    : [ 0: 0:33] ACTC.AB.CA (0)   ∂ $í ’ T Óeäû .   ˇˇns    SERVER  : FROM:<Jim_Gee@l66a.actc.ab.ca>  ∂ $í ’Ò T ÓeÚ' $   ˇˇns    SERVER  : TO:<Schroth@multics>∂ $í ’Ú T Ót9_ D   ˇˇns    MAILER  : From:<Network_Server.Daemon@ACTC_MULTICS.ACTC.AB.CA>∂ $í ’Û T Óu’Z ,   ˇˇns    MAILER  : To:<Jim_Gee@L66A.ACTC.AB.CA>∂ $í ’Ù T ÓÓu )   ˇˇin    SMTP    : [ 0: 0:33] ACTC.AB.CA (0)   ∂ $í ’ı T Ó4Ã .   ˇˇns    SERVER  : FROM:<Jim_Gee@l66a.actc.ab.ca>  ∂ $í ’ˆ T Ó¨h $   ˇˇns    SERVER  : TO:<Schroth@multics>∂ $í ’˜ T Ó˛Y∂ D   ˇˇns    MAILER  : From:<Network_Server.Daemon@ACTC_MULTICS.ACTC.AB.CA>∂ $í ’¯ T ÓˇÈå ,   ˇˇns    MAILER  : To:<Jim_Gee@L66A.ACTC.AB.CA>∂ $í ’˘ T Ópyj )   ˇˇin    SMTP    : [ 0: 0:31] ACTC.AB.CA (0)   ∂ $í ’˙ T Óre^ .   ˇˇns    SERVER  : FROM:<Jim_Gee@l66a.actc.ab.ca>  ∂ $í ’˚ T ÓsËn $   ˇˇns    SERVER  : TO:<Schroth@multics>∂ $í ’¸ T ÓÑîÂ D   ˇˇns    MAILER  : From ˇˇns      ∂ $í ÷H Tj=: 3   ˇˇns    SMTP Server: Starting TCP service on port 25. ∂ $í ÷I Tj?6Y    ˇˇns    r 07:26 3.222 45  ∂ $í ÷J Tj??Á    ˇˇns      ∂ $í ÷K TjS0 0   ˇˇin    IPX25   : Waiting for X25 connect request.∂ $í ÷L TmÅnE 
   ˇˇin    QUIT  ∂ $í ÷M TmÅ)I    ˇˇin    r 07:33 1.017 15 level 2  ∂ $í ÷N TmÅ1„    ˇˇin      ∂ $í ÷O TmÀ% 6   ˇˇin    Internet.Daemon (in) logged in via login daemon.  ∂ $í ÷P TmÀÓ    ˇˇin      ∂ $í ÷Q Tm‘} D   ˇˇin          Waiting for Network_Mailer and Network_Server to logout.∂ $í ÷R TmÈ
n    ˇˇin      ∂ $í ÷S TmÈ⁄ !   ˇˇin    * Begin Internet Services *   ∂ $í ÷T TmÈÏ    ˇˇin      ∂ $í ÷U TmÍO˝ &   ˇˇin    < Start Network Driver To Mars >  ∂ $í ÷V TmÍW∏    ˇˇin      ∂ $í ÷W TmÎï $   ˇˇin    IP X25 Driver Service started.∂ $í ÷X TmÎ$£ &   ˇˇin    IP X25 Listener Service started.  ∂ $í ÷Y TmÎEW    ˇˇin      ∂ $í ÷Z TmÎMy    ˇˇin    < Start TCP Service > ∂ $í ÷[ TmÏS\    ˇˇin      ∂ $í ÷\ TmÏ[ﬁ    ˇˇin    < Start UDP Service > ∂ $í ÷] TmÏì    ˇˇin      ∂ $í ÷^ TmÏú    ˇˇin    < Start ICMP Service >∂ $í ÷_ TmÌ©    ˇˇin      ∂ $í ÷` TmÌ∞±    ˇˇin    < Start TELNET Service  > ∂ $í ÷a TmÌ∏j    ˇˇin      ∂ $í ÷b TmÓ@ˆ 5   ˇˇin    TELNET Server: Starting TCP service on port 23.   ∂ $í ÷c TmÓIg    ˇˇin      ∂ $í ÷d TmÓRÛ    ˇˇin    < Start FINGER Service >  ∂ $í ÷e TmÓ[    ˇˇin      ∂ $í ÷f TmÓøf 5   ˇˇin    FINGER Server: Starting TCP service on port 79.   ∂ $í ÷g TmÓ«Ò    ˇˇin      ∂ $í ÷h TmÓŒÎ    ˇˇin    < Start FTP Service > ∂ $í ÷i TmÓ÷    ˇˇin      ∂ $í ÷j TmÓRë 2   ˇˇin    FTP Server: Starting TCP service on port 21.  ∂ $í ÷k TmÓ]ô    ˇˇin      ∂ $í ÷l TmÓdÂ    ˇˇin    < Start CHARGEN Service > ∂ $í ÷m TmÓl«    ˇˇin      ∂ $í ÷n TmÔµÆ 6   ˇˇin    CHARGEN Server: Starting UDP service on port 19.  ∂ $í ÷o TmÔŸ†    ˇˇin      ∂ $í ÷p TmÔ‡Ó    ˇˇin    < Start DAYTIME Service > ∂ $í ÷q TmÔË•    ˇˇin      ∂ $í ÷r TmÔê 6   ˇˇin    DAYTIME Server: Starting UDP service on port 13.  ∂ $í ÷s TmÔ=9    ˇˇin      ∂ $í ÷t TmÔD¨    ˇˇin    < Start RECHO Service >   ∂ $í ÷u TmÔL    ˇˇin      ∂ $í ÷v TmÔzH 3   ˇˇin    RECHO Server: Starting UDP service on port 7. ∂ $í ÷w TmÔÇº    ˇˇin      ∂ $í ÷x TmÔâÕ    ˇˇin    < Start RLOGIN Service >  ∂ $í ÷y TmÔë¿    ˇˇin      ∂ $í ÷z Tm¿A 6   ˇˇin    RLOGIN Server: Starting TCP service on port 513.  ∂ $í ÷{ Tm„ñ    ˇˇin      ∂ $í ÷| TmÎ 9   ˇˇin    < Start the Network_Mailer/Network_Server daemons >   ∂ $í ÷} TmÚ‘    ˇˇin      ∂ $í ÷~ Tm˘»,    ˇˇin      ∂ $í ÷ Tm˘„ƒ '   ˇˇin    * Internet Services Established * ∂ $í ÷Ä Tm˘Ó¨    ˇˇin    r 07:34 5.618 47  ∂ $í ÷Å Tm˘)_    ˇˇin      ∂ $í ÷Ç Tm˚a <   ˇˇin    IPX25   : (New) Connect wakeup received from devx 252.∂ $í ÷É Tm˚lE 4   ˇˇin    IPX25   : (New) Connect complete for devx 252.∂ $í ÷Ñ Tmbà    ˇˇns      ∂ $í ÷Ö Tmj∫    ˇˇns    < Start SMTP Service >∂ $í ÷Ü Tmr]    ˇˇns      ∂ $í ÷á Tmw© 3   ˇˇns    SMTP Server: Starting TCP service on port 25. ∂ $í ÷à Tmô)    ˇˇns    r 07:34 3.053 36  ∂ $í ÷â Tm¢≈    ˇˇns      ∂ $í ÷ä TmŸ5Æ ;   ˇˇnm    MAILER  : From:<Falck.Office@ACTC_MULTICS.ACTC.AB.CA> ∂ $í ÷ã Tm⁄Ùö 5   ˇˇnm    MAILER  : To:<62146@UCDASVM1.ADMIN.UCALGARY.CA>   ∂ $í ÷å Tn– )   ˇˇin    SMTP    : [ 0: 1: 7] ACTC.AB.CA (3)   ∂ $í ÷ç TnÃ_ @   ˇˇnm    MAILER  : From:<Thibodeaux.SiteSA@ACTC_MULTICS.ACTC.AB.CA>∂ $í ÷é Tnd¿ ?   ˇˇnm    MAILER  : To:<@ACTC.AB.CA:Thibodeaux@DOCKMASTER.NCSC.MIL> ∂ $í ÷è Tqüñ∞ ,   ˇˇin    TELNET  : [ 0: 7:25] 192.94.126.50 (3)∂ $í ÷ê Tq≥åÃ )   ˇˇin    SMTP    : [ 0: 8:33] ACTC.AB.CA (4)   ∂ $í ÷ë Tq∑·8 @   ˇˇnm    MAILER  : From:<Thibodeaux.SiteSA@ACTC_MULTICS.ACTC.AB.CA>∂ $í ÷í Tq∏ö˜ ?   ˇˇnm    MAILER  : To:<@ACTC.AB.CA:Thibodeaux@DOCKMASTER.NCSC.MIL> ∂ $í ÷ì Tsæî )   ˇˇin    SMTP    : [ 0: 3:46] ACTC.AB.CA (0)   6] ACTC.AB.CA (0)   ∂ $í ÷  Tt´°! P   ˇˇnm    MAILER  : From:<@ACTC_MULTICS.ACTC.AB.CA:/CENTRAL.WGLACTC@l66a.actc.ab.ca>∂ $í ÷À Tt¨≤À ,   ˇˇnm    MAILER  : To:<Dave.Schroth@ACTC.AB.CA>∂ $í ÷Ã Tt¡- )   ˇˇin    SMTP    : [ 0: 0: 6] ACTC.AB.CA (0)   ∂ $í ÷Õ Tt≈2à ;   ˇˇnm    MAILER  : From:<Post.Multics@ACTC_MULTICS.ACTC.AB.CA> ∂ $í ÷Œ Tt∆Ê &   ˇˇnm    MAILER  : To:<gfilyk@HALNET.COM>  ∂ $í ÷œ TtÔÑ )   ˇˇin    SMTP    : [ 0: 0:12] ACTC.AB.CA (0)   ∂ $í ÷– TtÛw ?   ˇˇnm    MAILER  : From:<Fournier.Multics@ACTC_MULTICS.ACTC.AB.CA> ∂ $í ÷— TtÛ  ,   ˇˇnm    MAILER  : To:<umkeach@CC.UMANITOBA.CA>∂ $í ÷“ Tu˜ )   ˇˇin    SMTP    : [ 0: 0: 8] ACTC.AB.CA (0)   ∂ $í ÷” TuÍ P   ˇˇnm    MAILER  : From:<@ACTC_MULTICS.ACTC.AB.CA:/CENTRAL.WGLACTC@l66a.actc.ab.ca>∂ $í ÷‘ Tuºv ,   ˇˇnm    MAILER  : To:<Dave.Schroth@ACTC.AB.CA>∂ $í ÷’ Tu2ã§ )   ˇˇin    SMTP    : [ 0: 0: 9] ACTC.AB.CA (0)   ∂ $í ÷÷ Tu6B= ?   ˇˇnm    MAILER  : From:<Fournier.Multics@ACTC_MULTICS.ACTC.AB.CA> ∂ $í ÷◊ Tu7˜‹ '   ˇˇnm    MAILER  : To:<help@ANON.PENET.FI> ∂ $í ÷ÿ Tu@4Ô )   ˇˇin    SMTP    : [ 0: 0: 3] ACTC.AB.CA (0)   ∂ $í ÷Ÿ TuD§> ?   ˇˇnm    MAILER  : From:<Fournier.Multics@ACTC_MULTICS.ACTC.AB.CA> ∂ $í ÷⁄ TuEQü -   ˇˇnm    MAILER  : To:<umkeach@CCU.UMANITOBA.CA>   ∂ $í ÷€ TuaõŒ )   ˇˇin    SMTP    : [ 0: 0: 8] ACTC.AB.CA (0)   ∂ $í ÷‹ Tuhÿ ?   ˇˇnm    MAILER  : From:<Maucieri.Multics@ACTC_MULTICS.ACTC.AB.CA> ∂ $í ÷› Tuiåå (   ˇˇnm    MAILER  : To:<magar@SW.STATUS.COM>∂ $í ÷ﬁ Tuùí_ )   ˇˇin    SMTP    : [ 0: 0:14] ACTC.AB.CA (0)   ∂ $í ÷ﬂ Tu£y∞ K   ˇˇnm    MAILER  : From:<@ACTC_MULTICS.ACTC.AB.CA:SMTP_Mailer@l66a.actc.ab.ca> ∂ $í ÷‡ Tu•\ˆ ,   ˇˇnm    MAILER  : To:<Dave.Schroth@ACTC.AB.CA>∂ $í ÷· TuÆ∫= )   ˇˇns    SERVER  : From:<mailer-daemon@actc>   ∂ $í ÷‚ TuØ¶ 2   ˇˇns    SERVER  : To:<Maucieri.Multics@ACTC_MULTICS>  ∂ $í ÷„ TuΩ⁄Æ )   ˇˇin    SMTP    : [ 0: 0: 5] ACTC.AB.CA (0)   ∂ $í ÷‰ TuÍzÓ )   ˇˇin    SMTP    : [ 0: 0:20] ACTC.AB.CA (0)   ∂ $í ÷Â TuÓÍÿ G   ˇˇnm    MAILER  : From:<@ACTC_MULTICS.ACTC.AB.CA:Jim_Gee@l66a.actc.ab.ca> ∂ $í ÷Ê TuÔ1• ,   ˇˇnm    MAILER  : To:<Dave.Schroth@ACTC.AB.CA>∂ $í ÷Á TuK∑ )   ˇˇin    SMTP    : [ 0: 0:25] ACTC.AB.CA (0)   ∂ $í ÷Ë TuNY G   ˇˇnm    MAILER  : From:<@ACTC_MULTICS.ACTC.AB.CA:Jim_Gee@l66a.actc.ab.ca> ∂ $í ÷È TuO† ,   ˇˇnm    MAILER  : To:<Dave.Schroth@ACTC.AB.CA>∂ $í ÷Í Tu±ª )   ˇˇin    SMTP    : [ 0: 0:26] ACTC.AB.CA (0)   ∂ $í ÷Î Tuµü" G   ˇˇnm    MAILER  : From:<@ACTC_MULTICS.ACTC.AB.CA:Jim_Gee@l66a.actc.ab.ca> ∂ $í ÷Ï Tu∂øø ,   ˇˇnm    MAILER  : To:<Dave.Schroth@ACTC.AB.CA>∂ $í ÷Ì Tv' )   ˇˇin    SMTP    : [ 0: 0:25] ACTC.AB.CA (0)   ∂ $í ÷Ó TvÜ‘ G   ˇˇnm    MAILER  : From:<@ACTC_MULTICS.ACTC.AB.CA:Jim_Gee@l66a.actc.ab.ca> ∂ $í ÷Ô Tv¶Y ,   ˇˇnm    MAILER  : To:<Dave.Schroth@ACTC.AB.CA>∂ $í ÷ Tvk∫º +   ˇˇns    SERVER  : From:<magar@sw.stratus.com> ∂ $í ÷Ò TvlÙ˚ %   ˇˇns    SERVER  : To:<maucieri@multics>   ∂ $í ÷Ú Tvv4f )   ˇˇin    SMTP    : [ 0: 0: 3] ACTC.AB.CA (0)   ∂ $í ÷Û Tvx…n )   ˇˇin    SMTP    : [ 0: 0:27] ACTC.AB.CA (0)   ∂ $í ÷Ù Tv|∞ G   ˇˇnm    MAILER  : From:<@ACTC_MULTICS.ACTC.AB.CA:Jim_Gee@l66a.actc.ab.ca> ∂ $í ÷ı Tv~f ,   ˇˇnm    MAILER  : To:<Dave.Schroth@ACTC.AB.CA>∂ $í ÷ˆ Tv‘Ô )   ˇˇin    SMTP    : [ 0: 0:24] ACTC.AB.CA (0)   ∂ $í ÷˜ Tv◊é G   ˇˇnm    MAILER  : From:<@ACTC_MULTICS.ACTC.AB.CA:Jim_Gee@l66a.actc.ab.ca> ∂ $í ÷¯ TvŸ	Ö ,   ˇˇnm    MAILER  : To:<Dave.Schroth@ACTC.AB.CA>∂ $í ÷˘ Tv?öÛ )   ˇˇin    SMTP    : [ 0: 0:28] ACTC.AB.CA (0)   ∂ $í ÷˙ TvCıQ G   ˇˇnm    MAILER  : From:<@ACTC_MULTICS.ACTC.AB.CA:Jim_Gee@l66a.actc.ab.ca> ∂ $í ÷˚ TvD∞ ,   ˇˇnm    MAILER  : To:<Dave.Schroth@ACTC.AB.CA>∂ $í ÷¸ Tv®ÛÜ )   ˇˇin    SMTP    : [ 0: 0:27] ACTC.AB.CA (0)   ∂ $í ÷˝ Tv´ë≠ G   ˇˇnm    MAILER  : From:<@ACTC_MULTICS.ACTC.AB.CA:Jim_Gee@l66a.actc.ab.ca> ∂ $í ÷˛ Tv¨´a ,   ˇˇnm    MAILER  : To:<Dave.Schroth@ACTC.AB.CA>∂ $í ÷ˇ Tw )   ˇˇin    SMTP    : [ 0: 0:27] ATo:<Dave.Schroth@ACTC.AB.CA>∂ $í ÷5 TzJˆ§ )   ˇˇin    SMTP    : [ 0: 0:29] ACTC.AB.CA (0)   ∂ $í ÷6 TzNik G   ˇˇnm    MAILER  : From:<@ACTC_MULTICS.ACTC.AB.CA:Jim_Gee@l66a.actc.ab.ca> ∂ $í ÷7 TzOêö ,   ˇˇnm    MAILER  : To:<Dave.Schroth@ACTC.AB.CA>∂ $í ÷8 TzµÇÁ )   ˇˇin    SMTP    : [ 0: 0:28] ACTC.AB.CA (0)   ∂ $í ÷9 Tz∫‚ G   ˇˇnm    MAILER  : From:<@ACTC_MULTICS.ACTC.AB.CA:Jim_Gee@l66a.actc.ab.ca> ∂ $í ÷: TzºZ ,   ˇˇnm    MAILER  : To:<Dave.Schroth@ACTC.AB.CA>∂ $í ÷; T{!è )   ˇˇin    SMTP    : [ 0: 0:28] ACTC.AB.CA (0)   ∂ $í ÷< T{&pı G   ˇˇnm    MAILER  : From:<@ACTC_MULTICS.ACTC.AB.CA:Jim_Gee@l66a.actc.ab.ca> ∂ $í ÷= T{'Ñ„ ,   ˇˇnm    MAILER  : To:<Dave.Schroth@ACTC.AB.CA>∂ $í ÷> T{ë›t )   ˇˇin    SMTP    : [ 0: 0:29] ACTC.AB.CA (0)   ∂ $í ÷? T{îﬂ G   ˇˇnm    MAILER  : From:<@ACTC_MULTICS.ACTC.AB.CA:Jim_Gee@l66a.actc.ab.ca> ∂ $í ÷@ T{ï˘
 ,   ˇˇnm    MAILER  : To:<Dave.Schroth@ACTC.AB.CA>∂ $í ÷A T{¸«[ )   ˇˇin    SMTP    : [ 0: 0:28] ACTC.AB.CA (0)   ∂ $í ÷B T{≈k G   ˇˇnm    MAILER  : From:<@ACTC_MULTICS.ACTC.AB.CA:Jim_Gee@l66a.actc.ab.ca> ∂ $í ÷C T{Ël ,   ˇˇnm    MAILER  : To:<Dave.Schroth@ACTC.AB.CA>∂ $í ÷D T{h> )   ˇˇin    SMTP    : [ 0: 0:28] ACTC.AB.CA (0)   ∂ $í ÷E T{v<Ú G   ˇˇnm    MAILER  : From:<@ACTC_MULTICS.ACTC.AB.CA:Jim_Gee@l66a.actc.ab.ca> ∂ $í ÷F T{wVC ,   ˇˇnm    MAILER  : To:<Dave.Schroth@ACTC.AB.CA>∂ $í ÷G T{‹À“ )   ˇˇin    SMTP    : [ 0: 0:30] ACTC.AB.CA (0)   ∂ $í ÷H T{·Ëj G   ˇˇnm    MAILER  : From:<@ACTC_MULTICS.ACTC.AB.CA:Jim_Gee@l66a.actc.ab.ca> ∂ $í ÷I T{‚	Y ,   ˇˇnm    MAILER  : To:<Dave.Schroth@ACTC.AB.CA>∂ $í ÷J T|DV& )   ˇˇin    SMTP    : [ 0: 0:27] ACTC.AB.CA (0)   ∂ $í ÷K T|Lâj G   ˇˇnm    MAILER  : From:<@ACTC_MULTICS.ACTC.AB.CA:Jim_Gee@l66a.actc.ab.ca> ∂ $í ÷L T|Mﬁ§ ,   ˇˇnm    MAILER  : To:<Dave.Schroth@ACTC.AB.CA>∂ $í ÷M T|W +   ˇˇns    SERVER  : From:<magar@sw.stratus.com> ∂ $í ÷N T|Xªk $   ˇˇns    SERVER  : To:<willott@multics>∂ $í ÷O T|fÔÔ )   ˇˇin    SMTP    : [ 0: 0: 4] ACTC.AB.CA (0)   ∂ $í ÷P T|†˙â )   ˇˇin    SMTP    : [ 0: 0:24] ACTC.AB.CA (0)   ∂ $í ÷Q T|§új G   ˇˇnm    MAILER  : From:<@ACTC_MULTICS.ACTC.AB.CA:Jim_Gee@l66a.actc.ab.ca> ∂ $í ÷R T|•∂⁄ ,   ˇˇnm    MAILER  : To:<Dave.Schroth@ACTC.AB.CA>∂ $í ÷S T|Ô« )   ˇˇin    SMTP    : [ 0: 0:28] ACTC.AB.CA (0)   ∂ $í ÷T T|ãn G   ˇˇnm    MAILER  : From:<@ACTC_MULTICS.ACTC.AB.CA:Jim_Gee@l66a.actc.ab.ca> ∂ $í ÷U T|•  ,   ˇˇnm    MAILER  : To:<Dave.Schroth@ACTC.AB.CA>∂ $í ÷V T|vòÌ )   ˇˇin    SMTP    : [ 0: 0:28] ACTC.AB.CA (0)   ∂ $í ÷W T|zu; G   ˇˇnm    MAILER  : From:<@ACTC_MULTICS.ACTC.AB.CA:Jim_Gee@l66a.actc.ab.ca> ∂ $í ÷X T|{ì¶ ,   ˇˇnm    MAILER  : To:<Dave.Schroth@ACTC.AB.CA>∂ $í ÷Y T|◊∞ )   ˇˇin    SMTP    : [ 0: 0:25] ACTC.AB.CA (0)   ∂ $í ÷Z T|Â—ﬁ G   ˇˇnm    MAILER  : From:<@ACTC_MULTICS.ACTC.AB.CA:Jim_Gee@l66a.actc.ab.ca> ∂ $í ÷[ T|ÊÏ* ,   ˇˇnm    MAILER  : To:<Dave.Schroth@ACTC.AB.CA>∂ $í ÷\ T}:ÿz )   ˇˇin    SMTP    : [ 0: 0:26] ACTC.AB.CA (0)   ∂ $í ÷] T}>	Ò G   ˇˇnm    MAILER  : From:<@ACTC_MULTICS.ACTC.AB.CA:Jim_Gee@l66a.actc.ab.ca> ∂ $í ÷^ T}?‰ ,   ˇˇnm    MAILER  : To:<Dave.Schroth@ACTC.AB.CA>∂ $í ÷_ T}°X  )   ˇˇin    SMTP    : [ 0: 0:27] ACTC.AB.CA (0)   ∂ $í ÷` T}§†ﬂ G   ˇˇnm    MAILER  : From:<@ACTC_MULTICS.ACTC.AB.CA:Jim_Gee@l66a.actc.ab.ca> ∂ $í ÷a T}•¥Ê ,   ˇˇnm    MAILER  : To:<Dave.Schroth@ACTC.AB.CA>∂ $í ÷b T}ˇÿ )   ˇˇin    SMTP    : [ 0: 0:28] ACTC.AB.CA (0)   ∂ $í ÷c T}/˜ G   ˇˇnm    MAILER  : From:<@ACTC_MULTICS.ACTC.AB.CA:Jim_Gee@l66a.actc.ab.ca> ∂ $í ÷d T}L√ ,   ˇˇnm    MAILER  : To:<Dave.Schroth@ACTC.AB.CA>∂ $í ÷e T}z4! )   ˇˇin    SMTP    : [ 0: 0:29] ACTC.AB.CA (0)   ∂ $í ÷f T}}√^ G   ˇˇnm    MAILER  : From:<@ACTC_MULTICS.ACTC.AB.CA:Jim_Gee@l66a.actc.ab.ca> ∂ $í ÷g T}~Ï% ,   ˇˇnm    MAILER  : To:<Dave.Schroth@ACTC.AB.CA>∂ $í ÷h T}ﬁÓÔ )   ˇˇin    SMTP    : [ 0: 0:26] ACTC.AB.CA (0)   ∂ $í ÷i T}‚ıZ G   ˇˇnm    MAILER  : From:<@ACTC_MULTICS.ACTC.AB.CA:Jim_Gee@l66a.actc.ab.From:<@ACTC_MULTICS.ACTC.AB.CA:Jim_Gee@l66a.actc.ab.ca> ∂ $í ÷† TÅlØ ,   ˇˇnm    MAILER  : To:<Dave.Schroth@ACTC.AB.CA>∂ $í ÷° TÅj≠# )   ˇˇin    SMTP    : [ 0: 0:27] ACTC.AB.CA (0)   ∂ $í ÷¢ TÅoF  G   ˇˇnm    MAILER  : From:<@ACTC_MULTICS.ACTC.AB.CA:Jim_Gee@l66a.actc.ab.ca> ∂ $í ÷£ TÅpÉK ,   ˇˇnm    MAILER  : To:<Dave.Schroth@ACTC.AB.CA>∂ $í ÷§ TÅz®Ô )   ˇˇin    SMTP    : [ 0: 0: 4] ACTC.AB.CA (0)   ∂ $í ÷• TÅ~ôA G   ˇˇnm    MAILER  : From:<@ACTC_MULTICS.ACTC.AB.CA:Jim_Gee@l66a.actc.ab.ca> ∂ $í ÷¶ TÅ-  ,   ˇˇnm    MAILER  : To:<Dave.Schroth@ACTC.AB.CA>∂ $í ÷ß TÅ±b= )   ˇˇin    SMTP    : [ 0: 0:14] ACTC.AB.CA (0)   ∂ $í ÷® TÅ¥
 G   ˇˇnm    MAILER  : From:<@ACTC_MULTICS.ACTC.AB.CA:Jim_Gee@l66a.actc.ab.ca> ∂ $í ÷© TÅµ)t ,   ˇˇnm    MAILER  : To:<Dave.Schroth@ACTC.AB.CA>∂ $í ÷™ TÅ7 )   ˇˇin    SMTP    : [ 0: 0:24] ACTC.AB.CA (0)   ∂ $í ÷´ TÅ(º G   ˇˇnm    MAILER  : From:<@ACTC_MULTICS.ACTC.AB.CA:Jim_Gee@l66a.actc.ab.ca> ∂ $í ÷¨ TÅAœ ,   ˇˇnm    MAILER  : To:<Dave.Schroth@ACTC.AB.CA>∂ $í ÷≠ TÅnœí )   ˇˇin    SMTP    : [ 0: 0:24] ACTC.AB.CA (0)   ∂ $í ÷Æ TÅsái G   ˇˇnm    MAILER  : From:<@ACTC_MULTICS.ACTC.AB.CA:Jim_Gee@l66a.actc.ab.ca> ∂ $í ÷Ø TÅtÊ≠ ,   ˇˇnm    MAILER  : To:<Dave.Schroth@ACTC.AB.CA>∂ $í ÷∞ TÅ⁄m¸ )   ˇˇin    SMTP    : [ 0: 0:28] ACTC.AB.CA (0)   ∂ $í ÷± TÅﬂjZ G   ˇˇnm    MAILER  : From:<@ACTC_MULTICS.ACTC.AB.CA:Jim_Gee@l66a.actc.ab.ca> ∂ $í ÷≤ TÅ‡ Ó ,   ˇˇnm    MAILER  : To:<Dave.Schroth@ACTC.AB.CA>∂ $í ÷≥ TÇCØ• )   ˇˇin    SMTP    : [ 0: 0:27] ACTC.AB.CA (0)   ∂ $í ÷¥ TÇGY	 G   ˇˇnm    MAILER  : From:<@ACTC_MULTICS.ACTC.AB.CA:Jim_Gee@l66a.actc.ab.ca> ∂ $í ÷µ TÇHáõ ,   ˇˇnm    MAILER  : To:<Dave.Schroth@ACTC.AB.CA>∂ $í ÷∂ TÇ´c )   ˇˇin    SMTP    : [ 0: 0:27] ACTC.AB.CA (0)   ∂ $í ÷∑ TÇØ)e G   ˇˇnm    MAILER  : From:<@ACTC_MULTICS.ACTC.AB.CA:Jim_Gee@l66a.actc.ab.ca> ∂ $í ÷∏ TÇ∞d- ,   ˇˇnm    MAILER  : To:<Dave.Schroth@ACTC.AB.CA>∂ $í ÷π TÇ¬L )   ˇˇin    SMTP    : [ 0: 0:27] ACTC.AB.CA (0)   ∂ $í ÷∫ TÇ≠ú G   ˇˇnm    MAILER  : From:<@ACTC_MULTICS.ACTC.AB.CA:Jim_Gee@l66a.actc.ab.ca> ∂ $í ÷ª TÇ¬° ,   ˇˇnm    MAILER  : To:<Dave.Schroth@ACTC.AB.CA>∂ $í ÷º TÇv√Õ )   ˇˇin    SMTP    : [ 0: 0:26] ACTC.AB.CA (0)   ∂ $í ÷Ω TÇzx G   ˇˇnm    MAILER  : From:<@ACTC_MULTICS.ACTC.AB.CA:Jim_Gee@l66a.actc.ab.ca> ∂ $í ÷æ TÇ{öJ ,   ˇˇnm    MAILER  : To:<Dave.Schroth@ACTC.AB.CA>∂ $í ÷ø TÇÀnö )   ˇˇin    SMTP    : [ 0: 0:22] ACTC.AB.CA (0)   ∂ $í ÷¿ TÇœa≠ G   ˇˇnm    MAILER  : From:<@ACTC_MULTICS.ACTC.AB.CA:Jim_Gee@l66a.actc.ab.ca> ∂ $í ÷¡ TÇ–z% ,   ˇˇnm    MAILER  : To:<Dave.Schroth@ACTC.AB.CA>∂ $í ÷¬ TÉ5Às )   ˇˇin    SMTP    : [ 0: 0:28] ACTC.AB.CA (0)   ∂ $í ÷√ TÉ:@d G   ˇˇnm    MAILER  : From:<@ACTC_MULTICS.ACTC.AB.CA:Jim_Gee@l66a.actc.ab.ca> ∂ $í ÷ƒ TÉ;Wo ,   ˇˇnm    MAILER  : To:<Dave.Schroth@ACTC.AB.CA>∂ $í ÷≈ TÉû≤ )   ˇˇin    SMTP    : [ 0: 0:27] ACTC.AB.CA (0)   ∂ $í ÷∆ TÉ°dH G   ˇˇnm    MAILER  : From:<@ACTC_MULTICS.ACTC.AB.CA:Jim_Gee@l66a.actc.ab.ca> ∂ $í ÷« TÉ¢°( ,   ˇˇnm    MAILER  : To:<Dave.Schroth@ACTC.AB.CA>∂ $í ÷» TÉ´Ç )   ˇˇin    SMTP    : [ 0: 0:27] ACTC.AB.CA (0)   ∂ $í ÷… TÉ	ç{ G   ˇˇnm    MAILER  : From:<@ACTC_MULTICS.ACTC.AB.CA:Jim_Gee@l66a.actc.ab.ca> ∂ $í ÷  TÉ
™) ,   ˇˇnm    MAILER  : To:<Dave.Schroth@ACTC.AB.CA>∂ $í ÷À TÉtg\ )   ˇˇin    SMTP    : [ 0: 0:29] ACTC.AB.CA (0)   ∂ $í ÷Ã TÉx{f G   ˇˇnm    MAILER  : From:<@ACTC_MULTICS.ACTC.AB.CA:Jim_Gee@l66a.actc.ab.ca> ∂ $í ÷Õ TÉyë« ,   ˇˇnm    MAILER  : To:<Dave.Schroth@ACTC.AB.CA>∂ $í ÷Œ TÉﬂö! )   ˇˇin    SMTP    : [ 0: 0:28] ACTC.AB.CA (0)   ∂ $í ÷œ TÉ‚˘ G   ˇˇnm    MAILER  : From:<@ACTC_MULTICS.ACTC.AB.CA:Jim_Gee@l66a.actc.ab.ca> ∂ $í ÷– TÉ„+ ,   ˇˇnm    MAILER  : To:<Dave.Schroth@ACTC.AB.CA>∂ $í ÷— TÑ:È⁄ )   ˇˇin    SMTP    : [ 0: 0:24] ACTC.AB.CA (0)   ∂ $í ÷“ TÑ=åQ G   ˇˇnm    MAILER  : From:<@ACTC_MULTICS.ACTC.AB.CA:Jim_Gee@l66a.actc.ab.ca> ∂ $í ÷” TÑ>ßJ ,   ˇˇnm    MAILER  : To:<Dave.Schroth@ACTC.AB.CA>∂ $í ÷‘ TÑ§Öd )   ˇˇin   ,   ˇˇnm    MAILER  : To:<Dave.Schroth@ACTC.AB.CA>∂ $í ◊
 TÖ˘.è )   ˇˇin    SMTP    : [ 0: 0:27] ACTC.AB.CA (0)   ∂ $í ◊ TÖ˝6™ G   ˇˇnm    MAILER  : From:<@ACTC_MULTICS.ACTC.AB.CA:Jim_Gee@l66a.actc.ab.ca> ∂ $í ◊ TÖ˛Jf ,   ˇˇnm    MAILER  : To:<Dave.Schroth@ACTC.AB.CA>∂ $í ◊ TÜ]›î )   ˇˇin    SMTP    : [ 0: 0:26] ACTC.AB.CA (0)   ∂ $í ◊ TÜa¯ G   ˇˇnm    MAILER  : From:<@ACTC_MULTICS.ACTC.AB.CA:Jim_Gee@l66a.actc.ab.ca> ∂ $í ◊ TÜb6 ,   ˇˇnm    MAILER  : To:<Dave.Schroth@ACTC.AB.CA>∂ $í ◊ TÜ…T )   ˇˇin    SMTP    : [ 0: 0:28] ACTC.AB.CA (0)   ∂ $í ◊ TÜÒŸê G   ˇˇnm    MAILER  : From:<@ACTC_MULTICS.ACTC.AB.CA:Jim_Gee@l66a.actc.ab.ca> ∂ $í ◊ TÜÚ≤ ,   ˇˇnm    MAILER  : To:<Dave.Schroth@ACTC.AB.CA>∂ $í ◊ TÜN‹Ë )   ˇˇin    SMTP    : [ 0: 0:35] ACTC.AB.CA (0)   ∂ $í ◊ TÜuFi G   ˇˇnm    MAILER  : From:<@ACTC_MULTICS.ACTC.AB.CA:Jim_Gee@l66a.actc.ab.ca> ∂ $í ◊ TÜv∞z ,   ˇˇnm    MAILER  : To:<Dave.Schroth@ACTC.AB.CA>∂ $í ◊ TÜ’ )   ˇˇin    SMTP    : [ 0: 0:35] ACTC.AB.CA (0)   ∂ $í ◊ TÜ‹¡! G   ˇˇnm    MAILER  : From:<@ACTC_MULTICS.ACTC.AB.CA:Jim_Gee@l66a.actc.ab.ca> ∂ $í ◊ TÜ›’e ,   ˇˇnm    MAILER  : To:<Dave.Schroth@ACTC.AB.CA>∂ $í ◊ Tá<Ìs )   ˇˇin    SMTP    : [ 0: 0:27] ACTC.AB.CA (0)   ∂ $í ◊ TáC∂} G   ˇˇnm    MAILER  : From:<@ACTC_MULTICS.ACTC.AB.CA:Jim_Gee@l66a.actc.ab.ca> ∂ $í ◊ TáDﬁá ,   ˇˇnm    MAILER  : To:<Dave.Schroth@ACTC.AB.CA>∂ $í ◊ Táßáí )   ˇˇin    SMTP    : [ 0: 0:28] ACTC.AB.CA (0)   ∂ $í ◊ Tá≠7¡ G   ˇˇnm    MAILER  : From:<@ACTC_MULTICS.ACTC.AB.CA:Jim_Gee@l66a.actc.ab.ca> ∂ $í ◊ TáÆQ! ,   ˇˇnm    MAILER  : To:<Dave.Schroth@ACTC.AB.CA>∂ $í ◊ TáT )   ˇˇin    SMTP    : [ 0: 0:27] ACTC.AB.CA (0)   ∂ $í ◊  Táˇ G   ˇˇnm    MAILER  : From:<@ACTC_MULTICS.ACTC.AB.CA:Jim_Gee@l66a.actc.ab.ca> ∂ $í ◊! Táˆ ,   ˇˇnm    MAILER  : To:<Dave.Schroth@ACTC.AB.CA>∂ $í ◊" TáqyU )   ˇˇin    SMTP    : [ 0: 0:25] ACTC.AB.CA (0)   ∂ $í ◊# Táv<ˇ G   ˇˇnm    MAILER  : From:<@ACTC_MULTICS.ACTC.AB.CA:Jim_Gee@l66a.actc.ab.ca> ∂ $í ◊$ TáwVC ,   ˇˇnm    MAILER  : To:<Dave.Schroth@ACTC.AB.CA>∂ $í ◊% Tá⁄ Q )   ˇˇin    SMTP    : [ 0: 0:27] ACTC.AB.CA (0)   ∂ $í ◊& Tá‡2U G   ˇˇnm    MAILER  : From:<@ACTC_MULTICS.ACTC.AB.CA:Jim_Gee@l66a.actc.ab.ca> ∂ $í ◊' Tá·P  ,   ˇˇnm    MAILER  : To:<Dave.Schroth@ACTC.AB.CA>∂ $í ◊( Tà@*€ )   ˇˇin    SMTP    : [ 0: 0:26] ACTC.AB.CA (0)   ∂ $í ◊) TàGÏ: G   ˇˇnm    MAILER  : From:<@ACTC_MULTICS.ACTC.AB.CA:Jim_Gee@l66a.actc.ab.ca> ∂ $í ◊* TàHÉ ,   ˇˇnm    MAILER  : To:<Dave.Schroth@ACTC.AB.CA>∂ $í ◊+ Tàà‹n )   ˇˇin    SMTP    : [ 0: 0:19] ACTC.AB.CA (0)   ∂ $í ◊, Tà±c G   ˇˇnm    MAILER  : From:<@ACTC_MULTICS.ACTC.AB.CA:Jim_Gee@l66a.actc.ab.ca> ∂ $í ◊- Tà≤?† ,   ˇˇnm    MAILER  : To:<Dave.Schroth@ACTC.AB.CA>∂ $í ◊. Tà∆ß )   ˇˇin    SMTP    : [ 0: 0:36] ACTC.AB.CA (0)   ∂ $í ◊/ Tà;∏ G   ˇˇnm    MAILER  : From:<@ACTC_MULTICS.ACTC.AB.CA:Jim_Gee@l66a.actc.ab.ca> ∂ $í ◊0 TàY ,   ˇˇnm    MAILER  : To:<Dave.Schroth@ACTC.AB.CA>∂ $í ◊1 Tà}$@ )   ˇˇin    SMTP    : [ 0: 0:27] ACTC.AB.CA (0)   ∂ $í ◊2 TàÇÕ∂ G   ˇˇnm    MAILER  : From:<@ACTC_MULTICS.ACTC.AB.CA:Jim_Gee@l66a.actc.ab.ca> ∂ $í ◊3 TàÉÊ ,   ˇˇnm    MAILER  : To:<Dave.Schroth@ACTC.AB.CA>∂ $í ◊4 TàÍ† )   ˇˇin    SMTP    : [ 0: 0:28] ACTC.AB.CA (0)   ∂ $í ◊5 TàfÌ G   ˇˇnm    MAILER  : From:<@ACTC_MULTICS.ACTC.AB.CA:Jim_Gee@l66a.actc.ab.ca> ∂ $í ◊6 TàÒÇ8 ,   ˇˇnm    MAILER  : To:<Dave.Schroth@ACTC.AB.CA>∂ $í ◊7 TâX€- )   ˇˇin    SMTP    : [ 0: 0:29] ACTC.AB.CA (0)   ∂ $í ◊8 Tâ\˝p G   ˇˇnm    MAILER  : From:<@ACTC_MULTICS.ACTC.AB.CA:Jim_Gee@l66a.actc.ab.ca> ∂ $í ◊9 Tâ]Æ ,   ˇˇnm    MAILER  : To:<Dave.Schroth@ACTC.AB.CA>∂ $í ◊: Tâ∞º¿ )   ˇˇin    SMTP    : [ 0: 0:23] ACTC.AB.CA (0)   ∂ $í ◊; Tâ¿ G   ˇˇnm    MAILER  : From:<@ACTC_MULTICS.ACTC.AB.CA:Jim_Gee@l66a.actc.ab.ca> ∂ $í ◊< Tâ¡V ,   ˇˇnm    MAILER  : To:<Dave.Schroth@ACTC.AB.CA>∂ $í ◊= Tâ#ÏÕ )   ˇˇin    SMTP    : [ 0: 0:30] ACTC.AB.CA (0)   ∂ $í ◊> Tâ)Nb G   ˇˇnm    MAe containing comment.		*/
  4    32 	    3 S,					/* switches:				*/
  4    33 	      4 before_stmt		bit(1),		/* comment is before 1st token of stmt.		*/
  4    34 	      4 contiguous		bit(1),		/* no tokens between this and last comment.	*/
  4    35 	      4 pad		bit(16),
  4    36 	comment_value		char(comment.Lvalue) based (comment.Pvalue),
  4    37 						/* body of comment.				*/
  4    38 	Pcomment			ptr;		/* ptr to comment descriptor.			*/
  4    39 	
  4    40      dcl	
  4    41 	1 stmt			aligned based (Pstmt),
  4    42 						/* descriptor for a statement.		*/
  4    43 	  2 group1		unaligned,
  4    44 	    3 version		fixed bin(17),	/* statement descriptor version.		*/
  4    45 	    3 size		fixed bin(17),	/* statement descriptor size (in words).	*/
  4    46 	  2 Pnext			ptr unal,		/* ptr to next statement descriptor.		*/
  4    47 	  2 Plast			ptr unal,		/* ptr to last statement descriptor.		*/
  4    48 	  2 Pvalue		ptr unal,		/* ptr to statement.			*/
  4    49 	  2 Lvalue		fixed bin(18),	/* length of statement.			*/
  4    50 	  2 Pfirst_token		ptr unal,		/* ptr to 1st token of statement.		*/
  4    51 	  2 Plast_token		ptr unal,		/* ptr to last token of statement.		*/
  4    52 	  2 Pcomments		ptr unal,		/* ptr to comments in statement.		*/
  4    53 	  2 Puser			ptr unal,		/* user-defined ptr.			*/
  4    54 	  2 group2		unaligned,
  4    55 	    3 Ntokens		fixed bin(17),	/* number of tokens in statement.		*/
  4    56 	    3 line_no		fixed bin(17),	/* line no of line on which statement begins.	*/
  4    57 	    3 Istmt_in_line		fixed bin(17),	/* number of stmts in line containing this stmt.	*/
  4    58 						/* (the number includes this stmt.)		*/
  4    59 	    3 semant_type		fixed bin(17),	/* semantic type of the statement.		*/
  4    60 	    3 S,					/* switches:				*/
  4    61 	      4 error_in_stmt	bit(1),		/* stmt contains a syntactic error.		*/
  4    62 	      4 output_in_err_msg	bit(1),		/* stmt has been output in previous error message.*/
  4    63 	      4 pad		bit(34),
  4    64 	stmt_value		char(stmt.Lvalue) based (stmt.Pvalue),
  4    65 						/* text of the statement.			*/
  4    66 	Pstmt			ptr;		/* ptr to a stmt descriptor. 			*/
  4    67 	
  4    68      dcl	
  4    69 	1 token			aligned based (Ptoken),
  4    70 						/* descriptor for a token.			*/
  4    71 	  2 group1		unaligned,
  4    72 	    3 version		fixed bin(17),	/* token descriptor version.			*/
  4    73 	    3 size		fixed bin(17),	/* token descriptor size (in words).		*/
  4    74 	  2 Pnext			ptr unal,		/* ptr to next token descriptor.		*/
  4    75 	  2 Plast			ptr unal,		/* ptr to last token descriptor.		*/
  4    76 	  2 Pvalue		ptr unal,		/* ptr to token.				*/
  4    77 	  2 Lvalue		fixed bin(18),	/* length of token.				*/
  4    78 	  2 Pstmt			ptr unal,		/* ptr to descriptor of stmt containing token.	*/
  4    79 	  2 Psemant		ptr unal,		/* ptr to descriptor(s) of token's semantic value.*/
  4    80 	  2 group2		unaligned,
  4    81 	    3 Itoken_in_stmt	fixed bin(17),	/* position of token within its statement.	*/
  4    82 	    3 line_no		fixed bin(17),	/* line number of the line containing the token.	*/
  4    83 	    3 Nvalue		fixed bin(35),	/* numeric value of decimal-integer tokens.	*/
  4    84 	    3 S,					/* switches:				*/
  4    85 	      4 end_of_stmt		bit(1),		/* token is an end-of-stmt token.		*/
  4    86 	      4 quoted_string	bit(1),		/* token is a quoted string.			*/
  4    87 	      4 quotes_in_string	bit(1),		/* on if quote-close delimiters appear in quoted	*/
  4    88 						/* string (as doubled quotes on input.)		*/
  4    89 	      4 quotes_doubled	bit(1),		/* on if quotes in the string are doubled after	*/
  4    90 						/* string has been lexed into a token.		*/
  4    91 	      4 pad2		bit(32),
  4    92 	token_value		char(token.Lvalue) based (token.Pvalue),
  4    93 						/* value of the token.			*/
  4    94 	Ptoken			ptr;		/* ptr to a token descriptor.			*/
  4    95 
  4    96 	/*  END OF:	lex_descriptors_.incl.pl1	  *  *  *  *  *  *  */
  3    25 
  3    26 
  3    27 /*  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  **  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  */
  3    28 
  3    29 
  3    30 SEMANTIC_ANALYSIS:	procedure;			/* procedure which analyzes the syntax and	*/
  3    31 						/* semantics of the tokens in the input list.	*/
  3    32 
  3    33      dcl						/*	automatic variables			*/
  3    34 	LTOKEN_REQD_VALUE		fixed bin(18),	/* length of a token requirement.		*/
  3    35 	NRED			fixed bin,	/* number of the reduction tokens are being	*/
  3    36 						/* compared to.				*/
  3    37 	PRED			ptr,		/* ptr to the reduction tokens are being	*/
  3    38 						/* compared to.				*/
  3    39 	PTOKEN_REQD		ptr,		/* ptr to token requirement descriptor associated	*/
  3    40 						/* with reduction tokens are being compared to.	*/
  3    41 	PTOKEN_REQD_VALUE		ptr,		/* ptr to a token requirement.		*/
  3    42 	STOKEN_FCN		bit(1) aligned,	/* return value from a relative syntax function.	*/
  3    43 	CODE			fixed bin(35),	/* an error code.				*/
  3    44 	I			fixed bin,	/* a do-group index.			*/
  3    45 	NUMBER			fixed bin(35);	/* fixed binary representation of a decimal 	*/
  3    46 						/* number character string.			*/
  3    47 
  3    48      dcl						/*	based variables			*/
  3    49 	1 RED			aligned based (PRED),
  3    50 						/* descriptor for reduction tokens are being 	*/
  3    51 						/* compared to.				*/
  3    52 	  2 TOKEN_REQD		unaligned,
  3    53 	    3 IFIRST		fixed bin(17) unal,	/* index of first token requirement.		*/
  3    54 	    3 ILAST		fixed bin(17) unal,	/* index of last  token requirement associated	*/
  3    55 						/* with this reduction.			*/
  3    56 	1 TOKEN_REQD		aligned based (PTOKEN_REQD),
  3    57 						/* a token requirement descriptor.		*/
  3    58 	  2 FORM			fixed bin(17) unal,	/* form of the token requirement:		*/
  3    59 						/*  -1 = relative token requirement function;	*/
  3    60 						/*       TYPE = index of the particular token	*/
  3    61 						/*	      function in the token_fcn array.	*/
  3    62 						/*   0 = built-in token requirement function;	*/
  3    63 						/*       TYPE = as defined below.		*/
  3    64 						/*  >0 = absolute token requirement:		*/
  3    65 						/*       FORM = index(TOKEN_STRINGS,TOKEN_REQD);	*/
  3    66 						/*       TYPE = length(TOKEN_REQD);		*/
  3    67 	  2 TYPE			fixed bin(17) unal,	/* TYPE of built-in token requirement function:	*/
  3    68 						/*   1 = compile test to see if input token 	*/
  3    69 						/*       chain is exhausted (<no-token>).	*/
  3    70 						/*   2 = compile test for any token value	*/
  3    71 						/*       (<any-token>).			*/
  3    72 						/*   3 = compile test for a PL/I identifier	*/
  3    73 						/*       (<name>) of 32 or fewer characters.	*/
  3    74 						/*   4 = compile test for token which is a	*/
  3    75 						/*       <decimal-integer>.			*/
  3    76 						/*   5 = compile test for token which is a single	*/
  3    77 						/*       backspace character (<BS>).		*/
  3    78 						/*   6 = compile test for a token which is a	*/
  3    79 						/*       <quoted-string>.			*/
  3    80 
  3    81 	1 TOKEN_REQD_STRING		aligned based (PTOKEN_REQD),
  3    82 						/* overlay for an absolute token requirement	*/
  3    83 						/* descriptor.				*/
  3    84 	  2 I			fixed bin(17) unal,	/* index into list of token strings of the	*/
  3    85 						/* absolute token string assoc w/ descriptor.	*/
  3    86 	  2 L			fixed bin(17) unal,	/* length of the absolute token string.		*/
  3    87 	TOKEN_REQD_VALUE		char(LTOKEN_REQD_VALUE) based (PTOKEN_REQD_VALUE);
  3    88 						/* absolute token string which token is reqd	*/
  3    89 						/* to match in order for tokens which are	*/
  3    90 						/* "current" on the list to match the reduction.	*/
  3    91 
  3    92      dcl						/*	builtin functions			*/
  3    93          (addr, max, null, search, substr, verify)
  3    94 				builtin;
  3    95 
  3    96      dcl						/*	entries				*/
  3    97 	cv_dec_check_		entry (char(*), fixed bin(35)) returns (fixed biTP    : [ 0: 0:24] ACTC.AB.CA (0)   ∂ $í ◊© Tè < G   ˇˇnm    MAILER  : From:<@ACTC_MULTICS.ACTC.AB.CA:Jim_Gee@l66a.actc.ab.ca> ∂ $í ◊™ Tè!∏ ,   ˇˇnm    MAILER  : To:<Dave.Schroth@ACTC.AB.CA>∂ $í ◊´ TèiŒŸ )   ˇˇin    SMTP    : [ 0: 0:25] ACTC.AB.CA (0)   ∂ $í ◊¨ Tèl7Î G   ˇˇnm    MAILER  : From:<@ACTC_MULTICS.ACTC.AB.CA:Jim_Gee@l66a.actc.ab.ca> ∂ $í ◊≠ Tèm]“ ,   ˇˇnm    MAILER  : To:<Dave.Schroth@ACTC.AB.CA>∂ $í ◊Æ Tèúê )   ˇˇin    SMTP    : [ 0: 0:13] ACTC.AB.CA (0)   ∂ $í ◊Ø Tè†/Ò G   ˇˇnm    MAILER  : From:<@ACTC_MULTICS.ACTC.AB.CA:Jim_Gee@l66a.actc.ab.ca> ∂ $í ◊∞ Tè¢8u ,   ˇˇnm    MAILER  : To:<Dave.Schroth@ACTC.AB.CA>∂ $í ◊± Tè—¬π )   ˇˇin    SMTP    : [ 0: 0:13] ACTC.AB.CA (0)   ∂ $í ◊≤ Tè’è_ G   ˇˇnm    MAILER  : From:<@ACTC_MULTICS.ACTC.AB.CA:Jim_Gee@l66a.actc.ab.ca> ∂ $í ◊≥ Tè÷fx ,   ˇˇnm    MAILER  : To:<Dave.Schroth@ACTC.AB.CA>∂ $í ◊¥ Tè¸ı≥ )   ˇˇin    SMTP    : [ 0: 0:11] ACTC.AB.CA (0)   ∂ $í ◊µ Tê ™T G   ˇˇnm    MAILER  : From:<@ACTC_MULTICS.ACTC.AB.CA:Jim_Gee@l66a.actc.ab.ca> ∂ $í ◊∂ Têæâ ,   ˇˇnm    MAILER  : To:<Dave.Schroth@ACTC.AB.CA>∂ $í ◊∑ Têh/© )   ˇˇin    SMTP    : [ 0: 0:28] ACTC.AB.CA (0)   ∂ $í ◊∏ TêkR⁄ G   ˇˇnm    MAILER  : From:<@ACTC_MULTICS.ACTC.AB.CA:Jim_Gee@l66a.actc.ab.ca> ∂ $í ◊π Têls: ,   ˇˇnm    MAILER  : To:<Dave.Schroth@ACTC.AB.CA>∂ $í ◊∫ Tê®û )   ˇˇin    SMTP    : [ 0: 0:16] ACTC.AB.CA (0)   ∂ $í ◊ª Tê¨]√ G   ˇˇnm    MAILER  : From:<@ACTC_MULTICS.ACTC.AB.CA:Jim_Gee@l66a.actc.ab.ca> ∂ $í ◊º Tê≠!Ù ,   ˇˇnm    MAILER  : To:<Dave.Schroth@ACTC.AB.CA>∂ $í ◊Ω Tê9 )   ˇˇin    SMTP    : [ 0: 0:23] ACTC.AB.CA (0)   ∂ $í ◊æ Têˇu G   ˇˇnm    MAILER  : From:<@ACTC_MULTICS.ACTC.AB.CA:Jim_Gee@l66a.actc.ab.ca> ∂ $í ◊ø Tê( ,   ˇˇnm    MAILER  : To:<Dave.Schroth@ACTC.AB.CA>∂ $í ◊¿ Tê<™L )   ˇˇin    SMTP    : [ 0: 0:15] ACTC.AB.CA (0)   ∂ $í ◊¡ TêEa G   ˇˇnm    MAILER  : From:<@ACTC_MULTICS.ACTC.AB.CA:Jim_Gee@l66a.actc.ab.ca> ∂ $í ◊¬ TêG‡• ,   ˇˇnm    MAILER  : To:<Dave.Schroth@ACTC.AB.CA>∂ $í ◊√ Tê™â˚ )   ˇˇin    SMTP    : [ 0: 0:28] ACTC.AB.CA (0)   ∂ $í ◊ƒ TêÆAÔ G   ˇˇnm    MAILER  : From:<@ACTC_MULTICS.ACTC.AB.CA:Jim_Gee@l66a.actc.ab.ca> ∂ $í ◊≈ TêØ`≈ ,   ˇˇnm    MAILER  : To:<Dave.Schroth@ACTC.AB.CA>∂ $í ◊∆ TëtË )   ˇˇin    SMTP    : [ 0: 0:27] ACTC.AB.CA (0)   ∂ $í ◊« TëæÌ G   ˇˇnm    MAILER  : From:<@ACTC_MULTICS.ACTC.AB.CA:Jim_Gee@l66a.actc.ab.ca> ∂ $í ◊» Të›S ,   ˇˇnm    MAILER  : To:<Dave.Schroth@ACTC.AB.CA>∂ $í ◊… Tën~ﬁ )   ˇˇin    SMTP    : [ 0: 0:24] ACTC.AB.CA (0)   ∂ $í ◊  Tën:F ,   ˇˇin    TELNET  : [ 0: 3:32] 192.94.126.54 (3)∂ $í ◊À Tër?ﬂ G   ˇˇnm    MAILER  : From:<@ACTC_MULTICS.ACTC.AB.CA:Jim_Gee@l66a.actc.ab.ca> ∂ $í ◊Ã TësZã ,   ˇˇnm    MAILER  : To:<Dave.Schroth@ACTC.AB.CA>∂ $í ◊Õ TëŸ§X )   ˇˇin    SMTP    : [ 0: 0:28] ACTC.AB.CA (0)   ∂ $í ◊Œ Tëﬁ/ﬁ G   ˇˇnm    MAILER  : From:<@ACTC_MULTICS.ACTC.AB.CA:Jim_Gee@l66a.actc.ab.ca> ∂ $í ◊œ TëﬂC# ,   ˇˇnm    MAILER  : To:<Dave.Schroth@ACTC.AB.CA>∂ $í ◊– TëEﬁk )   ˇˇin    SMTP    : [ 0: 0:28] ACTC.AB.CA (0)   ∂ $í ◊— TëHﬁ≠ G   ˇˇnm    MAILER  : From:<@ACTC_MULTICS.ACTC.AB.CA:Jim_Gee@l66a.actc.ab.ca> ∂ $í ◊“ TëI˜% ,   ˇˇnm    MAILER  : To:<Dave.Schroth@ACTC.AB.CA>∂ $í ◊” TëØÅï )   ˇˇin    SMTP    : [ 0: 0:27] ACTC.AB.CA (0)   ∂ $í ◊‘ Të≥k£ G   ˇˇnm    MAILER  : From:<@ACTC_MULTICS.ACTC.AB.CA:Jim_Gee@l66a.actc.ab.ca> ∂ $í ◊’ Të¥ÖÙ ,   ˇˇnm    MAILER  : To:<Dave.Schroth@ACTC.AB.CA>∂ $í ◊÷ Tí#  )   ˇˇin    SMTP    : [ 0: 0:25] ACTC.AB.CA (0)   ∂ $í ◊◊ Tíñ: G   ˇˇnm    MAILER  : From:<@ACTC_MULTICS.ACTC.AB.CA:Jim_Gee@l66a.actc.ab.ca> ∂ $í ◊ÿ Tíÿ ,   ˇˇnm    MAILER  : To:<Dave.Schroth@ACTC.AB.CA>∂ $í ◊Ÿ Tí/Ùb )   ˇˇin    SMTP    : [ 0: 0: 8] ACTC.AB.CA (0)   ∂ $í ◊⁄ Tí3@ G   ˇˇnm    MAILER  : From:<@ACTC_MULTICS.ACTC.AB.CA:Jim_Gee@l66a.actc.ab.ca> ∂ $í ◊€ Tí4s1 ,   ˇˇnm    MAILER  : To:<Dave.Schroth@ACTC.AB.CA>∂ $í ◊‹ TíóS )   ˇˇin    SMTP    : [ 0: 0:27] ACTC.AB.CA (0)   ∂ $í ◊› Tí•±1 G   ˇˇnm    MAILER  : From:<@A                                            */
      711 	        76,    79,	/*    31/  dir = <absolute_path> ;                                              */
      712 	        80,    83,	/*    32/  dir = <absolute_path> ,                                              */
      713 	        84,    86,	/*    33/  dir = <any-token>                                                    */
      714 	        87,    90,	/*    34/  entry = <before_journal_name> ;                                      */
      715 	        91,    94,	/*    35/  entry = <before_journal_name> ,                                      */
      716 	        95,    97,	/*    36/  entry = <any-token>                                                  */
      717 	         6,     6,	/*    37/  <any-token>                                                          */
      718 	         8,     8,	/*    38/  <no-token>                                                           */
      719 	        98,    99,	/*    39/  hold ;                                                               */
      720 	       100,   101,	/*    40/  hold ,                                                               */
      721 	       102,   103,	/*    41/  hold <any-token>                                                     */
      722 	       104,   106,	/*    42/  ^ hold ;                                                             */
      723 	       107,   109,	/*    43/  ^ hold ,                                                             */
      724 	       110,   112,	/*    44/  ^ hold <any-token>                                                   */
      725 	       113,   114,	/*    45/  adopt ;                                                              */
      726 	       115,   116,	/*    46/  adopt ,                                                              */
      727 	       117,   118,	/*    47/  adopt <any-token>                                                    */
      728 	       119,   121,	/*    48/  ^ adopt ;                                                            */
      729 	       122,   124,	/*    49/  ^ adopt ,                                                            */
      730 	       125,   127,	/*    50/  ^ adopt <any-token>                                                  */
      731 	       128,   129,	/*    51/  recover ;                                                            */
      732 	       130,   131,	/*    52/  recover ,                                                            */
      733 	       132,   133,	/*    53/  recover <any-token>                                                  */
      734 	       134,   136,	/*    54/  ^ recover ;                                                          */
      735 	       137,   139,	/*    55/  ^ recover ,                                                          */
      736 	       140,   142,	/*    56/  ^ recover <any-token>                                                */
      737 	       143,   144,	/*    57/  recovery_check_mode ;                                                */
      738 	       145,   146,	/*    58/  recovery_check_mode ,                                                */
      739 	       147,   148,	/*    59/  recovery_check_mode <any-token>                                      */
      740 	       149,   151,	/*    60/  ^ recovery_check_mode ;                                              */
      741 	       152,   154,	/*    61/  ^ recovery_check_mode ,                                              */
      742 	       155,   157,	/*    62/  ^ recovery_check_mode <any-token>                                    */
      743 	         6,     6,	/*    63/  <any-token>                                                          */
      744 	         8,     8);	/*    64/  <no-token>                                                           */
      745 
      746      dcl	1 TOKEN_REQUIREMENT (157)	unaligned based (addr (TOKEN_REQUIREMENTS)),
      747 						/* object token requirements.			*/
      748 	  2 FORM			fixed bin(17),	/* form of the token requirement:		*/
      749 						/*  -1 = relative token requirement function;	*/
      750 						/*       TYPE = index of the particular token	*/
      751 						/*	      function in the token_fcn array.	*/
      752 						/*   0 = built-in token requirement function;	*/
      753 						/*       TYPE = as defined below.		*/
      754 						/*  >0 = absolute token requirement:		*/
      755 						/*       FORM = index(TOKEN_STRINGS,TOKEN_REQD);	*/
      756 						/*       TYPE = length(TOKEN_REQD);		*/
      757 	  2 TYPE			fixed bin(17) unal,	/* type of the built-in token requirement	*/
      758 						/* function:				*/
      759 						/*   1 = compile test to see if input token 	*/
      760 						/*       chain is exhausted (<no-token>).	*/
      761 						/*   2 = compile test for any token value	*/
      762 						/*       (<any-token>).			*/
      763 						/*   3 = compile test for a PL/I identifier	*/
      764 						/*       (<name>) of 32 or fewer characters.	*/
      765 						/*   4 = compile test for token which is a	*/
      766 						/*       <decimal-integer>.			*/
      767 						/*   5 = compile test for token which is a single	*/
      768 						/*       backspace character (<BS>).		*/
      769 						/*   6 = compile test for a token which is a	*/
      770 						/*       <quoted-string>.			*/
      771 
      772 	TOKEN_REQUIREMENTS  (314)	fixed bin(17) unaligned internal static options(constant) initial (
      773 	         1,   26,      27,    1,       0,    4,      28,    1,       1,   26,       0,    2,       1,   26,   
      774 	         0,    1,      29,   13,      27,    1,       0,    4,      28,    1,      29,   13,       0,    2,   
      775 	        29,   13,       0,    1,      42,   16,      27,    1,       0,    4,      28,    1,      42,   16,   
      776 	         0,    2,      42,   16,       0,    1,      58,   12,      27,    1,       0,    4,      28,    1,   
      777 	        58,   12,       0,    2,      58,   12,       0,    1,      70,   14,      27,    1,      -1,    1,   
      778 	        28,    1,      70,   14,       0,    2,      70,   14,       0,    1,      84,   22,      27,    1,   
      779 	       106,   20,      27,    1,     126,   23,      27,    1,     149,    5,      28,    1,     126,   23,   
      780 	        27,    1,     154,    1,     149,    5,      28,    1,     126,   23,       0,    2,     126,   23,   
      781 	         0,    1,     155,   14,      27,    1,      55,    2,      28,    1,     155,   14,      27,    1,   
      782 	       169,    3,      28,    1,     155,   14,       0,    2,     155,   14,       0,    1,     172,    3,   
      783 	        28,    1,       0,    1,     172,    3,      28,    1,       0,    2,     175,    3,     178,    1,   
      784 	        -1,    2,      28,    1,     175,    3,     178,    1,      -1,    2,     179,    1,     175,    3,   
      785 	       178,    1,       0,    2,     180,    5,     178,    1,      -1,    3,      28,    1,     180,    5,   
      786 	       178,    1,      -1,    3,     179,    1,     180,    5,     178,    1,       0,    2,     185,    4,   
      787 	        28,    1,     185,    4,     179,    1,     185,    4,       0,    2,     154,    1,     185,    4,   
      788 	        28,    1,     154,    1,     185,    4,     179,    1,     154,    1,     185,    4,       0,    2,   
      789 	       189,    5,      28,    1,     189,    5,     179,    1,     189,    5,       0,    2,     154,    1,   
      790 	       189,    5,      28,    1,     154,    1,     189,    5,     179,    1,     154,    1,     189,    5,   
      791 	         0,    2,     194,    7,      28,    1,     194,    7,     179,    1,     194,    7,       0,    2,   
      792 	       154,    1,     194,    7,      28,    1,     154,    1,     194,    7,     179,    1,     154,    1,   
      793 	       194,    7,       0,    2,     201,   19,      28,    1,     201,   19,     179,    1,     201,   19,   
      794 	         0,    2,     154,    1,     201,   19,      28,    1,    :<hal.hoover@actc>  ∂ $í ◊H TñuçÈ %   ˇˇns    SERVER  : To:<Westcott@multics>   ∂ $í ◊I Tñ|za )   ˇˇin    SMTP    : [ 0: 0:20] ACTC.AB.CA (0)   ∂ $í ◊J TñÖáÉ G   ˇˇnm    MAILER  : From:<@ACTC_MULTICS.ACTC.AB.CA:Jim_Gee@l66a.actc.ab.ca> ∂ $í ◊K Tñá'- ,   ˇˇnm    MAILER  : To:<Dave.Schroth@ACTC.AB.CA>∂ $í ◊L TñâG )   ˇˇin    SMTP    : [ 0: 0: 7] ACTC.AB.CA (0)   ∂ $í ◊M TñØU* )   ˇˇin    SMTP    : [ 0: 0:14] ACTC.AB.CA (0)   ∂ $í ◊N Tñ¥3¬ G   ˇˇnm    MAILER  : From:<@ACTC_MULTICS.ACTC.AB.CA:Jim_Gee@l66a.actc.ab.ca> ∂ $í ◊O Tñµr} ,   ˇˇnm    MAILER  : To:<Dave.Schroth@ACTC.AB.CA>∂ $í ◊P TñƒM˙ )   ˇˇin    SMTP    : [ 0: 0: 5] ACTC.AB.CA (0)   ∂ $í ◊Q Tñ»M G   ˇˇnm    MAILER  : From:<@ACTC_MULTICS.ACTC.AB.CA:Jim_Gee@l66a.actc.ab.ca> ∂ $í ◊R Tñ…¡ú ,   ˇˇnm    MAILER  : To:<Dave.Schroth@ACTC.AB.CA>∂ $í ◊S Tñ÷ºC )   ˇˇin    SMTP    : [ 0: 0: 4] ACTC.AB.CA (0)   ∂ $í ◊T Tñ⁄ç¸ G   ˇˇnm    MAILER  : From:<@ACTC_MULTICS.ACTC.AB.CA:Jim_Gee@l66a.actc.ab.ca> ∂ $í ◊U Tñ€˝+ ,   ˇˇnm    MAILER  : To:<Dave.Schroth@ACTC.AB.CA>∂ $í ◊V Tñ˘ÔÏ )   ˇˇin    SMTP    : [ 0: 0: 9] ACTC.AB.CA (0)   ∂ $í ◊W Tñ˛:U G   ˇˇnm    MAILER  : From:<@ACTC_MULTICS.ACTC.AB.CA:Jim_Gee@l66a.actc.ab.ca> ∂ $í ◊X Tñˇx* ,   ˇˇnm    MAILER  : To:<Dave.Schroth@ACTC.AB.CA>∂ $í ◊Y TóoV )   ˇˇin    SMTP    : [ 0: 0: 9] ACTC.AB.CA (0)   ∂ $í ◊Z Tó#ê˜ G   ˇˇnm    MAILER  : From:<@ACTC_MULTICS.ACTC.AB.CA:Jim_Gee@l66a.actc.ab.ca> ∂ $í ◊[ Tó$kg ,   ˇˇnm    MAILER  : To:<Dave.Schroth@ACTC.AB.CA>∂ $í ◊\ Tól`+ )   ˇˇin    SMTP    : [ 0: 0:20] ACTC.AB.CA (0)   ∂ $í ◊] Tón⁄ G   ˇˇnm    MAILER  : From:<@ACTC_MULTICS.ACTC.AB.CA:Jim_Gee@l66a.actc.ab.ca> ∂ $í ◊^ TóoÙ ,   ˇˇnm    MAILER  : To:<Dave.Schroth@ACTC.AB.CA>∂ $í ◊_ TóØ°ú )   ˇˇin    SMTP    : [ 0: 0:17] ACTC.AB.CA (0)   ∂ $í ◊` Tó≥ª˙ G   ˇˇnm    MAILER  : From:<@ACTC_MULTICS.ACTC.AB.CA:Jim_Gee@l66a.actc.ab.ca> ∂ $í ◊a Tó¥Ã ,   ˇˇnm    MAILER  : To:<Dave.Schroth@ACTC.AB.CA>∂ $í ◊b Tó—ë% )   ˇˇin    SMTP    : [ 0: 0: 9] ACTC.AB.CA (0)   ∂ $í ◊c Tó’∫  G   ˇˇnm    MAILER  : From:<@ACTC_MULTICS.ACTC.AB.CA:Jim_Gee@l66a.actc.ab.ca> ∂ $í ◊d Tó◊Æ ,   ˇˇnm    MAILER  : To:<Dave.Schroth@ACTC.AB.CA>∂ $í ◊e Tóê* )   ˇˇin    SMTP    : [ 0: 0:13] ACTC.AB.CA (0)   ∂ $í ◊f Tó
	Ò G   ˇˇnm    MAILER  : From:<@ACTC_MULTICS.ACTC.AB.CA:Jim_Gee@l66a.actc.ab.ca> ∂ $í ◊g Tó›Ï ,   ˇˇnm    MAILER  : To:<Dave.Schroth@ACTC.AB.CA>∂ $í ◊h TóPÎ) )   ˇˇin    SMTP    : [ 0: 0:19] ACTC.AB.CA (0)   ∂ $í ◊i Tóaó
 G   ˇˇnm    MAILER  : From:<@ACTC_MULTICS.ACTC.AB.CA:Jim_Gee@l66a.actc.ab.ca> ∂ $í ◊j TóbÛ ,   ˇˇnm    MAILER  : To:<Dave.Schroth@ACTC.AB.CA>∂ $í ◊k Tóé≤» )   ˇˇin    SMTP    : [ 0: 0:16] ACTC.AB.CA (0)   ∂ $í ◊l Tó°(© G   ˇˇnm    MAILER  : From:<@ACTC_MULTICS.ACTC.AB.CA:Jim_Gee@l66a.actc.ab.ca> ∂ $í ◊m Tó¢†i ,   ˇˇnm    MAILER  : To:<Dave.Schroth@ACTC.AB.CA>∂ $í ◊n Tó∫3 )   ˇˇin    SMTP    : [ 0: 0:11] ACTC.AB.CA (0)   ∂ $í ◊o Tóæƒ* G   ˇˇnm    MAILER  : From:<@ACTC_MULTICS.ACTC.AB.CA:Jim_Gee@l66a.actc.ab.ca> ∂ $í ◊p Tó¿|ü ,   ˇˇnm    MAILER  : To:<Dave.Schroth@ACTC.AB.CA>∂ $í ◊q TóÀ4" )   ˇˇin    SMTP    : [ 0: 0: 4] ACTC.AB.CA (0)   ∂ $í ◊r Tó—a* G   ˇˇnm    MAILER  : From:<@ACTC_MULTICS.ACTC.AB.CA:Jim_Gee@l66a.actc.ab.ca> ∂ $í ◊s Tó”” ,   ˇˇnm    MAILER  : To:<Dave.Schroth@ACTC.AB.CA>∂ $í ◊t Tó‡l
 )   ˇˇin    SMTP    : [ 0: 0: 5] ACTC.AB.CA (0)   ∂ $í ◊u TóÊ_L G   ˇˇnm    MAILER  : From:<@ACTC_MULTICS.ACTC.AB.CA:Jim_Gee@l66a.actc.ab.ca> ∂ $í ◊v TóË7A ,   ˇˇnm    MAILER  : To:<Dave.Schroth@ACTC.AB.CA>∂ $í ◊w Tó˜É≈ )   ˇˇin    SMTP    : [ 0: 0: 6] ACTC.AB.CA (0)   ∂ $í ◊x Tó˚∆À G   ˇˇnm    MAILER  : From:<@ACTC_MULTICS.ACTC.AB.CA:Jim_Gee@l66a.actc.ab.ca> ∂ $í ◊y Tó˝Qn ,   ˇˇnm    MAILER  : To:<Dave.Schroth@ACTC.AB.CA>∂ $í ◊z Tòı )   ˇˇin    SMTP    : [ 0: 0: 4] ACTC.AB.CA (0)   ∂ $í ◊{ Tò¿  G   ˇˇnm    MAILER  : From:<@ACTC_MULTICS.ACTC.AB.CA:Jim_Gee@l66a.actc.ab.ca> ∂ $í ◊| Tò=$ ,   ˇˇnm    MAILER  : To:<Dave.Schroth@ACTC.AB.CA> RD_TEST_TOKEN(1);
  5    68 		go to RD_NEXT_REDUCTION;
  5    69 		end;
  5    70 	     if TOKEN_REQD.FORM = 0 then do;		/* built-in syntax function.			*/
  5    71 		go to RD_TEST_TOKEN(TOKEN_REQD.TYPE);
  5    72 
  5    73 RD_TEST_TOKEN(1):   if SPDL then			/* <no-token>				*/
  5    74 						/* In push-down-language, there are 2 		*/
  5    75 						/*   interpretations of <no-token>.		*/
  5    76 		     if      RED.TOKEN_REQD.IFIRST = RED.TOKEN_REQD.ILAST &
  5    77 			   Ptoken = null then	/* When <no-token> is only spec, the spec asks 	*/
  5    78 			go to RD_MATCH_NO_TOKEN;	/* "Is push down stack empty (all input gone)?"   */
  5    79 		     else if RED.TOKEN_REQD.IFIRST^= RED.TOKEN_REQD.ILAST &
  5    80 			   RED.TOKEN_REQD.IFIRST = I &
  5    81 			   token.Pnext = null then	/* For SPEC1 ... SPECN <no-token>, the spec asks  */
  5    82 			go to RD_MATCH_NO_TOKEN;	/* "Are the topmost tokens on stack SPEC1 - SPECN,*/
  5    83 						/*  and is SPECN the final input token?"	*/
  5    84 		     else go to RD_NEXT_REDUCTION;	/* Those are the only two defs allowed in push	*/
  5    85 						/* down language mode for <no-token>.		*/
  5    86 		else if Ptoken = null then
  5    87 		     go to RD_MATCH_NO_TOKEN;
  5    88 		go to RD_NEXT_REDUCTION;
  5    89 
  5    90 RD_TEST_TOKEN(2):	go to RD_MATCH;			/* <any-token>				*/
  5    91 
  5    92 RD_TEST_TOKEN(3):	if token.Lvalue > 0 &		/* <name>					*/
  5    93 		   token.Lvalue <= 32 & ^token.S.quoted_string then
  5    94 		     if search(substr(token_value,1,1),"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz")
  5    95 		     > 0 then
  5    96 			if verify(token_value,"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789_$")
  5    97 			= 0 then
  5    98 			     go to RD_MATCH;
  5    99 		go to RD_NEXT_REDUCTION;
  5   100 
  5   101 RD_TEST_TOKEN(4):					/* <decimal-integer>			*/
  5   102 		if token.Nvalue ^= 0 then		/* token already determined to be a number.	*/
  5   103 		     go to RD_MATCH;
  5   104 		if token.S.quoted_string then
  5   105 		     go to RD_NEXT_REDUCTION;
  5   106 		NUMBER = cv_dec_check_ (token_value, CODE);
  5   107 		if CODE = 0 then do;
  5   108 		     token.Nvalue = NUMBER;
  5   109 		     go to RD_MATCH;
  5   110 		     end;
  5   111 		go to RD_NEXT_REDUCTION;
  5   112 
  5   113 RD_TEST_TOKEN(5):	if token.Lvalue = 1 then		/* <BS>					*/
  5   114 		     if token_value = BACKSPACE & ^token.S.quoted_string then
  5   115 			go to RD_MATCH;
  5   116 		go to RD_NEXT_REDUCTION;
  5   117 
  5   118 RD_TEST_TOKEN(6):	if token.S.quoted_string then		/* <quoted-string>				*/
  5   119 		     go to RD_MATCH;
  5   120 		go to RD_NEXT_REDUCTION;
  5   121 		end;
  5   122 
  5   123 	     else if TOKEN_REQD.FORM > 0 then do;	/* absolute syntax specification.		*/
  5   124 		if token.S.quoted_string then
  5   125 		     go to RD_NEXT_REDUCTION;
  5   126 		PTOKEN_REQD_VALUE = addr(substr(TOKEN_STRINGS,TOKEN_REQD_STRING.I));
  5   127 		LTOKEN_REQD_VALUE = TOKEN_REQD_STRING.L;
  5   128 		if token_value = TOKEN_REQD_VALUE then
  5   129 		     go to RD_MATCH;
  5   130 		go to RD_NEXT_REDUCTION;
  5   131 		end;
  5   132 
  5   133 	/* END OF:	rdc_end_.incl.pl1		  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  */
      805 
      806 
      807 	     else do;				/* relative syntax function.			*/
      808 		go to RD_TOKEN_FCN(TOKEN_REQD.TYPE);
      809 
      810 RD_TOKEN_FCN(1):	STOKEN_FCN = date_time_offset();
      811 		go to RD_TEST_RESULT;
      812 RD_TOKEN_FCN(2):	STOKEN_FCN = absolute_path();
      813 		go to RD_TEST_RESULT;
      814 RD_TOKEN_FCN(3):	STOKEN_FCN = before_journal_name();
      815 		go to RD_TEST_RESULT;
      816 
      817 RD_TEST_RESULT:	if STOKEN_FCN then go to RD_MATCH;
      818 		else go to RD_NEXT_REDUCTION;
      819 		end;
      820 
      821 RD_MATCH:      Ptoken = token.Pnext;
      822 RD_MATCH_NO_TOKEN:
      823 	     end;
      824 	Ptoken = Pthis_token;
      825 	go to RD_ACTION(NRED);
      826 
      827 
      828 RD_ACTION(1):					/* /					*/
      829 	ca    ]\–ò            Äq¬            ä≈õá            §`Ò±            §	~-            öM&            ]uå¡            ëÖ            Üj¯V            Ä‹ÍL            ^Öá            ^Ö«            ¢u˛4            éy»f            â◊ı            §`ß            Äqq            ú&É            §`á            ÄˆvW            w+            §`,            ÄÔZ‡            á˛Õ            d∆–            äÒà'            Äq            †fÃY            ëÖ0            §`ß            ÄqÖ            Äq            ë	l±            ë	l=            âJÏZ            Äq5            Äq!            ô¶=µ            §`	            ÄqÑ            ñ∫Rv            óZ3P            ñ∫Ri            ê≈wÛ            öíq            óYÒø            óZ3U            ùøã˙            öíue            öŸ◊•            öŸÿ˙            ê≈x˙            }óv            ê≈Å8            §`h            ê≈Ñ«            ê≈Ñº            ê≈Ü«            ênm            £ÛDÚ            ë≤rˆ            õæã            õ›%            ûåä7            úŒ«)            íØÕ            §`ö            ïÚÌ2            £ï)í            Éöp            Ñdaî            ä´¢            §`u            îˆk            §	£≈            Äq3            ÄqE            Sâó5            TõÇ            Äq            TH}Á            S÷˝9            §`˚¬            ç+¸©            Äq"            §`Ò¡            Ñdg,            Äˆx°            Äq            î§çö            Äq            Äq4            Äqz            Äq$            Äq÷            Äqπ            Äqª            Äq˛            â◊Ë            |¸«            Äq#            Äq¯            Sw√ü            Üj¯1            Äq¿            Äqo            }Ã©º            d§B®            Äq
            Äq˙            ä≈õi            SÄå            ÑdgF            âJËG            Äq            â◊Û            ÄqÎ            x_@            ô,E             Äqr            Ä{            Äq˚            Å=2“            ÄqÊ            ãl8œ            âJË≈            â]Éö            â]Ü´            äÒ¢¡            âëÊZ            âëÊv            âëÊû            äÒ—M            äÒ∆L            Ñ´%            Sw√†            Äq,            éVÛ            Äqn            Sï!            Äqı            Ñd\-            äÒú            â]Üò            éy¯            é2´            §`µ            ô,E◊            âJËë            §`∏            §`¿            èÒ‹r            ú&Ç            §`Ô)            ñ&“            ñ&             ê≤'            §`ÓV            è9@            èe Ã            §`¯»            îŸ‰            §`Ól            êÉ ‹            ê≈ñD            §`˘            §`$            ê≈pÊ            ê≈qA            ê≈qH            ê≈qJ            §`˘            §`ˆd            ê≈x	            ê≈|≥            ê≈ê            ög≈æ            §`Úg            ög≈ª            §	∑„            §`Ò,            §`˘            §`§            §`À            ùø
"            úÃøı            ê≈Çü            åÖÔD            â$F            àe◊            öÜÿ£            êg7            äÒâ≠            óÃe™            öídÇ            â»›‘            ò§k„            â$c            §	∂O            òy-u            ë	lø            ñ…Ça            åXûV            öÜ⁄§            ìå}È            öíaç            Ü˜°Ù            hv«y            Äqi            Äq6            Sï            [8óf            Äq	            âJÏ≈            Äq~            ÄqÇ            öídß            é¿0ß            îy¸]            î¸.            ïÛ¥            £ï–            £Û^À            §`Ô‚            °ŒËJ            §`	f            §`ø            §	£U            £îÿ4            ê^D            £î˜Ÿ            WªS#            Ärƒ            U»*ﬁ            Äq            Äq»            ÑQuÃ            Äq’            S÷˝.            Är€            á∑§P            yd@            Äq-            Äq            âJÈ+            }6„Z            Sâî”            }õC            âJËˇ            Äq‘            Äqµ            Äq!            Äq(            Äq            áùÿh            áù‡	            §`	´            §`	≠            §`|            âë¯            âë¯ˆ            §`ˆa            §`Ú¢            âøé&            âøçÓ            âøèü            âøèà            âøë            §`ˆe            §`ˆX            §`ˆÒ            §`˜}            §`˙X            §`˜¥            §`˜&            §`˜4            §`˜+            §`˜[            §`˜a            §`˜d            §`˜v            §`˙|            §`˙é            §`˙®            §`˙            §`˘Z            §`˘L            §`˘ø            âøö±            §`£            §`˙≠            §`Â            §`_            §`˙            §`]            §`e            §`˙            §`˙A            §`˙H            §`Ï            §	Ü˚            §`˙ù            §`˙È            §`æ            §`£            §`˚E            §`Ä            §`˚\            §`¿            §`˚‚            §`	°            §`	§            §`	P            §`ô            §`ú            §`	â            §	ÜÃ            £ï,            â»≈s            âëÓF            §`˜V            §`˜            §`˜L            §`ˆl            §`ˆ’            §`˜t            §`¡            §`˜§            §`˙/            §`˜J            §`˜õ            §`˜«            §`.            §`˙l            §`˘û            §`˘¶            §`˘∑            §`˘˛            §`˙J            §`¸L            §`˙Ÿ            §`˙À            §`¸            §`˙Í            §`˚7            §`d            §`	Ñ            §`	ü            §`˙¡            §`˙ˇ            §`7            §`˚            §`:            §`˚-            §`ó            §`˚            §`r            §`v            §`9            §`ú            âøök            §	ÜÛ            §	{Ö            §`	O            âë˛Ì            §`ˆÈ            âí˚            §`Úú            §`Ùœ            §`˜©            §`ˆC            §`˘            §`Z            §`˜            §`˜›            §`˜            §`˜B            §`˜ﬁ            §`˜n            §`˜á            §`˘&            âøé4            §`˘W            §`˚E            §`            §`D            §`	Ÿ            §`
O            §`˚Ä            §`˘ù            §`˘            §`˙v            §`˙√            ùø•            §`˙#            §`†            §`˚¯            §` Í            §`˚˚            §`î            §`a            §`ö            §`	B            §`ƒ            §`	#            £ï,≠            ô¡7            §`ˆ7            §`ı£            âëÊH            âëÊ            §`Ú¶            §`ÙG            §`˜∞            §`˙)            §`˜:            §`˙Ú            §`8            §`˜ü            §`˘À            §`˘K            §`F            §`˙M            §`˙W            §`Q            §`^            §`˙r            §`˚§            §`˚ï            §`;            §`˚ˆ            §`´            §`>            §`ﬁ            §`±            âí?            §`∑            §`∂            §`	≥            §`	            §`	^            §`n            âøë            âøñ?            §`˜≈            §	Ü„            ùÊ"æ            âëÊt            âë¯£            âë˛ﬁ            §`Òg            §`Úß            §`ÙS            §`ı∫            §`ˆº            §`ˆÇ            §`˜W            §`˜≈            §`˜µ            §`˜∆            §`˜–            §`¯            §`˚¡            §`¸	            §`µ            §`˙e            §`t            §`˘            §`ü            §`˘q            §`˘Ê            §`Ú            §`˙            §`!            §`˚Ç            §`˚⁄            §`	‡            §`	∂            §`Ê            §`±            §`	∑            §`	√            §`	ì            §`˛            §`	»            §`1            âëÓ^            §`Ò7            âë¯             §`˜∞            §`˜Ÿ            §`˜Ä            §`˜            §`Ú“            §`ÙÔ            §`Ù–            âøéC            §`˜Ï            §`ıπ            §`˜~            §`˙[            §`˘T            §`˘^            §`˘[            £îÚ,            §`*            §`˙U            §`˘‘            §`˘™            §`˘¯            §`˘	            §`˙n        
Absentee user Schroth SysMaint logged in: 04/02/95  0100.0 mdt Sun, request_id: 950326070010.824193
ACTC Technologies Inc. (MR12.5)
Load: 17.0/100.0; Users: 17.
Absentee queue:  1
Absentee input:  >udd>sm>sup>hk>checkvtoc.absin
Absentee output: >udd>sm>sup>hk>checkvtoc.absout


ACTC{SysMaint}  00:00:10.0  5.31  135  >udd>sm>ds
ear >udd>sm>sup>hk>checkvtoc.absin -of >udd>sm>sup>hk>checkvtoc -q 1 -limit 100 -time 95-04-09_00:00 -tc
ID: 88112587; 8 already requested.
>udd>sm>sup>hk>checkvtoc.absin in queue 1
send_admin_command ec admin repair salvquota > 3				 -check_vtoce -compact
send_admin_command: Execution started ... completed.
logout

Absentee user Schroth SysMaint logged out 95-04-02_0000.48_Sun_mst
CPU usage 7 sec, memory usage 0.0 units
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             ˇˇˇ÷   Maryniuk              Multics  Ä   Ï<   QªûV(   Ø     ≥     ËÏˇˇˇ÷   Maryniuk              Multics  Ä          QªüHÆ   -     0     :( ˇˇˇ÷   Maryniuk              Multics  Ä          Qªü º   ?     B     :<ˇˇˇ÷   Maryniuk              Multics            Qª†°ë   Q     U     ËP(ˇˇˇ÷   Maryniuk              Multics        x   Qª°á%   œ     “     :d<ˇˇˇ÷   Maryniuk              Multics             Qª°†g   ·     ‰     6xPˇˇˇ÷    Maryniuk              Multics      P     Qªﬂ~¨f   Ú     ˆ     yådˇˇˇ÷   !Maryniuk              Multics      ÿê   Q√≈5‡             é†xˇˇˇ÷   "Maryniuk              Multics  Ä   ‘¥   Q√∆Ü»f   Å     !ä     Í¥åˇˇˇ÷   #Maryniuk              Multics      †»   Q√«jxë   ≈     +–     ç»†ˇˇˇ÷   $Maryniuk              Multics      ¥‹   Q»Æ=   Ù     -      `‹¥ˇˇˇ÷   %Maryniuk              Multics      »   Q»¯7   X     _     V»ˇˇˇ÷   &Maryniuk              Multics      ‹@   Q»%2@   µ     2¬     ¿‹ˇˇˇ÷   'Maryniuk              Multics      ∞   Q»R9ó   Ú     ¯     ®ˇˇˇ÷   (Maryniuk              Multics      ,   Q»œ£±   "     *     ˘,ˇˇˇ÷   )Maryniuk              Multics      §   Q ô3Ì   i     q     ¡@ˇˇˇ÷   *Maryniuk              Multics      T   Q öC¯õ   ¢     #´     ˇT,ˇˇˇ÷   +Maryniuk              Multics      @h   Q õ£Ä   Î     Ú     ˙h@ˇˇˇ÷   ,Maryniuk              Multics      T|   Q úYœ   1     &;      |Tˇˇˇ÷   -Maryniuk              Multics      h‡   Q ù∑   n      v     êhˇˇˇ÷   .Maryniuk              Multics      å∏   Q ùaÿ8   ∏     ª     §|ˇˇˇ÷   /Maryniuk              Multics      ,D   Q û[Ø   ¸           ∏êˇˇˇ÷   0Maryniuk              Multics      êÃ   Q“‡ôrÄ   F     M     |Ã§ˇˇˇ÷   1Maryniuk              Multics      ∏   Q“·|N|   l     s     ∞‡∏ˇˇˇ÷   2Maryniuk              Multics      |Ù   Q“‚{ùÚ   ü     ¶     üÙÃˇˇˇ÷   3Maryniuk              Multics      ‡   Q“‚»÷Ï   Œ     $◊     µ‡ˇˇˇ÷   4Maryniuk              Multics      Ù   Q“„¨ÿ∂              •Ùˇˇˇ÷   5Maryniuk              Multics      0   Q“„ö5   7     ?     ¢0ˇˇˇ÷   6Maryniuk              Multics      Ä   Q“ÂΩW   h     &r     ´Dˇˇˇ÷   7Maryniuk              Multics      §X   Q÷=Ö¡>   ù     §     ‰X0ˇˇˇ÷   8Maryniuk              Multics      Dl   Q÷>ﬁÌh   ›     ‰     ∑lDˇˇˇ÷   9Maryniuk              Multics      X    Q÷>K:             ∑ÄXˇˇˇ÷   :Maryniuk              Multics      0î   Q÷A1q   G     'Q     ‡îlˇˇˇ÷   ;Maryniuk              Multics      Ä®   Q÷BGÛ≥   â     ê     ˙®Äˇˇˇ÷   <Maryniuk              Multics      îº   Q÷Càe    œ     A‡     Îºîˇˇˇ÷   =Maryniuk              Multics      ®–   Q÷Cäˇ;   [     c     ƒ–®ˇˇˇ÷   >Maryniuk              Multics      º‰   Q÷Dt™l   î     )ü     “‰ºˇˇˇ÷   ?Maryniuk              Multics      –¯   Q÷D‚%’   ‘     +ﬂ     ¯–ˇˇˇ÷   @Maryniuk              Multics      ‰¨   Q€}Ÿ•I   %     '/     e‰ˇˇˇ÷   AMaryniuk              Multics      Ãp   Q€}h≥v   â     ê     ¥ ¯ˇˇˇ÷   BMaryniuk              Multics      l4   Q€~‹lk   Ω     («     Ø4ˇˇˇ÷   CMaryniuk              Multics       H   QﬁÌ∞•   3     :     ‡H ˇˇˇ÷   DMaryniuk              Multics      4\   QﬁÓí5“   r     y     å\4ˇˇˇ÷   EMaryniuk              Multics      H   QﬁÓ˜ã∂   ú     £     ÕpHˇˇˇ÷   FMaryniuk              Multics      Ñ   QﬁÓï·⁄   ◊     ﬁ     ∫Ñ\ˇˇˇ÷   GMaryniuk              Multics      pò   QﬁÓÔ≠V             Øòpˇˇˇ÷   HMaryniuk              Multics      Ñ8   QﬁÔ?‚   @     G     {¨Ñˇˇˇ÷   IMaryniuk              Multics      ¯¿   QﬁÔvdy   f     n     Ò¿òˇˇˇ÷   JMaryniuk              Multics      ¨‘   Qﬁ"…∆   ´     ;∫     ◊‘¨ˇˇˇ÷   KMaryniuk              Multics  ¿   ¿Ë   QﬂFkî≤        Ò    HË¿ˇˇˇ÷   LMaryniuk              Multics  @   ‘¸   QﬂH´   	√     	ƒ    ‰¸‘ˇˇˇ÷   MMaryniukltics      ‰   Q>ïUÓr   C     8Q     €‰ˇˇˇ÷   ÅMaryniuk              Multics      ¯    Q>ï#ö‘   à     (í     õ ¯ˇˇˇ÷   ÇMaryniuk              Multics      4   Q>ñ"_   π     '√     √4ˇˇˇ÷   ÉMaryniuk              Multics       H   Q>ñ˝O   4     ,?     ÷H ˇˇˇ÷   ÑMaryniuk              Multics      4\   Q>ñòöÌ   u     {     ú\4ˇˇˇ÷   ÖMaryniuk              Multics      Hp   Q>†P(ö   ¢     9±     ÙpHˇˇˇ÷   ÜMaryniuk              Multics      \Ñ   Q>°H≤ˆ   Ó     )˘     ;Ñ\ˇˇˇ÷   áMaryniuk              Multics      pò   Q>°X   H     (R     „òpˇˇˇ÷   àMaryniuk              Multics      Ñ¨   Q>°ŒÜ   ã     )ñ     ˇ¨Ñˇˇˇ÷   âMaryniuk              Multics      ò¿   Q>¢è⁄¨   ÷     !ﬂ     ÷¿òˇˇˇ÷   äMaryniuk              Multics      ¨‘   Q>§ˆ2%        !     ”‘¨ˇˇˇ÷   ãMaryniuk              Multics      ¿Ë   Q>§ç≠)   S     [     “Ë¿ˇˇˇ÷   åMaryniuk              Multics      ‘¸   Q>•>BC   ê     ò     
¸‘ˇˇˇ÷   çMaryniuk              Multics  @   Ë   Q@(ÿË   €     )Ê    	Ëˇˇˇ÷   éMaryniuk              Multics      ¸$   Q@+zJ—   i     p     „$¸ˇˇˇ÷   èMaryniuk              Multics      8   Q@+~¸   ©     Ø      8ˇˇˇ÷   êMaryniuk              Multics      $L   Q@,v‚4   ‚     Í     —L$ˇˇˇ÷   ëMaryniuk              Multics      8t   Q@, r2        ')     ∑`8ˇˇˇ÷   íMaryniuk              Multics      –ú   Q@LÂ   W     ^    ntLˇˇˇ÷   ìMaryniuk              Multics      Lƒ   Q@MÍ‡·   ˙     3     Ÿà`ˇˇˇ÷   îMaryniuk              Multics      Ù   QGº`p:   >     E     ¢útˇˇˇ÷   ïMaryniuk              Multics      `∞   QGº£…p   n     u     é∞àˇˇˇ÷   ñMaryniuk              Multics      ú<   QLF¿è0   ô     †     ¿ƒúˇˇˇ÷   óMaryniuk              Multics      tÿ   QLIy)   –     ‘     ÿ∞ˇˇˇ÷   òMaryniuk              Multics      ƒÏ   QLJΩrz        +&     ªÏƒˇˇˇ÷   ôMaryniuk              Multics      ÿ    QLKDˇ°   U     ]      ÿˇˇˇ÷   öMaryniuk              Multics      ÏP   QLLœ8   £     $¨     ŒÏˇˇˇ÷   õMaryniuk              Multics      à(   QP∞Å˚   ‡     Á     ú( ˇˇˇ÷   úMaryniuk              Multics      x   QPÅˆM             √<ˇˇˇ÷   ùMaryniuk              Multics      ∞†   QPÕ|   F     M     JP(ˇˇˇ÷   ûMaryniuk              Multics       d   QP1$'   †     +´     	d<ˇˇˇ÷   üMaryniuk              Multics      P»   QPq˛O   Ó     Ù     KxPˇˇˇ÷   †Maryniuk              Multics      (å   QP	º3   G     N     wådˇˇˇ÷   °Lyttle                Multics      x,   Q_Ü¡•ô   l     s     ¨†xˇˇˇ÷   ¢Lyttle                Multics      <¥   Q_áêƒ   û     •     Æ¥åˇˇˇ÷   £Lyttle                Multics      †§   Q_à#8'   —     ÿ     ú»†ˇˇˇ÷   §Lyttle                Multics      d‹   Q_ã˙»   ˇ     /     |‹¥ˇˇˇ÷   •Lyttle                Multics      »   Q_åØ·   j     .v     ˇ»ˇˇˇ÷   ¶Lyttle                Multics      ‹   Q_çïFé   ∂     >∆     ‹ˇˇˇ÷   ßLyttle                Multics         Q_óØœK        +     _ˇˇˇ÷   ®Lyttle                Multics      0   Q_ò**•   k     p      ,ˇˇˇ÷   ©Maryniuk              Multics      å@   Qj]Sâ   ∞     ∑     ´@ˇˇˇ÷   ™Maryniuk              Multics      ,T   QjOΩ±   ‚     È     €T,ˇˇˇ÷   ´Maryniuk              Multics      @h   Qj¶pà         '     ¢h@ˇˇˇ÷   ¨Maryniuk              Multics      T|   QjÅ   P     W     á|Tˇˇˇ÷   ≠Maryniuk              Multics      hê   Qjxµ‰   y     Ä     ùêhˇˇˇ÷   ÆMaryniuk              Multics      |‡   Qj¯6c   ®     Ø     è§|ˇˇˇ÷   ØMaryniuk              Multics      ¥∏   Qj0Q   ”     ⁄     Ø∏êˇˇˇ÷   ∞Maryniuk              Multics      §Ã   Qjy!‹             ûÃ§ˇˇˇ÷   ±Maryniuk              Multics      ∏Ë   Qjãë∑   5     <    ±‡∏ˇˇˇ÷   ≤Maryniuk              Multics      êÙ   Qj…‘q   È          7ÙÃˇˇˇ÷   ≥Maryniuk              Multics      ‡ /* START OF:	rdc_error_.incl.pl1		  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  */
  7     2 
  7     3      dcl	MERROR_SEVERITY		fixed bin init (0),	/* Severity of highest-severity error.		*/
  7     4 	SERROR_CONTROL		bit(2) init ("00"b),/* Global switches control error message format.	*/
  7     5 	SERROR_PRINTED (dimension (error_control_table,1))
  7     6 				bit(1) unaligned init ((dimension (error_control_table,1))(1)"0"b),
  7     7 						/* Array bit is on if corresponding error message	*/
  7     8 						/* in error_control_table has already been printed*/
  7     9 	MIN_PRINT_SEVERITY		fixed bin init (0), /* Mimimum severity message that will be printed	*/
  7    10 	PRINT_SEVERITY_CONTROL	bit(2) init ("11"b);/* Action if severity < MIN_PRINT_SEVERITY	*/
  7    11 
  7    12 	/*  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */
  7    13 	/*									*/
  7    14 	/* N__a_m_e:  rdc_error_.incl.pl1							*/
  7    15 	/*									*/
  7    16 	/*      This include segment is used by compilers generated by the reduction_compiler.	*/
  7    17 	/* It defines a procedure which the compilers can use to print error messages.  	*/
  7    18 	/*									*/
  7    19 	/* E__n_t_r_y:  ERROR								*/
  7    20 	/*									*/
  7    21 	/*      Given an error number, this procedure prints a corresponding error message.	*/
  7    22 	/* The message is stored in a compiler-defined error_control_table, along with an integer	*/
  7    23 	/* which specifies the severity level of the error, and a switch which specifies whether	*/
  7    24 	/* the source statement in which the error occurred (if any) should be printed after the	*/
  7    25 	/* error message.  The printing of the error message may be supressed for all messages	*/
  7    26 	/* having a severity less than a specified (MIN_PRINT_SEVERITY) value.  The ERROR	*/
  7    27 	/*  procedure calls the lex_error_ subroutine to perform the formatting and printing of	*/
  7    28 	/*  the error message.							*/
  7    29 	/*									*/
  7    30 	/* U__s_a_g_e									*/
  7    31 	/*									*/
  7    32 	/*      call ERROR (error_number);						*/
  7    33 	/*									*/
  7    34 	/* 1) error_number	is the index of one of the structures in the error_control_table	*/
  7    35 	/*		which defines the error message to be printed.			*/
  7    36 	/*									*/
  7    37 	/* N__o_t_e_s									*/
  7    38 	/*									*/
  7    39 	/*      The format of the error_control_table is shown below.			*/
  7    40 	/*									*/
  7    41 	/*   dcl	1 error_control_table (2)	aligned internal static,			*/
  7    42 	/*	  2 severity		fixed bin(17) unaligned init (2,3),		*/
  7    43 	/*	  2 Soutput_stmt		bit(1) unaligned initial ("0"b,"1"b),		*/
  7    44 	/*	  2 message		char(252) varying initial (			*/
  7    45 	/*		"The reduction source segment does not contain any reductions.",	*/
  7    46 	/*		"Reduction label  '^a'  is invalid."),				*/
  7    47 	/*	  2 brief_message		char(100) varying initial (			*/
  7    48 	/*		"", "'^a'");						*/
  7    49 	/*									*/
  7    50 	/* error_control_table is an array of structures, with one array element per error.	*/
  7    51 	/* Each structure contains: a severity level for the error; a switch which specifies	*/
  7    52 	/* whether the source statement being processed should be output after the error message;	*/
  7    53 	/* the long form of the error message text;  and the brief form of the error message text.*/
  7    54 	/* The dimension of the error_control_table array of structures, and the lengths of	*/
  7    55 	/* message (long message) and brief_message (brief message), are compiler-defined.	*/
  7    56 	/* structures and the lengths of the message and brief_message are compiler-defined.	*/
  7    57 	/* The only requirement is that the messages be 256 characters or less in length.	*/
  7    58 	/* (Remember that the longest character string which can be used in an initial attribute	*/
  7    59 	/* is 254 characters in length.)						*/
  7    60 	/*								    å     
	‹ˇˇˇ÷   ÁMaryniuk              Multics      	
   QüÏË÷ˇ    ¨      ≥     è
	ˇˇˇ÷   ËMaryniuk              Multics      

,   QüÌ6ÜÍ    ◊      ﬁ     Ö
,
ˇˇˇ÷   ÈMaryniuk              Multics      

@   QüÌÖd'                ©
@
ˇˇˇ÷   ÍMaryniuk              Multics      
,
T   QüÓ^r[    2      9     «
T
,ˇˇˇ÷   ÎMaryniuk              Multics      
@
h   QüÓÿïˇ    k      r     Û
h
@ˇˇˇ÷   ÏMaryniuk              Multics      
T
|   QüÔUu∞    Ø      ∂     €
|
Tˇˇˇ÷   ÌMaryniuk              Multics      
h
¯   QüÔ˜D-   !-     !4    F
ê
hˇˇˇ÷   ÓMaryniuk              Multics      	ƒ
§   Qüˆ©8   !∆     !Õ     ã
§
|ˇˇˇ÷   ÔMaryniuk              Multics      
ê
∏   QüïaÒ   !     !˜    î
∏
êˇˇˇ÷   Maryniuk              Multics      
§
Ã   QüËd∏   !ú     !£     á
Ã
§ˇˇˇ÷   ÒMaryniuk              Multics      
∏
‡   Qü#∞g   !≈     !Ã     ß
‡
∏ˇˇˇ÷   ÚMaryniuk              Multics      
Ã
Ù   QüÇ◊,   !ˆ     !˝     ±
Ù
Ãˇˇˇ÷   ÛMaryniuk              Multics      
‡
   Qü Û*   "*     "1     Ñ

‡ˇˇˇ÷   ÙMaryniuk              Multics      
Ùò   Qü∑‰‘   "R     "Y    

Ùˇˇˇ÷   ıMaryniuk              Multics      	†
0   Qü·r·   "     /")     m
0
ˇˇˇ÷   ˆMaryniuk              Multics      

D   Qüü,°   "Ö     3"í     N
D
ˇˇˇ÷   ˜Maryniuk              Multics      
0
X   Qüç$   "Ê     !"Ô     -
X
0ˇˇˇ÷   ¯Maryniuk              Multics      
D
l   QüõØ›   #;     ,#F     ≥
l
Dˇˇˇ÷   ˘Maryniuk              Multics      
X
Ä   Qü_*   #s     '#}     ±
Ä
Xˇˇˇ÷   ˙Maryniuk              Multics      
l
î   QüÜH   #Í     #Ì     ®
î
lˇˇˇ÷   ˚Maryniuk              Multics      
Ä
®   Qü#p¡§   #W     #_     ∂
®
Äˇˇˇ÷   ¸Maryniuk              Multics      
î
º   Qü#˚Ã   #Õ     #”     ‡
º
îˇˇˇ÷   ˝Maryniuk              Multics      
®
–   Qü$z∆   $     $     Î
–
®ˇˇˇ÷   ˛Maryniuk              Multics      
º
‰   Qü$
õ   $L     $Q     …
‰
ºˇˇˇ÷   ˇMaryniuk              Multics      
–8   Qü*u≤   $Ñ     +$è    y
¯
–ˇˇˇ÷    Lyttle                Multics      
|   Q∏D«∆@   $.     $5     Œ
‰ˇˇˇ÷   Lyttle                Multics      
¯    Q∏G+E   $i     $p     ñ 
¯ˇˇˇ÷   Lyttle                Multics      4   Q∏GÌòΩ   $ñ     $ù     è4ˇˇˇ÷   Lyttle                Multics       H   Q∏H   $¡     $»     âH ˇˇˇ÷   Lyttle                Multics      4\   Q∏H—FÍ   $Î     $Ú     ¶\4ˇˇˇ÷   Lyttle                Multics      Hp   Q∏IÃÍú   %     %#     ¨pHˇˇˇ÷   Lyttle                Multics      \Ñ   Q∏I^±G   %N     %U     ÇÑ\ˇˇˇ÷   Lyttle                Multics      pú   Q∏Jë?   %v     %}     òpˇˇˇ÷   Lyttle                Multics      
¨   Q∏KFó   %Ñ     %ã    .¨Ñˇˇˇ÷   	Lyttle                Multics      ò¿   Q∏KèÖ;   %W     %^     º¿òˇˇˇ÷   
Lyttle                Multics      ¨‘   Q∏LU“   %ç     %î     	‘¨ˇˇˇ÷   Lyttle                Multics      ¿Ë   Q∏M<√   %◊     %ﬁ     ©Ë¿ˇˇˇ÷   Lyttle                Multics      ‘¸   Q∏M€<Û   &	     &     ‹¸‘ˇˇˇ÷   Lyttle                Multics      Ë   Q∏N›r   &G     &N     åËˇˇˇ÷   Lyttle                Multics      ¸$   Q∏Nﬂ   &q     &x     ‡$¸ˇˇˇ÷   Lyttle                Multics      ƒ   Q∏O|»   &∞     &∑     ú8ˇˇˇ÷   Lyttle                Multics      
‰L   Q∏Vø±   &ﬁ     	&·     L$ˇˇˇ÷   Lyttle                Multics      8`   Q∏Vä‰‰   &‚     	&Â     `8ˇˇˇ÷   Lyttle                Multics      Lt   Q∏\Èkû   &Ê     &È     ´tLˇˇˇ÷   Lyttle                Multics      `à   Q∏_h¶O   &     )&     ¿à`ˇˇˇ÷   Lyttle                Multics      tÿ   Q∏_ÒÕW   &O     -&[     ¡útˇˇˇ÷   Lyttle                Multics      Ñ∞   Q¡©ı⁄—   &å     &ì     ≠∞àˇˇˇ÷   Lyttle                Multics      ú(   Q¡©∏]ß   &ø     &∆     ñƒúˇˇˇ÷   Lyttle                Multics      $Ã   Q¡´§#   &Ï     &Û     Uÿ∞ˇˇˇ÷   Lyttle                Multics      àÏ   Q¬ú’ôÃ   'I     'O     ïÏƒˇˇˇ÷   Lyttle                Multics      ÿ    Q¬ù«¿9   'µ     'º     ‹ ÿs bit string, as shown below.			*/
  7   119 	/*									*/
  7   120 	/* PRINT_SEVERITY_CONTROL	_m_e_a_n_i_n_g						*/
  7   121 	/*	"00"b		update neither SERROR_PRINTED nor MERROR_SEVERITY.	*/
  7   122 	/*	"01"b		update SERROR_PRINTED to reflect the error.		*/
  7   123 	/*	"10"b		update MERROR_SEVERITY to reflect the error severity.	*/
  7   124 	/*	"11"b		update SERROR_PRINTED and MERROR_SEVERITY appropriately.	*/
  7   125 	/*The initial value of PRINT_SEVERITY_CONTROL is "11"b.				*/
  7   126 	/*									*/
  7   127 	/*      The ERROR procedure is simple to use, but it does limit the flexibility of the	*/
  7   128 	/* error message.  A compiler action routine can output more flexible error messages	*/
  7   129 	/* by calling lex_error_ directly.  See lex_error_ documentation for more details.	*/
  7   130 	/*									*/
  7   131 	/* S__t_a_t_u_s									*/
  7   132 	/*									*/
  7   133 	/* 0) Created:  April, 1974 by G. C. Dixon					*/
  7   134 	/* 1) Modified: April, 1982 by E. N. Kittlitz.  Added MIN_PRINT_SEVERITY, 		*/
  7   135 	/*		PRINT_SEVERITY_CONTROL.					*/
  7   136 	/*									*/
  7   137 	/*  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */
  7   138 
  7   139 ERROR:	procedure (Nerror);
  7   140 
  7   141      dcl	Nerror			fixed bin;	/* Number of the error which was detected. (In)	*/
  7   142 
  7   143      dcl	Pstmt			ptr,
  7   144 	1 erring_token		aligned based (Perring_token) like token,
  7   145 	Perring_token		ptr,
  7   146 	erring_token_value		char(erring_token.Lvalue) based (erring_token.Pvalue);
  7   147 
  7   148      dcl 	(max, null)		builtin;
  7   149 
  7   150      dcl	lex_error_		entry options (variable);
  7   151 
  7   152 
  7   153 	if error_control_table.severity(Nerror) < MIN_PRINT_SEVERITY then do; /* don't print		*/
  7   154 	     if PRINT_SEVERITY_CONTROL & "1"b then	/* update MERROR_SEVERITY			*/
  7   155 		MERROR_SEVERITY = max (MERROR_SEVERITY, error_control_table.severity(Nerror));
  7   156 	     if PRINT_SEVERITY_CONTROL & "01"b then	/* update SERROR_PRINTED			*/
  7   157 		SERROR_PRINTED(Nerror) = "1"b;
  7   158 	     return;
  7   159 	end;
  7   160 	Perring_token = Pthis_token;			/* address the current erring_token.		*/
  7   161 	if error_control_table.Soutput_stmt(Nerror) then
  7   162 	     if Perring_token = null then
  7   163 		Pstmt = null;
  7   164 	     else
  7   165 		Pstmt = erring_token.Pstmt;		/* address the statement descriptor.		*/
  7   166 	else
  7   167 	     Pstmt = null;
  7   168 	if Perring_token = null then
  7   169 	     call lex_error_ (Nerror, SERROR_PRINTED(Nerror), (error_control_table.severity(Nerror)),
  7   170 		MERROR_SEVERITY, Pstmt, Perring_token, SERROR_CONTROL, (error_control_table.message(Nerror)),
  7   171 		(error_control_table.brief_message(Nerror)));
  7   172 	else
  7   173 	     call lex_error_ (Nerror, SERROR_PRINTED(Nerror), (error_control_table.severity(Nerror)),
  7   174 		MERROR_SEVERITY, Pstmt, Perring_token, SERROR_CONTROL, (error_control_table.message(Nerror)),
  7   175 		(error_control_table.brief_message(Nerror)), erring_token_value, erring_token_value, erring_token_value);
  7   176 
  7   177 	end ERROR;
  7   178 
  7   179 	/* END OF:	rdc_error_.incl.pl1		  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  */
     1246 
     1247 
     1248 		/* START OF:	rdc_next_stmt_.incl.pl1	  *  *  *  *  *  *  */
  8     2 
  8     3 	/*  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  */
  8     4 	/*							*/
  8     5 	/* N__a_m_e:  rdc_next_stmt_.incl.pl1				*/
  8     6 	/*							*/
  8     7 	/*      This include segment is used by compilers generated by the	*/
  8     8 	/* reduction_compiler.  It includes a procedure which shifts the	*/
  8     9 	/* compilation process to the next source statement.		*/
  8    10 	/*							*/
  8    11 	/* S__t_a_t_u_s							*/
  8    12 	/*							*/
  8    13 	/* 0) Created:  April, 1974 by G. C. Dixon			*/
  8    14 	/*							*/
  8    15 	/*  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  */
  8    16 
  8    17 
  8    18 NEXT_STMT:	procedure;			/* invoked to begin parsing the next statement of	*/
  8    19 						/* the input tokens.			*/
  8    20 
  8    21      dcl	null			builtin,
  8    22 	Ssearching		bit(1) aligned;
  8    23 
  8    24 	Ptoken = Pthis_token;			/* make sure these pointers are the same.	*/
  8    25 	Pstmt = token.Pstmt;			/* address "current" statement's descriptor.	*/
  8    26 	Ssearching = "1"b;				/* start scanning forward for next statement.	*/
  8    27 	do while (Ssearching & token.Pnext ^= null);
  8    28 	     Ptoken = token.Pnext;
  8    29 	     if token.Pstmt = Pstmt then;
  8    30 	     else Ssearching = "0"b;
  8    31 	     end;
  8    32 	if token.Pstmt = Pstmt then			/* if there is no next statement, and		*/
  8    33 	     if SPDL then				/*   in PUSH DOWN LANGUAGE mode, can't run off	*/
  8    34 		Ptoken = Ptoken;			/*   end of input list.			*/
  8    35 	     else Ptoken, Pthis_token = null;		/*   otherwise, input list exhausted.		*/
  8    36 	else Pthis_token = Ptoken;			/* normally, next statement exists and Ptoken	*/
  8    37 						/*   points to its 1st _n_o_n-__d_e_l_e_t_e_d token.	*/
  8    38 
  8    39 	end NEXT_STMT;
  8    40 
  8    41 	/* END OF:	rdc_next_stmt_.incl.pl1	  *  *  *  *  *  *  */
     1248 
     1249 
     1250 	end dm_translate_system_config_;
	SOURCE FILES USED IN THIS COMPILATION.

LINE      NUMBER  DATE MODIFIED     NAME			PATHNAME
             0    03/17/86  1446.6  dm_translate_system_config_.pl1   >spec>install>1032>dm_translate_system_config_.pl1
660          1    01/07/85  0859.9  dm_system_config.incl.pl1         >ldd>include>dm_system_config.incl.pl1
662          2    04/16/82  0958.1  sub_err_flags.incl.pl1            >ldd>include>sub_err_flags.incl.pl1
669          3    04/18/75  1242.4  rdc_start_.incl.pl1               >ldd>include>rdc_start_.incl.pl1
3-25         4    04/18/75  1242.4  lex_descriptors_.incl.pl1         >ldd>include>lex_descriptors_.incl.pl1
805          5    03/17/86  1404.9  rdc_end_.incl.pl1                 >spec>install>1032>rdc_end_.incl.pl1
1244         6    04/18/75  1242.4  rdc_lex_.incl.pl1                 >ldd>include>rdc_lex_.incl.pl1
1246         7    08/15/83  1511.7  rdc_error_.incl.pl1               >ldd>include>rdc_error_.incl.pl1
1248         8    04/18/75  1242.4  rdc_next_stmt_.incl.pl1           >ldd>include>rdc_next_stmt_.incl.pl1
	NAMES DECLARED IN THIS COMPILATION.

IDENTIFIER	     OFFSET    LOC STORAGE CLASS   DATA TYPE		ATTRIBUTES AND REFERENCES
								(* indicates a set context)

NAMES DECLARED BY DECLARE STATEMENT.
ACTION_DEFAULT_RESTART          000623 constant        bit(36)                  initial dcl 2-7 set ref 573* 582*
BACKSPACE                       005473 constant        char(1)                  initial dcl 3-99 ref 5-113
CODE                            000647 automatic       fixed bin(35,0)          dcl 3-33 set ref 5-106* 5-107
DIRECTION                       000652 automatic       fixed bin(17,0)          initial dcl 671 set ref 5-62 671*
DM_ADOPT_OLD_BOOTLOAD           000604 constant        char(8)                  initial dcl 1-63 ref 499 1105 1111
DM_CONFIG_VERSION_2             000606 constant        char(8)                  initial dcl 1-63 ref 489
DM_DO_NOT_ADOPT_OLD_BOOTLOAD    000602 constant        char(8)                  initial dcl 1-63 ref 1125 1131
DM_DO_NOT_FORCE_ENABLE_NEW_BOOTLOAD
                                000576 constant        char(8)                  initial dcl 1-63 ref 503 945
DM_DO_NOT_HOLD_OLD_BOOTLOAD_DIRECTORY
                                000572 constant        char(8)                  initial dcl 1-63 ref 500 1085 1091
DM_DO_NOT_RECOVER_OLD_BOOTLOAD  000566 constant        char(8)                  initial dcl 1-63 ref 1165 1171
DM_FORCE_ENABLE_NEW_BOOTLOAD    000600 constant        char(8)                  initial dcl 1-63 ref 939
DM_HOLD_OLD_BOOTLOAD_DIRECTORY  000574 constant        char(8)                  initial dcl 1-63 ref 1065 1071
DM_RECOVERY_CHECK_MODE_OFF      000562 constant        char(8)                  initial dcl 1-63 ref 502 1205 1211
DM_RECOVERY_CHECK_MODE_ON       000564 constant        char(8)                  initial dcl 1-63 ref 1185 1191
DM_RECOVER_OLD_BOOTLOAD         000570 constant        char(8)                  initial dcl 1-63 ref 501 1145 1151
FORM                                   based           fixed bin(17,0)          level 2 packed unaligned dcl 3-48 ref 5-65 5-70
                                                                                  5-123
I                               000650 automatic       fixed bin(17,0)          dcl 3-33 in procedure "SEMANTIC_ANALYSIS" set ref
                                                                                  5-62* 5-63 5-79*
I                                      based           fixed bin(17,0)          level 2 in structure "TOKEN_REQD_STRING" packed
                                                                                  unaligned dcl 3-48 in procedure
                                                                                  "SEMANTIC_ANALYSIS" ref 5-126
IFIRST                                 based           fixed bin(17,0)          level 3 packed unaligned dcl 3-48 ref 5-62 5-73 5-79
                                                                                  5-79
ILAST                     0(18)        based           fixed bin(17,0)          level 3 packed unaligned dcl 3-48 ref 5-62 5-73 5-79
L                         0(18)        based           fixed bin(17,0)          level 2 packed unaligned dcl 3-48 ref 5-127
LTOKEN_REQD_VALUE               000636 automatic       fixed bin(18,0)          dcl 3-33 set ref 5-127* 5-128
Lvalue                    4            based           fixed bin(18,0)          level 2 in structure "token" dcl 4-68 in procedure
                                                                                  "dm_translate_system_config_" ref 536 536 539 542
                                                                                  542 563 573 573 603 603 606 609 5-92 5-92 5-92
                                                                                  5-92 5-106 5-106 5-113 5-113 5-128 1014 1021 1035
                                                                                  1042
Lvalue                    4            based           fixed bin(18,0)          level 2 in structure "erring_token" dcl 7-143
                                                                                  in procedure "ERROR" ref 7-172 7-172 7-172 7-172
                                                                                  7-172 7-172
ME                              000610 constant        char(32)                 initial dcl 408 set ref 466* 472* 521* 573* 582*
MERROR_SEVERITY                 000527 automatic       fixed bin(17,0)          initial dcl 7-3 set ref 7-3* 643 7-154* 7-154 7-168*
                                                                                  7-172*
MIN_PRINT_SEVERITY              000531 automatic       fixed bin(17,0)          initial dcl 7-3 set ref 7-3* 7-153
NRED                            000637 automatic       fixed bin(17,0)          dcl 3-33 set ref 5-52* 5-55* 5-55 5-58 825 833* 840*
                                                                                  845* 853* 860* 865* 873* 880* 885* 893* 900* 905*
                                                                                  913* 920* 925* 930* 936* 942* 948* 955* 960* 966*
                                                                                  972* 979* 984* 999* 1009* 1016* 1023* 1030* 1037*
                                                                                  1044* 1051* 1057* 1062* 1068* 1074* 1082* 1088*
                                                                                  1094* 1102* 1108* 1114* 1122* 1128* 1134* 1142*
                                                                                  1148* 1154* 1162* 1168* 1174* 1182* 1188* 1194*
                                                   RzƒûÏ   ;Û     ;˙     ç‡ˇˇˇ÷   ¥Lyttle                Multics      Ù   Rz†ÄÎ   <     <%     ∂Ùˇˇˇ÷   µLyttle                Multics      0   R{–∆   <S     <Z     è0ˇˇˇ÷   ∂Lyttle                Multics      Ä   R{üjÚ   <~     <Ö     ÍDˇˇˇ÷   ∑Lyttle                Multics      ÃX   R)∏ à¿   <¿     <«     TX0ˇˇˇ÷   ∏Lyttle                Multics      Dl   R)∏º9   <     <#     |lDˇˇˇ÷   πLyttle                Multics      X`   R)πC·⁄   <B     <I     äÄXˇˇˇ÷   ∫Lyttle                Multics      0î   R)πI>æ   <l     <s     îlˇˇˇ÷   ªLyttle                Multics  Ä   Ä®   R)ªÇ¢i   <∑     <æ     P®Äˇˇˇ÷   ºLyttle                Multics      îp   R)ªπT   =     =     Fºîˇˇˇ÷   ΩLyttle                Multics      ò–   R-¶§ˇ`   =k     	=n     –®ˇˇˇ÷   æLyttle                Multics      º‰   R-¶Cà   =Ø     	=≤     ‰ºˇˇˇ÷   øLyttle                Multics  Ä   –¯   R-¶ÛQ‚   =Ù     	=˜     µ¯–ˇˇˇ÷   ¿Lyttle                Multics  Ä   ‰   R-ßØ88   =%     	=(     s‰ˇˇˇ÷   ¡Lyttle                Multics  Ä   ¯    R-©∏˚|   =E     	=H      ¯ˇˇˇ÷   ¬Lyttle                Multics      4   R-©˝ñ   =M     	=P     à4ˇˇˇ÷   √Lyttle                Multics       H   R-™ÖOQ   =r     	=u     ºH ˇˇˇ÷   ƒLyttle                Multics      4\   R-™W$x   =§     	=ß     g\4ˇˇˇ÷   ≈Lyttle                Multics      H¨   R-´)Æ´   >     	>     pHˇˇˇ÷   ∆Lyttle                Multics      ®Ñ   R-‰l   >E     >L     oÑ\ˇˇˇ÷   «Lyttle                Multics      pò   R-‰âÒ†   >h     >o     oòpˇˇˇ÷   »Lyttle                Multics      Ñ<   R-Â5	   >ã     >í     «¨Ñˇˇˇ÷   …Lyttle                Multics      \¿   R2S4ÀS   >ƒ     >»     ¢¿òˇˇˇ÷    Lyttle                Multics      ¨‘   R2S”   >Ò     >ˆ     â‘¨ˇˇˇ÷   ÀLyttle                Multics      ¿Ë   R2T¥º_   >Y     2>f     ôË¿ˇˇˇ÷   ÃLyttle                Multics      ‘¸   R2ULåÆ   >ç     4>ö     R¸‘ˇˇˇ÷   ÕLyttle                Multics      Ë   R2U\É>   >Ô     )>˙     }Ëˇˇˇ÷   ŒLyttle                Multics      ¸$   R2Vä    ?Z     *?e     r$¸ˇˇˇ÷   œLyttle                Multics      8   R2WÚX‚   ?¬     
?≈     ±8ˇˇˇ÷   –Lyttle                Multics      $L   R2XZz˙   ?Ú     
?ı     ±L$ˇˇˇ÷   —Lyttle                Multics      8†   R2X:e   ?"     ?%     ò`8ˇˇˇ÷   “Maryniuk              Multics      lt   RB˜:∏^   ?K     ?R     ≥tLˇˇˇ÷   ”Maryniuk              Multics      `à   RB˜ØBú   ?     ?Ü     ∫à`ˇˇˇ÷   ‘Maryniuk              Multics      tú   RB˜C¡   ?µ     ?º     Üútˇˇˇ÷   ’Maryniuk              Multics      à∞   RB˜gÖ   ?ﬁ     ?Â     ¢∞àˇˇˇ÷   ÷Maryniuk              Multics      úƒ   RB˜«oT   @     @     ƒúˇˇˇ÷   ◊Maryniuk              Multics      ∞ÿ   RB¯bâ   @\     @c     Gÿ∞ˇˇˇ÷   ÿMaryniuk              Multics      ƒÏ   RB¯Õô‡   @µ     @º     ÛÏƒˇˇˇ÷   ŸMaryniuk              Multics      ÿ    RB¯j 0   @˘     @      ö ÿˇˇˇ÷   ⁄Maryniuk              Multics      Ï   RB¯“Ea   @'     @.     ’Ïˇˇˇ÷   €Maryniuk              Multics       (   RB˘ Kß   @d     @k     °( ˇˇˇ÷   ‹Maryniuk              Multics         RB˘ï[/   @î     @õ     ^<ˇˇˇ÷   ›Maryniuk              Multics      òP   RB˘©À   @Û     @˙     öP(ˇˇˇ÷   ﬁMaryniuk              Multics      <d   RB˘ÉFn   A!     A(     d<ˇˇˇ÷   ﬂMaryniuk              Multics      Px   RB˘‰·   Aj     Aq     ≠xPˇˇˇ÷   ‡Maryniuk              Multics      då   RB˙¬ñ®   A›     A‰    &ådˇˇˇ÷   ·Maryniuk              Multics      x‡   RB˙2Èß   B.     B5     —†xˇˇˇ÷   ‚Maryniuk              Multics      L¥   RB˚≈ñà   Bj     +Bu    ˚¥åˇˇˇ÷   „Maryniuk              Multics      †»   RB¸SÆ◊   Bt     >BÑ     l»†ˇˇˇ÷   ‰Maryniuk              Multics      ¥‹   RB¸‚◊   Bﬂ     BÊ     ö‹¥ˇˇˇ÷   ÂMaryniuk              Multics      »   RB˝∏é›   C     C     Ÿ»ˇˇˇ÷   ÊMaryniuk              Multics      ‹   RB˝ù5E   CL  2 5-92
                                                                                  5-92 5-101 5-104 5-106 5-106 5-106 5-108 5-113
                                                                                  5-113 5-113 5-113 5-118 5-124 5-128 5-128 821* 821
                                                                                  824* 830 830 850 850 870 870 890 890 1014 1014
                                                                                  1021 1021 1035 1035 1042 1042 6-36* 6-37 6-39
                                                                                  6-40* 6-40 6-42* 6-45 6-47* 6-47 6-49 8-24* 8-25
                                                                                  8-27 8-28* 8-28 8-29 8-32 8-32* 8-32 8-35* 8-36
Pvalue                    3            based           pointer                  level 2 in structure "token" packed unaligned
                                                                                  dcl 4-68 in procedure
                                                                                  "dm_translate_system_config_" ref 536 536 539 542
                                                                                  563 573 606 609 5-92 5-92 5-106 5-113 5-128 1014
                                                                                  1021 1035 1042
Pvalue                    3            based           pointer                  level 2 in structure "erring_token" packed unaligned
                                                                                  dcl 7-143 in procedure "ERROR" ref 7-172 7-172
                                                                                  7-172
RED                                    based           structure                level 1 dcl 3-48
REDUCTION                              based           structure                array level 1 packed unaligned dcl 674 set ref 5-58
REDUCTIONS                      000461 constant        fixed bin(17,0)          initial array unaligned dcl 674 set ref 5-58
S                        11            based           structure                level 3 packed unaligned dcl 4-68
SERROR_CONTROL                  000530 automatic       bit(2)                   initial unaligned dcl 7-3 set ref 7-3* 7-168* 7-172*
SERROR_PRINTED                  000531 automatic       bit(1)                   initial array unaligned dcl 7-3 set ref 7-3* 7-156*
                                                                                  7-168* 7-172*
SPDL                            000526 automatic       bit(1)                   initial dcl 1241 set ref 1241* 5-73 6-42 8-32
STOKEN_FCN                      000646 automatic       bit(1)                   dcl 3-33 set ref 810* 812* 814* 817
Soutput_stmt              0(18) 000010 internal static bit(1)                   initial array level 2 packed unaligned dcl 373 set
                                                                                  ref 459* 7-161
Ssearching                      000730 automatic       bit(1)                   dcl 8-21 set ref 8-26* 8-27 8-30*
TOKEN_REQD                             based           structure                level 2 in structure "RED" packed unaligned dcl 3-48
                                                                                  in procedure "SEMANTIC_ANALYSIS"
TOKEN_REQD                             based           structure                level 1 dcl 3-48 in procedure "SEMANTIC_ANALYSIS"
TOKEN_REQD_STRING                      based           structure                level 1 dcl 3-48
TOKEN_REQD_VALUE                       based           char                     unaligned dcl 3-48 ref 5-128
TOKEN_REQUIREMENT                      based           structure                array level 1 packed unaligned dcl 746 set ref 5-63
TOKEN_REQUIREMENTS              000224 constant        fixed bin(17,0)          initial array unaligned dcl 746 set ref 5-63
TOKEN_STRINGS                          based           char(219)                dcl 798 set ref 5-126
TOKEN_STRING_              Multics      Ë   RÖ◊≥†N   Qµ     Qº     èËˇˇˇ÷  NLyttle                Multics      ¸$   RÖÿ5®   Q‡     QÁ     Ñ$¸ˇˇˇ÷  OLyttle                Multics      8   RÖÿú9°   R     R     u8ˇˇˇ÷  PLyttle                Multics      $P   RÖÿM:d   R-     R4     °L$ˇˇˇ÷  QLyttle                Multics      ‰`   RÖŸ—Ä    R]     Rd     G`8ˇˇˇ÷  RLyttle                Multics      Lt   RÖŸGâ¬   R∂     RΩ     ˇtLˇˇˇ÷  SLyttle                Multics      `à   RÖŸ≤í   R˝     R     |à`ˇˇˇ÷  TLyttle                Multics      tú   RÖ⁄	$   R#     R*     ôútˇˇˇ÷  ULyttle                Multics      à∞   RÖ⁄ÕΩz   RQ     RX     ‘∞àˇˇˇ÷  VLyttle                Multics      úƒ   RÖ⁄4Ôz   Rç     Rî     úƒúˇˇˇ÷  WLyttle                Multics      ∞ÿ   RÖ⁄¶7S   Rª     R¬     'ÿ∞ˇˇˇ÷  XLyttle                Multics      ƒÏ   RÖ€›Ã   S     S     ïÏƒˇˇˇ÷  YLyttle                Multics      ÿ   RÖ€Ü%é   S9     S@     ú ÿˇˇˇ÷  ZLyttle                Multics      H   RÖ‹-l   Sg     *Sr     :Ïˇˇˇ÷  [Lyttle                Multics       (   RÖ‹ˆS   S¡     %SÀ     +( ˇˇˇ÷  \Lyttle                Multics      <   RÖ›–;)   S     S     ´<ˇˇˇ÷  ]Lyttle                Multics      (h   RÖ›îäó   SH     (SR     üP(ˇˇˇ÷  ^Lyttle                Multics      8d   Rå“Oéõ   Sz     SÅ     Œd<ˇˇˇ÷  _Lyttle                Multics      Px   Rå“Òb\   Sµ     Sº     ¨xPˇˇˇ÷  `Lyttle                Multics      då   Rå“úR7   SÁ     SÓ     Íådˇˇˇ÷  aLyttle                Multics      x†   Rå”QÌ   T)     T0     ä†xˇˇˇ÷  bLyttle                Multics      å¥   Rå”tÒ   TS     TZ     ç¥åˇˇˇ÷  cLyttle                Multics      †»   Rå”‰i∞   T~     TÖ     É»†ˇˇˇ÷  dLyttle                Multics      ¥‹   Rå”V<p   T¶     T≠     å‹¥ˇˇˇ÷  eLyttle                Multics      »   Rå”÷Ø¬   T–     T◊     ö»ˇˇˇ÷  fLyttle                Multics      ‹Ã   Rå‘ÕŒ¶   T˛     T     B‹ˇˇˇ÷  gLyttle                Multics      Ï   Rå‘∆%   TV     T]     £ˇˇˇ÷  hLyttle                Multics      ,   Rå’-vÀ   TÜ     Tç     É,ˇˇˇ÷  iLyttle                Multics  Ä   @   Rå’ï_;   TÆ     Tµ     õ@ˇˇˇ÷  jLyttle                Multics      ,T   Rå÷?É~   T‹     T„     ∏T,ˇˇˇ÷  kLyttle                Multics      @‘   Rå÷’çô   U     U     •h@ˇˇˇ÷  lLyttle                Multics      <|   Rå◊ÄLo   UB     UJ     |Tˇˇˇ÷  mLyttle                Multics      hê   Rå◊LÎ   Uê     Uï     øêhˇˇˇ÷  nLyttle                Multics      |§   Råÿ@R@   U≈     U      µ§|ˇˇˇ÷  oLyttle                Multics      ê∏   Råÿ[Õ   U¯     U˝     ©∏êˇˇˇ÷  pLyttle                Multics      §à   RåŸlÎ   U(     U0     √Ã§ˇˇˇ÷  qLyttle                Multics      ‡   Rù~Çãﬂ   Ua     Uh     Õ‡∏ˇˇˇ÷  rLyttle                Multics      ÃÙ   Rù2vƒ   Uú     U£     ≠ÙÃˇˇˇ÷  sLyttle                Multics      ‡   RùÆ∑á   Uœ     U÷     Í‡ˇˇˇ÷  tLyttle                Multics      Ù   Rùÿ/<   V     V     ãÙˇˇˇ÷  uLyttle                Multics      0   RùÄxΩK   V;     VB     ç0ˇˇˇ÷  vLyttle                Multics      D   RùÄË|8   Vf     Vm     ÖDˇˇˇ÷  wLyttle                Multics      0X   RùÄ`˚   Vè     Vñ     åX0ˇˇˇ÷  xLyttle                Multics  Ä   Dl   RùÅ-E   Vπ     V¿     ålDˇˇˇ÷  yLyttle                Multics      XÄ   RùÅ
›   V„     VÍ     6ÄXˇˇˇ÷  zLyttle                Multics      lî   RùÅà;5   V8     V?     Cîlˇˇˇ÷  {Lyttle                Multics      Ä®   RùÇß   Vê     Vó     ﬁ®Äˇˇˇ÷  |Lyttle                Multics      îº   RùÇÉ8^   Vœ     V÷     ∑ºîˇˇˇ÷  }Lyttle                Multics      ®–   RùÇÚº   W     W     ~–®ˇˇˇ÷  ~Lyttle                Multics      º‰   RùÇ]÷Ø   W+     W2     ö‰ºˇˇˇ÷  Lyttle                Multics  Ä   –¯   RùÇ≥5»   WY     W`     x¯–ˇˇˇ÷  ÄLyttle                Mu  RÆúCh˜   ]Ø     ]≤     œ‡ˇˇˇ÷  ¥Maryniuk              Multics      Ùº   RæØmC   ]Ê     ']    HÙˇˇˇ÷  µLyttle                Multics      x0   Røo†∂    ^Ç     ^â     ~0ˇˇˇ÷  ∂Lyttle                Multics      p   Røp“.   ^©     ^∞     çDˇˇˇ÷  ∑Lyttle                Multics      X   Røpë≠   ^‘     ^€     •X0ˇˇˇ÷  ∏Lyttle                Multics      Dl   Røqf§   ^     ^     |lDˇˇˇ÷  πLyttle                Multics      XÄ   RøqqÿV   ^+     ^2     }ÄXˇˇˇ÷  ∫Lyttle                Multics      lî   RøqÒv   ^R     ^Y     £îlˇˇˇ÷  ªLyttle                Multics      Ä®   Røqd®`   ^Ç     ^â     ñ®Äˇˇˇ÷  ºLyttle                Multics      î8   Røq¯6˚   ^Ø     ^∂      ºîˇˇˇ÷  ΩLyttle                Multics      –   Rør‹Åù   ^È     ,^Ù     $–®ˇˇˇ÷  æLyttle                Multics      º‰   RøsÏî„   _=     _D     +‰ºˇˇˇ÷  øLyttle                Multics      –¯   Røsÿ:Ù   _è     ,_ö     ˆ¯–ˇˇˇ÷  ¿Lyttle                Multics      ‰   Røt•h   _ÿ     !_·     –‰ˇˇˇ÷  ¡Lyttle                Multics      ¯    Røtó∂P   _     '_     ◊ ¯ˇˇˇ÷  ¬Lyttle                Multics      4   Røug5   _U     _\     ∫4ˇˇˇ÷  √Lyttle                Multics       H   RøuIéh   _ã     _ë     ¥H ˇˇˇ÷  ƒLyttle                Multics      4\   Røv>‚8   _æ     _√     ≥\4ˇˇˇ÷  ≈Lyttle                Multics      H|   Røv¥˙)   _     _ˆ     ·pHˇˇˇ÷  ∆Lyttle                Multics      0Ñ   R√  ˙ñ   `/     `6     ¸Ñ\ˇˇˇ÷  «Lyttle                Multics      pò   R√ïï   `u     `|     èòpˇˇˇ÷  »Lyttle                Multics      Ñ¨   R√1@z   `†     `ß     ó¨Ñˇˇˇ÷  …Lyttle                Multics      ò¿   R√ºƒ?   `Õ     `‘     £¿òˇˇˇ÷   Lyttle                Multics      ¨‘   R√;x÷   `˝     `     ¿‘¨ˇˇˇ÷  ÀLyttle                Multics      ¿Ë   R√≈àk   `4     `;     ÉË¿ˇˇˇ÷  ÃLyttle                Multics      ‘¸   R√+Ä2   `\     `c     }¸‘ˇˇˇ÷  ÕLyttle                Multics      Ë   R√ö◊ô   `É     `ä     §Ëˇˇˇ÷  ŒLyttle                Multics      ¸$   R√&   `≥     `∫     ã$¸ˇˇˇ÷  œLyttle                Multics      ∞   R√{Ãí   `›     `‰     Ç8ˇˇˇ÷  –Lyttle                Multics      ®L   R√B‘Õ   a     a     wL$ˇˇˇ÷  —Lyttle                Multics      8`   R√´2<   a*     a1     v`8ˇˇˇ÷  “Lyttle                Multics      Lt   R√^%   aO     aV     ÇtLˇˇˇ÷  ”Lyttle                Multics      `à   R√mïﬂ   aw     a~     ∂à`ˇˇˇ÷  ‘Lyttle                Multics      tú   R√◊Û   a¨     a≥     õútˇˇˇ÷  ’Lyttle                Multics      à   R√G—í   a⁄     a·     ~∞àˇˇˇ÷  ÷Lyttle                Multics      $ƒ   R–πÿb   a     a     åƒúˇˇˇ÷  ◊Lyttle                Multics      ∞ÿ   R–πàb   a+     a2     Ñÿ∞ˇˇˇ÷  ÿLyttle                Multics      ƒÏ   R–∫{   aS     aZ     öÏƒˇˇˇ÷  ŸLyttle                Multics      ÿ    R–∫q≈&   aÅ     aà     ª ÿˇˇˇ÷  ⁄Lyttle                Multics      Ï‡   R–∫ÿ7ﬁ   a∑     aæ     ªÏˇˇˇ÷  €Lyttle                Multics      ú(   R–∫∂ÔÈ   aÌ     aÙ     ´( ˇˇˇ÷  ‹Lyttle                Multics      <   R–ª=6ä   b     b&     ¡<ˇˇˇ÷  ›Lyttle                Multics      (P   R–ª»õZ   bW     b^     tP(ˇˇˇ÷  ﬁLyttle                Multics      <d   R–ª;LÅ   b{     bÇ     	d<ˇˇˇ÷  ﬂLyttle                Multics      Px   R–ªµßï   b≈     bÃ     ÿxPˇˇˇ÷  ‡Lyttle                Multics      då   R–º9ı7   b     b	     õådˇˇˇ÷  ·Lyttle                Multics      x†   R–ºÁ‚‹   b0     b7     ü†xˇˇˇ÷  ‚Lyttle                Multics      å¥   R–ºóŸÃ   b_     bf     ±¥åˇˇˇ÷  „Lyttle                Multics      †»   R–Ω¸=   bì     bö     §»†ˇˇˇ÷  ‰Lyttle                Multics      ¥‹   R–Ωx€Œ   b√     b      Á‹¥ˇˇˇ÷  ÂLyttle                Multics      »   R–ΩÚ@ù   c     c     ∂»ˇˇˇ÷  ÊLyttle                Multics  Ä   ‹   R–ΩpCl   c9  ˇˇˇ÷  Lyttle                Multics      Ï    RÊÉo l   i√     i      | Ïˇˇˇ÷  Lyttle                Multics         (   RÊÉ#ìJ   iÈ     i     ü (  ˇˇˇ÷  Lyttle                Multics        <   RÊÉâóT   j     j     ~ < ˇˇˇ÷  Lyttle                Multics       ( P   RÊÉ˝‰    j?     jF     0 P (ˇˇˇ÷  Lyttle                Multics       < d   RÊÑkza   jí     jô     „ d <ˇˇˇ÷  Lyttle                Multics       P x   RÊÑà;ø   j“     jŸ     x x Pˇˇˇ÷   Lyttle                Multics       d å   RÊÑ¸5   j˜     j˛      å dˇˇˇ÷  !Lyttle                Multics       x †   RÊÖ{nh   j?     jF     ê † xˇˇˇ÷  "Lyttle                Multics       å |   RÊÖÈÄ   jj     jq     ≤ ¥ åˇˇˇ÷  #Lyttle                Multics      t »   RÊÜ?ÆD   jû     .j™     ≈ » †ˇˇˇ÷  $Lyttle                Multics       ¥ ‹   RÊÜ5·X   j‹     j‰      ‹ ¥ˇˇˇ÷  %Lyttle                Multics       »    RÊáQÆ   k&     k,     û  »ˇˇˇ÷  &Lyttle                Multics  Ä    ‹    RÊá˘aŸ   kT     /k`     „  ‹ˇˇˇ÷  'Lyttle                Multics        ‡   RÊà=.∆   kô     /k•     „  ˇˇˇ÷  (Lyttle                Multics  Ä   ÿ ,   RÌwΩ9ä   kﬁ     kÂ      , ˇˇˇ÷  )Lyttle                Multics        @   RÌxü-ﬁ   kÈ     k     º @ ˇˇˇ÷  *Lyttle                Multics       , T   RÌx	>   k     k&     ã T ,ˇˇˇ÷  +Lyttle                Multics       @ h   RÌxÅx   kI     kP     § h @ˇˇˇ÷  ,Lyttle                Multics       T!l   RÌy
ÈÃ   ky     kÄ     ≤ | Tˇˇˇ÷  -Lyttle                Multics       † ê   RÌyÈjÔ   k≠     k¥      ê hˇˇˇ÷  .Lyttle                Multics       | §   RÌy´   kı     k¸     ≥ § |ˇˇˇ÷  /Lyttle                Multics       ê ∏   RÌyÛ5J   l)     l0     ù ∏ êˇˇˇ÷  0Lyttle                Multics       § Ã   RÌzq@ı   lX     l_     ƒ Ã §ˇˇˇ÷  1Lyttle                Multics       ∏!î   RÌz(}√   lê     ló     ˛ ‡ ∏ˇˇˇ÷  2Lyttle                Multics        Ù   RÌ{ƒ   l◊     &l·     ≈ Ù Ãˇˇˇ÷  3Lyttle                Multics       ‡!   RÌ|¥=F   l     l     ˇ! ‡ˇˇˇ÷  4Lyttle                Multics       Ù!   RÌ|ä{   l[     la     û! Ùˇˇˇ÷  5Lyttle                Multics  Ä   !!0   RÌ}ÖN   lâ     /lï     „!0!ˇˇˇ÷  6Lyttle                Multics      !!D   RÌ~õÕê   lŒ     /l⁄     „!D!ˇˇˇ÷  7Maryniuk              Multics      !0!X   RÌÃG∆∫   m     m     Ò!X!0ˇˇˇ÷  8Maryniuk              Multics      !D"8   RÌÕΩ   mñ     
mô     Æ!l!Dˇˇˇ÷  9Lyttle                Multics       h!Ä   R˛HËêÌ   m≈     mÃ     |!Ä!Xˇˇˇ÷  :Lyttle                Multics      !l!4   R˛IWxÏ   mÎ     mÚ     â!î!lˇˇˇ÷  ;Lyttle                Multics       Ã!®   R˛I'~   m     m     „!®!Äˇˇˇ÷  <Lyttle                Multics      !î!º   R˛I∫7^   mU     m\     Ê!º!îˇˇˇ÷  =Lyttle                Multics      !®!–   R˛JoŸ   mñ     mù     ‹!–!®ˇˇˇ÷  >Lyttle                Multics      !º!‰   R˛K°Ó   m‘     m€     Û!‰!ºˇˇˇ÷  ?Lyttle                Multics      !–!¯   R˛KUÎ   n     n     ã!¯!–ˇˇˇ÷  @Lyttle                Multics      !‰!   R˛KmT#   nB     nI     o!!‰ˇˇˇ÷  ALyttle                Multics      !¯!    R˛L5H   ne     nl     ⁄! !¯ˇˇˇ÷  BLyttle                Multics      !!ò   R˛LXV   n£     n™     “!4!ˇˇˇ÷  CLyttle                Multics      !Ä!H   R™M   nﬂ     nÊ     µ!H! ˇˇˇ÷  DLyttle                Multics      !4!\   RÉL   n     n     ~!\!4ˇˇˇ÷  ELyttle                Multics      !H!p   R'—   n;     nB     í!p!Hˇˇˇ÷  FLyttle                Multics      !\!Ñ   RâEf   ng     nn     ~!Ñ!\ˇˇˇ÷  GLyttle                Multics  Ä   !p"`   Rı'õ   né     nï     !ò!pˇˇˇ÷  HLyttle                Multics      ! !¨   R“0   nµ     nº    v!¨!Ñˇˇˇ÷  ILyttle                Multics      !ò!¿   RF≤Ω   oö     o°    O!¿!òˇˇˇ÷  JLyttle                Multics      !¨!‘   R’&V   ou     o|     $!‘!¨ˇˇˇ÷  KLyttle                Multics      !¿!Ë   RE¨⁄   o≈     oÃ     à!Ë!¿ˇˇˇ÷  LLyttle                Multics      !‘!¸   R…/F   oÓ     oı     £!¸!‘ˇˇˇ÷  MLyttle  ltics      #‰$   R4fñﬁh   uf     um     ¨$#‰ˇˇˇ÷  ÅLyttle                Multics      #¯$    R4g+{@   uò     uü     ã$ #¯ˇˇˇ÷  ÇLyttle                Multics      $$4   R4gë◊˙   u¬     u…     ú$4$ˇˇˇ÷  ÉLyttle                Multics      $ $H   R4gÏÛï   u     u˜     Ÿ$H$ ˇˇˇ÷  ÑLyttle                Multics      $4$\   R4gáÌ   u.     u5     Ÿ$\$4ˇˇˇ÷  ÖLyttle                Multics      $H$p   R4g„C·   ul     us     Æ$p$Hˇˇˇ÷  ÜLyttle                Multics      $\$Ñ   R4hèfj   uü     u¶     ®$Ñ$\ˇˇˇ÷  áLyttle                Multics      $p$8   R4hÎ√9   u–     u◊     ≠$ò$pˇˇˇ÷  àLyttle                Multics      #–$¨   R9b™
k   v     v
     Å$¨$Ñˇˇˇ÷  âLyttle                Multics      $ò$¿   R9c8©   v+     v2     w$¿$òˇˇˇ÷  äLyttle                Multics      $¨$‘   R9cud   vP     vW     {$‘$¨ˇˇˇ÷  ãLyttle                Multics      $¿$Ë   R9cŸ≠   vv     v}     x$Ë$¿ˇˇˇ÷  åLyttle                Multics      $‘$¸   R9cM‹ò   võ     v¢     °$¸$‘ˇˇˇ÷  çLyttle                Multics      $Ë$   R9cﬂÉ   vÀ     v“     {$$Ëˇˇˇ÷  éLyttle                Multics      $¸$$   R9dDË   vÒ     v¯     ´$$$¸ˇˇˇ÷  èLyttle                Multics      $%‹   R9d≤Bp   v#     v*     £$8$ˇˇˇ÷  êLyttle                Multics      $Ñ$L   R9dè{•   vS     vZ     ù$L$$ˇˇˇ÷  ëLyttle                Multics      $8$`   R9dÛ∏a   vÇ     vâ     Ø$`$8ˇˇˇ÷  íLyttle                Multics      $L$t   R9em›   vµ     vº     ã$t$Lˇˇˇ÷  ìLyttle                Multics      $`$à   R9e—æi   vﬂ     vÊ     ú$à$`ˇˇˇ÷  îLyttle                Multics      $t$ú   R9eM◊Ï   w     w     Ÿ$ú$tˇˇˇ÷  ïLyttle                Multics      $à$∞   R9e∏Âü   wK     wR     §$∞$àˇˇˇ÷  ñLyttle                Multics      $ú$ƒ   R9fI0   w{     wÇ     Æ$ƒ$úˇˇˇ÷  óLyttle                Multics      $∞$ÿ   R9fzÍ˜   wÆ     wµ     ®$ÿ$∞ˇˇˇ÷  òLyttle                Multics      $ƒ$Ï   R9f¯   wﬂ     wÊ     —$Ï$ƒˇˇˇ÷  ôLyttle                Multics      $ÿ%    R9fÅ$≥   w     w"     ¨% $ÿˇˇˇ÷  öLyttle                Multics      $Ï%   R9fﬂG˘   wM     wT     Ñ%$Ïˇˇˇ÷  õLyttle                Multics      % %@   R9gG   wu     w|     %(% ˇˇˇ÷  úLyttle                Multics  Ä   #l%<   R9g¬÷Œ   wΩ     	w¿     %<%ˇˇˇ÷  ùLyttle                Multics      %(%P   R9i¿µÓ   w¡     "w      $%P%(ˇˇˇ÷  ûLyttle                Multics      %<%d   R9j|ÅÂ   x     x     ë%d%<ˇˇˇ÷  üLyttle                Multics      %P%x   R9jE"   x>     5xL     Ò%x%Pˇˇˇ÷  †Lyttle                Multics      %d%å   R9jÓéæ   xâ     -xï     —%å%dˇˇˇ÷  °Lyttle                Multics      %x%†   R9k≠Q   x      2x◊     ˆ%†%xˇˇˇ÷  ¢Lyttle                Multics      %å%¥   R9k¶|˛   x     &x     ø%¥%åˇˇˇ÷  £Lyttle                Multics      %†%»   R9lö7÷   xO     9x^     P%»%†ˇˇˇ÷  §Lyttle                Multics      %¥'†   R9mXàá   x≤     xπ    %‹%¥ˇˇˇ÷  •Lyttle                Multics      $$%   R>ùêne   y:     yA     §%%»ˇˇˇ÷  ¶Lyttle                Multics      %‹%   R>ùÏß;   yj     yq     ∞%%‹ˇˇˇ÷  ßLyttle                Multics      %%   R>ùV‹   yù     y§     ¢%%ˇˇˇ÷  ®Lyttle                Multics      %%,   R>ù…M   yÕ     y‘     §%,%ˇˇˇ÷  ©Lyttle                Multics      %%∏   R>û5Ÿ˙   y˝     y     ó%@%ˇˇˇ÷  ™Lyttle                Multics      %%T   R>û(Q    y*     y1     ¶%T%,ˇˇˇ÷  ´Lyttle                Multics      %@%h   R>ûÑ)   y[     yb     Œ%h%@ˇˇˇ÷  ¨Lyttle                Multics      %T%|   R>ûÈÚŸ   yñ     yù     Ÿ%|%Tˇˇˇ÷  ≠Lyttle                Multics      %h%ê   R>üE©   y‘     y€     î%ê%hˇˇˇ÷  ÆLyttle                Multics      %|%§   R>ü§j   z      z     ’%§%|ˇˇˇ÷  ØLyttle                Multics      %ê&p   R>ü'›   z=     zD     õ%∏%êˇˇˇ÷  ∞Lyttle                Multics      %,%Ã   RVta3   zk     zr     '%Ã%§ˇˇˇ÷  ±Lyttle                Multics      %∏%‡   RVtÄª„   zº     z√     ™%‡%∏ˇˇˇ÷  ≤Lyttle                Multics      %Ã%Ù   RVt Y   zÓ     zı     Ö%Ù%Ãˇˇˇ÷  ≥Lyttle                Multics      %‡&    ÄA     Ø('‹ˇˇˇ÷  ÁLyttle                Multics      '(   RgqYfª   Äm     Ät     q('ˇˇˇ÷  ËLyttle                Multics      ((,   RgqÃ.„   Äë     Äò     Ü(,(ˇˇˇ÷  ÈLyttle                Multics      ((@   Rgr:’≤   Ä∫     Ä¡     £(@(ˇˇˇ÷  ÍLyttle                Multics      (,(T   Rgrö„   ÄÍ     ÄÒ     è(T(,ˇˇˇ÷  ÎLyttle                Multics      (@(h   Rgr»Í   Å     Å     }(h(@ˇˇˇ÷  ÏLyttle                Multics      (T(|   Rgr®–Æ   Å<     ÅC     ™(|(Tˇˇˇ÷  ÌLyttle                Multics      (h(ê   Rgs=§   Ån     Åu     ™(ê(hˇˇˇ÷  ÓLyttle                Multics      (|(§   Rgs\O   Å†     Åß     Æ(§(|ˇˇˇ÷  ÔLyttle                Multics      (ê(∏   RgsÄﬁÓ   Å”     Å⁄     x(∏(êˇˇˇ÷  Lyttle                Multics      (§(Ã   RgsÛ¨   Å¯     Åˇ     v(Ã(§ˇˇˇ÷  ÒLyttle                Multics      (∏(‡   Rgtiï»   Å     Å$     ó(‡(∏ˇˇˇ÷  ÚLyttle                Multics      (Ã(Ù   RgtÀ<+   ÅJ     ÅQ     Å(Ù(Ãˇˇˇ÷  ÛLyttle                Multics      (‡)º   RgtÑn˛   År     Åy     †((‡ˇˇˇ÷  ÙLyttle                Multics      'å(   Rguw¯÷   Å°     Å®     Ù((Ùˇˇˇ÷  ıLyttle                Multics      ((0   RguÏ…m   ÅÂ     ÅÏ    é(0(ˇˇˇ÷  ˆLyttle                Multics      ()D   RgvxO   Çê     Çó     
)D(  ˜  ˆ  Rgvˇ¢r Q|)D)X)l)Ä)î)®)º)–)‰)¯** *4*H*\*p*Ñ*ò*¨*¿*‘*Ë*¸**$*8*L*`*t*à*ú*∞*ƒ*ÿ*Ï+ ++(+<+P+d+x+å+†+¥+»+‹++++,+@+T+h+|+ê+§+∏+Ã+‡+Ù,,,0,D,X,l,Ä,î,®,º,–,‰,¯,, ,4,H,\,p,Ñ,ò,¨,¿,‘,Ë,¸--$-8-L-`-t-à-ú-∞-ƒ-ÿ-Ï- --(-<-P-d-x-å-†-¥-»-‹-...,.@.T.h.|.ê.§.∏.Ã.‡.Ù...0.D.X.l.Ä.î.®.º.–.‰.¯// /4/H/\/p/Ñ/ò/¨/¿/‘/Ë/¸//$/8/L/`/t/à/ú/∞/ƒ/ÿ/Ï0 00(0<0P0d0x0å0†0¥0»0‹0000,0@0T0h0|0ê0§0∏0Ã0‡0Ù11101D1X1l1Ä1î1®1º1–1‰1¯11 141H1\1p1Ñ1ò1¨1¿1‘1Ë1¸22$282L2`2t2à2ú2∞2ƒ2ÿ2Ï2 22(2<2P2d2x2å2†2¥2»2‹2333,3@3T3h3|3ê3§3∏3Ã3‡3Ù33303D3X3l3Ä3î3®3º3–3‰3¯44 444H4\4p4Ñ4ò4¨4¿4‘4Ë4¸44$484L4`4t4à4ú4∞4ƒ4ÿ4Ï5 55(5<5P5d5x5å5†5¥5»5‹5555,5@5T5h5|5ê5§5∏5Ã5‡5Ù66606D6X6l6Ä6î6®6º6–6‰6¯66 646H6\6p6Ñ6ò6¨6¿6‘6Ë6¸77$787L7`7t7à7ú7∞7ƒ7ÿ7Ï7 77(7<7P7d7x7å7†7¥7»7‹7888,8@8T8h8|8ê8§8∏8Ã8‡8Ù88808D8X8l8Ä8î8®8º8–8‰8¯99 949H9\9p9Ñ9ò9¨9¿9‘9Ë9¸99$989L9`9t9à9ú9∞9ƒ9ÿ9Ï: ::(:<:P:d:x:å:†:¥:»:‹::::,:@:T:h:|:ê:§:∏:Ã:‡:Ù;;;0;D;X;l;Ä;î;®;º;–;‰;¯;; ;4;H;\;p;Ñ;ò;¨;¿;‘;Ë;¸<<$<8<L<`<t<à<ú<∞<ƒ<ÿ<Ï< <<(<<<P<d<x<å<†<¥<»<‹<===,=@=T=h=|=ê=§=∏=Ã=‡=Ù===0=D=X=l=Ä=î=®=º=–=‰=¯>> >4>H>\>p>Ñ>ò>¨>¿>‘>Ë>¸>>$>8>L>`>t>à>ú>∞>ƒ>ÿ>Ï? ??(?<?P?d?x?å?†?¥?»?‹????,?@?T?h?|?ê?§?∏?Ã?‡?Ù@@@0@D@X@l@Ä@î@®@º@–@‰@¯@@ @4@H@\@p@Ñ@ò@¨@¿@‘@Ë@¸AA$A8ALA`AtAàAúA∞AƒAÿAÏA AA(A<APAdAxAåA†A¥A»A‹ABBB,B@BTBhB|BêB§B∏BÃB‡BÙBBB0BDBXBlBÄBîB®BºB–B‰B¯CC C4CHC\CpCÑCòC¨C¿C‘CËC¸CC$C8CLC`CtCàCúC∞CƒCÿCÏD DD(D<DPDdDxDåD†D¥D»D‹DDDD,D@DTDhD|DêD§D∏DÃD‡DÙEEE0EDEXElEÄEîE®EºE–E‰E¯EE E4EHE\EpEÑEòE¨E¿E‘EËE¸FF$F8FLF`FtFàFúF∞FƒFÿFÏF FF(F<FPFdFxFåF†F¥F»F‹FGGG,G@GTGhG|GêG§G∏GÃG‡GÙGGG0GDGXGlGÄGîG®GºG–G‰G¯HH H4HHH\HpHÑHòH¨H¿H‘HËH¸HH$H8HLH`HtHàHúH∞HƒHÿHÏI II(I<IPIdIxIåI†I¥I»I‹IIII,I@ITIhI|IêI§I∏IÃI‡IÙJJJ0JDJXJlJÄJîJ®JºJ–J‰J¯JJ J4JHJ\JpJÑJòJ¨J¿J‘JËJ¸KK$K8KLK`KtKàKúK∞KƒKÿKÏK KK(K<KPKdKxKåK†K¥K»K‹KLLL,L@LTLhL|LêL§L∏LÃL‡LÙLLL0LDLXLlLÄLîL®LºL–L‰L¯MM M4MHM\MpMÑMòM¨M¿M‘MËM¸MM$M8MLM`MtMàMúM∞MƒMÿMÏN NN(N<NPNdNxNåN†N¥N»N‹NNNN,N@NTNhN|NêN§N∏NÃN‡NÙOOO0ODOXOlOÄOîO®OºO–O‰O¯OO O4OHO\OpOÑOòO¨O¿O‘OËO¸PP$P8PLP`PtPàPúP∞PƒPÿPÏP PP(P<PPPdPxPåP†P¥P»P‹PQQQ,Q@QTQhˇˇˇ÷  ˜Lyttle                Multics      (0)X   RgvˇÊa   Ç⁄     Ç·     ª)X(0ˇˇˇ÷  ¯Lyttle                Multics  Ä   )D)l   RgvÍd   Ç     Ç     Ó)l)Dˇˇˇ÷  ˘Lyttle                Multics      )X)Ä   RgwNp   ÇS     ÇZ     Í)Ä)Xˇˇˇ÷  ˙Lyttle                Multics      )l)î   Rgw≠g   Çï     Çú     {)î)lˇˇˇ÷  ˚Lyttle                Multics      )Ä)®   RgwA   Çª     Ç¬     å)®)Äˇˇˇ÷  ¸Lyttle                Multics      )î*¸   Rgwcp∫   ÇÂ     ÇÏ     å)º)îˇˇˇ÷  ˝Lyttle                Multics      (Ù)–   Rx∂‚ãs   É     É     ó)–)®ˇˇˇ÷  ˛Lyttle                Multics      )º)‰   Rx∂K∞^   É<     ÉC     ¡)‰)ºˇˇˇ÷  ˇLyttle                Multics      )–)¯   Rx∂‹ç“   Ét     É{     ú)¯)–ˇˇˇ÷   Lyttle                Muernal procedure  shares stack frame of external procedure dm_translate_system_config_.  
before_journal_name                     internal procedure  shares stack frame of external procedure dm_translate_system_config_.  
return_table                         80 internal procedure  enables or reverts conditions.  
on unit on line 629                  64 on unit               
dm_translate_system_config_abort
                                     70 internal procedure  is called by several nonquick procedures.  
SEMANTIC_ANALYSIS                       internal procedure  shares stack frame of external procedure dm_translate_system_config_.  
LEX                                     internal procedure  shares stack frame of external procedure dm_translate_system_config_.  
ERROR                                   internal procedure  shares stack frame of external procedure dm_translate_system_config_.  
NEXT_STMT                               internal procedure  shares stack frame of external procedure dm_translate_system_config_.  

STORAGE FOR INTERNAL STATIC VARIABLES.

   LOC IDENTIFIER                  BLOCK NAME
000010 error_control_table         dm_translate_system_config_
000616 TRACING                     dm_translate_system_config_

STORAGE FOR AUTOMATIC VARIABLES.

STACK FRAME                 LOC IDENTIFIER                  BLOCK NAME
dm_translate_system_config_
                         000100 code                        dm_translate_system_config_
                         000101 breaks                      dm_translate_system_config_
                         000142 ignored_breaks              dm_translate_system_config_
                         000203 lex_delims                  dm_translate_system_config_
                         000244 lex_control_chars           dm_translate_system_config_
                         000305 byte_count                  dm_translate_system_config_
                         000306 source_ptr                  dm_translate_system_config_
                         000310 temp_storage_ptr            dm_translate_system_config_
                         000312 Pfirst_stmt_descriptor      dm_translate_system_config_
                         000314 Pfirst_token_descriptor     dm_translate_system_config_
                         000316 abs_path                    dm_translate_system_config_
                         000370 my_dm_system_config         dm_translate_system_config_
                         000500 save_prev_dm_disp           dm_translate_system_config_
                         000516 dm_system_config_ptr        dm_translate_system_config_
                         000520 Pthis_token                 dm_translate_system_config_
                         000522 Pstmt                       dm_translate_system_config_
                         000524 Ptoken                      dm_translate_system_config_
                         000526 SPDL                        dm_translate_system_config_
                         000527 MERROR_SEVERITY             dm_translate_system_config_
                         000530 SERROR_CONTROL              dm_translate_system_config_
                         000531 MIN_PRINT_SEVERITY          dm_translate_system_config_
                         000531 SERROR_PRINTED              dm_translate_system_config_
                         000532 PRINT_SEVERITY_CONTROL      dm_translate_system_config_
                         000560 dto_convert                 date_time_offset
                         000561 dto_code                    date_time_offset
                         000562 dto_constant_time_str       date_time_offset
                         000573 dto_new_time_str            date_time_offset
                         000614 dto_constant_time           date_time_offset
                         000616 dto_new_time                date_time_offset
                         000636 LTOKEN_REQD_VALUE           SEMANTIC_ANALYSIS
                         000637 NRED                        SEMANTIC_ANALYSIS
                         000640 PRED                        SEMANTIC_ANALYSIS
                         000642 PTOKEN_REQD                 SEMANTIC_ANALYSIS
                         000644 PTOKEN_REQD_VALUE           SEMANTIC_ANALYSIS
                         000646 STOKEN_FCN                  SEMANTIC_ANALYSIS
                         000647 CODE                        SEMANTIC_ANALYSIS
                         000650 I                           SEMANTIC_ANALYSIS
                         000651 NUMBER                      SEMANTIC_ANALYSIS
                         000652 DIRECTION                   SEMANTIC_ANALYSIS
                         000704 i                           LEX
                         000716 Pstmt                       ERROR
                         000720 Perring_token               ERROR
                         000730 Ssearching                  NEXT_STMT

THE FOLLOWING EXTERNAL OPERATORS ARE USED BY THIS PROGRAM.
alloc_cs            unpk_to_pk          cat_realloc_cs      call_ext_out_desc   call_ext_out        call_int_this
call_int_other      return              tra_ext             alloc_auto_adj      enable              shorten_stack
ext_entry           int_entry           reverse_cs          set_cs_eis          alloc_based

THE FOLLOWING EXTERNAL ENTRIES ARE CALLED BY THIS PROGRAM.
absolute_pathname_            convert_date_to_binary_       cv_dec_check_                 dm_gen_checksum_
lex_error_                    lex_string_$init_lex_delims   lex_string_$lex               release_temp_segment_
sub_err_                      translator_temp_$get_segment  translator_temp_$release_all_segments

THE FOLLOWING EXTERNAL VARIABLES ARE USED BY THIS PROGRAM.
error_table_$no_stmt_delim    error_table_$notalloc         error_table_$translation_failed




   LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC   
    333 001007      1241 001022    7    3 001023    7  168 001055       454 001057       455 001063       456 001065
    457 001067       459 001072       463 001114       465 001130       466 001141       467 001163       472 001166
    473 001207       478 001215       479 001237       481 001262       487 001345       489 001347       490 001352
    491 001353       492 001355       493 001357       494 001360       495 001361       496 001362       497 001363
    498 001366       499 001371       500 001374       501 001377       502 001402       503 001405       507 001410
    510 001523       513 001530       516 001534       518 001536       520 001537       521 001550       523 001571
    528 001572       536 001574       539 001614       542 001622       543 001646       545 001653       552 001660
    553 001661       554 001662       555 001667       556 001670       557 001672       549 001675       559 001702
    560 001703       562 001707       563 001711       565 001750       566 002002       569 002020       570 002032
    573 002034       576 002110       578 002121       579 002152       582 002155       585 002224       588 002235
    594 002256       603 002260       606 002270       609 002306       612 002336       620 002342       623 002350
    627 002356       629 002373       631 002407       632 002413       633 002420       635 002421       637 002433
    639 002434       643 002440       646 002444       650 002445       653 002453       654 002457       656 002467
 3   30 002472       671 002473    5   50 002475    5   52 002500    5   53 002501    5   55 002502    5   58 002503
 5   60 002506    5   62 002510    5   63 002534    5   64 002537    5   65 002543    5   68 002553    5   70 002554
 5   71 002560    5   73 002562    5   79 002601    5   84 002612    5   86 002613    5   88 002617    5   90 002620
 5   92 002621    5   99 002655    5  101 002656    5  104 002661    5  106 002664    5  107 002710    5  108 002712
 5  109 002715    5  111 002716    5  113 002717    5  116 002733    5  118 002734    5  120 002740    5  123 002741
 5  124 002742    5  126 002746    5  127 002753    5  128 002757    5  130 002765       808 002766       810 002770
    811 002772       812 002773       813 002775       814 002776       815 003000       817 003001       818 003004
    821 003005       822 003010       824 003013       825 003015       828 003017       830 003023       831 003032
    832 003036       833 003042       834 003044       836 003045       838 003051       839 003055       840 003056
    841 003060       843 003061       845 003065       846 003067       848 003070       850 003074       851 003102
    852 003106       853 003112       854 003114       856 003115       858 003121       859 003125       860 003126
    861 003130       863 003131       865 003135       866 003137       868 003140       870 003144       871 003152
    872 003156       873 003162       874 003164       876 003165       878 003171       879 003175       880 003176
    881 003200       883 003201       885 003205       886 003207       888 003210       890 003214       891 003222
    892 003226       893 003232       894 003234       896 003235       898 003241       899 003245       900 003246
    901 003250       903 003251       905 003255       906 003257       908 003260       910 003264       912 003273
    913 003277       914 003301       916 003302       918 003306       919 003312       920 003313       921 003315
    923 003316       925 003322       926 003324       928 003325       930 003331       931 003333       933 003334
    935 003340       936 003344       937 003346       939 003347       941 003353       942 003357       943 003361
    945 003362       947 003366       948 003372       949 003374       951 003375       953 003401       954 003405
    955 003406       956 003410       958 003411       960 003415       961 003417       963 003420       965 003423
    966 003427       967 003431       969 003432       971 003434       972 003440       973 003442       975 003443
    977 003447       978 003453       979 003454       980 003456       982 003457       984 003463       985 003465
    987 003466       989 003472       991 003473       993 003477       994 003503       996 003504       998 003510
    999 003511      1000 003513      1002 003514      1004 003520      1005 003524      1007 003525      1009 003531
   1010 003533      1012 003534      1014 003540      1015 003550      1016 003554      1017 003556      1019 003557
   1021 003563      1022 003573      1023 003577      1024 003601      1026 003602      1028 003606      1029 003612
   1030 003613      1031 003615      1033 003616      1035 003622      1036 003632      1037 003636      1038 003640
   1040 003641      1042 003645      1043 003655      1044 003661      1045 003663      1047 003664      1049 003670
   1050 003674      1051 003675      1052 003677      1054 003700      1056 003704      1057 003705      1058 003707
   1060 003710      1062 003714      1063 003716      1065 003717      1067 003723      1068 003727      1069 003731
   1071 003732      1073 003736      1074 003742      1075 003744      1077 003745      1079 003751      1080 003755
   1081 003761      1082 003762      1083 003764      1085 003765      1087 003771      1088 003775      1089 003777
   1091 004000      1093 004004      1094 004010      1095 004012      1097 004013      1099 004017      1100 004023
   1101 004027      1102 004030      1103 004032      1105 004033      1107 004037      1108 004043      1109 004045
   1111 004046      1113 004052      1114 004056      1115 004060      1117 004061      1119 004065      1120 004071
   1121 004075      1122 004076      1123 004100      1125 004101      1127 004105      1128 004111      1129 004113
   1131 004114      1133 004120      1134 004124      1135 004126      1137 004127      1139 004133      1140 004137
   1141 004143      1142 004144      1143 004146      1145 004147      1147 004153      1148 004157      1149 004161
   1151 004162      1153 004166      1154 004172      1155 004174      1157 004175      1159 004201      1160 004205
   1161 004211      1162 004212      1163 004214      1165 004215      1167 004221      1168 004225      1169 004227
   1171 004230      1173 004234      1174 004240      1175 004242      1177 004243      1179 004247      1180 004253
   1181 004257      1182 004260      1183 004262      1185 004263      1187 004267      1188 004273      1189 004275
   1191 004276      1193 004302      1194 004306      1195 004310      1197 004311      1199 004315      1200 004321
   1201 004325      1202 004326      1203 004330      1205 004331      1207 004335      1208 004341      1209 004343
   1211 004344      1213 004350      1214 004354      1215 004356      1217 004357      1219 004363      1220 004367
   1221 004373      1222 004374      1223 004376      1225 004377      1227 004403      1228 004404      1229 004406
   1231 004407      1233 004413      1234 004415    6   31 004416    6   36 004420    6   37 004422    6   38 004427
 6   39 004431    6   40 004443    6   41 004445    6   42 004447    6   44 004457    6   45 004460    6   47 004473
 6   48 004475    6   49 004500    6   51 004502    7  139 004503    7  153 004505    7  154 004516    7  156 004525
 7  158 004534    7  160 004535    7  161 004537    7  164 004552    7  166 004556    7  168 004560    7  172 004663
 7  177 005011    8   18 005013    8   24 005014    8   25 005016    8   26 005021    8   27 005023    8   28 005032
 8   29 005034    8   30 005041    8   31 005042    8   32 005043    8   35 005054    8   36 005060    8   39 005061


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
