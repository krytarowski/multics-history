	COMPILATION LISTING OF SEGMENT chase_link_
	Compiled by: Multics PL/I Compiler, Release 28d, of October 4, 1983
	Compiled at: Honeywell LCPD Phoenix, System M
	Compiled on: 10/25/83  1531.1 mst Tue
	    Options: optimize map

        1 /* ***********************************************************
        2*   *                                                         *
        3*   * Copyright, (C) Honeywell Information Systems Inc., 1982 *
        4*   *                                                         *
        5*   * Copyright (c) 1972 by Massachusetts Institute of        *
        6*   * Technology and Honeywell Information Systems, Inc.      *
        7*   *                                                         *
        8*   *********************************************************** */
        9 
       10 
       11 chase_link_:
       12 	proc(d1, e1, d2, d2_length, e2, code);
       13 
       14 
       15 /* This routine finds the target of a link - chasing it all the way.
       16*
       17*   Initially coded June 1972 by Dan B. */
       18 
       19 
       20 dcl
       21 	code fixed bin(35),
       22 	d1 char(*),
       23 	d2 char(*),
       24 	d2_length fixed bin,
       25 	e1 char(*),
       26 	e2 char(*),
       27 	hcs_$fs_get_path_name entry(ptr, char(*), fixed bin, char(*), fixed bin(35)),
       28 	hcs_$initiate entry(char(*), char(*), char(*), fixed bin(1), fixed bin(2), ptr, fixed bin(35)),
       29 	hcs_$terminate_noname entry(ptr, fixed bin(35)),
       30 	null builtin,
       31 	segptr ptr;
       32 
       33 
       34 	call hcs_$initiate(d1, e1, "", 0, 0, segptr, code);	/* try to get a pointer to the entry */
       35 	if segptr=null then return;
       36 
       37 	call hcs_$fs_get_path_name(segptr, d2, d2_length, e2, code);/* now make the pointer into a pathname */
       38 	if code^=0 then return;
       39 
       40 	call hcs_$terminate_noname(segptr, code);		/* terminate the ptr */
       41 
       42 	return;
       43 
       44 	end;
	SOURCE FILES USED IN THIS COMPILATION.

LINE      NUMBER  DATE MODIFIED     NAME			PATHNAME
             0    10/25/83  1444.2  chase_link_.pl1                   >spec>on>eod-fix>chase_link_.pl1
	NAMES DECLARED IN THIS COMPILATION.

IDENTIFIER	     OFFSET    LOC STORAGE CLASS   DATA TYPE		ATTRIBUTES AND REFERENCES
								(* indicates a set context)

NAMES DECLARED BY DECLARE STATEMENT.
code                                   parameter       fixed bin(35,0)          dcl 20 set ref 11 34* 37* 38 40*
d1                                     parameter       char                     unaligned dcl 20 set ref 11 34*
d2                                     parameter       char                     unaligned dcl 20 set ref 11 37*
d2_length                              parameter       fixed bin(17,0)          dcl 20 set ref 11 37*
e1                                     parameter       char                     unaligned dcl 20 set ref 11 34*
e2                                     parameter       char                     unaligned dcl 20 set ref 11 37*
hcs_$fs_get_path_name           000010 constant        entry                    external dcl 20 ref 37
hcs_$initiate                   000012 constant        entry                    external dcl 20 ref 34
hcs_$terminate_noname           000014 constant        entry                    external dcl 20 ref 40
null                                                   builtin function         dcl 20 ref 35
segptr                          000100 automatic       pointer                  dcl 20 set ref 34* 35 37* 40*

NAME DECLARED BY EXPLICIT CONTEXT.
chase_link_                     000020 constant        entry                    external dcl 11

THERE WERE NO NAMES DECLARED BY CONTEXT OR IMPLICATION.

STORAGE REQUIREMENTS FOR THIS PROGRAM.

	Object	Text	Link	Symbol	Defs	Static
Start          0       0       246         264     171         256
Length       430     171        16         130      54           0

BLOCK NAME	         STACK SIZE     TYPE		WHY NONQUICK/WHO SHARES STACK FRAME
chase_link_                         104 external procedure  is an external procedure.  

STORAGE FOR AUTOMATIC VARIABLES.

STACK FRAME                 LOC IDENTIFIER                  BLOCK NAME
chase_link_              000100 segptr                      chase_link_

THE FOLLOWING EXTERNAL OPERATORS ARE USED BY THIS PROGRAM.
call_ext_out_desc   call_ext_out        return              ext_entry_desc

THE FOLLOWING EXTERNAL ENTRIES ARE CALLED BY THIS PROGRAM.
hcs_$fs_get_path_name         hcs_$initiate                 hcs_$terminate_noname

NO EXTERNAL VARIABLES ARE USED BY THIS PROGRAM.




   LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC   
     11 000012        34 000052        35 000115        37 000121        38 000154        40 000157        42 000170


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
