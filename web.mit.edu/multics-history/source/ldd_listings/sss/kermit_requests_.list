ASSEMBLY LISTING OF SEGMENT >special_ldd>install>MR12.0-1206>kermit_requests_.alm            
ASSEMBLED ON:	11/05/86  1033.2 mst Wed
OPTIONS USED:	list 
ASSEMBLED BY:	ALM Version  6.7  October 1986  
ASSEMBLER CREATED:	10/08/86  1557.5 mst Wed

                                     1  " ******************************************
                                     2  " *                                        *
                                     3  " * Copyright, (C) Honeywell Limited, 1984 *
                                     4  " *                                        *
                                     5  " ******************************************
                                     6  """""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
                                     7  "							"
                                     8  "	kermit_requests_					"
                                     9  "	This is the request table for the kermit ssu_ environment	"
                                    10  "							"
                                    11  "	Written: 	84-10-14	by Dean Elhard			"
                                    12  "							"
                                    13  """""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
                                    14  
    000000                          15  	name	kermit_requests_
                                    16  
                                    17  	include	ssu_request_macros
                                   1-1  " BEGIN INCLUDE FILE ... ssu_request_macros.incl.alm
                                   1-2  " Created:  5 May 1980 by W. Olin Sibert
                                   1-3  " Modified: 25 July 1980 by G. Palter to add multics_request macro
                                   1-4  " Modified: 1 December 1981 by G. Palter to remove user_flags
                                   1-5  " Modified: 12 February 1982 by G. Palter for version 4
                                   1-6  " Modified: 28 February 1982 by G. Palter to add dont_summarize and dont_list
                                   1-7  " Modified: 2 August 1982 by Jay Pattin to add unknown_request
                                   1-8  " Modified: 24 October 1984 by G. Palter to restore user flags and add the
                                   1-9  "    set_default_flags and set_default_multics_flags macros
                                  1-10  
                                  1-11  
                                  1-12  " ALM macros used to define subsystem request tables
                                  1-13  
                                  1-14  
                                  1-15  	macro	request_table_version
                              1   1-16  	aci	"srqt_4.0",8
                              2   1-17  	&end
                                  1-18  
                                  1-19  
                                  1-20  	macro	namelist
                              1   1-21  	maclist	off,save
                              2   1-22  	vfd	36/&K
                              3   1-23  &R&(	aci	@&i@,32
                              4   1-24  &)
                              5   1-25  	maclist	restore
                              6   1-26  	&end
                                  1-27  
                                  1-28  " 
                                  1-29  
                                  1-30  " System defined per-request flags
                                  1-31  
                        400000    1-32  	bool	flags.allow_command,400000	" valid as a command
                        200000    1-33  	bool	flags.allow_af,200000	" valid as an active function
                        600000    1-34  	bool	flags.allow_both,600000	" valid as both
                                  1-35  
                        100000    1-36  	bool	flags.unimplemented,100000	" request is not yet implemented
                        040000    1-37  	bool	flags.multics_request,040000	" request is actually a Multics command
                                  1-38  
                        020000    1-39  	bool	flags.dont_summarize,020000	" summarize_requests won't list it
                        010000    1-40  	bool	flags.dont_list,010000	" list_requests won't show it without -all
                                  1-41  
                        004000    1-42  	bool	flags.unknown,004000	" request is explicitly made unknown
                                  1-43  
                                  1-44  
                                  1-45  " Macros for setting per-request flags
                                  1-46  
                                  1-47  	macro	set_flags_loop
                              1   1-48  	maclist	off,save
                              2   1-49  &(3
                              3   1-50  &=&i,default&[	set_flags_loop	&1,(0),(&2)
                              4   1-51  &;	set	&1,&1+&i
                              5   1-52  &]&)
                              6   1-53  	maclist	restore
                              7   1-54  	&end
                                  1-55  
                                  1-56  
                                  1-57  	macro	set_flags
                              1   1-58  	maclist	off,save
                              2   1-59  	set	&1,0
                              3   1-60  &=&3,&[	set_flags_loop	&1,(0),(&2)
                              4   1-61  &;	set_flags_loop	&1,(&2),(&3)
                              5   1-62  &]
                              6   1-63  	maclist	restore
                              7   1-64  	&end
                                  1-65  
                                  1-66  " 
                                  1-67  
                                  1-68  "	set_default_flags {(system-flags)},{(user-flags)}
                                  1-69  
                                  1-70  " Sets the default system and/or user flags to be used for requests:
                                  1-71  "   system-flags: defines the default general nature of requests;" the default
                                  1-72  "      default is flags.allow_command
                                  1-73  "   user-flags:  defines the default setting for the subsystem specific flags
                                  1-74  "      associated with requests;" the default default is none (0)
                                  1-75  "   Note: If either system-flags or user-flags is ommitted, the default is not
                                  1-76  "      changed from its prior value.  This action allows the use of multiple
                                  1-77  "      set_default_flags macros within a table to change system or user
                                  1-78  "      flags without affecting the other defaults
                                  1-79  
                                  1-80  	macro	set_default_flags
                              1   1-81  	maclist	off,save
                              2   1-82  &^=&1,&[	set_flags	.dft_sf,(flags.allow_command),(&1)
                              3   1-83  &]
                              4   1-84  &^=&2,&[	set_flags	.dft_uf,(0),(&2)
                              5   1-85  &]
                              6   1-86  	maclist	restore
                              7   1-87  	&end
                                  1-88  
                                  1-89  
                                  1-90  "	set_default_multics_flags {(system-flags)},{(user-flags)}
                                  1-91  
                                  1-92  " Sets the default system and/or user flags to be used for Multics commands when used as requests:
                                  1-93  "   system-flags: defines the default general nature of Multics requests;" the
                                  1-94  "      default default is flags.allow_command+flags.allow_af
                                  1-95  "   user-flags:  defines the default setting for the subsystem specific flags
                                  1-96  "      associated with Multics requests;" the default default is none (0)
                                  1-97  "   Note: If either system-flags or user-flags is ommitted, the default is not
                                  1-98  "      changed from its prior value.  This action allows the use of multiple
                                  1-99  "      set_default_multics_flags macros within a table to change system or user
                                 1-100  "      flags without affecting the other defaults
                                 1-101  
                                 1-102  	macro	set_default_multics_flags
                              1  1-103  	maclist	off,save
                              2  1-104  &^=&1,&[	set_flags	.dft_mrsf,(flags.allow_command,flags.allow_af),(&1)
                              3  1-105  &]
                              4  1-106  &^=&2,&[	set_flags	.dft_mruf,(0),(&2)
                              5  1-107  &]
                              6  1-108  	maclist	restore
                              7  1-109  	&end
                                 1-110  
                                 1-111  " 
                                 1-112  
                                 1-113  	macro	.multics_request_doc
                              1  1-114  	null
                              2  1-115  	&end
                                 1-116  
                                 1-117  
                                 1-118  	macro	dft_multics_doc_lth
                              1  1-119  	set	.multics_doc_lth,0
                              2  1-120  	&end
                                 1-121  
                                 1-122  
                                 1-123  "	set_default_multics_doc (string)
                                 1-124  
                                 1-125  " Sets the default documentation to be used for Multics commands when used as requests:
                                 1-126  "   string: is the documentation string to be used for any subsequent requests defined by
                                 1-127  "      the multics_request_macro;" all occurences of "&1" in this string will be replaced by
                                 1-128  "      the actual name of the request;" Eg:
                                 1-129  "	set_default_multics_doc (Type '.. help &1' for more information.)
                                 1-130  
                                 1-131  	macro	set_default_multics_doc
                              1  1-132  	maclist	off,save
                              2  1-133  	macro	.multics_request_doc
                              3  1-134  	aci	@&1@
                              4  1-135  	&&end
                              5  1-136  	macro	dft_multics_doc_lth
                              6  1-137  	macro	.compute
                              7  1-138  	set	.multics_doc_lth,&&&&l1
                              8  1-139  	&&&&end
                              9  1-140  	.compute (&1)
                             10  1-141  	&&end
                             11  1-142  	maclist	restore
                             12  1-143  	&end
                                 1-144  
                                 1-145  " 
                                 1-146  
                                 1-147  "	begin_table tablename
                                 1-148  
                                 1-149  " Defines a subsystem request table (multiple tables may exist in a single object segment):
                                 1-150  "   tablename: the name by which this table may be referenced externally;" references to the
                                 1-151  "      table should be of the form segname$tablename where segname is the name of this
                                 1-152  "      object segment
                                 1-153  
                                 1-154  	macro	begin_table
                              1  1-155  	segdef	&1
                              2  1-156  	maclist	object,save
                              3  1-157  	use	tables
                              4  1-158  &1:	request_table_version
                              5  1-159  	aci	@&1@,32
                              6  1-160  	dup	6
                              7  1-161  	vfd	36/0
                              8  1-162  	dupend
                              9  1-163  	vfd	36/&1.rc
                             10  1-164  	maclist	off
                             11  1-165  	set	.rc,0
                             12  1-166  	set_default_flags (default),(default)
                             13  1-167  	set_default_multics_flags (default),(default)
                             14  1-168  	maclist	restore
                             15  1-169  	&end
                                 1-170  
                                 1-171  
                                 1-172  "	end_table	tablename
                                 1-173  
                                 1-174  " Indicates the end of a subsystem request table definition:
                                 1-175  "   tablename: the name of the table which has now been completely defined
                                 1-176  
                                 1-177  	macro	end_table
                              1  1-178  	maclist	off,save
                              2  1-179  	set	&1.rc,.rc
                              3  1-180  	maclist	restore
                              4  1-181  	&end
                                 1-182  
                                 1-183  " 
                                 1-184  
                                 1-185  "	request	name,processor,({abbreviations}),{(documentation)},
                                 1-186  "		 {(system-flags)},{(user-flags)}
                                 1-187  
                                 1-188  " Defines a subsystem request:
                                 1-189  "   name: the primary name of this request
                                 1-190  "   processor: the name of the procedure which actually executes this request;" it must be
                                 1-191  "      of the form segname$entryname
                                 1-192  "   abbreviations: is the list of defined abbreviations for this request
                                 1-193  "   documentation: a short string used by the list_requests request to explain this request
                                 1-194  "   system-flags: defines the general nature of this request;" the default is
                                 1-195  "      flags.allow_command
                                 1-196  "   user-flags: allows a subsystem to provide subsystem-specific information
                                 1-197  "      with the request's definition;" the default is none (0)
                                 1-198  
                                 1-199  	macro	request
                              1  1-200  	maclist	off,save
                              2  1-201  	set	.rc,.rc+1
                              3  1-202  	maclist	object
                              4  1-203  	use	tables
                              5  1-204  	vfd	18/&U.call,18/&U.names
                              6  1-205  &=&4,&[	vfd	36/0
                              7  1-206  &;	vfd	18/&U.info,18/&l4
                              8  1-207  	maclist	off
                              9  1-208  	use	info
                             10  1-209  &U.info:	aci	@&4@
                             11  1-210  &]
                             12  1-211  	use	tables
                             13  1-212  	set_flags	.sf,(.dft_sf),(&5)
                             14  1-213  	set_flags	.uf,(.dft_uf),(&6)
                             15  1-214  	maclist	object
                             16  1-215  	vfd	18/.sf,18/.uf
                             17  1-216  	maclist	off
                             18  1-217  	use	calls
                             19  1-218  &U.call:	epaq	*
                             20  1-219  	lprp4	7|stack_header.lot_ptr,*au
                             21  1-220  	call6	&2
                             22  1-221  	use	names
                             23  1-222  &U.names:	namelist	&1&^=&3,&[,&3&]
                             24  1-223  	maclist	restore
                             25  1-224  	&end
                                 1-225  
                                 1-226  " 
                                 1-227  
                                 1-228  "	unknown_request name,(abbreviations)
                                 1-229  
                                 1-230  " Defines an unknown request: used to make the utilities not recognize a request even though
                                 1-231  " it is defined in a later request table (such as ssu_request_tables_$standard_request):
                                 1-232  "   name: the primary name of the request to be marked as unknown
                                 1-233  "   abbreviations: is the list of defined abbreviations for this request
                                 1-234  
                                 1-235  	macro	unknown_request
                              1  1-236  	maclist	off,save
                              2  1-237  	set	.rc,.rc+1
                              3  1-238  	maclist	object
                              4  1-239  	use	tables
                              5  1-240  	vfd	18/&U.call,18/&U.names
                              6  1-241  	vfd	36/0
                              7  1-242  	vfd	18/flags.unknown,18/0
                              8  1-243  	maclist	off
                              9  1-244  	use	calls
                             10  1-245  &U.call:	epaq	*
                             11  1-246  	lprp4	7|stack_header.lot_ptr,*au
                             12  1-247  	call6	ssu_$unknown_request
                             13  1-248  	use	names
                             14  1-249  &U.names: namelist	&1&^=&2,&[,&2&]
                             15  1-250  	maclist	restore
                             16  1-251  	&end
                                 1-252  
                                 1-253  " 
                                 1-254  
                                 1-255  "	multics_request name,({abbreviations}),({documenation}),{procedure},
                                 1-256  "		       {(system-flags)},{(user-flags)}
                                 1-257  
                                 1-258  " Defines that a Multics command/AF may be used as a subsystem request:
                                 1-259  "   name: the primary name of this request (usually the name of the Multics command/AF)
                                 1-260  "   abbreviations: is the list of defined abbreviations for this request
                                 1-261  "   documentation: a short string used by the list_requests request to explain this request;
                                 1-262  "      if no documentation is provided, the documentation specified by a prior use of
                                 1-263  "      set_default_multics_doc is used
                                 1-264  "   procedure: the name of the Multics command/AF which is actually executed by this
                                 1-265  "      request;" it must be of the form segname$entryname;" if not given, the default is
                                 1-266  "      name$name
                                 1-267  "   system-flags: defines the general nature of this request;" the default is
                                 1-268  "      flags.allow_command+flags.allow_af
                                 1-269  "   user-flags: allows a subsystem to provide subsystem-specific information
                                 1-270  "      with the request's definition;" the default is none (0)
                                 1-271  
                                 1-272  	macro	multics_request
                              1  1-273  	maclist	off,save
                              2  1-274  	set	.rc,.rc+1
                              3  1-275  	maclist	object
                              4  1-276  	use	tables
                              5  1-277  	vfd	18/&U.call,18/&U.names
                              6  1-278  &=&3,&[	dft_multics_doc_lth &1,(&2),(&3),(&4),(&5),(&6)
                              7  1-279  	vfd	18/&U.info,18/.multics_doc_lth
                              8  1-280  &;	vfd	18/&U.info,18/&l3
                              9  1-281  &]
                             10  1-282  	maclist	off
                             11  1-283  	use	info
                             12  1-284  &U.info:
                             13  1-285  &=&3,&[	.multics_request_doc &1,(&2),(&3),(&4),(&5),(&6)
                             14  1-286  &;	aci	@&3@
                             15  1-287  &]
                             16  1-288  	use	tables
                             17  1-289  	maclist	object
                             18  1-290  	set_flags	.sf,(.dft_mrsf),(&5)
                             19  1-291  	set_flags	.uf,(.dft_mruf),(&6)
                             20  1-292  	maclist	object
                             21  1-293  	vfd	18/.sf+flags.multics_request,18/.uf
                             22  1-294  	maclist	off
                             23  1-295  	use	calls
                             24  1-296  &U.call:	epaq	*
                             25  1-297  	lprp4	7|stack_header.lot_ptr,*au
                             26  1-298  &=&4,&[	call6	&1$&1
                             27  1-299  &;	call6	&4
                             28  1-300  &]
                             29  1-301  	use	names
                             30  1-302  &U.names:	namelist	&1&^=&2,&[,&2&]
                             31  1-303  	maclist	restore
                             32  1-304  	&end
                                 1-305  
                                 1-306  " 
                                 1-307  
                                 1-308  " Required ALM statements to make this all work
                                 1-309  
                                 1-310  	use	tables
                                 1-311  	use	calls
                                 1-312  	use	names
                                 1-313  	use	info
                                 1-314  	join	/text/tables,calls,names,info
                                 1-315  
                                 1-316  	include	stack_header
                                   2-1  "	BEGIN INCLUDE FILE ... stack_header.incl.alm  3/72  Bill Silver
                                   2-2  "
                                   2-3  "	modified 7/76 by M. Weaver for *system links and more system use of areas
                                   2-4  "	modified 3/77 by M. Weaver  to add rnt_ptr
                                   2-5  "	modified 7/77 by S. Webber to add run_unit_depth and assign_linkage_ptr
                                   2-6  "	modified 6/83 by J. Ives to add trace_frames and in_trace.
                                   2-7  
                                   2-8  " HISTORY COMMENTS:
                                   2-9  "  1) change(86-06-24,DGHowe), approve(86-06-24,MCR7396),
                                  2-10  "     audit(86-08-05,Schroth), install(86-11-03,MR12.0-1206):
                                  2-11  "     added the heap_header_ptr definition
                                  2-12  "  2) change(86-08-12,Kissel), approve(86-08-12,MCR7473),
                                  2-13  "     audit(86-10-10,Fawcett), install(86-11-03,MR12.0-1206):
                                  2-14  "     Modified to support control point management.  These changes were
                                  2-15  "     actually made in February 1985 by G. Palter.
                                  2-16  "  3) change(86-10-22,Fawcett), approve(86-10-22,MCR7473),
                                  2-17  "     audit(86-10-22,Farley), install(86-11-03,MR12.0-1206):
                                  2-18  "     Remove the old_lot pointer and replace it with cpm_data_ptr. Use the 18
                                  2-19  "     bit pad after cur_lot_size for the cpm_enabled. This was done to save
                                  2-20  "     some space int the stack header and change the cpd_ptr unal to
                                  2-21  "     cpm_data_ptr (ITS pair).
                                  2-22  "                                                      END HISTORY COMMENTS
                                  2-23  
                        000004    2-24  	equ	stack_header.cpm_data_ptr,4		ptr to control point for this stack
                        000006    2-25  	equ	stack_header.combined_stat_ptr,6	ptr to separate static area
                                  2-26  
                        000010    2-27  	equ	stack_header.clr_ptr,8		ptr to area containing linkage sections
                        000012    2-28  	equ	stack_header.max_lot_size,10		number of words allowed in lot (DU)
                        000012    2-29  	equ	stack_header.main_proc_invoked,10	nonzero if main proc was invoked in run unit (DL)
                        000012    2-30  	equ	stack_header.run_unit_depth,10	number of active run units stacked (DL)
                        000013    2-31  	equ	stack_header.cur_lot_size,11		DU number of words (entries) in lot
                        000013    2-32            equ	stack_header.cpm_enabled,11		DL  non-zero if control point management is enabled
                        000014    2-33  	equ	stack_header.system_free_ptr,12	ptr to system storage area
                        000016    2-34  	equ	stack_header.user_free_ptr,14		ptr to user storage area
                                  2-35  
                        000020    2-36  	equ	stack_header.parent_ptr,16		ptr to parent stack or null
                        000022    2-37  	equ	stack_header.stack_begin_ptr,18	ptr to first stack frame
                        000024    2-38  	equ	stack_header.stack_end_ptr,20		ptr to next useable stack frame
                        000026    2-39  	equ	stack_header.lot_ptr,22		ptr to the lot for the current ring
                                  2-40  
                        000030    2-41  	equ	stack_header.signal_ptr,24		ptr to signal proc for current ring
                        000032    2-42  	equ	stack_header.bar_mode_sp,26		value of sp before entering bar mode
                        000034    2-43  	equ	stack_header.pl1_operators_ptr,28	ptr: pl1_operators_$operator_table
                        000036    2-44  	equ	stack_header.call_op_ptr,30		ptr to standard call operator
                                  2-45  
                        000040    2-46  	equ	stack_header.push_op_ptr,32		ptr to standard push operator
                        000042    2-47  	equ	stack_header.return_op_ptr,34		ptr to standard return operator
                        000044    2-48  	equ	stack_header.ret_no_pop_op_ptr,36	ptr: stand. return/ no pop operator
                        000046    2-49  	equ	stack_header.entry_op_ptr,38		ptr to standard entry operator
                                  2-50  
                        000050    2-51  	equ	stack_header.trans_op_tv_ptr,40	ptr to table of translator operator ptrs
                        000052    2-52  	equ	stack_header.isot_ptr,42		pointer to ISOT
                        000054    2-53  	equ	stack_header.sct_ptr,44		pointer to System Condition Table
                        000056    2-54  	equ	stack_header.unwinder_ptr,46		pointer to unwinder for current ring
                                  2-55  
                        000060    2-56  	equ	stack_header.sys_link_info_ptr,48	ptr to *system link name table
                        000062    2-57  	equ	stack_header.rnt_ptr,50		ptr to reference name table
                        000064    2-58  	equ	stack_header.ect_ptr,52		ptr to event channel table
                        000066    2-59  	equ	stack_header.assign_linkage_ptr,54	ptr to area for hcs_$assign_linkage calls
                        000070    2-60  	equ	stack_header.heap_header_ptr,56	ptr to heap header.
                        000072    2-61  	equ	stack_header.trace_frames,58		stack of trace_catch_ frames
                        000073    2-62  	equ	stach_header.trace_top_ptr,59		trace pointer
                        000074    2-63  	equ	stack_header.in_trace,60		trace antirecurse bit
                        000100    2-64  	equ	stack_header_end,64			length of stack header
                                  2-65  
                                  2-66  
                                  2-67  
                                  2-68  
                        000000    2-69  	equ	trace_frames.count,0		number of trace frames on stack
                        000001    2-70  	equ	trace_frames.top_ptr,1		packed pointer to top one
                                  2-71  
                                  2-72  "	The  following constant is an offset within the  pl1  operators table.
                                  2-73  "	It  references a  transfer vector table.
                                  2-74  
                        000551    2-75  	bool	tv_offset,551
                                  2-76  
                                  2-77  
                                  2-78  "	The  following constants are offsets within this transfer vector table.
                                  2-79  
                        001170    2-80  	equ	call_offset,tv_offset+271
                        001171    2-81  	equ	push_offset,tv_offset+272
                        001172    2-82  	equ	return_offset,tv_offset+273
                        001173    2-83  	equ	return_no_pop_offset,tv_offset+274
                        001174    2-84  	equ	entry_offset,tv_offset+275
                                  2-85  
                                  2-86  
                                  2-87  " 	END INCLUDE FILE stack_header.incl.alm
                                 2-317  
                                 2-318  " END INCLUDE FILE ... ssu_request_macros.incl.alm
                                    18  
                                    19  	begin_table	requests
                        000000          	segdef	requests
    000000  aa  163 162 161 164
    000001  aa  137 064 056 060
    000002  aa  162 145 161 165
    000003  aa  145 163 164 163
    000004  aa  040 040 040 040
    000005  aa  040 040 040 040
    000006  aa  040 040 040 040
    000007  aa  040 040 040 040
    000010  aa  040 040 040 040
    000011  aa  040 040 040 040
                        000006 
    000012  aa   000000 000000 
    000013  aa   000000 000000 
    000014  aa   000000 000000 
    000015  aa   000000 000000 
    000016  aa   000000 000000 
    000017  aa   000000 000000 
    000020  aa   000000 000013 
                                    20  
                                    21  	request	finish,kermit_remote_requests_$finish,(),
                                    22  		(request that the remote server exit server mode.),
                                    23  		flags.allow_command
    000021  00   000062 000123 
    000022  0a   000316 000060 
    000023  aa   400000 000000 
                                    24  	request	get,kermit_remote_requests_$get,(),
                                    25  		(request that the remote server send the named file(s).),
                                    26  		flags.allow_command
    000024  00   000065 000134 
    000025  0a   000332 000066 
    000026  aa   400000 000000 
                                    27  	request	log,kermit_log_mgr_$start_log,(),
                                    28  		(open the named log file and begin logging.),
                                    29  		flags.allow_command
    000027  00   000070 000145 
    000030  0a   000350 000052 
    000031  aa   400000 000000 
                                    30  	request	logout,kermit_remote_requests_$logout,(),
                                    31  		(request that the remote server log out.),
                                    32  		flags.allow_command
    000032  00   000073 000156 
    000033  0a   000363 000047 
    000034  aa   400000 000000 
                                    33  	request	quit_log,kermit_log_mgr_$end_log,(),
                                    34  		(stop logging file transfers and close the log file.),
                                    35  		flags.allow_command
    000035  00   000076 000167 
    000036  0a   000375 000063 
    000037  aa   400000 000000 
                                    36  	request	receive,
                                    37  		kermit_receive_request_$kermit_receive_request_,(r),
                                    38  		(receive a file or file group from the remote system.),
                                    39  		flags.allow_command
    000040  00   000101 000200 
    000041  0a   000412 000064 
    000042  aa   400000 000000 
                                    40  	request	send,kermit_send_request_$kermit_send_request_,(s),
                                    41  		(send the specified file(s) to the remote system.),
                                    42  		flags.allow_command
    000043  00   000104 000221 
    000044  0a   000427 000060 
    000045  aa   400000 000000 
                                    43  	request	set,kermit_mode_mgr_$set,(),
                                    44  		(set the specified kermit mode.),
                                    45  		flags.allow_command
    000046  00   000107 000242 
    000047  0a   000443 000036 
    000050  aa   400000 000000 
                                    46  	request	server,kermit_server_request_$kermit_server_request_,(),
                                    47  		(enter server mode.),
                                    48  		flags.allow_command
    000051  00   000112 000253 
    000052  0a   000453 000022 
    000053  aa   400000 000000 
                                    49  	request	show,kermit_mode_mgr_$get,(),
                                    50  		(display the specified kermit mode(s).),
                                    51  		flags.allow_command
    000054  00   000115 000264 
    000055  0a   000460 000045 
    000056  aa   400000 000000 
                                    52  	request	statistics,kermit_log_mgr_$display_statistics,(st),
                                    53  		(display the statistics for the last file transfer.),
                                    54  		flags.allow_command
    000057  00   000120 000275 
    000060  0a   000472 000062 
    000061  aa   400000 000000 
                                    55  	
                                    56  	end_table		requests
                                    57  
                                    58  	end

NO LITERALS
     
NAME DEFINITIONS FOR ENTRY POINTS AND SEGDEFS

    000510  5a   000003 000000 
    000511  5a   000030 600000 
    000512  aa   000000 000000 
    000513  55   000013 000002 
    000514  5a   000002 400003 
    000515  55   000006 000013 
    000516  aa  020 153 145 162
    000517  aa  155 151 164 137
    000520  aa  162 145 161 165
    000521  aa  145 163 164 163
    000522  aa  137 000 000 000
    000523  55   000021 000003 
    000524  0a   000000 400000 
    000525  55   000016 000003 
    000526  aa  010 162 145 161         requests
    000527  aa  165 145 163 164
    000530  aa  163 000 000 000
    000531  55   000002 000013 
    000532  6a   000000 400002 
    000533  55   000024 000003 
    000534  aa  014 163 171 155         symbol_table
    000535  aa  142 157 154 137
    000536  aa  164 141 142 154
    000537  aa  145 000 000 000

DEFINITIONS HASH TABLE

    000540  aa   000000 000015 
    000541  aa   000000 000000 
    000542  aa   000000 000000 
    000543  aa   000000 000000 
    000544  aa   000000 000000 
    000545  aa   000000 000000 
    000546  aa   000000 000000 
    000547  5a   000021 000000 
    000550  aa   000000 000000 
    000551  aa   000000 000000 
    000552  5a   000013 000000 
    000553  aa   000000 000000 
    000554  aa   000000 000000 
    000555  aa   000000 000000 

EXTERNAL NAMES

    000556  aa  022 144 151 163         display_statistics
    000557  aa  160 154 141 171
    000560  aa  137 163 164 141
    000561  aa  164 151 163 164
    000562  aa  151 143 163 000
    000563  aa  026 153 145 162         kermit_server_request_
    000564  aa  155 151 164 137
    000565  aa  163 145 162 166
    000566  aa  145 162 137 162
    000567  aa  145 161 165 145
    000570  aa  163 164 137 000
    000571  aa  003 163 145 164         set
    000572  aa  020 153 145 162         kermit_mode_mgr_
    000573  aa  155 151 164 137
    000574  aa  155 157 144 145
    000575  aa  137 155 147 162
    000576  aa  137 000 000 000
    000577  aa  024 153 145 162         kermit_send_request_
    000600  aa  155 151 164 137
    000601  aa  163 145 156 144
    000602  aa  137 162 145 161
    000603  aa  165 145 163 164
    000604  aa  137 000 000 000
    000605  aa  027 153 145 162         kermit_receive_request_
    000606  aa  155 151 164 137
    000607  aa  162 145 143 145
    000610  aa  151 166 145 137
    000611  aa  162 145 161 165
    000612  aa  145 163 164 137
    000613  aa  007 145 156 144         end_log
    000614  aa  137 154 157 147
    000615  aa  006 154 157 147         logout
    000616  aa  157 165 164 000
    000617  aa  011 163 164 141         start_log
    000620  aa  162 164 137 154
    000621  aa  157 147 000 000
    000622  aa  017 153 145 162         kermit_log_mgr_
    000623  aa  155 151 164 137
    000624  aa  154 157 147 137
    000625  aa  155 147 162 137
    000626  aa  003 147 145 164         get
    000627  aa  006 146 151 156         finish
    000630  aa  151 163 150 000
    000631  aa  027 153 145 162         kermit_remote_requests_
    000632  aa  155 151 164 137
    000633  aa  162 145 155 157
    000634  aa  164 145 137 162
    000635  aa  145 161 165 145
    000636  aa  163 164 163 137

NO TRAP POINTER WORDS

TYPE PAIR BLOCKS

    000637  aa   000004 000000 
    000640  55   000112 000046 
    000641  aa   000004 000000 
    000642  55   000062 000116 
    000643  aa   000004 000000 
    000644  55   000053 000053 
    000645  aa   000004 000000 
    000646  55   000062 000061 
    000647  aa   000004 000000 
    000650  55   000067 000067 
    000651  aa   000004 000000 
    000652  55   000075 000075 
    000653  aa   000004 000000 
    000654  55   000112 000103 
    000655  aa   000004 000000 
    000656  55   000121 000105 
    000657  aa   000004 000000 
    000660  55   000112 000107 
    000661  aa   000004 000000 
    000662  55   000121 000116 
    000663  aa   000004 000000 
    000664  55   000121 000117 
    000665  aa   000001 000000 
    000666  aa   000000 000000 

INTERNAL EXPRESSION WORDS

    000667  5a   000127 000000 
    000670  5a   000131 000000 
    000671  5a   000133 000000 
    000672  5a   000135 000000 
    000673  5a   000137 000000 
    000674  5a   000141 000000 
    000675  5a   000143 000000 
    000676  5a   000145 000000 
    000677  5a   000147 000000 
    000700  5a   000151 000000 
    000701  5a   000153 000000 
LINKAGE INFORMATION
      
    000000  aa   000000 000000 
    000001  0a   000510 000000 
    000002  aa   000000 000000 
    000003  aa   000000 000000 
    000004  aa   000000 000000 
    000005  aa   000000 000000 
    000006  22   000010 000036 
    000007  a2   000000 000000 
    000010  9a   777770 0000 46         kermit_remote_requests_|finish
    000011  5a   000171 0000 00
    000012  9a   777766 0000 46         kermit_remote_requests_|get
    000013  5a   000170 0000 00
    000014  9a   777764 0000 46         kermit_log_mgr_|start_log
    000015  5a   000167 0000 00
    000016  9a   777762 0000 46         kermit_remote_requests_|logout
    000017  5a   000166 0000 00
    000020  9a   777760 0000 46         kermit_log_mgr_|end_log
    000021  5a   000165 0000 00
    000022  9a   777756 0000 46         kermit_receive_request_|kermit_receive_request_
    000023  5a   000164 0000 00
    000024  9a   777754 0000 46         kermit_send_request_|kermit_send_request_
    000025  5a   000163 0000 00
    000026  9a   777752 0000 46         kermit_mode_mgr_|set
    000027  5a   000162 0000 00
    000030  9a   777750 0000 46         kermit_server_request_|kermit_server_request_
    000031  5a   000161 0000 00
    000032  9a   777746 0000 46         kermit_mode_mgr_|get
    000033  5a   000160 0000 00
    000034  9a   777744 0000 46         kermit_log_mgr_|display_statistics
    000035  5a   000157 0000 00
SYMBOL INFORMATION
     
SYMBOL TABLE HEADER
     
    000000  aa   000000 000001 
    000001  aa   163171 155142 
    000002  aa   164162 145145 
    000003  aa   000000 000004 
    000004  aa   000000 114732 
    000005  aa   732732 062314 
    000006  aa   000000 114775 
    000007  aa   662276 750563 
    000010  aa   141154 155040 
    000011  aa   040040 040040 
    000012  aa   000024 000040 
    000013  aa   000034 000040 
    000014  aa   000044 000100 
    000015  aa   000002 000002 
    000016  aa   000064 000000 
    000017  aa   000000 000222 
    000020  aa   000000 000150 
    000021  aa   000000 000203 
    000022  aa   000212 000150 
    000023  aa   000064 000000 
    000024  aa   101114 115040 
    000025  aa   126145 162163 
    000026  aa   151157 156040 
    000027  aa   040066 056067 
    000030  aa   040040 117143 
    000031  aa   164157 142145 
    000032  aa   162040 061071 
    000033  aa   070066 040040 
    000034  aa   107112 157150 
    000035  aa   156163 157156 
    000036  aa   056123 171163 
    000037  aa   115141 151156 
    000040  aa   164056 141040 
    000041  aa   040040 040040 
    000042  aa   040040 040040 
    000043  aa   040040 040040 
    000044  aa   154151 163164 
    000045  aa   040040 040040 
    000046  aa   040040 040040 
    000047  aa   040040 040040 
    000050  aa   040040 040040 
    000051  aa   040040 040040 
    000052  aa   040040 040040 
    000053  aa   040040 040040 
    000054  aa   040040 040040 
    000055  aa   040040 040040 
    000056  aa   040040 040040 
    000057  aa   040040 040040 
    000060  aa   040040 040040 
    000061  aa   040040 040040 
    000062  aa   040040 040040 
    000063  aa   040040 040040 
    000064  aa   000000 000001 
    000065  aa   000000 000003 
    000066  aa   000102 000065 
    000067  aa   147740 446204 
    000070  aa   000000 114774 
    000071  aa   460765 400000 
    000072  aa   000120 000050 
    000073  aa   133055 020064 
    000074  aa   000000 113310 
    000075  aa   612334 200000 
    000076  aa   000132 000066 
    000077  aa   147714 750316 
    000100  aa   000000 114774 
    000101  aa   453561 000000 
    000102  aa   076163 160145          >special_ldd>install>MR12.0-1206>kermit_requests_.alm
    000103  aa   143151 141154 
    000104  aa   137154 144144 
    000105  aa   076151 156163 
    000106  aa   164141 154154 
    000107  aa   076115 122061 
    000110  aa   062056 060055 
    000111  aa   061062 060066 
    000112  aa   076153 145162 
    000113  aa   155151 164137 
    000114  aa   162145 161165 
    000115  aa   145163 164163 
    000116  aa   137056 141154 
    000117  aa   155040 040040 
    000120  aa   076154 144144          >ldd>include>ssu_request_macros.incl.alm
    000121  aa   076151 156143 
    000122  aa   154165 144145 
    000123  aa   076163 163165 
    000124  aa   137162 145161 
    000125  aa   165145 163164 
    000126  aa   137155 141143 
    000127  aa   162157 163056 
    000130  aa   151156 143154 
    000131  aa   056141 154155 
    000132  aa   076163 160145          >special_ldd>install>MR12.0-1206>stack_header.incl.alm
    000133  aa   143151 141154 
    000134  aa   137154 144144 
    000135  aa   076151 156163 
    000136  aa   164141 154154 
    000137  aa   076115 122061 
    000140  aa   062056 060055 
    000141  aa   061062 060066 
    000142  aa   076163 164141 
    000143  aa   143153 137150 
    000144  aa   145141 144145 
    000145  aa   162056 151156 
    000146  aa   143154 056141 
    000147  aa   154155 040040 
               MULTICS ASSEMBLY CROSS REFERENCE LISTING

   Value        Symbol                   Source file   Line number

          62    .._00000.call            kermit_requests_:    23.
         316    .._00000.info            kermit_requests_:    23.
         123    .._00000.names           kermit_requests_:    23.
          65    .._00001.call            kermit_requests_:    26.
         332    .._00001.info            kermit_requests_:    26.
         134    .._00001.names           kermit_requests_:    26.
          70    .._00002.call            kermit_requests_:    29.
         350    .._00002.info            kermit_requests_:    29.
         145    .._00002.names           kermit_requests_:    29.
          73    .._00003.call            kermit_requests_:    32.
         363    .._00003.info            kermit_requests_:    32.
         156    .._00003.names           kermit_requests_:    32.
          76    .._00004.call            kermit_requests_:    35.
         375    .._00004.info            kermit_requests_:    35.
         167    .._00004.names           kermit_requests_:    35.
         101    .._00005.call            kermit_requests_:    39.
         412    .._00005.info            kermit_requests_:    39.
         200    .._00005.names           kermit_requests_:    39.
         104    .._00006.call            kermit_requests_:    42.
         427    .._00006.info            kermit_requests_:    42.
         221    .._00006.names           kermit_requests_:    42.
         107    .._00007.call            kermit_requests_:    45.
         443    .._00007.info            kermit_requests_:    45.
         242    .._00007.names           kermit_requests_:    45.
         112    .._00010.call            kermit_requests_:    48.
         453    .._00010.info            kermit_requests_:    48.
         253    .._00010.names           kermit_requests_:    48.
         115    .._00011.call            kermit_requests_:    51.
         460    .._00011.info            kermit_requests_:    51.
         264    .._00011.names           kermit_requests_:    51.
         120    .._00012.call            kermit_requests_:    54.
         472    .._00012.info            kermit_requests_:    54.
         275    .._00012.names           kermit_requests_:    54.
      600000    .dft_mrsf                kermit_requests_:    19.
           0    .dft_mruf                kermit_requests_:    19.
      400000    .dft_sf                  kermit_requests_:    19.
           0    .dft_uf                  kermit_requests_:    19,   23,   26,   29,   32,   35,   39,   42,   45,   48,   51,   54.
      600054    .rc                      kermit_requests_:    19,   23,   26,   29,   32,   35,   39,   42,   45,   48,   51,
                                                              54,   56.
      400000    .sf                      kermit_requests_:    23,   26,   29,   32,   35,   39,   42,   45,   48,   51,   54.
           0    .uf                      kermit_requests_:    23,   26,   29,   32,   35,   39,   42,   45,   48,   51,   54.
          62    calls                    kermit_requests_:    23,   26,   29,   32,   35,   39,   42,   45,   48,   51,   54,
                                         ssu_request_macros:       311,  314.
        1170    call_offset              stack_header:        80.
                display_statistics       kermit_requests_:    54.
                end_log                  kermit_requests_:    35.
        1174    entry_offset             stack_header:        84.
                finish                   kermit_requests_:    23.
      200000    flags.allow_af           kermit_requests_:    19,
                                         ssu_request_macros:        33.
      600000    flags.allow_both         ssu_request_macros:        34.
      400000    flags.allow_command      kermit_requests_:    19,   23,   26,   29,   32,   35,   39,   42,   45,   48,   51,
                                                              54,
                                         ssu_request_macros:        32.
       10000    flags.dont_list          ssu_request_macros:        40.
       20000    flags.dont_summarize     ssu_request_macros:        39.
       40000    flags.multics_request    ssu_request_macros:        37.
      100000    flags.unimplemented      ssu_request_macros:        36.
        4000    flags.unknown            ssu_request_macros:        42.
                get                      kermit_requests_:    26,   51.
         316    info                     kermit_requests_:    23,   26,   29,   32,   35,   39,   42,   45,   48,   51,   54,
                                         ssu_request_macros:       313,  314.
                kermit_log_mgr_          kermit_requests_:    29,   35,   54.
                kermit_mode_mgr_         kermit_requests_:    45,   51.
                kermit_receive_request_  kermit_requests_:    39.
                kermit_remote_requests_  kermit_requests_:    23,   26,   32.
                kermit_send_request_     kermit_requests_:    42.
                kermit_server_request_   kermit_requests_:    48.
                logout                   kermit_requests_:    32.
         123    names                    kermit_requests_:    23,   26,   29,   32,   35,   39,   42,   45,   48,   51,   54,
                                         ssu_request_macros:       312,  314.
        1171    push_offset              stack_header:        81.
           0    requests                 kermit_requests_:    19.
          13    requests.rc              kermit_requests_:    19,   56.
        1173    return_no_pop_offset     stack_header:        83.
        1172    return_offset            stack_header:        82.
                set                      kermit_requests_:    45.
          73    stach_header.trace_top_ptr     stack_header:        62.
          66    stack_header.assign_linkage_ptr      stack_header:        59.
          32    stack_header.bar_mode_sp       stack_header:        42.
          36    stack_header.call_op_ptr       stack_header:        44.
          10    stack_header.clr_ptr     stack_header:        27.
           6    stack_header.combined_stat_ptr       stack_header:        25.
           4    stack_header.cpm_data_ptr      stack_header:        24.
          13    stack_header.cpm_enabled       stack_header:        32.
          13    stack_header.cur_lot_size      stack_header:        31.
          64    stack_header.ect_ptr     stack_header:        58.
          46    stack_header.entry_op_ptr      stack_header:        49.
          70    stack_header.heap_header_ptr   stack_header:        60.
          74    stack_header.in_trace    stack_header:        63.
          52    stack_header.isot_ptr    stack_header:        52.
          26    stack_header.lot_ptr     kermit_requests_:    23,   26,   29,   32,   35,   39,   42,   45,   48,   51,   54,
                                         stack_header:        39.
          12    stack_header.main_proc_invoked       stack_header:        29.
          12    stack_header.max_lot_size      stack_header:        28.
          20    stack_header.parent_ptr  stack_header:        36.
          34    stack_header.pl1_operators_ptr       stack_header:        43.
          40    stack_header.push_op_ptr       stack_header:        46.
          42    stack_header.return_op_ptr     stack_header:        47.
          44    stack_header.ret_no_pop_op_ptr       stack_header:        48.
          62    stack_header.rnt_ptr     stack_header:        57.
          12    stack_header.run_unit_depth    stack_header:        30.
          54    stack_header.sct_ptr     stack_header:        53.
          30    stack_header.signal_ptr  stack_header:        41.
          22    stack_header.stack_begin_ptr   stack_header:        37.
          24    stack_header.stack_end_ptr     stack_header:        38.
          14    stack_header.system_free_ptr   stack_header:        33.
          60    stack_header.sys_link_info_ptr       stack_header:        56.
          72    stack_header.trace_frames      stack_header:        61.
          50    stack_header.trans_op_tv_ptr   stack_header:        51.
          56    stack_header.unwinder_ptr      stack_header:        54.
          16    stack_header.user_free_ptr     stack_header:        34.
         100    stack_header_end         stack_header:        64.
                start_log                kermit_requests_:    29.
           0    tables                   kermit_requests_:    19,   23,   26,   29,   32,   35,   39,   42,   45,   48,   51,
                                                              54,
                                         ssu_request_macros:       310,  314.
           0    trace_frames.count       stack_header:        69.
           1    trace_frames.top_ptr     stack_header:        70.
         551    tv_offset                stack_header:        75,   80,   81,   82,   83,   84.


NO FATAL ERRORS


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
