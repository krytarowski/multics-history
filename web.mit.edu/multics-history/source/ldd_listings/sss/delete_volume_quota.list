	COMPILATION LISTING OF SEGMENT delete_volume_quota
	Compiled by: Multics PL/I Compiler, Release 27d, of October 11, 1982
	Compiled at: Honeywell LISD Phoenix, System M
	Compiled on: 11/04/82  1640.5 mst Thu
	    Options: optimize map

        1 /* ***********************************************************
        2*   *                                                         *
        3*   * Copyright, (C) Honeywell Information Systems Inc., 1982 *
        4*   *                                                         *
        5*   * Copyright (c) 1972 by Massachusetts Institute of        *
        6*   * Technology and Honeywell Information Systems, Inc.      *
        7*   *                                                         *
        8*   *********************************************************** */
        9 
       10 
       11 /* DELETE_VOLUME_QUOTA - Command to delete a quota account from a logial volume */
       12 
       13 /* Written March 1977 by Larry Johnson */
       14 
       15 delete_volume_quota: dlvq: proc;
       16 
       17 dcl  name char (19) int static options (constant) init ("delete_volume_quota");
       18 dcl  code fixed bin (35);
       19 dcl  arg_ptr ptr;
       20 dcl  arg_len fixed bin;
       21 dcl  arg char (arg_len) based (arg_ptr);
       22 dcl  volume char (32);
       23 dcl  account char (32);
       24 
       25 dcl  cu_$arg_ptr entry (fixed bin, ptr, fixed bin, fixed bin (35));
       26 dcl  com_err_ entry options (variable);
       27 dcl  mdc_$delete_volume_quota entry (char (*), char (*), fixed bin (35));
       28 
       29 	call cu_$arg_ptr (1, arg_ptr, arg_len, code);
       30 	if code ^= 0 then do;
       31 print_usage:   call com_err_ (0, name, "Usage: ^a volume account", name);
       32 	     return;
       33 	end;
       34 	volume = arg;
       35 
       36 	call cu_$arg_ptr (2, arg_ptr, arg_len, code);
       37 	if code ^= 0 then go to print_usage;
       38 	account = arg;
       39 
       40 	call mdc_$delete_volume_quota (volume, account, code);
       41 	if code ^= 0 then call com_err_ (code, name);
       42 	return;
       43 
       44      end delete_volume_quota;
	SOURCE FILES USED IN THIS COMPILATION.

LINE      NUMBER  DATE MODIFIED     NAME			PATHNAME
             0    11/04/82  1613.2  delete_volume_quota.pl1           >dumps>old>recomp>delete_volume_quota.pl1
	NAMES DECLARED IN THIS COMPILATION.

IDENTIFIER	     OFFSET    LOC STORAGE CLASS   DATA TYPE		ATTRIBUTES AND REFERENCES
								(* indicates a set context)

NAMES DECLARED BY DECLARE STATEMENT.
account                         000115 automatic       char(32)                 unaligned dcl 23 set ref 38* 40*
arg                                    based           char                     unaligned dcl 21 ref 34 38
arg_len                         000104 automatic       fixed bin(17,0)          dcl 20 set ref 29* 34 36* 38
arg_ptr                         000102 automatic       pointer                  dcl 19 set ref 29* 34 36* 38
code                            000100 automatic       fixed bin(35,0)          dcl 18 set ref 29* 30 36* 37 40* 41 41*
com_err_                        000012 constant        entry                    external dcl 26 ref 31 41
cu_$arg_ptr                     000010 constant        entry                    external dcl 25 ref 29 36
mdc_$delete_volume_quota        000014 constant        entry                    external dcl 27 ref 40
name                            000000 constant        char(19)                 initial unaligned dcl 17 set ref 31* 31* 41*
volume                          000105 automatic       char(32)                 unaligned dcl 22 set ref 34* 40*

NAMES DECLARED BY EXPLICIT CONTEXT.
delete_volume_quota             000030 constant        entry                    external dcl 15
dlvq                            000021 constant        entry                    external dcl 15
print_usage                     000055 constant        label                    dcl 31 ref 37

THERE WERE NO NAMES DECLARED BY CONTEXT OR IMPLICATION.

STORAGE REQUIREMENTS FOR THIS PROGRAM.

	Object	Text	Link	Symbol	Defs	Static
Start          0       0       260         276     204         270
Length       450     204        16         135      54           0

BLOCK NAME	         STACK SIZE     TYPE		WHY NONQUICK/WHO SHARES STACK FRAME
dlvq                                114 external procedure  is an external procedure.  

STORAGE FOR AUTOMATIC VARIABLES.

STACK FRAME                 LOC IDENTIFIER                  BLOCK NAME
dlvq                     000100 code                        dlvq
                         000102 arg_ptr                     dlvq
                         000104 arg_len                     dlvq
                         000105 volume                      dlvq
                         000115 account                     dlvq

THE FOLLOWING EXTERNAL OPERATORS ARE USED BY THIS PROGRAM.
call_ext_out_desc   call_ext_out        return              ext_entry

THE FOLLOWING EXTERNAL ENTRIES ARE CALLED BY THIS PROGRAM.
com_err_                      cu_$arg_ptr                   mdc_$delete_volume_quota

NO EXTERNAL VARIABLES ARE USED BY THIS PROGRAM.




   LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC   
     15 000020        29 000035        30 000053        31 000055        32 000110        34 000111        36 000116
     37 000135        38 000137        40 000144        41 000164        42 000203


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
