	COMPILATION LISTING OF SEGMENT get_runtime_location
	Compiled by: Multics PL/I Compiler, Release 28d, of October 4, 1983
	Compiled at: Honeywell LCPD Phoenix, System M
	Compiled on: 11/02/83  1309.6 mst Wed
	    Options: optimize map

        1 /* ******************************************************
        2*   *                                                    *
        3*   *                                                    *
        4*   * Copyright (c) 1972 by Massachusetts Institute of   *
        5*   * Technology and Honeywell Information Systems, Inc. *
        6*   *                                                    *
        7*   *                                                    *
        8*   ****************************************************** */
        9 
       10 get_runtime_location: proc (head_pt, line_no) returns (fixed bin (18));
       11 
       12 /*	Procedure to obtain starting location of a given source line in a
       13*	standard object segment.
       14*
       15*	Coded 12 March 1973 by R. S. Coren.
       16*	Modeled on stu_$get_location by BLW.
       17**/
       18 
       19 	dcl     line_no		 fixed bin;	/* line number in source */
       20 	dcl     head_pt		 ptr;		/* pointerto standard symbol header */
       21 	dcl     (map_pt, end_pt)	 ptr;
       22 	dcl     loc		 fixed bin (18);
       23 	dcl     ln		 fixed bin;
       24 	dcl     inc		 fixed bin;
       25 	dcl     stu_$get_statement_map entry (ptr, ptr, ptr, fixed bin);
       26 
       27 	dcl     (addrel, fixed, null)	 builtin;
       28 
  1     1 dcl	1 statement_map	aligned based,
  1     2 	2 location	bit(18) unaligned,
  1     3 	2 source_id	unaligned,
  1     4 	  3 file		bit(8),
  1     5 	  3 line		bit(14),
  1     6 	  3 statement	bit(5),
  1     7 	2 source_info	unaligned,
  1     8 	  3 start		bit(18),
  1     9 	  3 length	bit(9);
       29 
       30 
       31 
       32 
       33 	call stu_$get_statement_map (head_pt, map_pt, end_pt, inc);
       34 	if map_pt = null then return (-2);
       35 
       36 
       37 	do while (map_pt ^= end_pt);
       38 
       39 	     ln = fixed (map_pt -> statement_map.source_id.line, 14);
       40 	     if ln = line_no then do;
       41 		     loc = fixed (map_pt -> statement_map.location, 18);
       42 		     return (loc);
       43 		end;
       44 
       45 	     map_pt = addrel (map_pt, inc);		/* that wasn't it, look at next entry */
       46 
       47 	end;
       48 
       49 no:	return (-1);
       50 
       51      end get_runtime_location;
	SOURCE FILES USED IN THIS COMPILATION.

LINE      NUMBER  DATE MODIFIED     NAME			PATHNAME
             0    11/02/83  1237.0  get_runtime_location.pl1          >spec>on>pascal>get_runtime_location.pl1
29           1    05/06/74  1751.6  statement_map.incl.pl1            >ldd>include>statement_map.incl.pl1
	NAMES DECLARED IN THIS COMPILATION.

IDENTIFIER	     OFFSET    LOC STORAGE CLASS   DATA TYPE		ATTRIBUTES AND REFERENCES
								(* indicates a set context)

NAMES DECLARED BY DECLARE STATEMENT.
addrel                                                 builtin function         dcl 27 ref 45
end_pt                          000102 automatic       pointer                  dcl 21 set ref 33* 37
fixed                                                  builtin function         dcl 27 ref 39 41
head_pt                                parameter       pointer                  dcl 20 set ref 10 33*
inc                             000106 automatic       fixed bin(17,0)          dcl 24 set ref 33* 45
line                      0(26)        based           bit(14)                  level 3 packed unaligned dcl 1-1 ref 39
line_no                                parameter       fixed bin(17,0)          dcl 19 ref 10 40
ln                              000105 automatic       fixed bin(17,0)          dcl 23 set ref 39* 40
loc                             000104 automatic       fixed bin(18,0)          dcl 22 set ref 41* 42
location                               based           bit(18)                  level 2 packed unaligned dcl 1-1 ref 41
map_pt                          000100 automatic       pointer                  dcl 21 set ref 33* 34 37 39 41 45* 45
null                                                   builtin function         dcl 27 ref 34
source_id                 0(18)        based           structure                level 2 packed unaligned dcl 1-1
statement_map                          based           structure                level 1 dcl 1-1
stu_$get_statement_map          000010 constant        entry                    external dcl 25 ref 33

NAMES DECLARED BY EXPLICIT CONTEXT.
get_runtime_location            000012 constant        entry                    external dcl 10
no                              000072 constant        label                    dcl 49

THERE WERE NO NAMES DECLARED BY CONTEXT OR IMPLICATION.

STORAGE REQUIREMENTS FOR THIS PROGRAM.

	Object	Text	Link	Symbol	Defs	Static
Start          0       0       140         152      76         150
Length       334      76        12         145      41           0

BLOCK NAME	         STACK SIZE     TYPE		WHY NONQUICK/WHO SHARES STACK FRAME
get_runtime_location                 82 external procedure  is an external procedure.  

STORAGE FOR AUTOMATIC VARIABLES.

STACK FRAME                 LOC IDENTIFIER                  BLOCK NAME
get_runtime_location     000100 map_pt                      get_runtime_location
                         000102 end_pt                      get_runtime_location
                         000104 loc                         get_runtime_location
                         000105 ln                          get_runtime_location
                         000106 inc                         get_runtime_location

THE FOLLOWING EXTERNAL OPERATORS ARE USED BY THIS PROGRAM.
call_ext_out        return              ext_entry

THE FOLLOWING EXTERNAL ENTRIES ARE CALLED BY THIS PROGRAM.
stu_$get_statement_map

NO EXTERNAL VARIABLES ARE USED BY THIS PROGRAM.




   LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC   
     10 000006        33 000017        34 000034        37 000044        39 000050        40 000056        41 000061
     42 000064        45 000066        47 000071        49 000072


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
