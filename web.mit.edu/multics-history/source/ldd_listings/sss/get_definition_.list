	COMPILATION LISTING OF SEGMENT get_definition_
	Compiled by: Multics PL/I Compiler, Release 27d, of October 11, 1982
	Compiled at: Honeywell LISD Phoenix, System M
	Compiled on: 11/04/82  1804.7 mst Thu
	    Options: optimize map

        1 /* ***********************************************************
        2*   *                                                         *
        3*   * Copyright, (C) Honeywell Information Systems Inc., 1982 *
        4*   *                                                         *
        5*   *********************************************************** */
        6 /* GET_DEFINITION_ - Get pointer to definition for external symbol.
        7*	coded 9/27/76 by Noel I. Morris		*/
        8 
        9 
       10 /* ******************************************************
       11*   *                                                    *
       12*   *                                                    *
       13*   * Copyright (c) 1972 by Massachusetts Institute of   *
       14*   * Technology and Honeywell Information Systems, Inc. *
       15*   *                                                    *
       16*   *                                                    *
       17*   ****************************************************** */
       18 
       19 
       20 get_definition_: proc (defsp, seg, sym, defp, code);
       21 
       22 dcl  defsp ptr,					/* pointer to definitions section */
       23      seg char (*),					/* segment name */
       24      sym char (*),					/* external symbol name */
       25      defp ptr,					/* returned pointer to definition */
       26      code fixed bin (35);				/* error code */
       27 
       28 dcl  l fixed bin;
       29 
       30 dcl 1 segacc aligned,
       31    (2 l fixed bin (8),
       32     2 c char (31)) unal;
       33 
       34 dcl 1 symacc aligned,
       35    (2 l fixed bin (8),
       36     2 c char (31)) unal;
       37 
       38 dcl  get_defptr_ entry (ptr, ptr, ptr, ptr, fixed bin (35));
       39 
       40 dcl (addr, length, reverse, substr, unspec, verify) builtin;
       41 
       42 
       43 
       44 	l = length (seg) - verify (reverse (seg), " ") + 1;
       45 	substr (unspec (segacc), 1, 36) = "0"b;
       46 	segacc.l = l;
       47 	substr (segacc.c, 1, l) = seg;
       48 
       49 	l = length (sym) - verify (reverse (sym), " ") + 1;
       50 	substr (unspec (symacc), 1, 36) = "0"b;
       51 	symacc.l = l;
       52 	substr (symacc.c, 1, l) = sym;
       53 
       54 	call get_defptr_ (defsp, addr (segacc), addr (symacc), defp, code);
       55 
       56 	return;
       57 
       58 
       59      end;
	SOURCE FILES USED IN THIS COMPILATION.

LINE      NUMBER  DATE MODIFIED     NAME			PATHNAME
             0    11/04/82  1624.8  get_definition_.pl1               >dumps>old>recomp>get_definition_.pl1
	NAMES DECLARED IN THIS COMPILATION.

IDENTIFIER	     OFFSET    LOC STORAGE CLASS   DATA TYPE		ATTRIBUTES AND REFERENCES
								(* indicates a set context)

NAMES DECLARED BY DECLARE STATEMENT.
addr                                                   builtin function         dcl 40 ref 54 54 54 54
c                         0(09) 000101 automatic       char(31)                 level 2 in structure "segacc" packed unaligned
                                                                                  dcl 30 in procedure "get_definition_" set ref 47*
c                         0(09) 000111 automatic       char(31)                 level 2 in structure "symacc" packed unaligned
                                                                                  dcl 34 in procedure "get_definition_" set ref 52*
code                                   parameter       fixed bin(35,0)          dcl 22 set ref 20 54*
defp                                   parameter       pointer                  dcl 22 set ref 20 54*
defsp                                  parameter       pointer                  dcl 22 set ref 20 54*
get_defptr_                     000010 constant        entry                    external dcl 38 ref 54
l                               000101 automatic       fixed bin(8,0)           level 2 in structure "segacc" packed unaligned
                                                                                  dcl 30 in procedure "get_definition_" set ref 46*
l                               000100 automatic       fixed bin(17,0)          dcl 28 in procedure "get_definition_" set ref 44* 46
                                                                                  47 49* 51 52
l                               000111 automatic       fixed bin(8,0)           level 2 in structure "symacc" packed unaligned
                                                                                  dcl 34 in procedure "get_definition_" set ref 51*
length                                                 builtin function         dcl 40 ref 44 49
reverse                                                builtin function         dcl 40 ref 44 49
seg                                    parameter       char                     unaligned dcl 22 ref 20 44 44 47
segacc                          000101 automatic       structure                level 1 dcl 30 set ref 45 54 54
substr                                                 builtin function         dcl 40 set ref 45* 47* 50* 52*
sym                                    parameter       char                     unaligned dcl 22 ref 20 49 49 52
symacc                          000111 automatic       structure                level 1 dcl 34 set ref 50 54 54
unspec                                                 builtin function         dcl 40 ref 45 50
verify                                                 builtin function         dcl 40 ref 44 49

NAME DECLARED BY EXPLICIT CONTEXT.
get_definition_                 000010 constant        entry                    external dcl 20

THERE WERE NO NAMES DECLARED BY CONTEXT OR IMPLICATION.

STORAGE REQUIREMENTS FOR THIS PROGRAM.

	Object	Text	Link	Symbol	Defs	Static
Start          0       0       170         202     134         200
Length       344     134        12         126      33           0

BLOCK NAME	         STACK SIZE     TYPE		WHY NONQUICK/WHO SHARES STACK FRAME
get_definition_                     100 external procedure  is an external procedure.  

STORAGE FOR AUTOMATIC VARIABLES.

STACK FRAME                 LOC IDENTIFIER                  BLOCK NAME
get_definition_          000100 l                           get_definition_
                         000101 segacc                      get_definition_
                         000111 symacc                      get_definition_

THE FOLLOWING EXTERNAL OPERATORS ARE USED BY THIS PROGRAM.
call_ext_out        return              ext_entry_desc

THE FOLLOWING EXTERNAL ENTRIES ARE CALLED BY THIS PROGRAM.
get_defptr_

NO EXTERNAL VARIABLES ARE USED BY THIS PROGRAM.




   LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC   
     20 000003        44 000030        45 000051        46 000052        47 000054        49 000061        50 000101
     51 000102        52 000104        54 000111        56 000133


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
