	COMPILATION LISTING OF SEGMENT change_error_mode
	Compiled by: Multics PL/I Compiler, Release 27d, of October 11, 1982
	Compiled at: Honeywell LISD Phoenix, System M
	Compiled on: 11/04/82  1802.0 mst Thu
	    Options: optimize map

        1 /* ***********************************************************
        2*   *                                                         *
        3*   * Copyright, (C) Honeywell Information Systems Inc., 1982 *
        4*   *                                                         *
        5*   * Copyright (c) 1972 by Massachusetts Institute of        *
        6*   * Technology and Honeywell Information Systems, Inc.      *
        7*   *                                                         *
        8*   *********************************************************** */
        9 
       10 
       11 change_error_mode: cem:
       12      procedure;
       13 
       14 /* This command allows one to change the verbosity of the messages from default_error_handler_ */
       15 /* initially coded by M. Weaver 6 July 1971 */
       16 /* Modified 761025 by PG to convert to Version 2 PL/I */
       17 
       18 /* automatic */
       19 
       20 dcl (alng, code, lng) fixed bin;
       21 dcl  aptr ptr;
       22 
       23 /* based */
       24 
       25 dcl  arg char (alng) based (aptr);
       26 
       27 /* entries */
       28 
       29 dcl  default_error_handler_$change_error_message_mode_ entry (fixed bin);
       30 dcl  cu_$arg_ptr ext entry (fixed bin, ptr, fixed bin, fixed bin);
       31 dcl  com_err_ entry options (variable);
       32 
       33 /* external static */
       34 
       35 dcl  error_table_$badopt fixed bin (35) external static;
       36 
       37 /* program */
       38 
       39 	call cu_$arg_ptr (1, aptr, alng, code);		/* find out what user wants */
       40 
       41 	if code ^= 0 then lng = 1;			/* reset to "normal" length */
       42 	else do;
       43 	     if arg = "-bf" | arg = "-brief" then lng = 0;
       44 	     else if arg = "-lg" | arg = "-long" then lng = 2;
       45 	     else do;
       46 		call com_err_ (error_table_$badopt, "change_error_mode", "^a", arg);
       47 		return;
       48 	     end;
       49 	end;
       50 	call default_error_handler_$change_error_message_mode_ (lng); /* put value in deh's int static */
       51 	return;
       52      end;
	SOURCE FILES USED IN THIS COMPILATION.

LINE      NUMBER  DATE MODIFIED     NAME			PATHNAME
             0    11/04/82  1624.8  change_error_mode.pl1             >dumps>old>recomp>change_error_mode.pl1
	NAMES DECLARED IN THIS COMPILATION.

IDENTIFIER	     OFFSET    LOC STORAGE CLASS   DATA TYPE		ATTRIBUTES AND REFERENCES
								(* indicates a set context)

NAMES DECLARED BY DECLARE STATEMENT.
alng                            000100 automatic       fixed bin(17,0)          dcl 20 set ref 39* 43 43 44 44 46 46
aptr                            000104 automatic       pointer                  dcl 21 set ref 39* 43 43 44 44 46
arg                                    based           char                     unaligned dcl 25 set ref 43 43 44 44 46*
code                            000101 automatic       fixed bin(17,0)          dcl 20 set ref 39* 41
com_err_                        000014 constant        entry                    external dcl 31 ref 46
cu_$arg_ptr                     000012 constant        entry                    external dcl 30 ref 39
default_error_handler_$change_error_message_mode_
                                000010 constant        entry                    external dcl 29 ref 50
error_table_$badopt             000016 external static fixed bin(35,0)          dcl 35 set ref 46*
lng                             000102 automatic       fixed bin(17,0)          dcl 20 set ref 41* 43* 44* 50*

NAMES DECLARED BY EXPLICIT CONTEXT.
cem                             000020 constant        entry                    external dcl 11
change_error_mode               000027 constant        entry                    external dcl 11

THERE WERE NO NAMES DECLARED BY CONTEXT OR IMPLICATION.

STORAGE REQUIREMENTS FOR THIS PROGRAM.

	Object	Text	Link	Symbol	Defs	Static
Start          0       0       256         276     157         266
Length       450     157        20         135      77           0

BLOCK NAME	         STACK SIZE     TYPE		WHY NONQUICK/WHO SHARES STACK FRAME
cem                                 100 external procedure  is an external procedure.  

STORAGE FOR AUTOMATIC VARIABLES.

STACK FRAME                 LOC IDENTIFIER                  BLOCK NAME
cem                      000100 alng                        cem
                         000101 code                        cem
                         000102 lng                         cem
                         000104 aptr                        cem

THE FOLLOWING EXTERNAL OPERATORS ARE USED BY THIS PROGRAM.
call_ext_out_desc   call_ext_out        return              ext_entry

THE FOLLOWING EXTERNAL ENTRIES ARE CALLED BY THIS PROGRAM.
com_err_                      cu_$arg_ptr                   default_error_handler_$change_error_message_mode_

THE FOLLOWING EXTERNAL VARIABLES ARE USED BY THIS PROGRAM.
error_table_$badopt




   LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC   
     11 000017        39 000034        41 000052        43 000057        44 000073        46 000106        47 000146
     50 000147        51 000156


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
