ASSEMBLY LISTING OF SEGMENT >special_ldd>install>MR12.0-1206>menu_et_.alm                    
ASSEMBLED ON:	11/05/86  1033.6 mst Wed
OPTIONS USED:	list 
ASSEMBLED BY:	ALM Version  6.7  October 1986  
ASSEMBLER CREATED:	10/08/86  1557.5 mst Wed

                                     1  "  ******************************************************
                                     2  "  *                                                    *
                                     3  "  *                                                    *
                                     4  "  * Copyright (c) 1972 by Massachusetts Institute of   *
                                     5  "  * Technology and Honeywell Information Systems, Inc. *
                                     6  "  *                                                    *
                                     7  "  *                                                    *
                                     8  "  ******************************************************
                                     9  
                                    10  "
                                    11  "  Error Table for the Menu Software
                                    12  "
                                    13  "  James R Davis February 1981
                                    14  "
                                    15  	include	et_macros
                                   1-1  " Begin include file ...... et_macros.incl.alm
                                   1-2  "	Written 6/15/77 by Noel I. Morris
                                   1-3  "	Modified '82 so error code entries are in first page of segment.
                                   1-4  
                                   1-5  " This include file contains macros for generating error tables
                                   1-6  " for both system and non-system use.
                                   1-7  
                                   1-8  " ET MACRO
                                   1-9  "
                                  1-10  " This macro is used to initialize the error table for either
                                  1-11  " system or non-system use.  It is invoked at the beginning of
                                  1-12  " the error table as follows:
                                  1-13  "
                                  1-14  "	et	table_name{,system}
                                  1-15  "
                                  1-16  
                                  1-17  macro	et
                              1   1-18  	maclist	on
                              2   1-19  
                              3   1-20  	name	&1
                              4   1-21  
                              5   1-22  &^=&2,system&[
                              6   1-23  
                              7   1-24  	include	stack_header
                              8   1-25  
                              9   1-26  
                             10   1-27  
                             11   1-28  	use	codes
                             12   1-29  .code_start:
                             13   1-30  
                             14   1-31  	use	past_codes
                             15   1-32  .code_end:
                             16   1-33  
                             17   1-34  	join	/link/codes,past_codes
                             18   1-35  
                             19   1-36  	use	messages
                             20   1-37  
                             21   1-38  .trapproc:
                             22   1-39  	epaq	0,ic
                             23   1-40  	eax0	0,au
                             24   1-41  	epbpsb	sp|0
                             25   1-42  	lprplp	sb|stack_header.lot_ptr,*au
                             26   1-43  	eax1	.code_start         
                             27   1-44  .loop:	stx0	lp|0,x1
                             28   1-45  	eax1	1,x1
                             29   1-46  	cmpx1	.code_end,du
                             30   1-47  	tmi	.loop-*,ic
                             31   1-48  	short_return
                             32   1-49  
                             33   1-50  	firstref	<*text>|.trapproc
                             34   1-51  
                             35   1-52  &;	use	codes
                             36   1-53  	use	messages
                             37   1-54  
                             38   1-55  	join	/text/codes,messages
                             39   1-56  
                             40   1-57  &]
                             41   1-58  
                             42   1-59  	bool	.segno,77777
                             43   1-60  
                             44   1-61  	maclist	off
                             45   1-62  
                             46   1-63  	&end
                                  1-64  
                                  1-65  
                                  1-66  
                                  1-67  " EC MACRO
                                  1-68  "
                                  1-69  " This macro is used to define an error code as shown:
                                  1-70  "
                                  1-71  "	ec	name,{short_mess},(long_mess)
                                  1-72  "
                                  1-73  " If more than a single name is to be defined for a given message,
                                  1-74  " a list of names separated by commas and enclosed in parentheses
                                  1-75  " must be given.   short_mess must be 8 or less characters.  If omitted,
                                  1-76  " the short_mess will be set to the name.  long_mess is enclosed
                                  1-77  " in parentheses in order to cause ALM to ignore embedded blanks.  Please
                                  1-78  " note that double quote characters in either short_mess or long_mess
                                  1-79  " must be doubled in order to make the ALM assembly work properly.
                                  1-80  " Note that a macro invocation line terminated by a comma will cause that
                                  1-81  " statement to be continued on the next line.
                                  1-82  
                                  1-83  macro	ec
                              1   1-84  	use	codes
                              2   1-85  
                              3   1-86  	maclist	on,save
                              4   1-87  &(1	segdef  &i
                              5   1-88  &)	maclist	restore
                              6   1-89  &(1&i:
                              7   1-90  &)	maclist	object,save
                              8   1-91  	zero	.segno,&U
                              9   1-92  	maclist	restore
                             10   1-93  	use	messages
                             11   1-94  &^=&l2,0&[	shortname    &2
                             12   1-95  &;	shortname    &1
                             13   1-96  &]
                             14   1-97  &U:
                             15   1-98  	maclist	on,save
                             16   1-99  	acc  "&3"
                             17  1-100  
                             18  1-101  	maclist	restore
                             19  1-102  	&end
                                 1-103  
                                 1-104  macro	shortname
                              1  1-105  	maclist	on,save
                              2  1-106  	aci  "&1",8
                              3  1-107  	maclist	restore
                              4  1-108  	&end
                                 1-109  
                                 1-110  
                                 1-111  
                                 1-112  " A typical error table source program might have the following format:
                                 1-113  "
                                 1-114  "	include	et_macros
                                 1-115  "
                                 1-116  "	et	name_of_error_table
                                 1-117  "
                                 1-118  "	ec	error_code_1,ecode1,(This is error code 1.)
                                 1-119  "
                                 1-120  "	ec	error_code_2,ecode2,(This is error code 2.)
                                 1-121  "
                                 1-122  "	:	     :	      :		:
                                 1-123  "
                                 1-124  "	ec	error_code_n,ecoden,(This is the nth error code.)
                                 1-125  "
                                 1-126  "	end
                                 1-127  "
                                 1-128  
                                 1-129  " End of include file ...... et_macros.incl.alm
                                 1-130  
                                    16  	et	menu_et_
                                        
    000000                              	name	menu_et_
                                        
                                        
                                        
                                        	include	stack_header
                                   2-1  "	BEGIN INCLUDE FILE ... stack_header.incl.alm  3/72  Bill Silver
                                   2-2  "
                                   2-3  "	modified 7/76 by M. Weaver for *system links and more system use of areas
                                   2-4  "	modified 3/77 by M. Weaver  to add rnt_ptr
                                   2-5  "	modified 7/77 by S. Webber to add run_unit_depth and assign_linkage_ptr
                                   2-6  "	modified 6/83 by J. Ives to add trace_frames and in_trace.
                                   2-7  
                                   2-8  " HISTORY COMMENTS:
                                   2-9  "  1) change(86-06-24,DGHowe), approve(86-06-24,MCR7396),
                                  2-10  "     audit(86-08-05,Schroth), install(86-11-03,MR12.0-1206):
                                  2-11  "     added the heap_header_ptr definition
                                  2-12  "  2) change(86-08-12,Kissel), approve(86-08-12,MCR7473),
                                  2-13  "     audit(86-10-10,Fawcett), install(86-11-03,MR12.0-1206):
                                  2-14  "     Modified to support control point management.  These changes were
                                  2-15  "     actually made in February 1985 by G. Palter.
                                  2-16  "  3) change(86-10-22,Fawcett), approve(86-10-22,MCR7473),
                                  2-17  "     audit(86-10-22,Farley), install(86-11-03,MR12.0-1206):
                                  2-18  "     Remove the old_lot pointer and replace it with cpm_data_ptr. Use the 18
                                  2-19  "     bit pad after cur_lot_size for the cpm_enabled. This was done to save
                                  2-20  "     some space int the stack header and change the cpd_ptr unal to
                                  2-21  "     cpm_data_ptr (ITS pair).
                                  2-22  "                                                      END HISTORY COMMENTS
                                  2-23  
                        000004    2-24  	equ	stack_header.cpm_data_ptr,4		ptr to control point for this stack
                        000006    2-25  	equ	stack_header.combined_stat_ptr,6	ptr to separate static area
                                  2-26  
                        000010    2-27  	equ	stack_header.clr_ptr,8		ptr to area containing linkage sections
                        000012    2-28  	equ	stack_header.max_lot_size,10		number of words allowed in lot (DU)
                        000012    2-29  	equ	stack_header.main_proc_invoked,10	nonzero if main proc was invoked in run unit (DL)
                        000012    2-30  	equ	stack_header.run_unit_depth,10	number of active run units stacked (DL)
                        000013    2-31  	equ	stack_header.cur_lot_size,11		DU number of words (entries) in lot
                        000013    2-32            equ	stack_header.cpm_enabled,11		DL  non-zero if control point management is enabled
                        000014    2-33  	equ	stack_header.system_free_ptr,12	ptr to system storage area
                        000016    2-34  	equ	stack_header.user_free_ptr,14		ptr to user storage area
                                  2-35  
                        000020    2-36  	equ	stack_header.parent_ptr,16		ptr to parent stack or null
                        000022    2-37  	equ	stack_header.stack_begin_ptr,18	ptr to first stack frame
                        000024    2-38  	equ	stack_header.stack_end_ptr,20		ptr to next useable stack frame
                        000026    2-39  	equ	stack_header.lot_ptr,22		ptr to the lot for the current ring
                                  2-40  
                        000030    2-41  	equ	stack_header.signal_ptr,24		ptr to signal proc for current ring
                        000032    2-42  	equ	stack_header.bar_mode_sp,26		value of sp before entering bar mode
                        000034    2-43  	equ	stack_header.pl1_operators_ptr,28	ptr: pl1_operators_$operator_table
                        000036    2-44  	equ	stack_header.call_op_ptr,30		ptr to standard call operator
                                  2-45  
                        000040    2-46  	equ	stack_header.push_op_ptr,32		ptr to standard push operator
                        000042    2-47  	equ	stack_header.return_op_ptr,34		ptr to standard return operator
                        000044    2-48  	equ	stack_header.ret_no_pop_op_ptr,36	ptr: stand. return/ no pop operator
                        000046    2-49  	equ	stack_header.entry_op_ptr,38		ptr to standard entry operator
                                  2-50  
                        000050    2-51  	equ	stack_header.trans_op_tv_ptr,40	ptr to table of translator operator ptrs
                        000052    2-52  	equ	stack_header.isot_ptr,42		pointer to ISOT
                        000054    2-53  	equ	stack_header.sct_ptr,44		pointer to System Condition Table
                        000056    2-54  	equ	stack_header.unwinder_ptr,46		pointer to unwinder for current ring
                                  2-55  
                        000060    2-56  	equ	stack_header.sys_link_info_ptr,48	ptr to *system link name table
                        000062    2-57  	equ	stack_header.rnt_ptr,50		ptr to reference name table
                        000064    2-58  	equ	stack_header.ect_ptr,52		ptr to event channel table
                        000066    2-59  	equ	stack_header.assign_linkage_ptr,54	ptr to area for hcs_$assign_linkage calls
                        000070    2-60  	equ	stack_header.heap_header_ptr,56	ptr to heap header.
                        000072    2-61  	equ	stack_header.trace_frames,58		stack of trace_catch_ frames
                        000073    2-62  	equ	stach_header.trace_top_ptr,59		trace pointer
                        000074    2-63  	equ	stack_header.in_trace,60		trace antirecurse bit
                        000100    2-64  	equ	stack_header_end,64			length of stack header
                                  2-65  
                                  2-66  
                                  2-67  
                                  2-68  
                        000000    2-69  	equ	trace_frames.count,0		number of trace frames on stack
                        000001    2-70  	equ	trace_frames.top_ptr,1		packed pointer to top one
                                  2-71  
                                  2-72  "	The  following constant is an offset within the  pl1  operators table.
                                  2-73  "	It  references a  transfer vector table.
                                  2-74  
                        000551    2-75  	bool	tv_offset,551
                                  2-76  
                                  2-77  
                                  2-78  "	The  following constants are offsets within this transfer vector table.
                                  2-79  
                        001170    2-80  	equ	call_offset,tv_offset+271
                        001171    2-81  	equ	push_offset,tv_offset+272
                        001172    2-82  	equ	return_offset,tv_offset+273
                        001173    2-83  	equ	return_no_pop_offset,tv_offset+274
                        001174    2-84  	equ	entry_offset,tv_offset+275
                                  2-85  
                                  2-86  
                                  2-87  " 	END INCLUDE FILE stack_header.incl.alm
                                        
                                        
                                        
                                        	use	codes
    000010                              .code_start:
                                        
                                        	use	past_codes
    000014                              .code_end:
                                        
                                        	join	/link/codes,past_codes
                                        
                                        	use	messages
                                        
    000000                              .trapproc:
    000000  aa   000000 2130 04         	epaq	0,ic
    000001  aa   000000 6200 01         	eax0	0,au
    000002  aa  6 00000 3731 00         	epbpsb	sp|0
    000003  aa  7 00026 7641 61         	lprplp	sb|stack_header.lot_ptr,*au
    000004  8a   000010 6210 00         	eax1	.code_start         
    000005  aa  4 00000 7401 11         .loop:	stx0	lp|0,x1
    000006  aa   000001 6210 11         	eax1	1,x1
    000007  8a   000014 1010 03         	cmpx1	.code_end,du
    000010  aa   777775 6040 04         	tmi	.loop-*,ic
    000011  aa  7 00044 7101 20         	short_return
                                        
    000012                              	firstref	<*text>|.trapproc
                                        
                                        
                                        
                        077777          	bool	.segno,77777
                                        
                                    17  
                                    18  	ec	too_many_options,manyopt,(A menu can contain at most 61 choices.)
                        000010          	segdef  too_many_options
    000010  a0   077777 000014 
    000012  aa  155 141 156 171         	aci  "manyopt",8
    000013  aa  157 160 164 040
    000014  aa  046 101 040 155         	acc  "A menu can contain at most 61 choices."
    000015  aa  145 156 165 040
    000016  aa  143 141 156 040
    000017  aa  143 157 156 164
    000020  aa  141 151 156 040
    000021  aa  141 164 040 155
    000022  aa  157 163 164 040
    000023  aa  066 061 040 143
    000024  aa  150 157 151 143
    000025  aa  145 163 056 000
                                        
                                    19  	ec	too_few_keys,few_keys,(There are fewer keys than choices.)
                        000011          	segdef  too_few_keys
    000011  a0   077777 000030 
    000026  aa  146 145 167 137         	aci  "few_keys",8
    000027  aa  153 145 171 163
    000030  aa  042 124 150 145         	acc  "There are fewer keys than choices."
    000031  aa  162 145 040 141
    000032  aa  162 145 040 146
    000033  aa  145 167 145 162
    000034  aa  040 153 145 171
    000035  aa  163 040 164 150
    000036  aa  141 156 040 143
    000037  aa  150 157 151 143
    000040  aa  145 163 056 000
                                        
                                    20  
                                    21  	ec	keys_not_unique,key_dup,(Each key must be unique.)
                        000012          	segdef  keys_not_unique
    000012  a0   077777 000043 
    000041  aa  153 145 171 137         	aci  "key_dup",8
    000042  aa  144 165 160 040
    000043  aa  030 105 141 143         	acc  "Each key must be unique."
    000044  aa  150 040 153 145
    000045  aa  171 040 155 165
    000046  aa  163 164 040 142
    000047  aa  145 040 165 156
    000050  aa  151 161 165 145
    000051  aa  056 000 000 000
                                        
                                    22  
                                    23  	ec	higher_than_max,too_high,(The menu will not fit within the specified maximum height.)
                        000013          	segdef  higher_than_max
    000013  a0   077777 000054 
    000052  aa  164 157 157 137         	aci  "too_high",8
    000053  aa  150 151 147 150
    000054  aa  072 124 150 145         	acc  "The menu will not fit within the specified maximum height."
    000055  aa  040 155 145 156
    000056  aa  165 040 167 151
    000057  aa  154 154 040 156
    000060  aa  157 164 040 146
    000061  aa  151 164 040 167
    000062  aa  151 164 150 151
    000063  aa  156 040 164 150
    000064  aa  145 040 163 160
    000065  aa  145 143 151 146
    000066  aa  151 145 144 040
    000067  aa  155 141 170 151
    000070  aa  155 165 155 040
    000071  aa  150 145 151 147
    000072  aa  150 164 056 000
                                        
                                    24  	
                                    25  	end

NO LITERALS
     
NAME DEFINITIONS FOR ENTRY POINTS AND SEGDEFS

    000074  5a   000003 000000 
    000075  5a   000055 600000 
    000076  aa   000000 000000 
    000077  55   000011 000002 
    000100  5a   000002 400003 
    000101  55   000006 000011 
    000102  aa  010 155 145 156
    000103  aa  165 137 145 164
    000104  aa  137 000 000 000
    000105  55   000020 000003 
    000106  2a   000013 400001 
    000107  55   000014 000003 
    000110  aa  017 150 151 147         higher_than_max
    000111  aa  150 145 162 137
    000112  aa  164 150 141 156
    000113  aa  137 155 141 170
    000114  55   000027 000011 
    000115  2a   000012 400001 
    000116  55   000023 000003 
    000117  aa  017 153 145 171         keys_not_unique
    000120  aa  163 137 156 157
    000121  aa  164 137 165 156
    000122  aa  151 161 165 145
    000123  55   000036 000020 
    000124  2a   000011 400001 
    000125  55   000032 000003 
    000126  aa  014 164 157 157         too_few_keys
    000127  aa  137 146 145 167
    000130  aa  137 153 145 171
    000131  aa  163 000 000 000
    000132  55   000046 000027 
    000133  2a   000010 400001 
    000134  55   000041 000003 
    000135  aa  020 164 157 157         too_many_options
    000136  aa  137 155 141 156
    000137  aa  171 137 157 160
    000140  aa  164 151 157 156
    000141  aa  163 000 000 000
    000142  55   000002 000036 
    000143  6a   000000 400002 
    000144  55   000051 000003 
    000145  aa  014 163 171 155         symbol_table
    000146  aa  142 157 154 137
    000147  aa  164 141 142 154
    000150  aa  145 000 000 000

DEFINITIONS HASH TABLE

    000151  aa   000000 000015 
    000152  aa   000000 000000 
    000153  aa   000000 000000 
    000154  5a   000020 000000 
    000155  5a   000036 000000 
    000156  aa   000000 000000 
    000157  aa   000000 000000 
    000160  5a   000046 000000 
    000161  5a   000011 000000 
    000162  aa   000000 000000 
    000163  5a   000027 000000 
    000164  aa   000000 000000 
    000165  aa   000000 000000 
    000166  aa   000000 000000 

NO EXTERNAL NAMES

NO TRAP POINTER WORDS

TYPE PAIR BLOCKS

    000167  aa   000001 000000 
    000170  aa   000000 000000 

INTERNAL EXPRESSION WORDS

    000171  50   000073 000000 
LINKAGE INFORMATION
      
    000000  aa   000000 000000 
    000001  02   000074 000016 
    000002  aa   000000 000000 
    000003  aa   000000 000000 
    000004  aa   000000 000000 
    000005  aa   000000 000000 
    000006  22   000014 000021 
    000007  a2   000000 000004 
    000014  9a   777764 0000 46         *text|       
    000015  5a   000075 0000 00

FIRST REFERENCE TRAP LIST
     
    000016  aa   000000 000001 
    000017  aa   000000 000001 
    000020  2a   000014 000000 
    000021  aa   000000 000000 
SYMBOL INFORMATION
     
SYMBOL TABLE HEADER
     
    000000  aa   000000 000001 
    000001  aa   163171 155142 
    000002  aa   164162 145145 
    000003  aa   000000 000004 
    000004  aa   000000 114732 
    000005  aa   732732 062314 
    000006  aa   000000 114775 
    000007  aa   662437 775304 
    000010  aa   141154 155040 
    000011  aa   040040 040040 
    000012  aa   000024 000040 
    000013  aa   000034 000040 
    000014  aa   000044 000100 
    000015  aa   000002 000002 
    000016  aa   000064 000000 
    000017  aa   000000 000167 
    000020  aa   000000 000144 
    000021  aa   000000 000152 
    000022  aa   000157 000144 
    000023  aa   000064 000000 
    000024  aa   101114 115040 
    000025  aa   126145 162163 
    000026  aa   151157 156040 
    000027  aa   040066 056067 
    000030  aa   040040 117143 
    000031  aa   164157 142145 
    000032  aa   162040 061071 
    000033  aa   070066 040040 
    000034  aa   107112 157150 
    000035  aa   156163 157156 
    000036  aa   056123 171163 
    000037  aa   115141 151156 
    000040  aa   164056 141040 
    000041  aa   040040 040040 
    000042  aa   040040 040040 
    000043  aa   040040 040040 
    000044  aa   154151 163164 
    000045  aa   040040 040040 
    000046  aa   040040 040040 
    000047  aa   040040 040040 
    000050  aa   040040 040040 
    000051  aa   040040 040040 
    000052  aa   040040 040040 
    000053  aa   040040 040040 
    000054  aa   040040 040040 
    000055  aa   040040 040040 
    000056  aa   040040 040040 
    000057  aa   040040 040040 
    000060  aa   040040 040040 
    000061  aa   040040 040040 
    000062  aa   040040 040040 
    000063  aa   040040 040040 
    000064  aa   000000 000001 
    000065  aa   000000 000003 
    000066  aa   000102 000055 
    000067  aa   147740 446173 
    000070  aa   000000 114774 
    000071  aa   460756 400000 
    000072  aa   000116 000037 
    000073  aa   120665 316464 
    000074  aa   000000 112067 
    000075  aa   253504 600000 
    000076  aa   000126 000066 
    000077  aa   147714 750316 
    000100  aa   000000 114774 
    000101  aa   453561 000000 
    000102  aa   076163 160145          >special_ldd>install>MR12.0-1206>menu_et_.alm
    000103  aa   143151 141154 
    000104  aa   137154 144144 
    000105  aa   076151 156163 
    000106  aa   164141 154154 
    000107  aa   076115 122061 
    000110  aa   062056 060055 
    000111  aa   061062 060066 
    000112  aa   076155 145156 
    000113  aa   165137 145164 
    000114  aa   137056 141154 
    000115  aa   155040 040040 
    000116  aa   076154 144144          >ldd>include>et_macros.incl.alm
    000117  aa   076151 156143 
    000120  aa   154165 144145 
    000121  aa   076145 164137 
    000122  aa   155141 143162 
    000123  aa   157163 056151 
    000124  aa   156143 154056 
    000125  aa   141154 155040 
    000126  aa   076163 160145          >special_ldd>install>MR12.0-1206>stack_header.incl.alm
    000127  aa   143151 141154 
    000130  aa   137154 144144 
    000131  aa   076151 156163 
    000132  aa   164141 154154 
    000133  aa   076115 122061 
    000134  aa   062056 060055 
    000135  aa   061062 060066 
    000136  aa   076163 164141 
    000137  aa   143153 137150 
    000140  aa   145141 144145 
    000141  aa   162056 151156 
    000142  aa   143154 056141 
    000143  aa   154155 040040 
               MULTICS ASSEMBLY CROSS REFERENCE LISTING

   Value        Symbol                   Source file   Line number

                *text                    menu_et_:      16.
          14    .._00000                 menu_et_:      18.
          30    .._00001                 menu_et_:      19.
          43    .._00002                 menu_et_:      21.
          54    .._00003                 menu_et_:      23.
          14    .code_end                menu_et_:      16.
          10    .code_start              menu_et_:      16.
           5    .loop                    menu_et_:      16.
       77777    .segno                   menu_et_:      16,   18,   19,   21,   23.
           0    .trapproc                menu_et_:      16.
        1170    call_offset              stack_header:        80.
          10    codes                    menu_et_:      16,   18,   19,   21,   23.
        1174    entry_offset             stack_header:        84.
          13    higher_than_max          menu_et_:      23.
          12    keys_not_unique          menu_et_:      21.
           0    messages                 menu_et_:      16,   18,   19,   21,   23.
          14    past_codes               menu_et_:      16.
        1171    push_offset              stack_header:        81.
        1173    return_no_pop_offset     stack_header:        83.
        1172    return_offset            stack_header:        82.
          73    stach_header.trace_top_ptr     stack_header:        62.
          66    stack_header.assign_linkage_ptr      stack_header:        59.
          32    stack_header.bar_mode_sp       stack_header:        42.
          36    stack_header.call_op_ptr       stack_header:        44.
          10    stack_header.clr_ptr     stack_header:        27.
           6    stack_header.combined_stat_ptr       stack_header:        25.
           4    stack_header.cpm_data_ptr      stack_header:        24.
          13    stack_header.cpm_enabled       stack_header:        32.
          13    stack_header.cur_lot_size      stack_header:        31.
          64    stack_header.ect_ptr     stack_header:        58.
          46    stack_header.entry_op_ptr      stack_header:        49.
          70    stack_header.heap_header_ptr   stack_header:        60.
          74    stack_header.in_trace    stack_header:        63.
          52    stack_header.isot_ptr    stack_header:        52.
          26    stack_header.lot_ptr     menu_et_:      16,
                                         stack_header:        39.
          12    stack_header.main_proc_invoked       stack_header:        29.
          12    stack_header.max_lot_size      stack_header:        28.
          20    stack_header.parent_ptr  stack_header:        36.
          34    stack_header.pl1_operators_ptr       stack_header:        43.
          40    stack_header.push_op_ptr       stack_header:        46.
          42    stack_header.return_op_ptr     stack_header:        47.
          44    stack_header.ret_no_pop_op_ptr       stack_header:        48.
          62    stack_header.rnt_ptr     stack_header:        57.
          12    stack_header.run_unit_depth    stack_header:        30.
          54    stack_header.sct_ptr     stack_header:        53.
          30    stack_header.signal_ptr  stack_header:        41.
          22    stack_header.stack_begin_ptr   stack_header:        37.
          24    stack_header.stack_end_ptr     stack_header:        38.
          14    stack_header.system_free_ptr   stack_header:        33.
          60    stack_header.sys_link_info_ptr       stack_header:        56.
          72    stack_header.trace_frames      stack_header:        61.
          50    stack_header.trans_op_tv_ptr   stack_header:        51.
          56    stack_header.unwinder_ptr      stack_header:        54.
          16    stack_header.user_free_ptr     stack_header:        34.
         100    stack_header_end         stack_header:        64.
          11    too_few_keys             menu_et_:      19.
          10    too_many_options         menu_et_:      18.
           0    trace_frames.count       stack_header:        69.
           1    trace_frames.top_ptr     stack_header:        70.
         551    tv_offset                stack_header:        75,   80,   81,   82,   83,   84.


NO FATAL ERRORS


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
