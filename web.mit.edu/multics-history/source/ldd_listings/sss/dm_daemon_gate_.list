ASSEMBLY LISTING OF SEGMENT >spec>on>41-16>dm_daemon_gate_.alm             
ASSEMBLED ON:	04/11/85  1131.4 mst Thu
OPTIONS USED:	list 
ASSEMBLED BY:	ALM Version  6.6  November 1982 
ASSEMBLER CREATED:	09/21/83  1227.3 mst Wed

                                     1  " ***********************************************************
                                     2  " *                                                         *
                                     3  " * Copyright, (C) Honeywell Information Systems Inc., 1983 *
                                     4  " *                                                         *
                                     5  " ***********************************************************
                                     6  "
                                     7  " DESCRIPTION:
                                     8  "
                                     9  "	 This is the data managment system's (DMS) privileged gate.  It
                                    10  "     is to give the DM Daemon and maintenance personnel access over what
                                    11  "     is normally needed to run DMS in a process.  Any entry that "belongs"
                                    12  "     to a particular DM manager is prefixed with that manager's initials
                                    13  "     (e.g., "fm_" for "file_manager_"). General DM inner ring calls will
                                    14  "     start with "dm_".
                                    15  "
                                    16  " HISTORY:
                                    17  "
                                    18  " Written by John Bongiovanni, 01/01/82.
                                    19  " Modified:
                                    20  " 03/05/83 by Jeffrey D. Ives:  removed Lock Manager entries.
                                    21  " 05/11/83 by M. Pandolf:  add set_log_dir and terminate_segno.
                                    22  " 05/23/83 by Lee A. Newcomb:  renamed to dm_daemon_gate_.
                                    23  " 06/09/83 by L. A. Newcomb:  code arg. removed from initialize_system.
                                    24  " 06/30/83 by L. A. Newcomb: removed set_log_dir entry, obsolete.
                                    25  " 07/25/83 by M. Pandolf: add cp for inner ring cu_$cp.
                                    26  " 10/13/83 by M. Pandolf: add find_log.
                                    27  " 01/03/84 by L. A. Newcomb:  added log_message and removed
                                    28  "	    the obsolete entry terminate_segno.  Also added some entries
                                    29  "	    from the per-manager gates that are privileged.
                                    30  " 03/22/84 by L. A. Newcomb:  add get_daemon_info entry.
                                    31  " 04/06/84 by R. Michael Tague:  add bjm_adjust_process_id, bjm_flush_all.
                                    32  " 04/19/84 by R. Michael Tague:  added bjm_get_bj_path_from_uid.
                                    33  " 05/21/84 by R. Michael Tague:  Moved $fm_adopt and
                                    34  "	    $fm_open_by_uid_after_crash from dm_gate_.
                                    35  " 06/01/84 by Lee A. Newcomb:  fixed typo, dm_firstref_tv_ -> fm_inner...
                                    36  "	    for $fm_open_by_uid_after_crash transfer.
                                    37  " 07/06/84 by Lindsey Spratt:  Moved bjm_get_bj_path_from_uid to
                                    38  "	    dm_admin_gate_.
                                    39  " 07/31/84 by S. Herbst:  Added tm_dm_system_in_use entry point.
                                    40  " 08/02/84 by Lee A. Newcomb: added entries $get_daemon_logout_time,
                                    41  "	    $get_user_bump_time, $set_shutdown_reason, and $set_system_state.
                                    42  " 08/08/84 by Lee A. Newcomb:  Added $tm_ips_wakeup entry.
                                    43  " 10/01/84 by Lee A. Newcomb:  Added $tm_ips_wakeup_all and
                                    44  "	    $dm_set_shutdown_info, moved $set_system_dir to dm_gate_ and
                                    45  "	    $set_aim_dir to dm_admim_gate_$dm_set_aim_dir, and
                                    46  "	    deleted $start_shutdown.
                                    47  " 10/30/84 by Lee A. Newcomb:  Changed $dm_set_shutdown_info to transfer to
                                    48  "	    dm_firstref_tv_$set_shutdown_info.
                                    49  " 11/28/84 by Stanford S. Cox: Added dm_ prefix to DM entries, Chg
                                    50  "	    *inner_ring_tv_ to =firstref_tv_, chg dm* entries to xfer
                                    51  "        	    via *firstref_tv_.
                                    52  " 12/05/84 by R. Michael Tague: Took "_" off dm_firstref_tv_$get_daemon_info_.
                                    53  " 12/06/84 by R. Michael Tague: Added tm_$bump_all
                                    54  " 12/09/84 by Lindsey Spratt:  Changed $dm_find_log and $dm_log_message to
                                    55  "	    transfer to dm_firstref_tv_ instead of dm_no_firstref_tv_.
                                    56  " 12/10/84 by Lindsey Spratt: Changed $dm_find_log back to transfer to 
                                    57  "	    dm_no_firstref_tv_.
                                    58  " 02/21/85 by Lee A. Newcomb:  Removed the obsolete $dm_cp and $dm_find_log.
                                    59  " 03/05/85 by Steve Herbst:  Changed $dm_log_message to transfer to
                                    60  "	    dm_no_firstref_tv_ instead of dm_firstref_tv_ (see 12/09/84)
                                    61  "
                                    62  " " " " " " " " " " " " " " " " " " " " " " " " " " " " " " "
                                    63  
    000000                          64  	name	dm_daemon_gate_
                                    65  
                                    66  	include	gate_macros
                                   1-1  " BEGIN INCLUDE FILE ...... gate_macros.incl.alm
                                   1-2  "   Last modified 6/77 by N. Morris, B. Greenberg, & T. VanVleck
                                   1-3  "   Modified 741212 by PG to inhibit while computing virtual CPU time
                                   1-4  "   Modified 83-03-14 by E. N. Kittlitz to clear IR
                                   1-5  "   Modified 83-06-01 BIM for ring alarm polling
                                   1-6  "   Modified 85-04-03 by Keith Loepere to make polling a little smarter.
                                   1-7  
                                   1-8  " This file contains several macros used when generating gate segments.
                                   1-9  " The major macros that are defined are:
                                  1-10  "
                                  1-11  "	gate_info		general setup code for normal gates
                                  1-12  "	hardcore_gate_info	general setup code for hardcore gates
                                  1-13  "	bad_dir_handler	setup and handler for bad_dir_ condition (goes at bottom)
                                  1-14  "	bad_dir_handler_entry	entrypoint for above (goes at top)
                                  1-15  "	gate		to define a normal gate
                                  1-16  "	hgate		to define a hardcore gate
                                  1-17  "	fgate		to define a fast hardcore gate
                                  1-18  "
                                  1-19  
                                  1-20  
    000000                        1-21  	maclist	off
                                  1-22  
                                  1-23  
                                  1-24  " HGATE - define a hardcore gate entry
                                  1-25  "
                                  1-26  "	hgate	gatename,procedure,entry,args{,bad_dir_trap}
                                  1-27  "
                                  1-28  " The entrypoint gatename is defined in the gate segment.  If args
                                  1-29  " is nonzero, the number of arguments passed to gatename must be
                                  1-30  " equal to args.  When gatename is called, it will in turn call
                                  1-31  " procedure$entry.
                                  1-32  "
                                  1-33  
                                  1-34  macro	hgate
                              1   1-35  	gentry	&1,&4*2,&1.t
                              2   1-36  	tsx2	.setup
                              3   1-37  &=&5,bad_dir_trap&[	tsx0	.set_dir_trap
                              4   1-38  &]	ldi	=0,dl
                              5   1-39  	short_call &2$&3(ap|0)
                              6   1-40  	eppbp	lp|&1.t
                              7   1-41  	tra	.return_code
                              8   1-42  	maclist	restore
                              9   1-43  	use	linkage
                             10   1-44  	even
                             11   1-45  	maclist	on,save
                             12   1-46  &1.t:
                             13   1-47  	bss	,gate_entry_data_size
                             14   1-48  
                             15   1-49  	maclist	restore
                             16   1-50  &end
                                  1-51  
                                  1-52  
                                  1-53  " FGATE - define a fast hardcore gate
                                  1-54  "
                                  1-55  "	fgate	gatename,procedure,entry
                                  1-56  "
                                  1-57  
                                  1-58  macro	fgate
                              1   1-59  	gentry	&1,0,0
                              2   1-60  	ldi	=0,dl
                              3   1-61  	epplp	.my_lp,*
                              4   1-62  	tra	&2$&3
                              5   1-63  
                              6   1-64  	maclist	off
                              7   1-65  &end
                                  1-66  
                                  1-67  
                                  1-68  " GATE - define a normal gate entry
                                  1-69  "
                                  1-70  "	gate	gatename,procedure,entry,args
                                  1-71  "
                                  1-72  
                                  1-73  macro	gate
                              1   1-74  	gentry	&1,&4*2,0
                              2   1-75  	tsx2	.setup
                              3   1-76  	ldi	=0,dl
                              4   1-77  	short_call &2$&3(ap|0)
                              5   1-78  	return
                              6   1-79  
                              7   1-80  	maclist	restore
                              8   1-81  &end
                                  1-82  
                                  1-83  
                                  1-84  
                                  1-85  macro	gentry
                              1   1-86  	maclist	on,save
                              2   1-87  	segdef	&1
                              3   1-88  	maclist	restore
                              4   1-89  	use	transfer_vector
                              5   1-90  	maclist	on,save
                              6   1-91  &1:
                              7   1-92  	tra	&1.e
                              8   1-93  	maclist	restore
                              9   1-94  	use	main
                             10   1-95  	maclist	on,save
                             11   1-96  	zero	&2,&3
                             12   1-97  &1.e:
                             13   1-98  &end
                                  1-99  
                                 1-100  
                                 1-101  " HARDCORE_GATE_INFO - general info for hardcore gates
                                 1-102  
                                 1-103  macro	hardcore_gate_info
                              1  1-104  	maclist	on,save
                              2  1-105  	name	&1
                              3  1-106  
                              4  1-107  	include	stack_header
                              5  1-108  
                              6  1-109  	include	stack_frame
                              7  1-110  	include	gate_data
                              8  1-111  
                              9  1-112  	maclist	restore
                             10  1-113  	eject
                             11  1-114  
                             12  1-115  	tempd	.temp
                             13  1-116  	tempd	.label_variable(0)
                             14  1-117  	tempd	.time1,.time2
                             15  1-118  	tempd	.unwinder_arglist(0)
                             16  1-119  	tempd	.on_unit(5)
                             17  1-120  	temp	.pf,.entryp
                             18  1-121  	tempd	.vfl_arglist(2)
                             19  1-122  	tempd	.mcptr
                             20  1-123  
                             21  1-124  	use	transfer_vector
                             22  1-125  	equ	.tv_begin,*
                             23  1-126  
                             24  1-127  	tra	.actor
                             25  1-128  
                             26  1-129  	use	tv_end
                             27  1-130  	entrybound
                             28  1-131  
                             29  1-132  	segdef	.tv_end
                             30  1-133  .tv_end:	vfd	14/(*-.tv_begin)
                             31  1-134  
                             32  1-135  	use	main
                             33  1-136  
                             34  1-137  	segdef	.my_lp
                             35  1-138  	even
                             36  1-139  .my_lp:	bss	,2
                             37  1-140  
                             38  1-141  	join	/text/transfer_vector,tv_end,main
                             39  1-142  
                             40  1-143  	use	linkage
                             41  1-144  	join	/link/linkage
                             42  1-145  
                             43  1-146  	use	main
                             44  1-147  
                             45  1-148  	maclist	restore
                             46  1-149  	eject
                             47  1-150  
                             48  1-151  .actor:	epplp	.my_lp,*
                             49  1-152  	maclist	restore
                             50  1-153  	gate_actor
                             51  1-154  
                             52  1-155  
                             53  1-156  
                             54  1-157  .setup:	push
                             55  1-158  	epplp	.my_lp,*
                             56  1-159  	sprilp	sp|stack_frame.lp_ptr
                             57  1-160  
                             58  1-161  	maclist	restore
                             59  1-162  	gcheck
                             60  1-163  
                             61  1-164  	inhibit	on	<+><+><+><+><+><+><+><+><+><+><+><+>
                             62  1-165  	rccl	sys_info$clock_,*	calculate times
                             63  1-166  	sbaq	pds$cpu_time
                             64  1-167  	staq	.time1
                             65  1-168  	sbaq	pds$virtual_delta
                             66  1-169  	staq	.time2
                             67  1-170  	lda	pds$page_waits
                             68  1-171  	sta	.pf
                             69  1-172  	inhibit	off	<-><-><-><-><-><-><-><-><-><-><-><->
                             70  1-173  	tra	0,2
                             71  1-174  
                             72  1-175  	maclist	restore
                             73  1-176  	eject
                             74  1-177  
                             75  1-178  .return_code:
                             76  1-179  
                             77  1-180  	inhibit	on	<+><+><+><+><+><+><+><+><+><+><+><+>
                             78  1-181  	rccl	sys_info$clock_,*	calculate times
                             79  1-182  	sbaq	pds$cpu_time
                             80  1-183  	staq	.temp
                             81  1-184  	sbaq	.time1
                             82  1-185  	adaq	bp|gate_entry_data.cpu_time
                             83  1-186  	staq	bp|gate_entry_data.cpu_time
                             84  1-187  	ldaq	.temp
                             85  1-188  	sbaq	pds$virtual_delta
                             86  1-189  	sbaq	.time2
                             87  1-190  	adaq	bp|gate_entry_data.vcpu_time
                             88  1-191  	staq	bp|gate_entry_data.vcpu_time
                             89  1-192  	lda	pds$page_waits
                             90  1-193  	sbla	.pf
                             91  1-194  	asa	bp|gate_entry_data.page_waits
                             92  1-195  	aos	bp|gate_entry_data.calls
                             93  1-196  	inhibit	off	<-><-><-><-><-><-><-><-><-><-><-><->
                             94  1-197  
                             95  1-198  			" Poll for ring alarms
                             96  1-199  	sra	.temp	Borrow from time calc
                             97  1-200  	szn	.temp	Zero?
                             98  1-201  	tze	.return_code_return
                             99  1-202  
                            100  1-203  	epp1	sp|stack_frame.prev_sp,*	"possible ring alarm
                            101  1-204  	epaq	pr1|stack_frame.return_ptr,*
                            102  1-205  	ana	7,dl	" ring number to which we return
                            103  1-206  	cmpa	.temp
                            104  1-207  	tpl	.ring_alarm	" ring alarm will occur
                            105  1-208  
                            106  1-209  .return_code_return:
                            107  1-210  	return
                            108  1-211  
                            109  1-212  .ring_alarm:		" perhaps we can handle without faults?
                            110  1-213  
                            111  1-214  	aos	bp|gate_entry_data.ring_alarms
                            112  1-215  	stz	.temp	" return argument for ring_alarm$poll
                            113  1-216  	ldaq	.one_arg_header
                            114  1-217  	staq	.ring_alarm_arg_list
                            115  1-218  	epp1	.temp
                            116  1-219  	spri1	.ring_alarm_arg_list+2
                            117  1-220  	eppap	.ring_alarm_arg_list
                            118  1-221  	short_call ring_alarm$poll
                            119  1-222  	szn	.temp
                            120  1-223  	tze	.return_code_return
                            121  1-224  	eppsp	sp|stack_frame.prev_sp,*
                            122  1-225  	sprisp	pds$pre_empt_poll_return          " short-return from here
                            123  1-226  	epp1	sb|stack_header.stack_begin_ptr,* " abandoning this stack frame.
                            124  1-227  	spri1	sb|stack_header.stack_end_ptr
                            125  1-228  " Leave SB as stack_0, so pxss can get to operators.
                            126  1-229  	tra	pxss$pre_empt_poll
                            127  1-230  
                            128  1-231  	tempd	.ring_alarm_arg_list(2)
                            129  1-232  	even
                            130  1-233  .one_arg_header:
                            131  1-234  	vfd	17/2,1/0,18/4
                            132  1-235  	vfd	18/0,18/0
                            133  1-236  
                            134  1-237  
                            135  1-238  	maclist	restore
                            136  1-239  	eject
                            137  1-240  	maclist	restore
                            138  1-241  &end
                                 1-242  
                                 1-243  
                                 1-244  " BAD_DIR_HANDLER - code to setup and handle bad_dir_ condition
                                 1-245  "			put this after the last hgate macro
                                 1-246  
                                 1-247  macro	bad_dir_handler
                              1  1-248  	maclist	on,save
                              2  1-249  
                              3  1-250  	include	on_unit
                              4  1-251  
                              5  1-252  	use	transfer_vector
                              6  1-253  .handler_entry:
                              7  1-254  	tra	.handler
                              8  1-255  .handler_restart_entry:
                              9  1-256  	tra	.handler_restart_point
                             10  1-257  
                             11  1-258  	use	main
                             12  1-259  .set_dir_trap:
                             13  1-260  	stx0	.entryp		save for restart
                             14  1-261  
                             15  1-262  	mlr	(),(pr),fill(000)
                             16  1-263  	desc9a	0,0
                             17  1-264  	desc9a	.on_unit,10*4
                             18  1-265  	eppbp	.bad_dir_name
                             19  1-266  	spribp	.on_unit+on_unit.name
                             20  1-267  	eppbp	.handler_entry
                             21  1-268  	spribp	.on_unit+on_unit.body
                             22  1-269  	lxl1	.bad_dir_desc
                             23  1-270  	sxl1	.on_unit+on_unit.size
                             24  1-271  	eaa	.on_unit		set up on-unit for bad_dir_
                             25  1-272  	sbla	sp|0,du		.. make rel to sp
                             26  1-273  	sta	sp|stack_frame.on_unit_rel_ptrs
                             27  1-274  	lda	stack_frame.condition_bit,dl
                             28  1-275  	orsa	sp|stack_frame.flag_word
                             29  1-276  	tra	0,0
                             30  1-277  
                             31  1-278  	string	bad_dir_
                             32  1-279  
                             33  1-280  
                             34  1-281  
                             35  1-282  .handler:	epaq	sp|0		verify that call came from ring 0
                             36  1-283  	cana	-1,dl		check ring number in AL
                             37  1-284  	tze	*+2
                             38  1-285  	zero	0		go way kid you bother me
                             39  1-286  
                             40  1-287  	push			" ok, we like the call
                             41  1-288  	epplp	.my_lp,*
                             42  1-289  	ldx0	ap|0		get display
                             43  1-290  	eppbp	ap|2,0*
                             44  1-291  	lda	bp|stack_frame.prev_sp
                             45  1-292  	cana	=o700000,dl	from another ring?
                             46  1-293  	tze	.continue_signal	if not, back to signal_
                             47  1-294  	eppap	ap|2,*		Get mcptr
                             48  1-295  	eppap	ap|0,*		..
                             49  1-296  	spriap	bp|.mcptr		.. save in gate frame
                             50  1-297  	spribp	.label_variable+2
                             51  1-298  	eppbp	.handler_restart_entry
                             52  1-299  	spribp	.label_variable
                             53  1-300  	eppbp	.label_variable
                             54  1-301  	spribp	.unwinder_arglist+2
                             55  1-302  	fld	=1b24,dl
                             56  1-303  	staq	.unwinder_arglist
                             57  1-304  	call	unwinder_$unwinder_(.unwinder_arglist)
                             58  1-305  
                             59  1-306  .continue_signal:
                             60  1-307  	lda	=o400000,du	"1"b
                             61  1-308  	sta	ap|10,*		set continue bit
                             62  1-309  	return
                             63  1-310  
                             64  1-311  .handler_restart_point:
                             65  1-312  	epaq	sp|0		check that call came from ring 0
                             66  1-313  	cana	-1,dl
                             67  1-314  	tze	*+2
                             68  1-315  	zero	1
                             69  1-316  	epplp	.my_lp,*
                             70  1-317  	lca	stack_frame.condition_bit+1,dl  Vanish on-unit
                             71  1-318  	ansa	sp|stack_frame.flag_word
                             72  1-319  	eppbp	.mcptr
                             73  1-320  	spribp	.vfl_arglist+2
                             74  1-321  	fld	=1b24,dl
                             75  1-322  	staq	.vfl_arglist
                             76  1-323  	short_call  verify_lock$verify_lock_bad_dir(.vfl_arglist)
                             77  1-324  	ldx0	.entryp
                             78  1-325  	eppap	sp|stack_frame.arg_ptr,*
                             79  1-326  	tra	0,0		retry the call
                             80  1-327  
                             81  1-328  	maclist	restore
                             82  1-329  	eject
                             83  1-330  	maclist	restore
                             84  1-331  &end
                                 1-332  
                                 1-333  
                                 1-334  " GATE_INFO - general info for non-hardcore gates
                                 1-335  
                                 1-336  macro	gate_info
                              1  1-337  	maclist	on,save
                              2  1-338  	use	transfer_vector
                              3  1-339  	tra	.actor
                              4  1-340  
                              5  1-341  	use	tv_end
                              6  1-342  	entrybound
                              7  1-343  
                              8  1-344  	use	main
                              9  1-345  	join	/text/transfer_vector,tv_end,main
                             10  1-346  
                             11  1-347  	maclist	restore
                             12  1-348  	eject
                             13  1-349  
                             14  1-350  .actor:	getlp
                             15  1-351  	maclist	restore
                             16  1-352  	gate_actor
                             17  1-353  
                             18  1-354  	maclist	restore
                             19  1-355  	eject
                             20  1-356  
                             21  1-357  .setup:	push
                             22  1-358  	getlp
                             23  1-359  	maclist	restore
                             24  1-360  	gcheck
                             25  1-361  	tra	0,2
                             26  1-362  
                             27  1-363  	maclist	restore
                             28  1-364  	eject
                             29  1-365  
                             30  1-366  	maclist	restore
                             31  1-367  &end
                                 1-368  
                                 1-369  
                                 1-370  " Macro to generate gate actor.
                                 1-371  
                                 1-372  macro	gate_actor
                              1  1-373  	maclist	on,save
                              2  1-374  	eppbp	ap|2,*
                              3  1-375  	lda	bp|-1		get length of string
                              4  1-376  	tze	.return_name	zero length => get name
                              5  1-377  
                              6  1-378  	adla	1,dl		include length of acc
                              7  1-379  	stz	ap|4,*
                              8  1-380  	tsx0	.search_defs
                              9  1-381  
                             10  1-382  	cmpc	(pr,rl),(pr,rl)	compare name
                             11  1-383  	desc9a	bp|-1(3),al
                             12  1-384  	desc9a	bb|0,al
                             13  1-385  	tnz	.next_def
                             14  1-386  
                             15  1-387  	lda	ab|1,2		return location
                             16  1-388  	arl	18
                             17  1-389  	sta	ap|4,*
                             18  1-390  
                             19  1-391  	short_return
                             20  1-392  
                             21  1-393  .return_name:
                             22  1-394  	lxl3	ap|4,*		get location
                             23  1-395  	tsx0	.search_defs
                             24  1-396  
                             25  1-397  	cmpx3	ab|1,2		compare location
                             26  1-398  	tnz	.next_def
                             27  1-399  
                             28  1-400  	lda	bb|0		get length of name
                             29  1-401  	arl	27
                             30  1-402  	sta	bp|-1		set length of varying string
                             31  1-403  	mlr	(pr,rl),(pr,rl)	return string
                             32  1-404  	desc9a	bb|0(1),al
                             33  1-405  	desc9a	bp|0,al
                             34  1-406  
                             35  1-407  	short_return
                             36  1-408  
                             37  1-409  .search_defs:
                             38  1-410  	eax2	0
                             39  1-411  	eppab	lp|0,*		ab -> defs
                             40  1-412  .defs_loop:
                             41  1-413  	lxl1	ab|1,2		get class and flags
                             42  1-414  	cmpx1	=o400000,du	must be class 0
                             43  1-415  	tnz	.next_def
                             44  1-416  
                             45  1-417  	ldx7	ab|2,2
                             46  1-418  	eppbb	ab|0,7		bb -> name
                             47  1-419  	tra	0,0		test definition
                             48  1-420  .next_def:
                             49  1-421  	ldx2	ab|0,2		chain to next def
                             50  1-422  	tnz	.defs_loop
                             51  1-423  
                             52  1-424  	short_return
                             53  1-425  
                             54  1-426  &end
                                 1-427  
                                 1-428  
                                 1-429  " Miscellaneous macros.
                                 1-430  
                                 1-431  macro	gcheck
                              1  1-432  	maclist	on,save
                              2  1-433  	ldx1	-2,2		get number of args expected
                              3  1-434  	tze	.no_gate_error	if zero, none or doesn't matter
                              4  1-435  	cmpx1	ap|0		compare against number given
                              5  1-436  	tze	.no_gate_error	args match, call procedure
                              6  1-437  
                              7  1-438  	call	signal_$signal_(signal_arglist)
                              8  1-439  	oct	0
                              9  1-440  
                             10  1-441  	even
                             11  1-442  signal_arglist:
                             12  1-443  	zero	2,4
                             13  1-444  	zero	2,0
                             14  1-445  	arg	.gate_errorname
                             15  1-446  	arg
                             16  1-447  	arg	.gate_errordesc
                             17  1-448  	arg
                             18  1-449  
                             19  1-450  	string	gate_error
                             20  1-451  
                             21  1-452  
                             22  1-453  .no_gate_error:
                             23  1-454  &end
                                 1-455  
                                 1-456  macro	string
                              1  1-457  .&1name:
                              2  1-458  	aci	"&1"
                              3  1-459  .&1desc:
                              4  1-460  	vfd	o9/525,o27/&l1
                              5  1-461  
                              6  1-462  &end
                                 1-463  
                                 1-464  macro	eject
                              1  1-465  	maclist	on,save
                              2  1-466  
                              3  1-467  &end
                                 1-468  
                                 1-469  " END INCLUDE FILE ...... gate_macros.incl.alm
                                 1-470  
                                 1-471  "  To arrange the return it wants to return, it will have to reach back  2 frames.
                                    67  
                                    68  	gate_info
                                        	use	transfer_vector
    000000  0a   000030 7100 00         	tra	.actor
                                        
                                        	use	tv_end
                                        	entrybound
                                        
                                        	use	main
                                        	join	/text/transfer_vector,tv_end,main
                                        
                                        
                                        
    000030  aa  7 00046 2721 20         .actor:	getlp
    000031  aa  0 00002 3521 20         	eppbp	ap|2,*
    000032  aa  2 77777 2351 00         	lda	bp|-1		get length of string
    000033  0a   000047 6000 00         	tze	.return_name	zero length => get name
                                        
    000034  aa   000001 0350 07         	adla	1,dl		include length of acc
    000035  aa  0 00004 4501 20         	stz	ap|4,*
    000036  0a   000062 7000 00         	tsx0	.search_defs
                                        
    000037  aa  0 00140 1065 40         	cmpc	(pr,rl),(pr,rl)	compare name
    000040  aa   277777 600005          	desc9a	bp|-1(3),al
    000041  aa   300000 000005          	desc9a	bb|0,al
    000042  0a   000072 6010 00         	tnz	.next_def
                                        
    000043  aa  1 00001 2351 12         	lda	ab|1,2		return location
    000044  aa   000022 7710 00         	arl	18
    000045  aa  0 00004 7551 20         	sta	ap|4,*
                                        
    000046  aa  7 00044 7101 20         	short_return
                                        
    000047                              .return_name:
    000047  aa  0 00004 7231 20         	lxl3	ap|4,*		get location
    000050  0a   000062 7000 00         	tsx0	.search_defs
                                        
    000051  aa  1 00001 1031 12         	cmpx3	ab|1,2		compare location
    000052  0a   000072 6010 00         	tnz	.next_def
                                        
    000053  aa  3 00000 2351 00         	lda	bb|0		get length of name
    000054  aa   000033 7710 00         	arl	27
    000055  aa  2 77777 7551 00         	sta	bp|-1		set length of varying string
    000056  aa  0 00140 1005 40         	mlr	(pr,rl),(pr,rl)	return string
    000057  aa   300000 200005          	desc9a	bb|0(1),al
    000060  aa   200000 000005          	desc9a	bp|0,al
                                        
    000061  aa  7 00044 7101 20         	short_return
                                        
    000062                              .search_defs:
    000062  aa   000000 6220 00         	eax2	0
    000063  aa  4 00000 3515 20         	eppab	lp|0,*		ab -> defs
    000064                              .defs_loop:
    000064  aa  1 00001 7211 12         	lxl1	ab|1,2		get class and flags
    000065  aa   400000 1010 03         	cmpx1	=o400000,du	must be class 0
    000066  0a   000072 6010 00         	tnz	.next_def
                                        
    000067  aa  1 00002 2271 12         	ldx7	ab|2,2
    000070  aa  1 00000 3535 17         	eppbb	ab|0,7		bb -> name
    000071  aa   000000 7100 10         	tra	0,0		test definition
    000072                              .next_def:
    000072  aa  1 00000 2221 12         	ldx2	ab|0,2		chain to next def
    000073  0a   000064 6010 00         	tnz	.defs_loop
                                        
    000074  aa  7 00044 7101 20         	short_return
                                        
                                        
                                        
                                        
    000075  aa   000060 6270 00         .setup:	push
    000076  aa  7 00040 2721 20
    000077  aa  7 00046 2721 20         	getlp
    000100  aa   777776 2210 12         	ldx1	-2,2		get number of args expected
    000101  0a   000126 6000 00         	tze	.no_gate_error	if zero, none or doesn't matter
    000102  aa  0 00000 1011 00         	cmpx1	ap|0		compare against number given
    000103  0a   000126 6000 00         	tze	.no_gate_error	args match, call procedure
                                        
    000104  aa  6 00000 2541 00         	call	signal_$signal_(signal_arglist)
    000105  0a   000114 3500 00
    000106  4a  4 00010 3521 20
    000107  aa  6 00040 7531 00
    000110  aa  7 00036 6701 20
    000111  aa  6 00000 1731 00
    000112  aa  6 00040 0731 00
    000113  aa   000000 000000          	oct	0
                                        
                                        	even
    000114                              signal_arglist:
    000114  aa   000002 000004          	zero	2,4
    000115  aa   000002 000000          	zero	2,0
    000116  0a   000122 0000 00         	arg	.gate_errorname
    000117  aa   000000 0000 00         	arg
    000120  0a   000125 0000 00         	arg	.gate_errordesc
    000121  aa   000000 0000 00         	arg
                                        
                                        	string	gate_error
    000122                              .gate_errorname:
    000122  aa  147 141 164 145         	aci	"gate_error"
    000123  aa  137 145 162 162
    000124  aa  157 162 000 000
    000125                              .gate_errordesc:
    000125  aa   525000 000010          	vfd	o9/525,o27/10
                                        
                                        
                                        
    000126                              .no_gate_error:
    000126  aa   000000 7100 12         	tra	0,2
                                        
                                        
                                        
                                    69  
                                    70  " Before Journal Manager entries:
                                    71  
                                    72  	gate	bjm_adjust_process_id,bjm_firstref_tv_,adjust_process_id,2
                        000001          	segdef	bjm_adjust_process_id
    000001                              bjm_adjust_process_id:
    000001  0a   000130 7100 00         	tra	bjm_adjust_process_id.e
    000127  aa   000004 000000          	zero	2*2,0
    000130                              bjm_adjust_process_id.e:
    000130  0a   000075 7020 00         	tsx2	.setup
    000131  aa   000000 6340 07         	ldi	=0,dl
    000132  4a  4 00012 3521 20         	short_call bjm_firstref_tv_$adjust_process_id(ap|0)
    000133  aa  7 00036 6701 20
    000134  aa  6 00030 3701 20
    000135  aa  7 00042 7101 20         	return
                                        
                                    73  
                                    74  	gate	bjm_flush_all,bjm_firstref_tv_,flush_all,0
                        000002          	segdef	bjm_flush_all
    000002                              bjm_flush_all:
    000002  0a   000137 7100 00         	tra	bjm_flush_all.e
    000136  aa   000000 000000          	zero	0*2,0
    000137                              bjm_flush_all.e:
    000137  0a   000075 7020 00         	tsx2	.setup
    000140  aa   000000 6340 07         	ldi	=0,dl
    000141  4a  4 00014 3521 20         	short_call bjm_firstref_tv_$flush_all(ap|0)
    000142  aa  7 00036 6701 20
    000143  aa  6 00030 3701 20
    000144  aa  7 00042 7101 20         	return
                                        
                                    75  
                                    76  " General DM entries:
                                    77  
                                    78  	gate	dm_get_daemon_info,dm_firstref_tv_,get_daemon_info,1
                        000003          	segdef	dm_get_daemon_info
    000003                              dm_get_daemon_info:
    000003  0a   000146 7100 00         	tra	dm_get_daemon_info.e
    000145  aa   000002 000000          	zero	1*2,0
    000146                              dm_get_daemon_info.e:
    000146  0a   000075 7020 00         	tsx2	.setup
    000147  aa   000000 6340 07         	ldi	=0,dl
    000150  4a  4 00016 3521 20         	short_call dm_firstref_tv_$get_daemon_info(ap|0)
    000151  aa  7 00036 6701 20
    000152  aa  6 00030 3701 20
    000153  aa  7 00042 7101 20         	return
                                        
                                    79  
                                    80  	gate	dm_get_daemon_logout_time,dm_firstref_tv_,get_daemon_logout_time,1
                        000004          	segdef	dm_get_daemon_logout_time
    000004                              dm_get_daemon_logout_time:
    000004  0a   000155 7100 00         	tra	dm_get_daemon_logout_time.e
    000154  aa   000002 000000          	zero	1*2,0
    000155                              dm_get_daemon_logout_time.e:
    000155  0a   000075 7020 00         	tsx2	.setup
    000156  aa   000000 6340 07         	ldi	=0,dl
    000157  4a  4 00020 3521 20         	short_call dm_firstref_tv_$get_daemon_logout_time(ap|0)
    000160  aa  7 00036 6701 20
    000161  aa  6 00030 3701 20
    000162  aa  7 00042 7101 20         	return
                                        
                                    81  
                                    82  	gate	dm_get_user_bump_time,dm_firstref_tv_,get_user_bump_time,1
                        000005          	segdef	dm_get_user_bump_time
    000005                              dm_get_user_bump_time:
    000005  0a   000164 7100 00         	tra	dm_get_user_bump_time.e
    000163  aa   000002 000000          	zero	1*2,0
    000164                              dm_get_user_bump_time.e:
    000164  0a   000075 7020 00         	tsx2	.setup
    000165  aa   000000 6340 07         	ldi	=0,dl
    000166  4a  4 00022 3521 20         	short_call dm_firstref_tv_$get_user_bump_time(ap|0)
    000167  aa  7 00036 6701 20
    000170  aa  6 00030 3701 20
    000171  aa  7 00042 7101 20         	return
                                        
                                    83  
                                    84  	gate	dm_initialize_system,dm_no_firstref_tv_,initialize_system,1
                        000006          	segdef	dm_initialize_system
    000006                              dm_initialize_system:
    000006  0a   000173 7100 00         	tra	dm_initialize_system.e
    000172  aa   000002 000000          	zero	1*2,0
    000173                              dm_initialize_system.e:
    000173  0a   000075 7020 00         	tsx2	.setup
    000174  aa   000000 6340 07         	ldi	=0,dl
    000175  4a  4 00024 3521 20         	short_call dm_no_firstref_tv_$initialize_system(ap|0)
    000176  aa  7 00036 6701 20
    000177  aa  6 00030 3701 20
    000200  aa  7 00042 7101 20         	return
                                        
                                    85  
                                    86  	gate	dm_log_message,dm_no_firstref_tv_,log_message,1
                        000007          	segdef	dm_log_message
    000007                              dm_log_message:
    000007  0a   000202 7100 00         	tra	dm_log_message.e
    000201  aa   000002 000000          	zero	1*2,0
    000202                              dm_log_message.e:
    000202  0a   000075 7020 00         	tsx2	.setup
    000203  aa   000000 6340 07         	ldi	=0,dl
    000204  4a  4 00026 3521 20         	short_call dm_no_firstref_tv_$log_message(ap|0)
    000205  aa  7 00036 6701 20
    000206  aa  6 00030 3701 20
    000207  aa  7 00042 7101 20         	return
                                        
                                    87  
                                    88  	gate	dm_set_shutdown_info,dm_firstref_tv_,set_shutdown_info,1
                        000010          	segdef	dm_set_shutdown_info
    000010                              dm_set_shutdown_info:
    000010  0a   000211 7100 00         	tra	dm_set_shutdown_info.e
    000210  aa   000002 000000          	zero	1*2,0
    000211                              dm_set_shutdown_info.e:
    000211  0a   000075 7020 00         	tsx2	.setup
    000212  aa   000000 6340 07         	ldi	=0,dl
    000213  4a  4 00030 3521 20         	short_call dm_firstref_tv_$set_shutdown_info(ap|0)
    000214  aa  7 00036 6701 20
    000215  aa  6 00030 3701 20
    000216  aa  7 00042 7101 20         	return
                                        
                                    89  
                                    90  	gate	dm_set_system_state,dm_no_firstref_tv_,set_system_state,1
                        000011          	segdef	dm_set_system_state
    000011                              dm_set_system_state:
    000011  0a   000220 7100 00         	tra	dm_set_system_state.e
    000217  aa   000002 000000          	zero	1*2,0
    000220                              dm_set_system_state.e:
    000220  0a   000075 7020 00         	tsx2	.setup
    000221  aa   000000 6340 07         	ldi	=0,dl
    000222  4a  4 00032 3521 20         	short_call dm_no_firstref_tv_$set_system_state(ap|0)
    000223  aa  7 00036 6701 20
    000224  aa  6 00030 3701 20
    000225  aa  7 00042 7101 20         	return
                                        
                                    91  
                                    92  " File Manager entries:
                                    93  
                                    94  	gate	fm_adopt,fm_firstref_tv_,adopt,3
                        000012          	segdef	fm_adopt
    000012                              fm_adopt:
    000012  0a   000227 7100 00         	tra	fm_adopt.e
    000226  aa   000006 000000          	zero	3*2,0
    000227                              fm_adopt.e:
    000227  0a   000075 7020 00         	tsx2	.setup
    000230  aa   000000 6340 07         	ldi	=0,dl
    000231  4a  4 00034 3521 20         	short_call fm_firstref_tv_$adopt(ap|0)
    000232  aa  7 00036 6701 20
    000233  aa  6 00030 3701 20
    000234  aa  7 00042 7101 20         	return
                                        
                                    95  
                                    96  	gate	fm_end_of_crash_recovery,fm_firstref_tv_,end_of_crash_recovery,1
                        000013          	segdef	fm_end_of_crash_recovery
    000013                              fm_end_of_crash_recovery:
    000013  0a   000236 7100 00         	tra	fm_end_of_crash_recovery.e
    000235  aa   000002 000000          	zero	1*2,0
    000236                              fm_end_of_crash_recovery.e:
    000236  0a   000075 7020 00         	tsx2	.setup
    000237  aa   000000 6340 07         	ldi	=0,dl
    000240  4a  4 00036 3521 20         	short_call fm_firstref_tv_$end_of_crash_recovery(ap|0)
    000241  aa  7 00036 6701 20
    000242  aa  6 00030 3701 20
    000243  aa  7 00042 7101 20         	return
                                        
                                    97  
                                    98  	gate	fm_find_old_uid_pn_table,fm_firstref_tv_,find_old_uid_pn_table,2
                        000014          	segdef	fm_find_old_uid_pn_table
    000014                              fm_find_old_uid_pn_table:
    000014  0a   000245 7100 00         	tra	fm_find_old_uid_pn_table.e
    000244  aa   000004 000000          	zero	2*2,0
    000245                              fm_find_old_uid_pn_table.e:
    000245  0a   000075 7020 00         	tsx2	.setup
    000246  aa   000000 6340 07         	ldi	=0,dl
    000247  4a  4 00040 3521 20         	short_call fm_firstref_tv_$find_old_uid_pn_table(ap|0)
    000250  aa  7 00036 6701 20
    000251  aa  6 00030 3701 20
    000252  aa  7 00042 7101 20         	return
                                        
                                    99  
                                   100  	gate	fm_open_by_uid_after_crash,fm_firstref_tv_,open_by_uid_after_crash,3
                        000015          	segdef	fm_open_by_uid_after_crash
    000015                              fm_open_by_uid_after_crash:
    000015  0a   000254 7100 00         	tra	fm_open_by_uid_after_crash.e
    000253  aa   000006 000000          	zero	3*2,0
    000254                              fm_open_by_uid_after_crash.e:
    000254  0a   000075 7020 00         	tsx2	.setup
    000255  aa   000000 6340 07         	ldi	=0,dl
    000256  4a  4 00042 3521 20         	short_call fm_firstref_tv_$open_by_uid_after_crash(ap|0)
    000257  aa  7 00036 6701 20
    000260  aa  6 00030 3701 20
    000261  aa  7 00042 7101 20         	return
                                        
                                   101  
                                   102  " Transaction Manager entries:
                                   103  
                                   104  	gate	tm_adjust_process_id,tm_firstref_tv_,adjust_process_id,2
                        000016          	segdef	tm_adjust_process_id
    000016                              tm_adjust_process_id:
    000016  0a   000263 7100 00         	tra	tm_adjust_process_id.e
    000262  aa   000004 000000          	zero	2*2,0
    000263                              tm_adjust_process_id.e:
    000263  0a   000075 7020 00         	tsx2	.setup
    000264  aa   000000 6340 07         	ldi	=0,dl
    000265  4a  4 00044 3521 20         	short_call tm_firstref_tv_$adjust_process_id(ap|0)
    000266  aa  7 00036 6701 20
    000267  aa  6 00030 3701 20
    000270  aa  7 00042 7101 20         	return
                                        
                                   105  
                                   106  	gate	tm_adjust_tdt_entry,tm_firstref_tv_,adjust_tdt_entry,3
                        000017          	segdef	tm_adjust_tdt_entry
    000017                              tm_adjust_tdt_entry:
    000017  0a   000272 7100 00         	tra	tm_adjust_tdt_entry.e
    000271  aa   000006 000000          	zero	3*2,0
    000272                              tm_adjust_tdt_entry.e:
    000272  0a   000075 7020 00         	tsx2	.setup
    000273  aa   000000 6340 07         	ldi	=0,dl
    000274  4a  4 00046 3521 20         	short_call tm_firstref_tv_$adjust_tdt_entry(ap|0)
    000275  aa  7 00036 6701 20
    000276  aa  6 00030 3701 20
    000277  aa  7 00042 7101 20         	return
                                        
                                   107  
                                   108  	gate	tm_begins_off,tm_firstref_tv_,begins_off,0
                        000020          	segdef	tm_begins_off
    000020                              tm_begins_off:
    000020  0a   000301 7100 00         	tra	tm_begins_off.e
    000300  aa   000000 000000          	zero	0*2,0
    000301                              tm_begins_off.e:
    000301  0a   000075 7020 00         	tsx2	.setup
    000302  aa   000000 6340 07         	ldi	=0,dl
    000303  4a  4 00050 3521 20         	short_call tm_firstref_tv_$begins_off(ap|0)
    000304  aa  7 00036 6701 20
    000305  aa  6 00030 3701 20
    000306  aa  7 00042 7101 20         	return
                                        
                                   109  
                                   110  	gate	tm_begins_on,tm_firstref_tv_,begins_on,0
                        000021          	segdef	tm_begins_on
    000021                              tm_begins_on:
    000021  0a   000310 7100 00         	tra	tm_begins_on.e
    000307  aa   000000 000000          	zero	0*2,0
    000310                              tm_begins_on.e:
    000310  0a   000075 7020 00         	tsx2	.setup
    000311  aa   000000 6340 07         	ldi	=0,dl
    000312  4a  4 00052 3521 20         	short_call tm_firstref_tv_$begins_on(ap|0)
    000313  aa  7 00036 6701 20
    000314  aa  6 00030 3701 20
    000315  aa  7 00042 7101 20         	return
                                        
                                   111  
                                   112  	gate      tm_bump_all,tm_firstref_tv_,bump_all,0
                        000022          	segdef	tm_bump_all
    000022                              tm_bump_all:
    000022  0a   000317 7100 00         	tra	tm_bump_all.e
    000316  aa   000000 000000          	zero	0*2,0
    000317                              tm_bump_all.e:
    000317  0a   000075 7020 00         	tsx2	.setup
    000320  aa   000000 6340 07         	ldi	=0,dl
    000321  4a  4 00054 3521 20         	short_call tm_firstref_tv_$bump_all(ap|0)
    000322  aa  7 00036 6701 20
    000323  aa  6 00030 3701 20
    000324  aa  7 00042 7101 20         	return
                                        
                                   113  
                                   114  	gate	tm_dm_system_in_use,tm_firstref_tv_,dm_system_in_use,1
                        000023          	segdef	tm_dm_system_in_use
    000023                              tm_dm_system_in_use:
    000023  0a   000326 7100 00         	tra	tm_dm_system_in_use.e
    000325  aa   000002 000000          	zero	1*2,0
    000326                              tm_dm_system_in_use.e:
    000326  0a   000075 7020 00         	tsx2	.setup
    000327  aa   000000 6340 07         	ldi	=0,dl
    000330  4a  4 00056 3521 20         	short_call tm_firstref_tv_$dm_system_in_use(ap|0)
    000331  aa  7 00036 6701 20
    000332  aa  6 00030 3701 20
    000333  aa  7 00042 7101 20         	return
                                        
                                   115  
                                   116  	gate	tm_ips_wakeup,tm_firstref_tv_,ips_wakeup,2
                        000024          	segdef	tm_ips_wakeup
    000024                              tm_ips_wakeup:
    000024  0a   000335 7100 00         	tra	tm_ips_wakeup.e
    000334  aa   000004 000000          	zero	2*2,0
    000335                              tm_ips_wakeup.e:
    000335  0a   000075 7020 00         	tsx2	.setup
    000336  aa   000000 6340 07         	ldi	=0,dl
    000337  4a  4 00060 3521 20         	short_call tm_firstref_tv_$ips_wakeup(ap|0)
    000340  aa  7 00036 6701 20
    000341  aa  6 00030 3701 20
    000342  aa  7 00042 7101 20         	return
                                        
                                   117  
                                   118  	gate	tm_ips_wakeup_all,tm_firstref_tv_,ips_wakeup_all,2
                        000025          	segdef	tm_ips_wakeup_all
    000025                              tm_ips_wakeup_all:
    000025  0a   000344 7100 00         	tra	tm_ips_wakeup_all.e
    000343  aa   000004 000000          	zero	2*2,0
    000344                              tm_ips_wakeup_all.e:
    000344  0a   000075 7020 00         	tsx2	.setup
    000345  aa   000000 6340 07         	ldi	=0,dl
    000346  4a  4 00062 3521 20         	short_call tm_firstref_tv_$ips_wakeup_all(ap|0)
    000347  aa  7 00036 6701 20
    000350  aa  6 00030 3701 20
    000351  aa  7 00042 7101 20         	return
                                        
                                   119  
                                   120  	gate	tm_kill_txn,tm_firstref_tv_,kill_txn,2
                        000026          	segdef	tm_kill_txn
    000026                              tm_kill_txn:
    000026  0a   000353 7100 00         	tra	tm_kill_txn.e
    000352  aa   000004 000000          	zero	2*2,0
    000353                              tm_kill_txn.e:
    000353  0a   000075 7020 00         	tsx2	.setup
    000354  aa   000000 6340 07         	ldi	=0,dl
    000355  4a  4 00064 3521 20         	short_call tm_firstref_tv_$kill_txn(ap|0)
    000356  aa  7 00036 6701 20
    000357  aa  6 00030 3701 20
    000360  aa  7 00042 7101 20         	return
                                        
                                   121  
                                   122  	gate	tm_recover_after_crash,tm_firstref_tv_,recover_after_crash,3
                        000027          	segdef	tm_recover_after_crash
    000027                              tm_recover_after_crash:
    000027  0a   000362 7100 00         	tra	tm_recover_after_crash.e
    000361  aa   000006 000000          	zero	3*2,0
    000362                              tm_recover_after_crash.e:
    000362  0a   000075 7020 00         	tsx2	.setup
    000363  aa   000000 6340 07         	ldi	=0,dl
    000364  4a  4 00066 3521 20         	short_call tm_firstref_tv_$recover_after_crash(ap|0)
    000365  aa  7 00036 6701 20
    000366  aa  6 00030 3701 20
    000367  aa  7 00042 7101 20         	return
                                        
                                   123  
                                   124  
                                   125  	end

NO LITERALS
     
NAME DEFINITIONS FOR ENTRY POINTS AND SEGDEFS

    000370  5a   000003 000000 
    000371  5a   000314 600000 
    000372  aa   000000 000000 
    000373  55   000012 000002 
    000374  5a   000002 400003 
    000375  55   000006 000012 
    000376  aa  017 144 155 137
    000377  aa  144 141 145 155
    000400  aa  157 156 137 147
    000401  aa  141 164 145 137
    000402  55   000023 000003 
    000403  0a   000027 400000 
    000404  55   000015 000003 
    000405  aa  026 164 155 137         tm_recover_after_crash
    000406  aa  162 145 143 157
    000407  aa  166 145 162 137
    000410  aa  141 146 164 145
    000411  aa  162 137 143 162
    000412  aa  141 163 150 000
    000413  55   000031 000012 
    000414  0a   000026 400000 
    000415  55   000026 000003 
    000416  aa  013 164 155 137         tm_kill_txn
    000417  aa  153 151 154 154
    000420  aa  137 164 170 156
    000421  55   000041 000023 
    000422  0a   000025 400000 
    000423  55   000034 000003 
    000424  aa  021 164 155 137         tm_ips_wakeup_all
    000425  aa  151 160 163 137
    000426  aa  167 141 153 145
    000427  aa  165 160 137 141
    000430  aa  154 154 000 000
    000431  55   000050 000031 
    000432  0a   000024 400000 
    000433  55   000044 000003 
    000434  aa  015 164 155 137         tm_ips_wakeup
    000435  aa  151 160 163 137
    000436  aa  167 141 153 145
    000437  aa  165 160 000 000
    000440  55   000060 000041 
    000441  0a   000023 400000 
    000442  55   000053 000003 
    000443  aa  023 164 155 137         tm_dm_system_in_use
    000444  aa  144 155 137 163
    000445  aa  171 163 164 145
    000446  aa  155 137 151 156
    000447  aa  137 165 163 145
    000450  55   000066 000050 
    000451  0a   000022 400000 
    000452  55   000063 000003 
    000453  aa  013 164 155 137         tm_bump_all
    000454  aa  142 165 155 160
    000455  aa  137 141 154 154
    000456  55   000075 000060 
    000457  0a   000021 400000 
    000460  55   000071 000003 
    000461  aa  014 164 155 137         tm_begins_on
    000462  aa  142 145 147 151
    000463  aa  156 163 137 157
    000464  aa  156 000 000 000
    000465  55   000104 000066 
    000466  0a   000020 400000 
    000467  55   000100 000003 
    000470  aa  015 164 155 137         tm_begins_off
    000471  aa  142 145 147 151
    000472  aa  156 163 137 157
    000473  aa  146 146 000 000
    000474  55   000114 000075 
    000475  0a   000017 400000 
    000476  55   000107 000003 
    000477  aa  023 164 155 137         tm_adjust_tdt_entry
    000500  aa  141 144 152 165
    000501  aa  163 164 137 164
    000502  aa  144 164 137 145
    000503  aa  156 164 162 171
    000504  55   000125 000104 
    000505  0a   000016 400000 
    000506  55   000117 000003 
    000507  aa  024 164 155 137         tm_adjust_process_id
    000510  aa  141 144 152 165
    000511  aa  163 164 137 160
    000512  aa  162 157 143 145
    000513  aa  163 163 137 151
    000514  aa  144 000 000 000
    000515  55   000137 000114 
    000516  0a   000015 400000 
    000517  55   000130 000003 
    000520  aa  032 146 155 137         fm_open_by_uid_after_crash
    000521  aa  157 160 145 156
    000522  aa  137 142 171 137
    000523  aa  165 151 144 137
    000524  aa  141 146 164 145
    000525  aa  162 137 143 162
    000526  aa  141 163 150 000
    000527  55   000151 000125 
    000530  0a   000014 400000 
    000531  55   000142 000003 
    000532  aa  030 146 155 137         fm_find_old_uid_pn_table
    000533  aa  146 151 156 144
    000534  aa  137 157 154 144
    000535  aa  137 165 151 144
    000536  aa  137 160 156 137
    000537  aa  164 141 142 154
    000540  aa  145 000 000 000
    000541  55   000163 000137 
    000542  0a   000013 400000 
    000543  55   000154 000003 
    000544  aa  030 146 155 137         fm_end_of_crash_recovery
    000545  aa  145 156 144 137
    000546  aa  157 146 137 143
    000547  aa  162 141 163 150
    000550  aa  137 162 145 143
    000551  aa  157 166 145 162
    000552  aa  171 000 000 000
    000553  55   000171 000151 
    000554  0a   000012 400000 
    000555  55   000166 000003 
    000556  aa  010 146 155 137         fm_adopt
    000557  aa  141 144 157 160
    000560  aa  164 000 000 000
    000561  55   000201 000163 
    000562  0a   000011 400000 
    000563  55   000174 000003 
    000564  aa  023 144 155 137         dm_set_system_state
    000565  aa  163 145 164 137
    000566  aa  163 171 163 164
    000567  aa  145 155 137 163
    000570  aa  164 141 164 145
    000571  55   000212 000171 
    000572  0a   000010 400000 
    000573  55   000204 000003 
    000574  aa  024 144 155 137         dm_set_shutdown_info
    000575  aa  163 145 164 137
    000576  aa  163 150 165 164
    000577  aa  144 157 167 156
    000600  aa  137 151 156 146
    000601  aa  157 000 000 000
    000602  55   000221 000201 
    000603  0a   000007 400000 
    000604  55   000215 000003 
    000605  aa  016 144 155 137         dm_log_message
    000606  aa  154 157 147 137
    000607  aa  155 145 163 163
    000610  aa  141 147 145 000
    000611  55   000232 000212 
    000612  0a   000006 400000 
    000613  55   000224 000003 
    000614  aa  024 144 155 137         dm_initialize_system
    000615  aa  151 156 151 164
    000616  aa  151 141 154 151
    000617  aa  172 145 137 163
    000620  aa  171 163 164 145
    000621  aa  155 000 000 000
    000622  55   000243 000221 
    000623  0a   000005 400000 
    000624  55   000235 000003 
    000625  aa  025 144 155 137         dm_get_user_bump_time
    000626  aa  147 145 164 137
    000627  aa  165 163 145 162
    000630  aa  137 142 165 155
    000631  aa  160 137 164 151
    000632  aa  155 145 000 000
    000633  55   000255 000232 
    000634  0a   000004 400000 
    000635  55   000246 000003 
    000636  aa  031 144 155 137         dm_get_daemon_logout_time
    000637  aa  147 145 164 137
    000640  aa  144 141 145 155
    000641  aa  157 156 137 154
    000642  aa  157 147 157 165
    000643  aa  164 137 164 151
    000644  aa  155 145 000 000
    000645  55   000265 000243 
    000646  0a   000003 400000 
    000647  55   000260 000003 
    000650  aa  022 144 155 137         dm_get_daemon_info
    000651  aa  147 145 164 137
    000652  aa  144 141 145 155
    000653  aa  157 156 137 151
    000654  aa  156 146 157 000
    000655  55   000274 000255 
    000656  0a   000002 400000 
    000657  55   000270 000003 
    000660  aa  015 142 152 155         bjm_flush_all
    000661  aa  137 146 154 165
    000662  aa  163 150 137 141
    000663  aa  154 154 000 000
    000664  55   000305 000265 
    000665  0a   000001 400000 
    000666  55   000277 000003 
    000667  aa  025 142 152 155         bjm_adjust_process_id
    000670  aa  137 141 144 152
    000671  aa  165 163 164 137
    000672  aa  160 162 157 143
    000673  aa  145 163 163 137
    000674  aa  151 144 000 000
    000675  55   000002 000274 
    000676  6a   000000 400002 
    000677  55   000310 000003 
    000700  aa  014 163 171 155         symbol_table
    000701  aa  142 157 154 137
    000702  aa  164 141 142 154
    000703  aa  145 000 000 000

DEFINITIONS HASH TABLE

    000704  aa   000000 000065 
    000705  aa   000000 000000 
    000706  5a   000163 000000 
    000707  aa   000000 000000 
    000710  aa   000000 000000 
    000711  5a   000012 000000 
    000712  aa   000000 000000 
    000713  aa   000000 000000 
    000714  aa   000000 000000 
    000715  5a   000114 000000 
    000716  5a   000243 000000 
    000717  5a   000050 000000 
    000720  5a   000104 000000 
    000721  aa   000000 000000 
    000722  aa   000000 000000 
    000723  5a   000031 000000 
    000724  aa   000000 000000 
    000725  5a   000232 000000 
    000726  aa   000000 000000 
    000727  5a   000125 000000 
    000730  5a   000201 000000 
    000731  5a   000171 000000 
    000732  5a   000221 000000 
    000733  5a   000041 000000 
    000734  5a   000075 000000 
    000735  5a   000066 000000 
    000736  5a   000137 000000 
    000737  5a   000023 000000 
    000740  5a   000060 000000 
    000741  5a   000151 000000 
    000742  5a   000255 000000 
    000743  5a   000212 000000 
    000744  5a   000274 000000 
    000745  5a   000305 000000 
    000746  aa   000000 000000 
    000747  aa   000000 000000 
    000750  5a   000265 000000 
    000751  aa   000000 000000 
    000752  aa   000000 000000 
    000753  aa   000000 000000 
    000754  aa   000000 000000 
    000755  aa   000000 000000 
    000756  aa   000000 000000 
    000757  aa   000000 000000 
    000760  aa   000000 000000 
    000761  aa   000000 000000 
    000762  aa   000000 000000 
    000763  aa   000000 000000 
    000764  aa   000000 000000 
    000765  aa   000000 000000 
    000766  aa   000000 000000 
    000767  aa   000000 000000 
    000770  aa   000000 000000 
    000771  aa   000000 000000 

EXTERNAL NAMES

    000772  aa  023 162 145 143         recover_after_crash
    000773  aa  157 166 145 162
    000774  aa  137 141 146 164
    000775  aa  145 162 137 143
    000776  aa  162 141 163 150
    000777  aa  010 153 151 154         kill_txn
    001000  aa  154 137 164 170
    001001  aa  156 000 000 000
    001002  aa  016 151 160 163         ips_wakeup_all
    001003  aa  137 167 141 153
    001004  aa  145 165 160 137
    001005  aa  141 154 154 000
    001006  aa  012 151 160 163         ips_wakeup
    001007  aa  137 167 141 153
    001010  aa  145 165 160 000
    001011  aa  020 144 155 137         dm_system_in_use
    001012  aa  163 171 163 164
    001013  aa  145 155 137 151
    001014  aa  156 137 165 163
    001015  aa  145 000 000 000
    001016  aa  010 142 165 155         bump_all
    001017  aa  160 137 141 154
    001020  aa  154 000 000 000
    001021  aa  011 142 145 147         begins_on
    001022  aa  151 156 163 137
    001023  aa  157 156 000 000
    001024  aa  012 142 145 147         begins_off
    001025  aa  151 156 163 137
    001026  aa  157 146 146 000
    001027  aa  020 141 144 152         adjust_tdt_entry
    001030  aa  165 163 164 137
    001031  aa  164 144 164 137
    001032  aa  145 156 164 162
    001033  aa  171 000 000 000
    001034  aa  017 164 155 137         tm_firstref_tv_
    001035  aa  146 151 162 163
    001036  aa  164 162 145 146
    001037  aa  137 164 166 137
    001040  aa  027 157 160 145         open_by_uid_after_crash
    001041  aa  156 137 142 171
    001042  aa  137 165 151 144
    001043  aa  137 141 146 164
    001044  aa  145 162 137 143
    001045  aa  162 141 163 150
    001046  aa  025 146 151 156         find_old_uid_pn_table
    001047  aa  144 137 157 154
    001050  aa  144 137 165 151
    001051  aa  144 137 160 156
    001052  aa  137 164 141 142
    001053  aa  154 145 000 000
    001054  aa  025 145 156 144         end_of_crash_recovery
    001055  aa  137 157 146 137
    001056  aa  143 162 141 163
    001057  aa  150 137 162 145
    001060  aa  143 157 166 145
    001061  aa  162 171 000 000
    001062  aa  005 141 144 157         adopt
    001063  aa  160 164 000 000
    001064  aa  017 146 155 137         fm_firstref_tv_
    001065  aa  146 151 162 163
    001066  aa  164 162 145 146
    001067  aa  137 164 166 137
    001070  aa  020 163 145 164         set_system_state
    001071  aa  137 163 171 163
    001072  aa  164 145 155 137
    001073  aa  163 164 141 164
    001074  aa  145 000 000 000
    001075  aa  021 163 145 164         set_shutdown_info
    001076  aa  137 163 150 165
    001077  aa  164 144 157 167
    001100  aa  156 137 151 156
    001101  aa  146 157 000 000
    001102  aa  013 154 157 147         log_message
    001103  aa  137 155 145 163
    001104  aa  163 141 147 145
    001105  aa  021 151 156 151         initialize_system
    001106  aa  164 151 141 154
    001107  aa  151 172 145 137
    001110  aa  163 171 163 164
    001111  aa  145 155 000 000
    001112  aa  022 144 155 137         dm_no_firstref_tv_
    001113  aa  156 157 137 146
    001114  aa  151 162 163 164
    001115  aa  162 145 146 137
    001116  aa  164 166 137 000
    001117  aa  022 147 145 164         get_user_bump_time
    001120  aa  137 165 163 145
    001121  aa  162 137 142 165
    001122  aa  155 160 137 164
    001123  aa  151 155 145 000
    001124  aa  026 147 145 164         get_daemon_logout_time
    001125  aa  137 144 141 145
    001126  aa  155 157 156 137
    001127  aa  154 157 147 157
    001130  aa  165 164 137 164
    001131  aa  151 155 145 000
    001132  aa  017 147 145 164         get_daemon_info
    001133  aa  137 144 141 145
    001134  aa  155 157 156 137
    001135  aa  151 156 146 157
    001136  aa  017 144 155 137         dm_firstref_tv_
    001137  aa  146 151 162 163
    001140  aa  164 162 145 146
    001141  aa  137 164 166 137
    001142  aa  011 146 154 165         flush_all
    001143  aa  163 150 137 141
    001144  aa  154 154 000 000
    001145  aa  021 141 144 152         adjust_process_id
    001146  aa  165 163 164 137
    001147  aa  160 162 157 143
    001150  aa  145 163 163 137
    001151  aa  151 144 000 000
    001152  aa  020 142 152 155         bjm_firstref_tv_
    001153  aa  137 146 151 162
    001154  aa  163 164 162 145
    001155  aa  146 137 164 166
    001156  aa  137 000 000 000
    001157  aa  007 163 151 147         signal_
    001160  aa  156 141 154 137

NO TRAP POINTER WORDS

TYPE PAIR BLOCKS

    001161  aa   000004 000000 
    001162  55   000444 000402 
    001163  aa   000004 000000 
    001164  55   000444 000407 
    001165  aa   000004 000000 
    001166  55   000444 000412 
    001167  aa   000004 000000 
    001170  55   000444 000416 
    001171  aa   000004 000000 
    001172  55   000444 000421 
    001173  aa   000004 000000 
    001174  55   000444 000426 
    001175  aa   000004 000000 
    001176  55   000444 000431 
    001177  aa   000004 000000 
    001200  55   000444 000434 
    001201  aa   000004 000000 
    001202  55   000444 000437 
    001203  aa   000004 000000 
    001204  55   000444 000555 
    001205  aa   000004 000000 
    001206  55   000474 000450 
    001207  aa   000004 000000 
    001210  55   000474 000456 
    001211  aa   000004 000000 
    001212  55   000474 000464 
    001213  aa   000004 000000 
    001214  55   000474 000472 
    001215  aa   000004 000000 
    001216  55   000522 000500 
    001217  aa   000004 000000 
    001220  55   000546 000505 
    001221  aa   000004 000000 
    001222  55   000522 000512 
    001223  aa   000004 000000 
    001224  55   000522 000515 
    001225  aa   000004 000000 
    001226  55   000546 000527 
    001227  aa   000004 000000 
    001230  55   000546 000534 
    001231  aa   000004 000000 
    001232  55   000546 000542 
    001233  aa   000004 000000 
    001234  55   000562 000552 
    001235  aa   000004 000000 
    001236  55   000562 000555 
    001237  aa   000004 000000 
    001240  55   000567 000567 
    001241  aa   000001 000000 
    001242  aa   000000 000000 

INTERNAL EXPRESSION WORDS

    001243  5a   000571 000000 
    001244  5a   000573 000000 
    001245  5a   000575 000000 
    001246  5a   000577 000000 
    001247  5a   000601 000000 
    001250  5a   000603 000000 
    001251  5a   000605 000000 
    001252  5a   000607 000000 
    001253  5a   000611 000000 
    001254  5a   000613 000000 
    001255  5a   000615 000000 
    001256  5a   000617 000000 
    001257  5a   000621 000000 
    001260  5a   000623 000000 
    001261  5a   000625 000000 
    001262  5a   000627 000000 
    001263  5a   000631 000000 
    001264  5a   000633 000000 
    001265  5a   000635 000000 
    001266  5a   000637 000000 
    001267  5a   000641 000000 
    001270  5a   000643 000000 
    001271  5a   000645 000000 
    001272  5a   000647 000000 
    001273  aa   000000 000000 
LINKAGE INFORMATION
      
    000000  aa   000000 000000 
    000001  0a   000370 000000 
    000002  aa   000000 000000 
    000003  aa   000000 000000 
    000004  aa   000000 000000 
    000005  aa   000000 000000 
    000006  22   000010 000070 
    000007  a2   000000 000000 
    000010  9a   777770 0000 46         signal_|signal_
    000011  5a   000702 0000 00
    000012  9a   777766 0000 46         bjm_firstref_tv_|adjust_process_id
    000013  5a   000701 0000 00
    000014  9a   777764 0000 46         bjm_firstref_tv_|flush_all
    000015  5a   000700 0000 00
    000016  9a   777762 0000 46         dm_firstref_tv_|get_daemon_info
    000017  5a   000677 0000 00
    000020  9a   777760 0000 46         dm_firstref_tv_|get_daemon_logout_time
    000021  5a   000676 0000 00
    000022  9a   777756 0000 46         dm_firstref_tv_|get_user_bump_time
    000023  5a   000675 0000 00
    000024  9a   777754 0000 46         dm_no_firstref_tv_|initialize_system
    000025  5a   000674 0000 00
    000026  9a   777752 0000 46         dm_no_firstref_tv_|log_message
    000027  5a   000673 0000 00
    000030  9a   777750 0000 46         dm_firstref_tv_|set_shutdown_info
    000031  5a   000672 0000 00
    000032  9a   777746 0000 46         dm_no_firstref_tv_|set_system_state
    000033  5a   000671 0000 00
    000034  9a   777744 0000 46         fm_firstref_tv_|adopt
    000035  5a   000670 0000 00
    000036  9a   777742 0000 46         fm_firstref_tv_|end_of_crash_recovery
    000037  5a   000667 0000 00
    000040  9a   777740 0000 46         fm_firstref_tv_|find_old_uid_pn_table
    000041  5a   000666 0000 00
    000042  9a   777736 0000 46         fm_firstref_tv_|open_by_uid_after_crash
    000043  5a   000665 0000 00
    000044  9a   777734 0000 46         tm_firstref_tv_|adjust_process_id
    000045  5a   000664 0000 00
    000046  9a   777732 0000 46         tm_firstref_tv_|adjust_tdt_entry
    000047  5a   000663 0000 00
    000050  9a   777730 0000 46         tm_firstref_tv_|begins_off
    000051  5a   000662 0000 00
    000052  9a   777726 0000 46         tm_firstref_tv_|begins_on
    000053  5a   000661 0000 00
    000054  9a   777724 0000 46         tm_firstref_tv_|bump_all
    000055  5a   000660 0000 00
    000056  9a   777722 0000 46         tm_firstref_tv_|dm_system_in_use
    000057  5a   000657 0000 00
    000060  9a   777720 0000 46         tm_firstref_tv_|ips_wakeup
    000061  5a   000656 0000 00
    000062  9a   777716 0000 46         tm_firstref_tv_|ips_wakeup_all
    000063  5a   000655 0000 00
    000064  9a   777714 0000 46         tm_firstref_tv_|kill_txn
    000065  5a   000654 0000 00
    000066  9a   777712 0000 46         tm_firstref_tv_|recover_after_crash
    000067  5a   000653 0000 00
SYMBOL INFORMATION
     
SYMBOL TABLE HEADER
     
    000000  aa   000000 000001 
    000001  aa   163171 155142 
    000002  aa   164162 145145 
    000003  aa   000000 000004 
    000004  aa   000000 112143 
    000005  aa   305203 523135 
    000006  aa   000000 113455 
    000007  aa   363014 271656 
    000010  aa   141154 155040 
    000011  aa   040040 040040 
    000012  aa   000024 000040 
    000013  aa   000034 000040 
    000014  aa   000044 000100 
    000015  aa   000002 000002 
    000016  aa   000064 000000 
    000017  aa   000000 000173 
    000020  aa   000000 000120 
    000021  aa   000000 000151 
    000022  aa   000164 000120 
    000023  aa   000064 000000 
    000024  aa   101114 115040 
    000025  aa   126145 162163 
    000026  aa   151157 156040 
    000027  aa   040066 056066 
    000030  aa   040040 116157 
    000031  aa   166145 155142 
    000032  aa   145162 040061 
    000033  aa   071070 062040 
    000034  aa   107112 157150 
    000035  aa   156163 157156 
    000036  aa   056123 171163 
    000037  aa   115141 151156 
    000040  aa   164056 155040 
    000041  aa   040040 040040 
    000042  aa   040040 040040 
    000043  aa   040040 040040 
    000044  aa   154151 163164 
    000045  aa   040040 040040 
    000046  aa   040040 040040 
    000047  aa   040040 040040 
    000050  aa   040040 040040 
    000051  aa   040040 040040 
    000052  aa   040040 040040 
    000053  aa   040040 040040 
    000054  aa   040040 040040 
    000055  aa   040040 040040 
    000056  aa   040040 040040 
    000057  aa   040040 040040 
    000060  aa   040040 040040 
    000061  aa   040040 040040 
    000062  aa   040040 040040 
    000063  aa   040040 040040 
    000064  aa   000000 000001 
    000065  aa   000000 000002 
    000066  aa   000076 000042 
    000067  aa   134547 135226 
    000070  aa   000000 113455 
    000071  aa   363015 400000 
    000072  aa   000107 000043 
    000073  aa   134547 135074 
    000074  aa   000000 113455 
    000075  aa   362636 400000 
    000076  aa   076163 160145          >spec>on>41-16>dm_daemon_gate_.alm
    000077  aa   143076 157156 
    000100  aa   076064 061055 
    000101  aa   061066 076144 
    000102  aa   155137 144141 
    000103  aa   145155 157156 
    000104  aa   137147 141164 
    000105  aa   145137 056141 
    000106  aa   154155 040040 
    000107  aa   076163 160145          >spec>on>41-16>gate_macros.incl.alm
    000110  aa   143076 157156 
    000111  aa   076064 061055 
    000112  aa   061066 076147 
    000113  aa   141164 145137 
    000114  aa   155141 143162 
    000115  aa   157163 056151 
    000116  aa   156143 154056 
    000117  aa   141154 155040 
               MULTICS ASSEMBLY CROSS REFERENCE LISTING

   Value        Symbol                   Source file   Line number

          30    .actor                   dm_daemon_gate_:     68.
          64    .defs_loop               dm_daemon_gate_:     68.
         125    .gate_errordesc          dm_daemon_gate_:     68.
         122    .gate_errorname          dm_daemon_gate_:     68.
          72    .next_def                dm_daemon_gate_:     68.
         126    .no_gate_error           dm_daemon_gate_:     68.
          47    .return_name             dm_daemon_gate_:     68.
          62    .search_defs             dm_daemon_gate_:     68.
          75    .setup                   dm_daemon_gate_:     68,   72,   74,   78,   80,   82,   84,   86,   88,   90,   94,
                                                              96,   98,  100,  104,  106,  108,  110,  112,  114,  116,  118,
                                                             120,  122.
                adjust_process_id        dm_daemon_gate_:     72,  104.
                adjust_tdt_entry         dm_daemon_gate_:    106.
                adopt                    dm_daemon_gate_:     94.
                begins_off               dm_daemon_gate_:    108.
                begins_on                dm_daemon_gate_:    110.
           1    bjm_adjust_process_id    dm_daemon_gate_:     72.
         130    bjm_adjust_process_id.e  dm_daemon_gate_:     72.
                bjm_firstref_tv_         dm_daemon_gate_:     72,   74.
           2    bjm_flush_all            dm_daemon_gate_:     74.
         137    bjm_flush_all.e          dm_daemon_gate_:     74.
                bump_all                 dm_daemon_gate_:    112.
                dm_firstref_tv_          dm_daemon_gate_:     78,   80,   82,   88.
           3    dm_get_daemon_info       dm_daemon_gate_:     78.
         146    dm_get_daemon_info.e     dm_daemon_gate_:     78.
           4    dm_get_daemon_logout_time      dm_daemon_gate_:     80.
         155    dm_get_daemon_logout_time.e    dm_daemon_gate_:     80.
           5    dm_get_user_bump_time    dm_daemon_gate_:     82.
         164    dm_get_user_bump_time.e  dm_daemon_gate_:     82.
           6    dm_initialize_system     dm_daemon_gate_:     84.
         173    dm_initialize_system.e   dm_daemon_gate_:     84.
           7    dm_log_message           dm_daemon_gate_:     86.
         202    dm_log_message.e         dm_daemon_gate_:     86.
                dm_no_firstref_tv_       dm_daemon_gate_:     84,   86,   90.
          10    dm_set_shutdown_info     dm_daemon_gate_:     88.
         211    dm_set_shutdown_info.e   dm_daemon_gate_:     88.
          11    dm_set_system_state      dm_daemon_gate_:     90.
         220    dm_set_system_state.e    dm_daemon_gate_:     90.
                dm_system_in_use         dm_daemon_gate_:    114.
                end_of_crash_recovery    dm_daemon_gate_:     96.
                find_old_uid_pn_table    dm_daemon_gate_:     98.
                flush_all                dm_daemon_gate_:     74.
          12    fm_adopt                 dm_daemon_gate_:     94.
         227    fm_adopt.e               dm_daemon_gate_:     94.
          13    fm_end_of_crash_recovery       dm_daemon_gate_:     96.
         236    fm_end_of_crash_recovery.e     dm_daemon_gate_:     96.
          14    fm_find_old_uid_pn_table       dm_daemon_gate_:     98.
         245    fm_find_old_uid_pn_table.e     dm_daemon_gate_:     98.
                fm_firstref_tv_          dm_daemon_gate_:     94,   96,   98,  100.
          15    fm_open_by_uid_after_crash     dm_daemon_gate_:    100.
         254    fm_open_by_uid_after_crash.e   dm_daemon_gate_:    100.
                get_daemon_info          dm_daemon_gate_:     78.
                get_daemon_logout_time   dm_daemon_gate_:     80.
                get_user_bump_time       dm_daemon_gate_:     82.
                initialize_system        dm_daemon_gate_:     84.
                ips_wakeup               dm_daemon_gate_:    116.
                ips_wakeup_all           dm_daemon_gate_:    118.
                kill_txn                 dm_daemon_gate_:    120.
                log_message              dm_daemon_gate_:     86.
          30    main                     dm_daemon_gate_:     68,   72,   74,   78,   80,   82,   84,   86,   88,   90,   94,
                                                              96,   98,  100,  104,  106,  108,  110,  112,  114,  116,  118,
                                                             120,  122.
                open_by_uid_after_crash  dm_daemon_gate_:    100.
                recover_after_crash      dm_daemon_gate_:    122.
                set_shutdown_info        dm_daemon_gate_:     88.
                set_system_state         dm_daemon_gate_:     90.
                signal_                  dm_daemon_gate_:     68.
         114    signal_arglist           dm_daemon_gate_:     68.
          16    tm_adjust_process_id     dm_daemon_gate_:    104.
         263    tm_adjust_process_id.e   dm_daemon_gate_:    104.
          17    tm_adjust_tdt_entry      dm_daemon_gate_:    106.
         272    tm_adjust_tdt_entry.e    dm_daemon_gate_:    106.
          20    tm_begins_off            dm_daemon_gate_:    108.
         301    tm_begins_off.e          dm_daemon_gate_:    108.
          21    tm_begins_on             dm_daemon_gate_:    110.
         310    tm_begins_on.e           dm_daemon_gate_:    110.
          22    tm_bump_all              dm_daemon_gate_:    112.
         317    tm_bump_all.e            dm_daemon_gate_:    112.
          23    tm_dm_system_in_use      dm_daemon_gate_:    114.
         326    tm_dm_system_in_use.e    dm_daemon_gate_:    114.
                tm_firstref_tv_          dm_daemon_gate_:    104,  106,  108,  110,  112,  114,  116,  118,  120,  122.
          24    tm_ips_wakeup            dm_daemon_gate_:    116.
         335    tm_ips_wakeup.e          dm_daemon_gate_:    116.
          25    tm_ips_wakeup_all        dm_daemon_gate_:    118.
         344    tm_ips_wakeup_all.e      dm_daemon_gate_:    118.
          26    tm_kill_txn              dm_daemon_gate_:    120.
         353    tm_kill_txn.e            dm_daemon_gate_:    120.
          27    tm_recover_after_crash   dm_daemon_gate_:    122.
         362    tm_recover_after_crash.e       dm_daemon_gate_:    122.
           0    transfer_vector          dm_daemon_gate_:     68,   72,   74,   78,   80,   82,   84,   86,   88,   90,   94,
                                                              96,   98,  100,  104,  106,  108,  110,  112,  114,  116,  118,
                                                             120,  122.
          30    tv_end                   dm_daemon_gate_:     68.


NO FATAL ERRORS


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
