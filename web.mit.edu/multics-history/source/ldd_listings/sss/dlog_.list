	COMPILATION LISTING OF SEGMENT dlog_
	Compiled by: Multics PL/I Compiler, Release 28d, of September 14, 1983
	Compiled at: Honeywell LCPD Phoenix, System M
	Compiled on: 10/03/83  1401.4 mst Mon
	    Options: optimize map

        1 /* ******************************************************
        2*   *                                                    *
        3*   *                                                    *
        4*   * Copyright (c) 1972 by Massachusetts Institute of   *
        5*   * Technology and Honeywell Information Systems, Inc. *
        6*   *                                                    *
        7*   *                                                    *
        8*   ****************************************************** */
        9 
       10 /* calls to round_ removed 07/16/73 by A. Downing */
       11 dlog_: procedure (number) returns (float binary (63));
       12 
       13 /*     compute the logarithm or hyperbolic arctangent of a double-precision floating-point number     */
       14 declare (number, a, f, n, p, r) float binary (63),
       15          i fixed binary (17);
       16 dcl  code_ ext entry (fixed bin),
       17      1 word aligned based,
       18      2 exponent fixed bin (7) unal;
       19 declare	(abs, addr, log, log10, log2, sign) builtin;
       20 
       21 	return(log(number));		/* Natural log of value. */
       22 
       23 long:	i = addr (f) -> word.exponent;
       24 	addr (f) -> word.exponent = 0;
       25 if f < 0.7071067811865475244e0 then lower: do;
       26 	     a = 0.5946035575013605334e0;
       27 	     n = 0.75e0;
       28 end lower; else upper: do;
       29 	     a = 0.840896415253714543e0;
       30 	     n = 0.25e0;
       31 	end upper;
       32 	r = f + a;
       33 	f = (f - a) / r;
       34 	n = i - n;
       35 short:	if abs (f) < 1.e-19 then go to finis;
       36 	a = f*f;
       37 	f = ((((((((0.1176470588235294118e0 * a + 0.1333333333333333333e0) * a + 0.1538461538461538462e0) * a
       38 	+ 0.1818181818181818182e0)* a + 0.2222222222222222222e0) * a + 0.2857142857142857143e0) * a
       39 	+ 0.4e0) * a + 0.6666666666666666667e0) * a + 2.e0) * f;
       40 finis:	return ((0.6931471805599453094e0 * n + f) * p);
       41 
       42 dlog2_: entry (number) returns (float binary (63));
       43 	return(log2(number));			/* Log (2) of value. */
       44 
       45 dlog10_: entry (number) returns (float binary (63));
       46 	return(log10(number));			/* Log (10) of value. */
       47 
       48 dlone_: entry (number) returns (float binary (63));
       49 	return(log(number+1.0e0));			/* Natural log of x+1. */
       50 
       51 datanh_: entry (number) returns (float binary (63));
       52 	p = 0.5e0;
       53 	f = number;
       54 	a = abs (f);
       55 	if a < 0.1e0
       56 	then do;
       57 	     n = 0.0e0;
       58 	     go to short;
       59 	     end;
       60 	a = a - 1.e0;
       61 	if a >= 0.0e0 then err2: do;
       62 	     call code_ (sign (a) + 44);
       63 	     if a = 0.0e0 then f = 170141182.e30 * f; else f = 0.0e0;
       64 	     return (f);
       65 	end err2;
       66 	f = (1.e0 + f) / (1.e0 - f);
       67 	go to long;
       68      end dlog_;
	SOURCE FILES USED IN THIS COMPILATION.

LINE      NUMBER  DATE MODIFIED     NAME			PATHNAME
             0    10/03/83  1005.0  dlog_.pl1                         >spec>on>pl128d>dlog_.pl1
	NAMES DECLARED IN THIS COMPILATION.

IDENTIFIER	     OFFSET    LOC STORAGE CLASS   DATA TYPE		ATTRIBUTES AND REFERENCES
								(* indicates a set context)

NAMES DECLARED BY DECLARE STATEMENT.
a                               000100 automatic       float bin(63)            dcl 14 set ref 26* 29* 32 33 36* 37 37 37 37 37 37
                                                                                  37 37 54* 55 60* 60 61 62 63
abs                                                    builtin function         dcl 19 ref 35 54
addr                                                   builtin function         dcl 19 ref 23 24
code_                           000010 constant        entry                    external dcl 16 ref 62
exponent                               based           fixed bin(7,0)           level 2 packed unaligned dcl 16 set ref 23 24*
f                               000102 automatic       float bin(63)            dcl 14 set ref 23 24 25 32 33* 33 35 36 36 37* 37 40
                                                                                  53* 54 63* 63 63* 64 66* 66 66
i                               000112 automatic       fixed bin(17,0)          dcl 14 set ref 23* 34
log                                                    builtin function         dcl 19 ref 21 49
log10                                                  builtin function         dcl 19 ref 46
log2                                                   builtin function         dcl 19 ref 43
n                               000104 automatic       float bin(63)            dcl 14 set ref 27* 30* 34* 34 40 57*
number                                 parameter       float bin(63)            dcl 14 ref 11 21 42 43 45 46 48 49 51 53
p                               000106 automatic       float bin(63)            dcl 14 set ref 40 52*
r                               000110 automatic       float bin(63)            dcl 14 set ref 32* 33
sign                                                   builtin function         dcl 19 ref 62
word                                   based           structure                level 1 dcl 16

NAMES DECLARED BY EXPLICIT CONTEXT.
datanh_                         000242 constant        entry                    external dcl 51
dlog10_                         000205 constant        entry                    external dcl 45
dlog2_                          000167 constant        entry                    external dcl 42
dlog_                           000050 constant        entry                    external dcl 11
dlone_                          000223 constant        entry                    external dcl 48
err2                            000271 constant        label                    dcl 61
finis                           000156 constant        label                    dcl 40 ref 35
long                            000064 constant        label                    dcl 23 set ref 67
lower                           000076 constant        label                    dcl 25
short                           000122 constant        label                    dcl 35 ref 58
upper                           000103 constant        label                    dcl 28

THERE WERE NO NAMES DECLARED BY CONTEXT OR IMPLICATION.

STORAGE REQUIREMENTS FOR THIS PROGRAM.

	Object	Text	Link	Symbol	Defs	Static
Start          0       0       402         414     326         412
Length       562     326        12         131      54           0

BLOCK NAME	         STACK SIZE     TYPE		WHY NONQUICK/WHO SHARES STACK FRAME
dlog_                               110 external procedure  is an external procedure.  

STORAGE FOR AUTOMATIC VARIABLES.

STACK FRAME                 LOC IDENTIFIER                  BLOCK NAME
dlog_                    000100 a                           dlog_
                         000102 f                           dlog_
                         000104 n                           dlog_
                         000106 p                           dlog_
                         000110 r                           dlog_
                         000112 i                           dlog_

THE FOLLOWING EXTERNAL OPERATORS ARE USED BY THIS PROGRAM.
fx1_to_fl2          call_ext_out        return              sign                ext_entry           dlog2
dlog                dlog10

THE FOLLOWING EXTERNAL ENTRIES ARE CALLED BY THIS PROGRAM.
code_

NO EXTERNAL VARIABLES ARE USED BY THIS PROGRAM.




   LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC   
     11 000044        21 000055        23 000064        24 000067        25 000073        26 000076        27 000100
     28 000102        29 000103        30 000105        32 000107        33 000112        34 000116        35 000122
     36 000131        37 000134        40 000156        42 000165        43 000174        45 000203        46 000212
     48 000221        49 000230        51 000240        52 000247        53 000251        54 000254        55 000257
     57 000262        58 000264        60 000265        61 000270        62 000271        63 000303        63 000311
     64 000313        66 000316        67 000325


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
