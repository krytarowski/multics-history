	COMPILATION LISTING OF SEGMENT trace_recurse_
	Compiled by: Multics PL/I Compiler, Release 28d, of October 4, 1983
	Compiled at: Honeywell Multics Op. - System M
	Compiled on: 10/23/84  1251.0 mst Tue
	    Options: optimize map

        1 /* ***********************************************************
        2*   *                                                         *
        3*   * Copyright, (C) Honeywell Information Systems Inc., 1983 *
        4*   *                                                         *
        5*   *********************************************************** */
        6 
        7 /*  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */
        8 /*									*/
        9 /*      Written in June 1983 by Jeffrey D. Ives.					*/
       10 /*									*/
       11 /*  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */
       12 
       13 
       14 /* format: style2,^inddcls,ifthendo,^indnoniterdo,thendo,^inditerdo,ind2,dclind5,idind32 */
       15 
       16 trace_recurse_:
       17   proc (number_of_times_i, entry_to_entry_elapsed_time_o, return_to_return_elapsed_time_o);
       18 
       19     number_of_times = number_of_times_i;
       20 
       21     entry_clock_reading = clock ();
       22 
       23     call trace_recurse_dummy_ (number_of_times, divider_clock_reading);
       24 
       25     return_clock_reading = clock ();
       26 
       27     entry_to_entry_elapsed_time_o = divider_clock_reading - entry_clock_reading;
       28     return_to_return_elapsed_time_o = return_clock_reading - divider_clock_reading;
       29 
       30     return;
       31 
       32 /* START OF DECLARATIONS */
       33 /* format: ^insnl,^delnl */
       34 
       35 /* Parameters */
       36 dcl  entry_to_entry_elapsed_time_o   fixed bin (53) parm;
       37 dcl  number_of_times_i	       fixed bin (34) parm;
       38 dcl  return_to_return_elapsed_time_o fixed bin (53) parm;
       39 
       40 /* Automatic */
       41 dcl  divider_clock_reading	       fixed bin (53);
       42 dcl  entry_clock_reading	       fixed bin (53);
       43 dcl  number_of_times	       fixed bin;
       44 dcl  return_clock_reading	       fixed bin (53);
       45 
       46 /* Static */
       47 
       48 /* Conditions */
       49 
       50 /* Based */
       51 
       52 /* External Variables */
       53 
       54 /* External Entries */
       55 dcl  trace_recurse_dummy_	       entry (fixed bin, fixed bin (53));
       56 
       57 /* format: insnl,delnl */
       58 /* END OF DECLARATIONS */
       59 
       60   end trace_recurse_;
	SOURCE FILES USED IN THIS COMPILATION.

LINE      NUMBER  DATE MODIFIED     NAME			PATHNAME
             0    10/23/84  1219.1  trace_recurse_.pl1                >special_ldd>online>6972-10/23/84>trace_recurse_.pl1
	NAMES DECLARED IN THIS COMPILATION.

IDENTIFIER	     OFFSET    LOC STORAGE CLASS   DATA TYPE		ATTRIBUTES AND REFERENCES
								(* indicates a set context)

NAMES DECLARED BY DECLARE STATEMENT.
divider_clock_reading           000100 automatic       fixed bin(53,0)          dcl 41 set ref 23* 27 28
entry_clock_reading             000102 automatic       fixed bin(53,0)          dcl 42 set ref 21* 27
entry_to_entry_elapsed_time_o          parameter       fixed bin(53,0)          dcl 36 set ref 16 27*
number_of_times                 000104 automatic       fixed bin(17,0)          dcl 43 set ref 19* 23*
number_of_times_i                      parameter       fixed bin(34,0)          dcl 37 ref 16 19
return_clock_reading            000106 automatic       fixed bin(53,0)          dcl 44 set ref 25* 28
return_to_return_elapsed_time_o        parameter       fixed bin(53,0)          dcl 38 set ref 16 28*
trace_recurse_dummy_            000010 constant        entry                    external dcl 55 ref 23

NAME DECLARED BY EXPLICIT CONTEXT.
trace_recurse_                  000006 constant        entry                    external dcl 16

NAME DECLARED BY CONTEXT OR IMPLICATION.
clock                                                  builtin function         ref 21 25

STORAGE REQUIREMENTS FOR THIS PROGRAM.

	Object	Text	Link	Symbol	Defs	Static
Start          0       0       102         114      43         112
Length       262      43        12         131      36           0

BLOCK NAME	         STACK SIZE     TYPE		WHY NONQUICK/WHO SHARES STACK FRAME
trace_recurse_                       78 external procedure  is an external procedure.  

STORAGE FOR AUTOMATIC VARIABLES.

STACK FRAME                 LOC IDENTIFIER                  BLOCK NAME
trace_recurse_           000100 divider_clock_reading       trace_recurse_
                         000102 entry_clock_reading         trace_recurse_
                         000104 number_of_times             trace_recurse_
                         000106 return_clock_reading        trace_recurse_

THE FOLLOWING EXTERNAL OPERATORS ARE USED BY THIS PROGRAM.
call_ext_out        return              ext_entry           clock

THE FOLLOWING EXTERNAL ENTRIES ARE CALLED BY THIS PROGRAM.
trace_recurse_dummy_

NO EXTERNAL VARIABLES ARE USED BY THIS PROGRAM.




   LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC   
     16 000002        19 000013        21 000016        23 000020        25 000031        27 000033        28 000037
     30 000042


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
