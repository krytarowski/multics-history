ASSEMBLY LISTING OF SEGMENT >special_ldd>install>MR12.0-1206>ssu_request_tables_.alm         
ASSEMBLED ON:	11/05/86  1039.4 mst Wed
OPTIONS USED:	list 
ASSEMBLED BY:	ALM Version  6.7  October 1986  
ASSEMBLER CREATED:	10/08/86  1557.5 mst Wed

                                     1  " ***********************************************************
                                     2  " *                                                         *
                                     3  " * Copyright, (C) Honeywell Information Systems Inc., 1982 *
                                     4  " *                                                         *
                                     5  " ***********************************************************
                                     6  
                                     7  " Standard subsystem request tables
                                     8  
                                     9  " Created:  April 1982 by G. Palter
                                    10  " Modified: 30 July 1982 by G. Palter to allow abbrev to be used as an active
                                    11  "	  request.
                                    12  
                                    13  
                                    14  
                                    15  " HISTORY COMMENTS:
                                    16  "  1) change(86-08-12,JSLove), approve(86-08-12,MCR7519),
                                    17  "     audit(86-08-18,Parisek), install(86-10-01,MR12.0-1170):
                                    18  "     Added the execute_string and substitute_arguments requests.
                                    19  "                                                      END HISTORY COMMENTS
                                    20  
                                    21  
                                    22  
                                    23  
                                    24  	include	ssu_request_macros
                                   1-1  " BEGIN INCLUDE FILE ... ssu_request_macros.incl.alm
                                   1-2  " Created:  5 May 1980 by W. Olin Sibert
                                   1-3  " Modified: 25 July 1980 by G. Palter to add multics_request macro
                                   1-4  " Modified: 1 December 1981 by G. Palter to remove user_flags
                                   1-5  " Modified: 12 February 1982 by G. Palter for version 4
                                   1-6  " Modified: 28 February 1982 by G. Palter to add dont_summarize and dont_list
                                   1-7  " Modified: 2 August 1982 by Jay Pattin to add unknown_request
                                   1-8  " Modified: 24 October 1984 by G. Palter to restore user flags and add the
                                   1-9  "    set_default_flags and set_default_multics_flags macros
                                  1-10  
                                  1-11  
                                  1-12  " ALM macros used to define subsystem request tables
                                  1-13  
                                  1-14  
                                  1-15  	macro	request_table_version
                              1   1-16  	aci	"srqt_4.0",8
                              2   1-17  	&end
                                  1-18  
                                  1-19  
                                  1-20  	macro	namelist
                              1   1-21  	maclist	off,save
                              2   1-22  	vfd	36/&K
                              3   1-23  &R&(	aci	@&i@,32
                              4   1-24  &)
                              5   1-25  	maclist	restore
                              6   1-26  	&end
                                  1-27  
                                  1-28  " 
                                  1-29  
                                  1-30  " System defined per-request flags
                                  1-31  
                        400000    1-32  	bool	flags.allow_command,400000	" valid as a command
                        200000    1-33  	bool	flags.allow_af,200000	" valid as an active function
                        600000    1-34  	bool	flags.allow_both,600000	" valid as both
                                  1-35  
                        100000    1-36  	bool	flags.unimplemented,100000	" request is not yet implemented
                        040000    1-37  	bool	flags.multics_request,040000	" request is actually a Multics command
                                  1-38  
                        020000    1-39  	bool	flags.dont_summarize,020000	" summarize_requests won't list it
                        010000    1-40  	bool	flags.dont_list,010000	" list_requests won't show it without -all
                                  1-41  
                        004000    1-42  	bool	flags.unknown,004000	" request is explicitly made unknown
                                  1-43  
                                  1-44  
                                  1-45  " Macros for setting per-request flags
                                  1-46  
                                  1-47  	macro	set_flags_loop
                              1   1-48  	maclist	off,save
                              2   1-49  &(3
                              3   1-50  &=&i,default&[	set_flags_loop	&1,(0),(&2)
                              4   1-51  &;	set	&1,&1+&i
                              5   1-52  &]&)
                              6   1-53  	maclist	restore
                              7   1-54  	&end
                                  1-55  
                                  1-56  
                                  1-57  	macro	set_flags
                              1   1-58  	maclist	off,save
                              2   1-59  	set	&1,0
                              3   1-60  &=&3,&[	set_flags_loop	&1,(0),(&2)
                              4   1-61  &;	set_flags_loop	&1,(&2),(&3)
                              5   1-62  &]
                              6   1-63  	maclist	restore
                              7   1-64  	&end
                                  1-65  
                                  1-66  " 
                                  1-67  
                                  1-68  "	set_default_flags {(system-flags)},{(user-flags)}
                                  1-69  
                                  1-70  " Sets the default system and/or user flags to be used for requests:
                                  1-71  "   system-flags: defines the default general nature of requests;" the default
                                  1-72  "      default is flags.allow_command
                                  1-73  "   user-flags:  defines the default setting for the subsystem specific flags
                                  1-74  "      associated with requests;" the default default is none (0)
                                  1-75  "   Note: If either system-flags or user-flags is ommitted, the default is not
                                  1-76  "      changed from its prior value.  This action allows the use of multiple
                                  1-77  "      set_default_flags macros within a table to change system or user
                                  1-78  "      flags without affecting the other defaults
                                  1-79  
                                  1-80  	macro	set_default_flags
                              1   1-81  	maclist	off,save
                              2   1-82  &^=&1,&[	set_flags	.dft_sf,(flags.allow_command),(&1)
                              3   1-83  &]
                              4   1-84  &^=&2,&[	set_flags	.dft_uf,(0),(&2)
                              5   1-85  &]
                              6   1-86  	maclist	restore
                              7   1-87  	&end
                                  1-88  
                                  1-89  
                                  1-90  "	set_default_multics_flags {(system-flags)},{(user-flags)}
                                  1-91  
                                  1-92  " Sets the default system and/or user flags to be used for Multics commands when used as requests:
                                  1-93  "   system-flags: defines the default general nature of Multics requests;" the
                                  1-94  "      default default is flags.allow_command+flags.allow_af
                                  1-95  "   user-flags:  defines the default setting for the subsystem specific flags
                                  1-96  "      associated with Multics requests;" the default default is none (0)
                                  1-97  "   Note: If either system-flags or user-flags is ommitted, the default is not
                                  1-98  "      changed from its prior value.  This action allows the use of multiple
                                  1-99  "      set_default_multics_flags macros within a table to change system or user
                                 1-100  "      flags without affecting the other defaults
                                 1-101  
                                 1-102  	macro	set_default_multics_flags
                              1  1-103  	maclist	off,save
                              2  1-104  &^=&1,&[	set_flags	.dft_mrsf,(flags.allow_command,flags.allow_af),(&1)
                              3  1-105  &]
                              4  1-106  &^=&2,&[	set_flags	.dft_mruf,(0),(&2)
                              5  1-107  &]
                              6  1-108  	maclist	restore
                              7  1-109  	&end
                                 1-110  
                                 1-111  " 
                                 1-112  
                                 1-113  	macro	.multics_request_doc
                              1  1-114  	null
                              2  1-115  	&end
                                 1-116  
                                 1-117  
                                 1-118  	macro	dft_multics_doc_lth
                              1  1-119  	set	.multics_doc_lth,0
                              2  1-120  	&end
                                 1-121  
                                 1-122  
                                 1-123  "	set_default_multics_doc (string)
                                 1-124  
                                 1-125  " Sets the default documentation to be used for Multics commands when used as requests:
                                 1-126  "   string: is the documentation string to be used for any subsequent requests defined by
                                 1-127  "      the multics_request_macro;" all occurences of "&1" in this string will be replaced by
                                 1-128  "      the actual name of the request;" Eg:
                                 1-129  "	set_default_multics_doc (Type '.. help &1' for more information.)
                                 1-130  
                                 1-131  	macro	set_default_multics_doc
                              1  1-132  	maclist	off,save
                              2  1-133  	macro	.multics_request_doc
                              3  1-134  	aci	@&1@
                              4  1-135  	&&end
                              5  1-136  	macro	dft_multics_doc_lth
                              6  1-137  	macro	.compute
                              7  1-138  	set	.multics_doc_lth,&&&&l1
                              8  1-139  	&&&&end
                              9  1-140  	.compute (&1)
                             10  1-141  	&&end
                             11  1-142  	maclist	restore
                             12  1-143  	&end
                                 1-144  
                                 1-145  " 
                                 1-146  
                                 1-147  "	begin_table tablename
                                 1-148  
                                 1-149  " Defines a subsystem request table (multiple tables may exist in a single object segment):
                                 1-150  "   tablename: the name by which this table may be referenced externally;" references to the
                                 1-151  "      table should be of the form segname$tablename where segname is the name of this
                                 1-152  "      object segment
                                 1-153  
                                 1-154  	macro	begin_table
                              1  1-155  	segdef	&1
                              2  1-156  	maclist	object,save
                              3  1-157  	use	tables
                              4  1-158  &1:	request_table_version
                              5  1-159  	aci	@&1@,32
                              6  1-160  	dup	6
                              7  1-161  	vfd	36/0
                              8  1-162  	dupend
                              9  1-163  	vfd	36/&1.rc
                             10  1-164  	maclist	off
                             11  1-165  	set	.rc,0
                             12  1-166  	set_default_flags (default),(default)
                             13  1-167  	set_default_multics_flags (default),(default)
                             14  1-168  	maclist	restore
                             15  1-169  	&end
                                 1-170  
                                 1-171  
                                 1-172  "	end_table	tablename
                                 1-173  
                                 1-174  " Indicates the end of a subsystem request table definition:
                                 1-175  "   tablename: the name of the table which has now been completely defined
                                 1-176  
                                 1-177  	macro	end_table
                              1  1-178  	maclist	off,save
                              2  1-179  	set	&1.rc,.rc
                              3  1-180  	maclist	restore
                              4  1-181  	&end
                                 1-182  
                                 1-183  " 
                                 1-184  
                                 1-185  "	request	name,processor,({abbreviations}),{(documentation)},
                                 1-186  "		 {(system-flags)},{(user-flags)}
                                 1-187  
                                 1-188  " Defines a subsystem request:
                                 1-189  "   name: the primary name of this request
                                 1-190  "   processor: the name of the procedure which actually executes this request;" it must be
                                 1-191  "      of the form segname$entryname
                                 1-192  "   abbreviations: is the list of defined abbreviations for this request
                                 1-193  "   documentation: a short string used by the list_requests request to explain this request
                                 1-194  "   system-flags: defines the general nature of this request;" the default is
                                 1-195  "      flags.allow_command
                                 1-196  "   user-flags: allows a subsystem to provide subsystem-specific information
                                 1-197  "      with the request's definition;" the default is none (0)
                                 1-198  
                                 1-199  	macro	request
                              1  1-200  	maclist	off,save
                              2  1-201  	set	.rc,.rc+1
                              3  1-202  	maclist	object
                              4  1-203  	use	tables
                              5  1-204  	vfd	18/&U.call,18/&U.names
                              6  1-205  &=&4,&[	vfd	36/0
                              7  1-206  &;	vfd	18/&U.info,18/&l4
                              8  1-207  	maclist	off
                              9  1-208  	use	info
                             10  1-209  &U.info:	aci	@&4@
                             11  1-210  &]
                             12  1-211  	use	tables
                             13  1-212  	set_flags	.sf,(.dft_sf),(&5)
                             14  1-213  	set_flags	.uf,(.dft_uf),(&6)
                             15  1-214  	maclist	object
                             16  1-215  	vfd	18/.sf,18/.uf
                             17  1-216  	maclist	off
                             18  1-217  	use	calls
                             19  1-218  &U.call:	epaq	*
                             20  1-219  	lprp4	7|stack_header.lot_ptr,*au
                             21  1-220  	call6	&2
                             22  1-221  	use	names
                             23  1-222  &U.names:	namelist	&1&^=&3,&[,&3&]
                             24  1-223  	maclist	restore
                             25  1-224  	&end
                                 1-225  
                                 1-226  " 
                                 1-227  
                                 1-228  "	unknown_request name,(abbreviations)
                                 1-229  
                                 1-230  " Defines an unknown request: used to make the utilities not recognize a request even though
                                 1-231  " it is defined in a later request table (such as ssu_request_tables_$standard_request):
                                 1-232  "   name: the primary name of the request to be marked as unknown
                                 1-233  "   abbreviations: is the list of defined abbreviations for this request
                                 1-234  
                                 1-235  	macro	unknown_request
                              1  1-236  	maclist	off,save
                              2  1-237  	set	.rc,.rc+1
                              3  1-238  	maclist	object
                              4  1-239  	use	tables
                              5  1-240  	vfd	18/&U.call,18/&U.names
                              6  1-241  	vfd	36/0
                              7  1-242  	vfd	18/flags.unknown,18/0
                              8  1-243  	maclist	off
                              9  1-244  	use	calls
                             10  1-245  &U.call:	epaq	*
                             11  1-246  	lprp4	7|stack_header.lot_ptr,*au
                             12  1-247  	call6	ssu_$unknown_request
                             13  1-248  	use	names
                             14  1-249  &U.names: namelist	&1&^=&2,&[,&2&]
                             15  1-250  	maclist	restore
                             16  1-251  	&end
                                 1-252  
                                 1-253  " 
                                 1-254  
                                 1-255  "	multics_request name,({abbreviations}),({documenation}),{procedure},
                                 1-256  "		       {(system-flags)},{(user-flags)}
                                 1-257  
                                 1-258  " Defines that a Multics command/AF may be used as a subsystem request:
                                 1-259  "   name: the primary name of this request (usually the name of the Multics command/AF)
                                 1-260  "   abbreviations: is the list of defined abbreviations for this request
                                 1-261  "   documentation: a short string used by the list_requests request to explain this request;
                                 1-262  "      if no documentation is provided, the documentation specified by a prior use of
                                 1-263  "      set_default_multics_doc is used
                                 1-264  "   procedure: the name of the Multics command/AF which is actually executed by this
                                 1-265  "      request;" it must be of the form segname$entryname;" if not given, the default is
                                 1-266  "      name$name
                                 1-267  "   system-flags: defines the general nature of this request;" the default is
                                 1-268  "      flags.allow_command+flags.allow_af
                                 1-269  "   user-flags: allows a subsystem to provide subsystem-specific information
                                 1-270  "      with the request's definition;" the default is none (0)
                                 1-271  
                                 1-272  	macro	multics_request
                              1  1-273  	maclist	off,save
                              2  1-274  	set	.rc,.rc+1
                              3  1-275  	maclist	object
                              4  1-276  	use	tables
                              5  1-277  	vfd	18/&U.call,18/&U.names
                              6  1-278  &=&3,&[	dft_multics_doc_lth &1,(&2),(&3),(&4),(&5),(&6)
                              7  1-279  	vfd	18/&U.info,18/.multics_doc_lth
                              8  1-280  &;	vfd	18/&U.info,18/&l3
                              9  1-281  &]
                             10  1-282  	maclist	off
                             11  1-283  	use	info
                             12  1-284  &U.info:
                             13  1-285  &=&3,&[	.multics_request_doc &1,(&2),(&3),(&4),(&5),(&6)
                             14  1-286  &;	aci	@&3@
                             15  1-287  &]
                             16  1-288  	use	tables
                             17  1-289  	maclist	object
                             18  1-290  	set_flags	.sf,(.dft_mrsf),(&5)
                             19  1-291  	set_flags	.uf,(.dft_mruf),(&6)
                             20  1-292  	maclist	object
                             21  1-293  	vfd	18/.sf+flags.multics_request,18/.uf
                             22  1-294  	maclist	off
                             23  1-295  	use	calls
                             24  1-296  &U.call:	epaq	*
                             25  1-297  	lprp4	7|stack_header.lot_ptr,*au
                             26  1-298  &=&4,&[	call6	&1$&1
                             27  1-299  &;	call6	&4
                             28  1-300  &]
                             29  1-301  	use	names
                             30  1-302  &U.names:	namelist	&1&^=&2,&[,&2&]
                             31  1-303  	maclist	restore
                             32  1-304  	&end
                                 1-305  
                                 1-306  " 
                                 1-307  
                                 1-308  " Required ALM statements to make this all work
                                 1-309  
                                 1-310  	use	tables
                                 1-311  	use	calls
                                 1-312  	use	names
                                 1-313  	use	info
                                 1-314  	join	/text/tables,calls,names,info
                                 1-315  
                                 1-316  	include	stack_header
                                   2-1  "	BEGIN INCLUDE FILE ... stack_header.incl.alm  3/72  Bill Silver
                                   2-2  "
                                   2-3  "	modified 7/76 by M. Weaver for *system links and more system use of areas
                                   2-4  "	modified 3/77 by M. Weaver  to add rnt_ptr
                                   2-5  "	modified 7/77 by S. Webber to add run_unit_depth and assign_linkage_ptr
                                   2-6  "	modified 6/83 by J. Ives to add trace_frames and in_trace.
                                   2-7  
                                   2-8  " HISTORY COMMENTS:
                                   2-9  "  1) change(86-06-24,DGHowe), approve(86-06-24,MCR7396),
                                  2-10  "     audit(86-08-05,Schroth), install(86-11-03,MR12.0-1206):
                                  2-11  "     added the heap_header_ptr definition
                                  2-12  "  2) change(86-08-12,Kissel), approve(86-08-12,MCR7473),
                                  2-13  "     audit(86-10-10,Fawcett), install(86-11-03,MR12.0-1206):
                                  2-14  "     Modified to support control point management.  These changes were
                                  2-15  "     actually made in February 1985 by G. Palter.
                                  2-16  "  3) change(86-10-22,Fawcett), approve(86-10-22,MCR7473),
                                  2-17  "     audit(86-10-22,Farley), install(86-11-03,MR12.0-1206):
                                  2-18  "     Remove the old_lot pointer and replace it with cpm_data_ptr. Use the 18
                                  2-19  "     bit pad after cur_lot_size for the cpm_enabled. This was done to save
                                  2-20  "     some space int the stack header and change the cpd_ptr unal to
                                  2-21  "     cpm_data_ptr (ITS pair).
                                  2-22  "                                                      END HISTORY COMMENTS
                                  2-23  
                        000004    2-24  	equ	stack_header.cpm_data_ptr,4		ptr to control point for this stack
                        000006    2-25  	equ	stack_header.combined_stat_ptr,6	ptr to separate static area
                                  2-26  
                        000010    2-27  	equ	stack_header.clr_ptr,8		ptr to area containing linkage sections
                        000012    2-28  	equ	stack_header.max_lot_size,10		number of words allowed in lot (DU)
                        000012    2-29  	equ	stack_header.main_proc_invoked,10	nonzero if main proc was invoked in run unit (DL)
                        000012    2-30  	equ	stack_header.run_unit_depth,10	number of active run units stacked (DL)
                        000013    2-31  	equ	stack_header.cur_lot_size,11		DU number of words (entries) in lot
                        000013    2-32            equ	stack_header.cpm_enabled,11		DL  non-zero if control point management is enabled
                        000014    2-33  	equ	stack_header.system_free_ptr,12	ptr to system storage area
                        000016    2-34  	equ	stack_header.user_free_ptr,14		ptr to user storage area
                                  2-35  
                        000020    2-36  	equ	stack_header.parent_ptr,16		ptr to parent stack or null
                        000022    2-37  	equ	stack_header.stack_begin_ptr,18	ptr to first stack frame
                        000024    2-38  	equ	stack_header.stack_end_ptr,20		ptr to next useable stack frame
                        000026    2-39  	equ	stack_header.lot_ptr,22		ptr to the lot for the current ring
                                  2-40  
                        000030    2-41  	equ	stack_header.signal_ptr,24		ptr to signal proc for current ring
                        000032    2-42  	equ	stack_header.bar_mode_sp,26		value of sp before entering bar mode
                        000034    2-43  	equ	stack_header.pl1_operators_ptr,28	ptr: pl1_operators_$operator_table
                        000036    2-44  	equ	stack_header.call_op_ptr,30		ptr to standard call operator
                                  2-45  
                        000040    2-46  	equ	stack_header.push_op_ptr,32		ptr to standard push operator
                        000042    2-47  	equ	stack_header.return_op_ptr,34		ptr to standard return operator
                        000044    2-48  	equ	stack_header.ret_no_pop_op_ptr,36	ptr: stand. return/ no pop operator
                        000046    2-49  	equ	stack_header.entry_op_ptr,38		ptr to standard entry operator
                                  2-50  
                        000050    2-51  	equ	stack_header.trans_op_tv_ptr,40	ptr to table of translator operator ptrs
                        000052    2-52  	equ	stack_header.isot_ptr,42		pointer to ISOT
                        000054    2-53  	equ	stack_header.sct_ptr,44		pointer to System Condition Table
                        000056    2-54  	equ	stack_header.unwinder_ptr,46		pointer to unwinder for current ring
                                  2-55  
                        000060    2-56  	equ	stack_header.sys_link_info_ptr,48	ptr to *system link name table
                        000062    2-57  	equ	stack_header.rnt_ptr,50		ptr to reference name table
                        000064    2-58  	equ	stack_header.ect_ptr,52		ptr to event channel table
                        000066    2-59  	equ	stack_header.assign_linkage_ptr,54	ptr to area for hcs_$assign_linkage calls
                        000070    2-60  	equ	stack_header.heap_header_ptr,56	ptr to heap header.
                        000072    2-61  	equ	stack_header.trace_frames,58		stack of trace_catch_ frames
                        000073    2-62  	equ	stach_header.trace_top_ptr,59		trace pointer
                        000074    2-63  	equ	stack_header.in_trace,60		trace antirecurse bit
                        000100    2-64  	equ	stack_header_end,64			length of stack header
                                  2-65  
                                  2-66  
                                  2-67  
                                  2-68  
                        000000    2-69  	equ	trace_frames.count,0		number of trace frames on stack
                        000001    2-70  	equ	trace_frames.top_ptr,1		packed pointer to top one
                                  2-71  
                                  2-72  "	The  following constant is an offset within the  pl1  operators table.
                                  2-73  "	It  references a  transfer vector table.
                                  2-74  
                        000551    2-75  	bool	tv_offset,551
                                  2-76  
                                  2-77  
                                  2-78  "	The  following constants are offsets within this transfer vector table.
                                  2-79  
                        001170    2-80  	equ	call_offset,tv_offset+271
                        001171    2-81  	equ	push_offset,tv_offset+272
                        001172    2-82  	equ	return_offset,tv_offset+273
                        001173    2-83  	equ	return_no_pop_offset,tv_offset+274
                        001174    2-84  	equ	entry_offset,tv_offset+275
                                  2-85  
                                  2-86  
                                  2-87  " 	END INCLUDE FILE stack_header.incl.alm
                                 2-317  
                                 2-318  " END INCLUDE FILE ... ssu_request_macros.incl.alm
                                    25  
    000635                          26  	name	ssu_request_tables_
                                    27  
                                    28  " 
                                    29  
                                    30  " ssu_request_tables_$standard_requests -- A request table containing all
                                    31  "   standard subsystem requests;" it should be added as the last request
                                    32  "   table by subsystems which implement all standard requests
                                    33  
                                    34  	begin_table standard_requests
                        000000          	segdef	standard_requests
    000000  aa  163 162 161 164
    000001  aa  137 064 056 060
    000002  aa  163 164 141 156
    000003  aa  144 141 162 144
    000004  aa  137 162 145 161
    000005  aa  165 145 163 164
    000006  aa  163 040 040 040
    000007  aa  040 040 040 040
    000010  aa  040 040 040 040
    000011  aa  040 040 040 040
                        000006 
    000012  aa   000000 000000 
    000013  aa   000000 000000 
    000014  aa   000000 000000 
    000015  aa   000000 000000 
    000016  aa   000000 000000 
    000017  aa   000000 000000 
    000020  aa   000000 000024 
                                    35  
                                    36  	request	.,
                                    37  		 ssu_requests_$self_identify,
                                    38  		 (),
                                    39  		 (Identify the subsystem.)
    000021  00   000115 000211 
    000022  0a   000635 000027 
    000023  aa   400000 000000 
                                    40  
                                    41  	request	?,
                                    42  		 ssu_requests_$summarize_requests,
                                    43  		 (),
                                    44  		 (Produce a list of the most commonly used requests.),
                                    45  		 flags.allow_command+flags.dont_summarize
    000024  00   000120 000222 
    000025  0a   000643 000062 
    000026  aa   420000 000000 
                                    46  
                                    47  	request	abbrev,
                                    48  		 ssu_requests_$abbrev,
                                    49  		 (ab),
                                    50  		 (Enable/disable abbreviation processing of request lines.),
                                    51  		 flags.allow_both
    000027  00   000123 000233 
    000030  0a   000660 000070 
    000031  aa   600000 000000 
                                    52  
                                    53  	request	answer,
                                    54  		 ssu_requests_$answer,
                                    55  		 (),
                                    56  		 (Provide preset answers to another request line.)
    000032  00   000126 000254 
    000033  0a   000676 000057 
    000034  aa   400000 000000 
                                    57  
                                    58  	request	debug_mode,
                                    59  		 ssu_requests_$debug_mode,
                                    60  		 (),
                                    61  		 (Enable/disable subsystem debugging facilities.),
                                    62  		 flags.allow_command+flags.dont_summarize+flags.dont_list
    000035  00   000131 000265 
    000036  0a   000712 000056 
    000037  aa   430000 000000 
                                    63  
                                    64  	request	do,
                                    65  		 ssu_requests_$do,
                                    66  		 (),
                                    67  		 (Perform substitution into a control string and execute or return the expansion.),
                                    68  		 flags.allow_both
    000040  00   000134 000276 
    000041  0a   000726 000117 
    000042  aa   600000 000000 
                                    69  
                                    70  	request	exec_com,
                                    71  		 ssu_requests_$exec_com,
                                    72  		 (ec),
                                    73  		 (Execute a file containing request lines with parameter substitution.),
                                    74  		 flags.allow_both
    000043  00   000137 000307 
    000044  0a   000752 000104 
    000045  aa   600000 000000 
                                    75  
                                    76  	request	execute,
                                    77  		 ssu_requests_$execute,
                                    78  		 (e),
                                    79  		 (Execute a Multics command line.),
                                    80  		 flags.allow_both
    000046  00   000142 000330 
    000047  0a   000773 000037 
    000050  aa   600000 000000 
                                    81  
                                    82  	request	execute_string,
                                    83  		 ssu_requests_$execute_string,
                                    84  		 (exs),
                                    85  		 (Perform substitution into a control string and execute the expansion.),
                                    86  		 flags.allow_both
    000051  00   000145 000351 
    000052  0a   001003 000105 
    000053  aa   600000 000000 
                                    87  
                                    88  	request	help,
                                    89  		 ssu_requests_$help,
                                    90  		 (),
                                    91  		 (Obtain detailed information on the subsystem.)
    000054  00   000150 000372 
    000055  0a   001025 000055 
    000056  aa   400000 000000 
                                    92  
                                    93  	request	if,
                                    94  		 ssu_requests_$if,
                                    95  		 (),
                                    96  		 (Conditionally execute one of two request lines.),
                                    97  		 flags.allow_both
    000057  00   000153 000403 
    000060  0a   001041 000057 
    000061  aa   600000 000000 
                                    98  
                                    99  	request	list_help,
                                   100  		 ssu_requests_$list_help,
                                   101  		 (lh),
                                   102  		 (List topics for which help is available.)
    000062  00   000156 000414 
    000063  0a   001055 000050 
    000064  aa   400000 000000 
                                   103  
                                   104  	request	list_requests,
                                   105  		 ssu_requests_$list_requests,
                                   106  		 (lr),
                                   107  		 (List brief information on subsystem requests.)
    000065  00   000161 000435 
    000066  0a   001067 000055 
    000067  aa   400000 000000 
                                   108  
                                   109  	request	quit,
                                   110  		 ssu_requests_$quit,
                                   111  		 (q),
                                   112  		 (Leave the subsystem.)
    000070  00   000164 000456 
    000071  0a   001103 000024 
    000072  aa   400000 000000 
                                   113  
                                   114  	request	ready,
                                   115  		 ssu_requests_$ready,
                                   116  		 (rdy),
                                   117  		 (Print a ready message.),
                                   118  		 flags.allow_command+flags.dont_summarize+flags.dont_list
    000073  00   000167 000477 
    000074  0a   001110 000026 
    000075  aa   430000 000000 
                                   119  
                                   120  	request	ready_off,
                                   121  		 ssu_requests_$ready_off,
                                   122  		 (rdf),
                                   123  		 (Disable printing ready messages after each request line.),
                                   124  		 flags.allow_command+flags.dont_summarize+flags.dont_list
    000076  00   000172 000520 
    000077  0a   001116 000070 
    000100  aa   430000 000000 
                                   125  
                                   126  	request	ready_on,
                                   127  		 ssu_requests_$ready_on,
                                   128  		 (rdn),
                                   129  		 (Enable printing ready messages after each request line.),
                                   130  		 flags.allow_command+flags.dont_summarize+flags.dont_list
    000101  00   000175 000541 
    000102  0a   001134 000067 
    000103  aa   430000 000000 
                                   131  
                                   132  	request	substitute_arguments,
                                   133  		 ssu_requests_$substitute_arguments,
                                   134  		 (substitute_args,sbag),
                                   135  		 (Perform substitution into a control string and print or return the expansion.),
                                   136  		 flags.allow_both
    000104  00   000200 000562 
    000105  0a   001152 000115 
    000106  aa   600000 000000 
                                   137  
                                   138  	request	subsystem_name,
                                   139  		 ssu_requests_$subsystem_name,
                                   140  		 (),
                                   141  		 (Return the name of this subsystem.),
                                   142  		 flags.allow_both+flags.dont_summarize+flags.dont_list
    000107  00   000203 000613 
    000110  0a   001176 000042 
    000111  aa   630000 000000 
                                   143  
                                   144  	request	subsystem_version,
                                   145  		 ssu_requests_$subsystem_version,
                                   146  		 (),
                                   147  		 (Return the version number of this subsystem.),
                                   148  		 flags.allow_both+flags.dont_summarize+flags.dont_list
    000112  00   000206 000624 
    000113  0a   001207 000054 
    000114  aa   630000 000000 
                                   149  
                                   150  	end_table standard_requests
                                   151  
                                   152  	end

NO LITERALS
     
NAME DEFINITIONS FOR ENTRY POINTS AND SEGDEFS

    001222  5a   000003 000000 
    001223  5a   000032 600000 
    001224  aa   000000 000000 
    001225  55   000013 000002 
    001226  5a   000002 400003 
    001227  55   000006 000013 
    001230  aa  023 163 163 165
    001231  aa  137 162 145 161
    001232  aa  165 145 163 164
    001233  aa  137 164 141 142
    001234  aa  154 145 163 137
    001235  55   000023 000003 
    001236  0a   000000 400000 
    001237  55   000016 000003 
    001240  aa  021 163 164 141         standard_requests
    001241  aa  156 144 141 162
    001242  aa  144 137 162 145
    001243  aa  161 165 145 163
    001244  aa  164 163 000 000
    001245  55   000002 000013 
    001246  6a   000000 400002 
    001247  55   000026 000003 
    001250  aa  014 163 171 155         symbol_table
    001251  aa  142 157 154 137
    001252  aa  164 141 142 154
    001253  aa  145 000 000 000

DEFINITIONS HASH TABLE

    001254  aa   000000 000015 
    001255  aa   000000 000000 
    001256  aa   000000 000000 
    001257  aa   000000 000000 
    001260  aa   000000 000000 
    001261  aa   000000 000000 
    001262  aa   000000 000000 
    001263  5a   000023 000000 
    001264  aa   000000 000000 
    001265  aa   000000 000000 
    001266  5a   000013 000000 
    001267  aa   000000 000000 
    001270  aa   000000 000000 
    001271  aa   000000 000000 

EXTERNAL NAMES

    001272  aa  021 163 165 142         subsystem_version
    001273  aa  163 171 163 164
    001274  aa  145 155 137 166
    001275  aa  145 162 163 151
    001276  aa  157 156 000 000
    001277  aa  016 163 165 142         subsystem_name
    001300  aa  163 171 163 164
    001301  aa  145 155 137 156
    001302  aa  141 155 145 000
    001303  aa  024 163 165 142         substitute_arguments
    001304  aa  163 164 151 164
    001305  aa  165 164 145 137
    001306  aa  141 162 147 165
    001307  aa  155 145 156 164
    001310  aa  163 000 000 000
    001311  aa  010 162 145 141         ready_on
    001312  aa  144 171 137 157
    001313  aa  156 000 000 000
    001314  aa  011 162 145 141         ready_off
    001315  aa  144 171 137 157
    001316  aa  146 146 000 000
    001317  aa  005 162 145 141         ready
    001320  aa  144 171 000 000
    001321  aa  004 161 165 151         quit
    001322  aa  164 000 000 000
    001323  aa  015 154 151 163         list_requests
    001324  aa  164 137 162 145
    001325  aa  161 165 145 163
    001326  aa  164 163 000 000
    001327  aa  011 154 151 163         list_help
    001330  aa  164 137 150 145
    001331  aa  154 160 000 000
    001332  aa  002 151 146 000         if
    001333  aa  004 150 145 154         help
    001334  aa  160 000 000 000
    001335  aa  016 145 170 145         execute_string
    001336  aa  143 165 164 145
    001337  aa  137 163 164 162
    001340  aa  151 156 147 000
    001341  aa  007 145 170 145         execute
    001342  aa  143 165 164 145
    001343  aa  010 145 170 145         exec_com
    001344  aa  143 137 143 157
    001345  aa  155 000 000 000
    001346  aa  002 144 157 000         do
    001347  aa  012 144 145 142         debug_mode
    001350  aa  165 147 137 155
    001351  aa  157 144 145 000
    001352  aa  006 141 156 163         answer
    001353  aa  167 145 162 000
    001354  aa  006 141 142 142         abbrev
    001355  aa  162 145 166 000
    001356  aa  022 163 165 155         summarize_requests
    001357  aa  155 141 162 151
    001360  aa  172 145 137 162
    001361  aa  145 161 165 145
    001362  aa  163 164 163 000
    001363  aa  015 163 145 154         self_identify
    001364  aa  146 137 151 144
    001365  aa  145 156 164 151
    001366  aa  146 171 000 000
    001367  aa  015 163 163 165         ssu_requests_
    001370  aa  137 162 145 161
    001371  aa  165 145 163 164
    001372  aa  163 137 000 000

NO TRAP POINTER WORDS

TYPE PAIR BLOCKS

    001373  aa   000004 000000 
    001374  55   000145 000050 
    001375  aa   000004 000000 
    001376  55   000145 000055 
    001377  aa   000004 000000 
    001400  55   000145 000061 
    001401  aa   000004 000000 
    001402  55   000145 000067 
    001403  aa   000004 000000 
    001404  55   000145 000072 
    001405  aa   000004 000000 
    001406  55   000145 000075 
    001407  aa   000004 000000 
    001410  55   000145 000077 
    001411  aa   000004 000000 
    001412  55   000145 000101 
    001413  aa   000004 000000 
    001414  55   000145 000105 
    001415  aa   000004 000000 
    001416  55   000145 000110 
    001417  aa   000004 000000 
    001420  55   000145 000111 
    001421  aa   000004 000000 
    001422  55   000145 000113 
    001423  aa   000004 000000 
    001424  55   000145 000117 
    001425  aa   000004 000000 
    001426  55   000145 000121 
    001427  aa   000004 000000 
    001430  55   000145 000124 
    001431  aa   000004 000000 
    001432  55   000145 000125 
    001433  aa   000004 000000 
    001434  55   000145 000130 
    001435  aa   000004 000000 
    001436  55   000145 000132 
    001437  aa   000004 000000 
    001440  55   000145 000134 
    001441  aa   000004 000000 
    001442  55   000145 000141 
    001443  aa   000001 000000 
    001444  aa   000000 000000 

INTERNAL EXPRESSION WORDS

    001445  5a   000151 000000 
    001446  5a   000153 000000 
    001447  5a   000155 000000 
    001450  5a   000157 000000 
    001451  5a   000161 000000 
    001452  5a   000163 000000 
    001453  5a   000165 000000 
    001454  5a   000167 000000 
    001455  5a   000171 000000 
    001456  5a   000173 000000 
    001457  5a   000175 000000 
    001460  5a   000177 000000 
    001461  5a   000201 000000 
    001462  5a   000203 000000 
    001463  5a   000205 000000 
    001464  5a   000207 000000 
    001465  5a   000211 000000 
    001466  5a   000213 000000 
    001467  5a   000215 000000 
    001470  5a   000217 000000 
    001471  aa   000000 000000 
LINKAGE INFORMATION
      
    000000  aa   000000 000000 
    000001  0a   001222 000000 
    000002  aa   000000 000000 
    000003  aa   000000 000000 
    000004  aa   000000 000000 
    000005  aa   000000 000000 
    000006  22   000010 000060 
    000007  a2   000000 000000 
    000010  9a   777770 0000 46         ssu_requests_|self_identify
    000011  5a   000246 0000 00
    000012  9a   777766 0000 46         ssu_requests_|summarize_requests
    000013  5a   000245 0000 00
    000014  9a   777764 0000 46         ssu_requests_|abbrev
    000015  5a   000244 0000 00
    000016  9a   777762 0000 46         ssu_requests_|answer
    000017  5a   000243 0000 00
    000020  9a   777760 0000 46         ssu_requests_|debug_mode
    000021  5a   000242 0000 00
    000022  9a   777756 0000 46         ssu_requests_|do
    000023  5a   000241 0000 00
    000024  9a   777754 0000 46         ssu_requests_|exec_com
    000025  5a   000240 0000 00
    000026  9a   777752 0000 46         ssu_requests_|execute
    000027  5a   000237 0000 00
    000030  9a   777750 0000 46         ssu_requests_|execute_string
    000031  5a   000236 0000 00
    000032  9a   777746 0000 46         ssu_requests_|help
    000033  5a   000235 0000 00
    000034  9a   777744 0000 46         ssu_requests_|if
    000035  5a   000234 0000 00
    000036  9a   777742 0000 46         ssu_requests_|list_help
    000037  5a   000233 0000 00
    000040  9a   777740 0000 46         ssu_requests_|list_requests
    000041  5a   000232 0000 00
    000042  9a   777736 0000 46         ssu_requests_|quit
    000043  5a   000231 0000 00
    000044  9a   777734 0000 46         ssu_requests_|ready
    000045  5a   000230 0000 00
    000046  9a   777732 0000 46         ssu_requests_|ready_off
    000047  5a   000227 0000 00
    000050  9a   777730 0000 46         ssu_requests_|ready_on
    000051  5a   000226 0000 00
    000052  9a   777726 0000 46         ssu_requests_|substitute_arguments
    000053  5a   000225 0000 00
    000054  9a   777724 0000 46         ssu_requests_|subsystem_name
    000055  5a   000224 0000 00
    000056  9a   777722 0000 46         ssu_requests_|subsystem_version
    000057  5a   000223 0000 00
SYMBOL INFORMATION
     
SYMBOL TABLE HEADER
     
    000000  aa   000000 000001 
    000001  aa   163171 155142 
    000002  aa   164162 145145 
    000003  aa   000000 000004 
    000004  aa   000000 114732 
    000005  aa   732732 062314 
    000006  aa   000000 114775 
    000007  aa   665131 631365 
    000010  aa   141154 155040 
    000011  aa   040040 040040 
    000012  aa   000024 000040 
    000013  aa   000034 000040 
    000014  aa   000044 000100 
    000015  aa   000002 000002 
    000016  aa   000064 000000 
    000017  aa   000000 000254 
    000020  aa   000000 000150 
    000021  aa   000000 000232 
    000022  aa   000244 000150 
    000023  aa   000064 000000 
    000024  aa   101114 115040 
    000025  aa   126145 162163 
    000026  aa   151157 156040 
    000027  aa   040066 056067 
    000030  aa   040040 117143 
    000031  aa   164157 142145 
    000032  aa   162040 061071 
    000033  aa   070066 040040 
    000034  aa   107112 157150 
    000035  aa   156163 157156 
    000036  aa   056123 171163 
    000037  aa   115141 151156 
    000040  aa   164056 141040 
    000041  aa   040040 040040 
    000042  aa   040040 040040 
    000043  aa   040040 040040 
    000044  aa   154151 163164 
    000045  aa   040040 040040 
    000046  aa   040040 040040 
    000047  aa   040040 040040 
    000050  aa   040040 040040 
    000051  aa   040040 040040 
    000052  aa   040040 040040 
    000053  aa   040040 040040 
    000054  aa   040040 040040 
    000055  aa   040040 040040 
    000056  aa   040040 040040 
    000057  aa   040040 040040 
    000060  aa   040040 040040 
    000061  aa   040040 040040 
    000062  aa   040040 040040 
    000063  aa   040040 040040 
    000064  aa   000000 000001 
    000065  aa   000000 000003 
    000066  aa   000102 000070 
    000067  aa   147740 446060 
    000070  aa   000000 114774 
    000071  aa   460660 600000 
    000072  aa   000120 000050 
    000073  aa   133055 020064 
    000074  aa   000000 113310 
    000075  aa   612334 200000 
    000076  aa   000132 000066 
    000077  aa   147714 750316 
    000100  aa   000000 114774 
    000101  aa   453561 000000 
    000102  aa   076163 160145          >special_ldd>install>MR12.0-1206>ssu_request_tables_.alm
    000103  aa   143151 141154 
    000104  aa   137154 144144 
    000105  aa   076151 156163 
    000106  aa   164141 154154 
    000107  aa   076115 122061 
    000110  aa   062056 060055 
    000111  aa   061062 060066 
    000112  aa   076163 163165 
    000113  aa   137162 145161 
    000114  aa   165145 163164 
    000115  aa   137164 141142 
    000116  aa   154145 163137 
    000117  aa   056141 154155 
    000120  aa   076154 144144          >ldd>include>ssu_request_macros.incl.alm
    000121  aa   076151 156143 
    000122  aa   154165 144145 
    000123  aa   076163 163165 
    000124  aa   137162 145161 
    000125  aa   165145 163164 
    000126  aa   137155 141143 
    000127  aa   162157 163056 
    000130  aa   151156 143154 
    000131  aa   056141 154155 
    000132  aa   076163 160145          >special_ldd>install>MR12.0-1206>stack_header.incl.alm
    000133  aa   143151 141154 
    000134  aa   137154 144144 
    000135  aa   076151 156163 
    000136  aa   164141 154154 
    000137  aa   076115 122061 
    000140  aa   062056 060055 
    000141  aa   061062 060066 
    000142  aa   076163 164141 
    000143  aa   143153 137150 
    000144  aa   145141 144145 
    000145  aa   162056 151156 
    000146  aa   143154 056141 
    000147  aa   154155 040040 
               MULTICS ASSEMBLY CROSS REFERENCE LISTING

   Value        Symbol                   Source file   Line number

         115    .._00000.call            ssu_request_tables_:       39.
         635    .._00000.info            ssu_request_tables_:       39.
         211    .._00000.names           ssu_request_tables_:       39.
         120    .._00001.call            ssu_request_tables_:       45.
         643    .._00001.info            ssu_request_tables_:       45.
         222    .._00001.names           ssu_request_tables_:       45.
         123    .._00002.call            ssu_request_tables_:       51.
         660    .._00002.info            ssu_request_tables_:       51.
         233    .._00002.names           ssu_request_tables_:       51.
         126    .._00003.call            ssu_request_tables_:       56.
         676    .._00003.info            ssu_request_tables_:       56.
         254    .._00003.names           ssu_request_tables_:       56.
         131    .._00004.call            ssu_request_tables_:       62.
         712    .._00004.info            ssu_request_tables_:       62.
         265    .._00004.names           ssu_request_tables_:       62.
         134    .._00005.call            ssu_request_tables_:       68.
         726    .._00005.info            ssu_request_tables_:       68.
         276    .._00005.names           ssu_request_tables_:       68.
         137    .._00006.call            ssu_request_tables_:       74.
         752    .._00006.info            ssu_request_tables_:       74.
         307    .._00006.names           ssu_request_tables_:       74.
         142    .._00007.call            ssu_request_tables_:       80.
         773    .._00007.info            ssu_request_tables_:       80.
         330    .._00007.names           ssu_request_tables_:       80.
         145    .._00010.call            ssu_request_tables_:       86.
        1003    .._00010.info            ssu_request_tables_:       86.
         351    .._00010.names           ssu_request_tables_:       86.
         150    .._00011.call            ssu_request_tables_:       91.
        1025    .._00011.info            ssu_request_tables_:       91.
         372    .._00011.names           ssu_request_tables_:       91.
         153    .._00012.call            ssu_request_tables_:       97.
        1041    .._00012.info            ssu_request_tables_:       97.
         403    .._00012.names           ssu_request_tables_:       97.
         156    .._00013.call            ssu_request_tables_:      102.
        1055    .._00013.info            ssu_request_tables_:      102.
         414    .._00013.names           ssu_request_tables_:      102.
         161    .._00014.call            ssu_request_tables_:      107.
        1067    .._00014.info            ssu_request_tables_:      107.
         435    .._00014.names           ssu_request_tables_:      107.
         164    .._00015.call            ssu_request_tables_:      112.
        1103    .._00015.info            ssu_request_tables_:      112.
         456    .._00015.names           ssu_request_tables_:      112.
         167    .._00016.call            ssu_request_tables_:      118.
        1110    .._00016.info            ssu_request_tables_:      118.
         477    .._00016.names           ssu_request_tables_:      118.
         172    .._00017.call            ssu_request_tables_:      124.
        1116    .._00017.info            ssu_request_tables_:      124.
         520    .._00017.names           ssu_request_tables_:      124.
         175    .._00020.call            ssu_request_tables_:      130.
        1134    .._00020.info            ssu_request_tables_:      130.
         541    .._00020.names           ssu_request_tables_:      130.
         200    .._00021.call            ssu_request_tables_:      136.
        1152    .._00021.info            ssu_request_tables_:      136.
         562    .._00021.names           ssu_request_tables_:      136.
         203    .._00022.call            ssu_request_tables_:      142.
        1176    .._00022.info            ssu_request_tables_:      142.
         613    .._00022.names           ssu_request_tables_:      142.
         206    .._00023.call            ssu_request_tables_:      148.
        1207    .._00023.info            ssu_request_tables_:      148.
         624    .._00023.names           ssu_request_tables_:      148.
      600000    .dft_mrsf                ssu_request_tables_:       34.
           0    .dft_mruf                ssu_request_tables_:       34.
      400000    .dft_sf                  ssu_request_tables_:       34,   39,   56,   91,  102,  107,  112.
           0    .dft_uf                  ssu_request_tables_:       34,   39,   45,   51,   56,   62,   68,   74,   80,   86,
                                                                    91,   97,  102,  107,  112,  118,  124,  130,  136,  142,  148.
       40064    .rc                      ssu_request_tables_:       34,   39,   45,   51,   56,   62,   68,   74,   80,   86,
                                                                    91,   97,  102,  107,  112,  118,  124,  130,  136,  142,
                                                                   148,  150.
      630000    .sf                      ssu_request_tables_:       39,   45,   51,   56,   62,   68,   74,   80,   86,   91,
                                                                    97,  102,  107,  112,  118,  124,  130,  136,  142,  148.
           0    .uf                      ssu_request_tables_:       39,   45,   51,   56,   62,   68,   74,   80,   86,   91,
                                                                    97,  102,  107,  112,  118,  124,  130,  136,  142,  148.
                abbrev                   ssu_request_tables_:       51.
                answer                   ssu_request_tables_:       56.
         115    calls                    ssu_request_tables_:       39,   45,   51,   56,   62,   68,   74,   80,   86,   91,
                                                                    97,  102,  107,  112,  118,  124,  130,  136,  142,  148,
                                         ssu_request_macros:       311,  314.
        1170    call_offset              stack_header:        80.
                debug_mode               ssu_request_tables_:       62.
                do                       ssu_request_tables_:       68.
        1174    entry_offset             stack_header:        84.
                execute                  ssu_request_tables_:       80.
                execute_string           ssu_request_tables_:       86.
                exec_com                 ssu_request_tables_:       74.
      200000    flags.allow_af           ssu_request_tables_:       34,
                                         ssu_request_macros:        33.
      600000    flags.allow_both         ssu_request_tables_:       51,   68,   74,   80,   86,   97,  136,  142,  148,
                                         ssu_request_macros:        34.
      400000    flags.allow_command      ssu_request_tables_:       34,   45,   62,  118,  124,  130,
                                         ssu_request_macros:        32.
       10000    flags.dont_list          ssu_request_tables_:       62,  118,  124,  130,  142,  148,
                                         ssu_request_macros:        40.
       20000    flags.dont_summarize     ssu_request_tables_:       45,   62,  118,  124,  130,  142,  148,
                                         ssu_request_macros:        39.
       40000    flags.multics_request    ssu_request_macros:        37.
      100000    flags.unimplemented      ssu_request_macros:        36.
        4000    flags.unknown            ssu_request_macros:        42.
                help                     ssu_request_tables_:       91.
                if                       ssu_request_tables_:       97.
         635    info                     ssu_request_tables_:       39,   45,   51,   56,   62,   68,   74,   80,   86,   91,
                                                                    97,  102,  107,  112,  118,  124,  130,  136,  142,  148,
                                         ssu_request_macros:       313,  314.
                list_help                ssu_request_tables_:      102.
                list_requests            ssu_request_tables_:      107.
         211    names                    ssu_request_tables_:       39,   45,   51,   56,   62,   68,   74,   80,   86,   91,
                                                                    97,  102,  107,  112,  118,  124,  130,  136,  142,  148,
                                         ssu_request_macros:       312,  314.
        1171    push_offset              stack_header:        81.
                quit                     ssu_request_tables_:      112.
                ready                    ssu_request_tables_:      118.
                ready_off                ssu_request_tables_:      124.
                ready_on                 ssu_request_tables_:      130.
        1173    return_no_pop_offset     stack_header:        83.
        1172    return_offset            stack_header:        82.
                self_identify            ssu_request_tables_:       39.
                ssu_requests_            ssu_request_tables_:       39,   45,   51,   56,   62,   68,   74,   80,   86,   91,
                                                                    97,  102,  107,  112,  118,  124,  130,  136,  142,  148.
          73    stach_header.trace_top_ptr     stack_header:        62.
          66    stack_header.assign_linkage_ptr      stack_header:        59.
          32    stack_header.bar_mode_sp       stack_header:        42.
          36    stack_header.call_op_ptr       stack_header:        44.
          10    stack_header.clr_ptr     stack_header:        27.
           6    stack_header.combined_stat_ptr       stack_header:        25.
           4    stack_header.cpm_data_ptr      stack_header:        24.
          13    stack_header.cpm_enabled       stack_header:        32.
          13    stack_header.cur_lot_size      stack_header:        31.
          64    stack_header.ect_ptr     stack_header:        58.
          46    stack_header.entry_op_ptr      stack_header:        49.
          70    stack_header.heap_header_ptr   stack_header:        60.
          74    stack_header.in_trace    stack_header:        63.
          52    stack_header.isot_ptr    stack_header:        52.
          26    stack_header.lot_ptr     ssu_request_tables_:       39,   45,   51,   56,   62,   68,   74,   80,   86,   91,
                                                                    97,  102,  107,  112,  118,  124,  130,  136,  142,  148,
                                         stack_header:        39.
          12    stack_header.main_proc_invoked       stack_header:        29.
          12    stack_header.max_lot_size      stack_header:        28.
          20    stack_header.parent_ptr  stack_header:        36.
          34    stack_header.pl1_operators_ptr       stack_header:        43.
          40    stack_header.push_op_ptr       stack_header:        46.
          42    stack_header.return_op_ptr     stack_header:        47.
          44    stack_header.ret_no_pop_op_ptr       stack_header:        48.
          62    stack_header.rnt_ptr     stack_header:        57.
          12    stack_header.run_unit_depth    stack_header:        30.
          54    stack_header.sct_ptr     stack_header:        53.
          30    stack_header.signal_ptr  stack_header:        41.
          22    stack_header.stack_begin_ptr   stack_header:        37.
          24    stack_header.stack_end_ptr     stack_header:        38.
          14    stack_header.system_free_ptr   stack_header:        33.
          60    stack_header.sys_link_info_ptr       stack_header:        56.
          72    stack_header.trace_frames      stack_header:        61.
          50    stack_header.trans_op_tv_ptr   stack_header:        51.
          56    stack_header.unwinder_ptr      stack_header:        54.
          16    stack_header.user_free_ptr     stack_header:        34.
         100    stack_header_end         stack_header:        64.
           0    standard_requests        ssu_request_tables_:       34.
          24    standard_requests.rc     ssu_request_tables_:       34,  150.
                substitute_arguments     ssu_request_tables_:      136.
                subsystem_name           ssu_request_tables_:      142.
                subsystem_version        ssu_request_tables_:      148.
                summarize_requests       ssu_request_tables_:       45.
           0    tables                   ssu_request_tables_:       34,   39,   45,   51,   56,   62,   68,   74,   80,   86,
                                                                    91,   97,  102,  107,  112,  118,  124,  130,  136,  142,
                                                                   148,
                                         ssu_request_macros:       310,  314.
           0    trace_frames.count       stack_header:        69.
           1    trace_frames.top_ptr     stack_header:        70.
         551    tv_offset                stack_header:        75,   80,   81,   82,   83,   84.


NO FATAL ERRORS


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
