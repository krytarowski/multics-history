ASSEMBLY LISTING OF SEGMENT >dumps>old>recomp>db_ext_stat_.alm                
ASSEMBLED ON:	11/04/82  1850.3 mst Thu
OPTIONS USED:	list 
ASSEMBLED BY:	ALM Version  6.4  April 1981    
ASSEMBLER CREATED:	11/03/82  1423.6 mst Wed

                                     1  " ***********************************************************
                                     2  " *                                                         *
                                     3  " * Copyright, (C) Honeywell Information Systems Inc., 1982 *
                                     4  " *                                                         *
                                     5  " * Copyright (c) 1972 by Massachusetts Institute of        *
                                     6  " * Technology and Honeywell Information Systems, Inc.      *
                                     7  " *                                                         *
                                     8  " ***********************************************************
                                     9  
                                    10  "     db_ext_stat_.alm contains the external static data for debug.
                                    11  "
                                    12  "     Modified 7/75 by S.E. Barr to add instructions to restart an EIS break.
                                    13  "
                                    14  "     dcl  1 db_ext_stat_$db_ext_stat_ ext static aligned,
                                    15  "
                                    16  "       2 debug_input char(32) aligned,		/* Input switch name.  Initially 'user_input' */
                                    17  "       2 debug_output char(32) aligned,	/* output switch name.  Initially 'user_output' */
                                    18  "       2 return_label label,			/* The label used to do a non local goto out of debug when
                                    19  "					  it was entered via a fault.  It will go to debug in
                                    20  "					  another frame.  */
                                    21  "
                                    22  "       2 debug_io_ptr(2) ptr,		/* pointers to iocb for i/o 
                                    23  "					  1 = input switch iocb ptr
                                    24  "					  2 = output switch iocb ptr      */
                                    25  "       2 flags aligned,
                                    26  "         3 debug_io_attach(2) bit(1) unaligned, 	/* 1= debug made the attachment */
                                    27  "         3 debug_io_open(2) bit(1) unaligned,	/* 1 = debug opened the switch */
                                    28  "         3 in_debug bit(1) unaligned,		/* Switch for the any_other condition.  0 = send the
                                    29  "					  condition on.  1 = use the debug condition handler */
                                    30  "	3 static_handler_call bit (1) unal,	/* ON if static handler */
                                    31  "         3 pad bit(30) unaligned,		/* Reserved for future use */
                                    32  "       2 instructions (9) bit (36) aligned	/* Instructions to restart EIS breaks */
                                    33  "
                                    34  "
    000000                          35  	name      db_ext_stat_
                        000010      36  	segdef     db_ext_stat_
                        000000      37  	segdef	break_instructions
                                    38  "
                                    39  "  These instructions are used to restart a break at an EIS instruction.  The EIS instruction must be restored
                                    40  "  because the hardware may restart an EIS instruction in certain cases.  The break restart code restores the EIS
                                    41  "  instruction and places a transfer in the word following the EIS instruction.  The transfer is to these instructions
                                    42  "  which have been copied into the break map header in the object segment.  The instructions put the mme2 back
                                    43  "  into the text and restore the word following the eis instruction.
                                    44  "
    000000                          45  break_instructions:
                                    46  
    000000  aa   000016 7540 04     47  	sti	ind_save-*,ic
    000001  aa   000012 7550 04     48  	sta	a_reg-*,ic
    000002  aa   000012 2350 04     49  	lda	mme2-*,ic
    000003  aa   000006 7550 24     50  	sta	mme2_indw-*,ic*
    000004  aa   000011 2350 04     51  	lda	inst-*,ic
    000005  aa   000005 7550 24     52  	sta	inst_indw-*,ic*
    000006  aa   000005 2350 04     53  	lda	a_reg-*,ic
    000007  aa   000007 6340 04     54  	ldi	ind_save-*,ic
    000010  aa   000002 7100 24     55  	tra	inst_indw-*,ic*
                                    56  
    000011  aa   000000 0000 00     57  mme2_indw:	arg	0		"  Offset of EIS break
    000012  aa   000000 0000 00     58  inst_indw:	arg	0		"  Offset of instruction following EIS break
    000013  aa   000000 0000 00     59  a_reg:		arg	0		"  Contents of a reg.
    000014  aa   000000 0000 00     60  mme2:		arg	0		"  Used to save mme2
    000015  aa   000000 0000 00     61  inst:		arg	0		"  Used to save instruction following EIS break
    000016  aa   000000 0000 00     62  ind_save:		arg	0		"  Used to save indicators
                                    63  
                                    64  	use	linkc
                                    65  	join	/link/linkc
    000010                          66  db_ext_stat_:
    000010  aa  165 163 145 162     67  	aci	"user_input                      "
    000011  aa  137 151 156 160
    000012  aa  165 164 040 040
    000013  aa  040 040 040 040
    000014  aa  040 040 040 040
    000015  aa  040 040 040 040
    000016  aa  040 040 040 040
    000017  aa  040 040 040 040
    000020  aa  165 163 145 162     68  	aci	"user_output                     "
    000021  aa  137 157 165 164
    000022  aa  160 165 164 040
    000023  aa  040 040 040 040
    000024  aa  040 040 040 040
    000025  aa  040 040 040 040
    000026  aa  040 040 040 040
    000027  aa  040 040 040 040
    000030                          69  	bss	,9
                                    70  
                                    71  	end

NO LITERALS
     
NAME DEFINITIONS FOR ENTRY POINTS AND SEGDEFS

    000020  5a   000003 000000 
    000021  5a   000040 600000 
    000022  aa   000000 000000 
    000023  55   000012 000002 
    000024  5a   000002 400003 
    000025  55   000006 000012 
    000026  aa  014 144 142 137
    000027  aa  145 170 164 137
    000030  aa  163 164 141 164
    000031  aa  137 000 000 000
    000032  55   000022 000003 
    000033  0a   000000 400000 
    000034  55   000015 000003 
    000035  aa  022 142 162 145         break_instructions
    000036  aa  141 153 137 151
    000037  aa  156 163 164 162
    000040  aa  165 143 164 151
    000041  aa  157 156 163 000
    000042  55   000031 000012 
    000043  2a   000010 400001 
    000044  55   000025 000003 
    000045  aa  014 144 142 137         db_ext_stat_
    000046  aa  145 170 164 137
    000047  aa  163 164 141 164
    000050  aa  137 000 000 000
    000051  55   000002 000022 
    000052  6a   000000 400002 
    000053  55   000034 000003 
    000054  aa  014 163 171 155         symbol_table
    000055  aa  142 157 154 137
    000056  aa  164 141 142 154
    000057  aa  145 000 000 000

DEFINITIONS HASH TABLE

    000060  aa   000000 000015 
    000061  aa   000000 000000 
    000062  aa   000000 000000 
    000063  5a   000012 000000 
    000064  aa   000000 000000 
    000065  aa   000000 000000 
    000066  aa   000000 000000 
    000067  5a   000031 000000 
    000070  aa   000000 000000 
    000071  aa   000000 000000 
    000072  5a   000022 000000 
    000073  aa   000000 000000 
    000074  aa   000000 000000 
    000075  aa   000000 000000 

NO EXTERNAL NAMES

NO TRAP POINTER WORDS

TYPE PAIR BLOCKS

    000076  aa   000001 000000 
    000077  aa   000000 000000 

INTERNAL EXPRESSION WORDS

LINKAGE INFORMATION
      
    000000  aa   000000 000000 
    000001  0a   000020 000000 
    000002  aa   000000 000000 
    000003  aa   000000 000000 
    000004  aa   000000 000000 
    000005  aa   000000 000000 
    000006  22   000042 000042 
    000007  a2   000000 000032 
SYMBOL INFORMATION
     
SYMBOL TABLE HEADER
     
    000000  aa   000000 000001 
    000001  aa   163171 155142 
    000002  aa   164162 145145 
    000003  aa   000000 000004 
    000004  aa   000000 111316 
    000005  aa   510113 575622 
    000006  aa   000000 111320 
    000007  aa   103101 444740 
    000010  aa   141154 155040 
    000011  aa   040040 040040 
    000012  aa   000024 000040 
    000013  aa   000034 000040 
    000014  aa   000044 000100 
    000015  aa   000002 000002 
    000016  aa   000064 000000 
    000017  aa   000000 000121 
    000020  aa   000000 000103 
    000021  aa   000000 000106 
    000022  aa   000113 000103 
    000023  aa   000064 000000 
    000024  aa   101114 115040 
    000025  aa   126145 162163 
    000026  aa   151157 156040 
    000027  aa   040066 056064 
    000030  aa   040040 101160 
    000031  aa   162151 154040 
    000032  aa   061071 070061 
    000033  aa   040040 040040 
    000034  aa   110157 154155 
    000035  aa   163164 145144 
    000036  aa   164056 123171 
    000037  aa   163115 141151 
    000040  aa   156164 056155 
    000041  aa   040040 040040 
    000042  aa   040040 040040 
    000043  aa   040040 040040 
    000044  aa   154151 163164 
    000045  aa   040040 040040 
    000046  aa   040040 040040 
    000047  aa   040040 040040 
    000050  aa   040040 040040 
    000051  aa   040040 040040 
    000052  aa   040040 040040 
    000053  aa   040040 040040 
    000054  aa   040040 040040 
    000055  aa   040040 040040 
    000056  aa   040040 040040 
    000057  aa   040040 040040 
    000060  aa   040040 040040 
    000061  aa   040040 040040 
    000062  aa   040040 040040 
    000063  aa   040040 040040 
    000064  aa   000000 000001 
    000065  aa   000000 000001 
    000066  aa   000072 000042 
    000067  aa   113171 052607 
    000070  aa   000000 111320 
    000071  aa   006035 200000 
    000072  aa   076144 165155          >dumps>old>recomp>db_ext_stat_.alm
    000073  aa   160163 076157 
    000074  aa   154144 076162 
    000075  aa   145143 157155 
    000076  aa   160076 144142 
    000077  aa   137145 170164 
    000100  aa   137163 164141 
    000101  aa   164137 056141 
    000102  aa   154155 040040 
               MULTICS ASSEMBLY CROSS REFERENCE LISTING

   Value        Symbol                   Source file   Line number

          13    a_reg                    db_ext_stat_:        48,   53,   59.
           0    break_instructions       db_ext_stat_:        37,   45.
          10    db_ext_stat_             db_ext_stat_:        36,   66.
          16    ind_save                 db_ext_stat_:        47,   54,   62.
          15    inst                     db_ext_stat_:        51,   61.
          12    inst_indw                db_ext_stat_:        52,   55,   58.
          10    linkc                    db_ext_stat_:        64,   65.
          14    mme2                     db_ext_stat_:        49,   60.
          11    mme2_indw                db_ext_stat_:        50,   57.


NO FATAL ERRORS


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
