ASSEMBLY LISTING OF SEGMENT >special_ldd>install>MR12.0-1206>ssu_et_.alm                     
ASSEMBLED ON:	11/05/86  1038.7 mst Wed
OPTIONS USED:	list 
ASSEMBLED BY:	ALM Version  6.7  October 1986  
ASSEMBLER CREATED:	10/08/86  1557.5 mst Wed

                                     1  " ***********************************************************
                                     2  " *                                                         *
                                     3  " * Copyright, (C) Honeywell Information Systems Inc., 1982 *
                                     4  " *                                                         *
                                     5  " ***********************************************************
                                     6  
                                     7  
                                     8  " Subsystem Utilities Error Table
                                     9  "
                                    10  " Created:  3 May 1980 by W. Olin Sibert
                                    11  " Modified: 15 February 1982 by G. Palter to add null_request_line and not_in_standalone_invocation
                                    12  " Modified: 26 February 1982 by G. Palter to add program_interrupt
                                    13  " Modified: 14 July 1982 by Jay Pattin to add exec_com_aborted
                                    14  
                                    15  
                                    16  	include	et_macros
                                   1-1  " Begin include file ...... et_macros.incl.alm
                                   1-2  "	Written 6/15/77 by Noel I. Morris
                                   1-3  "	Modified '82 so error code entries are in first page of segment.
                                   1-4  
                                   1-5  " This include file contains macros for generating error tables
                                   1-6  " for both system and non-system use.
                                   1-7  
                                   1-8  " ET MACRO
                                   1-9  "
                                  1-10  " This macro is used to initialize the error table for either
                                  1-11  " system or non-system use.  It is invoked at the beginning of
                                  1-12  " the error table as follows:
                                  1-13  "
                                  1-14  "	et	table_name{,system}
                                  1-15  "
                                  1-16  
                                  1-17  macro	et
                              1   1-18  	maclist	on
                              2   1-19  
                              3   1-20  	name	&1
                              4   1-21  
                              5   1-22  &^=&2,system&[
                              6   1-23  
                              7   1-24  	include	stack_header
                              8   1-25  
                              9   1-26  
                             10   1-27  
                             11   1-28  	use	codes
                             12   1-29  .code_start:
                             13   1-30  
                             14   1-31  	use	past_codes
                             15   1-32  .code_end:
                             16   1-33  
                             17   1-34  	join	/link/codes,past_codes
                             18   1-35  
                             19   1-36  	use	messages
                             20   1-37  
                             21   1-38  .trapproc:
                             22   1-39  	epaq	0,ic
                             23   1-40  	eax0	0,au
                             24   1-41  	epbpsb	sp|0
                             25   1-42  	lprplp	sb|stack_header.lot_ptr,*au
                             26   1-43  	eax1	.code_start         
                             27   1-44  .loop:	stx0	lp|0,x1
                             28   1-45  	eax1	1,x1
                             29   1-46  	cmpx1	.code_end,du
                             30   1-47  	tmi	.loop-*,ic
                             31   1-48  	short_return
                             32   1-49  
                             33   1-50  	firstref	<*text>|.trapproc
                             34   1-51  
                             35   1-52  &;	use	codes
                             36   1-53  	use	messages
                             37   1-54  
                             38   1-55  	join	/text/codes,messages
                             39   1-56  
                             40   1-57  &]
                             41   1-58  
                             42   1-59  	bool	.segno,77777
                             43   1-60  
                             44   1-61  	maclist	off
                             45   1-62  
                             46   1-63  	&end
                                  1-64  
                                  1-65  
                                  1-66  
                                  1-67  " EC MACRO
                                  1-68  "
                                  1-69  " This macro is used to define an error code as shown:
                                  1-70  "
                                  1-71  "	ec	name,{short_mess},(long_mess)
                                  1-72  "
                                  1-73  " If more than a single name is to be defined for a given message,
                                  1-74  " a list of names separated by commas and enclosed in parentheses
                                  1-75  " must be given.   short_mess must be 8 or less characters.  If omitted,
                                  1-76  " the short_mess will be set to the name.  long_mess is enclosed
                                  1-77  " in parentheses in order to cause ALM to ignore embedded blanks.  Please
                                  1-78  " note that double quote characters in either short_mess or long_mess
                                  1-79  " must be doubled in order to make the ALM assembly work properly.
                                  1-80  " Note that a macro invocation line terminated by a comma will cause that
                                  1-81  " statement to be continued on the next line.
                                  1-82  
                                  1-83  macro	ec
                              1   1-84  	use	codes
                              2   1-85  
                              3   1-86  	maclist	on,save
                              4   1-87  &(1	segdef  &i
                              5   1-88  &)	maclist	restore
                              6   1-89  &(1&i:
                              7   1-90  &)	maclist	object,save
                              8   1-91  	zero	.segno,&U
                              9   1-92  	maclist	restore
                             10   1-93  	use	messages
                             11   1-94  &^=&l2,0&[	shortname    &2
                             12   1-95  &;	shortname    &1
                             13   1-96  &]
                             14   1-97  &U:
                             15   1-98  	maclist	on,save
                             16   1-99  	acc  "&3"
                             17  1-100  
                             18  1-101  	maclist	restore
                             19  1-102  	&end
                                 1-103  
                                 1-104  macro	shortname
                              1  1-105  	maclist	on,save
                              2  1-106  	aci  "&1",8
                              3  1-107  	maclist	restore
                              4  1-108  	&end
                                 1-109  
                                 1-110  
                                 1-111  
                                 1-112  " A typical error table source program might have the following format:
                                 1-113  "
                                 1-114  "	include	et_macros
                                 1-115  "
                                 1-116  "	et	name_of_error_table
                                 1-117  "
                                 1-118  "	ec	error_code_1,ecode1,(This is error code 1.)
                                 1-119  "
                                 1-120  "	ec	error_code_2,ecode2,(This is error code 2.)
                                 1-121  "
                                 1-122  "	:	     :	      :		:
                                 1-123  "
                                 1-124  "	ec	error_code_n,ecoden,(This is the nth error code.)
                                 1-125  "
                                 1-126  "	end
                                 1-127  "
                                 1-128  
                                 1-129  " End of include file ...... et_macros.incl.alm
                                 1-130  
                                    17  
                                    18  
                                    19  	et	ssu_et_
                                        
    000000                              	name	ssu_et_
                                        
                                        
                                        
                                        	include	stack_header
                                   2-1  "	BEGIN INCLUDE FILE ... stack_header.incl.alm  3/72  Bill Silver
                                   2-2  "
                                   2-3  "	modified 7/76 by M. Weaver for *system links and more system use of areas
                                   2-4  "	modified 3/77 by M. Weaver  to add rnt_ptr
                                   2-5  "	modified 7/77 by S. Webber to add run_unit_depth and assign_linkage_ptr
                                   2-6  "	modified 6/83 by J. Ives to add trace_frames and in_trace.
                                   2-7  
                                   2-8  " HISTORY COMMENTS:
                                   2-9  "  1) change(86-06-24,DGHowe), approve(86-06-24,MCR7396),
                                  2-10  "     audit(86-08-05,Schroth), install(86-11-03,MR12.0-1206):
                                  2-11  "     added the heap_header_ptr definition
                                  2-12  "  2) change(86-08-12,Kissel), approve(86-08-12,MCR7473),
                                  2-13  "     audit(86-10-10,Fawcett), install(86-11-03,MR12.0-1206):
                                  2-14  "     Modified to support control point management.  These changes were
                                  2-15  "     actually made in February 1985 by G. Palter.
                                  2-16  "  3) change(86-10-22,Fawcett), approve(86-10-22,MCR7473),
                                  2-17  "     audit(86-10-22,Farley), install(86-11-03,MR12.0-1206):
                                  2-18  "     Remove the old_lot pointer and replace it with cpm_data_ptr. Use the 18
                                  2-19  "     bit pad after cur_lot_size for the cpm_enabled. This was done to save
                                  2-20  "     some space int the stack header and change the cpd_ptr unal to
                                  2-21  "     cpm_data_ptr (ITS pair).
                                  2-22  "                                                      END HISTORY COMMENTS
                                  2-23  
                        000004    2-24  	equ	stack_header.cpm_data_ptr,4		ptr to control point for this stack
                        000006    2-25  	equ	stack_header.combined_stat_ptr,6	ptr to separate static area
                                  2-26  
                        000010    2-27  	equ	stack_header.clr_ptr,8		ptr to area containing linkage sections
                        000012    2-28  	equ	stack_header.max_lot_size,10		number of words allowed in lot (DU)
                        000012    2-29  	equ	stack_header.main_proc_invoked,10	nonzero if main proc was invoked in run unit (DL)
                        000012    2-30  	equ	stack_header.run_unit_depth,10	number of active run units stacked (DL)
                        000013    2-31  	equ	stack_header.cur_lot_size,11		DU number of words (entries) in lot
                        000013    2-32            equ	stack_header.cpm_enabled,11		DL  non-zero if control point management is enabled
                        000014    2-33  	equ	stack_header.system_free_ptr,12	ptr to system storage area
                        000016    2-34  	equ	stack_header.user_free_ptr,14		ptr to user storage area
                                  2-35  
                        000020    2-36  	equ	stack_header.parent_ptr,16		ptr to parent stack or null
                        000022    2-37  	equ	stack_header.stack_begin_ptr,18	ptr to first stack frame
                        000024    2-38  	equ	stack_header.stack_end_ptr,20		ptr to next useable stack frame
                        000026    2-39  	equ	stack_header.lot_ptr,22		ptr to the lot for the current ring
                                  2-40  
                        000030    2-41  	equ	stack_header.signal_ptr,24		ptr to signal proc for current ring
                        000032    2-42  	equ	stack_header.bar_mode_sp,26		value of sp before entering bar mode
                        000034    2-43  	equ	stack_header.pl1_operators_ptr,28	ptr: pl1_operators_$operator_table
                        000036    2-44  	equ	stack_header.call_op_ptr,30		ptr to standard call operator
                                  2-45  
                        000040    2-46  	equ	stack_header.push_op_ptr,32		ptr to standard push operator
                        000042    2-47  	equ	stack_header.return_op_ptr,34		ptr to standard return operator
                        000044    2-48  	equ	stack_header.ret_no_pop_op_ptr,36	ptr: stand. return/ no pop operator
                        000046    2-49  	equ	stack_header.entry_op_ptr,38		ptr to standard entry operator
                                  2-50  
                        000050    2-51  	equ	stack_header.trans_op_tv_ptr,40	ptr to table of translator operator ptrs
                        000052    2-52  	equ	stack_header.isot_ptr,42		pointer to ISOT
                        000054    2-53  	equ	stack_header.sct_ptr,44		pointer to System Condition Table
                        000056    2-54  	equ	stack_header.unwinder_ptr,46		pointer to unwinder for current ring
                                  2-55  
                        000060    2-56  	equ	stack_header.sys_link_info_ptr,48	ptr to *system link name table
                        000062    2-57  	equ	stack_header.rnt_ptr,50		ptr to reference name table
                        000064    2-58  	equ	stack_header.ect_ptr,52		ptr to event channel table
                        000066    2-59  	equ	stack_header.assign_linkage_ptr,54	ptr to area for hcs_$assign_linkage calls
                        000070    2-60  	equ	stack_header.heap_header_ptr,56	ptr to heap header.
                        000072    2-61  	equ	stack_header.trace_frames,58		stack of trace_catch_ frames
                        000073    2-62  	equ	stach_header.trace_top_ptr,59		trace pointer
                        000074    2-63  	equ	stack_header.in_trace,60		trace antirecurse bit
                        000100    2-64  	equ	stack_header_end,64			length of stack header
                                  2-65  
                                  2-66  
                                  2-67  
                                  2-68  
                        000000    2-69  	equ	trace_frames.count,0		number of trace frames on stack
                        000001    2-70  	equ	trace_frames.top_ptr,1		packed pointer to top one
                                  2-71  
                                  2-72  "	The  following constant is an offset within the  pl1  operators table.
                                  2-73  "	It  references a  transfer vector table.
                                  2-74  
                        000551    2-75  	bool	tv_offset,551
                                  2-76  
                                  2-77  
                                  2-78  "	The  following constants are offsets within this transfer vector table.
                                  2-79  
                        001170    2-80  	equ	call_offset,tv_offset+271
                        001171    2-81  	equ	push_offset,tv_offset+272
                        001172    2-82  	equ	return_offset,tv_offset+273
                        001173    2-83  	equ	return_no_pop_offset,tv_offset+274
                        001174    2-84  	equ	entry_offset,tv_offset+275
                                  2-85  
                                  2-86  
                                  2-87  " 	END INCLUDE FILE stack_header.incl.alm
                                        
                                        
                                        
                                        	use	codes
    000010                              .code_start:
                                        
                                        	use	past_codes
    000033                              .code_end:
                                        
                                        	join	/link/codes,past_codes
                                        
                                        	use	messages
                                        
    000000                              .trapproc:
    000000  aa   000000 2130 04         	epaq	0,ic
    000001  aa   000000 6200 01         	eax0	0,au
    000002  aa  6 00000 3731 00         	epbpsb	sp|0
    000003  aa  7 00026 7641 61         	lprplp	sb|stack_header.lot_ptr,*au
    000004  8a   000010 6210 00         	eax1	.code_start         
    000005  aa  4 00000 7401 11         .loop:	stx0	lp|0,x1
    000006  aa   000001 6210 11         	eax1	1,x1
    000007  8a   000033 1010 03         	cmpx1	.code_end,du
    000010  aa   777775 6040 04         	tmi	.loop-*,ic
    000011  aa  7 00044 7101 20         	short_return
                                        
    000012                              	firstref	<*text>|.trapproc
                                        
                                        
                                        
                        077777          	bool	.segno,77777
                                        
                                    20  
                                    21  	ec	active_function_error,actfncer,
                                    22  		 (An active function error occurred while executing a Multics AF request.)
                        000010          	segdef  active_function_error
    000010  a0   077777 000014 
    000012  aa  141 143 164 146         	aci  "actfncer",8
    000013  aa  156 143 145 162
    000014  aa  107 101 156 040         	acc  "An active function error occurred while executing a Multics AF request."
    000015  aa  141 143 164 151
    000016  aa  166 145 040 146
    000017  aa  165 156 143 164
    000020  aa  151 157 156 040
    000021  aa  145 162 162 157
    000022  aa  162 040 157 143
    000023  aa  143 165 162 162
    000024  aa  145 144 040 167
    000025  aa  150 151 154 145
    000026  aa  040 145 170 145
    000027  aa  143 165 164 151
    000030  aa  156 147 040 141
    000031  aa  040 115 165 154
    000032  aa  164 151 143 163
    000033  aa  040 101 106 040
    000034  aa  162 145 161 165
    000035  aa  145 163 164 056
                                        
                                    23  
                                    24  	ec	blank_request_name,reqblank,
                                    25  		 (Blank request name.)
                        000011          	segdef  blank_request_name
    000011  a0   077777 000040 
    000036  aa  162 145 161 142         	aci  "reqblank",8
    000037  aa  154 141 156 153
    000040  aa  023 102 154 141         	acc  "Blank request name."
    000041  aa  156 153 040 162
    000042  aa  145 161 165 145
    000043  aa  163 164 040 156
    000044  aa  141 155 145 056
                                        
                                    26  
                                    27  	ec	cpescape_restricted,nocp,
                                    28  		 (You may not execute Multics command lines via the '..' escape sequence.)
                        000012          	segdef  cpescape_restricted
    000012  a0   077777 000047 
    000045  aa  156 157 143 160         	aci  "nocp",8
    000046  aa  040 040 040 040
    000047  aa  107 131 157 165         	acc  "You may not execute Multics command lines via the '..' escape sequence."
    000050  aa  040 155 141 171
    000051  aa  040 156 157 164
    000052  aa  040 145 170 145
    000053  aa  143 165 164 145
    000054  aa  040 115 165 154
    000055  aa  164 151 143 163
    000056  aa  040 143 157 155
    000057  aa  155 141 156 144
    000060  aa  040 154 151 156
    000061  aa  145 163 040 166
    000062  aa  151 141 040 164
    000063  aa  150 145 040 047
    000064  aa  056 056 047 040
    000065  aa  145 163 143 141
    000066  aa  160 145 040 163
    000067  aa  145 161 165 145
    000070  aa  156 143 145 056
                                        
                                    29  
                                    30  	ec	exec_com_aborted,ecabort,
                                    31  		 (The exec_com has been aborted.)
                        000013          	segdef  exec_com_aborted
    000013  a0   077777 000073 
    000071  aa  145 143 141 142         	aci  "ecabort",8
    000072  aa  157 162 164 040
    000073  aa  036 124 150 145         	acc  "The exec_com has been aborted."
    000074  aa  040 145 170 145
    000075  aa  143 137 143 157
    000076  aa  155 040 150 141
    000077  aa  163 040 142 145
    000100  aa  145 156 040 141
    000101  aa  142 157 162 164
    000102  aa  145 144 056 000
                                        
                                    32  
                                    33  	ec	invalid_request_table,badrqt,
                                    34  		 (The specified request table is not a valid format.)
                        000014          	segdef  invalid_request_table
    000014  a0   077777 000105 
    000103  aa  142 141 144 162         	aci  "badrqt",8
    000104  aa  161 164 040 040
    000105  aa  062 124 150 145         	acc  "The specified request table is not a valid format."
    000106  aa  040 163 160 145
    000107  aa  143 151 146 151
    000110  aa  145 144 040 162
    000111  aa  145 161 165 145
    000112  aa  163 164 040 164
    000113  aa  141 142 154 145
    000114  aa  040 151 163 040
    000115  aa  156 157 164 040
    000116  aa  141 040 166 141
    000117  aa  154 151 144 040
    000120  aa  146 157 162 155
    000121  aa  141 164 056 000
                                        
                                    35  
                                    36  	ec	no_matching_requests,^matchrq,
                                    37  		(No matching request names were found.)
                        000015          	segdef  no_matching_requests
    000015  a0   077777 000124 
    000122  aa  136 155 141 164         	aci  "^matchrq",8
    000123  aa  143 150 162 161
    000124  aa  045 116 157 040         	acc  "No matching request names were found."
    000125  aa  155 141 164 143
    000126  aa  150 151 156 147
    000127  aa  040 162 145 161
    000130  aa  165 145 163 164
    000131  aa  040 156 141 155
    000132  aa  145 163 040 167
    000133  aa  145 162 145 040
    000134  aa  146 157 165 156
    000135  aa  144 056 000 000
                                        
                                    38  
                                    39  	ec	not_af_request,^afreq,
                                    40  		 (This request may not be invoked as an active function.)
                        000016          	segdef  not_af_request
    000016  a0   077777 000140 
    000136  aa  136 141 146 162         	aci  "^afreq",8
    000137  aa  145 161 040 040
    000140  aa  066 124 150 151         	acc  "This request may not be invoked as an active function."
    000141  aa  163 040 162 145
    000142  aa  161 165 145 163
    000143  aa  164 040 155 141
    000144  aa  171 040 156 157
    000145  aa  164 040 142 145
    000146  aa  040 151 156 166
    000147  aa  157 153 145 144
    000150  aa  040 141 163 040
    000151  aa  141 156 040 141
    000152  aa  143 164 151 166
    000153  aa  145 040 146 165
    000154  aa  156 143 164 151
    000155  aa  157 156 056 000
                                        
                                    41  
                                    42  	ec	not_command_request,^command,
                                    43  		 (This request may not be invoked as a command.)
                        000017          	segdef  not_command_request
    000017  a0   077777 000160 
    000156  aa  136 143 157 155         	aci  "^command",8
    000157  aa  155 141 156 144
    000160  aa  055 124 150 151         	acc  "This request may not be invoked as a command."
    000161  aa  163 040 162 145
    000162  aa  161 165 145 163
    000163  aa  164 040 155 141
    000164  aa  171 040 156 157
    000165  aa  164 040 142 145
    000166  aa  040 151 156 166
    000167  aa  157 153 145 144
    000170  aa  040 141 163 040
    000171  aa  141 040 143 157
    000172  aa  155 155 141 156
    000173  aa  144 056 000 000
                                        
                                    44  
                                    45  	ec	not_in_standalone_invocation,notstand,
                                    46  		 (This function may not be invoked in a standalone subsystem invocation.)
                        000020          	segdef  not_in_standalone_invocation
    000020  a0   077777 000176 
    000174  aa  156 157 164 163         	aci  "notstand",8
    000175  aa  164 141 156 144
    000176  aa  106 124 150 151         	acc  "This function may not be invoked in a standalone subsystem invocation."
    000177  aa  163 040 146 165
    000200  aa  156 143 164 151
    000201  aa  157 156 040 155
    000202  aa  141 171 040 156
    000203  aa  157 164 040 142
    000204  aa  145 040 151 156
    000205  aa  166 157 153 145
    000206  aa  144 040 151 156
    000207  aa  040 141 040 163
    000210  aa  164 141 156 144
    000211  aa  141 154 157 156
    000212  aa  145 040 163 165
    000213  aa  142 163 171 163
    000214  aa  164 145 155 040
    000215  aa  151 156 166 157
    000216  aa  143 141 164 151
    000217  aa  157 156 056 000
                                        
                                    47  
                                    48  	ec	null_request_line,nullrql,
                                    49  		 (Null request line encountered.)
                        000021          	segdef  null_request_line
    000021  a0   077777 000222 
    000220  aa  156 165 154 154         	aci  "nullrql",8
    000221  aa  162 161 154 040
    000222  aa  036 116 165 154         	acc  "Null request line encountered."
    000223  aa  154 040 162 145
    000224  aa  161 165 145 163
    000225  aa  164 040 154 151
    000226  aa  156 145 040 145
    000227  aa  156 143 157 165
    000230  aa  156 164 145 162
    000231  aa  145 144 056 000
                                        
                                    50  
                                    51  	ec	program_interrupt,progint,
                                    52  		 (Request line execution aborted at the user's request.)
                        000022          	segdef  program_interrupt
    000022  a0   077777 000234 
    000232  aa  160 162 157 147         	aci  "progint",8
    000233  aa  151 156 164 040
    000234  aa  065 122 145 161         	acc  "Request line execution aborted at the user's request."
    000235  aa  165 145 163 164
    000236  aa  040 154 151 156
    000237  aa  145 040 145 170
    000240  aa  145 143 165 164
    000241  aa  151 157 156 040
    000242  aa  141 142 157 162
    000243  aa  164 145 144 040
    000244  aa  141 164 040 164
    000245  aa  150 145 040 165
    000246  aa  163 145 162 047
    000247  aa  163 040 162 145
    000250  aa  161 165 145 163
    000251  aa  164 056 000 000
                                        
                                    53  
                                    54  	ec	request_line_aborted,rqlabort,
                                    55  		 (The request line has been aborted.)
                        000023          	segdef  request_line_aborted
    000023  a0   077777 000254 
    000252  aa  162 161 154 141         	aci  "rqlabort",8
    000253  aa  142 157 162 164
    000254  aa  042 124 150 145         	acc  "The request line has been aborted."
    000255  aa  040 162 145 161
    000256  aa  165 145 163 164
    000257  aa  040 154 151 156
    000260  aa  145 040 150 141
    000261  aa  163 040 142 145
    000262  aa  145 156 040 141
    000263  aa  142 157 162 164
    000264  aa  145 144 056 000
                                        
                                    56  
                                    57  	ec	request_name_too_long,reqlong,
                                    58  		 (Request name too long.)
                        000024          	segdef  request_name_too_long
    000024  a0   077777 000267 
    000265  aa  162 145 161 154         	aci  "reqlong",8
    000266  aa  157 156 147 040
    000267  aa  026 122 145 161         	acc  "Request name too long."
    000270  aa  165 145 163 164
    000271  aa  040 156 141 155
    000272  aa  145 040 164 157
    000273  aa  157 040 154 157
    000274  aa  156 147 056 000
                                        
                                    59  
                                    60  	ec	request_not_found,rqntfnd,
                                    61  		 (The specified request was not found.)
                        000025          	segdef  request_not_found
    000025  a0   077777 000277 
    000275  aa  162 161 156 164         	aci  "rqntfnd",8
    000276  aa  146 156 144 040
    000277  aa  044 124 150 145         	acc  "The specified request was not found."
    000300  aa  040 163 160 145
    000301  aa  143 151 146 151
    000302  aa  145 144 040 162
    000303  aa  145 161 165 145
    000304  aa  163 164 040 167
    000305  aa  141 163 040 156
    000306  aa  157 164 040 146
    000307  aa  157 165 156 144
    000310  aa  056 000 000 000
                                        
                                    62  
                                    63  	ec	request_table_not_found,^reqtabl,
                                    64  		 (Specified request table not found.)
                        000026          	segdef  request_table_not_found
    000026  a0   077777 000313 
    000311  aa  136 162 145 161         	aci  "^reqtabl",8
    000312  aa  164 141 142 154
    000313  aa  042 123 160 145         	acc  "Specified request table not found."
    000314  aa  143 151 146 151
    000315  aa  145 144 040 162
    000316  aa  145 161 165 145
    000317  aa  163 164 040 164
    000320  aa  141 142 154 145
    000321  aa  040 156 157 164
    000322  aa  040 146 157 165
    000323  aa  156 144 056 000
                                        
                                    65  
                                    66  	ec	subsystem_aborted,ssabort,
                                    67  		 (The subsystem invocation has been aborted.)
                        000027          	segdef  subsystem_aborted
    000027  a0   077777 000326 
    000324  aa  163 163 141 142         	aci  "ssabort",8
    000325  aa  157 162 164 040
    000326  aa  052 124 150 145         	acc  "The subsystem invocation has been aborted."
    000327  aa  040 163 165 142
    000330  aa  163 171 163 164
    000331  aa  145 155 040 151
    000332  aa  156 166 157 143
    000333  aa  141 164 151 157
    000334  aa  156 040 150 141
    000335  aa  163 040 142 145
    000336  aa  145 156 040 141
    000337  aa  142 157 162 164
    000340  aa  145 144 056 000
                                        
                                    68  
                                    69  	ec	unavailable_request,reqlnker,
                                    70  		 (This request is unavailable due to linkage_error.)
                        000030          	segdef  unavailable_request
    000030  a0   077777 000343 
    000341  aa  162 145 161 154         	aci  "reqlnker",8
    000342  aa  156 153 145 162
    000343  aa  061 124 150 151         	acc  "This request is unavailable due to linkage_error."
    000344  aa  163 040 162 145
    000345  aa  161 165 145 163
    000346  aa  164 040 151 163
    000347  aa  040 165 156 141
    000350  aa  166 141 151 154
    000351  aa  141 142 154 145
    000352  aa  040 144 165 145
    000353  aa  040 164 157 040
    000354  aa  154 151 156 153
    000355  aa  141 147 145 137
    000356  aa  145 162 162 157
    000357  aa  162 056 000 000
                                        
                                    71  
                                    72  	ec	unimplemented_request,notimp,
                                    73  		 (This request is not yet implemented.)
                        000031          	segdef  unimplemented_request
    000031  a0   077777 000362 
    000360  aa  156 157 164 151         	aci  "notimp",8
    000361  aa  155 160 040 040
    000362  aa  044 124 150 151         	acc  "This request is not yet implemented."
    000363  aa  163 040 162 145
    000364  aa  161 165 145 163
    000365  aa  164 040 151 163
    000366  aa  040 156 157 164
    000367  aa  040 171 145 164
    000370  aa  040 151 155 160
    000371  aa  154 145 155 145
    000372  aa  156 164 145 144
    000373  aa  056 000 000 000
                                        
                                    74  
                                    75  	ec	unknown_request,^request,
                                    76  		 (Unknown request; type ? for a request list.)
                        000032          	segdef  unknown_request
    000032  a0   077777 000376 
    000374  aa  136 162 145 161         	aci  "^request",8
    000375  aa  165 145 163 164
    000376  aa  053 125 156 153         	acc  "Unknown request; type ? for a request list."
    000377  aa  156 157 167 156
    000400  aa  040 162 145 161
    000401  aa  165 145 163 164
    000402  aa  073 040 164 171
    000403  aa  160 145 040 077
    000404  aa  040 146 157 162
    000405  aa  040 141 040 162
    000406  aa  145 161 165 145
    000407  aa  163 164 040 154
    000410  aa  151 163 164 056
                                        
                                    77  
                                    78  	end

NO LITERALS
     
NAME DEFINITIONS FOR ENTRY POINTS AND SEGDEFS

    000412  5a   000003 000000 
    000413  5a   000257 600000 
    000414  aa   000000 000000 
    000415  55   000010 000002 
    000416  5a   000002 400003 
    000417  55   000006 000010 
    000420  aa  007 163 163 165
    000421  aa  137 145 164 137
    000422  55   000017 000003 
    000423  2a   000032 400001 
    000424  55   000013 000003 
    000425  aa  017 165 156 153         unknown_request
    000426  aa  156 157 167 156
    000427  aa  137 162 145 161
    000430  aa  165 145 163 164
    000431  55   000030 000010 
    000432  2a   000031 400001 
    000433  55   000022 000003 
    000434  aa  025 165 156 151         unimplemented_request
    000435  aa  155 160 154 145
    000436  aa  155 145 156 164
    000437  aa  145 144 137 162
    000440  aa  145 161 165 145
    000441  aa  163 164 000 000
    000442  55   000040 000017 
    000443  2a   000030 400001 
    000444  55   000033 000003 
    000445  aa  023 165 156 141         unavailable_request
    000446  aa  166 141 151 154
    000447  aa  141 142 154 145
    000450  aa  137 162 145 161
    000451  aa  165 145 163 164
    000452  55   000050 000030 
    000453  2a   000027 400001 
    000454  55   000043 000003 
    000455  aa  021 163 165 142         subsystem_aborted
    000456  aa  163 171 163 164
    000457  aa  145 155 137 141
    000460  aa  142 157 162 164
    000461  aa  145 144 000 000
    000462  55   000061 000040 
    000463  2a   000026 400001 
    000464  55   000053 000003 
    000465  aa  027 162 145 161         request_table_not_found
    000466  aa  165 145 163 164
    000467  aa  137 164 141 142
    000470  aa  154 145 137 156
    000471  aa  157 164 137 146
    000472  aa  157 165 156 144
    000473  55   000071 000050 
    000474  2a   000025 400001 
    000475  55   000064 000003 
    000476  aa  021 162 145 161         request_not_found
    000477  aa  165 145 163 164
    000500  aa  137 156 157 164
    000501  aa  137 146 157 165
    000502  aa  156 144 000 000
    000503  55   000102 000061 
    000504  2a   000024 400001 
    000505  55   000074 000003 
    000506  aa  025 162 145 161         request_name_too_long
    000507  aa  165 145 163 164
    000510  aa  137 156 141 155
    000511  aa  145 137 164 157
    000512  aa  157 137 154 157
    000513  aa  156 147 000 000
    000514  55   000113 000071 
    000515  2a   000023 400001 
    000516  55   000105 000003 
    000517  aa  024 162 145 161         request_line_aborted
    000520  aa  165 145 163 164
    000521  aa  137 154 151 156
    000522  aa  145 137 141 142
    000523  aa  157 162 164 145
    000524  aa  144 000 000 000
    000525  55   000123 000102 
    000526  2a   000022 400001 
    000527  55   000116 000003 
    000530  aa  021 160 162 157         program_interrupt
    000531  aa  147 162 141 155
    000532  aa  137 151 156 164
    000533  aa  145 162 162 165
    000534  aa  160 164 000 000
    000535  55   000133 000113 
    000536  2a   000021 400001 
    000537  55   000126 000003 
    000540  aa  021 156 165 154         null_request_line
    000541  aa  154 137 162 145
    000542  aa  161 165 145 163
    000543  aa  164 137 154 151
    000544  aa  156 145 000 000
    000545  55   000146 000123 
    000546  2a   000020 400001 
    000547  55   000136 000003 
    000550  aa  034 156 157 164         not_in_standalone_invocation
    000551  aa  137 151 156 137
    000552  aa  163 164 141 156
    000553  aa  144 141 154 157
    000554  aa  156 145 137 151
    000555  aa  156 166 157 143
    000556  aa  141 164 151 157
    000557  aa  156 000 000 000
    000560  55   000156 000133 
    000561  2a   000017 400001 
    000562  55   000151 000003 
    000563  aa  023 156 157 164         not_command_request
    000564  aa  137 143 157 155
    000565  aa  155 141 156 144
    000566  aa  137 162 145 161
    000567  aa  165 145 163 164
    000570  55   000165 000146 
    000571  2a   000016 400001 
    000572  55   000161 000003 
    000573  aa  016 156 157 164         not_af_request
    000574  aa  137 141 146 137
    000575  aa  162 145 161 165
    000576  aa  145 163 164 000
    000577  55   000176 000156 
    000600  2a   000015 400001 
    000601  55   000170 000003 
    000602  aa  024 156 157 137         no_matching_requests
    000603  aa  155 141 164 143
    000604  aa  150 151 156 147
    000605  aa  137 162 145 161
    000606  aa  165 145 163 164
    000607  aa  163 000 000 000
    000610  55   000207 000165 
    000611  2a   000014 400001 
    000612  55   000201 000003 
    000613  aa  025 151 156 166         invalid_request_table
    000614  aa  141 154 151 144
    000615  aa  137 162 145 161
    000616  aa  165 145 163 164
    000617  aa  137 164 141 142
    000620  aa  154 145 000 000
    000621  55   000217 000176 
    000622  2a   000013 400001 
    000623  55   000212 000003 
    000624  aa  020 145 170 145         exec_com_aborted
    000625  aa  143 137 143 157
    000626  aa  155 137 141 142
    000627  aa  157 162 164 145
    000630  aa  144 000 000 000
    000631  55   000227 000207 
    000632  2a   000012 400001 
    000633  55   000222 000003 
    000634  aa  023 143 160 145         cpescape_restricted
    000635  aa  163 143 141 160
    000636  aa  145 137 162 145
    000637  aa  163 164 162 151
    000640  aa  143 164 145 144
    000641  55   000237 000217 
    000642  2a   000011 400001 
    000643  55   000232 000003 
    000644  aa  022 142 154 141         blank_request_name
    000645  aa  156 153 137 162
    000646  aa  145 161 165 145
    000647  aa  163 164 137 156
    000650  aa  141 155 145 000
    000651  55   000250 000227 
    000652  2a   000010 400001 
    000653  55   000242 000003 
    000654  aa  025 141 143 164         active_function_error
    000655  aa  151 166 145 137
    000656  aa  146 165 156 143
    000657  aa  164 151 157 156
    000660  aa  137 145 162 162
    000661  aa  157 162 000 000
    000662  55   000002 000237 
    000663  6a   000000 400002 
    000664  55   000253 000003 
    000665  aa  014 163 171 155         symbol_table
    000666  aa  142 157 154 137
    000667  aa  164 141 142 154
    000670  aa  145 000 000 000

DEFINITIONS HASH TABLE

    000671  aa   000000 000033 
    000672  aa   000000 000000 
    000673  5a   000061 000000 
    000674  aa   000000 000000 
    000675  5a   000123 000000 
    000676  5a   000030 000000 
    000677  aa   000000 000000 
    000700  5a   000133 000000 
    000701  aa   000000 000000 
    000702  aa   000000 000000 
    000703  aa   000000 000000 
    000704  5a   000017 000000 
    000705  5a   000113 000000 
    000706  5a   000176 000000 
    000707  5a   000207 000000 
    000710  5a   000237 000000 
    000711  5a   000146 000000 
    000712  5a   000217 000000 
    000713  5a   000227 000000 
    000714  5a   000010 000000 
    000715  5a   000250 000000 
    000716  5a   000156 000000 
    000717  5a   000165 000000 
    000720  5a   000050 000000 
    000721  aa   000000 000000 
    000722  5a   000071 000000 
    000723  5a   000040 000000 
    000724  5a   000102 000000 

NO EXTERNAL NAMES

NO TRAP POINTER WORDS

TYPE PAIR BLOCKS

    000725  aa   000001 000000 
    000726  aa   000000 000000 

INTERNAL EXPRESSION WORDS

    000727  50   000313 000000 
LINKAGE INFORMATION
      
    000000  aa   000000 000000 
    000001  02   000412 000036 
    000002  aa   000000 000000 
    000003  aa   000000 000000 
    000004  aa   000000 000000 
    000005  aa   000000 000000 
    000006  22   000034 000041 
    000007  a2   000000 000024 
    000034  9a   777744 0000 46         *text|       
    000035  5a   000315 0000 00

FIRST REFERENCE TRAP LIST
     
    000036  aa   000000 000001 
    000037  aa   000000 000001 
    000040  2a   000034 000000 
    000041  aa   000000 000000 
SYMBOL INFORMATION
     
SYMBOL TABLE HEADER
     
    000000  aa   000000 000001 
    000001  aa   163171 155142 
    000002  aa   164162 145145 
    000003  aa   000000 000004 
    000004  aa   000000 114732 
    000005  aa   732732 062314 
    000006  aa   000000 114775 
    000007  aa   664662 210714 
    000010  aa   141154 155040 
    000011  aa   040040 040040 
    000012  aa   000024 000040 
    000013  aa   000034 000040 
    000014  aa   000044 000100 
    000015  aa   000002 000002 
    000016  aa   000064 000000 
    000017  aa   000000 000203 
    000020  aa   000000 000143 
    000021  aa   000000 000164 
    000022  aa   000173 000143 
    000023  aa   000064 000000 
    000024  aa   101114 115040 
    000025  aa   126145 162163 
    000026  aa   151157 156040 
    000027  aa   040066 056067 
    000030  aa   040040 117143 
    000031  aa   164157 142145 
    000032  aa   162040 061071 
    000033  aa   070066 040040 
    000034  aa   107112 157150 
    000035  aa   156163 157156 
    000036  aa   056123 171163 
    000037  aa   115141 151156 
    000040  aa   164056 141040 
    000041  aa   040040 040040 
    000042  aa   040040 040040 
    000043  aa   040040 040040 
    000044  aa   154151 163164 
    000045  aa   040040 040040 
    000046  aa   040040 040040 
    000047  aa   040040 040040 
    000050  aa   040040 040040 
    000051  aa   040040 040040 
    000052  aa   040040 040040 
    000053  aa   040040 040040 
    000054  aa   040040 040040 
    000055  aa   040040 040040 
    000056  aa   040040 040040 
    000057  aa   040040 040040 
    000060  aa   040040 040040 
    000061  aa   040040 040040 
    000062  aa   040040 040040 
    000063  aa   040040 040040 
    000064  aa   000000 000001 
    000065  aa   000000 000003 
    000066  aa   000102 000054 
    000067  aa   147740 446067 
    000070  aa   000000 114774 
    000071  aa   460657 200000 
    000072  aa   000115 000037 
    000073  aa   120665 316464 
    000074  aa   000000 112067 
    000075  aa   253504 600000 
    000076  aa   000125 000066 
    000077  aa   147714 750316 
    000100  aa   000000 114774 
    000101  aa   453561 000000 
    000102  aa   076163 160145          >special_ldd>install>MR12.0-1206>ssu_et_.alm
    000103  aa   143151 141154 
    000104  aa   137154 144144 
    000105  aa   076151 156163 
    000106  aa   164141 154154 
    000107  aa   076115 122061 
    000110  aa   062056 060055 
    000111  aa   061062 060066 
    000112  aa   076163 163165 
    000113  aa   137145 164137 
    000114  aa   056141 154155 
    000115  aa   076154 144144          >ldd>include>et_macros.incl.alm
    000116  aa   076151 156143 
    000117  aa   154165 144145 
    000120  aa   076145 164137 
    000121  aa   155141 143162 
    000122  aa   157163 056151 
    000123  aa   156143 154056 
    000124  aa   141154 155040 
    000125  aa   076163 160145          >special_ldd>install>MR12.0-1206>stack_header.incl.alm
    000126  aa   143151 141154 
    000127  aa   137154 144144 
    000130  aa   076151 156163 
    000131  aa   164141 154154 
    000132  aa   076115 122061 
    000133  aa   062056 060055 
    000134  aa   061062 060066 
    000135  aa   076163 164141 
    000136  aa   143153 137150 
    000137  aa   145141 144145 
    000140  aa   162056 151156 
    000141  aa   143154 056141 
    000142  aa   154155 040040 
               MULTICS ASSEMBLY CROSS REFERENCE LISTING

   Value        Symbol                   Source file   Line number

                *text                    ssu_et_:       19.
          14    .._00000                 ssu_et_:       22.
          40    .._00001                 ssu_et_:       25.
          47    .._00002                 ssu_et_:       28.
          73    .._00003                 ssu_et_:       31.
         105    .._00004                 ssu_et_:       34.
         124    .._00005                 ssu_et_:       37.
         140    .._00006                 ssu_et_:       40.
         160    .._00007                 ssu_et_:       43.
         176    .._00010                 ssu_et_:       46.
         222    .._00011                 ssu_et_:       49.
         234    .._00012                 ssu_et_:       52.
         254    .._00013                 ssu_et_:       55.
         267    .._00014                 ssu_et_:       58.
         277    .._00015                 ssu_et_:       61.
         313    .._00016                 ssu_et_:       64.
         326    .._00017                 ssu_et_:       67.
         343    .._00020                 ssu_et_:       70.
         362    .._00021                 ssu_et_:       73.
         376    .._00022                 ssu_et_:       76.
          33    .code_end                ssu_et_:       19.
          10    .code_start              ssu_et_:       19.
           5    .loop                    ssu_et_:       19.
       77777    .segno                   ssu_et_:       19,   22,   25,   28,   31,   34,   37,   40,   43,   46,   49,   52,
                                                        55,   58,   61,   64,   67,   70,   73,   76.
           0    .trapproc                ssu_et_:       19.
          10    active_function_error    ssu_et_:       22.
          11    blank_request_name       ssu_et_:       25.
        1170    call_offset              stack_header:        80.
          10    codes                    ssu_et_:       19,   22,   25,   28,   31,   34,   37,   40,   43,   46,   49,   52,
                                                        55,   58,   61,   64,   67,   70,   73,   76.
          12    cpescape_restricted      ssu_et_:       28.
        1174    entry_offset             stack_header:        84.
          13    exec_com_aborted         ssu_et_:       31.
          14    invalid_request_table    ssu_et_:       34.
           0    messages                 ssu_et_:       19,   22,   25,   28,   31,   34,   37,   40,   43,   46,   49,   52,
                                                        55,   58,   61,   64,   67,   70,   73,   76.
          16    not_af_request           ssu_et_:       40.
          17    not_command_request      ssu_et_:       43.
          20    not_in_standalone_invocation   ssu_et_:       46.
          15    no_matching_requests     ssu_et_:       37.
          21    null_request_line        ssu_et_:       49.
          33    past_codes               ssu_et_:       19.
          22    program_interrupt        ssu_et_:       52.
        1171    push_offset              stack_header:        81.
          23    request_line_aborted     ssu_et_:       55.
          24    request_name_too_long    ssu_et_:       58.
          25    request_not_found        ssu_et_:       61.
          26    request_table_not_found  ssu_et_:       64.
        1173    return_no_pop_offset     stack_header:        83.
        1172    return_offset            stack_header:        82.
          73    stach_header.trace_top_ptr     stack_header:        62.
          66    stack_header.assign_linkage_ptr      stack_header:        59.
          32    stack_header.bar_mode_sp       stack_header:        42.
          36    stack_header.call_op_ptr       stack_header:        44.
          10    stack_header.clr_ptr     stack_header:        27.
           6    stack_header.combined_stat_ptr       stack_header:        25.
           4    stack_header.cpm_data_ptr      stack_header:        24.
          13    stack_header.cpm_enabled       stack_header:        32.
          13    stack_header.cur_lot_size      stack_header:        31.
          64    stack_header.ect_ptr     stack_header:        58.
          46    stack_header.entry_op_ptr      stack_header:        49.
          70    stack_header.heap_header_ptr   stack_header:        60.
          74    stack_header.in_trace    stack_header:        63.
          52    stack_header.isot_ptr    stack_header:        52.
          26    stack_header.lot_ptr     ssu_et_:       19,
                                         stack_header:        39.
          12    stack_header.main_proc_invoked       stack_header:        29.
          12    stack_header.max_lot_size      stack_header:        28.
          20    stack_header.parent_ptr  stack_header:        36.
          34    stack_header.pl1_operators_ptr       stack_header:        43.
          40    stack_header.push_op_ptr       stack_header:        46.
          42    stack_header.return_op_ptr     stack_header:        47.
          44    stack_header.ret_no_pop_op_ptr       stack_header:        48.
          62    stack_header.rnt_ptr     stack_header:        57.
          12    stack_header.run_unit_depth    stack_header:        30.
          54    stack_header.sct_ptr     stack_header:        53.
          30    stack_header.signal_ptr  stack_header:        41.
          22    stack_header.stack_begin_ptr   stack_header:        37.
          24    stack_header.stack_end_ptr     stack_header:        38.
          14    stack_header.system_free_ptr   stack_header:        33.
          60    stack_header.sys_link_info_ptr       stack_header:        56.
          72    stack_header.trace_frames      stack_header:        61.
          50    stack_header.trans_op_tv_ptr   stack_header:        51.
          56    stack_header.unwinder_ptr      stack_header:        54.
          16    stack_header.user_free_ptr     stack_header:        34.
         100    stack_header_end         stack_header:        64.
          27    subsystem_aborted        ssu_et_:       67.
           0    trace_frames.count       stack_header:        69.
           1    trace_frames.top_ptr     stack_header:        70.
         551    tv_offset                stack_header:        75,   80,   81,   82,   83,   84.
          30    unavailable_request      ssu_et_:       70.
          31    unimplemented_request    ssu_et_:       73.
          32    unknown_request          ssu_et_:       76.


NO FATAL ERRORS


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
