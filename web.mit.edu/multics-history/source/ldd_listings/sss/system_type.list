	COMPILATION LISTING OF SEGMENT system_type
	Compiled by: Multics PL/I Compiler, Release 27d, of October 11, 1982
	Compiled at: Honeywell LISD Phoenix, System M
	Compiled on: 11/04/82  1803.4 mst Thu
	    Options: optimize map

        1 /* ***********************************************************
        2*   *                                                         *
        3*   * Copyright, (C) Honeywell Information Systems Inc., 1982 *
        4*   *                                                         *
        5*   * Copyright (c) 1972 by Massachusetts Institute of        *
        6*   * Technology and Honeywell Information Systems, Inc.      *
        7*   *                                                         *
        8*   *********************************************************** */
        9 
       10 
       11 system_type: procedure () options (variable);
       12 
       13 /* *	SYSTEM_TYPE
       14*   *
       15*   *	Simple command/AF to canonicalize system type names, or return the
       16*   *	name for the type of the current system.
       17*   *
       18*   *	03/23/81, W. Olin Sibert
       19*   */
       20 
       21 dcl  code fixed bin (35);
       22 dcl  arg_count fixed bin;
       23 dcl  arg char (arg_lth) based (arg_ptr);
       24 dcl  arg_ptr pointer;
       25 dcl  arg_lth fixed bin (21);
       26 dcl  ret_str char (rs_lth) varying based (rs_ptr);
       27 dcl  rs_ptr pointer;
       28 dcl  rs_lth fixed bin (21);
       29 dcl  af_sw bit (1) aligned;
       30 
       31 dcl  input_name char (32);
       32 dcl  output_name char (32);
       33 dcl  type fixed bin;
       34 
       35 dcl  active_fnc_err_ entry options (variable);
       36 dcl  com_err_ entry options (variable);
       37 dcl  cu_$af_return_arg entry (fixed bin, pointer, fixed bin (21), fixed bin (35));
       38 dcl  cu_$arg_ptr entry (fixed bin, pointer, fixed bin (21), fixed bin (35));
       39 dcl  ioa_ entry options (variable);
       40 dcl  system_type_ entry (char (*), char (*), fixed bin, fixed bin (35));
       41 
       42 dcl  error_table_$too_many_args fixed bin (35) external static;
       43 
       44 dcl  WHOAMI char (32) internal static options (constant) init ("system_type");
       45 
       46 /*  */
       47 
       48 	call cu_$af_return_arg (arg_count, rs_ptr, rs_lth, code);
       49 	af_sw = (code = 0);
       50 	if af_sw then ret_str = "";
       51 
       52 	if arg_count > 1 then do;
       53 	     if af_sw then
       54 		call active_fnc_err_ (error_table_$too_many_args, WHOAMI,
       55 		     "^/Usage:^-[^a {SystemName}]", WHOAMI);
       56 	     else call com_err_ (error_table_$too_many_args, WHOAMI,
       57 		     "^/Usage:^-^a {SystemName}", WHOAMI);
       58 	     return;				/* Nothing more to do here */
       59 	     end;
       60 
       61 	if arg_count = 1 then do;			/* Canonicalize a specified name */
       62 	     call cu_$arg_ptr (1, arg_ptr, arg_lth, (0));
       63 	     input_name = arg;
       64 	     end;
       65 	else input_name = "";			/* Otherwise, depend on system_type_ for the default */
       66 
       67 	call system_type_ (input_name, output_name, type, code);
       68 
       69 	if code ^= 0 then do;
       70 	     if af_sw then
       71 		call active_fnc_err_ (code, WHOAMI, """^a""", input_name);
       72 	     else call com_err_ (code, WHOAMI, """^a""", input_name);
       73 	     return;
       74 	     end;
       75 
       76 	if ^af_sw then				/* Print it out */
       77 	     if (input_name = "") then
       78 		call ioa_ ("Current system:^-^a", output_name);
       79 	     else call ioa_ ("Canonical name:^-^a", output_name);
       80 	else ret_str = output_name;			/* Otherwise, just return it */
       81 
       82 	return;
       83 	end system_type;
	SOURCE FILES USED IN THIS COMPILATION.

LINE      NUMBER  DATE MODIFIED     NAME			PATHNAME
             0    11/04/82  1624.8  system_type.pl1                   >dumps>old>recomp>system_type.pl1
	NAMES DECLARED IN THIS COMPILATION.

IDENTIFIER	     OFFSET    LOC STORAGE CLASS   DATA TYPE		ATTRIBUTES AND REFERENCES
								(* indicates a set context)

NAMES DECLARED BY DECLARE STATEMENT.
WHOAMI                          000000 constant        char(32)                 initial unaligned dcl 44 set ref 53* 53* 56* 56* 70*
                                                                                  72*
active_fnc_err_                 000010 constant        entry                    external dcl 35 ref 53 70
af_sw                           000111 automatic       bit(1)                   dcl 29 set ref 49* 50 53 70 76
arg                                    based           char                     unaligned dcl 23 ref 63
arg_count                       000101 automatic       fixed bin(17,0)          dcl 22 set ref 48* 52 61
arg_lth                         000104 automatic       fixed bin(21,0)          dcl 25 set ref 62* 63
arg_ptr                         000102 automatic       pointer                  dcl 24 set ref 62* 63
code                            000100 automatic       fixed bin(35,0)          dcl 21 set ref 48* 49 67* 69 70* 72*
com_err_                        000012 constant        entry                    external dcl 36 ref 56 72
cu_$af_return_arg               000014 constant        entry                    external dcl 37 ref 48
cu_$arg_ptr                     000016 constant        entry                    external dcl 38 ref 62
error_table_$too_many_args      000024 external static fixed bin(35,0)          dcl 42 set ref 53* 56*
input_name                      000112 automatic       char(32)                 unaligned dcl 31 set ref 63* 65* 67* 70* 72* 76
ioa_                            000020 constant        entry                    external dcl 39 ref 76 79
output_name                     000122 automatic       char(32)                 unaligned dcl 32 set ref 67* 76* 79* 80
ret_str                                based           varying char             dcl 26 set ref 50* 80*
rs_lth                          000110 automatic       fixed bin(21,0)          dcl 28 set ref 48* 50 80
rs_ptr                          000106 automatic       pointer                  dcl 27 set ref 48* 50 80
system_type_                    000022 constant        entry                    external dcl 40 ref 67
type                            000132 automatic       fixed bin(17,0)          dcl 33 set ref 67*

NAME DECLARED BY EXPLICIT CONTEXT.
system_type                     000051 constant        entry                    external dcl 11

THERE WERE NO NAMES DECLARED BY CONTEXT OR IMPLICATION.

STORAGE REQUIREMENTS FOR THIS PROGRAM.

	Object	Text	Link	Symbol	Defs	Static
Start          0       0       516         544     411         526
Length       720     411        26         140     105           0

BLOCK NAME	         STACK SIZE     TYPE		WHY NONQUICK/WHO SHARES STACK FRAME
system_type                         121 external procedure  is an external procedure.  

STORAGE FOR AUTOMATIC VARIABLES.

STACK FRAME                 LOC IDENTIFIER                  BLOCK NAME
system_type              000100 code                        system_type
                         000101 arg_count                   system_type
                         000102 arg_ptr                     system_type
                         000104 arg_lth                     system_type
                         000106 rs_ptr                      system_type
                         000110 rs_lth                      system_type
                         000111 af_sw                       system_type
                         000112 input_name                  system_type
                         000122 output_name                 system_type
                         000132 type                        system_type

THE FOLLOWING EXTERNAL OPERATORS ARE USED BY THIS PROGRAM.
r_e_as              call_ext_out_desc   call_ext_out        return              ext_entry

THE FOLLOWING EXTERNAL ENTRIES ARE CALLED BY THIS PROGRAM.
active_fnc_err_               com_err_                      cu_$af_return_arg             cu_$arg_ptr
ioa_                          system_type_

THE FOLLOWING EXTERNAL VARIABLES ARE USED BY THIS PROGRAM.
error_table_$too_many_args




   LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC   
     11 000050        48 000056        49 000072        50 000075        52 000077        53 000102        56 000134
     58 000163        61 000164        62 000165        63 000205        64 000212        65 000213        67 000216
     69 000242        70 000244        72 000275        73 000323        76 000324        79 000353        80 000377
     82 000410


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
