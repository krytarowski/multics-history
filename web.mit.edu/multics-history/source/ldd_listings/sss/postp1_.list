	COMPILATION LISTING OF SEGMENT postp1_
	Compiled by: Multics PL/I Compiler, Release 31a, of October 12, 1988
	Compiled at: Honeywell Bull, Phoenix AZ, SysM
	Compiled on: 10/17/88  1005.3 mst Mon
	    Options: optimize map

        1 /****^  ***********************************************************
        2*        *                                                         *
        3*        * Copyright, (C) Honeywell Bull Inc., 1988                *
        4*        *                                                         *
        5*        * Copyright, (C) Honeywell Information Systems Inc., 1982 *
        6*        *                                                         *
        7*        * Copyright (c) 1972 by Massachusetts Institute of        *
        8*        * Technology and Honeywell Information Systems, Inc.      *
        9*        *                                                         *
       10*        *********************************************************** */
       11 
       12 
       13 	
       14 
       15 /****^  HISTORY COMMENTS:
       16*  1) change(86-10-01,JRGray), approve(86-10-01,MCR7507),
       17*     audit(86-10-27,RWaters), install(86-11-12,MR12.0-1202):
       18*     Modified to allow for joining to the definition section.
       19*                                                   END HISTORY COMMENTS */
       20 
       21 
       22 postp1_:		procedure ;
       23 	
       24 	/*  modified for separate static on 06/15/75 by Eugene E Wiatrowski  */
       25 	/*  modified on 03/30/72 at 23:52:53 by R F Mabee. */
       26 	 
       27 	/*   post pass1 processor for eplbsa. ;
       28*	 postp1 has the job of originating all lcs.
       29*	counters. each location counter has an entry in the 
       30*	assignment table as follows--  
       31*	  
       32*	  zero   name,next in hash table   
       33*	  vfd 15/flags,3/class,18/current value 
       34*	  zero left join,right join  
       35*	  zero origin,max value    
       36*	  vfd 15/unused,1/sixty-four,1/eight,1/even,18/segment   
       37*	  
       38*		postp1 does not see the assignment table, but instead,
       39*	four lists strung together with the left and right  
       40*	join pointers--    
       41*	  
       42*	  ulclst  location counters never join#ed    
       43*	  tlclst  text segment location counters     
       44*	  llclst  link segment location counters     
       45*	  slclst  symbol segment location counters    
       46*	  dlclst  definition segment location counters    
       47*	  
       48*	in addition ulcend points to the end of ulclst.   
       49*	  
       50*	postp1 first moves ulclst to the beginning of tlclst,
       51*	then goes down the three remaining lists filling in 
       52*	#origin#. it uses only the following information out
       53*	of the entry--     
       54*	  
       55*	  right join     
       56*	  max value
       57*		  current value   
       58*	  sixty-four     
       59*	  eight  
       60*	  even   
       61*	  
       62*	the field #segment# just duplicates the information 
       63*	given by membership in the appropriate list.     
       64*	  
       65*	late addition to the work of postp1-- check max against current
       66*	value to save work for mills.  
       67*	  
       68*	later addition--set current value to zero. */ 
       69 	  
       70 dcl eb_data_$stat_len ext fixed bin(26);
       71 dcl eb_data_$separate_static ext bit(1);
       72 	  
       73 	  
       74 	  
       75 dcl  linkage_done bit(1) aligned;
       76 	dcl ( text, radix, maxv, curv, cur, mode, jut, splice, j, symbol, definition, mods, link) fixed bin (26) ;
       77 
  1     1 /* Begin include file alm_lc.incl.pl1. */
  1     2 
  1     3 /****^  HISTORY COMMENTS:
  1     4*  1) change(86-10-01,JRGray), approve(86-10-01,MCR7507),
  1     5*     audit(86-10-27,RWaters), install(86-11-12,MR12.0-1202):
  1     6*     Modified to add definition lc used to join blocks to the definition
  1     7*     section.
  1     8*                                                   END HISTORY COMMENTS */
  1     9 
  1    10 /* Edited from several separate files, 4 November 1970, R H Campbell. */
  1    11 /* Modified 23 November 1970, R H Campbell. */
  1    12 /* Added location counter "lpentries" for new object segment format, 27 March 1972, R F Mabee. */
  1    13 /* Last modified on 03/27/72 at 23:16:58 by R F Mabee. */
  1    14 
  1    15  declare	1 eb_data_$curlc external,
  1    16 	  2 curlc fixed bin (26);
  1    17 
  1    18  declare	1 eb_data_$lccall external,
  1    19 	  2 lpcall fixed bin (26),
  1    20 	  2 lccall (2) fixed bin (26);
  1    21 
  1    22  declare	1 eb_data_$lccom external,
  1    23 	  2 ulclst fixed bin (26),
  1    24 	  2 ulcend fixed bin (26),
  1    25 	  2 tlclst fixed bin (26),
  1    26 	  2 llclst fixed bin (26),
  1    27 	  2 slclst fixed bin (26),
  1    28 	  2 dlclst fixed bin (26);
  1    29 
  1    30  declare	1 eb_data_$lcdefs external,
  1    31 	  2 lpdefs fixed bin (26),
  1    32 	  2 lcdefs (2) fixed bin (26);
  1    33 
  1    34  declare	1 eb_data_$lcentries external,
  1    35 	  2 lpentries fixed bin(26),
  1    36 	  2 lcentries (2) fixed bin (26);
  1    37 
  1    38  declare	1 eb_data_$lchead external,
  1    39 	  2 lphead fixed bin (26),
  1    40 	  2 lchead (2) fixed bin (26);
  1    41 
  1    42  declare	1 eb_data_$lclit external,
  1    43 	  2 lplit fixed bin (26),
  1    44 	  2 lclit (2) fixed bin (26);
  1    45 
  1    46  declare	1 eb_data_$lcrlk external,
  1    47 	  2 lprlk fixed bin (26),
  1    48 	  2 lcrlk (2) fixed bin (26);
  1    49 
  1    50  declare	1 eb_data_$lcrst external,
  1    51 	  2 lprst fixed bin (26),
  1    52 	  2 lcrst (2) fixed bin (26);
  1    53 
  1    54  declare	1 eb_data_$lcrtx external,
  1    55 	  2 lprtx fixed bin (26),
  1    56 	  2 lcrtx (2) fixed bin (26);
  1    57 
  1    58  declare	1 eb_data_$lcsect external,
  1    59 	  2 lpsect fixed bin(26),
  1    60 	  2 lcsect (2) fixed bin(26);
  1    61 
  1    62  declare	1 eb_data_$lcst external,
  1    63 	  2 lpst fixed bin (26),
  1    64 	  2 lcst (2) fixed bin (26);
  1    65 
  1    66  declare	1 eb_data_$lctext external,
  1    67 	  2 lptext fixed bin (26),
  1    68 	  2 lctext (2) fixed bin (26);
  1    69 
  1    70  declare	1 eb_data_$lctv external,
  1    71 	  2 lptv fixed bin (26),
  1    72 	  2 lctv (2) fixed bin (26);
  1    73 
  1    74 /* End of include file alm_lc.incl.pl1. */
       78 
       79 	  
       80 	/* EXTERNAL FUNCTIONS */
       81  
       82 declare	glpl_$clh ext entry (fixed bin) returns (fixed bin),
       83 	glpl_$crh ext entry (fixed bin) returns (fixed bin) ;
       84 	  
       85 	/* EXTERNAL ENTRIES */
       86  
       87 declare	glpl_$storr ext entry (fixed bin (26), fixed bin (26)),
       88 	glpl_$storl ext entry (fixed bin (26), fixed bin (26)),
       89 	putxt_$putxt_ ext entry (fixed bin (26), fixed bin (26), fixed bin (26)),
       90 	pulnk_$pulnk_ ext entry (fixed bin (26), fixed bin (26), fixed bin (26)),
       91 	pudef_$pudef_ ext entry (fixed bin (26), fixed bin (26), fixed bin (26)),
       92 	pusmb_$pusmb_ ext entry (fixed bin (26), fixed bin (26), fixed bin (26)) ;
       93 
       94 	
  2     2 
  2     3 
  2     4 	/*	include file for CONCOM */
  2     5 
  2     6 declare 1 eb_data_$concom ext aligned,
  2     7         2 (ap,	ab,	bp,	bb,	lp,	lb,	sp,	sb,
  2     8 		clunk,	clint,	clext,	clbas,	clstk,	clndx,	clmlc,	fdef,
  2     9 		fmul,	fphs,	fset,	frel,	fabs,	fbol,	fcom,	find,
  2    10 		flocrf,	fequrf,	fbolrf,	fsetrf,	fbasrf,	fsegrf,	fstkrf,	fndxrf,
  2    11 		fmlcrf,	onesev,	twosev,	thrsev,	forsev,	fivsev,	sixsev,	allsev,
  2    12 		symbas(8),mir,	mri,	mdu,	mdl,	mx0,	mx1,	mpc,	
  2    13 		mpci,	mfi,	mits,	mitb,	ixtern,	intern,	iassgn,	iserch,
  2    14 		ixvrvl,	ixvrvp,	invrvl,	invrvp,	ibvrvl,	ibvrvp,	iaccvl,	iacivl,
  2    15 		mcmpq,	mcmpx0,	mldaq,	mldq,	mldx0,	mnopdu,	mstcd,	mtra,
  2    16 		mtnc,	mtnz,	meabsp,	meapap,	meapbp,	meaplp,	meapsp,	mstpap,
  2    17 		mstpbp,	mstplp,	mstpsp,	i1542,	i642,	i3333,	i66,	ibb,
  2    18 		ibsp,	nullf,	smxer(2),	sentry(2),sretrn(2),	dzero(2) ) fixed bin (26) aligned ;
  2    19   
  2    20 	/* end of the include file for CONCOM */
       94 
       95 	/* Begin include file varcom.incl.pl1. */
  3     2 /* RHG added new variables 9/7/70. */
  3     3 /* RFM added new cells for new object segment format and first-reference trap, 27 March 1972. */
  3     4 /* RFM added include file stuff, then cross referencer stuff, 23 July 1972. */
  3     5 /* Last modified on 07/23/72 at 04:19:25 by R F Mabee. */
  3     6   
  3     7  declare	1 eb_data_$varcom external aligned,
  3     8 	  2 (brk(2),	nbrk(2),	sym(8),	dsym(8),old_locsym,	pc,	spc,	tpc,
  3     9 	   pclst,		p2pcl,	old_ndpcls,	tvorg,	tvcnt,	tvlth,	litorg,
  3    10 	   litc,		deforg,	defc,	defcnt,	stkc,	lnkc,	lnkno,
  3    11 	   litlst,	old_ndltls, lnklst,	old_ndlkls,	explst,	blklst,	namlst,
  3    12 	   trplst,	xdflst,	tvlst,	begin_line, tpass1,	tpass2,	tpostp,
  3    13 	   tinhib,	tmmode,	txonly,	tmm2,	txo2,	tprot,	tcall,
  3    14 	   tmvdef,	tpulnk,	tfatal,	calrho,	lreter,	passwd,	binlin,
  3    15 	   nboxes,   box(0:210),   myfil,	mynam,	myblk,	mylnk,	tpost1 ) fixed bin (26) ,
  3    16 	  2 source_printed bit(1) aligned,
  3    17 	  2 (ndpcls,	ndltls,	ndlkls,	ndtvls) ptr,
  3    18 	  2 (basno,	value,	admod,	b29,	iaddr,	symlnk ) fixed bin (26),
  3    19 	  2 (itxtmod, ilnkmod, entrieslc, include_file_list, include_index,
  3    20 	     first_ref_trap_proc_linkno, first_ref_trap_arg_linkno,
  3    21 	     text_section_length) fixed binary (26),
  3    22 	  2 (include_info_stack, include_name_list_base, include_name_list_top) pointer,
  3    23 	  2 symbol_tree_rel fixed binary (26);
  3    24 
  3    25 /* End of the include file varcom.incl.pl1. */
       95 
       96 	  
       97 	  
       98 	/*	put ulclst onto the beginning of tlclst. */     
       99 	  
      100 	   if (ulclst = 0) then go to label_100;
      101 	 call glpl_$storl(tlclst+2,(ulcend)) ;
      102 	 call glpl_$storr(ulcend+2,(tlclst)) ;
      103 	 tlclst = ulclst;
      104 	 ulclst = 0;
      105 	 ulcend = 0;
      106 	itxtmod, ilnkmod = 2;
      107 label_100:	  
      108 	  
      109 	/* go through the text location counters assigning 
      110*	  origins, etc. */   
      111 	  
      112 	   text = 0;
      113 	   cur = tlclst;
      114 label_1000:	 if (cur = 0) then go to label_1999;   
      115 	  
      116 	   mods = glpl_$clh(cur+4) ;  
      117 	   curv = glpl_$crh(cur+1) ;  
      118 	   maxv = glpl_$crh(cur+3) ;  
      119 	  
      120 	   radix = 1; 
      121 	   if (mods ^= 0) then radix = mods; 
      122 	  
      123 		jut = text - divide(text,radix,26,0) * radix ;
      124 	   if (jut = 0) then go to label_1200 ;   
      125 	   splice = radix-jut ;  
      126 	 
      127 label_1100:	
      128 	   do j = 1 to splice ; 
      129 	     call putxt_$putxt_(text+j-1,mnopdu,0) ;    
      130   
      131 end label_1100 ;
      132 	 
      133 	text = text + splice ;
      134   
      135 label_1200:	  
      136 	  
      137 	/* check max vs. current values. */
      138 		  
      139 	   if (curv < maxv) then go to label_1300 ; 
      140 	 	maxv = curv; 
      141 	 	call glpl_$storr(cur+3,maxv); 
      142 label_1300:	
      143 
      144 	/* Accumulate per-segment mod (boundary) info. */
      145 
      146 	if mods ^= 0 then if itxtmod = 0 then itxtmod = mods;
      147 			else if mod (mods, itxtmod) = 0 then itxtmod = mods;
      148 			else if mod (itxtmod, mods) ^= 0 then itxtmod = itxtmod * mods;
      149 	  
      150 	/* set origin */
      151 	 
      152 	   call glpl_$storl(cur+3,text); 
      153 	   text = text+maxv ;   
      154 	  
      155 	/* set current value to zero */  
      156 	  
      157 	   call glpl_$storr(cur+1,0) ;
      158 	  
      159 	/* and loop around */
      160 	  
      161 	   cur = glpl_$crh(cur+2); 
      162 	   go to label_1000; 
      163 label_1999:	
      164 
      165 	/*  For the case of separate static we have to change the list
      166*	    of location counters of the form:
      167*
      168*		L = (slc1  lc1 ... lci ... lcn  slc2)
      169*
      170*	    where slc1 and slc2 are two system-location counters
      171*	    and (lc1 ... lci ... lcn) is a list posibly empty of user
      172*	    defined location counters
      173*
      174*	    into two separate lists:
      175*				a) L1 = (lc1 ... lci ... lcn)
      176*			and       b) L2 = (slc1  slc2).             */
      177 
      178 	  
      179 	 /* go through the link location counters assigning 
      180*	  origins, etc. */   
      181 	  
      182 	   link = 0; 
      183 	   eb_data_$stat_len = 0;
      184 	   if eb_data_$separate_static
      185 	      then do;
      186 		 cur = lpsect;
      187 		 cur = glpl_$clh(cur+2);
      188 		 call glpl_$storr(cur+2,0);
      189 		 cur = llclst;
      190 		 cur = glpl_$crh(cur+2);
      191 		 call glpl_$storl(cur+2,0);
      192 		 end;
      193 	      else cur = llclst; 
      194 
      195 	   linkage_done = "0"b;
      196 
      197 label_2000:	 if (cur = 0) then go to label_2888; 
      198 	  
      199 	   mods = glpl_$clh(cur+4) ; 
      200 	   curv = glpl_$crh(cur+1) ;  
      201 	   maxv = glpl_$crh(cur+3) ;  
      202 	  
      203 	   radix = 1; 
      204 	   if (mods ^= 0) then radix = mods; 
      205 	  
      206 		jut = link - divide(link,radix,26,0) * radix ;
      207 	   if (jut = 0) then go to label_2200; 
      208 	   splice = radix-jut; 
      209 	 
      210 label_2100:	
      211 	   do j = 1 to splice ; 
      212 	      call pulnk_$pulnk_(link+j-1,mnopdu,0) ;   
      213   
      214 end label_2100 ;
      215 	 
      216 	link = link + splice ;
      217   
      218 label_2200:	
      219 	  
      220 	/* check max vs. current values. */
      221 	  
      222 	   if (curv < maxv) then go to label_2300 ; 
      223 	 	maxv = curv;
      224 	 	call glpl_$storr(cur+3,maxv);
      225 label_2300:	  
      226 
      227 	if mods ^= 0 then if ilnkmod = 0 then ilnkmod = mods;
      228 			else if mod (mods, ilnkmod) = 0 then ilnkmod = mods;
      229 			else if mod (ilnkmod, mods) ^= 0 then ilnkmod = ilnkmod * mods;
      230 	  
      231 	/* set origin */
      232 	  
      233 	   call glpl_$storl(cur+3,link); 
      234 	   link = link+maxv; 
      235 	  
      236 	/* set current value to zero. */  
      237 	  
      238 	   call glpl_$storr(cur+1,0) ;
      239 	  
      240 	/* and loop around */
      241 	  
      242 	   cur = glpl_$crh(cur+2); 
      243 	   go to label_2000; 
      244 label_2888:
      245 	   if eb_data_$separate_static
      246 	      then do;
      247 		 if linkage_done then goto label_2999;
      248 		 cur = llclst;
      249 		 call glpl_$storr(cur+2,lpsect);
      250 		 call glpl_$storl(lpsect+2,cur);
      251 		 eb_data_$stat_len = link + mod(link,2);
      252 		 link = 0;
      253 		 linkage_done = "1"b;
      254 		 goto label_2000;
      255 		 end;
      256 
      257 label_2999:	  
      258 	  
      259 	/* now go through and do the same for symbol    
      260*	  segment location counters. */  
      261 	  
      262 	   symbol = 0 ; 
      263 	   cur = slclst; 
      264 label_3000:	 if (cur = 0) then go to label_3999; 
      265 	  
      266 	   mods = glpl_$clh(cur+4) ; 
      267 	   curv = glpl_$crh(cur+1) ;  
      268 	   maxv = glpl_$crh(cur+3) ;  
      269 	  
      270 	   radix = 1 ; 
      271 	   if (mods ^= 0) then radix = mods; 
      272 	  
      273 		jut = symbol - divide(symbol, radix, 26, 0 ) * radix ;
      274 	   if (jut = 0) then go to label_3200; 
      275 	   splice = radix-jut; 
      276 label_3100:	
      277 	   do j = 1 to splice ; 
      278 	     call pusmb_$pusmb_(symbol+j-1,mnopdu,0) ;  
      279   
      280 end label_3100 ;
      281 	 
      282 	symbol = symbol + splice ;
      283   
      284 label_3200:	
      285 	  
      286 	/* check max vs. current values. */
      287 	  
      288 	   if (curv < maxv) then go to label_3300 ; 
      289 	 maxv = curv; 
      290 	 call glpl_$storr(cur+3,maxv); 
      291 label_3300:	
      292 	  
      293 	/* set origin */
      294 	  
      295 	   call glpl_$storl(cur+3,symbol); 
      296 	   symbol = symbol+maxv ; 
      297 	  
      298 	/* set current value to zero. */  
      299 	  
      300 	   call glpl_$storr(cur+1,0) ;
      301 	  
      302 	/* and loop around */
      303 	  
      304 	   cur = glpl_$crh(cur+2); 
      305 	   go to label_3000; 
      306 
      307 label_3999:	
      308 	/* definition section */
      309 	definition = 0;
      310 	cur = dlclst;
      311 label_4000:
      312 	if (cur = 0) then goto label_4999;
      313 	mods = glpl_$clh(cur+4);
      314 	curv = glpl_$crh(cur+1) ;  
      315 	maxv = glpl_$crh(cur+3) ;  
      316 	  
      317 	radix = 1; 
      318 	if (mods ^= 0) then radix = mods; 
      319 	  
      320 	jut = definition - divide(definition,radix,26,0) * radix ;
      321 	if (jut = 0) then go to label_4200 ;
      322 	splice = radix - jut;
      323 
      324 	do j = 1 to splice;
      325 		 call pudef_$pudef_(definition+j-1,mnopdu,0);
      326 	  end;
      327 	definition = definition + splice;
      328 label_4200:
      329 	if curv < maxv then goto label_4300;
      330 	     maxv = curv;
      331 	     call glpl_$storr(cur+3,maxv);
      332 
      333 label_4300:
      334 	call glpl_$storl(cur+3,definition);
      335 	definition = definition + maxv;
      336 	call glpl_$storr(cur+1,0);
      337 	cur = glpl_$crh(cur+2);
      338 	goto label_4000;
      339 
      340 label_4999:
      341 	/* and that seems to be all */
      342 	  
      343 end postp1_ ;
	SOURCE FILES USED IN THIS COMPILATION.

LINE      NUMBER  DATE MODIFIED     NAME			PATHNAME
             0    10/17/88  0938.9  postp1_.pl1                       >spec>install>1170>postp1_.pl1
78           1    11/12/86  1103.0  alm_lc.incl.pl1                   >ldd>include>alm_lc.incl.pl1
94           2    10/21/74  1243.0  concom.incl.pl1                   >ldd>include>concom.incl.pl1
95           3    10/21/74  1242.9  varcom.incl.pl1                   >ldd>include>varcom.incl.pl1
	NAMES DECLARED IN THIS COMPILATION.

IDENTIFIER	     OFFSET    LOC STORAGE CLASS   DATA TYPE		ATTRIBUTES AND REFERENCES
								(* indicates a set context)

NAMES DECLARED BY DECLARE STATEMENT.
cur                             000105 automatic       fixed bin(26,0)          dcl 76 set ref 113* 114 116 117 118 141 152 157 161*
                                                                                  161 186* 187* 187 188 189* 190* 190 191 193* 197
                                                                                  199 200 201 224 233 238 242* 242 248* 249 250*
                                                                                  263* 264 266 267 268 290 291 300 304* 304 310* 311
                                                                                  313 314 315 331 333 336 337* 337
curv                            000104 automatic       fixed bin(26,0)          dcl 76 set ref 117* 135 140 200* 218 223 267* 284
                                                                                  289 314* 328 330
definition                      000112 automatic       fixed bin(26,0)          dcl 76 set ref 307* 320 320 325 327* 327 333* 335*
                                                                                  335
dlclst                    5     000014 external static fixed bin(26,0)          level 2 dcl 1-22 ref 310
eb_data_$concom                 000040 external static structure                level 1 dcl 2-6
eb_data_$lccom                  000014 external static structure                level 1 unaligned dcl 1-22
eb_data_$lcsect                 000016 external static structure                level 1 unaligned dcl 1-58
eb_data_$separate_static        000012 external static bit(1)                   packed unaligned dcl 71 ref 184 244
eb_data_$stat_len               000010 external static fixed bin(26,0)          dcl 70 set ref 183* 251*
eb_data_$varcom                 000042 external static structure                level 1 dcl 3-7
glpl_$clh                       000020 constant        entry                    external dcl 82 ref 116 187 199 266 313
glpl_$crh                       000022 constant        entry                    external dcl 82 ref 117 118 161 190 200 201 242 267
                                                                                  268 304 314 315 337
glpl_$storl                     000026 constant        entry                    external dcl 87 ref 101 152 191 233 250 291 333
glpl_$storr                     000024 constant        entry                    external dcl 87 ref 102 141 157 188 224 238 249 290
                                                                                  300 331 336
ilnkmod                 453     000042 external static fixed bin(26,0)          level 2 dcl 3-7 set ref 106* 225 225* 228 228* 229
                                                                                  229* 229
itxtmod                 452     000042 external static fixed bin(26,0)          level 2 dcl 3-7 set ref 106* 142 142* 147 147* 148
                                                                                  148* 148
j                               000110 automatic       fixed bin(26,0)          dcl 76 set ref 127* 129* 210* 212* 276* 278* 324*
                                                                                  325*
jut                             000106 automatic       fixed bin(26,0)          dcl 76 set ref 123* 124 125 206* 207 208 273* 274
                                                                                  275 320* 321 322
link                            000114 automatic       fixed bin(26,0)          dcl 76 set ref 163* 206 206 212 216* 216 233* 234*
                                                                                  234 251 251 252*
linkage_done                    000100 automatic       bit(1)                   dcl 75 set ref 195* 247 253*
llclst                    3     000014 external static fixed bin(26,0)          level 2 dcl 1-22 ref 189 193 248
lpsect                          000016 external static fixed bin(26,0)          level 2 dcl 1-58 set ref 186 249* 250
maxv                            000103 automatic       fixed bin(26,0)          dcl 76 set ref 118* 135 140* 141* 153 201* 218 223*
                                                                                  224* 234 268* 284 289* 290* 296 315* 328 330* 331*
                                                                                  335
mnopdu                  114     000040 external static fixed bin(26,0)          level 2 dcl 2-6 set ref 129* 212* 278* 325*
mods                            000113 automatic       fixed bin(26,0)          dcl 76 set ref 116* 121 121 142 142 147 147 148 148
                                                                                  199* 204 204 225 225 228 228 229 229 266* 271 271
                                                                                  313* 318 318
pudef_$pudef_                   000034 constant        entry                    external dcl 87 ref 325
pulnk_$pulnk_                   000032 constant        entry                    external dcl 87 ref 212
pusmb_$pusmb_                   000036 constant        entry                    external dcl 87 ref 278
putxt_$putxt_                   000030 constant        entry                    external dcl 87 ref 129
radix                           000102 automatic       fixed bin(26,0)          dcl 76 set ref 120* 121* 123 123 125 203* 204* 206
                                                                                  206 208 270* 271* 273 273 275 317* 318* 320 320
                                                                                  322
slclst                    4     000014 external static fixed bin(26,0)          level 2 dcl 1-22 ref 263
splice                          000107 automatic       fixed bin(26,0)          dcl 76 set ref 125* 127 133 208* 210 216 275* 276
                                                                                  282 322* 324 327
symbol                          000111 automatic       fixed bin(26,0)          dcl 76 set ref 257* 273 273 278 282* 282 291* 296*
                                                                                  296
text                            000101 automatic       fixed bin(26,0)          dcl 76 set ref 107* 123 123 129 133* 133 152* 153*
                                                                                  153
tlclst                    2     000014 external static fixed bin(26,0)          level 2 dcl 1-22 set ref 101 102 103* 113
ulcend                    1     000014 external static fixed bin(26,0)          level 2 dcl 1-22 set ref 101 102 105*
ulclst                          000014 external static fixed bin(26,0)          level 2 dcl 1-22 set ref 100 103 104*

NAMES DECLARED BY DECLARE STATEMENT AND NEVER REFERENCED.
eb_data_$curlc                         external static structure                level 1 unaligned dcl 1-15
eb_data_$lccall                        external static structure                level 1 unaligned dcl 1-18
eb_data_$lcdefs                        external static structure                level 1 unaligned dcl 1-30
eb_data_$lcentries                     external static structure                level 1 unaligned dcl 1-34
eb_data_$lchead                        external static structure                level 1 unaligned dcl 1-38
eb_data_$lclit                         external static structure                level 1 unaligned dcl 1-42
eb_data_$lcrlk                         external static structure                level 1 unaligned dcl 1-46
eb_data_$lcrst                         external static structure                level 1 unaligned dcl 1-50
eb_data_$lcrtx                         external static structure                level 1 unaligned dcl 1-54
eb_data_$lcst                          external static structure                level 1 unaligned dcl 1-62
eb_data_$lctext                        external static structure                level 1 unaligned dcl 1-66
eb_data_$lctv                          external static structure                level 1 unaligned dcl 1-70
mode                                   automatic       fixed bin(26,0)          dcl 76

NAMES DECLARED BY EXPLICIT CONTEXT.
label_100                       000060 constant        label                    dcl 107 ref 100
label_1000                      000064 constant        label                    dcl 114 ref 162
label_1100                      000156 constant        label                    dcl 127
label_1200                      000211 constant        label                    dcl 135 ref 124
label_1300                      000231 constant        label                    dcl 142 ref 135
label_1999                      000332 constant        label                    dcl 163 ref 114
label_2000                      000432 constant        label                    dcl 197 ref 243 254
label_2100                      000524 constant        label                    dcl 210
label_2200                      000557 constant        label                    dcl 218 ref 207
label_2300                      000577 constant        label                    dcl 225 ref 218
label_2888                      000700 constant        label                    dcl 244 ref 197
label_2999                      000750 constant        label                    dcl 257 ref 247
label_3000                      000754 constant        label                    dcl 264 ref 305
label_3100                      001046 constant        label                    dcl 276
label_3200                      001101 constant        label                    dcl 284 ref 274
label_3300                      001121 constant        label                    dcl 291 ref 284
label_3999                      001173 constant        label                    dcl 307 ref 264
label_4000                      001200 constant        label                    dcl 311 ref 338
label_4200                      001325 constant        label                    dcl 328 ref 321
label_4300                      001345 constant        label                    dcl 333 ref 328
label_4999                      001417 constant        label                    dcl 340 ref 311
postp1_                         000002 constant        entry                    external dcl 22

NAMES DECLARED BY CONTEXT OR IMPLICATION.
divide                                                 builtin function         ref 123 206 273 320
mod                                                    builtin function         ref 147 148 228 229 251

STORAGE REQUIREMENTS FOR THIS PROGRAM.

	Object	Text	Link	Symbol	Defs	Static
Start          0       0      1560        1624    1421        1570
Length      2076    1421        44         236     137           0

BLOCK NAME	         STACK SIZE     TYPE		WHY NONQUICK/WHO SHARES STACK FRAME
postp1_                              98 external procedure  is an external procedure.  

STORAGE FOR AUTOMATIC VARIABLES.

STACK FRAME                 LOC IDENTIFIER                  BLOCK NAME
postp1_                  000100 linkage_done                postp1_
                         000101 text                        postp1_
                         000102 radix                       postp1_
                         000103 maxv                        postp1_
                         000104 curv                        postp1_
                         000105 cur                         postp1_
                         000106 jut                         postp1_
                         000107 splice                      postp1_
                         000110 j                           postp1_
                         000111 symbol                      postp1_
                         000112 definition                  postp1_
                         000113 mods                        postp1_
                         000114 link                        postp1_

THE FOLLOWING EXTERNAL OPERATORS ARE USED BY THIS PROGRAM.
call_ext_out        return_mac          mdfx1               ext_entry

THE FOLLOWING EXTERNAL ENTRIES ARE CALLED BY THIS PROGRAM.
glpl_$clh                     glpl_$crh                     glpl_$storl                   glpl_$storr
pudef_$pudef_                 pulnk_$pulnk_                 pusmb_$pusmb_                 putxt_$putxt_

THE FOLLOWING EXTERNAL VARIABLES ARE USED BY THIS PROGRAM.
eb_data_$concom               eb_data_$lccom                eb_data_$lcsect               eb_data_$separate_static
eb_data_$stat_len             eb_data_$varcom




   LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC   
     22 000001       100 000007       101 000011       102 000027       103 000046       104 000052       105 000053
    106 000054       107 000060       113 000061       114 000064       116 000066       117 000103       118 000121
    120 000137       121 000141       123 000144       124 000152       125 000153       127 000156       129 000165
    131 000205       133 000207       135 000211       140 000214       141 000215       142 000231       147 000242
    148 000251       152 000260       153 000274       157 000276       161 000313       162 000331       163 000332
    183 000333       184 000335       186 000337       187 000341       188 000355       189 000371       190 000375
    191 000411       192 000425       193 000426       195 000431       197 000432       199 000434       200 000451
    201 000467       203 000505       204 000507       206 000512       207 000520       208 000521       210 000524
    212 000533       214 000553       216 000555       218 000557       223 000562       224 000563       225 000577
    228 000610       229 000617       233 000626       234 000642       238 000644       242 000661       243 000677
    244 000700       247 000703       248 000705       249 000710       250 000722       251 000736       252 000744
    253 000745       254 000747       257 000750       263 000751       264 000754       266 000756       267 000773
    268 001011       270 001027       271 001031       273 001034       274 001042       275 001043       276 001046
    278 001055       280 001075       282 001077       284 001101       289 001104       290 001105       291 001121
    296 001135       300 001137       304 001154       305 001172       307 001173       310 001174       311 001200
    313 001202       314 001217       315 001235       317 001253       318 001255       320 001260       321 001266
    322 001267       324 001272       325 001301       326 001321       327 001323       328 001325       330 001330
    331 001331       333 001345       335 001361       336 001363       337 001400       338 001416       340 001417


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
