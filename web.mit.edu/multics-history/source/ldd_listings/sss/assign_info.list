ASSEMBLY LISTING OF SEGMENT >spec>on>pl128d>assign_info.alm                 
ASSEMBLED ON:	10/03/83  1349.6 mst Mon
OPTIONS USED:	list 
ASSEMBLED BY:	ALM Version  6.6  November 1982 
ASSEMBLER CREATED:	09/21/83  1227.3 mst Wed

                                     1  " ***********************************************************
                                     2  " *                                                         *
                                     3  " * Copyright, (C) Honeywell Information Systems Inc., 1982 *
                                     4  " *                                                         *
                                     5  " * Copyright (c) 1972 by Massachusetts Institute of        *
                                     6  " * Technology and Honeywell Information Systems, Inc.      *
                                     7  " *                                                         *
                                     8  " ***********************************************************
                                     9  
                                    10  " information table for assignment operator
                                    11  "
    000000                          12  	name	assign_info
                        000000      13  	segdef	assign_info
                                    14  "
                                    15  " Format of each entry in table is
                                    16  "
                                    17  "	vfd	6/action_a,6/action_b,12/macro_1,12/macro_2
                                    18  "
    000000                          19  assign_info:
    000000                          20  	null
                                    21  "
                                    22  "
                                    23  "	real_fix_bin_1 = ...
                                    24  "
    000000  aa   010500 000000      25  	vfd	6/1,6/5		= real_fix_bin_1
    000001  aa   010500 000000      26  	vfd	6/1,6/5		= real_fix_bin_2
    000002  aa   010701 740000      27  	vfd	6/1,6/7,12/124	= real_flt_bin_1
    000003  aa   010701 740000      28  	vfd	6/1,6/7,12/124	= real_flt_bin_2
    000004  aa   020400 000000      29  	vfd	6/2,6/4		= complex_fix_bin_1
    000005  aa   020400 000000      30  	vfd	6/2,6/4		= complex_fix_bin_2
    000006  aa   040101 740000      31  	vfd	6/4,6/1,12/124	= complex_flt_bin_1
    000007  aa   020400 000000      32  	vfd	6/2,6/4		= complex_flt_bin_2
    000010  aa   020400 000000      33  	vfd	6/2,6/4		= real_fix_dec
    000011  aa   020400 000000      34  	vfd	6/2,6/4		= real_flt_dec
    000012  aa   020400 000000      35  	vfd	6/2,6/4		= complex_fix_dec
    000013  aa   020400 000000      36  	vfd	6/2,6/4		= complex_flt_dec
    000014  aa   020200 000000      37  	vfd	6/2,6/2		= char_string
    000015  aa   060000 000000      38  	vfd	6/6		= bit_string
                                    39  "
                                    40  "	real_fix_bin_2 = ...
                                    41  "
    000016  aa   010501 300000      42  	vfd	6/1,6/5,12/88	= real_fix_bin_1
    000017  aa   010500 000000      43  	vfd	6/1,6/5		= real_fix_bin_2
    000020  aa   010701 750000      44  	vfd	6/1,6/7,12/125	= real_flt_bin_1
    000021  aa   010701 750000      45  	vfd	6/1,6/7,12/125	= real_flt_bin_2
    000022  aa   020400 000000      46  	vfd	6/2,6/4		= complex_fix_bin_1
    000023  aa   020400 000000      47  	vfd	6/2,6/4		= complex_fix_bin_2
    000024  aa   040101 750000      48  	vfd	6/4,6/1,12/125	= complex_flt_bin_1
    000025  aa   020400 000000      49  	vfd	6/2,6/4		= complex_flt_bin_2
    000026  aa   020400 000000      50  	vfd	6/2,6/4		= real_fix_dec
    000027  aa   020400 000000      51  	vfd	6/2,6/4		= real_flt_dec
    000030  aa   020400 000000      52  	vfd	6/2,6/4		= complex_fix_dec
    000031  aa   020400 000000      53  	vfd	6/2,6/4		= complex_flt_dec
    000032  aa   020200 000000      54  	vfd	6/2,6/2		= char_string
    000033  aa   060000 000000      55  	vfd	6/6		= bit_string
                                    56  "
                                    57  "	real_flt_bin_1 = ...
                                    58  "
    000034  aa   010601 720000      59  	vfd	6/1,6/6,12/122	= real_fix_bin_1
    000035  aa   010601 730000      60  	vfd	6/1,6/6,12/123	= real_fix_bin_2
    000036  aa   010100 000000      61  	vfd	6/1,6/1		= real_flt_bin_1
    000037  aa   010100 000000      62  	vfd	6/1,6/1		= real_flt_bin_2
    000040  aa   020400 000000      63  	vfd	6/2,6/4		= complex_fix_bin_1
    000041  aa   020400 000000      64  	vfd	6/2,6/4		= complex_fix_bin_2
    000042  aa   040100 000000      65  	vfd	6/4,6/1		= complex_flt_bin_1
    000043  aa   040100 000000      66  	vfd	6/4,6/1		= complex_flt_bin_2
    000044  aa   020400 000000      67  	vfd	6/2,6/4		= real_fix_dec
    000045  aa   020400 000000      68  	vfd	6/2,6/4		= real_flt_dec
    000046  aa   020400 000000      69  	vfd	6/2,6/4		= complex_fix_dec
    000047  aa   020400 000000      70  	vfd	6/2,6/4		= complex_flt_dec
    000050  aa   020200 000000      71  	vfd	6/2,6/2		= char_string
    000051  aa   060000 000000      72  	vfd	6/6		= bit_string
                                    73  "
                                    74  "	real_flt_bin_2 = ...
                                    75  "
    000052  aa   010601 720000      76  	vfd	6/1,6/6,12/122	= real_fix_bin_1
    000053  aa   010601 730000      77  	vfd	6/1,6/6,12/123	= real_fix_bin_2
    000054  aa   010100 000000      78  	vfd	6/1,6/1		= real_flt_bin_1
    000055  aa   010100 000000      79  	vfd	6/1,6/1		= real_flt_bin_2
    000056  aa   020400 000000      80  	vfd	6/2,6/4		= complex_fix_bin_1
    000057  aa   020400 000000      81  	vfd	6/2,6/4		= complex_fix_bin_2
    000060  aa   040100 000000      82  	vfd	6/4,6/1		= complex_flt_bin_1
    000061  aa   020400 000000      83  	vfd	6/2,6/4		= complex_flt_bin_2
    000062  aa   020400 000000      84  	vfd	6/2,6/4		= real_fix_dec
    000063  aa   020400 000000      85  	vfd	6/2,6/4		= real_flt_dec
    000064  aa   020400 000000      86  	vfd	6/2,6/4		= complex_fix_dec
    000065  aa   020400 000000      87  	vfd	6/2,6/4		= complex_flt_dec
    000066  aa   020200 000000      88  	vfd	6/2,6/2		= char_string
    000067  aa   060000 000000      89  	vfd	6/6		= bit_string
                                    90  "
                                    91  "	complex_fix_bin_1 = ...
                                    92  "
    000070  aa   020400 000000      93  	vfd	6/2,6/4		= real_fix_bin_1
    000071  aa   020400 000000      94  	vfd	6/2,6/4		= real_fix_bin_2
    000072  aa   020400 000000      95  	vfd	6/2,6/4		= real_flt_bin_1
    000073  aa   020400 000000      96  	vfd	6/2,6/4		= real_flt_bin_2
    000074  aa   020400 000000      97  	vfd	6/2,6/4		= complex_fix_bin_1
    000075  aa   020400 000000      98  	vfd	6/2,6/4		= complex_fix_bin_2
    000076  aa   020400 000000      99  	vfd	6/2,6/4		= complex_flt_bin_1
    000077  aa   020400 000000     100  	vfd	6/2,6/4		= complex_flt_bin_2
    000100  aa   020400 000000     101  	vfd	6/2,6/4		= real_fix_dec
    000101  aa   020400 000000     102  	vfd	6/2,6/4		= real_flt_dec
    000102  aa   020400 000000     103  	vfd	6/2,6/4		= complex_fix_dec
    000103  aa   020400 000000     104  	vfd	6/2,6/4		= complex_flt_dec
    000104  aa   020200 000000     105  	vfd	6/2,6/2		= char_string
    000105  aa   020400 000000     106  	vfd	6/2,6/4		= bit_string
                                   107  "
                                   108  "	complex_fix_bin_2 = ...
                                   109  "
    000106  aa   020400 000000     110  	vfd	6/2,6/4		= real_fix_bin_1
    000107  aa   020400 000000     111  	vfd	6/2,6/4		= real_fix_bin_2
    000110  aa   020400 000000     112  	vfd	6/2,6/4		= real_flt_bin_1
    000111  aa   020400 000000     113  	vfd	6/2,6/4		= real_flt_bin_2
    000112  aa   020400 000000     114  	vfd	6/2,6/4		= complex_fix_bin_1
    000113  aa   020400 000000     115  	vfd	6/2,6/4		= complex_fix_bin_2
    000114  aa   020400 000000     116  	vfd	6/2,6/4		= complex_flt_bin_1
    000115  aa   020400 000000     117  	vfd	6/2,6/4		= complex_flt_bin_2
    000116  aa   020400 000000     118  	vfd	6/2,6/4		= real_fix_dec
    000117  aa   020400 000000     119  	vfd	6/2,6/4		= real_flt_dec
    000120  aa   020400 000000     120  	vfd	6/2,6/4		= complex_fix_dec
    000121  aa   020400 000000     121  	vfd	6/2,6/4		= complex_flt_dec
    000122  aa   020200 000000     122  	vfd	6/2,6/2		= char_string
    000123  aa   020400 000000     123  	vfd	6/2,6/4		= bit_string
                                   124  "
                                   125  "	complex_flt_bin_1 = ...
                                   126  "
    000124  aa   010606 130000     127  	vfd	6/1,6/6,12/395	= real_fix_bin_1
    000125  aa   010606 160000     128  	vfd	6/1,6/6,12/398	= real_fix_bin_2
    000126  aa   030106 060612     129  	vfd	6/3,6/1,12/390,12/394 = real_flt_bin_1
    000127  aa   030106 060612     130  	vfd	6/3,6/1,12/390,12/394 = real_flt_bin_2
    000130  aa   020400 000000     131  	vfd	6/2,6/4		= complex_fix_bin_1
    000131  aa   020400 000000     132  	vfd	6/2,6/4		= complex_fix_bin_2
    000132  aa   040100 000000     133  	vfd	6/4,6/1		= complex_flt_bin_1
    000133  aa   020400 000000     134  	vfd	6/2,6/4		= complex_flt_bin_2
    000134  aa   020400 000000     135  	vfd	6/2,6/4		= real_fix_dec
    000135  aa   020400 000000     136  	vfd	6/2,6/4		= real_flt_dec
    000136  aa   020400 000000     137  	vfd	6/2,6/4		= complex_fix_dec
    000137  aa   020400 000000     138  	vfd	6/2,6/4		= complex_flt_dec
    000140  aa   020200 000000     139  	vfd	6/2,6/2		= char_string
    000141  aa   060000 000000     140  	vfd	6/6		= bit_string
                                   141  "
                                   142  "	complex_flt_bin_2 = ...
                                   143  "
    000142  aa   020400 000000     144  	vfd	6/2,6/4		= real_fix_bin_1
    000143  aa   020400 000000     145  	vfd	6/2,6/4		= real_fix_bin_2
    000144  aa   020400 000000     146  	vfd	6/2,6/4		= real_flt_bin_1
    000145  aa   020400 000000     147  	vfd	6/2,6/4		= real_flt_bin_2
    000146  aa   020400 000000     148  	vfd	6/2,6/4		= complex_fix_bin_1
    000147  aa   020400 000000     149  	vfd	6/2,6/4		= complex_fix_bin_2
    000150  aa   020400 000000     150  	vfd	6/2,6/4		= complex_flt_bin_1
    000151  aa   020400 000000     151  	vfd	6/2,6/4		= complex_flt_bin_2
    000152  aa   020400 000000     152  	vfd	6/2,6/4		= real_fix_dec
    000153  aa   020400 000000     153  	vfd	6/2,6/4		= real_flt_dec
    000154  aa   020400 000000     154  	vfd	6/2,6/4		= complex_fix_dec
    000155  aa   020400 000000     155  	vfd	6/2,6/4		= complex_flt_dec
    000156  aa   020200 000000     156  	vfd	6/2,6/2		= char_string
    000157  aa   020400 000000     157  	vfd	6/2,6/4		= bit_string
                                   158  "
                                   159  "	real_fix_dec = ...
                                   160  "
    000160  aa   020400 000000     161  	vfd	6/2,6/4		= real_fix_bin_1
    000161  aa   020400 000000     162  	vfd	6/2,6/4		= real_fix_bin_2
    000162  aa   020400 000000     163  	vfd	6/2,6/4		= real_flt_bin_1
    000163  aa   020400 000000     164  	vfd	6/2,6/4		= real_flt_bin_2
    000164  aa   020400 000000     165  	vfd	6/2,6/4		= complex_fix_bin_1
    000165  aa   020400 000000     166  	vfd	6/2,6/4		= complex_fix_bin_2
    000166  aa   020400 000000     167  	vfd	6/2,6/4		= complex_flt_bin_1
    000167  aa   020400 000000     168  	vfd	6/2,6/4		= complex_flt_bin_2
    000170  aa   020400 000000     169  	vfd	6/2,6/4		= real_fix_dec
    000171  aa   020400 000000     170  	vfd	6/2,6/4		= real_flt_dec
    000172  aa   020400 000000     171  	vfd	6/2,6/4		= complex_fix_dec
    000173  aa   020400 000000     172  	vfd	6/2,6/4		= complex_flt_dec
    000174  aa   020200 000000     173  	vfd	6/2,6/2		= char_string
    000175  aa   020400 000000     174  	vfd	6/2,6/4		= bit_string
                                   175  "
                                   176  "	real_flt_dec = ...
                                   177  "
    000176  aa   020400 000000     178  	vfd	6/2,6/4		= real_fix_bin_1
    000177  aa   020400 000000     179  	vfd	6/2,6/4		= real_fix_bin_2
    000200  aa   020400 000000     180  	vfd	6/2,6/4		= real_flt_bin_1
    000201  aa   020400 000000     181  	vfd	6/2,6/4		= real_flt_bin_2
    000202  aa   020400 000000     182  	vfd	6/2,6/4		= complex_fix_bin_1
    000203  aa   020400 000000     183  	vfd	6/2,6/4		= complex_fix_bin_2
    000204  aa   020400 000000     184  	vfd	6/2,6/4		= complex_flt_bin_1
    000205  aa   020400 000000     185  	vfd	6/2,6/4		= complex_flt_bin_2
    000206  aa   020400 000000     186  	vfd	6/2,6/4		= real_fix_dec
    000207  aa   020400 000000     187  	vfd	6/2,6/4		= real_flt_dec
    000210  aa   020400 000000     188  	vfd	6/2,6/4		= complex_fix_dec
    000211  aa   020400 000000     189  	vfd	6/2,6/4		= complex_flt_dec
    000212  aa   020200 000000     190  	vfd	6/2,6/2		= char_string
    000213  aa   020400 000000     191  	vfd	6/2,6/4		= bit_string
                                   192  "
                                   193  "	complex_fix_dec = ...
                                   194  "
    000214  aa   020400 000000     195  	vfd	6/2,6/4		= real_fix_bin_1
    000215  aa   020400 000000     196  	vfd	6/2,6/4		= real_fix_bin_2
    000216  aa   020400 000000     197  	vfd	6/2,6/4		= real_flt_bin_1
    000217  aa   020400 000000     198  	vfd	6/2,6/4		= real_flt_bin_2
    000220  aa   020400 000000     199  	vfd	6/2,6/4		= complex_fix_bin_1
    000221  aa   020400 000000     200  	vfd	6/2,6/4		= complex_fix_bin_2
    000222  aa   020400 000000     201  	vfd	6/2,6/4		= complex_flt_bin_1
    000223  aa   020400 000000     202  	vfd	6/2,6/4		= complex_flt_bin_2
    000224  aa   020400 000000     203  	vfd	6/2,6/4		= real_fix_dec
    000225  aa   020400 000000     204  	vfd	6/2,6/4		= real_flt_dec
    000226  aa   020400 000000     205  	vfd	6/2,6/4		= complex_fix_dec
    000227  aa   020400 000000     206  	vfd	6/2,6/4		= complex_flt_dec
    000230  aa   020200 000000     207  	vfd	6/2,6/2		= char_string
    000231  aa   020400 000000     208  	vfd	6/2,6/4		= bit_string
                                   209  "
                                   210  "	complex_flt_dec = ...
                                   211  "
    000232  aa   020400 000000     212  	vfd	6/2,6/4		= real_fix_bin_1
    000233  aa   020400 000000     213  	vfd	6/2,6/4		= real_fix_bin_2
    000234  aa   020400 000000     214  	vfd	6/2,6/4		= real_flt_bin_1
    000235  aa   020400 000000     215  	vfd	6/2,6/4		= real_flt_bin_2
    000236  aa   020400 000000     216  	vfd	6/2,6/4		= complex_fix_bin_1
    000237  aa   020400 000000     217  	vfd	6/2,6/4		= complex_fix_bin_2
    000240  aa   020400 000000     218  	vfd	6/2,6/4		= complex_flt_bin_1
    000241  aa   020400 000000     219  	vfd	6/2,6/4		= complex_flt_bin_2
    000242  aa   020400 000000     220  	vfd	6/2,6/4		= real_fix_dec
    000243  aa   020400 000000     221  	vfd	6/2,6/4		= real_flt_dec
    000244  aa   020400 000000     222  	vfd	6/2,6/4		= complex_fix_dec
    000245  aa   020400 000000     223  	vfd	6/2,6/4		= complex_flt_dec
    000246  aa   020200 000000     224  	vfd	6/2,6/2		= char_string
    000247  aa   020400 000000     225  	vfd	6/2,6/4		= bit_string
                                   226  "
                                   227  "	char_string = ...
                                   228  "
    000250  aa   020200 000000     229  	vfd	6/2,6/2		= real_fix_bin_1
    000251  aa   020200 000000     230  	vfd	6/2,6/2		= real_fix_bin_2
    000252  aa   020200 000000     231  	vfd	6/2,6/2		= real_flt_bin_1
    000253  aa   020200 000000     232  	vfd	6/2,6/2		= real_flt_bin_2
    000254  aa   020200 000000     233  	vfd	6/2,6/2		= complex_fix_bin_1
    000255  aa   020200 000000     234  	vfd	6/2,6/2		= complex_fix_bin_2
    000256  aa   020200 000000     235  	vfd	6/2,6/2		= complex_flt_bin_1
    000257  aa   020200 000000     236  	vfd	6/2,6/2		= complex_flt_bin_2
    000260  aa   020200 000000     237  	vfd	6/2,6/2		= real_fix_dec
    000261  aa   020200 000000     238  	vfd	6/2,6/2		= real_flt_dec
    000262  aa   020200 000000     239  	vfd	6/2,6/2		= complex_fix_dec
    000263  aa   020200 000000     240  	vfd	6/2,6/2		= complex_flt_dec
    000264  aa   050000 000000     241  	vfd	6/5		= char_string
    000265  aa   020200 000000     242  	vfd	6/2,6/2		= bit_string
                                   243  "
                                   244  "	bit_string = ...
                                   245  "
    000266  aa   070300 000176     246  	vfd	6/7,6/3,12/0,12/126 = real_fix_bin_1
    000267  aa   070300 000177     247  	vfd	6/7,6/3,12/0,12/127 = real_fix_bin_2
    000270  aa   070301 750177     248  	vfd	6/7,6/3,12/125,12/127 = real_flt_bin_1
    000271  aa   070301 750177     249  	vfd	6/7,6/3,12/125,12/127 = real_flt_bin_2
    000272  aa   020400 000000     250  	vfd	6/2,6/4		= complex_fix_bin_1
    000273  aa   020400 000000     251  	vfd	6/2,6/4		= complex_fix_bin_2
    000274  aa   040301 750177     252  	vfd	6/4,6/3,12/125,12/127 = complex_flt_bin_1
    000275  aa   020400 000000     253  	vfd	6/2,6/4		= complex_flt_bin_2
    000276  aa   020400 000000     254  	vfd	6/2,6/4		= real_fix_dec
    000277  aa   020400 000000     255  	vfd	6/2,6/4		= real_flt_dec
    000300  aa   020400 000000     256  	vfd	6/2,6/4		= complex_fix_dec
    000301  aa   020400 000000     257  	vfd	6/2,6/4		= complex_flt_dec
    000302  aa   020200 000000     258  	vfd	6/2,6/2		= char_string
    000303  aa   050000 000000     259  	vfd	6/5		= bit_string
                                   260  "
                                   261  	end

NO LITERALS
     
NAME DEFINITIONS FOR ENTRY POINTS AND SEGDEFS

    000304  5a   000003 000000 
    000305  5a   000026 600000 
    000306  aa   000000 000000 
    000307  55   000011 000002 
    000310  5a   000002 400003 
    000311  55   000006 000011 
    000312  aa  013 141 163 163
    000313  aa  151 147 156 137
    000314  aa  151 156 146 157
    000315  55   000017 000003 
    000316  0a   000000 400000 
    000317  55   000014 000003 
    000320  aa  013 141 163 163         assign_info
    000321  aa  151 147 156 137
    000322  aa  151 156 146 157
    000323  55   000002 000011 
    000324  6a   000000 400002 
    000325  55   000022 000003 
    000326  aa  014 163 171 155         symbol_table
    000327  aa  142 157 154 137
    000330  aa  164 141 142 154
    000331  aa  145 000 000 000

DEFINITIONS HASH TABLE

    000332  aa   000000 000015 
    000333  aa   000000 000000 
    000334  aa   000000 000000 
    000335  aa   000000 000000 
    000336  aa   000000 000000 
    000337  aa   000000 000000 
    000340  5a   000011 000000 
    000341  5a   000017 000000 
    000342  aa   000000 000000 
    000343  aa   000000 000000 
    000344  aa   000000 000000 
    000345  aa   000000 000000 
    000346  aa   000000 000000 
    000347  aa   000000 000000 

NO EXTERNAL NAMES

NO TRAP POINTER WORDS

TYPE PAIR BLOCKS

    000350  aa   000001 000000 
    000351  aa   000000 000000 

INTERNAL EXPRESSION WORDS

LINKAGE INFORMATION
      
    000000  aa   000000 000000 
    000001  0a   000304 000000 
    000002  aa   000000 000000 
    000003  aa   000000 000000 
    000004  aa   000000 000000 
    000005  aa   000000 000000 
    000006  22   000010 000010 
    000007  a2   000000 000000 
SYMBOL INFORMATION
     
SYMBOL TABLE HEADER
     
    000000  aa   000000 000001 
    000001  aa   163171 155142 
    000002  aa   164162 145145 
    000003  aa   000000 000004 
    000004  aa   000000 112143 
    000005  aa   305203 523135 
    000006  aa   000000 112162 
    000007  aa   426660 025170 
    000010  aa   141154 155040 
    000011  aa   040040 040040 
    000012  aa   000024 000040 
    000013  aa   000034 000040 
    000014  aa   000044 000100 
    000015  aa   000002 000002 
    000016  aa   000064 000000 
    000017  aa   000000 000130 
    000020  aa   000000 000102 
    000021  aa   000000 000117 
    000022  aa   000122 000102 
    000023  aa   000064 000000 
    000024  aa   101114 115040 
    000025  aa   126145 162163 
    000026  aa   151157 156040 
    000027  aa   040066 056066 
    000030  aa   040040 116157 
    000031  aa   166145 155142 
    000032  aa   145162 040061 
    000033  aa   071070 062040 
    000034  aa   107112 157150 
    000035  aa   156163 157156 
    000036  aa   056123 171163 
    000037  aa   115141 151156 
    000040  aa   164056 155040 
    000041  aa   040040 040040 
    000042  aa   040040 040040 
    000043  aa   040040 040040 
    000044  aa   154151 163164 
    000045  aa   040040 040040 
    000046  aa   040040 040040 
    000047  aa   040040 040040 
    000050  aa   040040 040040 
    000051  aa   040040 040040 
    000052  aa   040040 040040 
    000053  aa   040040 040040 
    000054  aa   040040 040040 
    000055  aa   040040 040040 
    000056  aa   040040 040040 
    000057  aa   040040 040040 
    000060  aa   040040 040040 
    000061  aa   040040 040040 
    000062  aa   040040 040040 
    000063  aa   040040 040040 
    000064  aa   000000 000001 
    000065  aa   000000 000001 
    000066  aa   000072 000037 
    000067  aa   121622 265244 
    000070  aa   000000 112162 
    000071  aa   263532 200000 
    000072  aa   076163 160145          >spec>on>pl128d>assign_info.alm
    000073  aa   143076 157156 
    000074  aa   076160 154061 
    000075  aa   062070 144076 
    000076  aa   141163 163151 
    000077  aa   147156 137151 
    000100  aa   156146 157056 
    000101  aa   141154 155040 
               MULTICS ASSEMBLY CROSS REFERENCE LISTING

   Value        Symbol                   Source file   Line number

           0    assign_info              assign_info:   13,   19.


NO FATAL ERRORS


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
