	COMPILATION LISTING OF SEGMENT !BBBJXlQLFZHpdL
	Compiled by: Multics PL/I Compiler, Release 31a, of October 12, 1988
	Compiled at: Honeywell Bull, Phoenix AZ, SysM
	Compiled on: 10/24/88  1605.4 mst Mon
	    Options: table map

        1 /* ***********************************************************
        2*   *                                                         *
        3*   * Copyright, (C) Honeywell Bull Inc., 1988                *
        4*   *                                                         *
        5*   * Copyright, (C) Honeywell Information Systems Inc., 1982 *
        6*   *                                                         *
        7*   * Copyright (c) 1972 by Massachusetts Institute of        *
        8*   * Technology and Honeywell Information Systems, Inc.      *
        9*   *                                                         *
       10*   *********************************************************** */
       11 
       12 
       13 
       14 
       15 /* HISTORY COMMENTS:
       16*  1) change(88-10-18,WAAnderson), approve(88-10-18,MCR7952),
       17*     audit(88-10-18,JRGray), install(88-10-24,MR12.2-1184):
       18*     Probe source archive split. Part of C-Probe Support.
       19*                                                   END HISTORY COMMENTS */
       20 
       21 
       22 probe_data_: proc ();
       23 
       24 /* *	External static and constant data for the probe debugger.
       25*   *	Created: 05/28/79 W. Olin Sibert (from rdm_data_)
       26*   *	Modified: 09/19/79 JRDavis to add "greeting msg."
       27*   *	Modified: 10 Sep 79 JRD remove cleverness so as to not startle Martinson
       28*   *      Modified:  5 May 80 JRD probe 5.2
       29*   *	Modified: 17 April 1981 by M. N. Davidoff for probe 5.3.
       30*   *	Modified: 05/05/82 S. Herbst probe 5.4
       31*   *	Modified: 04/20/84 S. Herbst probe 5.5
       32**/
       33 
       34 	dcl     1 cds_data		 aligned like cds_args; /* arguments to create_data_segment_ subr */
       35 
       36 	dcl     code		 fixed binary (35);
       37 
       38 
       39 	dcl     com_err_		 entry () options (variable);
       40 	dcl     ioa_$rsnnl		 entry options (variable);
       41 	dcl     ioa_		 entry options (variable);
       42 	dcl     create_data_segment_	 entry (pointer, fixed binary (35));
       43 
       44 
       45 	dcl     whoami		 char (12) internal static options (constant) init ("probe_data_");
       46 	dcl     EXCLUDE_ARRAY	 (1) char (32) internal static options (constant) init ("pad*");
       47 
       48 	dcl     (addr, hbound, null, size, string) builtin;
       49 
       50 	dcl     EXL_INFO		 bit (1) aligned internal static options (constant) initial ("0"b);
       51 	dcl     EXL_VERSION		 bit (1) aligned internal static options (constant) initial ("0"b);
       52 
       53 	dcl     1 probe_constant_data	 aligned,
       54 		2 major_version	 fixed bin,
       55 		2 minor_version	 fixed bin,
       56 		2 version_string	 char (32) aligned,
       57 		2 info_directory	 char (168) aligned,
       58 		2 debug_sw	 bit (1) aligned,
       59 		2 catch_faults	 bit (1) aligned,
       60 		2 scratch_segment_name char (32) aligned,
       61 		2 break_segment_suffix char (32) aligned,
       62 		2 prompt_string	 char (32) varying,
       63 		2 greeting_msg	 char (256) varying,
       64 		2 pad1		 fixed bin;
       65 
       66 	dcl     1 probe_static_data	 aligned,
       67 		2 probe_scratch_ptr	 pointer,
       68 		2 probe_static_info_ptr pointer,
       69 		2 invocation_list_ptr pointer,
       70 		2 break_segment_ptr	 pointer;
       71 
       72 /**/
       73 
       74 	probe_constant_data.major_version = 5;
       75 	probe_constant_data.minor_version = 5;
       76 
       77 	if EXL_VERSION then
       78 	     call ioa_ ("Generating probe_data_ exl version ^d.^d",
       79 		probe_constant_data.major_version, probe_constant_data.minor_version);
       80 
       81 	call ioa_$rsnnl ("probe ^d.^d", probe_constant_data.version_string, (0),
       82 	     probe_constant_data.major_version, probe_constant_data.minor_version);
       83 
       84 	if EXL_INFO then
       85 	     probe_constant_data.info_directory = ">exl>info";
       86 	else probe_constant_data.info_directory = ">doc>info";
       87 
       88 	probe_constant_data.scratch_segment_name = "probe_scratch_";
       89 	probe_constant_data.break_segment_suffix = "probe";
       90 	probe_constant_data.prompt_string = "probe^[(^d)^;^s^]:^2x";
       91 	probe_constant_data.greeting_msg = "";
       92 
       93 	probe_constant_data.debug_sw = "0"b;
       94 	probe_constant_data.catch_faults = "1"b;
       95 
       96 	probe_static_data.probe_static_info_ptr = null ();
       97 	probe_static_data.invocation_list_ptr = null ();
       98 	probe_static_data.probe_scratch_ptr = null ();
       99 	probe_static_data.break_segment_ptr = null ();
      100 
      101 	unspec (cds_data) = "0"b;
      102 
      103 	cds_data.sections (1).p = addr (probe_constant_data);
      104 	cds_data.sections (1).len = size (probe_constant_data);
      105 	cds_data.sections (1).struct_name = "probe_constant_data";
      106 
      107 	cds_data.sections (2).p = addr (probe_static_data);
      108 	cds_data.sections (2).len = size (probe_static_data);
      109 	cds_data.sections (2).struct_name = "probe_static_data";
      110 
      111 	cds_data.seg_name = whoami;
      112 
      113 	cds_data.num_exclude_names = hbound (EXCLUDE_ARRAY, 1);
      114 	cds_data.exclude_array_ptr = addr (EXCLUDE_ARRAY);
      115 
      116 	string (cds_data.switches) = "0"b;
      117 	cds_data.switches.have_text = "1"b;		/* only create text section */
      118 	cds_data.switches.have_static = "1"b;
      119 
      120 	call create_data_segment_ (addr (cds_data), code);
      121 
      122 	if code ^= 0 then call com_err_ (code, whoami);
      123 
      124 	return;
      125 
      126 /**/
      127 
  1     1 /* BEGIN INCLUDE FILE cds_args.incl.pl1 */
  1     2 
  1     3 dcl 1 cds_args based aligned,
  1     4     2 sections (2),
  1     5       3 p ptr,					/* pointer to data for text/static section */
  1     6       3 len fixed bin (18),				/* size of text/static section */
  1     7       3 struct_name char (32),			/* name of declared structure for this section */
  1     8     2 seg_name char (32),				/* name to create segment by */
  1     9     2 num_exclude_names fixed bin,			/* number of names in exclude array */
  1    10     2 exclude_array_ptr ptr,				/* pointer to array of exclude names */
  1    11     2 switches,					/* control switches */
  1    12       3 defs_in_link bit (1) unal,			/* says put defs in linkage */
  1    13       3 separate_static bit (1) unal,			/* says separate static section is wanted */
  1    14       3 have_text bit (1) unal,			/* ON if text section given */
  1    15       3 have_static bit (1) unal,			/* ON if static section given */
  1    16       3 pad bit (32) unal;
  1    17 
  1    18 dcl  exclude_names (1) char (32) based;			/* pointed to be cds_args.exclude_array_ptr */
  1    19 
  1    20 /* END INCLUDE FILE cds_args.incl.pl1 */
      128 
      129      end probe_data_;
	SOURCE FILES USED IN THIS COMPILATION.

LINE      NUMBER  DATE MODIFIED     NAME			PATHNAME
             0    10/24/88  1354.2  !BBBJXlQLFZHpdL.pl1               >special_ldd>install>MR12.2-1184>probe_data_.cds
128          1    04/01/76  2209.5  cds_args.incl.pl1                 >ldd>include>cds_args.incl.pl1
	NAMES DECLARED IN THIS COMPILATION.

IDENTIFIER	     OFFSET    LOC STORAGE CLASS   DATA TYPE		ATTRIBUTES AND REFERENCES
								(* indicates a set context)

NAMES DECLARED BY DECLARE STATEMENT.
EXCLUDE_ARRAY                   000000 constant        char(32)                 initial array packed unaligned dcl 46 set ref 113
                                                                                  114
EXL_INFO                        000314 constant        bit(1)                   initial dcl 50 ref 84
EXL_VERSION                     000314 constant        bit(1)                   initial dcl 51 ref 77
addr                                                   builtin function         dcl 48 ref 103 107 114 120 120
break_segment_ptr         6     000370 automatic       pointer                  level 2 dcl 66 set ref 99*
break_segment_suffix     76     000146 automatic       char(32)                 level 2 dcl 53 set ref 89*
catch_faults             65     000146 automatic       bit(1)                   level 2 dcl 53 set ref 94*
cds_args                               based           structure                level 1 dcl 1-3
cds_data                        000100 automatic       structure                level 1 dcl 34 set ref 101* 120 120
code                            000145 automatic       fixed bin(35,0)          dcl 36 set ref 120* 122 122*
com_err_                        000012 constant        entry                    external dcl 39 ref 122
create_data_segment_            000020 constant        entry                    external dcl 42 ref 120
debug_sw                 64     000146 automatic       bit(1)                   level 2 dcl 53 set ref 93*
exclude_array_ptr        42     000100 automatic       pointer                  level 2 dcl 34 set ref 114*
greeting_msg            117     000146 automatic       varying char(256)        level 2 dcl 53 set ref 91*
have_static              44(03) 000100 automatic       bit(1)                   level 3 packed packed unaligned dcl 34 set ref 118*
have_text                44(02) 000100 automatic       bit(1)                   level 3 packed packed unaligned dcl 34 set ref 117*
hbound                                                 builtin function         dcl 48 ref 113
info_directory           12     000146 automatic       char(168)                level 2 dcl 53 set ref 84* 86*
invocation_list_ptr       4     000370 automatic       pointer                  level 2 dcl 66 set ref 97*
ioa_                            000016 constant        entry                    external dcl 41 ref 77
ioa_$rsnnl                      000014 constant        entry                    external dcl 40 ref 81
len                       2     000100 automatic       fixed bin(18,0)          array level 3 dcl 34 set ref 104* 108*
major_version                   000146 automatic       fixed bin(17,0)          level 2 dcl 53 set ref 74* 77* 81*
minor_version             1     000146 automatic       fixed bin(17,0)          level 2 dcl 53 set ref 75* 77* 81*
null                                                   builtin function         dcl 48 ref 96 97 98 99
num_exclude_names        40     000100 automatic       fixed bin(17,0)          level 2 dcl 34 set ref 113*
p                               000100 automatic       pointer                  array level 3 dcl 34 set ref 103* 107*
probe_constant_data             000146 automatic       structure                level 1 dcl 53 set ref 103 104
probe_scratch_ptr               000370 automatic       pointer                  level 2 dcl 66 set ref 98*
probe_static_data               000370 automatic       structure                level 1 dcl 66 set ref 107 108
probe_static_info_ptr
                          2     000370 automatic       pointer                  level 2 dcl 66 set ref 96*
prompt_string           106     000146 automatic       varying char(32)         level 2 dcl 53 set ref 90*
scratch_segment_name     66     000146 automatic       char(32)                 level 2 dcl 53 set ref 88*
sections                        000100 automatic       structure                array level 2 dcl 34
seg_name                 30     000100 automatic       char(32)                 level 2 dcl 34 set ref 111*
size                                                   builtin function         dcl 48 ref 104 108
string                                                 builtin function         dcl 48 set ref 116*
struct_name               3     000100 automatic       char(32)                 array level 3 dcl 34 set ref 105* 109*
switches                 44     000100 automatic       structure                level 2 dcl 34 set ref 116*
version_string            2     000146 automatic       char(32)                 level 2 dcl 53 set ref 81*
whoami                          000010 constant        char(12)                 initial packed unaligned dcl 45 set ref 111 122*

NAME DECLARED BY DECLARE STATEMENT AND NEVER REFERENCED.
exclude_names                          based           char(32)                 array packed unaligned dcl 1-18

NAME DECLARED BY EXPLICIT CONTEXT.
probe_data_                     000076 constant        entry                    external dcl 22

NAME DECLARED BY CONTEXT OR IMPLICATION.
unspec                                                 builtin function         ref 101

STORAGE REQUIREMENTS FOR THIS PROGRAM.

	Object	Text	Link	Symbol	Defs	Static
Start          0       0       402         424     315         412
Length      1750     315        22        1310      64           0

BLOCK NAME	         STACK SIZE     TYPE		WHY NONQUICK/WHO SHARES STACK FRAME
probe_data_                         306 external procedure  is an external procedure.  

STORAGE FOR AUTOMATIC VARIABLES.

STACK FRAME                 LOC IDENTIFIER                  BLOCK NAME
probe_data_              000100 cds_data                    probe_data_
                         000145 code                        probe_data_
                         000146 probe_constant_data         probe_data_
                         000370 probe_static_data           probe_data_

THE FOLLOWING EXTERNAL OPERATORS ARE USED BY THIS PROGRAM.
call_ext_out_desc   call_ext_out        return_mac          ext_entry

THE FOLLOWING EXTERNAL ENTRIES ARE CALLED BY THIS PROGRAM.
com_err_                      create_data_segment_          ioa_                          ioa_$rsnnl

NO EXTERNAL VARIABLES ARE USED BY THIS PROGRAM.




   LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC   
     22 000075        74 000103        75 000105        77 000106        81 000132        84 000167        86 000175
     88 000200        89 000203        90 000206        91 000213        93 000214        94 000215        96 000217
     97 000221        98 000222        99 000223       101 000224       103 000227       104 000231       105 000233
    107 000236       108 000240       109 000242       111 000245       113 000250       114 000252       116 000254
    117 000255       118 000257       120 000261       122 000274       124 000313


Object Segment >special_ldd>install>MR12.2-1184>probe_data_
Created on 10/24/88  1605.4 mst Mon
by Hirneisen.SysMaint.a
using create_data_segment_, Version II of Thursday, November 20, 1986

        Object    Text    Defs    Link    Symb  Static
Start        0       0     222     414     434     424
Length     625     222     172      20     155      10


16 Definitions:


segname:    probe_data_

link|16         break_segment_ptr
text|76         break_segment_suffix
text|65         catch_faults
text|64         debug_sw
text|117        greeting_msg
text|12         info_directory
link|14         invocation_list_ptr
text|0          major_version
text|1          minor_version
link|10         probe_scratch_ptr
link|12         probe_static_info_ptr
text|106        prompt_string
text|66         scratch_segment_name
symb|0          symbol_table
text|2          version_string


No Links.





                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
