	COMPILATION LISTING OF SEGMENT !BBBJPKlfbbHpXk
	Compiled by: Multics PL/I Compiler, Release 28d, of October 4, 1983
	Compiled at: Honeywell Multics Op. - System M
	Compiled on: 11/21/84  1334.6 mst Wed
	    Options: table map

        1 /* ***********************************************************
        2*   *                                                         *
        3*   * Copyright, (C) Honeywell Information Systems Inc., 1982 *
        4*   *                                                         *
        5*   *********************************************************** */
        6 vrm_data_: proc;
        7 
        8 /* NOTES:
        9*
       10*   This procedure creates the vrm_data_ database.
       11**/
       12 
       13 
       14 /* HISTORY:
       15*
       16*   82-08-20 R. Harvey: Initially written by stealing from mrds_data_.cds
       17*
       18*   84-05-18 B. G. Moberg : Changed max_vfile_wait_time to 300
       19*
       20**/
       21 
  1     1 /* BEGIN INCLUDE FILE cds_args.incl.pl1 */
  1     2 
  1     3 dcl 1 cds_args based aligned,
  1     4     2 sections (2),
  1     5       3 p ptr,					/* pointer to data for text/static section */
  1     6       3 len fixed bin (18),				/* size of text/static section */
  1     7       3 struct_name char (32),			/* name of declared structure for this section */
  1     8     2 seg_name char (32),				/* name to create segment by */
  1     9     2 num_exclude_names fixed bin,			/* number of names in exclude array */
  1    10     2 exclude_array_ptr ptr,				/* pointer to array of exclude names */
  1    11     2 switches,					/* control switches */
  1    12       3 defs_in_link bit (1) unal,			/* says put defs in linkage */
  1    13       3 separate_static bit (1) unal,			/* says separate static section is wanted */
  1    14       3 have_text bit (1) unal,			/* ON if text section given */
  1    15       3 have_static bit (1) unal,			/* ON if static section given */
  1    16       3 pad bit (32) unal;
  1    17 
  1    18 dcl  exclude_names (1) char (32) based;			/* pointed to be cds_args.exclude_array_ptr */
  1    19 
  1    20 /* END INCLUDE FILE cds_args.incl.pl1 */
       22 
       23 
       24 
       25 dcl 1 vrmd aligned,					/* the values to go into vrm_data_ */
       26 
       27      2 oid_slots_per_section  fixed bin (17) init (100),	/* Number of opening id slots  per section */
       28 
       29     2 max_vfile_wait_time fixed bin (35) init (300),	/* max time to wait for file operations for -share option */
       30 
       31      2 max_kattr_length fixed bin (35) init (253),	/* maximum length of key */
       32 
       33      2 typed_vector_array_limit fixed bin (35) init (34359738367), /* Max fixed bin 35 */
       34    
       35      2 iocb_list_block_size fixed bin (17) init (100);	/* Number of iocbs allowed in each iocb list block */
       36 dcl 1 cdsa like cds_args;
       37 dcl  code fixed bin (35);
       38 
       39 dcl (addr,
       40      size,
       41      string,
       42      null) builtin;
       43 
       44 dcl  create_data_segment_ entry (ptr, fixed bin (35));
       45 dcl  com_err_ entry options (variable);
       46 
       47 	cdsa.sections.p (1) = addr (vrmd);		/* init. info for cds */
       48 	cdsa.sections.len (1) = size (vrmd);
       49 	cdsa.sections.struct_name (1) = "vrmd";
       50 	cdsa.seg_name = "vrm_data_";
       51 	cdsa.num_exclude_names = 0;
       52 	cdsa.exclude_array_ptr = null;
       53 	string (cdsa.switches) = "0"b;
       54 	cdsa.switches.have_text = "1"b;
       55 
       56 	call create_data_segment_ (addr (cdsa), code);
       57 	if code ^= 0 then call com_err_ (code, "vrm_data_");
       58 	return;
       59 
       60      end vrm_data_;
	SOURCE FILES USED IN THIS COMPILATION.

LINE      NUMBER  DATE MODIFIED     NAME			PATHNAME
             0    11/21/84  0920.2  !BBBJPKlfbbHpXk.pl1               >special_ldd>online>mrds_install>vrm_data_.cds
22           1    04/01/76  2209.5  cds_args.incl.pl1                 >ldd>include>cds_args.incl.pl1
	NAMES DECLARED IN THIS COMPILATION.

IDENTIFIER	     OFFSET    LOC STORAGE CLASS   DATA TYPE		ATTRIBUTES AND REFERENCES
								(* indicates a set context)

NAMES DECLARED BY DECLARE STATEMENT.
addr                                                   builtin function         dcl 39 ref 47 56 56
cds_args                               based           structure                level 1 dcl 1-3
cdsa                            000106 automatic       structure                level 1 unaligned dcl 36 set ref 56 56
code                            000153 automatic       fixed bin(35,0)          dcl 37 set ref 56* 57 57*
com_err_                        000014 constant        entry                    external dcl 45 ref 57
create_data_segment_            000012 constant        entry                    external dcl 44 ref 56
exclude_array_ptr        42     000106 automatic       pointer                  level 2 dcl 36 set ref 52*
have_text                44(02) 000106 automatic       bit(1)                   level 3 packed unaligned dcl 36 set ref 54*
iocb_list_block_size      4     000100 automatic       fixed bin(17,0)          initial level 2 dcl 25 set ref 25*
len                       2     000106 automatic       fixed bin(18,0)          array level 3 dcl 36 set ref 48*
max_kattr_length          2     000100 automatic       fixed bin(35,0)          initial level 2 dcl 25 set ref 25*
max_vfile_wait_time       1     000100 automatic       fixed bin(35,0)          initial level 2 dcl 25 set ref 25*
null                                                   builtin function         dcl 39 ref 52
num_exclude_names        40     000106 automatic       fixed bin(17,0)          level 2 dcl 36 set ref 51*
oid_slots_per_section           000100 automatic       fixed bin(17,0)          initial level 2 dcl 25 set ref 25*
p                               000106 automatic       pointer                  array level 3 dcl 36 set ref 47*
sections                        000106 automatic       structure                array level 2 unaligned dcl 36
seg_name                 30     000106 automatic       char(32)                 level 2 packed unaligned dcl 36 set ref 50*
size                                                   builtin function         dcl 39 ref 48
string                                                 builtin function         dcl 39 set ref 53*
struct_name               3     000106 automatic       char(32)                 array level 3 packed unaligned dcl 36 set ref 49*
switches                 44     000106 automatic       structure                level 2 packed unaligned dcl 36 set ref 53*
typed_vector_array_limit
                          3     000100 automatic       fixed bin(35,0)          initial level 2 dcl 25 set ref 25*
vrmd                            000100 automatic       structure                level 1 dcl 25 set ref 47 48

NAME DECLARED BY DECLARE STATEMENT AND NEVER REFERENCED.
exclude_names                          based           char(32)                 array unaligned dcl 1-18

NAME DECLARED BY EXPLICIT CONTEXT.
vrm_data_                       000012 constant        entry                    external dcl 6

THERE WERE NO NAMES DECLARED BY CONTEXT OR IMPLICATION.

STORAGE REQUIREMENTS FOR THIS PROGRAM.

	Object	Text	Link	Symbol	Defs	Static
Start          0       0       162         200     107         172
Length      1176     107        16         761      52           0

BLOCK NAME	         STACK SIZE     TYPE		WHY NONQUICK/WHO SHARES STACK FRAME
vrm_data_                           126 external procedure  is an external procedure.  

STORAGE FOR AUTOMATIC VARIABLES.

STACK FRAME                 LOC IDENTIFIER                  BLOCK NAME
vrm_data_                000100 vrmd                        vrm_data_
                         000106 cdsa                        vrm_data_
                         000153 code                        vrm_data_

THE FOLLOWING EXTERNAL OPERATORS ARE USED BY THIS PROGRAM.
call_ext_out_desc   call_ext_out        return              ext_entry

THE FOLLOWING EXTERNAL ENTRIES ARE CALLED BY THIS PROGRAM.
com_err_                      create_data_segment_

NO EXTERNAL VARIABLES ARE USED BY THIS PROGRAM.




   LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC   
      6 000011        25 000017        47 000031        48 000033        49 000035        50 000040        51 000043
     52 000044        53 000046        54 000047        56 000051        57 000063        58 000106


Object Segment >special_ldd>online>mrds_install>vrm_data_
Created on 11/21/84  1334.8 mst Wed
by GJohnson.SysMaint.m
using create_data_segment_, Version II of Thursday, November 01, 1984

        Object    Text    Defs    Link    Symb  Static
Start        0       0       6     102     112     112
Length     263       6      74      10     135       0


7 Definitions:


segname:    vrm_data_

text|4          iocb_list_block_size
text|2          max_kattr_length
text|1          max_vfile_wait_time
text|0          oid_slots_per_section
symb|0          symbol_table
text|3          typed_vector_array_limit


No Links.





                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
