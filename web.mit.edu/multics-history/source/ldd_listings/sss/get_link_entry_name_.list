	COMPILATION LISTING OF SEGMENT get_link_entry_name_
	Compiled by: Multics PL/I Compiler, Release 28, of March 4, 1983
	Compiled at: Honeywell LCPD Phoenix, System M
	Compiled on: 04/07/83  1223.4 mst Thu
	    Options: optimize map

        1 /* ******************************************************
        2*   *                                                    *
        3*   *                                                    *
        4*   * Copyright (c) 1972 by Massachusetts Institute of   *
        5*   * Technology and Honeywell Information Systems, Inc. *
        6*   *                                                    *
        7*   *                                                    *
        8*   ****************************************************** */
        9 
       10 get_link_entry_name_: proc (eptr, ename, segnum, code);
       11 
       12 
       13 
       14 /* This procedure takes the address of an entry point in the linkage section and
       15*   attempts to return its name */
       16 
       17 
       18 dcl  eptr pointer;					/* Pointer to the entry point. */
       19 dcl  ename char (*);				/* Entry name output */
       20 dcl  segnum fixed bin(18);				/* seg no. of text */
       21 dcl  code fixed bin (35);				/* Standard File System Error Code. Returned. */
       22 
       23 
       24 /* Automatic Storage */
       25 
       26 
       27 dcl  pls pointer;					/* Pointer to the linkage section */
       28 dcl  offset bit (18) aligned;				/* Offset of the entry in the linkage section */
       29 dcl  owner fixed bin (18);				/* segno of ls owner */
       30 dcl  ls_offset fixed bin(18);				/* offset of ls within cls */
       31 dcl  (i, section) fixed bin;
       32 
       33 /* Externals */
       34 
       35 
       36 dcl  error_table_$name_not_found ext fixed bin (35);
       37 dcl  get_def_name_ entry (ptr, ptr, bit (18) aligned, fixed bin, char (*), fixed bin (35));
       38 dcl  hcs_$get_lp entry (ptr, ptr);
       39 dcl  find_ls_owner_ entry (ptr, fixed bin(18), fixed bin(18));
       40 dcl (addrel, bit, fixed, null, rel, bin, baseno, ptr, baseptr) builtin;
       41 
       42 
       43 /* this procedure should be called only for non-object segments */
       44 
       45 program_begins_here:
       46 
       47 	if eptr = null then goto error;
       48 
       49 	/* be sure this is a linkage section before we go looking for an entry sequence */
       50 	call find_ls_owner_ (eptr, owner, ls_offset);
       51 	if owner = -1 then do;			/* eptr doesn't point to a linkage section,
       52*						   but maybe it points to a seg that has one,
       53*						   as for example a seg created by datmk_ or type 6 link */
       54 	     owner = bin (baseno (eptr), 18);		/* we have ptr to seg itself */
       55 	     segnum = owner;			/* assume we already have ptr to text */
       56 	     offset = rel (eptr);			/* so use offset directly from ptr */
       57 	     call hcs_$get_lp (ptr (eptr, 0), pls);
       58 	     if pls = null then do;			/* may have a ring 0 seg (they're
       59*						   not all complete object segs); but
       60*						   must go into r0 to get pls */
       61 		call get_def_name_(null, ptr(eptr, 0), offset, -1, ename, code);
       62 		return;
       63 	     end;
       64 	     section = 0;				/* probably have ptr to text */
       65 	     go to get_name;			/* and forget about entry sequence */
       66 	end;
       67 	segnum = owner;				/* return ptr to real text */
       68 	pls = ptr (eptr, ls_offset);			/* get ptr to linkage header */
       69 	section = 1;				/* have ptr to linkage section */
       70 	offset = bit (fixed (fixed (rel (eptr), 18)-ls_offset, 18), 18); /* Offset to entry */
       71 
       72 get_name: call get_def_name_ (pls, null, offset, section, ename, code); /* Get name */
       73 
       74 	return;
       75 
       76 error:	code = error_table_$name_not_found;
       77      end;
	SOURCE FILES USED IN THIS COMPILATION.

LINE      NUMBER  DATE MODIFIED     NAME			PATHNAME
             0    04/07/83  1051.5  get_link_entry_name_.pl1          >spec>on>pl1-dir>get_link_entry_name_.pl1
	NAMES DECLARED IN THIS COMPILATION.

IDENTIFIER	     OFFSET    LOC STORAGE CLASS   DATA TYPE		ATTRIBUTES AND REFERENCES
								(* indicates a set context)

NAMES DECLARED BY DECLARE STATEMENT.
baseno                                                 builtin function         dcl 40 ref 54
bin                                                    builtin function         dcl 40 ref 54
bit                                                    builtin function         dcl 40 ref 70
code                                   parameter       fixed bin(35,0)          dcl 21 set ref 10 61* 72* 76*
ename                                  parameter       char                     unaligned dcl 19 set ref 10 61* 72*
eptr                                   parameter       pointer                  dcl 18 set ref 10 45 50* 54 56 57 57 61 61 68 70
error_table_$name_not_found     000010 external static fixed bin(35,0)          dcl 36 ref 76
find_ls_owner_                  000016 constant        entry                    external dcl 39 ref 50
fixed                                                  builtin function         dcl 40 ref 70 70
get_def_name_                   000012 constant        entry                    external dcl 37 ref 61 72
hcs_$get_lp                     000014 constant        entry                    external dcl 38 ref 57
ls_offset                       000104 automatic       fixed bin(18,0)          dcl 30 set ref 50* 68 70
null                                                   builtin function         dcl 40 ref 45 58 61 61 72 72
offset                          000102 automatic       bit(18)                  dcl 28 set ref 56* 61* 70* 72*
owner                           000103 automatic       fixed bin(18,0)          dcl 29 set ref 50* 51 54* 55 67
pls                             000100 automatic       pointer                  dcl 27 set ref 57* 58 68* 72*
ptr                                                    builtin function         dcl 40 ref 57 57 61 61 68
rel                                                    builtin function         dcl 40 ref 56 70
section                         000105 automatic       fixed bin(17,0)          dcl 31 set ref 64* 69* 72*
segnum                                 parameter       fixed bin(18,0)          dcl 20 set ref 10 55* 67*

NAMES DECLARED BY DECLARE STATEMENT AND NEVER REFERENCED.
addrel                                                 builtin function         dcl 40
baseptr                                                builtin function         dcl 40
i                                      automatic       fixed bin(17,0)          dcl 31

NAMES DECLARED BY EXPLICIT CONTEXT.
error                           000237 constant        label                    dcl 76 ref 45
get_link_entry_name_            000015 constant        entry                    external dcl 10
get_name                        000176 constant        label                    dcl 72 ref 65
program_begins_here             000030 constant        label                    dcl 45

THERE WERE NO NAMES DECLARED BY CONTEXT OR IMPLICATION.

STORAGE REQUIREMENTS FOR THIS PROGRAM.

	Object	Text	Link	Symbol	Defs	Static
Start          0       0       332         352     243         342
Length       524     243        20         136      67           0

BLOCK NAME	         STACK SIZE     TYPE		WHY NONQUICK/WHO SHARES STACK FRAME
get_link_entry_name_                110 external procedure  is an external procedure.  

STORAGE FOR AUTOMATIC VARIABLES.

STACK FRAME                 LOC IDENTIFIER                  BLOCK NAME
get_link_entry_name_     000100 pls                         get_link_entry_name_
                         000102 offset                      get_link_entry_name_
                         000103 owner                       get_link_entry_name_
                         000104 ls_offset                   get_link_entry_name_
                         000105 section                     get_link_entry_name_

THE FOLLOWING EXTERNAL OPERATORS ARE USED BY THIS PROGRAM.
call_ext_out_desc   call_ext_out        return              ext_entry_desc

THE FOLLOWING EXTERNAL ENTRIES ARE CALLED BY THIS PROGRAM.
find_ls_owner_                get_def_name_                 hcs_$get_lp

THE FOLLOWING EXTERNAL VARIABLES ARE USED BY THIS PROGRAM.
error_table_$name_not_found




   LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC   
     10 000010        45 000030        50 000035        51 000047        54 000052        55 000061        56 000062
     57 000064        58 000077        61 000103        62 000150        64 000151        65 000152        67 000153
     68 000155        69 000162        70 000164        72 000176        74 000236        76 000237        77 000241


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
