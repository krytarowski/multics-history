ASSEMBLY LISTING OF SEGMENT >special_ldd>install>MR12.1-1048>rtq_request_table_.alm                                                                                                                 
ASSEMBLED ON:	07/28/87  0918.7 mst Tue
OPTIONS USED:	-target l68                              list symbols 
ASSEMBLED BY:	ALM Version 7.3 November 1986   
ASSEMBLER CREATED:	11/26/86  1244.2 mst Wed

                                     1  " ********************************************
                                     2  " *                                          *
                                     3  " * Copyright, (C) Honeywell Bull Inc., 1987 *
                                     4  " *                                          *
                                     5  " ********************************************
                                     6             
                                     7  " HISTORY COMMENTS:
                                     8  "  1) change(87-05-28,TLNguyen), approve(87-05-28,MCR7692),
                                     9  "     audit(87-07-15,Blair), install(87-07-28,MR12.1-1048):
                                    10  "     implement read_tape_and_query (rtq) nonstandard subsystem as a standard
                                    11  "     ssu_ subsystem.
                                    12  "     rtq_request_table_.alm defines each request of read_tape_and_query
                                    13  "     subsystem.
                                    14  "  2) change(87-07-10,TLNguyen), approve(87-07-10,MCR7727),
                                    15  "     audit(87-07-15,Blair), install(87-07-28,MR12.1-1048):
                                    16  "     Add two new requests: rif, eof.
                                    17  "                                                      END HISTORY COMMENTS
                                    18  
    000000                          19  name       rtq_request_table_
                                    20  	
                                    21  	include	  ssu_request_macros
                                   1-1  " BEGIN INCLUDE FILE ... ssu_request_macros.incl.alm
                                   1-2  " Created:  5 May 1980 by W. Olin Sibert
                                   1-3  " Modified: 25 July 1980 by G. Palter to add multics_request macro
                                   1-4  " Modified: 1 December 1981 by G. Palter to remove user_flags
                                   1-5  " Modified: 12 February 1982 by G. Palter for version 4
                                   1-6  " Modified: 28 February 1982 by G. Palter to add dont_summarize and dont_list
                                   1-7  " Modified: 2 August 1982 by Jay Pattin to add unknown_request
                                   1-8  " Modified: 24 October 1984 by G. Palter to restore user flags and add the
                                   1-9  "    set_default_flags and set_default_multics_flags macros
                                  1-10  
                                  1-11  
                                  1-12  " ALM macros used to define subsystem request tables
                                  1-13  
                                  1-14  
                                  1-15  	macro	request_table_version
                              1   1-16  	aci	"srqt_4.0",8
                              2   1-17  	&end
                                  1-18  
                                  1-19  
                                  1-20  	macro	namelist
                              1   1-21  	maclist	off,save
                              2   1-22  	vfd	36/&K
                              3   1-23  &R&(	aci	@&i@,32
                              4   1-24  &)
                              5   1-25  	maclist	restore
                              6   1-26  	&end
                                  1-27  
                                  1-28  " 
                                  1-29  
                                  1-30  " System defined per-request flags
                                  1-31  
                        400000    1-32  	bool	flags.allow_command,400000	" valid as a command
                        200000    1-33  	bool	flags.allow_af,200000	" valid as an active function
                        600000    1-34  	bool	flags.allow_both,600000	" valid as both
                                  1-35  
                        100000    1-36  	bool	flags.unimplemented,100000	" request is not yet implemented
                        040000    1-37  	bool	flags.multics_request,040000	" request is actually a Multics command
                                  1-38  
                        020000    1-39  	bool	flags.dont_summarize,020000	" summarize_requests won't list it
                        010000    1-40  	bool	flags.dont_list,010000	" list_requests won't show it without -all
                                  1-41  
                        004000    1-42  	bool	flags.unknown,004000	" request is explicitly made unknown
                                  1-43  
                                  1-44  
                                  1-45  " Macros for setting per-request flags
                                  1-46  
                                  1-47  	macro	set_flags_loop
                              1   1-48  	maclist	off,save
                              2   1-49  &(3
                              3   1-50  &=&i,default&[	set_flags_loop	&1,(0),(&2)
                              4   1-51  &;	set	&1,&1+&i
                              5   1-52  &]&)
                              6   1-53  	maclist	restore
                              7   1-54  	&end
                                  1-55  
                                  1-56  
                                  1-57  	macro	set_flags
                              1   1-58  	maclist	off,save
                              2   1-59  	set	&1,0
                              3   1-60  &=&3,&[	set_flags_loop	&1,(0),(&2)
                              4   1-61  &;	set_flags_loop	&1,(&2),(&3)
                              5   1-62  &]
                              6   1-63  	maclist	restore
                              7   1-64  	&end
                                  1-65  
                                  1-66  " 
                                  1-67  
                                  1-68  "	set_default_flags {(system-flags)},{(user-flags)}
                                  1-69  
                                  1-70  " Sets the default system and/or user flags to be used for requests:
                                  1-71  "   system-flags: defines the default general nature of requests;" the default
                                  1-72  "      default is flags.allow_command
                                  1-73  "   user-flags:  defines the default setting for the subsystem specific flags
                                  1-74  "      associated with requests;" the default default is none (0)
                                  1-75  "   Note: If either system-flags or user-flags is ommitted, the default is not
                                  1-76  "      changed from its prior value.  This action allows the use of multiple
                                  1-77  "      set_default_flags macros within a table to change system or user
                                  1-78  "      flags without affecting the other defaults
                                  1-79  
                                  1-80  	macro	set_default_flags
                              1   1-81  	maclist	off,save
                              2   1-82  &^=&1,&[	set_flags	.dft_sf,(flags.allow_command),(&1)
                              3   1-83  &]
                              4   1-84  &^=&2,&[	set_flags	.dft_uf,(0),(&2)
                              5   1-85  &]
                              6   1-86  	maclist	restore
                              7   1-87  	&end
                                  1-88  
                                  1-89  
                                  1-90  "	set_default_multics_flags {(system-flags)},{(user-flags)}
                                  1-91  
                                  1-92  " Sets the default system and/or user flags to be used for Multics commands when used as requests:
                                  1-93  "   system-flags: defines the default general nature of Multics requests;" the
                                  1-94  "      default default is flags.allow_command+flags.allow_af
                                  1-95  "   user-flags:  defines the default setting for the subsystem specific flags
                                  1-96  "      associated with Multics requests;" the default default is none (0)
                                  1-97  "   Note: If either system-flags or user-flags is ommitted, the default is not
                                  1-98  "      changed from its prior value.  This action allows the use of multiple
                                  1-99  "      set_default_multics_flags macros within a table to change system or user
                                 1-100  "      flags without affecting the other defaults
                                 1-101  
                                 1-102  	macro	set_default_multics_flags
                              1  1-103  	maclist	off,save
                              2  1-104  &^=&1,&[	set_flags	.dft_mrsf,(flags.allow_command,flags.allow_af),(&1)
                              3  1-105  &]
                              4  1-106  &^=&2,&[	set_flags	.dft_mruf,(0),(&2)
                              5  1-107  &]
                              6  1-108  	maclist	restore
                              7  1-109  	&end
                                 1-110  
                                 1-111  " 
                                 1-112  
                                 1-113  	macro	.multics_request_doc
                              1  1-114  	null
                              2  1-115  	&end
                                 1-116  
                                 1-117  
                                 1-118  	macro	dft_multics_doc_lth
                              1  1-119  	set	.multics_doc_lth,0
                              2  1-120  	&end
                                 1-121  
                                 1-122  
                                 1-123  "	set_default_multics_doc (string)
                                 1-124  
                                 1-125  " Sets the default documentation to be used for Multics commands when used as requests:
                                 1-126  "   string: is the documentation string to be used for any subsequent requests defined by
                                 1-127  "      the multics_request_macro;" all occurences of "&1" in this string will be replaced by
                                 1-128  "      the actual name of the request;" Eg:
                                 1-129  "	set_default_multics_doc (Type '.. help &1' for more information.)
                                 1-130  
                                 1-131  	macro	set_default_multics_doc
                              1  1-132  	maclist	off,save
                              2  1-133  	macro	.multics_request_doc
                              3  1-134  	aci	@&1@
                              4  1-135  	&&end
                              5  1-136  	macro	dft_multics_doc_lth
                              6  1-137  	macro	.compute
                              7  1-138  	set	.multics_doc_lth,&&&&l1
                              8  1-139  	&&&&end
                              9  1-140  	.compute (&1)
                             10  1-141  	&&end
                             11  1-142  	maclist	restore
                             12  1-143  	&end
                                 1-144  
                                 1-145  " 
                                 1-146  
                                 1-147  "	begin_table tablename
                                 1-148  
                                 1-149  " Defines a subsystem request table (multiple tables may exist in a single object segment):
                                 1-150  "   tablename: the name by which this table may be referenced externally;" references to the
                                 1-151  "      table should be of the form segname$tablename where segname is the name of this
                                 1-152  "      object segment
                                 1-153  
                                 1-154  	macro	begin_table
                              1  1-155  	segdef	&1
                              2  1-156  	maclist	object,save
                              3  1-157  	use	tables
                              4  1-158  &1:	request_table_version
                              5  1-159  	aci	@&1@,32
                              6  1-160  	dup	6
                              7  1-161  	vfd	36/0
                              8  1-162  	dupend
                              9  1-163  	vfd	36/&1.rc
                             10  1-164  	maclist	off
                             11  1-165  	set	.rc,0
                             12  1-166  	set_default_flags (default),(default)
                             13  1-167  	set_default_multics_flags (default),(default)
                             14  1-168  	maclist	restore
                             15  1-169  	&end
                                 1-170  
                                 1-171  
                                 1-172  "	end_table	tablename
                                 1-173  
                                 1-174  " Indicates the end of a subsystem request table definition:
                                 1-175  "   tablename: the name of the table which has now been completely defined
                                 1-176  
                                 1-177  	macro	end_table
                              1  1-178  	maclist	off,save
                              2  1-179  	set	&1.rc,.rc
                              3  1-180  	maclist	restore
                              4  1-181  	&end
                                 1-182  
                                 1-183  " 
                                 1-184  
                                 1-185  "	request	name,processor,({abbreviations}),{(documentation)},
                                 1-186  "		 {(system-flags)},{(user-flags)}
                                 1-187  
                                 1-188  " Defines a subsystem request:
                                 1-189  "   name: the primary name of this request
                                 1-190  "   processor: the name of the procedure which actually executes this request;" it must be
                                 1-191  "      of the form segname$entryname
                                 1-192  "   abbreviations: is the list of defined abbreviations for this request
                                 1-193  "   documentation: a short string used by the list_requests request to explain this request
                                 1-194  "   system-flags: defines the general nature of this request;" the default is
                                 1-195  "      flags.allow_command
                                 1-196  "   user-flags: allows a subsystem to provide subsystem-specific information
                                 1-197  "      with the request's definition;" the default is none (0)
                                 1-198  
                                 1-199  	macro	request
                              1  1-200  	maclist	off,save
                              2  1-201  	set	.rc,.rc+1
                              3  1-202  	maclist	object
                              4  1-203  	use	tables
                              5  1-204  	vfd	18/&U.call,18/&U.names
                              6  1-205  &=&4,&[	vfd	36/0
                              7  1-206  &;	vfd	18/&U.info,18/&l4
                              8  1-207  	maclist	off
                              9  1-208  	use	info
                             10  1-209  &U.info:	aci	@&4@
                             11  1-210  &]
                             12  1-211  	use	tables
                             13  1-212  	set_flags	.sf,(.dft_sf),(&5)
                             14  1-213  	set_flags	.uf,(.dft_uf),(&6)
                             15  1-214  	maclist	object
                             16  1-215  	vfd	18/.sf,18/.uf
                             17  1-216  	maclist	off
                             18  1-217  	use	calls
                             19  1-218  &U.call:	epaq	*
                             20  1-219  	lprp4	7|stack_header.lot_ptr,*au
                             21  1-220  	call6	&2
                             22  1-221  	use	names
                             23  1-222  &U.names:	namelist	&1&^=&3,&[,&3&]
                             24  1-223  	maclist	restore
                             25  1-224  	&end
                                 1-225  
                                 1-226  " 
                                 1-227  
                                 1-228  "	unknown_request name,(abbreviations)
                                 1-229  
                                 1-230  " Defines an unknown request: used to make the utilities not recognize a request even though
                                 1-231  " it is defined in a later request table (such as ssu_request_tables_$standard_request):
                                 1-232  "   name: the primary name of the request to be marked as unknown
                                 1-233  "   abbreviations: is the list of defined abbreviations for this request
                                 1-234  
                                 1-235  	macro	unknown_request
                              1  1-236  	maclist	off,save
                              2  1-237  	set	.rc,.rc+1
                              3  1-238  	maclist	object
                              4  1-239  	use	tables
                              5  1-240  	vfd	18/&U.call,18/&U.names
                              6  1-241  	vfd	36/0
                              7  1-242  	vfd	18/flags.unknown,18/0
                              8  1-243  	maclist	off
                              9  1-244  	use	calls
                             10  1-245  &U.call:	epaq	*
                             11  1-246  	lprp4	7|stack_header.lot_ptr,*au
                             12  1-247  	call6	ssu_$unknown_request
                             13  1-248  	use	names
                             14  1-249  &U.names: namelist	&1&^=&2,&[,&2&]
                             15  1-250  	maclist	restore
                             16  1-251  	&end
                                 1-252  
                                 1-253  " 
                                 1-254  
                                 1-255  "	multics_request name,({abbreviations}),({documenation}),{procedure},
                                 1-256  "		       {(system-flags)},{(user-flags)}
                                 1-257  
                                 1-258  " Defines that a Multics command/AF may be used as a subsystem request:
                                 1-259  "   name: the primary name of this request (usually the name of the Multics command/AF)
                                 1-260  "   abbreviations: is the list of defined abbreviations for this request
                                 1-261  "   documentation: a short string used by the list_requests request to explain this request;
                                 1-262  "      if no documentation is provided, the documentation specified by a prior use of
                                 1-263  "      set_default_multics_doc is used
                                 1-264  "   procedure: the name of the Multics command/AF which is actually executed by this
                                 1-265  "      request;" it must be of the form segname$entryname;" if not given, the default is
                                 1-266  "      name$name
                                 1-267  "   system-flags: defines the general nature of this request;" the default is
                                 1-268  "      flags.allow_command+flags.allow_af
                                 1-269  "   user-flags: allows a subsystem to provide subsystem-specific information
                                 1-270  "      with the request's definition;" the default is none (0)
                                 1-271  
                                 1-272  	macro	multics_request
                              1  1-273  	maclist	off,save
                              2  1-274  	set	.rc,.rc+1
                              3  1-275  	maclist	object
                              4  1-276  	use	tables
                              5  1-277  	vfd	18/&U.call,18/&U.names
                              6  1-278  &=&3,&[	dft_multics_doc_lth &1,(&2),(&3),(&4),(&5),(&6)
                              7  1-279  	vfd	18/&U.info,18/.multics_doc_lth
                              8  1-280  &;	vfd	18/&U.info,18/&l3
                              9  1-281  &]
                             10  1-282  	maclist	off
                             11  1-283  	use	info
                             12  1-284  &U.info:
                             13  1-285  &=&3,&[	.multics_request_doc &1,(&2),(&3),(&4),(&5),(&6)
                             14  1-286  &;	aci	@&3@
                             15  1-287  &]
                             16  1-288  	use	tables
                             17  1-289  	maclist	object
                             18  1-290  	set_flags	.sf,(.dft_mrsf),(&5)
                             19  1-291  	set_flags	.uf,(.dft_mruf),(&6)
                             20  1-292  	maclist	object
                             21  1-293  	vfd	18/.sf+flags.multics_request,18/.uf
                             22  1-294  	maclist	off
                             23  1-295  	use	calls
                             24  1-296  &U.call:	epaq	*
                             25  1-297  	lprp4	7|stack_header.lot_ptr,*au
                             26  1-298  &=&4,&[	call6	&1$&1
                             27  1-299  &;	call6	&4
                             28  1-300  &]
                             29  1-301  	use	names
                             30  1-302  &U.names:	namelist	&1&^=&2,&[,&2&]
                             31  1-303  	maclist	restore
                             32  1-304  	&end
                                 1-305  
                                 1-306  " 
                                 1-307  
                                 1-308  " Required ALM statements to make this all work
                                 1-309  
                                 1-310  	use	tables
                                 1-311  	use	calls
                                 1-312  	use	names
                                 1-313  	use	info
                                 1-314  	join	/text/tables,calls,names,info
                                 1-315  
                                 1-316  	include	stack_header
                                   2-1  "	BEGIN INCLUDE FILE ... stack_header.incl.alm  3/72  Bill Silver
                                   2-2  "
                                   2-3  "	modified 7/76 by M. Weaver for *system links and more system use of areas
                                   2-4  "	modified 3/77 by M. Weaver  to add rnt_ptr
                                   2-5  "	modified 7/77 by S. Webber to add run_unit_depth and assign_linkage_ptr
                                   2-6  "	modified 6/83 by J. Ives to add trace_frames and in_trace.
                                   2-7  
                                   2-8  " HISTORY COMMENTS:
                                   2-9  "  1) change(86-06-24,DGHowe), approve(86-06-24,MCR7396),
                                  2-10  "     audit(86-08-05,Schroth), install(86-11-03,MR12.0-1206):
                                  2-11  "     added the heap_header_ptr definition
                                  2-12  "  2) change(86-08-12,Kissel), approve(86-08-12,MCR7473),
                                  2-13  "     audit(86-10-10,Fawcett), install(86-11-03,MR12.0-1206):
                                  2-14  "     Modified to support control point management.  These changes were
                                  2-15  "     actually made in February 1985 by G. Palter.
                                  2-16  "  3) change(86-10-22,Fawcett), approve(86-10-22,MCR7473),
                                  2-17  "     audit(86-10-22,Farley), install(86-11-03,MR12.0-1206):
                                  2-18  "     Remove the old_lot pointer and replace it with cpm_data_ptr. Use the 18
                                  2-19  "     bit pad after cur_lot_size for the cpm_enabled. This was done to save
                                  2-20  "     some space int the stack header and change the cpd_ptr unal to
                                  2-21  "     cpm_data_ptr (ITS pair).
                                  2-22  "                                                      END HISTORY COMMENTS
                                  2-23  
                        000004    2-24  	equ	stack_header.cpm_data_ptr,4		ptr to control point for this stack
                        000006    2-25  	equ	stack_header.combined_stat_ptr,6	ptr to separate static area
                                  2-26  
                        000010    2-27  	equ	stack_header.clr_ptr,8		ptr to area containing linkage sections
                        000012    2-28  	equ	stack_header.max_lot_size,10		number of words allowed in lot (DU)
                        000012    2-29  	equ	stack_header.main_proc_invoked,10	nonzero if main proc was invoked in run unit (DL)
                        000012    2-30  	equ	stack_header.run_unit_depth,10	number of active run units stacked (DL)
                        000013    2-31  	equ	stack_header.cur_lot_size,11		DU number of words (entries) in lot
                        000013    2-32            equ	stack_header.cpm_enabled,11		DL  non-zero if control point management is enabled
                        000014    2-33  	equ	stack_header.system_free_ptr,12	ptr to system storage area
                        000016    2-34  	equ	stack_header.user_free_ptr,14		ptr to user storage area
                                  2-35  
                        000020    2-36  	equ	stack_header.parent_ptr,16		ptr to parent stack or null
                        000022    2-37  	equ	stack_header.stack_begin_ptr,18	ptr to first stack frame
                        000024    2-38  	equ	stack_header.stack_end_ptr,20		ptr to next useable stack frame
                        000026    2-39  	equ	stack_header.lot_ptr,22		ptr to the lot for the current ring
                                  2-40  
                        000030    2-41  	equ	stack_header.signal_ptr,24		ptr to signal proc for current ring
                        000032    2-42  	equ	stack_header.bar_mode_sp,26		value of sp before entering bar mode
                        000034    2-43  	equ	stack_header.pl1_operators_ptr,28	ptr: pl1_operators_$operator_table
                        000036    2-44  	equ	stack_header.call_op_ptr,30		ptr to standard call operator
                                  2-45  
                        000040    2-46  	equ	stack_header.push_op_ptr,32		ptr to standard push operator
                        000042    2-47  	equ	stack_header.return_op_ptr,34		ptr to standard return operator
                        000044    2-48  	equ	stack_header.ret_no_pop_op_ptr,36	ptr: stand. return/ no pop operator
                        000046    2-49  	equ	stack_header.entry_op_ptr,38		ptr to standard entry operator
                                  2-50  
                        000050    2-51  	equ	stack_header.trans_op_tv_ptr,40	ptr to table of translator operator ptrs
                        000052    2-52  	equ	stack_header.isot_ptr,42		pointer to ISOT
                        000054    2-53  	equ	stack_header.sct_ptr,44		pointer to System Condition Table
                        000056    2-54  	equ	stack_header.unwinder_ptr,46		pointer to unwinder for current ring
                                  2-55  
                        000060    2-56  	equ	stack_header.sys_link_info_ptr,48	ptr to *system link name table
                        000062    2-57  	equ	stack_header.rnt_ptr,50		ptr to reference name table
                        000064    2-58  	equ	stack_header.ect_ptr,52		ptr to event channel table
                        000066    2-59  	equ	stack_header.assign_linkage_ptr,54	ptr to area for hcs_$assign_linkage calls
                        000070    2-60  	equ	stack_header.heap_header_ptr,56	ptr to heap header.
                        000072    2-61  	equ	stack_header.trace_frames,58		stack of trace_catch_ frames
                        000073    2-62  	equ	stach_header.trace_top_ptr,59		trace pointer
                        000074    2-63  	equ	stack_header.in_trace,60		trace antirecurse bit
                        000100    2-64  	equ	stack_header_end,64			length of stack header
                                  2-65  
                                  2-66  
                                  2-67  
                                  2-68  
                        000000    2-69  	equ	trace_frames.count,0		number of trace frames on stack
                        000001    2-70  	equ	trace_frames.top_ptr,1		packed pointer to top one
                                  2-71  
                                  2-72  "	The  following constant is an offset within the  pl1  operators table.
                                  2-73  "	It  references a  transfer vector table.
                                  2-74  
                        000551    2-75  	bool	tv_offset,551
                                  2-76  
                                  2-77  
                                  2-78  "	The  following constants are offsets within this transfer vector table.
                                  2-79  
                        001170    2-80  	equ	call_offset,tv_offset+271
                        001171    2-81  	equ	push_offset,tv_offset+272
                        001172    2-82  	equ	return_offset,tv_offset+273
                        001173    2-83  	equ	return_no_pop_offset,tv_offset+274
                        001174    2-84  	equ	entry_offset,tv_offset+275
                                  2-85  
                                  2-86  
                                  2-87  " 	END INCLUDE FILE stack_header.incl.alm
                                 2-317  
                                 2-318  " END INCLUDE FILE ... ssu_request_macros.incl.alm
                                    22  
                                    23  	
                                    24  	begin_table rtq_request_table_
                        000000          	segdef	rtq_request_table_
    000000  aa  163 162 161 164
    000001  aa  137 064 056 060
    000002  aa  162 164 161 137
    000003  aa  162 145 161 165
    000004  aa  145 163 164 137
    000005  aa  164 141 142 154
    000006  aa  145 137 040 040
    000007  aa  040 040 040 040
    000010  aa  040 040 040 040
    000011  aa  040 040 040 040
                        000006 
    000012  aa   000000 000000 
    000013  aa   000000 000000 
    000014  aa   000000 000000 
    000015  aa   000000 000000 
    000016  aa   000000 000000 
    000017  aa   000000 000000 
    000020  aa   000000 000021 
                                    25  	
                                    26  	request	   bof,
                                    27  		    rtq_$bof_request,
                                    28  		    (),
                                    29  		    (Position to the beginning of the current physical tape file)
    000021  00   000104 000167 
    000022  0a   000530 000073 
    000023  aa   400000 000000 
                                    30  
                                    31  	request	   bsf,
                                    32  		    rtq_$bsf_request,
                                    33  		    (),
                                    34  		    (Backspace N files)
    000024  00   000107 000200 
    000025  0a   000547 000021 
    000026  aa   400000 000000 
                                    35  
                                    36  	request	   bsr,
                                    37  		    rtq_$bsr_request,
                                    38  		    (),
                                    39  		    (Backspace N records)
    000027  00   000112 000211 
    000030  0a   000554 000023 
    000031  aa   400000 000000 
                                    40  
                                    41  	request      density,
                                    42  		    rtq_$density_request,
                                    43  		    (den),
                                    44  		    (Sets the tape density to a N bit per inch)
    000032  00   000115 000222 
    000033  0a   000561 000051 
    000034  aa   400000 000000 
                                    45  
                                    46  	request      dump,
                                    47  		    rtq_$dump_record_request,
                                    48  		    (),
                                    49  	              (Displays the contents of the record buffer on the users terminal)
    000035  00   000120 000243 
    000036  0a   000574 000100 
    000037  aa   400000 000000 
                                    50  
                                    51  	request      eof,
                                    52  	              rtq_$eof_request,
                                    53  		    (),
                                    54  	              (Positions to the end of the current physical tape file, after the last record)
    000040  00   000123 000254 
    000041  0a   000614 000115 
    000042  aa   400000 000000 
                                    55  
                                    56  	request	   fsf,
                                    57  		    rtq_$fsf_request,
                                    58  		    (),
                                    59  		    (Forward space N files)
    000043  00   000126 000265 
    000044  0a   000640 000025 
    000045  aa   400000 000000 
                                    60  
                                    61  	request	   fsr,
                                    62  		    rtq_$fsr_request,
                                    63  		    (),
                                    64  		    (Forward space N records)
    000046  00   000131 000276 
    000047  0a   000646 000027 
    000050  aa   400000 000000 
                                    65  
                                    66  	request	   list_tape_contents,
                                    67  		    rtq_$list_tape_contents,
                                    68  		    (ltc),
                                    69  		    (Displays information about each record on the tape)
    000051  00   000134 000307 
    000052  0a   000654 000062 
    000053  aa   400000 000000 
                                    70  
                                    71  	request	   mode,
                                    72  		    rtq_$mode_request,
                                    73  		    (),
                                    74  	              (Sets the hardware mode for reading tape to STR)
    000054  00   000137 000330 
    000055  0a   000671 000056 
    000056  aa   400000 000000 
                                    75  	            
                                    76  	request	   position,
                                    77  		    rtq_$position_request,
                                    78  		    (pos),
                                    79  	              (Displays the current physical tape file and record position for the user)
    000057  00   000142 000341 
    000060  0a   000705 000110 
    000061  aa   400000 000000 
                                    80  
                                    81  	request      quit,
                                    82  		    rtq_$quit_request,
                                    83  		    (q),
                                    84  		    (Detaches the tape and returns control to the current command processor)
    000062  00   000145 000362 
    000063  0a   000727 000106 
    000064  aa   400000 000000 
                                    85  
                                    86  	request	   read_file,
                                    87  	              rtq_$read_file_request,
                                    88  		    (rdfile),
                                    89  		    (Reads the current tape file into the segment described by args)
    000065  00   000150 000403 
    000066  0a   000751 000076 
    000067  aa   400000 000000 
                                    90  
                                    91  	request	   read_record,
                                    92  		    rtq_$read_record_request,
                                    93  	              (rdrec),
                                    94  	              (Reads the current record into a temporary buffer)
    000070  00   000153 000424 
    000071  0a   000771 000060 
    000072  aa   400000 000000 
                                    95  
                                    96            request      records_in_file,
                                    97  	              rtq_$records_in_file_request,
                                    98  	              (rif),
                                    99  	              (Counts the number of records in the current file)
    000073  00   000156 000445 
    000074  0a   001005 000060 
    000075  aa   400000 000000 
                                   100  
                                   101  	request	   rewind,
                                   102  		    rtq_$rewind_request,
                                   103  		    (rew),
                                   104  		    (Rewinds and positions the tape to the beginning of the tape marker)
    000076  00   000161 000466 
    000077  0a   001021 000102 
    000100  aa   400000 000000 
                                   105  	
                                   106  	request	   .,
                                   107  		    rtq_$dot_request,
                                   108  	              (dot),
                                   109  		    (Displays the long name read_tape_and_query with its short name in parentheses)
    000101  00   000164 000507 
    000102  0a   001042 000115 
    000103  aa   400000 000000 
                                   110  
                                   111  		   end_table rtq_request_table_
                                   112  
                                   113  		   end

NO LITERALS
     
NAME DEFINITIONS FOR ENTRY POINTS AND SEGDEFS

    001066  5a   000003 000000 
    001067  5a   000032 600000 
    001070  aa   000000 000000 
    001071  55   000013 000002 
    001072  5a   000002 400003 
    001073  55   000006 000013 
    001074  aa  022 162 164 161
    001075  aa  137 162 145 161
    001076  aa  165 145 163 164
    001077  aa  137 164 141 142
    001100  aa  154 145 137 000
    001101  55   000023 000003 
    001102  0a   000000 400000 
    001103  55   000016 000003 
    001104  aa  022 162 164 161         rtq_request_table_
    001105  aa  137 162 145 161
    001106  aa  165 145 163 164
    001107  aa  137 164 141 142
    001110  aa  154 145 137 000
    001111  55   000002 000013 
    001112  6a   000000 400002 
    001113  55   000026 000003 
    001114  aa  014 163 171 155         symbol_table
    001115  aa  142 157 154 137
    001116  aa  164 141 142 154
    001117  aa  145 000 000 000

DEFINITIONS HASH TABLE

    001120  aa   000000 000015 
    001121  aa   000000 000000 
    001122  aa   000000 000000 
    001123  aa   000000 000000 
    001124  aa   000000 000000 
    001125  aa   000000 000000 
    001126  aa   000000 000000 
    001127  5a   000023 000000 
    001130  aa   000000 000000 
    001131  5a   000013 000000 
    001132  aa   000000 000000 
    001133  aa   000000 000000 
    001134  aa   000000 000000 
    001135  aa   000000 000000 

EXTERNAL NAMES

    001136  aa  013 144 157 164         dot_request
    001137  aa  137 162 145 161
    001140  aa  165 145 163 164
    001141  aa  016 162 145 167         rewind_request
    001142  aa  151 156 144 137
    001143  aa  162 145 161 165
    001144  aa  145 163 164 000
    001145  aa  027 162 145 143         records_in_file_request
    001146  aa  157 162 144 163
    001147  aa  137 151 156 137
    001150  aa  146 151 154 145
    001151  aa  137 162 145 161
    001152  aa  165 145 163 164
    001153  aa  023 162 145 141         read_record_request
    001154  aa  144 137 162 145
    001155  aa  143 157 162 144
    001156  aa  137 162 145 161
    001157  aa  165 145 163 164
    001160  aa  021 162 145 141         read_file_request
    001161  aa  144 137 146 151
    001162  aa  154 145 137 162
    001163  aa  145 161 165 145
    001164  aa  163 164 000 000
    001165  aa  014 161 165 151         quit_request
    001166  aa  164 137 162 145
    001167  aa  161 165 145 163
    001170  aa  164 000 000 000
    001171  aa  020 160 157 163         position_request
    001172  aa  151 164 151 157
    001173  aa  156 137 162 145
    001174  aa  161 165 145 163
    001175  aa  164 000 000 000
    001176  aa  014 155 157 144         mode_request
    001177  aa  145 137 162 145
    001200  aa  161 165 145 163
    001201  aa  164 000 000 000
    001202  aa  022 154 151 163         list_tape_contents
    001203  aa  164 137 164 141
    001204  aa  160 145 137 143
    001205  aa  157 156 164 145
    001206  aa  156 164 163 000
    001207  aa  013 146 163 162         fsr_request
    001210  aa  137 162 145 161
    001211  aa  165 145 163 164
    001212  aa  013 146 163 146         fsf_request
    001213  aa  137 162 145 161
    001214  aa  165 145 163 164
    001215  aa  013 145 157 146         eof_request
    001216  aa  137 162 145 161
    001217  aa  165 145 163 164
    001220  aa  023 144 165 155         dump_record_request
    001221  aa  160 137 162 145
    001222  aa  143 157 162 144
    001223  aa  137 162 145 161
    001224  aa  165 145 163 164
    001225  aa  017 144 145 156         density_request
    001226  aa  163 151 164 171
    001227  aa  137 162 145 161
    001230  aa  165 145 163 164
    001231  aa  013 142 163 162         bsr_request
    001232  aa  137 162 145 161
    001233  aa  165 145 163 164
    001234  aa  013 142 163 146         bsf_request
    001235  aa  137 162 145 161
    001236  aa  165 145 163 164
    001237  aa  013 142 157 146         bof_request
    001240  aa  137 162 145 161
    001241  aa  165 145 163 164
    001242  aa  004 162 164 161         rtq_
    001243  aa  137 000 000 000

NO TRAP POINTER WORDS

TYPE PAIR BLOCKS

    001244  aa   000004 000000 
    001245  55   000154 000050 
    001246  aa   000004 000000 
    001247  55   000154 000053 
    001250  aa   000004 000000 
    001251  55   000154 000057 
    001252  aa   000004 000000 
    001253  55   000154 000065 
    001254  aa   000004 000000 
    001255  55   000154 000072 
    001256  aa   000004 000000 
    001257  55   000154 000077 
    001260  aa   000004 000000 
    001261  55   000154 000103 
    001262  aa   000004 000000 
    001263  55   000154 000110 
    001264  aa   000004 000000 
    001265  55   000154 000114 
    001266  aa   000004 000000 
    001267  55   000154 000121 
    001270  aa   000004 000000 
    001271  55   000154 000124 
    001272  aa   000004 000000 
    001273  55   000154 000127 
    001274  aa   000004 000000 
    001275  55   000154 000132 
    001276  aa   000004 000000 
    001277  55   000154 000137 
    001300  aa   000004 000000 
    001301  55   000154 000143 
    001302  aa   000004 000000 
    001303  55   000154 000146 
    001304  aa   000004 000000 
    001305  55   000154 000151 
    001306  aa   000001 000000 
    001307  aa   000000 000000 

INTERNAL EXPRESSION WORDS

    001310  5a   000156 000000 
    001311  5a   000160 000000 
    001312  5a   000162 000000 
    001313  5a   000164 000000 
    001314  5a   000166 000000 
    001315  5a   000170 000000 
    001316  5a   000172 000000 
    001317  5a   000174 000000 
    001320  5a   000176 000000 
    001321  5a   000200 000000 
    001322  5a   000202 000000 
    001323  5a   000204 000000 
    001324  5a   000206 000000 
    001325  5a   000210 000000 
    001326  5a   000212 000000 
    001327  5a   000214 000000 
    001330  5a   000216 000000 
    001331  aa   000000 000000 
LINKAGE INFORMATION
      
    000000  aa   000000 000000 
    000001  0a   001066 000000 
    000002  aa   000000 000000 
    000003  aa   000000 000000 
    000004  aa   000000 000000 
    000005  aa   000000 000000 
    000006  22   000010 000052 
    000007  a2   000000 000000 
    000010  9a   777770 0000 46         rtq_|bof_request
    000011  5a   000242 0000 00
    000012  9a   777766 0000 46         rtq_|bsf_request
    000013  5a   000241 0000 00
    000014  9a   777764 0000 46         rtq_|bsr_request
    000015  5a   000240 0000 00
    000016  9a   777762 0000 46         rtq_|density_request
    000017  5a   000237 0000 00
    000020  9a   777760 0000 46         rtq_|dump_record_request
    000021  5a   000236 0000 00
    000022  9a   777756 0000 46         rtq_|eof_request
    000023  5a   000235 0000 00
    000024  9a   777754 0000 46         rtq_|fsf_request
    000025  5a   000234 0000 00
    000026  9a   777752 0000 46         rtq_|fsr_request
    000027  5a   000233 0000 00
    000030  9a   777750 0000 46         rtq_|list_tape_contents
    000031  5a   000232 0000 00
    000032  9a   777746 0000 46         rtq_|mode_request
    000033  5a   000231 0000 00
    000034  9a   777744 0000 46         rtq_|position_request
    000035  5a   000230 0000 00
    000036  9a   777742 0000 46         rtq_|quit_request
    000037  5a   000227 0000 00
    000040  9a   777740 0000 46         rtq_|read_file_request
    000041  5a   000226 0000 00
    000042  9a   777736 0000 46         rtq_|read_record_request
    000043  5a   000225 0000 00
    000044  9a   777734 0000 46         rtq_|records_in_file_request
    000045  5a   000224 0000 00
    000046  9a   777732 0000 46         rtq_|rewind_request
    000047  5a   000223 0000 00
    000050  9a   777730 0000 46         rtq_|dot_request
    000051  5a   000222 0000 00
SYMBOL INFORMATION
     
SYMBOL TABLE HEADER
     
    000000  aa   000000 000001 
    000001  aa   163171 155142 
    000002  aa   164162 145145 
    000003  aa   000000 000007 
    000004  aa   000000 115030 
    000005  aa   273207 326355 
    000006  aa   000000 115512 
    000007  aa   755450 535333 
    000010  aa   141154 155040 
    000011  aa   040040 040040 
    000012  aa   000024 000040 
    000013  aa   000034 000040 
    000014  aa   000044 000100 
    000015  aa   000002 000002 
    000016  aa   000064 000000 
    000017  aa   000000 000262 
    000020  aa   000000 000143 
    000021  aa   000227 000216 
    000022  aa   000252 000143 
    000023  aa   000064 000000 
    000024  aa   101114 115040 
    000025  aa   126145 162163 
    000026  aa   151157 156040 
    000027  aa   067056 063040 
    000030  aa   116157 166145 
    000031  aa   155142 145162 
    000032  aa   040061 071070 
    000033  aa   066040 040040 
    000034  aa   107112 157150 
    000035  aa   156163 157156 
    000036  aa   056123 171163 
    000037  aa   115141 151156 
    000040  aa   164056 141040 
    000041  aa   040040 040040 
    000042  aa   040040 040040 
    000043  aa   040040 040040 
    000044  aa   055164 141162 
    000045  aa   147145 164040 
    000046  aa   154066 070040 
    000047  aa   040040 040040 
    000050  aa   040040 040040 
    000051  aa   040040 040040 
    000052  aa   040040 040040 
    000053  aa   040040 040040 
    000054  aa   040040 040040 
    000055  aa   040040 040040 
    000056  aa   040154 151163 
    000057  aa   164040 163171 
    000060  aa   155142 157154 
    000061  aa   163040 040040 
    000062  aa   040040 040040 
    000063  aa   040040 040040 
    000064  aa   000000 000001 
    000065  aa   000000 000003 
    000066  aa   000102 000067 
    000067  aa   155041 013776 
    000070  aa   000000 115512 
    000071  aa   755362 200000 
    000072  aa   000120 000050 
    000073  aa   133055 020064 
    000074  aa   000000 113310 
    000075  aa   612334 200000 
    000076  aa   000132 000042 
    000077  aa   147777 464111 
    000100  aa   000000 115000 
    000101  aa   507463 000000 
    000102  aa   076163 160145          >special_ldd>install>MR12.1-1048>rtq_request_table_.alm
    000103  aa   143151 141154 
    000104  aa   137154 144144 
    000105  aa   076151 156163 
    000106  aa   164141 154154 
    000107  aa   076115 122061 
    000110  aa   062056 061055 
    000111  aa   061060 064070 
    000112  aa   076162 164161 
    000113  aa   137162 145161 
    000114  aa   165145 163164 
    000115  aa   137164 141142 
    000116  aa   154145 137056 
    000117  aa   141154 155040 
    000120  aa   076154 144144          >ldd>include>ssu_request_macros.incl.alm
    000121  aa   076151 156143 
    000122  aa   154165 144145 
    000123  aa   076163 163165 
    000124  aa   137162 145161 
    000125  aa   165145 163164 
    000126  aa   137155 141143 
    000127  aa   162157 163056 
    000130  aa   151156 143154 
    000131  aa   056141 154155 
    000132  aa   076154 144144          >ldd>include>stack_header.incl.alm
    000133  aa   076151 156143 
    000134  aa   154165 144145 
    000135  aa   076163 164141 
    000136  aa   143153 137150 
    000137  aa   145141 144145 
    000140  aa   162056 151156 
    000141  aa   143154 056141 
    000142  aa   154155 040040 
               MULTICS ASSEMBLY CROSS REFERENCE LISTING

   Value        Symbol                   Source file   Line number

         104    .._00000.call            rtq_request_table_:        29.
         530    .._00000.info            rtq_request_table_:        29.
         167    .._00000.names           rtq_request_table_:        29.
         107    .._00001.call            rtq_request_table_:        34.
         547    .._00001.info            rtq_request_table_:        34.
         200    .._00001.names           rtq_request_table_:        34.
         112    .._00002.call            rtq_request_table_:        39.
         554    .._00002.info            rtq_request_table_:        39.
         211    .._00002.names           rtq_request_table_:        39.
         115    .._00003.call            rtq_request_table_:        44.
         561    .._00003.info            rtq_request_table_:        44.
         222    .._00003.names           rtq_request_table_:        44.
         120    .._00004.call            rtq_request_table_:        49.
         574    .._00004.info            rtq_request_table_:        49.
         243    .._00004.names           rtq_request_table_:        49.
         123    .._00005.call            rtq_request_table_:        54.
         614    .._00005.info            rtq_request_table_:        54.
         254    .._00005.names           rtq_request_table_:        54.
         126    .._00006.call            rtq_request_table_:        59.
         640    .._00006.info            rtq_request_table_:        59.
         265    .._00006.names           rtq_request_table_:        59.
         131    .._00007.call            rtq_request_table_:        64.
         646    .._00007.info            rtq_request_table_:        64.
         276    .._00007.names           rtq_request_table_:        64.
         134    .._00010.call            rtq_request_table_:        69.
         654    .._00010.info            rtq_request_table_:        69.
         307    .._00010.names           rtq_request_table_:        69.
         137    .._00011.call            rtq_request_table_:        74.
         671    .._00011.info            rtq_request_table_:        74.
         330    .._00011.names           rtq_request_table_:        74.
         142    .._00012.call            rtq_request_table_:        79.
         705    .._00012.info            rtq_request_table_:        79.
         341    .._00012.names           rtq_request_table_:        79.
         145    .._00013.call            rtq_request_table_:        84.
         727    .._00013.info            rtq_request_table_:        84.
         362    .._00013.names           rtq_request_table_:        84.
         150    .._00014.call            rtq_request_table_:        89.
         751    .._00014.info            rtq_request_table_:        89.
         403    .._00014.names           rtq_request_table_:        89.
         153    .._00015.call            rtq_request_table_:        94.
         771    .._00015.info            rtq_request_table_:        94.
         424    .._00015.names           rtq_request_table_:        94.
         156    .._00016.call            rtq_request_table_:        99.
        1005    .._00016.info            rtq_request_table_:        99.
         445    .._00016.names           rtq_request_table_:        99.
         161    .._00017.call            rtq_request_table_:       104.
        1021    .._00017.info            rtq_request_table_:       104.
         466    .._00017.names           rtq_request_table_:       104.
         164    .._00020.call            rtq_request_table_:       109.
        1042    .._00020.info            rtq_request_table_:       109.
         507    .._00020.names           rtq_request_table_:       109.
      600000    .dft_mrsf                rtq_request_table_:        24.
           0    .dft_mruf                rtq_request_table_:        24.
      400000    .dft_sf                  rtq_request_table_:        24,   29,   34,   39,   44,   49,   54,   59,   64,   69,
                                                                    74,   79,   84,   89,   94,   99,  104,  109.
           0    .dft_uf                  rtq_request_table_:        24,   29,   34,   39,   44,   49,   54,   59,   64,   69,
                                                                    74,   79,   84,   89,   94,   99,  104,  109.
       40061    .rc                      rtq_request_table_:        24,   29,   34,   39,   44,   49,   54,   59,   64,   69,
                                                                    74,   79,   84,   89,   94,   99,  104,  109,  111.
      400000    .sf                      rtq_request_table_:        29,   34,   39,   44,   49,   54,   59,   64,   69,   74,
                                                                    79,   84,   89,   94,   99,  104,  109.
           0    .uf                      rtq_request_table_:        29,   34,   39,   44,   49,   54,   59,   64,   69,   74,
                                                                    79,   84,   89,   94,   99,  104,  109.
                bof_request              rtq_request_table_:        29.
                bsf_request              rtq_request_table_:        34.
                bsr_request              rtq_request_table_:        39.
         104    calls                    rtq_request_table_:        29,   34,   39,   44,   49,   54,   59,   64,   69,   74,
                                                                    79,   84,   89,   94,   99,  104,  109,
                                         ssu_request_macros:       311,  314.
        1170    call_offset              stack_header:        80.
                density_request          rtq_request_table_:        44.
                dot_request              rtq_request_table_:       109.
                dump_record_request      rtq_request_table_:        49.
        1174    entry_offset             stack_header:        84.
                eof_request              rtq_request_table_:        54.
      200000    flags.allow_af           rtq_request_table_:        24,
                                         ssu_request_macros:        33.
      600000    flags.allow_both         ssu_request_macros:        34.
      400000    flags.allow_command      rtq_request_table_:        24,
                                         ssu_request_macros:        32.
       10000    flags.dont_list          ssu_request_macros:        40.
       20000    flags.dont_summarize     ssu_request_macros:        39.
       40000    flags.multics_request    ssu_request_macros:        37.
      100000    flags.unimplemented      ssu_request_macros:        36.
        4000    flags.unknown            ssu_request_macros:        42.
                fsf_request              rtq_request_table_:        59.
                fsr_request              rtq_request_table_:        64.
         530    info                     rtq_request_table_:        29,   34,   39,   44,   49,   54,   59,   64,   69,   74,
                                                                    79,   84,   89,   94,   99,  104,  109,
                                         ssu_request_macros:       313,  314.
                list_tape_contents       rtq_request_table_:        69.
                mode_request             rtq_request_table_:        74.
         167    names                    rtq_request_table_:        29,   34,   39,   44,   49,   54,   59,   64,   69,   74,
                                                                    79,   84,   89,   94,   99,  104,  109,
                                         ssu_request_macros:       312,  314.
                position_request         rtq_request_table_:        79.
        1171    push_offset              stack_header:        81.
                quit_request             rtq_request_table_:        84.
                read_file_request        rtq_request_table_:        89.
                read_record_request      rtq_request_table_:        94.
                records_in_file_request  rtq_request_table_:        99.
        1173    return_no_pop_offset     stack_header:        83.
        1172    return_offset            stack_header:        82.
                rewind_request           rtq_request_table_:       104.
                rtq_                     rtq_request_table_:        29,   34,   39,   44,   49,   54,   59,   64,   69,   74,
                                                                    79,   84,   89,   94,   99,  104,  109.
           0    rtq_request_table_       rtq_request_table_:        24.
          21    rtq_request_table_.rc    rtq_request_table_:        24,  111.
          73    stach_header.trace_top_ptr     stack_header:        62.
          66    stack_header.assign_linkage_ptr      stack_header:        59.
          32    stack_header.bar_mode_sp       stack_header:        42.
          36    stack_header.call_op_ptr       stack_header:        44.
          10    stack_header.clr_ptr     stack_header:        27.
           6    stack_header.combined_stat_ptr       stack_header:        25.
           4    stack_header.cpm_data_ptr      stack_header:        24.
          13    stack_header.cpm_enabled       stack_header:        32.
          13    stack_header.cur_lot_size      stack_header:        31.
          64    stack_header.ect_ptr     stack_header:        58.
          46    stack_header.entry_op_ptr      stack_header:        49.
          70    stack_header.heap_header_ptr   stack_header:        60.
          74    stack_header.in_trace    stack_header:        63.
          52    stack_header.isot_ptr    stack_header:        52.
          26    stack_header.lot_ptr     rtq_request_table_:        29,   34,   39,   44,   49,   54,   59,   64,   69,   74,
                                                                    79,   84,   89,   94,   99,  104,  109,
                                         stack_header:        39.
          12    stack_header.main_proc_invoked       stack_header:        29.
          12    stack_header.max_lot_size      stack_header:        28.
          20    stack_header.parent_ptr  stack_header:        36.
          34    stack_header.pl1_operators_ptr       stack_header:        43.
          40    stack_header.push_op_ptr       stack_header:        46.
          42    stack_header.return_op_ptr     stack_header:        47.
          44    stack_header.ret_no_pop_op_ptr       stack_header:        48.
          62    stack_header.rnt_ptr     stack_header:        57.
          12    stack_header.run_unit_depth    stack_header:        30.
          54    stack_header.sct_ptr     stack_header:        53.
          30    stack_header.signal_ptr  stack_header:        41.
          22    stack_header.stack_begin_ptr   stack_header:        37.
          24    stack_header.stack_end_ptr     stack_header:        38.
          14    stack_header.system_free_ptr   stack_header:        33.
          60    stack_header.sys_link_info_ptr       stack_header:        56.
          72    stack_header.trace_frames      stack_header:        61.
          50    stack_header.trans_op_tv_ptr   stack_header:        51.
          56    stack_header.unwinder_ptr      stack_header:        54.
          16    stack_header.user_free_ptr     stack_header:        34.
         100    stack_header_end         stack_header:        64.
           0    tables                   rtq_request_table_:        24,   29,   34,   39,   44,   49,   54,   59,   64,   69,
                                                                    74,   79,   84,   89,   94,   99,  104,  109,
                                         ssu_request_macros:       310,  314.
           0    trace_frames.count       stack_header:        69.
           1    trace_frames.top_ptr     stack_header:        70.
         551    tv_offset                stack_header:        75,   80,   81,   82,   83,   84.


NO FATAL ERRORS


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
