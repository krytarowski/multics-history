ASSEMBLY LISTING OF SEGMENT >spec>install>1003>io_call_msg_.alm                                                                                                                                     
ASSEMBLED ON:	03/19/87  1510.1 mst Thu
OPTIONS USED:	-target l68                              list symbols 
ASSEMBLED BY:	ALM Version 7.3 November 1986   
ASSEMBLER CREATED:	11/26/86  1244.2 mst Wed

                                     1  " ******************************************************
                                     2  " *                                                    *
                                     3  " * Copyright (c) 1987 by Massachusetts Institute of   *
                                     4  " * Technology and Honeywell Information Systems, Inc. *
                                     5  " *                                                    *
                                     6  " * Copyright (c) 1972 by Massachusetts Institute of   *
                                     7  " * Technology and Honeywell Information Systems, Inc. *
                                     8  " *                                                    *
                                     9  " ******************************************************
                                    10  
                                    11  " HISTORY COMMENTS:
                                    12  "  1) change(87-02-02,TLNguyen), approve(87-02-02,MCR7611),
                                    13  "     audit(87-02-03,Lippard), install(87-03-19,MR12.1-1003):
                                    14  "     Make "io_call" display a correct usage message for the attach operation.
                                    15  "                                                      END HISTORY COMMENTS
                                    16  
                                    17  
                                    18  "	help messages for the io_call command
                                    19  
                                    20  "	Written June 1975 by Larry Johnson
                                    21  "	Updated June 1977 by Larry Johnson
                                    22  "	Updated 1/83 by S. Krupp to add help for open_file,
                                    23  "	   close_file, and detach.  Also to change attach help.
                                    24  "	Updated December 1983 by Jim Lippard to use braces
                                    25  "	   instead of hyphens, like the rest of the world.
                                    26  
                        000000      27  	segdef	io_call_msg_
                                    28  
    000000                          29  io_call_msg_:
    000000                          30  start:
                                    31  
                                    32  "	The first table consists of one word for each operation supported
                                    33  "	by the io_call command (there are 35). The upper part of the word
                                    34  "	contains an indirect address to a list of message address and
                                    35  "	the lower part of the word contains a count of the number of
                                    36  "	lines to be printed to give help on the operation
                                    37  "	requested.
                                    38  
    000000  aa   000044 000006      39  	zero	command-start,6	(0)
    000001  aa   000052 000001      40  	zero	deti-start,1	(1)
    000002  aa   000053 000005      41  	zero	open-start,5	(2)
    000003  aa   000060 000001      42  	zero	close-start,1	(3)
    000004  aa   000061 000002      43  	zero	getl-start,2	(4)
    000005  aa   000063 000002      44  	zero	getc-start,2	(5)
    000006  aa   000065 000002      45  	zero	putc-start,2	(6)
    000007  aa   000067 000002      46  	zero	modes-start,2	(7)
    000010  aa   000071 000001      47  	zero	posit-start,1	(8)
    000011  aa   000072 000001      48  	zero	control-start,1	(9)
    000012  aa   000073 000002      49  	zero	readr-start,2	(10)
    000013  aa   000075 000002      50  	zero	write-start,2	(11)
    000014  aa   000077 000002      51  	zero	rewrite-start,2	(12)
    000015  aa   000101 000001      52  	zero	delete-start,1	(13)
    000016  aa   000102 000001      53  	zero	seek-start,1	(14)
    000017  aa   000103 000002      54  	zero	readk-start,2	(15)
    000020  aa   000105 000001      55  	zero	readl-start,1	(16)
    000021  aa   000106 000005      56  	zero	openf-start,5	(17)
    000022  aa   000113 000001      57  	zero	closef-start,1	(18)
    000023  aa   000114 000001      58  	zero	det-start,1	(19)
    000024  aa   000115 000001      59  	zero	attach-start,1	(20)
    000025  aa   000116 000001      60  	zero	find-start,1	(21)
    000026  aa   000117 000001      61  	zero	look-start,1	(22)
    000027  aa   000120 000001      62  	zero	destroy-start,1	(23)
    000030  aa   000121 000001      63  	zero	move-start,1	(24)
    000031  aa   000122 000001      64  	zero	print-start,1	(25)
    000032  aa   000123 000001      65  	zero	attached-start,1	(26)
    000033  aa   000124 000001      66  	zero	opened-start,1	(27)
    000034  aa   000125 000001      67  	zero	closed-start,1	(28)
    000035  aa   000126 000001      68  	zero	detached-start,1	(29)
    000036  aa   000127 000002      69  	zero	open_desc-start,2	(30)
    000037  aa   000131 000002      70  	zero	attach_desc-start,2	(31)
    000040  aa   000133 000001      71  	zero	io_module-start,1	(32)
    000041  aa   000134 000001      72  	zero	valid_op-start,1	(33)
    000042  aa   000135 000001      73  	zero	test_mode-start,1	(34)
    000043  aa   000136 000001      74  	zero	valid_mode-start,1	(35)
                                    75  
                                    76  "
                                    77  "	Each word in this table is an indirect address of an acc string.
                                    78  
                                    79  
    000044  aa   000334 000000      80  command:	zero	m14-start
    000045  aa   000336 000000      81  	zero	m15-start
    000046  aa   000360 000000      82  	zero	m16-start
    000047  aa   000404 000000      83  	zero	m17-start
    000050  aa   000430 000000      84  	zero	m18-start
    000051  aa   000453 000000      85  	zero	m19-start
    000052  aa   000137 000000      86  deti:	zero	null-start
    000053  aa   000140 000000      87  open:	zero	m1-start
    000054  aa   000472 000000      88  	zero	m20-start
    000055  aa   000512 000000      89  	zero	m21-start
    000056  aa   000532 000000      90  	zero	m22-start
    000057  aa   000553 000000      91  	zero	m23-start
    000060  aa   000137 000000      92  close:	zero	null-start
    000061  aa   000142 000000      93  getl:	zero	m2-start
    000062  aa   000201 000000      94  	zero	m4-start
    000063  aa   000142 000000      95  getc:	zero	m2-start
    000064  aa   000201 000000      96  	zero	m4-start
    000065  aa   000235 000000      97  putc:	zero	m5-start
    000066  aa   000244 000000      98  	zero	m6-start
    000067  aa   000300 000000      99  modes:	zero	m7-start
    000070  aa   000306 000000     100  	zero	m8-start
    000071  aa   000316 000000     101  posit:	zero	m9-start
    000072  aa   000321 000000     102  control:	zero	m10-start
    000073  aa   000142 000000     103  readr:	zero	m2-start
    000074  aa   000201 000000     104  	zero	m4-start
    000075  aa   000235 000000     105  write:	zero	m5-start
    000076  aa   000244 000000     106  	zero	m6-start
    000077  aa   000235 000000     107  rewrite:	zero	m5-start
    000100  aa   000244 000000     108  	zero	m6-start
    000101  aa   000137 000000     109  delete:	zero	null-start
    000102  aa   000323 000000     110  seek:	zero	m11-start
    000103  aa   000602 000000     111  readk:	zero	m26-start
    000104  aa   000606 000000     112  	zero	m27-start
    000105  aa   000137 000000     113  readl:	zero	null-start
    000106  aa   000577 000000     114  openf:	zero	m25-start
    000107  aa   000472 000000     115  	zero	m20-start
    000110  aa   000512 000000     116  	zero	m21-start
    000111  aa   000532 000000     117  	zero	m22-start
    000112  aa   000553 000000     118  	zero	m23-start
    000113  aa   000334 000000     119  closef:	zero	m14-start
    000114  aa   000334 000000     120  det:	zero	m14-start
    000115  aa   000324 000000     121  attach:	zero	m12-start
    000116  aa   000137 000000     122  find:	zero	null-start
    000117  aa   000137 000000     123  look:	zero	null-start
    000120  aa   000137 000000     124  destroy:	zero	null-start
    000121  aa   000331 000000     125  move:	zero	m13-start
    000122  aa   000137 000000     126  print:	zero	null-start
    000123  aa   000137 000000     127  attached:	zero	null-start
    000124  aa   000137 000000     128  opened:	zero	null-start
    000125  aa   000137 000000     129  closed:	zero	null-start
    000126  aa   000137 000000     130  detached:	zero	null-start
    000127  aa   000602 000000     131  open_desc:zero	m26-start
    000130  aa   000606 000000     132  	zero	m27-start
    000131                         133  attach_desc:
    000131  aa   000602 000000     134  	zero	m26-start
    000132  aa   000606 000000     135  	zero	m27-start
    000133  aa   000137 000000     136  io_module:zero	null-start
    000134  aa   000574 000000     137  valid_op:	zero	m24-start
    000135  aa   000140 000000     138  test_mode:zero	m1-start
    000136                         139  valid_mode:
    000136  aa   000140 000000     140  	zero	m1-start
                                   141  
                                   142  
                                   143  
                                   144  
                                   145  "
                                   146  
    000137  aa  000 000 000 000    147  null:	acc	""
    000140  aa  004 155 157 144    148  m1:	acc	"mode"
    000141  aa  145 000 000 000
    000142  aa  023 173 156 175    149  m2:	acc	"{n} {-control_args}"
    000143  aa  040 173 055 143
    000144  aa  157 156 164 162
    000145  aa  157 154 137 141
    000146  aa  162 147 163 175
    000147  aa  144 173 055 143    150  m3:	acc	"{-control_args} are -segment path {offset}, -allow_newline, -append_newline, -remove_newline, -lines"
    000150  aa  157 156 164 162
    000151  aa  157 154 137 141
    000152  aa  162 147 163 175
    000153  aa  040 141 162 145
    000154  aa  040 055 163 145
    000155  aa  147 155 145 156
    000156  aa  164 040 160 141
    000157  aa  164 150 040 173
    000160  aa  157 146 146 163
    000161  aa  145 164 175 054
    000162  aa  040 055 141 154
    000163  aa  154 157 167 137
    000164  aa  156 145 167 154
    000165  aa  151 156 145 054
    000166  aa  040 055 141 160
    000167  aa  160 145 156 144
    000170  aa  137 156 145 167
    000171  aa  154 151 156 145
    000172  aa  054 040 055 162
    000173  aa  145 155 157 166
    000174  aa  145 137 156 145
    000175  aa  167 154 151 156
    000176  aa  145 054 040 055
    000177  aa  154 151 156 145
    000200  aa  163 000 000 000
    000201  aa  157 173 055 143    151  m4:	acc	"{-control_args} are -segment path {offset}, -allow_newline, -append_newline, -remove_newline, -lines, -no_quote"
    000202  aa  157 156 164 162
    000203  aa  157 154 137 141
    000204  aa  162 147 163 175
    000205  aa  040 141 162 145
    000206  aa  040 055 163 145
    000207  aa  147 155 145 156
    000210  aa  164 040 160 141
    000211  aa  164 150 040 173
    000212  aa  157 146 146 163
    000213  aa  145 164 175 054
    000214  aa  040 055 141 154
    000215  aa  154 157 167 137
    000216  aa  156 145 167 154
    000217  aa  151 156 145 054
    000220  aa  040 055 141 160
    000221  aa  160 145 156 144
    000222  aa  137 156 145 167
    000223  aa  154 151 156 145
    000224  aa  054 040 055 162
    000225  aa  145 155 157 166
    000226  aa  145 137 156 145
    000227  aa  167 154 151 156
    000230  aa  145 054 040 055
    000231  aa  154 151 156 145
    000232  aa  163 054 040 055
    000233  aa  156 157 137 161
    000234  aa  165 157 164 145
    000235  aa  030 173 163 164    152  m5:	acc	"{string} {-control_args}"
    000236  aa  162 151 156 147
    000237  aa  175 040 173 055
    000240  aa  143 157 156 164
    000241  aa  162 157 154 137
    000242  aa  141 162 147 163
    000243  aa  175 000 000 000
    000244  aa  155 173 055 143    153  m6:	acc	"{-control_args} are -segment path {offset} {length}, -allow_newline, -append_newline, -remove_newline, -lines"
    000245  aa  157 156 164 162
    000246  aa  157 154 137 141
    000247  aa  162 147 163 175
    000250  aa  040 141 162 145
    000251  aa  040 055 163 145
    000252  aa  147 155 145 156
    000253  aa  164 040 160 141
    000254  aa  164 150 040 173
    000255  aa  157 146 146 163
    000256  aa  145 164 175 040
    000257  aa  173 154 145 156
    000260  aa  147 164 150 175
    000261  aa  054 040 055 141
    000262  aa  154 154 157 167
    000263  aa  137 156 145 167
    000264  aa  154 151 156 145
    000265  aa  054 040 055 141
    000266  aa  160 160 145 156
    000267  aa  144 137 156 145
    000270  aa  167 154 151 156
    000271  aa  145 054 040 055
    000272  aa  162 145 155 157
    000273  aa  166 145 137 156
    000274  aa  145 167 154 151
    000275  aa  156 145 054 040
    000276  aa  055 154 151 156
    000277  aa  145 163 000 000
    000300  aa  027 173 163 164    154  m7:	acc	"{string} {-control_arg}"
    000301  aa  162 151 156 147
    000302  aa  175 040 173 055
    000303  aa  143 157 156 164
    000304  aa  162 157 154 137
    000305  aa  141 162 147 175
    000306  aa  034 173 055 143    155  m8:	acc	"{-control_arg} may be -brief"
    000307  aa  157 156 164 162
    000310  aa  157 154 137 141
    000311  aa  162 147 175 040
    000312  aa  155 141 171 040
    000313  aa  142 145 040 055
    000314  aa  142 162 151 145
    000315  aa  146 000 000 000
    000316  aa  010 164 171 160    156  m9:	acc	"type {n}"
    000317  aa  145 040 173 156
    000320  aa  175 000 000 000
    000321  aa  005 157 162 144    157  m10:	acc	"order"
    000322  aa  145 162 000 000
    000323  aa  003 153 145 171    158  m11:	acc	"key"
    000324  aa  022 141 164 164    159  m12:	acc	"attach_description"
    000325  aa  141 143 150 137
    000326  aa  144 145 163 143
    000327  aa  162 151 160 164
    000330  aa  151 157 156 000
    000331  aa  013 163 167 151    160  m13:	acc	"switchname2"
    000332  aa  164 143 150 156
    000333  aa  141 155 145 062
    000334  aa  006 173 141 162    161  m14:	acc	"{args}"
    000335  aa  147 163 175 000
    000336  aa  105 157 160 156    162  m15:	acc	"opname may be: attach, attached, attach_desc, close, closed, control,"
    000337  aa  141 155 145 040
    000340  aa  155 141 171 040
    000341  aa  142 145 072 040
    000342  aa  141 164 164 141
    000343  aa  143 150 054 040
    000344  aa  141 164 164 141
    000345  aa  143 150 145 144
    000346  aa  054 040 141 164
    000347  aa  164 141 143 150
    000350  aa  137 144 145 163
    000351  aa  143 054 040 143
    000352  aa  154 157 163 145
    000353  aa  054 040 143 154
    000354  aa  157 163 145 144
    000355  aa  054 040 143 157
    000356  aa  156 164 162 157
    000357  aa  154 054 000 000
    000360  aa  116 144 145 154    163  m16:	acc	"delete_record, detach, detached, destroy_iocb, find_iocb, get_chars, get_line,"
    000361  aa  145 164 145 137
    000362  aa  162 145 143 157
    000363  aa  162 144 054 040
    000364  aa  144 145 164 141
    000365  aa  143 150 054 040
    000366  aa  144 145 164 141
    000367  aa  143 150 145 144
    000370  aa  054 040 144 145
    000371  aa  163 164 162 157
    000372  aa  171 137 151 157
    000373  aa  143 142 054 040
    000374  aa  146 151 156 144
    000375  aa  137 151 157 143
    000376  aa  142 054 040 147
    000377  aa  145 164 137 143
    000400  aa  150 141 162 163
    000401  aa  054 040 147 145
    000402  aa  164 137 154 151
    000403  aa  156 145 054 000
    000404  aa  114 151 157 137    164  m17:	acc	"io_module, modes, move_attach, look_iocb, open, opened, open_desc, position,"
    000405  aa  155 157 144 165
    000406  aa  154 145 054 040
    000407  aa  155 157 144 145
    000410  aa  163 054 040 155
    000411  aa  157 166 145 137
    000412  aa  141 164 164 141
    000413  aa  143 150 054 040
    000414  aa  154 157 157 153
    000415  aa  137 151 157 143
    000416  aa  142 054 040 157
    000417  aa  160 145 156 054
    000420  aa  040 157 160 145
    000421  aa  156 145 144 054
    000422  aa  040 157 160 145
    000423  aa  156 137 144 145
    000424  aa  163 143 054 040
    000425  aa  160 157 163 151
    000426  aa  164 151 157 156
    000427  aa  054 000 000 000
    000430  aa  112 160 162 151    165  m18:	acc	"print_iocb, put_chars, read_key, read_length, read_record, rewrite_record,"
    000431  aa  156 164 137 151
    000432  aa  157 143 142 054
    000433  aa  040 160 165 164
    000434  aa  137 143 150 141
    000435  aa  162 163 054 040
    000436  aa  162 145 141 144
    000437  aa  137 153 145 171
    000440  aa  054 040 162 145
    000441  aa  141 144 137 154
    000442  aa  145 156 147 164
    000443  aa  150 054 040 162
    000444  aa  145 141 144 137
    000445  aa  162 145 143 157
    000446  aa  162 144 054 040
    000447  aa  162 145 167 162
    000450  aa  151 164 145 137
    000451  aa  162 145 143 157
    000452  aa  162 144 054 000
    000453  aa  073 163 145 145    166  m19:	acc	"seek_key, test_mode, valid_mode, valid_op, or write_record."
    000454  aa  153 137 153 145
    000455  aa  171 054 040 164
    000456  aa  145 163 164 137
    000457  aa  155 157 144 145
    000460  aa  054 040 166 141
    000461  aa  154 151 144 137
    000462  aa  155 157 144 145
    000463  aa  054 040 166 141
    000464  aa  154 151 144 137
    000465  aa  157 160 054 040
    000466  aa  157 162 040 167
    000467  aa  162 151 164 145
    000470  aa  137 162 145 143
    000471  aa  157 162 144 056
    000472  aa  076 155 157 144    167  m20:	acc	"mode may be: stream_input, stream_output, stream_input_output,"
    000473  aa  145 040 155 141
    000474  aa  171 040 142 145
    000475  aa  072 040 163 164
    000476  aa  162 145 141 155
    000477  aa  137 151 156 160
    000500  aa  165 164 054 040
    000501  aa  163 164 162 145
    000502  aa  141 155 137 157
    000503  aa  165 164 160 165
    000504  aa  164 054 040 163
    000505  aa  164 162 145 141
    000506  aa  155 137 151 156
    000507  aa  160 165 164 137
    000510  aa  157 165 164 160
    000511  aa  165 164 054 000
    000512  aa  075 163 145 161    168  m21:	acc	"sequential_input, sequential_output, sequential_input_output,"
    000513  aa  165 145 156 164
    000514  aa  151 141 154 137
    000515  aa  151 156 160 165
    000516  aa  164 054 040 163
    000517  aa  145 161 165 145
    000520  aa  156 164 151 141
    000521  aa  154 137 157 165
    000522  aa  164 160 165 164
    000523  aa  054 040 163 145
    000524  aa  161 165 145 156
    000525  aa  164 151 141 154
    000526  aa  137 151 156 160
    000527  aa  165 164 137 157
    000530  aa  165 164 160 165
    000531  aa  164 054 000 000
    000532  aa  103 163 145 161    169  m22:	acc	"sequential_update, keyed_sequential_input, keyed_sequential_output,"
    000533  aa  165 145 156 164
    000534  aa  151 141 154 137
    000535  aa  165 160 144 141
    000536  aa  164 145 054 040
    000537  aa  153 145 171 145
    000540  aa  144 137 163 145
    000541  aa  161 165 145 156
    000542  aa  164 151 141 154
    000543  aa  137 151 156 160
    000544  aa  165 164 054 040
    000545  aa  153 145 171 145
    000546  aa  144 137 163 145
    000547  aa  161 165 145 156
    000550  aa  164 151 141 154
    000551  aa  137 157 165 164
    000552  aa  160 165 164 054
    000553  aa  103 153 145 171    170  m23:	acc	"keyed_sequential_update, direct_input, direct_output, direct_update"
    000554  aa  145 144 137 163
    000555  aa  145 161 165 145
    000556  aa  156 164 151 141
    000557  aa  154 137 165 160
    000560  aa  144 141 164 145
    000561  aa  054 040 144 151
    000562  aa  162 145 143 164
    000563  aa  137 151 156 160
    000564  aa  165 164 054 040
    000565  aa  144 151 162 145
    000566  aa  143 164 137 157
    000567  aa  165 164 160 165
    000570  aa  164 054 040 144
    000571  aa  151 162 145 143
    000572  aa  164 137 165 160
    000573  aa  144 141 164 145
    000574  aa  011 157 160 145    171  m24:	acc	"operation"
    000575  aa  162 141 164 151
    000576  aa  157 156 000 000
    000577  aa  013 155 157 144    172  m25:	acc	"mode {args}"
    000600  aa  145 040 173 141
    000601  aa  162 147 163 175
    000602  aa  016 173 055 143    173  m26:	acc	"{-control_arg}"
    000603  aa  157 156 164 162
    000604  aa  157 154 137 141
    000605  aa  162 147 175 000
    000606  aa  037 173 055 143    174  m27:	acc	"{-control_arg} may be -no_quote"
    000607  aa  157 156 164 162
    000610  aa  157 154 137 141
    000611  aa  162 147 175 040
    000612  aa  155 141 171 040
    000613  aa  142 145 040 055
    000614  aa  156 157 137 161
    000615  aa  165 157 164 145
                                   175  
                                   176  	end

NO LITERALS
     
NAME DEFINITIONS FOR ENTRY POINTS AND SEGDEFS

    000616  5a   000003 000000 
    000617  5a   000030 600000 
    000620  aa   000000 000000 
    000621  55   000012 000002 
    000622  5a   000002 400003 
    000623  55   000006 000012 
    000624  aa  014 151 157 137
    000625  aa  143 141 154 154
    000626  aa  137 155 163 147
    000627  aa  137 000 000 000
    000630  55   000021 000003 
    000631  0a   000000 400000 
    000632  55   000015 000003 
    000633  aa  014 151 157 137         io_call_msg_
    000634  aa  143 141 154 154
    000635  aa  137 155 163 147
    000636  aa  137 000 000 000
    000637  55   000002 000012 
    000640  6a   000000 400002 
    000641  55   000024 000003 
    000642  aa  014 163 171 155         symbol_table
    000643  aa  142 157 154 137
    000644  aa  164 141 142 154
    000645  aa  145 000 000 000

DEFINITIONS HASH TABLE

    000646  aa   000000 000015 
    000647  aa   000000 000000 
    000650  aa   000000 000000 
    000651  aa   000000 000000 
    000652  aa   000000 000000 
    000653  5a   000012 000000 
    000654  aa   000000 000000 
    000655  5a   000021 000000 
    000656  aa   000000 000000 
    000657  aa   000000 000000 
    000660  aa   000000 000000 
    000661  aa   000000 000000 
    000662  aa   000000 000000 
    000663  aa   000000 000000 

NO EXTERNAL NAMES

NO TRAP POINTER WORDS

TYPE PAIR BLOCKS

    000664  aa   000001 000000 
    000665  aa   000000 000000 

INTERNAL EXPRESSION WORDS

LINKAGE INFORMATION
      
    000000  aa   000000 000000 
    000001  0a   000616 000000 
    000002  aa   000000 000000 
    000003  aa   000000 000000 
    000004  aa   000000 000000 
    000005  aa   000000 000000 
    000006  22   000010 000010 
    000007  a2   000000 000000 
SYMBOL INFORMATION
     
SYMBOL TABLE HEADER
     
    000000  aa   000000 000001 
    000001  aa   163171 155142 
    000002  aa   164162 145145 
    000003  aa   000000 000007 
    000004  aa   000000 115030 
    000005  aa   273207 326355 
    000006  aa   000000 115246 
    000007  aa   441775 633417 
    000010  aa   141154 155040 
    000011  aa   040040 040040 
    000012  aa   000024 000040 
    000013  aa   000034 000040 
    000014  aa   000044 000100 
    000015  aa   000002 000002 
    000016  aa   000064 000000 
    000017  aa   000000 000154 
    000020  aa   000000 000103 
    000021  aa   000137 000134 
    000022  aa   000146 000103 
    000023  aa   000064 000000 
    000024  aa   101114 115040 
    000025  aa   126145 162163 
    000026  aa   151157 156040 
    000027  aa   067056 063040 
    000030  aa   116157 166145 
    000031  aa   155142 145162 
    000032  aa   040061 071070 
    000033  aa   066040 040040 
    000034  aa   107112 157150 
    000035  aa   156163 157156 
    000036  aa   056123 171163 
    000037  aa   115141 151156 
    000040  aa   164056 141040 
    000041  aa   040040 040040 
    000042  aa   040040 040040 
    000043  aa   040040 040040 
    000044  aa   055164 141162 
    000045  aa   147145 164040 
    000046  aa   154066 070040 
    000047  aa   040040 040040 
    000050  aa   040040 040040 
    000051  aa   040040 040040 
    000052  aa   040040 040040 
    000053  aa   040040 040040 
    000054  aa   040040 040040 
    000055  aa   040040 040040 
    000056  aa   040154 151163 
    000057  aa   164040 163171 
    000060  aa   155142 157154 
    000061  aa   163040 040040 
    000062  aa   040040 040040 
    000063  aa   040040 040040 
    000064  aa   000000 000001 
    000065  aa   000000 000001 
    000066  aa   000072 000043 
    000067  aa   152372 745461 
    000070  aa   000000 115246 
    000071  aa   441776 400000 
    000072  aa   076163 160145          >spec>install>1003>io_call_msg_.alm
    000073  aa   143076 151156 
    000074  aa   163164 141154 
    000075  aa   154076 061060 
    000076  aa   060063 076151 
    000077  aa   157137 143141 
    000100  aa   154154 137155 
    000101  aa   163147 137056 
    000102  aa   141154 155040 
               MULTICS ASSEMBLY CROSS REFERENCE LISTING

   Value        Symbol                   Source file   Line number

         115    attach                   io_call_msg_:        59,  121.
         123    attached                 io_call_msg_:        65,  127.
         131    attach_desc              io_call_msg_:        70,  133.
          60    close                    io_call_msg_:        42,   92.
         125    closed                   io_call_msg_:        67,  129.
         113    closef                   io_call_msg_:        57,  119.
          44    command                  io_call_msg_:        39,   80.
          72    control                  io_call_msg_:        48,  102.
         101    delete                   io_call_msg_:        52,  109.
         120    destroy                  io_call_msg_:        62,  124.
         114    det                      io_call_msg_:        58,  120.
         126    detached                 io_call_msg_:        68,  130.
          52    deti                     io_call_msg_:        40,   86.
         116    find                     io_call_msg_:        60,  122.
          63    getc                     io_call_msg_:        44,   95.
          61    getl                     io_call_msg_:        43,   93.
           0    io_call_msg_             io_call_msg_:        27,   29.
         133    io_module                io_call_msg_:        71,  136.
         117    look                     io_call_msg_:        61,  123.
         140    m1                       io_call_msg_:        87,  138,  140,  148.
         321    m10                      io_call_msg_:       102,  157.
         323    m11                      io_call_msg_:       110,  158.
         324    m12                      io_call_msg_:       121,  159.
         331    m13                      io_call_msg_:       125,  160.
         334    m14                      io_call_msg_:        80,  119,  120,  161.
         336    m15                      io_call_msg_:        81,  162.
         360    m16                      io_call_msg_:        82,  163.
         404    m17                      io_call_msg_:        83,  164.
         430    m18                      io_call_msg_:        84,  165.
         453    m19                      io_call_msg_:        85,  166.
         142    m2                       io_call_msg_:        93,   95,  103,  149.
         472    m20                      io_call_msg_:        88,  115,  167.
         512    m21                      io_call_msg_:        89,  116,  168.
         532    m22                      io_call_msg_:        90,  117,  169.
         553    m23                      io_call_msg_:        91,  118,  170.
         574    m24                      io_call_msg_:       137,  171.
         577    m25                      io_call_msg_:       114,  172.
         602    m26                      io_call_msg_:       111,  131,  134,  173.
         606    m27                      io_call_msg_:       112,  132,  135,  174.
         147    m3                       io_call_msg_:       150.
         201    m4                       io_call_msg_:        94,   96,  104,  151.
         235    m5                       io_call_msg_:        97,  105,  107,  152.
         244    m6                       io_call_msg_:        98,  106,  108,  153.
         300    m7                       io_call_msg_:        99,  154.
         306    m8                       io_call_msg_:       100,  155.
         316    m9                       io_call_msg_:       101,  156.
          67    modes                    io_call_msg_:        46,   99.
         121    move                     io_call_msg_:        63,  125.
         137    null                     io_call_msg_:        86,   92,  109,  113,  122,  123,  124,  126,  127,  128,  129,
                                                             130,  136,  147.
          53    open                     io_call_msg_:        41,   87.
         124    opened                   io_call_msg_:        66,  128.
         106    openf                    io_call_msg_:        56,  114.
         127    open_desc                io_call_msg_:        69,  131.
          71    posit                    io_call_msg_:        47,  101.
         122    print                    io_call_msg_:        64,  126.
          65    putc                     io_call_msg_:        45,   97.
         103    readk                    io_call_msg_:        54,  111.
         105    readl                    io_call_msg_:        55,  113.
          73    readr                    io_call_msg_:        49,  103.
          77    rewrite                  io_call_msg_:        51,  107.
         102    seek                     io_call_msg_:        53,  110.
           0    start                    io_call_msg_:        30,   39,   40,   41,   42,   43,   44,   45,   46,   47,   48,
                                                              49,   50,   51,   52,   53,   54,   55,   56,   57,   58,   59,
                                                              60,   61,   62,   63,   64,   65,   66,   67,   68,   69,   70,
                                                              71,   72,   73,   74,   80,   81,   82,   83,   84,   85,   86,
                                                              87,   88,   89,   90,   91,   92,   93,   94,   95,   96,   97,
                                                              98,   99,  100,  101,  102,  103,  104,  105,  106,  107,  108,
                                                             109,  110,  111,  112,  113,  114,  115,  116,  117,  118,  119,
                                                             120,  121,  122,  123,  124,  125,  126,  127,  128,  129,  130,
                                                             131,  132,  134,  135,  136,  137,  138,  140.
         135    test_mode                io_call_msg_:        73,  138.
         136    valid_mode               io_call_msg_:        74,  139.
         134    valid_op                 io_call_msg_:        72,  137.
          75    write                    io_call_msg_:        50,  105.


NO FATAL ERRORS


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
