	COMPILATION LISTING OF SEGMENT bj_ppt_search
	Compiled by: Multics PL/I Compiler, Release 28e, of February 14, 1985
	Compiled at: Honeywell Multics Op. - System M
	Compiled on: 03/05/85  0853.6 mst Tue
	    Options: optimize map

        1 /* ***********************************************************
        2*   *                                                         *
        3*   * Copyright, (C) Honeywell Information Systems Inc., 1983 *
        4*   *                                                         *
        5*   *********************************************************** */
        6 
        7 /* format: style4,indattr,ifthenstmt,ifthen,^indcomtxt,idind33 */
        8 
        9 bj_ppt_search:
       10      proc (bj_uid) returns (ptr);
       11 
       12 /* HISTORY:
       13*Written by Mike Pandolf, 08/03/82.
       14*Modified:
       15*12/06/83 by L. A. Newcomb:  Renamed before_journal_manager_static_ to
       16*            bjm_data_ and moved some cells from dm_data_ to bjm_data_.
       17*06/07/84 by Lee Baldwin:  Renamed dm_error_$bj_(ppt ppte)_version_bad
       18*            to $bj_bad_(ppt ppte)_version.
       19**/
       20 
       21 dcl  bj_uid		        bit (36) aligned;
       22 
       23 
       24 dcl  found		        bit (1);
       25 dcl  i			        fixed bin;
       26 dcl  code			        fixed bin (35);
       27 
       28 dcl  ME			        char (13) internal static options (constant)
       29 			        init ("bj_ppt_search");
       30 
       31 
       32 dcl  bjm_data_$bj_ppt_ptr	        pointer external;
       33 dcl  bj_report_err		        entry options (variable);
       34 
       35 
       36 dcl  dm_error_$bj_bad_ppt_version     ext;
       37 dcl  dm_error_$bj_bad_ppte_version    ext;
       38 
       39 
       40 
       41 	bj_ppt_ptr = bjm_data_$bj_ppt_ptr;
       42 
       43 	if bj_ppt.version ^= BJ_PPT_VERSION_1 then
       44 	     do;
       45 	     code = dm_error_$bj_bad_ppt_version;
       46 	     goto exit_err;
       47 	end;
       48 
       49 	found = "0"b;
       50 
       51 	do i = 1 to bj_ppt.highest_ix_used while (^found);
       52 	     bj_ppte_ptr = addr (bj_ppt.e (i));
       53 	     if bj_ppte.version ^= 0 then
       54 		do;
       55 		if bj_ppte.version ^= BJ_PPTE_VERSION_1 then
       56 		     do;
       57 		     code = dm_error_$bj_bad_ppte_version;
       58 		     goto exit_err;
       59 		end;
       60 		if bj_ppte.bj_uid = bj_uid then found = "1"b;
       61 	     end;
       62 	end;
       63 
       64 	if ^found then bj_ppte_ptr = null ();
       65 
       66 	return (bj_ppte_ptr);
       67 
       68 
       69 exit_err: call bj_report_err (code, ME);
       70 
       71 
  1     1 	/* BEGIN dm_bj_static.incl.pl1 */
  1     2 /*
  1     3*Modified: 
  1     4*10/04/82 by Lee A. Newcomb:  To change from internal static to external
  1     5*	  static.
  1     6**/
  1     7 
  1     8 dcl dm_system_data_$bj_max_n_journals		fixed bin ext static;
  1     9 dcl dm_system_data_$bj_max_n_processes		fixed bin ext static;
  1    10 dcl dm_system_data_$max_n_transactions     fixed bin ext static;
  1    11 
  1    12 	/* END dm_bj_static.incl.pl1 */
  1    13 
       72 
       73 
       74 
  2     1 /*  BEGIN INCLUDE FILE:	dm_bj_ppt.incl.pl1	*/
  2     2 /*
  2     3*Layout of the per-process before journal table and entries.
  2     4*
  2     5*Written by Andre Bensoussan June/July 1982
  2     6*Modified:
  2     7*09/29/82 by Lee A. Newcomb:  To make two default oid cells, pad ppte's
  2     8*	  to account for all used space, and use dm_system_data_ for
  2     9*	  determining dimension of bj_ppt.e.
  2    10**/
  2    11 /* format: style4,indattr,idind33,^indcomtxt */
  2    12 
  2    13 dcl  BJ_PPT_VERSION_1	        fixed bin int static options (constant) init (1);
  2    14 dcl  BJ_PPTE_VERSION_1	        fixed bin int static options (constant) init (1);
  2    15 
  2    16 dcl  bj_ppt_ptr		        ptr;
  2    17 
  2    18 dcl  1 bj_ppt		        based (bj_ppt_ptr) aligned,
  2    19        2 version		        fixed bin,
  2    20        2 max_n_entries	        fixed bin,		/* should be = dm_system_data_$bj_max_n_journals */
  2    21        2 n_entries_used	        fixed bin,		/* # of BJs open in this process */
  2    22        2 highest_ix_used	        fixed bin,		/* max. # of BJs ever opened in this process */
  2    23        2 default_bj,				/* for selecting a txn def. BJ by write_before_mark protocol */
  2    24          3 user_set_oid	        bit (36),		/* explicit user setting via $set_default_bj */
  2    25          3 last_opened_oid	        bit (36),		/* implicit if no user setting, set by open and close */
  2    26 						/* if both zero, use system default BJ */
  2    27        2 process_id		        bit (36),		/* so we don't have to keep calling for it. */
  2    28        2 process_ix		        fixed bin,		/* index into bj_check_in_table */
  2    29        2 mod_list_area	        (100) fixed bin (35), /* for keeping track of ppt mods, not curr. used */
  2    30 
  2    31        2 e		        dim (dm_system_data_$bj_max_n_journals refer (bj_ppt.max_n_entries))
  2    32 			        like bj_ppte;	/* an entry for each BJ open in this process */
  2    33 						/* always make sure bj_ppt.e is on a even word boundary */
  2    34 
  2    35 /* now specify the format of each per-process BJ table entry */
  2    36 
  2    37 dcl  bj_ppte_ptr		        ptr;
  2    38 
  2    39 dcl  1 bj_ppte		        based (bj_ppte_ptr) aligned,
  2    40        2 version		        fixed bin,		/* better be the same for all entries in a bj_ppt */
  2    41        2 bj_uid		        bit (36),		/* UID of the BJ page file */
  2    42        2 pf_oid		        bit (36),		/* OID of the BJ page file */
  2    43        2 n_opening		        fixed bin,		/* how many openings this process has done for this BJ */
  2    44        2 bj_pste_ptr	        ptr,		/* "link" to per-system BJ table entry */
  2    45        2 open_time		        fixed bin (71);	/* used to fill in bj_ppt.default_bj.last_opened_oid */
  2    46 						/* if the last opened BJ is closed */
  2    47 
  2    48 /* END INCLUDE FILE:	bj_ppt.incl.pl1	*/
       75 
       76 
       77 
       78      end bj_ppt_search;
	SOURCE FILES USED IN THIS COMPILATION.

LINE      NUMBER  DATE MODIFIED     NAME			PATHNAME
             0    03/05/85  0757.7  bj_ppt_search.pl1                 >spec>on>7138.pbf>bj_ppt_search.pl1
72           1    01/07/85  0857.8  dm_bj_static.incl.pl1             >ldd>include>dm_bj_static.incl.pl1
75           2    01/07/85  0857.6  dm_bj_ppt.incl.pl1                >ldd>include>dm_bj_ppt.incl.pl1
	NAMES DECLARED IN THIS COMPILATION.

IDENTIFIER	     OFFSET    LOC STORAGE CLASS   DATA TYPE		ATTRIBUTES AND REFERENCES
								(* indicates a set context)

NAMES DECLARED BY DECLARE STATEMENT.
BJ_PPTE_VERSION_1                      constant        fixed bin(17,0)          initial dcl 2-14 ref 55
BJ_PPT_VERSION_1                       constant        fixed bin(17,0)          initial dcl 2-13 ref 43
ME                              000000 constant        char(13)                 initial unaligned dcl 28 set ref 69*
bj_ppt                                 based           structure                level 1 dcl 2-18
bj_ppt_ptr                      000104 automatic       pointer                  dcl 2-16 set ref 41* 43 51 52
bj_ppte                                based           structure                level 1 dcl 2-39
bj_ppte_ptr                     000106 automatic       pointer                  dcl 2-37 set ref 52* 53 55 60 64* 66
bj_report_err                   000012 constant        entry                    external dcl 33 ref 69
bj_uid                                 parameter       bit(36)                  dcl 21 in procedure "bj_ppt_search" ref 9 60
bj_uid                    1            based           bit(36)                  level 2 in structure "bj_ppte" dcl 2-39 in procedure
                                                                                  "bj_ppt_search" ref 60
bjm_data_$bj_ppt_ptr            000010 external static pointer                  dcl 32 ref 41
code                            000102 automatic       fixed bin(35,0)          dcl 26 set ref 45* 57* 69*
dm_error_$bj_bad_ppt_version    000014 external static fixed bin(17,0)          dcl 36 ref 45
dm_error_$bj_bad_ppte_version   000016 external static fixed bin(17,0)          dcl 37 ref 57
e                       154            based           structure                array level 2 dcl 2-18 set ref 52
found                           000100 automatic       bit(1)                   unaligned dcl 24 set ref 49* 51 60* 64
highest_ix_used           3            based           fixed bin(17,0)          level 2 dcl 2-18 ref 51
i                               000101 automatic       fixed bin(17,0)          dcl 25 set ref 51* 52*
version                                based           fixed bin(17,0)          level 2 in structure "bj_ppt" dcl 2-18 in procedure
                                                                                  "bj_ppt_search" ref 43
version                                based           fixed bin(17,0)          level 2 in structure "bj_ppte" dcl 2-39 in procedure
                                                                                  "bj_ppt_search" ref 53 55

NAMES DECLARED BY DECLARE STATEMENT AND NEVER REFERENCED.
dm_system_data_$bj_max_n_journals      external static fixed bin(17,0)          dcl 1-8
dm_system_data_$bj_max_n_processes     external static fixed bin(17,0)          dcl 1-9
dm_system_data_$max_n_transactions     external static fixed bin(17,0)          dcl 1-10

NAMES DECLARED BY EXPLICIT CONTEXT.
bj_ppt_search                   000024 constant        entry                    external dcl 9
exit_err                        000111 constant        label                    dcl 69 ref 46 58

NAMES DECLARED BY CONTEXT OR IMPLICATION.
addr                                                   builtin function         ref 52
null                                                   builtin function         ref 64

STORAGE REQUIREMENTS FOR THIS PROGRAM.

	Object	Text	Link	Symbol	Defs	Static
Start          0       0       222         242     131         232
Length       442     131        20         164      70           0

BLOCK NAME	         STACK SIZE     TYPE		WHY NONQUICK/WHO SHARES STACK FRAME
bj_ppt_search                        84 external procedure  is an external procedure.  

STORAGE FOR AUTOMATIC VARIABLES.

STACK FRAME                 LOC IDENTIFIER                  BLOCK NAME
bj_ppt_search            000100 found                       bj_ppt_search
                         000101 i                           bj_ppt_search
                         000102 code                        bj_ppt_search
                         000104 bj_ppt_ptr                  bj_ppt_search
                         000106 bj_ppte_ptr                 bj_ppt_search

THE FOLLOWING EXTERNAL OPERATORS ARE USED BY THIS PROGRAM.
call_ext_out_desc   return              signal              ext_entry

THE FOLLOWING EXTERNAL ENTRIES ARE CALLED BY THIS PROGRAM.
bj_report_err

THE FOLLOWING EXTERNAL VARIABLES ARE USED BY THIS PROGRAM.
bjm_data_$bj_ppt_ptr          dm_error_$bj_bad_ppt_version  dm_error_$bj_bad_ppte_version




   LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC   
      9 000020        41 000031        43 000034        45 000037        46 000041        49 000042        51 000043
     52 000055        53 000061        55 000063        57 000065        58 000070        60 000071        62 000077
     64 000101        66 000105        69 000111        78 000125


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
