	COMPILATION LISTING OF SEGMENT lm_init_fast_per_process_
	Compiled by: Multics PL/I Compiler, Release 28e, of February 14, 1985
	Compiled at: Honeywell Multics Op. - System M
	Compiled on: 03/05/85  0908.8 mst Tue
	    Options: optimize map

        1 /* ***********************************************************
        2*   *                                                         *
        3*   * Copyright, (C) Honeywell Information Systems Inc., 1983 *
        4*   *                                                         *
        5*   *********************************************************** */
        6 
        7 
        8 /*  DESCRIPTION:
        9*   Program to establish fast locking for this process.
       10*   Called by init_lock_per_process_ during per-process
       11*   Lock Manager initialization.
       12**/
       13 
       14 /* HISTORY:
       15*Written by John Bongiovanni 06/15/82.
       16*Modified:
       17*03/04/83 by Jeffrey D. Ives: Modified for new initialization.
       18*10/10/84 by Stanford S. Cox:  For DM program standards, and to meter fast
       19*            locks.
       20*11/26/84 by Matthew Pierret:  Removed references to the obsolete dm_common_init
       21**/
       22 
       23 /* format: style3,ifthenstmt,ifthendo,^indnoniterdo,^inditerdo,ind3 */
       24 /* format: indcomtxt,indcom */
       25 
       26 lm_init_fast_per_process_:
       27    proc ();
       28 
       29 dcl	saved_validation_level
       30 			fixed bin init (0);
       31 dcl	cleanup		condition;
       32 
       33 dcl	lm_data_$fast_lock_data_ptr
       34 			ptr external;
       35 dcl	lm_data_$lock_list_meters_ptr
       36 			ptr external;
       37 dcl	dm_system_data_$	external;
       38 dcl	dm_system_data_$fast_lock_data_rel
       39 			bit (18) aligned external;
       40 dcl	dm_system_data_$lock_list_meters_rel
       41 			bit (18) aligned external;
       42 
       43 dcl	cu_$level_get	entry (fixed bin);
       44 dcl	cu_$level_set	entry (fixed bin);
       45 dcl	get_ring_		entry () returns (fixed bin (3));
       46 
       47 dcl	addr		builtin;
       48 dcl	ptr		builtin;
       49 
       50       call cu_$level_get (saved_validation_level);
       51       on cleanup call cu_$level_set (saved_validation_level);
       52       call cu_$level_set (get_ring_ ());
       53 
       54       lm_data_$fast_lock_data_ptr = ptr (addr (dm_system_data_$), dm_system_data_$fast_lock_data_rel);
       55 
       56       if dm_system_data_$lock_list_meters_rel = "0"b
       57       then lm_data_$lock_list_meters_ptr = null ();
       58       else lm_data_$lock_list_meters_ptr = ptr (addr (dm_system_data_$), dm_system_data_$lock_list_meters_rel);
       59 
       60       call cu_$level_set (saved_validation_level);
       61 
       62       return;
       63 
       64 
       65    end lm_init_fast_per_process_;
	SOURCE FILES USED IN THIS COMPILATION.

LINE      NUMBER  DATE MODIFIED     NAME			PATHNAME
             0    03/05/85  0759.6  lm_init_fast_per_process_.pl1     >spec>on>7138.pbf>lm_init_fast_per_process_.pl1
	NAMES DECLARED IN THIS COMPILATION.

IDENTIFIER	     OFFSET    LOC STORAGE CLASS   DATA TYPE		ATTRIBUTES AND REFERENCES
								(* indicates a set context)

NAMES DECLARED BY DECLARE STATEMENT.
addr                                                   builtin function         dcl 47 ref 54 58
cleanup                         000102 stack reference condition                dcl 31 ref 51
cu_$level_get                   000022 constant        entry                    external dcl 43 ref 50
cu_$level_set                   000024 constant        entry                    external dcl 44 ref 51 52 60
dm_system_data_$                000014 external static fixed bin(17,0)          dcl 37 set ref 54 58
dm_system_data_$fast_lock_data_rel
                                000016 external static bit(18)                  dcl 38 ref 54
dm_system_data_$lock_list_meters_rel
                                000020 external static bit(18)                  dcl 40 ref 56 58
get_ring_                       000026 constant        entry                    external dcl 45 ref 52 52
lm_data_$fast_lock_data_ptr     000010 external static pointer                  dcl 33 set ref 54*
lm_data_$lock_list_meters_ptr   000012 external static pointer                  dcl 35 set ref 56* 58*
ptr                                                    builtin function         dcl 48 ref 54 58
saved_validation_level          000100 automatic       fixed bin(17,0)          initial dcl 29 set ref 29* 50* 51* 60*

NAME DECLARED BY EXPLICIT CONTEXT.
lm_init_fast_per_process_       000007 constant        entry                    external dcl 26

NAME DECLARED BY CONTEXT OR IMPLICATION.
null                                                   builtin function         ref 56

STORAGE REQUIREMENTS FOR THIS PROGRAM.

	Object	Text	Link	Symbol	Defs	Static
Start          0       0       252         302     114         262
Length       466     114        30         150     135           0

BLOCK NAME	         STACK SIZE     TYPE		WHY NONQUICK/WHO SHARES STACK FRAME
lm_init_fast_per_process_            80 external procedure  is an external procedure.  
on unit on line 51                   68 on unit               

STORAGE FOR AUTOMATIC VARIABLES.

STACK FRAME                 LOC IDENTIFIER                  BLOCK NAME
lm_init_fast_per_process_
                         000100 saved_validation_level      lm_init_fast_per_process_

THE FOLLOWING EXTERNAL OPERATORS ARE USED BY THIS PROGRAM.
call_ext_out        return              enable              ext_entry           int_entry

THE FOLLOWING EXTERNAL ENTRIES ARE CALLED BY THIS PROGRAM.
cu_$level_get                 cu_$level_set                 get_ring_

THE FOLLOWING EXTERNAL VARIABLES ARE USED BY THIS PROGRAM.
dm_system_data_$              dm_system_data_$fast_lock_data_rel
dm_system_data_$lock_list_meters_rel                        lm_data_$fast_lock_data_ptr   lm_data_$lock_list_meters_ptr




   LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC   
     26 000006        29 000014        50 000015        51 000023        52 000047        54 000067        56 000075
     58 000103        60 000105        62 000113


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
