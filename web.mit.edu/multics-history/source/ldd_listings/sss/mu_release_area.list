	COMPILATION LISTING OF SEGMENT mu_release_area
	Compiled by: Multics PL/I Compiler, Release 28e, of February 14, 1985
	Compiled at: Honeywell Multics Op. - System M
	Compiled on: 04/18/85  1047.7 mst Thu
	    Options: optimize map

        1 /* ***********************************************************
        2*   *                                                         *
        3*   *                                                         *
        4*   * Copyright, (C) Honeywell Information Systems Inc., 1981 *
        5*   *                                                         *
        6*   *                                                         *
        7*   *********************************************************** */
        8 
        9 /* ******************************************************
       10*   *                                                    *
       11*   *                                                    *
       12*   * Copyright (c) 1972 by Massachusetts Institute of   *
       13*   * Technology and Honeywell Information Systems, Inc. *
       14*   *                                                    *
       15*   *                                                    *
       16*   ****************************************************** */
       17 
       18 /* HISTORY:
       19*
       20*   Originally written by Jim Gray - - March 1980
       21*   Made to do something by R. Harvey - 27 January 1982
       22*   Made not to do anything by R. Harvey - 7 February 1982
       23*
       24**/
       25 
       26 mu_release_area:
       27 release_area:
       28      procedure (area_ptr);
       29 
       30 /* DESCRIPTION:
       31*
       32*   This is a strategy module for the handling of the temporary storage
       33*   areas used by the five access entries dsl_$store, modify, delete,
       34*   retrieve, and define_temp_rel. it is called at the end of each call
       35*   to the particular module, with a pointer to that modules temporary
       36*   area, and then this module may do a release_area_, truncate_seg_,
       37*   or whatever seems more appropiate, and efficient.
       38*   Currently nothing is done in this routine, and the individual
       39*   dsl_ entries mentioned do a define_area_ over the existing area,
       40*   and only at close time is release_area_ called, in order to promote
       41*   best efficiency.
       42*
       43**/
       44 
       45 /* PARAMETERS:
       46*
       47*   area_ptr - - (input/output) pointer, one of the five pointers in the
       48*   mrds_dbcb.incl.pl1, store_area_ptr, modify_area_ptr, delete_area_ptr,
       49*   retrieve_area_ptr, def_temp_rel_area_ptr. it should not be null.
       50*   NOTE: this procedure should only by called if the area is the whole
       51*   segment.
       52*   if release_area_ is called with this pointer, the pointer should be
       53*   set to null before returning.
       54*
       55**/
       56 
       57 	declare area_ptr		 ptr parameter;	/* input parameter to area to be "released" */
       58 
       59 
       60 
       61      end;
	SOURCE FILES USED IN THIS COMPILATION.

LINE      NUMBER  DATE MODIFIED     NAME			PATHNAME
             0    04/18/85  0908.6  mu_release_area.pl1               >special_ldd>online>mrds.pbf-04/18/85>mu_release_area.pl1
	NAMES DECLARED IN THIS COMPILATION.

IDENTIFIER	     OFFSET    LOC STORAGE CLASS   DATA TYPE		ATTRIBUTES AND REFERENCES
								(* indicates a set context)

NAME DECLARED BY DECLARE STATEMENT.
area_ptr                               parameter       pointer                  dcl 57 ref 26 26

NAMES DECLARED BY EXPLICIT CONTEXT.
mu_release_area                 000014 constant        entry                    external dcl 26
release_area                    000004 constant        entry                    external dcl 26

THERE WERE NO NAMES DECLARED BY CONTEXT OR IMPLICATION.

STORAGE REQUIREMENTS FOR THIS PROGRAM.

	Object	Text	Link	Symbol	Defs	Static
Start          0       0        56          66      22          66
Length       236      22        10         133      34           0

BLOCK NAME	         STACK SIZE     TYPE		WHY NONQUICK/WHO SHARES STACK FRAME
release_area                         64 external procedure  is an external procedure.  

THE FOLLOWING EXTERNAL OPERATORS ARE USED BY THIS PROGRAM.
return              ext_entry

NO EXTERNAL ENTRIES ARE CALLED BY THIS PROGRAM.

NO EXTERNAL VARIABLES ARE USED BY THIS PROGRAM.




   LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC   
     26 000001        61 000021


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
