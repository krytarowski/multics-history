	COMPILATION LISTING OF SEGMENT tc_disconnect
	Compiled by: Multics PL/I Compiler, Release 29, of July 28, 1986
	Compiled at: Honeywell Bull, Phx. Az., Sys-M 
	Compiled on: 08/13/87  1330.6 mst Thu
	    Options: optimize map

        1 /****^  ***********************************************************
        2*        *                                                         *
        3*        * Copyright, (C) Honeywell Bull Inc., 1987                *
        4*        *                                                         *
        5*        * Copyright, (C) Honeywell Information Systems Inc., 1981 *
        6*        *                                                         *
        7*        * Copyright (c) 1972 by Massachusetts Institute of        *
        8*        * Technology and Honeywell Information Systems, Inc.      *
        9*        *                                                         *
       10*        *********************************************************** */
       11 
       12 
       13 
       14 
       15 /****^  HISTORY COMMENTS:
       16*  1) change(86-12-17,LJAdams), approve(86-12-17,MCR7485),
       17*     audit(86-12-19,Margolin), install(87-01-06,MR12.0-1255):
       18*     Modified to support MOWSE.
       19*  2) change(86-12-17,LJAdams), approve(86-12-17,MCR7584),
       20*     audit(86-12-19,Margolin), install(87-01-06,MR12.0-1255):
       21*     Modified to support DSA.
       22*  3) change(87-01-05,LJAdams), approve(87-01-05,MCR7485),
       23*     audit(87-01-05,Blair), install(87-01-06,MR12.0-1255):
       24*     Initialize tc_data_ptr.
       25*                                                   END HISTORY COMMENTS */
       26 
       27 
       28 /* Understander of disconnections for Terminal Control */
       29 /* Benson I. Margulies, sometime in 1981 */
       30 /* format: style2,linecom,^indnoniterdo,indcomtxt,^inditerdo,dclind5,idind25 */
       31 tc_disconnect:
       32      procedure;
       33 	return;
       34 
       35 	declare error_table_$io_no_permission
       36 				   external static fixed bin (35);
       37 
       38 	declare (addr, currentsize, null, string)
       39 				   builtin;
       40 
       41 	declare Code		   fixed bin (35);
       42 	declare TC_data_ptr		   pointer;
       43 	declare signal_		   entry () options (variable);
       44 
  1     1 /* BEGIN INCLUDE FILE condition_info_header.incl.pl1 BIM 1981 */
  1     2 /* format: style2 */
  1     3 
  1     4      declare condition_info_header_ptr
  1     5 			      pointer;
  1     6      declare 1 condition_info_header
  1     7 			      aligned based (condition_info_header_ptr),
  1     8 	     2 length	      fixed bin,		/* length in words of this structure */
  1     9 	     2 version	      fixed bin,		/* version number of this structure */
  1    10 	     2 action_flags	      aligned,		/* tell handler how to proceed */
  1    11 	       3 cant_restart     bit (1) unaligned,	/* caller doesn't ever want to be returned to */
  1    12 	       3 default_restart  bit (1) unaligned,	/* caller can be returned to with no further action */
  1    13 	       3 quiet_restart    bit (1) unaligned,	/* return, and print no message */
  1    14 	       3 support_signal   bit (1) unaligned,	/* treat this signal as if the signalling procedure had the support bit set */
  1    15 						/* if the signalling procedure had the support bit set, do the same for its caller */
  1    16 	       3 pad	      bit (32) unaligned,
  1    17 	     2 info_string	      char (256) varying,	/* may contain printable message */
  1    18 	     2 status_code	      fixed bin (35);	/* if^=0, code interpretable by com_err_ */
  1    19 
  1    20 /* END INCLUDE FILE condition_info_header.incl.pl1 */
       45 
  2     1 /* Begin the include file, tc_disconnect_info.incl.pl1 */
  2     2 
  2     3 
  2     4 
  2     5 /****^  HISTORY COMMENTS:
  2     6*  1) change(86-12-17,LJAdams), approve(86-12-17,MCR7485),
  2     7*     audit(86-12-19,Margolin), install(87-01-06,MR12.0-1255):
  2     8*     Modified to support MOWSE.
  2     9*  2) change(86-12-17,LJAdams), approve(86-12-17,MCR7584),
  2    10*     audit(86-12-19,Margolin), install(87-01-06,MR12.0-1255):
  2    11*     Modified to support DSA.
  2    12*                                                   END HISTORY COMMENTS */
  2    13 
  2    14 
  2    15 /* format: style2,linecom,^indnoniterdo,indcomtxt,^inditerdo,dclind5,idind25 */
  2    16      declare tcdi_ptr	        pointer;
  2    17      declare 1 tc_disconnect_info     aligned based (tcdi_ptr),
  2    18 	     2 header	        aligned like condition_info_header,
  2    19 	     2 tc_data_ptr	        pointer,
  2    20 	     2 devx	        fixed bin,      /*MCS network*/
  2    21 	     2 tty_handle           fixed bin (35), /*DSA network*/
  2    22                2 mowse_terminal_iocb_ptr ptr;         /*MOWSE network*/
  2    23 	
  2    24 
  2    25      declare terminal_control_disconnection_
  2    26 			        condition;
  2    27 
  2    28 /* End of the include file tc_disconnect_info.incl.pl1 */
       46 
       47 	declare 1 tcdi		   aligned like tc_disconnect_info;
  3     1 /* BEGIN INCLUDE FILE tc_data_.incl.pl1 BIM May 1981 */
  3     2 
  3     3 
  3     4 /****^  HISTORY COMMENTS:
  3     5*  1) change(86-07-22,LJAdams), approve(86-11-13,MCR7485),
  3     6*     audit(86-12-19,Margolin), install(87-01-06,MR12.0-1255):
  3     7*     Added mowse_terminal_iocb_ptr field.
  3     8*  2) change(86-11-26,LJAdams), approve(86-11-26,MCR7584),
  3     9*     audit(86-12-19,Margolin), install(87-01-06,MR12.0-1255):
  3    10*     tty_handle component has been added for DSA.
  3    11*                                                   END HISTORY COMMENTS */
  3    12 
  3    13 
  3    14 /* Modified DEC 1985 by R. Negaret to add network_type and tty_handle */
  3    15 /* format: style3 */
  3    16 /* This data structure should contain the information
  3    17*   to run terminal control, regardless of what I/O module
  3    18*   it happens to live in */
  3    19 
  3    20 declare	tc_data_ptr	pointer;
  3    21 declare	1 tc_data		aligned based (tc_data_ptr),
  3    22 	  2 network_type	fixed bin,		/* Identification of the network:
  3    23*                                 MCS_NETWORK_TYPE, DSA_NETWORK_TYPE, ... */
  3    24 	  2 devx		fixed bin,		/* hardcore devx */
  3    25 	  2 tty_handle	fixed bin (35),
  3    26 	  2 event		fixed bin (71),		/* tty_index wakes this up */
  3    27 	  2 mowse_terminal_iocb_ptr
  3    28 			ptr,			/* ptr to mowse_terminal_ switch */
  3    29 	  2 change_pclock	fixed bin (35),		/* for detecting async happenings */
  3    30 	  2 ttp		character (32) unaligned,	/* terminal type */
  3    31 	  2 ttt_video_ptr	pointer,
  3    32 	  2 breaktest	bit (128) unaligned,
  3    33 	  2 terminal	aligned,
  3    34 	    3 rows	fixed bin,		/* mostly for better name */
  3    35 	    3 columns	fixed bin,
  3    36 	    3 line_speed	fixed bin,
  3    37 	  2 state		aligned like terminal_state,
  3    38 	  2 tty_read_buffer character (1024) unaligned,	/* should suffice */
  3    39 	  2 input_buffer_ptr
  3    40 			pointer,
  3    41 	  2 screen_data_ptr pointer,
  3    42 	  2 desk_ptr	pointer,			/* table of windows */
  3    43 	  2 old_mode_string character (512) unaligned,
  3    44 	  2 global_buffer_index
  3    45 			fixed bin,
  3    46 	  2 global_buffer_limit
  3    47 			fixed bin,
  3    48 	  2 global_output_buffer
  3    49 			char (512) unaligned;
  3    50 
  3    51 
  3    52 declare	tc_break_array	(0:127) bit (1) unaligned defined (tc_data.breaktest) position (1);
  3    53 
  3    54 declare	1 terminal_state	aligned based,
  3    55 	  2 flags		aligned,
  3    56 	    3 insert_mode	bit (1) unaligned,
  3    57 	    3 cursor_valid	bit (1) unaligned,		/* we know pos */
  3    58 	    3 echnego_outstanding
  3    59 			bit (1) unaligned,
  3    60 	    3 mark_outstanding
  3    61 			bit (1) unaligned,
  3    62 	    3 pad		bit (32) unaligned,
  3    63 	  2 pending	aligned,
  3    64 	    3 count	fixed bin,		/* count of invocations blocked */
  3    65 	    3 input_count	fixed bin,		/* how many are input */
  3    66 	    3 protocol_evs	(72) fixed bin (71),	/* yea, too damn big */
  3    67 	    3 have_sent_protocol
  3    68 			bit (72) unaligned,
  3    69 	    3 async_same_window
  3    70 			bit (72) unaligned,		/* for reflection back to blocking window */
  3    71 	    3 blocked_windows
  3    72 			(72) bit (36) aligned,	/* only 1:count are valid */
  3    73 	  2 cursor_position aligned,			/* respectable only if valid */
  3    74 	    3 row		fixed bin,
  3    75 	    3 col		fixed bin,
  3    76 	  2 current_mark	fixed bin (9) unsigned,
  3    77 	  2 last_mark_back	fixed bin (9) unsigned;
  3    78 
  3    79 declare	state_async_same_window
  3    80 			(72) bit (1) unaligned defined (tc_data.state.pending.async_same_window) position (1);
  3    81 
  3    82 declare	state_have_sent_protocol
  3    83 			(72) bit (1) unaligned defined (tc_data.state.pending.have_sent_protocol) position (1);
  3    84 
  3    85 /* END INCLUDE FILE tc_data_.incl.pl1 */
       48 
  4     1 /*	BEGIN INCLUDE FILE ... net_event_message.incl.pl1 */
  4     2 
  4     3 /****^  HISTORY COMMENTS:
  4     4*  1) change(86-07-30,Kissel), approve(86-07-30,MCR7475), audit(86-08-04,Coren),
  4     5*     install(86-10-09,MR12.0-1181):
  4     6*     This include file was formerly tty_event_message.incl.pl1.  It has been
  4     7*     updated with different fields and new constants, and renamed to
  4     8*     net_event_message.incl.pl1
  4     9*  2) change(87-04-20,GDixon), approve(87-07-13,MCR7694),
  4    10*     audit(87-06-24,Hartogs), install(87-08-04,MR12.1-1056):
  4    11*     Add NETWORK_TYPE_VALUES array.
  4    12*                                                   END HISTORY COMMENTS */
  4    13 
  4    14 /*	describes event message passed with wakeups from the tty DIM */
  4    15 /*	Created 5/24/76 by Robert S. Coren */
  4    16 
  4    17 /* format: style3,linecom,ifthenstmt,indthenelse,^indnoniterdo,indnoniterend,initcol3,dclind5,idind32 */
  4    18 
  4    19 dcl  net_event_message_arg	       fixed bin (71);	/* For calling IPC */
  4    20 dcl  NET_EVENT_MESSAGE_VERSION_1     bit (2) internal static options (constant) init ("10"b);
  4    21 
  4    22 dcl  1 net_event_message	       aligned based (addr (net_event_message_arg)),
  4    23        2 version		       bit (2) unaligned,	/* Currently version 1 */
  4    24        2 reason		       bit (16) unaligned,	/* Additional info about the event */
  4    25        2 pad		       bit (6) unaligned,	/* Must be zero */
  4    26        2 network_type	       fixed bin (4) unsigned unaligned,
  4    27 						/* See below for constants */
  4    28        2 type		       fixed bin (8) unsigned unaligned,
  4    29 						/* Type of interrupt, see below */
  4    30        2 handle		       fixed bin (35) aligned;/* Caller's handle (devx for MCS, handle for DSA) */
  4    31 
  4    32 /* Network type constants */
  4    33 
  4    34 dcl  MCS_NETWORK_TYPE	       fixed bin (4) unsigned internal static options (constant) init (0);
  4    35 dcl  DSA_NETWORK_TYPE	       fixed bin (4) unsigned internal static options (constant) init (1);
  4    36 dcl  MOWSE_NETWORK_TYPE	       fixed bin (4) unsigned internal static options (constant) init (2);
  4    37 
  4    38 dcl  NETWORK_TYPE_VALUES (0:2) char(8) varying int static options(constant) init(
  4    39 	"MCS",
  4    40 	"DSA",
  4    41 	"MOWSE");
  4    42 
  4    43 
  4    44 /* MCS event message type constants */
  4    45 
  4    46 dcl  MAX_MCS_EVENT_MSG_TYPE	       fixed bin internal static options (constant) init (8);
  4    47 
  4    48 dcl  MCS_UNSPECIFIED_MSG	       fixed bin internal static options (constant) init (0);
  4    49 						/* used for "start" order, etc. */
  4    50 dcl  MCS_DIALUP_MSG		       fixed bin internal static options (constant) init (1);
  4    51 						/* dialup */
  4    52 dcl  MCS_HANGUP_MSG		       fixed bin internal static options (constant) init (2);
  4    53 						/* hangup */
  4    54 dcl  MCS_DIALOUT_MSG	       fixed bin internal static options (constant) init (3);
  4    55 						/* dialout status returned */
  4    56 dcl  MCS_QUIT_MSG		       fixed bin internal static options (constant) init (4);
  4    57 						/* quit */
  4    58 dcl  MCS_READ_MSG		       fixed bin internal static options (constant) init (5);
  4    59 						/* input arrived */
  4    60 dcl  MCS_WRITE_MSG		       fixed bin internal static options (constant) init (6);
  4    61 						/* output completed */
  4    62 dcl  MCS_LINE_STATUS_MSG	       fixed bin internal static options (constant) init (7);
  4    63 						/* control tables sent status */
  4    64 dcl  MCS_MASKED_MSG		       fixed bin internal static options (constant) init (8);
  4    65 						/* channel masked by FNP */
  4    66 
  4    67 dcl  MCS_MSG_TYPE_TO_PNAME	       (0:8) char (20) internal static options (constant) init ("unspecified",
  4    68 						/*  0 */
  4    69 			       "dialup",		/*  1 */
  4    70 			       "hangup",		/*  2 */
  4    71 			       "dialout status",	/*  3 */
  4    72 			       "quit",		/*  4 */
  4    73 			       "read",		/*  5 */
  4    74 			       "write",		/*  6 */
  4    75 			       "line status",	/*  7 */
  4    76 			       "masked");		/*  8 */
  4    77 
  4    78 /* DSA event message type constants */
  4    79 
  4    80 dcl  MAX_DSA_EVENT_MSG_TYPE	       fixed bin internal static options (constant) init (19);
  4    81 
  4    82 dcl  DSA_UNSPECIFIED_MSG	       fixed bin (8) uns internal static options (constant) init (0);
  4    83 dcl  DSA_ATTENTION_MSG	       fixed bin (8) uns internal static options (constant) init (1);
  4    84 dcl  DSA_DATA_ATTENTION_MSG	       fixed bin (8) uns internal static options (constant) init (2);
  4    85 dcl  DSA_DEMAND_RELEASE_SRU_MSG      fixed bin (8) uns internal static options (constant) init (3);
  4    86 dcl  DSA_DEMAND_TURN_MSG	       fixed bin (8) uns internal static options (constant) init (4);
  4    87 dcl  DSA_DEMAND_TURN_ACK_MSG	       fixed bin (8) uns internal static options (constant) init (5);
  4    88 dcl  DSA_PURGE_MSG		       fixed bin (8) uns internal static options (constant) init (6);
  4    89 dcl  DSA_RECOVER_MSG	       fixed bin (8) uns internal static options (constant) init (7);
  4    90 dcl  DSA_RECOVER_ACK_MSG	       fixed bin (8) uns internal static options (constant) init (8);
  4    91 dcl  DSA_RELEASE_SRU_MSG	       fixed bin (8) uns internal static options (constant) init (9);
  4    92 dcl  DSA_RESUME_MSG		       fixed bin (8) uns internal static options (constant) init (10);
  4    93 dcl  DSA_RESUME_ACK_MSG	       fixed bin (8) uns internal static options (constant) init (11);
  4    94 dcl  DSA_SUSPEND_MSG	       fixed bin (8) uns internal static options (constant) init (12);
  4    95 dcl  DSA_SUSPEND_ACK_MSG	       fixed bin (8) uns internal static options (constant) init (13);
  4    96 dcl  DSA_TERM_ABNORMAL_MSG	       fixed bin (8) uns internal static options (constant) init (14);
  4    97 dcl  DSA_ESTABLISHMENT_MSG	       fixed bin (8) uns internal static options (constant) init (15);
  4    98 dcl  DSA_TERMINATED_MSG	       fixed bin (8) uns internal static options (constant) init (16);
  4    99 dcl  DSA_USER_UNASSIGN_MSG	       fixed bin (8) uns internal static options (constant) init (17);
  4   100 dcl  DSA_DATA_INPUT_MSG	       fixed bin (8) uns internal static options (constant) init (18);
  4   101 dcl  DSA_DATA_OUTPUT_MSG	       fixed bin (8) uns internal static options (constant) init (19);
  4   102 
  4   103 dcl  DSA_MSG_TYPE_TO_PNAME	       (0:19) char (20) internal static options (constant) init ("unspecified",
  4   104 						/*  0 */
  4   105 			       "attention",		/*  1 */
  4   106 			       "data_attention",	/*  2 */
  4   107 			       "demand_release_sru",	/*  3 */
  4   108 			       "demand_turn",	/*  4 */
  4   109 			       "demand_turn_ack",	/*  5 */
  4   110 			       "purge",		/*  6 */
  4   111 			       "recover",		/*  7 */
  4   112 			       "recover_ack",	/*  8 */
  4   113 			       "release_sru",	/*  9 */
  4   114 			       "resume",		/* 10 */
  4   115 			       "resume_ack",	/* 11 */
  4   116 			       "suspend",		/* 12 */
  4   117 			       "suspend_ack",	/* 13 */
  4   118 			       "terminate_abnormal",	/* 14 */
  4   119 			       "establishment",	/* 15 */
  4   120 			       "terminated",	/* 16 */
  4   121 			       "user_unassign",	/* 17 */
  4   122 			       "data input",	/* 18 */
  4   123 			       "data output");	/* 19 */
  4   124 
  4   125 /*	END INCLUDE FILE ... net_event_message.incl.pl1 */
       49 
       50 
       51 
       52 check:
       53      entry (TC_data_ptr, Code);
       54 
       55 	if Code ^= error_table_$io_no_permission
       56 	then return;
       57 
       58 	tc_data_ptr = TC_data_ptr;
       59 
       60 	string (tcdi.action_flags) = ""b;
       61 	tcdi.length = currentsize (tcdi);
       62 	tcdi.cant_restart = "1"b;
       63 	tcdi.info_string = "A terminal managed by video terminal control has hungup.";
       64 	tcdi.status_code = 0;
       65 	tcdi.tc_data_ptr = TC_data_ptr;
       66 	if tc_data.network_type = DSA_NETWORK_TYPE
       67 	then tcdi.tty_handle = tc_data.tty_handle;
       68 	else if tc_data.network_type = MOWSE_NETWORK_TYPE
       69 	then tcdi.mowse_terminal_iocb_ptr = tc_data.mowse_terminal_iocb_ptr;
       70 	else tcdi.devx = tc_data.devx;
       71 	call signal_ ("terminal_control_disconnection_", null (), addr (tcdi));
       72 	return;
       73      end tc_disconnect;
	SOURCE FILES USED IN THIS COMPILATION.

LINE      NUMBER  DATE MODIFIED     NAME			PATHNAME
             0    08/13/87  1323.9  tc_disconnect.pl1                 >special_ldd>install>MR12.1-1086>tc_disconnect.pl1
45           1    03/24/82  1347.2  condition_info_header.incl.pl1    >ldd>include>condition_info_header.incl.pl1
46           2    01/06/87  1357.0  tc_disconnect_info.incl.pl1       >ldd>include>tc_disconnect_info.incl.pl1
48           3    01/06/87  1357.0  tc_data_.incl.pl1                 >ldd>include>tc_data_.incl.pl1
49           4    08/06/87  0913.5  net_event_message.incl.pl1        >ldd>include>net_event_message.incl.pl1
	NAMES DECLARED IN THIS COMPILATION.

IDENTIFIER	     OFFSET    LOC STORAGE CLASS   DATA TYPE		ATTRIBUTES AND REFERENCES
								(* indicates a set context)

NAMES DECLARED BY DECLARE STATEMENT.
Code                                   parameter       fixed bin(35,0)          dcl 41 ref 52 55
DSA_NETWORK_TYPE                       constant        fixed bin(4,0)           initial unsigned dcl 4-35 ref 66
MOWSE_NETWORK_TYPE                     constant        fixed bin(4,0)           initial unsigned dcl 4-36 ref 68
TC_data_ptr                            parameter       pointer                  dcl 42 ref 52 58 65
action_flags              2     000100 automatic       structure                level 3 dcl 47 set ref 60*
addr                                                   builtin function         dcl 38 ref 71 71
cant_restart              2     000100 automatic       bit(1)                   level 4 packed unaligned dcl 47 set ref 62*
condition_info_header                  based           structure                level 1 dcl 1-6
currentsize                                            builtin function         dcl 38 ref 61
devx                      1            based           fixed bin(17,0)          level 2 in structure "tc_data" dcl 3-21 in procedure
                                                                                  "tc_disconnect" ref 70
devx                    110     000100 automatic       fixed bin(17,0)          level 2 in structure "tcdi" dcl 47 in procedure
                                                                                  "tc_disconnect" set ref 70*
error_table_$io_no_permission   000010 external static fixed bin(35,0)          dcl 35 ref 55
header                          000100 automatic       structure                level 2 dcl 47
info_string               3     000100 automatic       varying char(256)        level 3 dcl 47 set ref 63*
length                          000100 automatic       fixed bin(17,0)          level 3 dcl 47 set ref 61*
mowse_terminal_iocb_ptr
                          6            based           pointer                  level 2 in structure "tc_data" dcl 3-21 in procedure
                                                                                  "tc_disconnect" ref 68
mowse_terminal_iocb_ptr
                        112     000100 automatic       pointer                  level 2 in structure "tcdi" dcl 47 in procedure
                                                                                  "tc_disconnect" set ref 68*
network_type                           based           fixed bin(17,0)          level 2 dcl 3-21 ref 66 68
null                                                   builtin function         dcl 38 ref 71 71
signal_                         000012 constant        entry                    external dcl 43 ref 71
status_code             104     000100 automatic       fixed bin(35,0)          level 3 dcl 47 set ref 64*
string                                                 builtin function         dcl 38 set ref 60*
tc_data                                based           structure                level 1 dcl 3-21
tc_data_ptr             106     000100 automatic       pointer                  level 2 in structure "tcdi" dcl 47 in procedure
                                                                                  "tc_disconnect" set ref 65*
tc_data_ptr                     000214 automatic       pointer                  dcl 3-20 in procedure "tc_disconnect" set ref 58* 66
                                                                                  66 68 68 70
tc_disconnect_info                     based           structure                level 1 dcl 2-17
tcdi                            000100 automatic       structure                level 1 dcl 47 set ref 61 71 71
terminal_state                         based           structure                level 1 dcl 3-54
tty_handle              111     000100 automatic       fixed bin(35,0)          level 2 in structure "tcdi" dcl 47 in procedure
                                                                                  "tc_disconnect" set ref 66*
tty_handle                2            based           fixed bin(35,0)          level 2 in structure "tc_data" dcl 3-21 in procedure
                                                                                  "tc_disconnect" ref 66

NAMES DECLARED BY DECLARE STATEMENT AND NEVER REFERENCED.
DSA_ATTENTION_MSG                      internal static fixed bin(8,0)           initial unsigned dcl 4-83
DSA_DATA_ATTENTION_MSG                 internal static fixed bin(8,0)           initial unsigned dcl 4-84
DSA_DATA_INPUT_MSG                     internal static fixed bin(8,0)           initial unsigned dcl 4-100
DSA_DATA_OUTPUT_MSG                    internal static fixed bin(8,0)           initial unsigned dcl 4-101
DSA_DEMAND_RELEASE_SRU_MSG             internal static fixed bin(8,0)           initial unsigned dcl 4-85
DSA_DEMAND_TURN_ACK_MSG                internal static fixed bin(8,0)           initial unsigned dcl 4-87
DSA_DEMAND_TURN_MSG                    internal static fixed bin(8,0)           initial unsigned dcl 4-86
DSA_ESTABLISHMENT_MSG                  internal static fixed bin(8,0)           initial unsigned dcl 4-97
DSA_MSG_TYPE_TO_PNAME                  internal static char(20)                 initial array unaligned dcl 4-103
DSA_PURGE_MSG                          internal static fixed bin(8,0)           initial unsigned dcl 4-88
DSA_RECOVER_ACK_MSG                    internal static fixed bin(8,0)           initial unsigned dcl 4-90
DSA_RECOVER_MSG                        internal static fixed bin(8,0)           initial unsigned dcl 4-89
DSA_RELEASE_SRU_MSG                    internal static fixed bin(8,0)           initial unsigned dcl 4-91
DSA_RESUME_ACK_MSG                     internal static fixed bin(8,0)           initial unsigned dcl 4-93
DSA_RESUME_MSG                         internal static fixed bin(8,0)           initial unsigned dcl 4-92
DSA_SUSPEND_ACK_MSG                    internal static fixed bin(8,0)           initial unsigned dcl 4-95
DSA_SUSPEND_MSG                        internal static fixed bin(8,0)           initial unsigned dcl 4-94
DSA_TERMINATED_MSG                     internal static fixed bin(8,0)           initial unsigned dcl 4-98
DSA_TERM_ABNORMAL_MSG                  internal static fixed bin(8,0)           initial unsigned dcl 4-96
DSA_UNSPECIFIED_MSG                    internal static fixed bin(8,0)           initial unsigned dcl 4-82
DSA_USER_UNASSIGN_MSG                  internal static fixed bin(8,0)           initial unsigned dcl 4-99
MAX_DSA_EVENT_MSG_TYPE                 internal static fixed bin(17,0)          initial dcl 4-80
MAX_MCS_EVENT_MSG_TYPE                 internal static fixed bin(17,0)          initial dcl 4-46
MCS_DIALOUT_MSG                        internal static fixed bin(17,0)          initial dcl 4-54
MCS_DIALUP_MSG                         internal static fixed bin(17,0)          initial dcl 4-50
MCS_HANGUP_MSG                         internal static fixed bin(17,0)          initial dcl 4-52
MCS_LINE_STATUS_MSG                    internal static fixed bin(17,0)          initial dcl 4-62
MCS_MASKED_MSG                         internal static fixed bin(17,0)          initial dcl 4-64
MCS_MSG_TYPE_TO_PNAME                  internal static char(20)                 initial array unaligned dcl 4-67
MCS_NETWORK_TYPE                       internal static fixed bin(4,0)           initial unsigned dcl 4-34
MCS_QUIT_MSG                           internal static fixed bin(17,0)          initial dcl 4-56
MCS_READ_MSG                           internal static fixed bin(17,0)          initial dcl 4-58
MCS_UNSPECIFIED_MSG                    internal static fixed bin(17,0)          initial dcl 4-48
MCS_WRITE_MSG                          internal static fixed bin(17,0)          initial dcl 4-60
NETWORK_TYPE_VALUES                    internal static varying char(8)          initial array dcl 4-38
NET_EVENT_MESSAGE_VERSION_1            internal static bit(2)                   initial unaligned dcl 4-20
condition_info_header_ptr              automatic       pointer                  dcl 1-4
net_event_message                      based           structure                level 1 dcl 4-22
net_event_message_arg                  automatic       fixed bin(71,0)          dcl 4-19
state_async_same_window                defined         bit(1)                   array unaligned dcl 3-79
state_have_sent_protocol               defined         bit(1)                   array unaligned dcl 3-82
tc_break_array                         defined         bit(1)                   array unaligned dcl 3-52
tcdi_ptr                               automatic       pointer                  dcl 2-16
terminal_control_disconnection_ 000000 stack reference condition                dcl 2-25

NAMES DECLARED BY EXPLICIT CONTEXT.
check                           000047 constant        entry                    external dcl 52
tc_disconnect                   000035 constant        entry                    external dcl 31

THERE WERE NO NAMES DECLARED BY CONTEXT OR IMPLICATION.

STORAGE REQUIREMENTS FOR THIS PROGRAM.

	Object	Text	Link	Symbol	Defs	Static
Start          0       0       222         236     147         232
Length       476     147        14         224      53           0

BLOCK NAME	         STACK SIZE     TYPE		WHY NONQUICK/WHO SHARES STACK FRAME
tc_disconnect                       168 external procedure  is an external procedure.  

STORAGE FOR AUTOMATIC VARIABLES.

STACK FRAME                 LOC IDENTIFIER                  BLOCK NAME
tc_disconnect            000100 tcdi                        tc_disconnect
                         000214 tc_data_ptr                 tc_disconnect

THE FOLLOWING EXTERNAL OPERATORS ARE USED BY THIS PROGRAM.
call_ext_out_desc   return_mac          ext_entry

THE FOLLOWING EXTERNAL ENTRIES ARE CALLED BY THIS PROGRAM.
signal_

THE FOLLOWING EXTERNAL VARIABLES ARE USED BY THIS PROGRAM.
error_table_$io_no_permission




   LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC   
     31 000034        33 000042        52 000043        55 000054        58 000061        60 000064        61 000065
     62 000067        63 000071        64 000076        65 000077        66 000100        68 000107        70 000115
     71 000120        72 000146


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
