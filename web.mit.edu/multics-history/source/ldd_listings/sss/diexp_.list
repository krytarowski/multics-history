	COMPILATION LISTING OF SEGMENT diexp_
	Compiled by: Multics PL/I Compiler, Release 28d, of September 14, 1983
	Compiled at: Honeywell LCPD Phoenix, System M
	Compiled on: 10/03/83  1401.3 mst Mon
	    Options: optimize map

        1 /* ******************************************************
        2*   *                                                    *
        3*   *                                                    *
        4*   * Copyright (c) 1972 by Massachusetts Institute of   *
        5*   * Technology and Honeywell Information Systems, Inc. *
        6*   *                                                    *
        7*   *                                                    *
        8*   ****************************************************** */
        9 
       10 diexp_: procedure (base, exponent) returns (fixed binary (71));
       11 						/*     compute integer base ** integer exponent     */
       12 declare (base, exponent, h, i, j) fixed binary (17),
       13          f fixed binary (71),
       14          code_ entry (fixed binary);
       15 	i = base;
       16 	j = exponent;
       17 	f = 1;
       18 if i = 0 then test: do;
       19 	     if j > 0 then go to clear;
       20 	     call code_ (5 - sign (j));
       21 	     go to clear;
       22 	end test;
       23 	if j = 0 then go to finis;
       24 	if abs (i) = 1 then j = mod (j, 2);
       25 else if j < 0 then clear: return (0);
       26 loop:	h = divide (j, 2, 17, 0);
       27 	if h+h ^= j then f = f*i;
       28 if h = 0 then finis: return (f);
       29 	j = h;
       30 	i = i*i;
       31 	go to loop;
       32      end diexp_;
	SOURCE FILES USED IN THIS COMPILATION.

LINE      NUMBER  DATE MODIFIED     NAME			PATHNAME
             0    10/03/83  1004.9  diexp_.pl1                        >spec>on>pl128d>diexp_.pl1
	NAMES DECLARED IN THIS COMPILATION.

IDENTIFIER	     OFFSET    LOC STORAGE CLASS   DATA TYPE		ATTRIBUTES AND REFERENCES
								(* indicates a set context)

NAMES DECLARED BY DECLARE STATEMENT.
base                                   parameter       fixed bin(17,0)          dcl 12 ref 10 15
code_                           000010 constant        entry                    external dcl 12 ref 20
exponent                               parameter       fixed bin(17,0)          dcl 12 ref 10 16
f                               000104 automatic       fixed bin(71,0)          dcl 12 set ref 17* 27* 27 28
h                               000100 automatic       fixed bin(17,0)          dcl 12 set ref 26* 27 27 28 29
i                               000101 automatic       fixed bin(17,0)          dcl 12 set ref 15* 18 24 27 30* 30 30
j                               000102 automatic       fixed bin(17,0)          dcl 12 set ref 16* 19 20 23 24* 24 25 26 27 29*

NAMES DECLARED BY EXPLICIT CONTEXT.
clear                           000065 constant        label                    dcl 25 ref 19 21
diexp_                          000012 constant        entry                    external dcl 10
finis                           000105 constant        label                    dcl 28 ref 23
loop                            000071 constant        label                    dcl 26 ref 31
test                            000030 constant        label                    dcl 18

NAMES DECLARED BY CONTEXT OR IMPLICATION.
abs                                                    builtin function         ref 24
divide                                                 builtin function         ref 26
mod                                                    builtin function         ref 24
sign                                                   builtin function         ref 20

STORAGE REQUIREMENTS FOR THIS PROGRAM.

	Object	Text	Link	Symbol	Defs	Static
Start          0       0       150         162     117         160
Length       322     117        12         124      30           0

BLOCK NAME	         STACK SIZE     TYPE		WHY NONQUICK/WHO SHARES STACK FRAME
diexp_                               76 external procedure  is an external procedure.  

STORAGE FOR AUTOMATIC VARIABLES.

STACK FRAME                 LOC IDENTIFIER                  BLOCK NAME
diexp_                   000100 h                           diexp_
                         000101 i                           diexp_
                         000102 j                           diexp_
                         000104 f                           diexp_

THE FOLLOWING EXTERNAL OPERATORS ARE USED BY THIS PROGRAM.
call_ext_out        return              sign                mpfx2               mod_fx1             ext_entry

THE FOLLOWING EXTERNAL ENTRIES ARE CALLED BY THIS PROGRAM.
code_

NO EXTERNAL VARIABLES ARE USED BY THIS PROGRAM.




   LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC   
     10 000006        15 000017        16 000022        17 000024        18 000026        19 000030        20 000032
     21 000045        23 000046        24 000050        25 000063        26 000071        27 000074        28 000103
     29 000111        30 000112        31 000115


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
