	COMPILATION LISTING OF SEGMENT erf_
	Compiled by: Multics PL/I Compiler, Release 28d, of September 14, 1983
	Compiled at: Honeywell LCPD Phoenix, System M
	Compiled on: 10/03/83  1402.7 mst Mon
	    Options: optimize map

        1 /* ******************************************************
        2*   *                                                    *
        3*   *                                                    *
        4*   * Copyright (c) 1972 by Massachusetts Institute of   *
        5*   * Technology and Honeywell Information Systems, Inc. *
        6*   *                                                    *
        7*   *                                                    *
        8*   ****************************************************** */
        9 
       10 /* calls to round_ removed 07/16/73 by A. Downing */
       11 erf_: procedure (number) returns (float binary (27));
       12 
       13 /*    compute the error (or complementary error) function of a single-precision floating-point number    */
       14 declare (number, s) float binary (27),
       15         (f, n, p, q, r) float binary (63),
       16          exerfc_ entry (float binary (27)) returns (float binary (27)),
       17 	(abs, exp, round) builtin;
       18 	r = 0.0e0;
       19 erfs:	n = number;
       20 	f = abs (n);
       21 if f < 0.5e0 then small: do;
       22 	     q = 1.128379167095512574e0 * n;
       23 	     if f < 5.e-5 then go to comp;
       24 	     p = f*f;
       25 	     q = ((((((( - 0.1322751322751322751e-4 *p + 0.1068376068376068376e-3)*p - 0.7575757575757575758e-3)*p
       26 	     + 0.4629629629629629630e-2)*p - 0.2380952380952380952e-1)*p + 0.1e0)*p
       27 	     - 0.3333333333333333333e0)*p + 1.e0)*q;
       28 comp:	     if r ^= 0.0e0 then q = 1.e0 - q;
       29 	     go to finis;
       30 	end small;
       31 if f >= 2.5e0 then large: do;
       32 	     s = f;
       33 	     if f >= 9.30630096e0 then q = 0.0e0;
       34 	     else q = exp (-f*f) * exerfc_ (s);
       35 end large; else middle: do;
       36 if f < 1.5e0 then lower: do;
       37 		p = f - 1.e0;
       38 		q = (((((((( 0.4854967260442840621e-5 *p - 0.2100986406780402429e-4)*p - 0.1658718964594168655e-4)*p
       39 		+ 0.1772942579639506779e-3)*p - 0.7579366392581423493e-4)*p - 0.1086769072243678816e-2)*p
       40 		+ 0.1670704693150730120e-2)*p + 0.4233533251576121955e-2)*p - 0.1343051928086217999e-1)*p;
       41 		q = ((((((( q - 0.4087549346349359129e-2)*p + 0.6131324019524038693e-1)*p - 0.6131324019524038693e-1)*p
       42 		- 0.1226264803904807739e0)*p + 0.3678794411714423216e0)*p - 0.3678794411714423216e0)*p
       43 		+ 0.1394027926403309882e0) * 1.128379167095512574e0;
       44 end lower; else upper: do;
       45 		p = f - 2.e0;
       46 		q = (((((((( 0.6206354808105919169e-6 *p - 0.8484562971386512658e-6)*p - 0.3501612055936534974e-5)*p
       47 		+ 0.1439484990506010484e-4)*p - 0.4634950036778170257e-5)*p - 0.9195995379200109923e-4)*p
       48 		+ 0.2329025685851383420e-3)*p + 0.4441623187303262417e-4)*p - 0.1410013470005726578e-2)*p;
       49 		q = ((((((((q + 0.2994461596094635826e-2)*p - 0.4070141975274262287e-3)*p - 0.1159990462953164752e-1)*p
       50 		+ 0.3052606481455696716e-1)*p - 0.4273649074037975402e-1)*p + 0.3663127777746836059e-1)*p
       51 		- 0.1831563888873418029e-1)*p + 0.4145534690336333682e-2) * 1.128379167095512574e0;
       52 	end upper; end middle;
       53 	if r = 0.0e0 then q = 1.e0 - q;
       54 	if n < 0.0e0 then q = r - q;
       55 finis:		s = round (q, 28);
       56 	return (s);
       57 erfc_: entry (number) returns (float binary (27));
       58 	r = 2.e0;
       59 	go to erfs;
       60      end erf_;
	SOURCE FILES USED IN THIS COMPILATION.

LINE      NUMBER  DATE MODIFIED     NAME			PATHNAME
             0    10/03/83  1005.0  erf_.pl1                          >spec>on>pl128d>erf_.pl1
	NAMES DECLARED IN THIS COMPILATION.

IDENTIFIER	     OFFSET    LOC STORAGE CLASS   DATA TYPE		ATTRIBUTES AND REFERENCES
								(* indicates a set context)

NAMES DECLARED BY DECLARE STATEMENT.
abs                                                    builtin function         dcl 14 ref 20
exerfc_                         000010 constant        entry                    external dcl 14 ref 34
exp                                                    builtin function         dcl 14 ref 34
f                               000102 automatic       float bin(63)            dcl 14 set ref 20* 21 23 24 24 31 32 33 34 34 36 37
                                                                                  45
n                               000104 automatic       float bin(63)            dcl 14 set ref 19* 20 22 54
number                                 parameter       float bin(27)            dcl 14 ref 11 19 57
p                               000106 automatic       float bin(63)            dcl 14 set ref 24* 25 25 25 25 25 25 25 37* 38 38 38
                                                                                  38 38 38 38 38 38 41 41 41 41 41 41 45* 46 46 46
                                                                                  46 46 46 46 46 46 49 49 49 49 49 49 49
q                               000110 automatic       float bin(63)            dcl 14 set ref 22* 25* 25 28* 28 33* 34* 38* 41* 41
                                                                                  46* 49* 49 53* 53 54* 54 55
r                               000112 automatic       float bin(63)            dcl 14 set ref 18* 28 53 54 58*
round                                                  builtin function         dcl 14 ref 55
s                               000100 automatic       float bin(27)            dcl 14 set ref 32* 34* 55* 56

NAMES DECLARED BY EXPLICIT CONTEXT.
comp                            000203 constant        label                    dcl 28 ref 23
erf_                            000132 constant        entry                    external dcl 11
erfc_                           000405 constant        entry                    external dcl 57
erfs                            000141 constant        label                    dcl 19 ref 59
finis                           000374 constant        label                    dcl 55 ref 29
large                           000214 constant        label                    dcl 31
lower                           000247 constant        label                    dcl 36
middle                          000244 constant        label                    dcl 35
small                           000152 constant        label                    dcl 21
upper                           000314 constant        label                    dcl 44

THERE WERE NO NAMES DECLARED BY CONTEXT OR IMPLICATION.

STORAGE REQUIREMENTS FOR THIS PROGRAM.

	Object	Text	Link	Symbol	Defs	Static
Start          0       0       452         464     415         462
Length       624     415        12         123      35           0

BLOCK NAME	         STACK SIZE     TYPE		WHY NONQUICK/WHO SHARES STACK FRAME
erf_                                116 external procedure  is an external procedure.  

STORAGE FOR AUTOMATIC VARIABLES.

STACK FRAME                 LOC IDENTIFIER                  BLOCK NAME
erf_                     000100 s                           erf_
                         000102 f                           erf_
                         000104 n                           erf_
                         000106 p                           erf_
                         000110 q                           erf_
                         000112 r                           erf_

THE FOLLOWING EXTERNAL OPERATORS ARE USED BY THIS PROGRAM.
call_ext_out        return              ext_entry           round_fl            dexp

THE FOLLOWING EXTERNAL ENTRIES ARE CALLED BY THIS PROGRAM.
exerfc_

NO EXTERNAL VARIABLES ARE USED BY THIS PROGRAM.




   LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC   
     11 000126        18 000137        19 000141        20 000144        21 000147        22 000152        23 000155
     24 000160        25 000163        28 000203        29 000210        31 000211        32 000214        33 000216
     34 000223        35 000243        36 000244        37 000247        38 000252        41 000274        44 000313
     45 000314        46 000317        49 000341        53 000362        54 000367        55 000374        56 000400
     57 000403        58 000412        59 000414


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
