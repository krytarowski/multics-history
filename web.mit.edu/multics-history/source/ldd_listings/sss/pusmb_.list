	COMPILATION LISTING OF SEGMENT pusmb_
	Compiled by: Multics PL/I Compiler, Release 31a, of October 12, 1988
	Compiled at: Honeywell Bull, Phoenix AZ, SysM
	Compiled on: 10/17/88  0943.9 mst Mon
	    Options: optimize map

        1 /****^  ***********************************************************
        2*        *                                                         *
        3*        * Copyright, (C) Honeywell Bull Inc., 1988                *
        4*        *                                                         *
        5*        * Copyright, (C) Honeywell Information Systems Inc., 1982 *
        6*        *                                                         *
        7*        * Copyright (c) 1972 by Massachusetts Institute of        *
        8*        * Technology and Honeywell Information Systems, Inc.      *
        9*        *                                                         *
       10*        *********************************************************** */
       11 
       12 
       13 pusmb_:
       14 	procedure( pc, word, relwrd ) ;
       15 
       16 /* Last modified by NA on June 24, 1970 at 1022 */
       17   
       18 	/* makes calls to stack the symbol words and stack the
       19*	 associated relocation bits in the scratch segment */
       20 
       21 declare	(pc, word, relwrd) fixed bin (26);
       22 declare	(lbits, rbits, itemp, nl, nr, i, ival ) fixed bin ( 17 ) aligned ;
       23 
  1     1 /* Begin include file objnfo.incl.pl1.
  1     2*   Parameters saved for object map.
  1     3*   Last modified on 05/12/72 at 01:10:27 by R F Mabee. */
  1     4 
  1     5  
  1     6 /****^  HISTORY COMMENTS:
  1     7*  1) change(86-10-01,JRGray), approve(86-10-01,MCR7507),
  1     8*     audit(86-10-27,RWaters), install(86-11-12,MR12.0-1202):
  1     9*     Modified to add definition count used to join blocks to the definition
  1    10*     section.
  1    11*                                                   END HISTORY COMMENTS */
  1    12 
  1    13 declare	1 eb_data_$objnfo external static aligned,
  1    14 	  2 (itxpc, ilkpc, istpc, idfpc, itxcnt, ilkcnt, istcnt, idfcnt) fixed bin (26) aligned,
  1    15 	  2 (new_text_offset, new_definition_offset, new_link_offset, new_static_offset, new_symbol_offset) fixed bin (26) aligned,
  1    16 	  2 (new_text_length, new_definition_length, new_link_length, new_static_length, new_symbol_length) fixed bin (26) aligned;
  1    17 
  1    18 /* End of include file objnfo.incl.pl1. */
       24 
       25 
       26 declare	object_$objst ext entry (fixed bin (26), fixed bin (26)),
       27 	object_$wrbst ext entry (fixed bin (26), fixed bin (26)),
       28 	object_$getbst ext entry (fixed bin, fixed bin, fixed bin) ;
       29 
       30 	call object_$objst( pc, word ) ;	/* write the symbol into the scratch segment */
       31 
       32 	call object_$wrbst( pc, relwrd ) ;	/* insert the relocation bits into the proper place in the scratch segment */ 
       33 
       34 
       35 	return ;
       36 
       37 
       38 
       39 
       40 symcnt:	entry( ival ) ;	/* entry to count the number of relocation bits for the symbol portion */
       41 
       42 	ival = 0 ;
       43 
       44 	itemp = istpc - 1 ;
       45 
       46 label_1000:
       47 	do i = 0 to itemp ;
       48 
       49 		call object_$getbst( i, lbits, rbits ) ;
       50 
       51 		nl = 1 ;
       52 
       53 		nr = 1 ;
       54 
       55 		if lbits ^= 0 then nl = 5 ;
       56 
       57 		if rbits ^= 0 then nr = 5 ;
       58 
       59 		ival = nl + nr + ival ;
       60 
       61 end label_1000 ;
       62 
       63 
       64 	istcnt = ival ;
       65 
       66 end pusmb_ ;
	SOURCE FILES USED IN THIS COMPILATION.

LINE      NUMBER  DATE MODIFIED     NAME			PATHNAME
             0    10/17/88  0938.3  pusmb_.pl1                        >spec>install>1170>pusmb_.pl1
24           1    11/12/86  1103.0  objnfo.incl.pl1                   >ldd>include>objnfo.incl.pl1
	NAMES DECLARED IN THIS COMPILATION.

IDENTIFIER	     OFFSET    LOC STORAGE CLASS   DATA TYPE		ATTRIBUTES AND REFERENCES
								(* indicates a set context)

NAMES DECLARED BY DECLARE STATEMENT.
eb_data_$objnfo                 000010 external static structure                level 1 dcl 1-13
i                               000105 automatic       fixed bin(17,0)          dcl 22 set ref 46* 49*
istcnt                    6     000010 external static fixed bin(26,0)          level 2 dcl 1-13 set ref 64*
istpc                     2     000010 external static fixed bin(26,0)          level 2 dcl 1-13 ref 44
itemp                           000102 automatic       fixed bin(17,0)          dcl 22 set ref 44* 46
ival                                   parameter       fixed bin(17,0)          dcl 22 set ref 40 42* 59* 59 64
lbits                           000100 automatic       fixed bin(17,0)          dcl 22 set ref 49* 55
nl                              000103 automatic       fixed bin(17,0)          dcl 22 set ref 51* 55* 59
nr                              000104 automatic       fixed bin(17,0)          dcl 22 set ref 53* 57* 59
object_$getbst                  000016 constant        entry                    external dcl 26 ref 49
object_$objst                   000012 constant        entry                    external dcl 26 ref 30
object_$wrbst                   000014 constant        entry                    external dcl 26 ref 32
pc                                     parameter       fixed bin(26,0)          dcl 21 set ref 13 30* 32*
rbits                           000101 automatic       fixed bin(17,0)          dcl 22 set ref 49* 57
relwrd                                 parameter       fixed bin(26,0)          dcl 21 set ref 13 32*
word                                   parameter       fixed bin(26,0)          dcl 21 set ref 13 30*

NAMES DECLARED BY EXPLICIT CONTEXT.
label_1000                      000056 constant        label                    dcl 46
pusmb_                          000006 constant        entry                    external dcl 13
symcnt                          000042 constant        entry                    external dcl 40

THERE WERE NO NAMES DECLARED BY CONTEXT OR IMPLICATION.

STORAGE REQUIREMENTS FOR THIS PROGRAM.

	Object	Text	Link	Symbol	Defs	Static
Start          0       0       206         226     125         216
Length       406     125        20         144      61           0

BLOCK NAME	         STACK SIZE     TYPE		WHY NONQUICK/WHO SHARES STACK FRAME
pusmb_                               86 external procedure  is an external procedure.  

STORAGE FOR AUTOMATIC VARIABLES.

STACK FRAME                 LOC IDENTIFIER                  BLOCK NAME
pusmb_                   000100 lbits                       pusmb_
                         000101 rbits                       pusmb_
                         000102 itemp                       pusmb_
                         000103 nl                          pusmb_
                         000104 nr                          pusmb_
                         000105 i                           pusmb_

THE FOLLOWING EXTERNAL OPERATORS ARE USED BY THIS PROGRAM.
call_ext_out        return_mac          ext_entry

THE FOLLOWING EXTERNAL ENTRIES ARE CALLED BY THIS PROGRAM.
object_$getbst                object_$objst                 object_$wrbst

THE FOLLOWING EXTERNAL VARIABLES ARE USED BY THIS PROGRAM.
eb_data_$objnfo




   LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC   
     13 000002        30 000013        32 000024        35 000036        40 000037        42 000047        44 000051
     46 000056        49 000063        51 000076        53 000100        55 000101        57 000105        59 000111
     61 000115        64 000117        66 000124


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
