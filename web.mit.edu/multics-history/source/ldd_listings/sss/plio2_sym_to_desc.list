	COMPILATION LISTING OF SEGMENT plio2_sym_to_desc
	Compiled by: Multics PL/I Compiler, Release 28d, of September 14, 1983
	Compiled at: Honeywell LCPD Phoenix, System M
	Compiled on: 10/03/83  1424.7 mst Mon
	    Options: optimize map

        1 /* ******************************************************
        2*   *                                                    *
        3*   *                                                    *
        4*   * Copyright (c) 1972 by Massachusetts Institute of   *
        5*   * Technology and Honeywell Information Systems, Inc. *
        6*   *                                                    *
        7*   *                                                    *
        8*   ****************************************************** */
        9 
       10 plio2_sym_to_desc:proc(sp,l1p,psp,new_sfp) returns(bit(36) aligned) options(support);
       11 
       12 /*	Modified:	4 April 1978 by RAB to partially fix 1720 */
       13 /*	Modified: 1 May 1978 by PCK to implement unsigned binary */
       14 
       15 dcl	based_bit36 bit (36) aligned based;
       16 	dcl (sp,l1p,psp,new_sfp) ptr;
       17 	dcl (sfp,tp,tbp,sym_p,ref_p) ptr;
       18 	dcl (bit,fixed,null,addrel,substr,addr) builtin;
       19 	dcl ( i,icode ) fixed bin(15);
       20 	dcl d bit(36) aligned;
       21 	dcl old_type fixed bin(12);
       22 	dcl size fixed bin(35);
       23 	dcl old_symbol based bit(12) aligned;
       24 dcl	data_type fixed bin (6);
       25 
       26 	dcl plio2_signal_$s_r_ ext entry(ptr,char(*),char(*),fixed bin(15));
       27 	dcl stu_$decode_runtime_value ext entry(fixed bin(35),ptr,ptr,ptr,ptr,ptr,fixed bin(15)) returns(fixed bin(35));
       28 dcl	stu_$get_implicit_qualifier entry(ptr,ptr,ptr,ptr,ptr) returns(ptr);
       29 
  1     1 dcl	1 frame		aligned based,
  1     2 	2 pointers(0:7)	ptr,
  1     3 	2 back		ptr,
  1     4 	2 next		ptr,
  1     5 	2 return		ptr,
  1     6 	2 entry		ptr,
  1     7 	2 operator	ptr,
  1     8 	2 argptr		ptr,
  1     9 	2 skip1(2)	fixed bin,
  1    10 	2 on_unit_info(2)	bit(18) unaligned,
  1    11 	2 translator_id	bit(18) unaligned,
  1    12 	2 operator_return	bit(18) unaligned,
  1    13 	2 display		ptr,
  1    14 	2 skip2(2)	fixed bin,
  1    15 	2 linkage		ptr;
       30 
       31 /*  */
  2     1 /*	BEGIN INCLUDE FILE ... runtime_symbol.incl.pl1 ... Modified 07/79 */
  2     2 
  2     3 dcl	1 runtime_symbol	aligned based,
  2     4 	2 flag		unal bit(1),	/* always "1"b for Version II */
  2     5 	2 use_digit	unal bit(1),	/* if "1"b and units are half words units are really digits */
  2     6 	2 array_units	unal bit(2),
  2     7 	2 units		unal bit(2),	/* addressing units */
  2     8 	2 type		unal bit(6),	/* data type */
  2     9 	2 level		unal bit(6),	/* structure level */
  2    10 	2 ndims		unal bit(6),	/* number of dimensions */
  2    11 	2 bits		unal,
  2    12 	  3 aligned	bit(1),
  2    13 	  3 packed	bit(1),
  2    14 	  3 simple	bit(1),
  2    15 	2 skip		unal bit(1),
  2    16 	2 scale		unal bit(8),	/* arithmetic scale factor */
  2    17 	2 name		unal bit(18),	/* rel ptr to acc name */
  2    18 	2 brother		unal bit(18),	/* rel ptr to brother entry */
  2    19 	2 father		unal bit(18),	/* rel ptr to father entry */
  2    20 	2 son		unal bit(18),	/* rel ptr to son entry */
  2    21 	2 address		unal,
  2    22 	  3 location	bit(18),		/* location in storage class */
  2    23 	  3 class		bit(4),		/* storage class */
  2    24 	  3 next		bit(14),		/* rel ptr to next of same class */
  2    25 	2 size		fixed bin(35),	/* encoded string|arith size */
  2    26 	2 offset		fixed bin(35),	/* encoded offset from address */
  2    27 	2 virtual_org	fixed bin(35),
  2    28 	2 bounds(1),
  2    29 	  3 lower		fixed bin(35),	/* encoded lower bound */
  2    30 	  3 upper		fixed bin(35),	/* encoded upper bound */
  2    31 	  3 multiplier	fixed bin(35);	/* encoded multiplier */
  2    32 
  2    33 dcl	1 runtime_bound	based,
  2    34 	2 lower		fixed bin(35),
  2    35 	2 upper		fixed bin(35),
  2    36 	2 multiplier	fixed bin(35);
  2    37 
  2    38 dcl	1 runtime_block	aligned based,
  2    39 	2 flag		unal bit(1),	/* always "1"b for Version II */
  2    40 	2 quick		unal bit(1),	/* "1"b if quick block */
  2    41 	2 fortran		unal bit(1),	/* "1"b if fortran program */
  2    42 	2 standard	unal bit(1),	/* "1"b if program has std obj segment */
  2    43 	2 owner_flag	unal bit(1),	/* "1"b if block has valid owner field */
  2    44 	2 skip		unal bit(1),
  2    45 	2 type		unal bit(6),	/* = 0 for a block node */
  2    46 	2 number		unal bit(6),	/* begin block number */
  2    47 	2 start		unal bit(18),	/* rel ptr to start of symbols */
  2    48 	2 name		unal bit(18),	/* rel ptr to name of proc */
  2    49 	2 brother		unal bit(18),	/* rel ptr to brother block */
  2    50 	2 father		unal bit(18),	/* rel ptr to father block */
  2    51 	2 son		unal bit(18),	/* rel ptr to son block */
  2    52 	2 map		unal,
  2    53 	  3 first		bit(18),		/* rel ptr to first word of map */
  2    54 	  3 last		bit(18),		/* rel ptr to last word of map */
  2    55 	2 entry_info	unal bit(18),	/* info about entry of quick block */
  2    56 	2 header		unal bit(18),	/* rel ptr to symbol header */
  2    57 	2 chain(4)	unal bit(18),	/* chain(i) is rel ptr to first symbol
  2    58*					   on start list with length >= 2**i */
  2    59 	2 token(0:5)	unal bit(18),	/* token(i) is rel ptr to first token
  2    60*					   on list with length >= 2 ** i */
  2    61 	2 owner		unal bit(18);	/* rel ptr to owner block */
  2    62 
  2    63 dcl	1 runtime_token	aligned based,
  2    64 	2 next		unal bit(18),	/* rel ptr to next token */
  2    65 	2 dcl		unal bit(18),	/* rel ptr to first dcl of this token */
  2    66 	2 name,				/* ACC */
  2    67 	  3 size		unal unsigned fixed bin (9), /* number of chars in token */
  2    68 	  3 string	unal char(n refer(runtime_token.size));
  2    69 
  2    70 dcl	1 encoded_value	aligned based,
  2    71 	2 flag		bit (2) unal,
  2    72 	2 code		bit (4) unal,
  2    73 	2 n1		bit (6) unal,
  2    74 	2 n2		bit (6) unal,
  2    75 	2 n3		bit (18) unal;
  2    76 
  2    77 /*	END INCLUDE FILE ... runtime_symbol.incl.pl1 */
       32 
  3     1 dcl	1 symbol_node	aligned based,
  3     2 	2 type		unal bit(12),	/* data type */
  3     3 	2 level		unal bit(6),	/* structure level */
  3     4 	2 ndims		unal bit(6),	/* number of dimensions */
  3     5 	2 bits		unal,
  3     6 	  3 aligned	bit(1),
  3     7 	  3 packed	bit(1),
  3     8 	  3 simple	bit(1),
  3     9 	  3 decimal	bit(1),
  3    10 	2 scale		unal bit(8),	/* arithmetic scale factor */
  3    11 	2 name		unal bit(18),	/* rel ptr to acc name */
  3    12 	2 brother		unal bit(18),	/* rel ptr to brother entry */
  3    13 	2 father		unal bit(18),	/* rel ptr to father entry */
  3    14 	2 son		unal bit(18),	/* rel ptr to son entry */
  3    15 	2 address		unal,
  3    16 	  3 offset	bit(18),		/* offset in storage class */
  3    17 	  3 class		bit(4),		/* storage class */
  3    18 	  3 next		bit(14),		/* rel ptr to next of same class */
  3    19 	2 size		fixed bin(35),	/* encoded string|arith size */
  3    20 	2 word_offset	fixed bin(35),	/* encoded offset from address */
  3    21 	2 bit_offset	fixed bin(35),
  3    22 	2 virtual_org	fixed bin(35),
  3    23 	2 bounds(1),
  3    24 	  3 lower		fixed bin(35),	/* encoded lower bound */
  3    25 	  3 upper		fixed bin(35),	/* encoded upper bound */
  3    26 	  3 multiplier	fixed bin(35);	/* encoded multiplier */
  3    27 
  3    28 dcl	1 sym_bound	based,
  3    29 	2 lower		fixed bin(35),
  3    30 	2 upper		fixed bin(35),
  3    31 	2 multiplier	fixed bin(35);
  3    32 
  3    33 dcl	1 symbol_block	aligned based,
  3    34 	2 type		unal bit(12),	/* = 0 for a block node */
  3    35 	2 number		unal bit(6),	/* begin block number */
  3    36 	2 start		unal bit(18),	/* rel ptr to start of symbols */
  3    37 	2 name		unal bit(18),	/* rel ptr to name of proc */
  3    38 	2 brother		unal bit(18),	/* rel ptr to brother block */
  3    39 	2 father		unal bit(18),	/* rel ptr to father block */
  3    40 	2 son		unal bit(18),	/* rel ptr to son block */
  3    41 	2 map		unal,
  3    42 	  3 first		bit(18),		/* rel ptr to first word of map */
  3    43 	  3 last		bit(18),		/* rel ptr to last word of map */
  3    44 	2 bits		unal bit(18),
  3    45 	2 header		unal bit(18),	/* rel ptr to symbol header */
  3    46 	2 chain(4)	unal bit(18),	/* chain(i) is rel ptr to first symbol
  3    47*					   on start list with length >= 2**i */
  3    48 	2 class_list(0:15)  unal bit(18);	/* rel ptrs to first symbol of given
  3    49*					   storage class */
       33 
  4     1 /* BEGIN INCLUDE FILE ... plio2_ps.incl.pl1 */
  4     2 /* Stream I/O data block used by PL/I I/O runtime routines.
  4     3*
  4     4*   Modified: 31 January 1978 by RAB to change plio2_data_$fsb_thread to plio2_data_fsb_thread_
  4     5**/
  4     6 /* format: style3,idind30 */
  4     7 
  4     8 /* based */
  4     9 
  4    10 declare	1 ps			aligned based (psp),/* items set NORMALLY by compiled procedures */
  4    11 	  2 stack_frame_p		ptr,		/* items set in block prologue */
  4    12 	  2 ST_top_p		ptr,
  4    13 	  2 ST_block_p		ptr,
  4    14 	  2 format_area_p		ptr,
  4    15 	  2 ss_list_p		ptr,
  4    16 	  2 ab_return,				/* items set in prep call */
  4    17 	    3 abret		(3) ptr,
  4    18 	  2 source_p		ptr,		/* addr(fakefsb) for string option,
  4    19*						   addr(file) for explicit file option */
  4    20 	  2 special_list_p		ptr,		/* addr(OKlist) for get data, addr(format_list) for edit */
  4    21 	  2 copy_file_p		ptr,
  4    22 	  2 job			aligned,
  4    23 	    3 explicit_file		bit (1) unal,
  4    24 	    3 string		bit (1) unal,
  4    25 	    3 varying_string	bit (1) unal,
  4    26 	    3 data		bit (1) unal,
  4    27 	    3 edit		bit (1) unal,
  4    28 	    3 list		bit (1) unal,
  4    29 	    3 get			bit (1) unal,
  4    30 	    3 put			bit (1) unal,
  4    31 	    3 page		bit (1) unal,
  4    32 	    3 line		bit (1) unal,
  4    33 	    3 skip		bit (1) unal,
  4    34 	    3 copy		bit (1) unal,
  4    35 	    3 p1p2		bit (1) unal,
  4    36 	    3 bit_string		bit (1) unal,	/* for environment(stringvalue) */
  4    37 	    3 char_string		bit (1) unal,
  4    38 	    3 read		bit (1) unal,
  4    39 	    3 write		bit (1) unal,
  4    40 	    3 rewrite		bit (1) unal,
  4    41 	    3 delete		bit (1) unal,
  4    42 	    3 locate		bit (1) unal,
  4    43 	    3 key			bit (1) unal,
  4    44 	    3 keyto		bit (1) unal,
  4    45 	    3 keyfrom		bit (1) unal,
  4    46 	    3 set			bit (1) unal,
  4    47 	    3 into		bit (1) unal,
  4    48 	    3 ignore		bit (1) unal,
  4    49 	    3 from		bit (1) unal,
  4    50 	    3 version		bit (6) unal,
  4    51 	    3 not_byte_buffer	bit (1) unal,
  4    52 	    3 pad1		bit (1) unal,
  4    53 	    3 packed_ptr		bit (1) unal,
  4    54 	  2 number		fixed bin (15),
  4    55 	  2 value_p		ptr,		/* items set NORMALLY by compiled procedures per transmission */
  4    56 	  2 descriptor		bit (36) aligned,
  4    57 	  2 length		fixed bin (15),	/* may be swallowed into descriptor */
  4    58 	  2 top_half		bit (18) unal,
  4    59 	  2 offset		bit (18) unal,
  4    60 	  2 prep			fixed bin (15),	/* items treated ABNORMALLY, written by user and PLIO */
  4    61 	  2 new_format		fixed bin (15),
  4    62 	  2 switch		aligned,		/* items used by PLIO and not touched by compiled procedures */
  4    63 	    3 first_field		bit (1) unal,
  4    64 	    3 file		bit (1) unal,
  4    65 	    3 transmit_error	bit (1) unal,
  4    66 	    3 semi_sep		bit (1) unal,
  4    67 	    3 pad2		bit (32) unal,
  4    68 	  2 file_p		ptr,
  4    69 	  2 fsbp			ptr,
  4    70 	  2 auxp			ptr,		/* used as addr(ldidata) for GETs */
  4    71 	  2 fabp			ptr,
  4    72 	  2 fab2p			ptr,
  4    73 	  2 vp			ptr,
  4    74 	  2 descr			bit (36) aligned,
  4    75 	  2 start_copy		fixed bin (15),
  4    76 	  2 quick_stream_storage,
  4    77 	    3 a_stored		fixed bin (35),
  4    78 	    3 q_stored		fixed bin (35);
  4    79 
  4    80 /* external static */
  4    81 
  4    82 declare	(
  4    83 	plio2_data_$pspstat,
  4    84 	plio2_data_$fsbpstat,
  4    85 	plio2_data_$badfsbp,
  4    86 	plio2_data_$fabpstat,
  4    87 	plio2_data_$fab2pstat,
  4    88 	plio2_data_$pliostringfsbp
  4    89 	)			ptr external static;
  4    90 
  4    91 dcl	plio2_data_fsb_thread_	ptr ext static initial (null);
  4    92 						/* *system var */
  4    93 
  4    94 declare	(
  4    95 	plio2_data_$badjob		bit (36) aligned,
  4    96 	plio2_data_$undef_file_sw	bit (1) aligned
  4    97 	)			external static;
  4    98 
  4    99 /* END INCLUDE FILE ... plio2_ps.incl.pl1 */
       34 
  5     1 dcl (	s_fixed_real_desc		init( 1),
  5     2 	d_fixed_real_desc		init( 2),
  5     3 	s_float_real_desc		init( 3),
  5     4 	d_float_real_desc		init( 4),
  5     5 	s_fixed_cplx_desc		init( 5),
  5     6 	d_fixed_cplx_desc		init( 6),
  5     7 	s_float_cplx_desc		init( 7),
  5     8 	d_float_cplx_desc		init( 8),
  5     9 
  5    10 	D_fixed_real_desc		init( 9),
  5    11 	D_float_real_desc		init(10),
  5    12 	D_fixed_cplx_desc		init(11),
  5    13 	D_float_cplx_desc		init(12),
  5    14 
  5    15 	pointer_desc		init(13),
  5    16 	offset_desc		init(14),
  5    17 	label_desc		init(15),
  5    18 	entry_desc		init(16),
  5    19 	structure_desc		init(17),
  5    20 	area_desc			init(18),
  5    21 
  5    22 	bit_desc			init(19),
  5    23 	v_bit_desc		init(20),
  5    24 
  5    25 	char_desc			init(21),
  5    26 	v_char_desc		init(22),
  5    27 
  5    28 	file_desc			init(23)
  5    29 					) fixed bin int static options(constant);
       35 
       36 /*  */
       37 
       38 start:
       39 	sym_p=sp;
       40 	size=sym_p->runtime_symbol.size;
       41 	if size < 0 then
       42 		do;
       43 		sfp=new_sfp;
       44 		if sfp=null then
       45 			do;
       46 			sfp=ps.stack_frame_p;
       47 			tp=addrel(l1p,l1p->runtime_symbol.father);
       48 			tbp=ps.ST_block_p;
       49 
       50 loop:
       51 			if tbp ^= tp then
       52 				do;
       53 				if ^tbp->runtime_block.quick then sfp=sfp->frame.display;
       54 				tbp=addrel(tbp,tbp->runtime_symbol.father);
       55 				goto loop;
       56 				end;
       57 
       58 			end;	/* sfp is symbol's stack_frame_ptr */
       59 
       60 		if sym_p -> runtime_symbol.class = "0011"b	/* NOTE: if stu_ interface changes, this must change */
       61 		     then ref_p = stu_$get_implicit_qualifier(tbp,sym_p,sfp,null,null);
       62 		     else ref_p = null;
       63 
       64 		size=stu_$decode_runtime_value(size,tbp,sfp,null,null,ref_p,icode);
       65 			/* NB: uses  ST_block (tbp) and Stack_Frame (sfp) of
       66*			   proper block, not necessarily of current block. */
       67 		if icode^=0 then call plio2_signal_$s_r_(psp,"ERROR","s_to_d",239);
       68 		end;
       69 
       70 test:
       71 	d="0"b;
       72 	if sym_p->runtime_symbol.flag then goto new_desc;
       73 	old_type=fixed(sym_p->old_symbol,12);
       74 		if old_type>524 then old_type=old_type-6;
       75 		if old_type<519
       76 		&  old_type>16 then old_type=old_type-16;
       77 
       78 		substr(d,4,12)=bit(old_type,12);
       79 
       80 
       81 	if substr(d,1,6) then go to make_string_desc;
       82 	substr(d,19,1)=sym_p->symbol_node.bits.decimal;
       83 	substr(d,20,8)=sym_p->symbol_node.scale;
       84 	substr(d,28,9)=bit(fixed(size,9));
       85 	goto exit;
       86 make_string_desc:
       87 	substr(d,19,18)=bit(fixed(size,18));
       88 	goto exit;
       89 /*  */
       90 
       91 new_desc:
       92 	substr(d,1,1)="1"b;
       93 	substr(d,2,6)=sym_p->runtime_symbol.type;	/* no bits need be removed for arrays */
       94 	substr(d,8,1)=sym_p->runtime_symbol.bits.packed;
       95 
       96 	data_type = fixed (sym_p -> runtime_symbol.type, 6);
       97 
       98 	if data_type >= bit_desc & data_type <= v_char_desc
       99 	then substr(d,13,24)=bit(fixed(size,24));
      100 	else do;
      101 		substr(d,17,8)=sym_p->runtime_symbol.scale;
      102 		if substr(d,17,1) then substr(d,13,4)="1111"b;	/* negative scale */
      103 		substr(d,25,12)=bit(fixed(size,12));
      104 	     end;
      105 
      106 exit:
      107 	return(d);
      108 
      109 end plio2_sym_to_desc;
	SOURCE FILES USED IN THIS COMPILATION.

LINE      NUMBER  DATE MODIFIED     NAME			PATHNAME
             0    10/03/83  1005.6  plio2_sym_to_desc.pl1             >spec>on>pl128d>plio2_sym_to_desc.pl1
30           1    05/06/74  1752.6  stu_frame.incl.pl1                >ldd>include>stu_frame.incl.pl1
32           2    11/26/79  1320.6  runtime_symbol.incl.pl1           >ldd>include>runtime_symbol.incl.pl1
33           3    05/06/74  1752.6  symbol_node.incl.pl1              >ldd>include>symbol_node.incl.pl1
34           4    08/13/81  2043.5  plio2_ps.incl.pl1                 >ldd>include>plio2_ps.incl.pl1
35           5    01/12/79  1059.7  desc_types.incl.pl1               >ldd>include>desc_types.incl.pl1
	NAMES DECLARED IN THIS COMPILATION.

IDENTIFIER	     OFFSET    LOC STORAGE CLASS   DATA TYPE		ATTRIBUTES AND REFERENCES
								(* indicates a set context)

NAMES DECLARED BY DECLARE STATEMENT.
ST_block_p                4            based           pointer                  level 2 dcl 4-10 ref 48
addrel                                                 builtin function         dcl 18 ref 47 54
address                   3            based           structure                level 2 packed unaligned dcl 2-3
bit                                                    builtin function         dcl 18 ref 78 84 86 98 103
bit_desc                               constant        fixed bin(17,0)          initial dcl 5-1 ref 98
bits                      0(24)        based           structure                level 2 in structure "runtime_symbol" packed
                                                                                  unaligned dcl 2-3 in procedure "plio2_sym_to_desc"
bits                      0(24)        based           structure                level 2 in structure "symbol_node" packed unaligned
                                                                                  dcl 3-1 in procedure "plio2_sym_to_desc"
class                     3(18)        based           bit(4)                   level 3 packed unaligned dcl 2-3 ref 60
d                               000113 automatic       bit(36)                  dcl 20 set ref 70* 78* 81 82* 83* 84* 86* 91* 93*
                                                                                  94* 98* 101* 102 102* 103* 106
data_type                       000116 automatic       fixed bin(6,0)           dcl 24 set ref 96* 98 98
decimal                   0(27)        based           bit(1)                   level 3 packed unaligned dcl 3-1 ref 82
display                  40            based           pointer                  level 2 dcl 1-1 ref 53
father                    2            based           bit(18)                  level 2 packed unaligned dcl 2-3 ref 47 54
fixed                                                  builtin function         dcl 18 ref 73 84 86 96 98 103
flag                                   based           bit(1)                   level 2 packed unaligned dcl 2-3 ref 72
frame                                  based           structure                level 1 dcl 1-1
icode                           000112 automatic       fixed bin(15,0)          dcl 19 set ref 64* 67
l1p                                    parameter       pointer                  dcl 16 ref 10 47 47
new_sfp                                parameter       pointer                  dcl 16 ref 10 43
null                                                   builtin function         dcl 18 ref 44 60 60 60 60 62 64 64 64 64
old_symbol                             based           bit(12)                  dcl 23 ref 73
old_type                        000114 automatic       fixed bin(12,0)          dcl 21 set ref 73* 74 74* 74 75 75 75* 75 78
packed                    0(25)        based           bit(1)                   level 3 packed unaligned dcl 2-3 ref 94
plio2_signal_$s_r_              000010 constant        entry                    external dcl 26 ref 67
ps                                     based           structure                level 1 dcl 4-10
psp                                    parameter       pointer                  dcl 16 set ref 10 46 48 67*
quick                     0(01)        based           bit(1)                   level 2 packed unaligned dcl 2-38 ref 53
ref_p                           000110 automatic       pointer                  dcl 17 set ref 60* 62* 64*
runtime_block                          based           structure                level 1 dcl 2-38
runtime_symbol                         based           structure                level 1 dcl 2-3
scale                     0(28)        based           bit(8)                   level 2 in structure "runtime_symbol" packed
                                                                                  unaligned dcl 2-3 in procedure "plio2_sym_to_desc"
                                                                                  ref 101
scale                     0(28)        based           bit(8)                   level 2 in structure "symbol_node" packed unaligned
                                                                                  dcl 3-1 in procedure "plio2_sym_to_desc" ref 83
sfp                             000100 automatic       pointer                  dcl 17 set ref 43* 44 46* 53* 53 60* 64*
size                            000115 automatic       fixed bin(35,0)          dcl 22 in procedure "plio2_sym_to_desc" set ref 40*
                                                                                  41 64* 64* 84 86 98 103
size                      4            based           fixed bin(35,0)          level 2 in structure "runtime_symbol" dcl 2-3
                                                                                  in procedure "plio2_sym_to_desc" ref 40
sp                                     parameter       pointer                  dcl 16 ref 10 38
stack_frame_p                          based           pointer                  level 2 dcl 4-10 ref 46
stu_$decode_runtime_value       000012 constant        entry                    external dcl 27 ref 64
stu_$get_implicit_qualifier     000014 constant        entry                    external dcl 28 ref 60
substr                                                 builtin function         dcl 18 set ref 78* 81 82* 83* 84* 86* 91* 93* 94*
                                                                                  98* 101* 102 102* 103*
sym_p                           000106 automatic       pointer                  dcl 17 set ref 38* 40 60 60* 72 73 82 83 93 94 96
                                                                                  101
symbol_node                            based           structure                level 1 dcl 3-1
tbp                             000104 automatic       pointer                  dcl 17 set ref 48* 50 53 54* 54 54 60* 64*
tp                              000102 automatic       pointer                  dcl 17 set ref 47* 50
type                      0(06)        based           bit(6)                   level 2 packed unaligned dcl 2-3 ref 93 96
v_char_desc                            constant        fixed bin(17,0)          initial dcl 5-1 ref 98

NAMES DECLARED BY DECLARE STATEMENT AND NEVER REFERENCED.
D_fixed_cplx_desc                      internal static fixed bin(17,0)          initial dcl 5-1
D_fixed_real_desc                      internal static fixed bin(17,0)          initial dcl 5-1
D_float_cplx_desc                      internal static fixed bin(17,0)          initial dcl 5-1
D_float_real_desc                      internal static fixed bin(17,0)          initial dcl 5-1
addr                                                   builtin function         dcl 18
area_desc                              internal static fixed bin(17,0)          initial dcl 5-1
based_bit36                            based           bit(36)                  dcl 15
char_desc                              internal static fixed bin(17,0)          initial dcl 5-1
d_fixed_cplx_desc                      internal static fixed bin(17,0)          initial dcl 5-1
d_fixed_real_desc                      internal static fixed bin(17,0)          initial dcl 5-1
d_float_cplx_desc                      internal static fixed bin(17,0)          initial dcl 5-1
d_float_real_desc                      internal static fixed bin(17,0)          initial dcl 5-1
encoded_value                          based           structure                level 1 dcl 2-70
entry_desc                             internal static fixed bin(17,0)          initial dcl 5-1
file_desc                              internal static fixed bin(17,0)          initial dcl 5-1
i                                      automatic       fixed bin(15,0)          dcl 19
label_desc                             internal static fixed bin(17,0)          initial dcl 5-1
offset_desc                            internal static fixed bin(17,0)          initial dcl 5-1
plio2_data_$badfsbp                    external static pointer                  dcl 4-82
plio2_data_$badjob                     external static bit(36)                  dcl 4-94
plio2_data_$fab2pstat                  external static pointer                  dcl 4-82
plio2_data_$fabpstat                   external static pointer                  dcl 4-82
plio2_data_$fsbpstat                   external static pointer                  dcl 4-82
plio2_data_$pliostringfsbp             external static pointer                  dcl 4-82
plio2_data_$pspstat                    external static pointer                  dcl 4-82
plio2_data_$undef_file_sw              external static bit(1)                   dcl 4-94
plio2_data_fsb_thread_                 external static pointer                  initial dcl 4-91
pointer_desc                           internal static fixed bin(17,0)          initial dcl 5-1
runtime_bound                          based           structure                level 1 unaligned dcl 2-33
runtime_token                          based           structure                level 1 dcl 2-63
s_fixed_cplx_desc                      internal static fixed bin(17,0)          initial dcl 5-1
s_fixed_real_desc                      internal static fixed bin(17,0)          initial dcl 5-1
s_float_cplx_desc                      internal static fixed bin(17,0)          initial dcl 5-1
s_float_real_desc                      internal static fixed bin(17,0)          initial dcl 5-1
structure_desc                         internal static fixed bin(17,0)          initial dcl 5-1
sym_bound                              based           structure                level 1 unaligned dcl 3-28
symbol_block                           based           structure                level 1 dcl 3-33
v_bit_desc                             internal static fixed bin(17,0)          initial dcl 5-1

NAMES DECLARED BY EXPLICIT CONTEXT.
exit                            000364 constant        label                    dcl 106 ref 85 88
loop                            000062 constant        label                    dcl 50 ref 55
make_string_desc                000302 constant        label                    dcl 86 ref 81
new_desc                        000310 constant        label                    dcl 91 ref 72
plio2_sym_to_desc               000021 constant        entry                    external dcl 10
start                           000027 constant        label                    dcl 38
test                            000225 constant        label                    dcl 70

THERE WERE NO NAMES DECLARED BY CONTEXT OR IMPLICATION.

STORAGE REQUIREMENTS FOR THIS PROGRAM.

	Object	Text	Link	Symbol	Defs	Static
Start          0       0       454         472     371         464
Length       742     371        16         234      63           0

BLOCK NAME	         STACK SIZE     TYPE		WHY NONQUICK/WHO SHARES STACK FRAME
plio2_sym_to_desc                   116 external procedure  is an external procedure.  

STORAGE FOR AUTOMATIC VARIABLES.

STACK FRAME                 LOC IDENTIFIER                  BLOCK NAME
plio2_sym_to_desc        000100 sfp                         plio2_sym_to_desc
                         000102 tp                          plio2_sym_to_desc
                         000104 tbp                         plio2_sym_to_desc
                         000106 sym_p                       plio2_sym_to_desc
                         000110 ref_p                       plio2_sym_to_desc
                         000112 icode                       plio2_sym_to_desc
                         000113 d                           plio2_sym_to_desc
                         000114 old_type                    plio2_sym_to_desc
                         000115 size                        plio2_sym_to_desc
                         000116 data_type                   plio2_sym_to_desc

THE FOLLOWING EXTERNAL OPERATORS ARE USED BY THIS PROGRAM.
call_ext_out_desc   call_ext_out        return              ext_entry           set_support

THE FOLLOWING EXTERNAL ENTRIES ARE CALLED BY THIS PROGRAM.
plio2_signal_$s_r_            stu_$decode_runtime_value     stu_$get_implicit_qualifier

NO EXTERNAL VARIABLES ARE USED BY THIS PROGRAM.




   LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC   
     10 000014        38 000027        40 000033        41 000035        43 000036        44 000041        46 000045
     47 000051        48 000057        50 000062        53 000066        54 000074        55 000101        60 000102
     62 000135        64 000137        67 000167        70 000225        72 000226        73 000231        74 000234
     75 000240        78 000247        81 000257        82 000262        83 000267        84 000274        85 000301
     86 000302        88 000307        91 000310        93 000312        94 000322        96 000327        98 000333
    101 000345       102 000352       103 000357       106 000364


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
