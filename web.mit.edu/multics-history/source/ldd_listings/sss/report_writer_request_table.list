ASSEMBLY LISTING OF SEGMENT >udd>sm>ds>w>ml>report_writer_request_table_.alm                                                                                                                        
ASSEMBLED ON:	05/05/00  1831.4 mdt Fri
OPTIONS USED:	list symbols 
ASSEMBLED BY:	ALM Version 8.14 March 1989     
ASSEMBLER CREATED:	06/09/89  1102.3 mdt Fri

                                     1  " ***********************************************************
                                     2  " *                                                         *
                                     3  " * Copyright, (C) Honeywell Information Systems Inc., 1984 *
                                     4  " *                                                         *
                                     5  " ***********************************************************
                                     6  "
                                     7  " report_writer_ Request Table.
                                     8  "
                                     9  " When the next request is added to report_writer_, it should be entered
                                    10  " into the standard_requests request table, and also have its own request
                                    11  " table. For example, if the request foo was added, it should also have a
                                    12  " foo_request request table. This same philosophy should be duplicated
                                    13  " when a request is deleted.
                                    14  "
                                    15  " Written - Al Dupuis - October 1984
                                    16  
                                    17  
                                    18  	include 	ssu_request_macros
                                   1-1  " BEGIN INCLUDE FILE ... ssu_request_macros.incl.alm
                                   1-2  " Created:  5 May 1980 by W. Olin Sibert
                                   1-3  " Modified: 25 July 1980 by G. Palter to add multics_request macro
                                   1-4  " Modified: 1 December 1981 by G. Palter to remove user_flags
                                   1-5  " Modified: 12 February 1982 by G. Palter for version 4
                                   1-6  " Modified: 28 February 1982 by G. Palter to add dont_summarize and dont_list
                                   1-7  " Modified: 2 August 1982 by Jay Pattin to add unknown_request
                                   1-8  " Modified: 24 October 1984 by G. Palter to restore user flags and add the
                                   1-9  "    set_default_flags and set_default_multics_flags macros
                                  1-10  
                                  1-11  
                                  1-12  " ALM macros used to define subsystem request tables
                                  1-13  
                                  1-14  
                                  1-15  	macro	request_table_version
                              1   1-16  	aci	"srqt_4.0",8
                              2   1-17  	&end
                                  1-18  
                                  1-19  
                                  1-20  	macro	namelist
                              1   1-21  	maclist	off,save
                              2   1-22  	vfd	36/&K
                              3   1-23  &R&(	aci	@&i@,32
                              4   1-24  &)
                              5   1-25  	maclist	restore
                              6   1-26  	&end
                                  1-27  
                                  1-28  " 
                                  1-29  
                                  1-30  " System defined per-request flags
                                  1-31  
                        400000    1-32  	bool	flags.allow_command,400000	" valid as a command
                        200000    1-33  	bool	flags.allow_af,200000	" valid as an active function
                        600000    1-34  	bool	flags.allow_both,600000	" valid as both
                                  1-35  
                        100000    1-36  	bool	flags.unimplemented,100000	" request is not yet implemented
                        040000    1-37  	bool	flags.multics_request,040000	" request is actually a Multics command
                                  1-38  
                        020000    1-39  	bool	flags.dont_summarize,020000	" summarize_requests won't list it
                        010000    1-40  	bool	flags.dont_list,010000	" list_requests won't show it without -all
                                  1-41  
                        004000    1-42  	bool	flags.unknown,004000	" request is explicitly made unknown
                                  1-43  
                                  1-44  
                                  1-45  " Macros for setting per-request flags
                                  1-46  
                                  1-47  	macro	set_flags_loop
                              1   1-48  	maclist	off,save
                              2   1-49  &(3
                              3   1-50  &=&i,default&[	set_flags_loop	&1,(0),(&2)
                              4   1-51  &;	set	&1,&1+&i
                              5   1-52  &]&)
                              6   1-53  	maclist	restore
                              7   1-54  	&end
                                  1-55  
                                  1-56  
                                  1-57  	macro	set_flags
                              1   1-58  	maclist	off,save
                              2   1-59  	set	&1,0
                              3   1-60  &=&3,&[	set_flags_loop	&1,(0),(&2)
                              4   1-61  &;	set_flags_loop	&1,(&2),(&3)
                              5   1-62  &]
                              6   1-63  	maclist	restore
                              7   1-64  	&end
                                  1-65  
                                  1-66  " 
                                  1-67  
                                  1-68  "	set_default_flags {(system-flags)},{(user-flags)}
                                  1-69  
                                  1-70  " Sets the default system and/or user flags to be used for requests:
                                  1-71  "   system-flags: defines the default general nature of requests;" the default
                                  1-72  "      default is flags.allow_command
                                  1-73  "   user-flags:  defines the default setting for the subsystem specific flags
                                  1-74  "      associated with requests;" the default default is none (0)
                                  1-75  "   Note: If either system-flags or user-flags is ommitted, the default is not
                                  1-76  "      changed from its prior value.  This action allows the use of multiple
                                  1-77  "      set_default_flags macros within a table to change system or user
                                  1-78  "      flags without affecting the other defaults
                                  1-79  
                                  1-80  	macro	set_default_flags
                              1   1-81  	maclist	off,save
                              2   1-82  &^=&1,&[	set_flags	.dft_sf,(flags.allow_command),(&1)
                              3   1-83  &]
                              4   1-84  &^=&2,&[	set_flags	.dft_uf,(0),(&2)
                              5   1-85  &]
                              6   1-86  	maclist	restore
                              7   1-87  	&end
                                  1-88  
                                  1-89  
                                  1-90  "	set_default_multics_flags {(system-flags)},{(user-flags)}
                                  1-91  
                                  1-92  " Sets the default system and/or user flags to be used for Multics commands when used as requests:
                                  1-93  "   system-flags: defines the default general nature of Multics requests;" the
                                  1-94  "      default default is flags.allow_command+flags.allow_af
                                  1-95  "   user-flags:  defines the default setting for the subsystem specific flags
                                  1-96  "      associated with Multics requests;" the default default is none (0)
                                  1-97  "   Note: If either system-flags or user-flags is ommitted, the default is not
                                  1-98  "      changed from its prior value.  This action allows the use of multiple
                                  1-99  "      set_default_multics_flags macros within a table to change system or user
                                 1-100  "      flags without affecting the other defaults
                                 1-101  
                                 1-102  	macro	set_default_multics_flags
                              1  1-103  	maclist	off,save
                              2  1-104  &^=&1,&[	set_flags	.dft_mrsf,(flags.allow_command,flags.allow_af),(&1)
                              3  1-105  &]
                              4  1-106  &^=&2,&[	set_flags	.dft_mruf,(0),(&2)
                              5  1-107  &]
                              6  1-108  	maclist	restore
                              7  1-109  	&end
                                 1-110  
                                 1-111  " 
                                 1-112  
                                 1-113  	macro	.multics_request_doc
                              1  1-114  	null
                              2  1-115  	&end
                                 1-116  
                                 1-117  
                                 1-118  	macro	dft_multics_doc_lth
                              1  1-119  	set	.multics_doc_lth,0
                              2  1-120  	&end
                                 1-121  
                                 1-122  
                                 1-123  "	set_default_multics_doc (string)
                                 1-124  
                                 1-125  " Sets the default documentation to be used for Multics commands when used as requests:
                                 1-126  "   string: is the documentation string to be used for any subsequent requests defined by
                                 1-127  "      the multics_request_macro;" all occurences of "&1" in this string will be replaced by
                                 1-128  "      the actual name of the request;" Eg:
                                 1-129  "	set_default_multics_doc (Type '.. help &1' for more information.)
                                 1-130  
                                 1-131  	macro	set_default_multics_doc
                              1  1-132  	maclist	off,save
                              2  1-133  	macro	.multics_request_doc
                              3  1-134  	aci	@&1@
                              4  1-135  	&&end
                              5  1-136  	macro	dft_multics_doc_lth
                              6  1-137  	macro	.compute
                              7  1-138  	set	.multics_doc_lth,&&&&l1
                              8  1-139  	&&&&end
                              9  1-140  	.compute (&1)
                             10  1-141  	&&end
                             11  1-142  	maclist	restore
                             12  1-143  	&end
                                 1-144  
                                 1-145  " 
                                 1-146  
                                 1-147  "	begin_table tablename
                                 1-148  
                                 1-149  " Defines a subsystem request table (multiple tables may exist in a single object segment):
                                 1-150  "   tablename: the name by which this table may be referenced externally;" references to the
                                 1-151  "      table should be of the form segname$tablename where segname is the name of this
                                 1-152  "      object segment
                                 1-153  
                                 1-154  	macro	begin_table
                              1  1-155  	segdef	&1
                              2  1-156  	maclist	object,save
                              3  1-157  	use	tables
                              4  1-158  &1:	request_table_version
                              5  1-159  	aci	@&1@,32
                              6  1-160  	dup	6
                              7  1-161  	vfd	36/0
                              8  1-162  	dupend
                              9  1-163  	vfd	36/&1.rc
                             10  1-164  	maclist	off
                             11  1-165  	set	.rc,0
                             12  1-166  	set_default_flags (default),(default)
                             13  1-167  	set_default_multics_flags (default),(default)
                             14  1-168  	maclist	restore
                             15  1-169  	&end
                                 1-170  
                                 1-171  
                                 1-172  "	end_table	tablename
                                 1-173  
                                 1-174  " Indicates the end of a subsystem request table definition:
                                 1-175  "   tablename: the name of the table which has now been completely defined
                                 1-176  
                                 1-177  	macro	end_table
                              1  1-178  	maclist	off,save
                              2  1-179  	set	&1.rc,.rc
                              3  1-180  	maclist	restore
                              4  1-181  	&end
                                 1-182  
                                 1-183  " 
                                 1-184  
                                 1-185  "	request	name,processor,({abbreviations}),{(documentation)},
                                 1-186  "		 {(system-flags)},{(user-flags)}
                                 1-187  
                                 1-188  " Defines a subsystem request:
                                 1-189  "   name: the primary name of this request
                                 1-190  "   processor: the name of the procedure which actually executes this request;" it must be
                                 1-191  "      of the form segname$entryname
                                 1-192  "   abbreviations: is the list of defined abbreviations for this request
                                 1-193  "   documentation: a short string used by the list_requests request to explain this request
                                 1-194  "   system-flags: defines the general nature of this request;" the default is
                                 1-195  "      flags.allow_command
                                 1-196  "   user-flags: allows a subsystem to provide subsystem-specific information
                                 1-197  "      with the request's definition;" the default is none (0)
                                 1-198  
                                 1-199  	macro	request
                              1  1-200  	maclist	off,save
                              2  1-201  	set	.rc,.rc+1
                              3  1-202  	maclist	object
                              4  1-203  	use	tables
                              5  1-204  	vfd	18/&U.call,18/&U.names
                              6  1-205  &=&4,&[	vfd	36/0
                              7  1-206  &;	vfd	18/&U.info,18/&l4
                              8  1-207  	maclist	off
                              9  1-208  	use	info
                             10  1-209  &U.info:	aci	@&4@
                             11  1-210  &]
                             12  1-211  	use	tables
                             13  1-212  	set_flags	.sf,(.dft_sf),(&5)
                             14  1-213  	set_flags	.uf,(.dft_uf),(&6)
                             15  1-214  	maclist	object
                             16  1-215  	vfd	18/.sf,18/.uf
                             17  1-216  	maclist	off
                             18  1-217  	use	calls
                             19  1-218  &U.call:	epaq	*
                             20  1-219  	lprp4	7|stack_header.lot_ptr,*au
                             21  1-220  	call6	&2
                             22  1-221  	use	names
                             23  1-222  &U.names:	namelist	&1&^=&3,&[,&3&]
                             24  1-223  	maclist	restore
                             25  1-224  	&end
                                 1-225  
                                 1-226  " 
                                 1-227  
                                 1-228  "	unknown_request name,(abbreviations)
                                 1-229  
                                 1-230  " Defines an unknown request: used to make the utilities not recognize a request even though
                                 1-231  " it is defined in a later request table (such as ssu_request_tables_$standard_request):
                                 1-232  "   name: the primary name of the request to be marked as unknown
                                 1-233  "   abbreviations: is the list of defined abbreviations for this request
                                 1-234  
                                 1-235  	macro	unknown_request
                              1  1-236  	maclist	off,save
                              2  1-237  	set	.rc,.rc+1
                              3  1-238  	maclist	object
                              4  1-239  	use	tables
                              5  1-240  	vfd	18/&U.call,18/&U.names
                              6  1-241  	vfd	36/0
                              7  1-242  	vfd	18/flags.unknown,18/0
                              8  1-243  	maclist	off
                              9  1-244  	use	calls
                             10  1-245  &U.call:	epaq	*
                             11  1-246  	lprp4	7|stack_header.lot_ptr,*au
                             12  1-247  	call6	ssu_$unknown_request
                             13  1-248  	use	names
                             14  1-249  &U.names: namelist	&1&^=&2,&[,&2&]
                             15  1-250  	maclist	restore
                             16  1-251  	&end
                                 1-252  
                                 1-253  " 
                                 1-254  
                                 1-255  "	multics_request name,({abbreviations}),({documenation}),{procedure},
                                 1-256  "		       {(system-flags)},{(user-flags)}
                                 1-257  
                                 1-258  " Defines that a Multics command/AF may be used as a subsystem request:
                                 1-259  "   name: the primary name of this request (usually the name of the Multics command/AF)
                                 1-260  "   abbreviations: is the list of defined abbreviations for this request
                                 1-261  "   documentation: a short string used by the list_requests request to explain this request;
                                 1-262  "      if no documentation is provided, the documentation specified by a prior use of
                                 1-263  "      set_default_multics_doc is used
                                 1-264  "   procedure: the name of the Multics command/AF which is actually executed by this
                                 1-265  "      request;" it must be of the form segname$entryname;" if not given, the default is
                                 1-266  "      name$name
                                 1-267  "   system-flags: defines the general nature of this request;" the default is
                                 1-268  "      flags.allow_command+flags.allow_af
                                 1-269  "   user-flags: allows a subsystem to provide subsystem-specific information
                                 1-270  "      with the request's definition;" the default is none (0)
                                 1-271  
                                 1-272  	macro	multics_request
                              1  1-273  	maclist	off,save
                              2  1-274  	set	.rc,.rc+1
                              3  1-275  	maclist	object
                              4  1-276  	use	tables
                              5  1-277  	vfd	18/&U.call,18/&U.names
                              6  1-278  &=&3,&[	dft_multics_doc_lth &1,(&2),(&3),(&4),(&5),(&6)
                              7  1-279  	vfd	18/&U.info,18/.multics_doc_lth
                              8  1-280  &;	vfd	18/&U.info,18/&l3
                              9  1-281  &]
                             10  1-282  	maclist	off
                             11  1-283  	use	info
                             12  1-284  &U.info:
                             13  1-285  &=&3,&[	.multics_request_doc &1,(&2),(&3),(&4),(&5),(&6)
                             14  1-286  &;	aci	@&3@
                             15  1-287  &]
                             16  1-288  	use	tables
                             17  1-289  	maclist	object
                             18  1-290  	set_flags	.sf,(.dft_mrsf),(&5)
                             19  1-291  	set_flags	.uf,(.dft_mruf),(&6)
                             20  1-292  	maclist	object
                             21  1-293  	vfd	18/.sf+flags.multics_request,18/.uf
                             22  1-294  	maclist	off
                             23  1-295  	use	calls
                             24  1-296  &U.call:	epaq	*
                             25  1-297  	lprp4	7|stack_header.lot_ptr,*au
                             26  1-298  &=&4,&[	call6	&1$&1
                             27  1-299  &;	call6	&4
                             28  1-300  &]
                             29  1-301  	use	names
                             30  1-302  &U.names:	namelist	&1&^=&2,&[,&2&]
                             31  1-303  	maclist	restore
                             32  1-304  	&end
                                 1-305  
                                 1-306  " 
                                 1-307  
                                 1-308  " Required ALM statements to make this all work
                                 1-309  
                                 1-310  	use	tables
                                 1-311  	use	calls
                                 1-312  	use	names
                                 1-313  	use	info
                                 1-314  	join	/text/tables,calls,names,info
                                 1-315  
                                 1-316  	include	stack_header
                                   2-1  "	BEGIN INCLUDE FILE ... stack_header.incl.alm  3/72  Bill Silver
                                   2-2  "
                                   2-3  "	modified 7/76 by M. Weaver for *system links and more system use of areas
                                   2-4  "	modified 3/77 by M. Weaver  to add rnt_ptr
                                   2-5  "	modified 7/77 by S. Webber to add run_unit_depth and assign_linkage_ptr
                                   2-6  "	modified 6/83 by J. Ives to add trace_frames and in_trace.
                                   2-7  
                                   2-8  " HISTORY COMMENTS:
                                   2-9  "  1) change(86-06-24,DGHowe), approve(86-06-24,MCR7396),
                                  2-10  "     audit(86-08-05,Schroth), install(86-11-03,MR12.0-1206):
                                  2-11  "     added the heap_header_ptr definition
                                  2-12  "  2) change(86-08-12,Kissel), approve(86-08-12,MCR7473),
                                  2-13  "     audit(86-10-10,Fawcett), install(86-11-03,MR12.0-1206):
                                  2-14  "     Modified to support control point management.  These changes were
                                  2-15  "     actually made in February 1985 by G. Palter.
                                  2-16  "  3) change(86-10-22,Fawcett), approve(86-10-22,MCR7473),
                                  2-17  "     audit(86-10-22,Farley), install(86-11-03,MR12.0-1206):
                                  2-18  "     Remove the old_lot pointer and replace it with cpm_data_ptr. Use the 18
                                  2-19  "     bit pad after cur_lot_size for the cpm_enabled. This was done to save
                                  2-20  "     some space int the stack header and change the cpd_ptr unal to
                                  2-21  "     cpm_data_ptr (ITS pair).
                                  2-22  "                                                      END HISTORY COMMENTS
                                  2-23  
                        000004    2-24  	equ	stack_header.cpm_data_ptr,4		ptr to control point for this stack
                        000006    2-25  	equ	stack_header.combined_stat_ptr,6	ptr to separate static area
                                  2-26  
                        000010    2-27  	equ	stack_header.clr_ptr,8		ptr to area containing linkage sections
                        000012    2-28  	equ	stack_header.max_lot_size,10		number of words allowed in lot (DU)
                        000012    2-29  	equ	stack_header.main_proc_invoked,10	nonzero if main proc was invoked in run unit (DL)
                        000012    2-30  	equ	stack_header.run_unit_depth,10	number of active run units stacked (DL)
                        000013    2-31  	equ	stack_header.cur_lot_size,11		DU number of words (entries) in lot
                        000013    2-32            equ	stack_header.cpm_enabled,11		DL  non-zero if control point management is enabled
                        000014    2-33  	equ	stack_header.system_free_ptr,12	ptr to system storage area
                        000016    2-34  	equ	stack_header.user_free_ptr,14		ptr to user storage area
                                  2-35  
                        000020    2-36  	equ	stack_header.parent_ptr,16		ptr to parent stack or null
                        000022    2-37  	equ	stack_header.stack_begin_ptr,18	ptr to first stack frame
                        000024    2-38  	equ	stack_header.stack_end_ptr,20		ptr to next useable stack frame
                        000026    2-39  	equ	stack_header.lot_ptr,22		ptr to the lot for the current ring
                                  2-40  
                        000030    2-41  	equ	stack_header.signal_ptr,24		ptr to signal proc for current ring
                        000032    2-42  	equ	stack_header.bar_mode_sp,26		value of sp before entering bar mode
                        000034    2-43  	equ	stack_header.pl1_operators_ptr,28	ptr: pl1_operators_$operator_table
                        000036    2-44  	equ	stack_header.call_op_ptr,30		ptr to standard call operator
                                  2-45  
                        000040    2-46  	equ	stack_header.push_op_ptr,32		ptr to standard push operator
                        000042    2-47  	equ	stack_header.return_op_ptr,34		ptr to standard return operator
                        000044    2-48  	equ	stack_header.ret_no_pop_op_ptr,36	ptr: stand. return/ no pop operator
                        000046    2-49  	equ	stack_header.entry_op_ptr,38		ptr to standard entry operator
                                  2-50  
                        000050    2-51  	equ	stack_header.trans_op_tv_ptr,40	ptr to table of translator operator ptrs
                        000052    2-52  	equ	stack_header.isot_ptr,42		pointer to ISOT
                        000054    2-53  	equ	stack_header.sct_ptr,44		pointer to System Condition Table
                        000056    2-54  	equ	stack_header.unwinder_ptr,46		pointer to unwinder for current ring
                                  2-55  
                        000060    2-56  	equ	stack_header.sys_link_info_ptr,48	ptr to *system link name table
                        000062    2-57  	equ	stack_header.rnt_ptr,50		ptr to reference name table
                        000064    2-58  	equ	stack_header.ect_ptr,52		ptr to event channel table
                        000066    2-59  	equ	stack_header.assign_linkage_ptr,54	ptr to area for hcs_$assign_linkage calls
                        000070    2-60  	equ	stack_header.heap_header_ptr,56	ptr to heap header.
                        000072    2-61  	equ	stack_header.trace_frames,58		stack of trace_catch_ frames
                        000073    2-62  	equ	stach_header.trace_top_ptr,59		trace pointer
                        000074    2-63  	equ	stack_header.in_trace,60		trace antirecurse bit
                        000100    2-64  	equ	stack_header_end,64			length of stack header
                                  2-65  
                                  2-66  
                                  2-67  
                                  2-68  
                        000000    2-69  	equ	trace_frames.count,0		number of trace frames on stack
                        000001    2-70  	equ	trace_frames.top_ptr,1		packed pointer to top one
                                  2-71  
                                  2-72  "	The  following constant is an offset within the  pl1  operators table.
                                  2-73  "	It  references a  transfer vector table.
                                  2-74  
                        000551    2-75  	bool	tv_offset,551
                                  2-76  
                                  2-77  
                                  2-78  "	The  following constants are offsets within this transfer vector table.
                                  2-79  
                        001170    2-80  	equ	call_offset,tv_offset+271
                        001171    2-81  	equ	push_offset,tv_offset+272
                        001172    2-82  	equ	return_offset,tv_offset+273
                        001173    2-83  	equ	return_no_pop_offset,tv_offset+274
                        001174    2-84  	equ	entry_offset,tv_offset+275
                                  2-85  
                                  2-86  
                                  2-87  " 	END INCLUDE FILE stack_header.incl.alm
                                 1-317  
                                 1-318  " END INCLUDE FILE ... ssu_request_macros.incl.alm
                                    19  
    000712                          20  	name 	report_writer_request_table_
                                    21  
                                    22  	begin_table standard_requests
                        000000          	segdef	standard_requests
    000000  aa  163 162 161 164
    000001  aa  137 064 056 060
    000002  aa  163 164 141 156
    000003  aa  144 141 162 144
    000004  aa  137 162 145 161
    000005  aa  165 145 163 164
    000006  aa  163 040 040 040
    000007  aa  040 040 040 040
    000010  aa  040 040 040 040
    000011  aa  040 040 040 040
                        000006 
    000012  aa   000000 000000 
    000013  aa   000000 000000 
    000014  aa   000000 000000 
    000015  aa   000000 000000 
    000016  aa   000000 000000 
    000017  aa   000000 000000 
    000020  aa   000000 000007 
                                    23  
                                    24  	request	column_value,
                                    25  		 rw_requests$column_value,
                                    26  		 (clv),
                                    27  		 (Return the value of a specified column.),
                                    28  		 flags.allow_af
    000021  00   000262 000334 
    000022  0a   000712 000047 
    000023  aa   200000 000000 
                                    29  
                                    30  	request	display,
                                    31  		 rw_requests$display,
                                    32  		 (di),
                                    33  		 (Retrieve data and produce a formatted report.),
                                    34  		 flags.allow_command
    000024  00   000265 000355 
    000025  0a   000724 000055 
    000026  aa   400000 000000 
                                    35  
                                    36  	request	display_builtins,
                                    37  		 rw_requests$display_builtins,
                                    38  		 (dib),
                                    39  		 (Return the value of a display builtin.),
                                    40  		 flags.allow_af
    000027  00   000270 000376 
    000030  0a   000740 000046 
    000031  aa   200000 000000 
                                    41  
                                    42  	request	list_format_options,
                                    43  		 rw_requests$list_format_options,
                                    44  		 (lsfo),
                                    45  		 (List formatting option values.),
                                    46  		 flags.allow_both
    000032  00   000273 000417 
    000033  0a   000752 000036 
    000034  aa   600000 000000 
                                    47  
                                    48  	request   restore_format_options,
                                    49  	           rw_requests$restore_format_options,
                                    50  		 (rsfo),
                                    51  		 (Restore formatting option values.),
                                    52  		 flags.allow_command
    000035  00   000276 000440 
    000036  0a   000762 000041 
    000037  aa   400000 000000 
                                    53  
                                    54  	request	save_format_options,
                                    55  	           rw_requests$save_format_options,
                                    56  		 (svfo),
                                    57  		 (Save formatting option values.),
                                    58  		 flags.allow_command
    000040  00   000301 000461 
    000041  0a   000773 000036 
    000042  aa   400000 000000 
                                    59  
                                    60  	request	set_format_options,
                                    61  		 rw_requests$set_format_options,
                                    62  		 (sfo),
                                    63  		 (Set formatting option values.),
                                    64  		 flags.allow_command
    000043  00   000304 000502 
    000044  0a   001003 000035 
    000045  aa   400000 000000 
                                    65  
                                    66  	end_table	standard_requests
                                    67  
                                    68  	begin_table clv_request
                        000046          	segdef	clv_request
    000046  aa  163 162 161 164
    000047  aa  137 064 056 060
    000050  aa  143 154 166 137
    000051  aa  162 145 161 165
    000052  aa  145 163 164 040
    000053  aa  040 040 040 040
    000054  aa  040 040 040 040
    000055  aa  040 040 040 040
    000056  aa  040 040 040 040
    000057  aa  040 040 040 040
                        000006 
    000060  aa   000000 000000 
    000061  aa   000000 000000 
    000062  aa   000000 000000 
    000063  aa   000000 000000 
    000064  aa   000000 000000 
    000065  aa   000000 000000 
    000066  aa   000000 000001 
                                    69  
                                    70  	request	column_value,
                                    71  		 rw_requests$column_value,
                                    72  		 (clv),
                                    73  		 (Return the value of a specified column.),
                                    74  		 flags.allow_af
    000067  00   000307 000523 
    000070  0a   001013 000047 
    000071  aa   200000 000000 
                                    75  
                                    76  	end_table clv_request
                                    77  
                                    78  	begin_table di_request
                        000072          	segdef	di_request
    000072  aa  163 162 161 164
    000073  aa  137 064 056 060
    000074  aa  144 151 137 162
    000075  aa  145 161 165 145
    000076  aa  163 164 040 040
    000077  aa  040 040 040 040
    000100  aa  040 040 040 040
    000101  aa  040 040 040 040
    000102  aa  040 040 040 040
    000103  aa  040 040 040 040
                        000006 
    000104  aa   000000 000000 
    000105  aa   000000 000000 
    000106  aa   000000 000000 
    000107  aa   000000 000000 
    000110  aa   000000 000000 
    000111  aa   000000 000000 
    000112  aa   000000 000001 
                                    79  
                                    80  	request	display,
                                    81  		 rw_requests$display,
                                    82  		 (di),
                                    83  		 (Retrieve data and produce a formatted report.),
                                    84  		 flags.allow_command
    000113  00   000312 000544 
    000114  0a   001025 000055 
    000115  aa   400000 000000 
                                    85  
                                    86  	end_table di_request
                                    87  
                                    88  	begin_table dib_request
                        000116          	segdef	dib_request
    000116  aa  163 162 161 164
    000117  aa  137 064 056 060
    000120  aa  144 151 142 137
    000121  aa  162 145 161 165
    000122  aa  145 163 164 040
    000123  aa  040 040 040 040
    000124  aa  040 040 040 040
    000125  aa  040 040 040 040
    000126  aa  040 040 040 040
    000127  aa  040 040 040 040
                        000006 
    000130  aa   000000 000000 
    000131  aa   000000 000000 
    000132  aa   000000 000000 
    000133  aa   000000 000000 
    000134  aa   000000 000000 
    000135  aa   000000 000000 
    000136  aa   000000 000001 
                                    89  
                                    90  	request	display_builtins,
                                    91  		 rw_requests$display_builtins,
                                    92  		 (dib),
                                    93  		 (Return the value of a display builtin.),
                                    94  		 flags.allow_af
    000137  00   000315 000565 
    000140  0a   001041 000046 
    000141  aa   200000 000000 
                                    95  
                                    96  	end_table dib_request
                                    97  
                                    98  	begin_table lsfo_request
                        000142          	segdef	lsfo_request
    000142  aa  163 162 161 164
    000143  aa  137 064 056 060
    000144  aa  154 163 146 157
    000145  aa  137 162 145 161
    000146  aa  165 145 163 164
    000147  aa  040 040 040 040
    000150  aa  040 040 040 040
    000151  aa  040 040 040 040
    000152  aa  040 040 040 040
    000153  aa  040 040 040 040
                        000006 
    000154  aa   000000 000000 
    000155  aa   000000 000000 
    000156  aa   000000 000000 
    000157  aa   000000 000000 
    000160  aa   000000 000000 
    000161  aa   000000 000000 
    000162  aa   000000 000001 
                                    99  
                                   100  	request	list_format_options,
                                   101  		 rw_requests$list_format_options,
                                   102  		 (lsfo),
                                   103  		 (List formatting option values.),
                                   104  		 flags.allow_both
    000163  00   000320 000606 
    000164  0a   001053 000036 
    000165  aa   600000 000000 
                                   105  
                                   106  	end_table lsfo_request
                                   107  
                                   108  	begin_table rsfo_request
                        000166          	segdef	rsfo_request
    000166  aa  163 162 161 164
    000167  aa  137 064 056 060
    000170  aa  162 163 146 157
    000171  aa  137 162 145 161
    000172  aa  165 145 163 164
    000173  aa  040 040 040 040
    000174  aa  040 040 040 040
    000175  aa  040 040 040 040
    000176  aa  040 040 040 040
    000177  aa  040 040 040 040
                        000006 
    000200  aa   000000 000000 
    000201  aa   000000 000000 
    000202  aa   000000 000000 
    000203  aa   000000 000000 
    000204  aa   000000 000000 
    000205  aa   000000 000000 
    000206  aa   000000 000001 
                                   109  
                                   110  	request   restore_format_options,
                                   111  	           rw_requests$restore_format_options,
                                   112  		 (rsfo),
                                   113  		 (Restore formatting option values.),
                                   114  		 flags.allow_command
    000207  00   000323 000627 
    000210  0a   001063 000041 
    000211  aa   400000 000000 
                                   115  
                                   116  	end_table rsfo_request
                                   117  
                                   118  	begin_table svfo_request
                        000212          	segdef	svfo_request
    000212  aa  163 162 161 164
    000213  aa  137 064 056 060
    000214  aa  163 166 146 157
    000215  aa  137 162 145 161
    000216  aa  165 145 163 164
    000217  aa  040 040 040 040
    000220  aa  040 040 040 040
    000221  aa  040 040 040 040
    000222  aa  040 040 040 040
    000223  aa  040 040 040 040
                        000006 
    000224  aa   000000 000000 
    000225  aa   000000 000000 
    000226  aa   000000 000000 
    000227  aa   000000 000000 
    000230  aa   000000 000000 
    000231  aa   000000 000000 
    000232  aa   000000 000001 
                                   119  
                                   120  	request	save_format_options,
                                   121  	           rw_requests$save_format_options,
                                   122  		 (svfo),
                                   123  		 (Save formatting option values.),
                                   124  		 flags.allow_command
    000233  00   000326 000650 
    000234  0a   001074 000036 
    000235  aa   400000 000000 
                                   125  
                                   126  	end_table svfo_request
                                   127  
                                   128  	begin_table sfo_request
                        000236          	segdef	sfo_request
    000236  aa  163 162 161 164
    000237  aa  137 064 056 060
    000240  aa  163 146 157 137
    000241  aa  162 145 161 165
    000242  aa  145 163 164 040
    000243  aa  040 040 040 040
    000244  aa  040 040 040 040
    000245  aa  040 040 040 040
    000246  aa  040 040 040 040
    000247  aa  040 040 040 040
                        000006 
    000250  aa   000000 000000 
    000251  aa   000000 000000 
    000252  aa   000000 000000 
    000253  aa   000000 000000 
    000254  aa   000000 000000 
    000255  aa   000000 000000 
    000256  aa   000000 000001 
                                   129  
                                   130  	request	set_format_options,
                                   131  		 rw_requests$set_format_options,
                                   132  		 (sfo),
                                   133  		 (Set formatting option values.),
                                   134  		 flags.allow_command
    000257  00   000331 000671 
    000260  0a   001104 000035 
    000261  aa   400000 000000 
                                   135  
                                   136  	end_table sfo_request
                                   137  
                                   138  	end

NO LITERALS
     
NAME DEFINITIONS FOR ENTRY POINTS AND SEGDEFS

    001114  5a   000003 000000 
    001115  5a   000112 600000 
    001116  aa   000000 000000 
    001117  55   000016 000002 
    001120  5a   000002 400003 
    001121  55   000006 000016 
    001122  aa  034 162 145 160
    001123  aa  157 162 164 137
    001124  aa  167 162 151 164
    001125  aa  145 162 137 162
    001126  aa  145 161 165 145
    001127  aa  163 164 137 164
    001130  aa  141 142 154 145
    001131  aa  137 000 000 000
    001132  55   000024 000003 
    001133  0a   000236 400000 
    001134  55   000021 000003 
    001135  aa  013 163 146 157         sfo_request
    001136  aa  137 162 145 161
    001137  aa  165 145 163 164
    001140  55   000033 000016 
    001141  0a   000212 400000 
    001142  55   000027 000003 
    001143  aa  014 163 166 146         svfo_request
    001144  aa  157 137 162 145
    001145  aa  161 165 145 163
    001146  aa  164 000 000 000
    001147  55   000042 000024 
    001150  0a   000166 400000 
    001151  55   000036 000003 
    001152  aa  014 162 163 146         rsfo_request
    001153  aa  157 137 162 145
    001154  aa  161 165 145 163
    001155  aa  164 000 000 000
    001156  55   000051 000033 
    001157  0a   000142 400000 
    001160  55   000045 000003 
    001161  aa  014 154 163 146         lsfo_request
    001162  aa  157 137 162 145
    001163  aa  161 165 145 163
    001164  aa  164 000 000 000
    001165  55   000057 000042 
    001166  0a   000116 400000 
    001167  55   000054 000003 
    001170  aa  013 144 151 142         dib_request
    001171  aa  137 162 145 161
    001172  aa  165 145 163 164
    001173  55   000065 000051 
    001174  0a   000072 400000 
    001175  55   000062 000003 
    001176  aa  012 144 151 137         di_request
    001177  aa  162 145 161 165
    001200  aa  145 163 164 000
    001201  55   000073 000057 
    001202  0a   000046 400000 
    001203  55   000070 000003 
    001204  aa  013 143 154 166         clv_request
    001205  aa  137 162 145 161
    001206  aa  165 145 163 164
    001207  55   000103 000065 
    001210  0a   000000 400000 
    001211  55   000076 000003 
    001212  aa  021 163 164 141         standard_requests
    001213  aa  156 144 141 162
    001214  aa  144 137 162 145
    001215  aa  161 165 145 163
    001216  aa  164 163 000 000
    001217  55   000002 000073 
    001220  6a   000000 400002 
    001221  55   000106 000003 
    001222  aa  014 163 171 155         symbol_table
    001223  aa  142 157 154 137
    001224  aa  164 141 142 154
    001225  aa  145 000 000 000

DEFINITIONS HASH TABLE

    001226  aa   000000 000015 
    001227  5a   000051 000000 
    001230  5a   000073 000000 
    001231  5a   000042 000000 
    001232  5a   000057 000000 
    001233  aa   000000 000000 
    001234  aa   000000 000000 
    001235  5a   000103 000000 
    001236  aa   000000 000000 
    001237  aa   000000 000000 
    001240  5a   000016 000000 
    001241  5a   000024 000000 
    001242  5a   000033 000000 
    001243  5a   000065 000000 

EXTERNAL NAMES

    001244  aa  022 163 145 164         set_format_options
    001245  aa  137 146 157 162
    001246  aa  155 141 164 137
    001247  aa  157 160 164 151
    001250  aa  157 156 163 000
    001251  aa  023 163 141 166         save_format_options
    001252  aa  145 137 146 157
    001253  aa  162 155 141 164
    001254  aa  137 157 160 164
    001255  aa  151 157 156 163
    001256  aa  026 162 145 163         restore_format_options
    001257  aa  164 157 162 145
    001260  aa  137 146 157 162
    001261  aa  155 141 164 137
    001262  aa  157 160 164 151
    001263  aa  157 156 163 000
    001264  aa  023 154 151 163         list_format_options
    001265  aa  164 137 146 157
    001266  aa  162 155 141 164
    001267  aa  137 157 160 164
    001270  aa  151 157 156 163
    001271  aa  020 144 151 163         display_builtins
    001272  aa  160 154 141 171
    001273  aa  137 142 165 151
    001274  aa  154 164 151 156
    001275  aa  163 000 000 000
    001276  aa  007 144 151 163         display
    001277  aa  160 154 141 171
    001300  aa  014 143 157 154         column_value
    001301  aa  165 155 156 137
    001302  aa  166 141 154 165
    001303  aa  145 000 000 000
    001304  aa  013 162 167 137         rw_requests
    001305  aa  162 145 161 165
    001306  aa  145 163 164 163

NO TRAP POINTER WORDS

TYPE PAIR BLOCKS

    001307  aa   000004 000000 
    001310  55   000170 000130 
    001311  aa   000004 000000 
    001312  55   000170 000135 
    001313  aa   000004 000000 
    001314  55   000170 000142 
    001315  aa   000004 000000 
    001316  55   000170 000150 
    001317  aa   000004 000000 
    001320  55   000170 000155 
    001321  aa   000004 000000 
    001322  55   000170 000162 
    001323  aa   000004 000000 
    001324  55   000170 000164 
    001325  aa   000001 000000 
    001326  aa   000000 000000 

INTERNAL EXPRESSION WORDS

    001327  5a   000173 000000 
    001330  5a   000175 000000 
    001331  5a   000177 000000 
    001332  5a   000201 000000 
    001333  5a   000203 000000 
    001334  5a   000205 000000 
    001335  5a   000207 000000 
LINKAGE INFORMATION
      
    000000  aa   000000 000000 
    000001  0a   001114 000000 
    000002  aa   000000 000000 
    000003  aa   000000 000000 
    000004  aa   000000 000000 
    000005  aa   000000 000000 
    000006  22   000010 000026 
    000007  a2   000000 000000 
    000010  9a   777770 0000 46         rw_requests|column_value
    000011  5a   000221 0000 00
    000012  9a   777766 0000 46         rw_requests|display
    000013  5a   000220 0000 00
    000014  9a   777764 0000 46         rw_requests|display_builtins
    000015  5a   000217 0000 00
    000016  9a   777762 0000 46         rw_requests|list_format_options
    000017  5a   000216 0000 00
    000020  9a   777760 0000 46         rw_requests|restore_format_options
    000021  5a   000215 0000 00
    000022  9a   777756 0000 46         rw_requests|save_format_options
    000023  5a   000214 0000 00
    000024  9a   777754 0000 46         rw_requests|set_format_options
    000025  5a   000213 0000 00
SYMBOL INFORMATION
     
SYMBOL TABLE HEADER
     
    000000  aa   000000 000001 
    000001  aa   163171 155142 
    000002  aa   164162 145145 
    000003  aa   000000 000010 
    000004  aa   000000 117244 
    000005  aa   361023 525721 
    000006  aa   000000 131064 
    000007  aa   503025 034335 
    000010  aa   141154 155040 
    000011  aa   040040 040040 
    000012  aa   000024 000040 
    000013  aa   000034 000040 
    000014  aa   000044 000100 
    000015  aa   000002 000002 
    000016  aa   000064 000000 
    000017  aa   000000 000255 
    000020  aa   000000 000140 
    000021  aa   000221 000213 
    000022  aa   000245 000140 
    000023  aa   000064 000000 
    000024  aa   101114 115040 
    000025  aa   126145 162163 
    000026  aa   151157 156040 
    000027  aa   070056 061064 
    000030  aa   040115 141162 
    000031  aa   143150 040061 
    000032  aa   071070 071040 
    000033  aa   040040 040040 
    000034  aa   123143 150162 
    000035  aa   157164 150056 
    000036  aa   123171 163115 
    000037  aa   141151 156164 
    000040  aa   056155 040040 
    000041  aa   040040 040040 
    000042  aa   040040 040040 
    000043  aa   040040 040040 
    000044  aa   154151 163164 
    000045  aa   040163 171155 
    000046  aa   142157 154163 
    000047  aa   040040 040040 
    000050  aa   040040 040040 
    000051  aa   040040 040040 
    000052  aa   040040 040040 
    000053  aa   040040 040040 
    000054  aa   040040 040040 
    000055  aa   040040 040040 
    000056  aa   040040 040040 
    000057  aa   040040 040040 
    000060  aa   040040 040040 
    000061  aa   040040 040040 
    000062  aa   040040 040040 
    000063  aa   040040 040040 
    000064  aa   000000 000001 
    000065  aa   000000 000003 
    000066  aa   000102 000060 
    000067  aa   310561 236756 
    000070  aa   000000 131064 
    000071  aa   503025 000000 
    000072  aa   000116 000045 
    000073  aa   305736 051534 
    000074  aa   000000 113310 
    000075  aa   612334 200000 
    000076  aa   000130 000037 
    000077  aa   305736 051531 
    000100  aa   000000 115000 
    000101  aa   507463 000000 
    000102  aa   076165 144144          >udd>sm>ds>w>ml>report_writer_request_table_.alm
    000103  aa   076163 155076 
    000104  aa   144163 076167 
    000105  aa   076155 154076 
    000106  aa   162145 160157 
    000107  aa   162164 137167 
    000110  aa   162151 164145 
    000111  aa   162137 162145 
    000112  aa   161165 145163 
    000113  aa   164137 164141 
    000114  aa   142154 145137 
    000115  aa   056141 154155 
    000116  aa   076154 144144          >ldd>incl>ssu_request_macros.incl.alm
    000117  aa   076151 156143 
    000120  aa   154076 163163 
    000121  aa   165137 162145 
    000122  aa   161165 145163 
    000123  aa   164137 155141 
    000124  aa   143162 157163 
    000125  aa   056151 156143 
    000126  aa   154056 141154 
    000127  aa   155040 040040 
    000130  aa   076154 144144          >ldd>incl>stack_header.incl.alm
    000131  aa   076151 156143 
    000132  aa   154076 163164 
    000133  aa   141143 153137 
    000134  aa   150145 141144 
    000135  aa   145162 056151 
    000136  aa   156143 154056 
    000137  aa   141154 155040 
               MULTICS ASSEMBLY CROSS REFERENCE LISTING

   Value        Symbol                   Source file   Line number

         262    .._00000.call            report_writer_request_table_:    28.
         712    .._00000.info            report_writer_request_table_:    28.
         334    .._00000.names           report_writer_request_table_:    28.
         265    .._00001.call            report_writer_request_table_:    34.
         724    .._00001.info            report_writer_request_table_:    34.
         355    .._00001.names           report_writer_request_table_:    34.
         270    .._00002.call            report_writer_request_table_:    40.
         740    .._00002.info            report_writer_request_table_:    40.
         376    .._00002.names           report_writer_request_table_:    40.
         273    .._00003.call            report_writer_request_table_:    46.
         752    .._00003.info            report_writer_request_table_:    46.
         417    .._00003.names           report_writer_request_table_:    46.
         276    .._00004.call            report_writer_request_table_:    52.
         762    .._00004.info            report_writer_request_table_:    52.
         440    .._00004.names           report_writer_request_table_:    52.
         301    .._00005.call            report_writer_request_table_:    58.
         773    .._00005.info            report_writer_request_table_:    58.
         461    .._00005.names           report_writer_request_table_:    58.
         304    .._00006.call            report_writer_request_table_:    64.
        1003    .._00006.info            report_writer_request_table_:    64.
         502    .._00006.names           report_writer_request_table_:    64.
         307    .._00007.call            report_writer_request_table_:    74.
        1013    .._00007.info            report_writer_request_table_:    74.
         523    .._00007.names           report_writer_request_table_:    74.
         312    .._00010.call            report_writer_request_table_:    84.
        1025    .._00010.info            report_writer_request_table_:    84.
         544    .._00010.names           report_writer_request_table_:    84.
         315    .._00011.call            report_writer_request_table_:    94.
        1041    .._00011.info            report_writer_request_table_:    94.
         565    .._00011.names           report_writer_request_table_:    94.
         320    .._00012.call            report_writer_request_table_:   104.
        1053    .._00012.info            report_writer_request_table_:   104.
         606    .._00012.names           report_writer_request_table_:   104.
         323    .._00013.call            report_writer_request_table_:   114.
        1063    .._00013.info            report_writer_request_table_:   114.
         627    .._00013.names           report_writer_request_table_:   114.
         326    .._00014.call            report_writer_request_table_:   124.
        1074    .._00014.info            report_writer_request_table_:   124.
         650    .._00014.names           report_writer_request_table_:   124.
         331    .._00015.call            report_writer_request_table_:   134.
        1104    .._00015.info            report_writer_request_table_:   134.
         671    .._00015.names           report_writer_request_table_:   134.
      600000    .dft_mrsf                report_writer_request_table_:    22,   68,   78,   88,   98,  108,  118,  128.
           0    .dft_mruf                report_writer_request_table_:    22,   68,   78,   88,   98,  108,  118,  128.
      400000    .dft_sf                  report_writer_request_table_:    22,   68,   78,   88,   98,  108,  118,  128.
           0    .dft_uf                  report_writer_request_table_:    22,   28,   34,   40,   46,   52,   58,   64,   68,
                                                                          74,   78,   84,   88,   94,   98,  104,  108,  114,
                                                                         118,  124,  128,  134.
      156144    .rc                      report_writer_request_table_:    22,   28,   34,   40,   46,   52,   58,   64,   66,
                                                                          68,   74,   76,   78,   84,   86,   88,   94,   96,
                                                                          98,  104,  106,  108,  114,  116,  118,  124,  126,
                                                                         128,  134,  136.
      400000    .sf                      report_writer_request_table_:    28,   34,   40,   46,   52,   58,   64,   74,   84,
                                                                          94,  104,  114,  124,  134.
           0    .uf                      report_writer_request_table_:    28,   34,   40,   46,   52,   58,   64,   74,   84,
                                                                          94,  104,  114,  124,  134.
         262    calls                    report_writer_request_table_:    28,   34,   40,   46,   52,   58,   64,   74,   84,
                                                                          94,  104,  114,  124,  134,
                                         ssu_request_macros:       311,  314.
        1170    call_offset              stack_header:        80.
          46    clv_request              report_writer_request_table_:    68.
           1    clv_request.rc           report_writer_request_table_:    68,   76.
                column_value             report_writer_request_table_:    28,   74.
         116    dib_request              report_writer_request_table_:    88.
           1    dib_request.rc           report_writer_request_table_:    88,   96.
                display                  report_writer_request_table_:    34,   84.
                display_builtins         report_writer_request_table_:    40,   94.
          72    di_request               report_writer_request_table_:    78.
           1    di_request.rc            report_writer_request_table_:    78,   86.
        1174    entry_offset             stack_header:        84.
      200000    flags.allow_af           report_writer_request_table_:    22,   28,   40,   68,   74,   78,   88,   94,   98,
                                                                         108,  118,  128,
                                         ssu_request_macros:        33.
      600000    flags.allow_both         report_writer_request_table_:    46,  104,
                                         ssu_request_macros:        34.
      400000    flags.allow_command      report_writer_request_table_:    22,   34,   52,   58,   64,   68,   78,   84,   88,
                                                                          98,  108,  114,  118,  124,  128,  134,
                                         ssu_request_macros:        32.
       10000    flags.dont_list          ssu_request_macros:        40.
       20000    flags.dont_summarize     ssu_request_macros:        39.
       40000    flags.multics_request    ssu_request_macros:        37.
      100000    flags.unimplemented      ssu_request_macros:        36.
        4000    flags.unknown            ssu_request_macros:        42.
         712    info                     report_writer_request_table_:    28,   34,   40,   46,   52,   58,   64,   74,   84,
                                                                          94,  104,  114,  124,  134,
                                         ssu_request_macros:       313,  314.
                list_format_options      report_writer_request_table_:    46,  104.
         142    lsfo_request             report_writer_request_table_:    98.
           1    lsfo_request.rc          report_writer_request_table_:    98,  106.
         334    names                    report_writer_request_table_:    28,   34,   40,   46,   52,   58,   64,   74,   84,
                                                                          94,  104,  114,  124,  134,
                                         ssu_request_macros:       312,  314.
        1171    push_offset              stack_header:        81.
                restore_format_options   report_writer_request_table_:    52,  114.
        1173    return_no_pop_offset     stack_header:        83.
        1172    return_offset            stack_header:        82.
         166    rsfo_request             report_writer_request_table_:   108.
           1    rsfo_request.rc          report_writer_request_table_:   108,  116.
                rw_requests              report_writer_request_table_:    28,   34,   40,   46,   52,   58,   64,   74,   84,
                                                                          94,  104,  114,  124,  134.
                save_format_options      report_writer_request_table_:    58,  124.
                set_format_options       report_writer_request_table_:    64,  134.
         236    sfo_request              report_writer_request_table_:   128.
           1    sfo_request.rc           report_writer_request_table_:   128,  136.
          73    stach_header.trace_top_ptr     stack_header:        62.
          66    stack_header.assign_linkage_ptr      stack_header:        59.
          32    stack_header.bar_mode_sp       stack_header:        42.
          36    stack_header.call_op_ptr       stack_header:        44.
          10    stack_header.clr_ptr     stack_header:        27.
           6    stack_header.combined_stat_ptr       stack_header:        25.
           4    stack_header.cpm_data_ptr      stack_header:        24.
          13    stack_header.cpm_enabled       stack_header:        32.
          13    stack_header.cur_lot_size      stack_header:        31.
          64    stack_header.ect_ptr     stack_header:        58.
          46    stack_header.entry_op_ptr      stack_header:        49.
          70    stack_header.heap_header_ptr   stack_header:        60.
          74    stack_header.in_trace    stack_header:        63.
          52    stack_header.isot_ptr    stack_header:        52.
          26    stack_header.lot_ptr     report_writer_request_table_:    28,   34,   40,   46,   52,   58,   64,   74,   84,
                                                                          94,  104,  114,  124,  134,
                                         stack_header:        39.
          12    stack_header.main_proc_invoked       stack_header:        29.
          12    stack_header.max_lot_size      stack_header:        28.
          20    stack_header.parent_ptr  stack_header:        36.
          34    stack_header.pl1_operators_ptr       stack_header:        43.
          40    stack_header.push_op_ptr       stack_header:        46.
          42    stack_header.return_op_ptr     stack_header:        47.
          44    stack_header.ret_no_pop_op_ptr       stack_header:        48.
          62    stack_header.rnt_ptr     stack_header:        57.
          12    stack_header.run_unit_depth    stack_header:        30.
          54    stack_header.sct_ptr     stack_header:        53.
          30    stack_header.signal_ptr  stack_header:        41.
          22    stack_header.stack_begin_ptr   stack_header:        37.
          24    stack_header.stack_end_ptr     stack_header:        38.
          14    stack_header.system_free_ptr   stack_header:        33.
          60    stack_header.sys_link_info_ptr       stack_header:        56.
          72    stack_header.trace_frames      stack_header:        61.
          50    stack_header.trans_op_tv_ptr   stack_header:        51.
          56    stack_header.unwinder_ptr      stack_header:        54.
          16    stack_header.user_free_ptr     stack_header:        34.
         100    stack_header_end         stack_header:        64.
           0    standard_requests        report_writer_request_table_:    22.
           7    standard_requests.rc     report_writer_request_table_:    22,   66.
         212    svfo_request             report_writer_request_table_:   118.
           1    svfo_request.rc          report_writer_request_table_:   118,  126.
           0    tables                   report_writer_request_table_:    22,   28,   34,   40,   46,   52,   58,   64,   68,
                                                                          74,   78,   84,   88,   94,   98,  104,  108,  114,
                                                                         118,  124,  128,  134,
                                         ssu_request_macros:       310,  314.
           0    trace_frames.count       stack_header:        69.
           1    trace_frames.top_ptr     stack_header:        70.
         551    tv_offset                stack_header:        75,   80,   81,   82,   83,   84.


NO FATAL ERRORS


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
