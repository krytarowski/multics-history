	COMPILATION LISTING OF SEGMENT transform_command_
	Compiled by: Multics PL/I Compiler, Release 27d, of October 11, 1982
	Compiled at: Honeywell LISD Phoenix, System M
	Compiled on: 11/08/82  1607.5 mst Mon
	    Options: optimize map

        1 /* ***********************************************************
        2*   *                                                         *
        3*   * Copyright, (C) Honeywell Information Systems Inc., 1982 *
        4*   *                                                         *
        5*   * Copyright (c) 1972 by Massachusetts Institute of        *
        6*   * Technology and Honeywell Information Systems, Inc.      *
        7*   *                                                         *
        8*   *********************************************************** */
        9 
       10 
       11 transform_command_: proc (name_ptr, name_len, table_ptr, code);
       12 
       13 /* coded May 1970 by R. Frankston */
       14 
       15 /* name_ptr and name_len are the pointer and the length for the command name.
       16*   They are replaced by the pointer and length for the new command.
       17*   The tranformation is made according to the table addressed by table_ptr.
       18*   The code is 0 if the tranform is ok. Otherwise it is 1 and a message
       19*   is typed.
       20*
       21*   Modified Nov 1970 by Dan Bricklin
       22*/* Updated 7/22/76 to current version PL/I by S. Herbst */
       23 
       24 dcl (name_ptr, table_ptr) ptr;
       25 dcl (name_len, temp) fixed bin;
       26 
       27 dcl (code, error_table_$noentry ext) fixed bin (35);
       28 
       29 dcl  ch char (100) based (name_ptr) unaligned;
       30 
       31 dcl  command char (32) based (cptr) aligned,
       32      cptr pointer internal;
       33 
       34 dcl 1 c,
       35     2 (c1, c2, c3, c4) fixed binary (71);
       36 
       37 dcl 1 commands based (table_ptr) aligned,
       38     2 info fixed bin (71),
       39     2 nonames fixed bin (71),
       40     2 com_info (temp refer (commands.nonames)) char (32) aligned,
       41     2 more_info (temp refer (commands.nonames)),
       42       3 where fixed bin (17),
       43       3 len fixed bin (17),
       44     2 paths (100) char (1) unaligned;
       45 
       46 dcl 1 comnames based (table_ptr) aligned,
       47     2 info fixed bin (71),
       48     2 nonames fixed bin (71),
       49     2 com_info (temp refer (comnames.nonames)),
       50       3 (n1, n2, n3, n4) fixed bin (71);
       51 
       52 dcl  ioa_ entry options (variable);
       53 
       54 dcl (addr, substr) builtin;
       55 
       56 /*  */
       57           cptr = addr (c);
       58 	command = substr (ch, 1, name_len);
       59 
       60 	do temp = 1 to commands.nonames;
       61 
       62 	     if n1 (temp) = c1 & n2 (temp) = c2 & n3 (temp) = c3 & n4 (temp) = c4 then do;
       63 		name_ptr = addr (paths (where (temp)));
       64 		name_len = len (temp);
       65 		code = 0;
       66 		return;
       67 	     end;
       68 	end;
       69 	call ioa_ ("^a is not a legal command", command);
       70 	code = error_table_$noentry;
       71 
       72      end transform_command_;
	SOURCE FILES USED IN THIS COMPILATION.

LINE      NUMBER  DATE MODIFIED     NAME			PATHNAME
             0    11/08/82  1607.5  transform_command_.pl1            >dumps>old_dumps>recomp>transform_command_.pl1
	NAMES DECLARED IN THIS COMPILATION.

IDENTIFIER	     OFFSET    LOC STORAGE CLASS   DATA TYPE		ATTRIBUTES AND REFERENCES
								(* indicates a set context)

NAMES DECLARED BY DECLARE STATEMENT.
addr                                                   builtin function         dcl 54 ref 57 63
c                               000104 automatic       structure                level 1 unaligned dcl 34 set ref 57
c1                              000104 automatic       fixed bin(71,0)          level 2 dcl 34 set ref 62
c2                        2     000104 automatic       fixed bin(71,0)          level 2 dcl 34 set ref 62
c3                        4     000104 automatic       fixed bin(71,0)          level 2 dcl 34 set ref 62
c4                        6     000104 automatic       fixed bin(71,0)          level 2 dcl 34 set ref 62
ch                                     based           char(100)                unaligned dcl 29 ref 58
code                                   parameter       fixed bin(35,0)          dcl 27 set ref 11 65* 70*
com_info                  4            based           structure                array level 2 dcl 46
command                                based           char(32)                 dcl 31 set ref 58* 69*
commands                               based           structure                level 1 dcl 37
comnames                               based           structure                level 1 dcl 46
cptr                            000102 automatic       pointer                  dcl 31 set ref 57* 58 69
error_table_$noentry            000010 external static fixed bin(35,0)          dcl 27 ref 70
ioa_                            000012 constant        entry                    external dcl 52 ref 69
len                                    based           fixed bin(17,0)          array level 3 dcl 37 ref 64
more_info                              based           structure                array level 2 dcl 37
n1                        4            based           fixed bin(71,0)          array level 3 dcl 46 ref 62
n2                        6            based           fixed bin(71,0)          array level 3 dcl 46 ref 62
n3                       10            based           fixed bin(71,0)          array level 3 dcl 46 ref 62
n4                       12            based           fixed bin(71,0)          array level 3 dcl 46 ref 62
name_len                               parameter       fixed bin(17,0)          dcl 25 set ref 11 58 64*
name_ptr                               parameter       pointer                  dcl 24 set ref 11 58 63*
nonames                   2            based           fixed bin(71,0)          level 2 dcl 37 ref 60 63 63 63 64
paths                                  based           char(1)                  array level 2 packed unaligned dcl 37 set ref 63
substr                                                 builtin function         dcl 54 ref 58
table_ptr                              parameter       pointer                  dcl 24 ref 11 60 62 62 62 62 63 63 64
temp                            000100 automatic       fixed bin(17,0)          dcl 25 set ref 60* 62 62 62 62 63 64*
where                                  based           fixed bin(17,0)          array level 3 dcl 37 ref 63

NAME DECLARED BY EXPLICIT CONTEXT.
transform_command_              000021 constant        entry                    external dcl 11

THERE WERE NO NAMES DECLARED BY CONTEXT OR IMPLICATION.

STORAGE REQUIREMENTS FOR THIS PROGRAM.

	Object	Text	Link	Symbol	Defs	Static
Start          0       0       234         250     167         244
Length       420     167        14         134      44           0

BLOCK NAME	         STACK SIZE     TYPE		WHY NONQUICK/WHO SHARES STACK FRAME
transform_command_                  102 external procedure  is an external procedure.  

STORAGE FOR AUTOMATIC VARIABLES.

STACK FRAME                 LOC IDENTIFIER                  BLOCK NAME
transform_command_       000100 temp                        transform_command_
                         000102 cptr                        transform_command_
                         000104 c                           transform_command_

THE FOLLOWING EXTERNAL OPERATORS ARE USED BY THIS PROGRAM.
call_ext_out_desc   return              mpfx2               ext_entry

THE FOLLOWING EXTERNAL ENTRIES ARE CALLED BY THIS PROGRAM.
ioa_

THE FOLLOWING EXTERNAL VARIABLES ARE USED BY THIS PROGRAM.
error_table_$noentry




   LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC   
     11 000014        57 000026        58 000030        60 000037        62 000051        63 000074        64 000124
     65 000136        66 000137        68 000140        69 000142        70 000162        72 000166


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
