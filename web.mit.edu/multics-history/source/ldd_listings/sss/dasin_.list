	COMPILATION LISTING OF SEGMENT dasin_
	Compiled by: Multics PL/I Compiler, Release 28d, of September 14, 1983
	Compiled at: Honeywell LCPD Phoenix, System M
	Compiled on: 10/03/83  1358.1 mst Mon
	    Options: optimize map

        1 /* ******************************************************
        2*   *                                                    *
        3*   *                                                    *
        4*   * Copyright (c) 1974 by Massachusetts Institute of   *
        5*   * Technology and Honeywell Information Systems, Inc. *
        6*   *                                                    *
        7*   *                                                    *
        8*   ****************************************************** */
        9 
       10 dasin_: procedure (number) returns (float binary (63));
       11 
       12 /*     compute the arcsine, arccosine, or arctangent of a double-precision floating-point number     */
       13 
       14 declare	(number, value) float binary (63),
       15 	code_ entry(fixed bin),
       16 	(abs, atan, atand, sqrt) builtin;
       17 
       18 	value = number;
       19 	if abs(value) > 1.e0 then go to out_of_range;
       20 	return(atan(value, sqrt(-value*value+1.e0)));
       21 
       22 dacos_:	entry(number) returns(float bin(63));
       23 	value = number;
       24 	if abs(value) > 1.e0
       25 	then do;
       26 
       27 out_of_range:
       28 	     call code_(58);
       29 	     return (0e0);
       30 	     end;
       31 	return(atan(sqrt(-value*value+1.e0), value));
       32 
       33 dasind_:	entry(number) returns(float bin(63));
       34 	value = number;
       35 	if abs(value) > 1.e0 then go to out_of_range;
       36 	return(atand(value, sqrt(-value*value+1.e0)));
       37 
       38 dacosd_:	entry(number) returns(float bin(63));
       39 	value = number;
       40 	if abs(value) > 1.e0 then go to out_of_range;
       41 	return(atand(sqrt(-value*value+1.e0), value));
       42 
       43 datan_:	entry(number) returns(float bin(63));
       44 	value = number;
       45 	return(atan(value));
       46 
       47 datand_:	entry(number) returns(float bin(63));
       48 	value = number;
       49 	return(atand(value));
       50 	end;
	SOURCE FILES USED IN THIS COMPILATION.

LINE      NUMBER  DATE MODIFIED     NAME			PATHNAME
             0    10/03/83  1004.9  dasin_.pl1                        >spec>on>pl128d>dasin_.pl1
	NAMES DECLARED IN THIS COMPILATION.

IDENTIFIER	     OFFSET    LOC STORAGE CLASS   DATA TYPE		ATTRIBUTES AND REFERENCES
								(* indicates a set context)

NAMES DECLARED BY DECLARE STATEMENT.
abs                                                    builtin function         dcl 14 ref 19 24 35 40
atan                                                   builtin function         dcl 14 ref 20 31 45
atand                                                  builtin function         dcl 14 ref 36 41 49
code_                           000010 constant        entry                    external dcl 14 ref 27
number                                 parameter       float bin(63)            dcl 14 ref 10 18 22 23 33 34 38 39 43 44 47 48
sqrt                                                   builtin function         dcl 14 ref 20 31 36 41
value                           000100 automatic       float bin(63)            dcl 14 set ref 18* 19 20 20 20 23* 24 31 31 31 34*
                                                                                  35 36 36 36 39* 40 41 41 41 44* 45 48* 49

NAMES DECLARED BY EXPLICIT CONTEXT.
dacos_                          000046 constant        entry                    external dcl 22
dacosd_                         000155 constant        entry                    external dcl 38
dasin_                          000010 constant        entry                    external dcl 10
dasind_                         000117 constant        entry                    external dcl 33
datan_                          000211 constant        entry                    external dcl 43
datand_                         000230 constant        entry                    external dcl 47
out_of_range                    000064 constant        label                    dcl 27 ref 19 35 40

THERE WERE NO NAMES DECLARED BY CONTEXT OR IMPLICATION.

STORAGE REQUIREMENTS FOR THIS PROGRAM.

	Object	Text	Link	Symbol	Defs	Static
Start          0       0       326         340     245         336
Length       510     245        12         133      61           0

BLOCK NAME	         STACK SIZE     TYPE		WHY NONQUICK/WHO SHARES STACK FRAME
dasin_                              101 external procedure  is an external procedure.  

STORAGE FOR AUTOMATIC VARIABLES.

STACK FRAME                 LOC IDENTIFIER                  BLOCK NAME
dasin_                   000100 value                       dasin_

THE FOLLOWING EXTERNAL OPERATORS ARE USED BY THIS PROGRAM.
call_ext_out        return              ext_entry           dsqrt               datan               datand
datan2              datan2d

THE FOLLOWING EXTERNAL ENTRIES ARE CALLED BY THIS PROGRAM.
code_

NO EXTERNAL VARIABLES ARE USED BY THIS PROGRAM.




   LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC   
     10 000004        18 000015        19 000020        20 000026        22 000044        23 000053        24 000056
     27 000064        29 000075        31 000101        33 000115        34 000124        35 000127        36 000135
     38 000153        39 000162        40 000165        41 000173        43 000207        44 000216        45 000221
     47 000226        48 000235        49 000240


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
