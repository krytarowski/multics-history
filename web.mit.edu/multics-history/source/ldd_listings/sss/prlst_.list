	COMPILATION LISTING OF SEGMENT prlst_
	Compiled by: Multics PL/I Compiler, Release 31a, of October 12, 1988
	Compiled at: Honeywell Bull, Phoenix AZ, SysM
	Compiled on: 10/17/88  1004.8 mst Mon
	    Options: optimize map

        1 /****^  ***********************************************************
        2*        *                                                         *
        3*        * Copyright, (C) Honeywell Bull Inc., 1988                *
        4*        *                                                         *
        5*        * Copyright, (C) Honeywell Information Systems Inc., 1982 *
        6*        *                                                         *
        7*        * Copyright (c) 1972 by Massachusetts Institute of        *
        8*        * Technology and Honeywell Information Systems, Inc.      *
        9*        *                                                         *
       10*        *********************************************************** */
       11 
       12 
       13 
       14 /****^  HISTORY COMMENTS:
       15*  1) change(86-10-01,JRGray), approve(86-10-01,MCR7507),
       16*     audit(86-10-27,RWaters), install(86-11-12,MR12.0-1202):
       17*     Rewritten to ignore alignment and not put out padding characters.
       18*                                                   END HISTORY COMMENTS */
       19 
       20 
       21 /* prlst_ procedure to put a remark into the ALM listing. A newline
       22*   is added to each line. This is used by all of ALM except prwrd_
       23*   which does it himself for efficiency.
       24*
       25*   Totally recoded by Richard Gray, 2/14/85, (alm 6) to remove word
       26*   alignments and padding characters.  Note: lstlen used to be
       27*   current length of listing component in words, now the length is
       28*   in characters. */
       29 
       30 prlst_:	procedure(remark);
       31 dcl	remark char(*);
       32 dcl	(length, substr) builtin;
       33 dcl	(strstart, strlen, strmaxlen) fixed bin(21);
       34 dcl	listing_segment char(strlen) based(list);
       35 dcl	ec fixed bin(35);
       36 
       37 dcl	eb_data_$list_component fixed bin external;
       38 dcl	eb_data_$listing_max_length fixed bin(19) external;
       39 dcl	eb_data_$who_am_I char(12) external;
       40 dcl	error_table_$segknown fixed bin(35) external;
       41 dcl	utils_$abort external entry;
       42 dcl	com_err_ entry options(variable);
       43 dcl	msf_manager_$get_ptr entry(ptr, fixed bin, bit(1), ptr, fixed bin(24), fixed bin(35));
       44 dcl	NL char(1) int static options(constant) init("
       45 ");
       46 
  1     1 /* BEGIN INCLUDE FILE segnfo.incl.pl1 for alm  (see also segnfo.incl.alm) */
  1     2 
  1     3 
  1     4 /****^  HISTORY COMMENTS:
  1     5*  1) change(86-10-01,JRGray), approve(86-10-01,MCR7507),
  1     6*     audit(86-10-27,RWaters), install(86-11-12,MR12.0-1202):
  1     7*     Modified to keep a ptr to the list FCB. This is part of the fix that
  1     8*     removes PAD characters from the listing segment.
  1     9*                                                   END HISTORY COMMENTS */
  1    10 
  1    11 declare	1 eb_data_$segnfo	ext aligned,
  1    12 	  2 (text, source, list, list_fcb, scrtch) ptr aligned,
  1    13 	  2 (txtlen, srclen, lstlen) fixed bin (26) aligned;
  1    14 
  1    15 /* END INCLUDE FILE segnfo.incl.pl1 */
       47 
       48 
  2     1 
  2     2 
  2     3 
  2     4 	/* the include file LSTCOM */
  2     5 
  2     6 declare 1 eb_data_$lstcom ext aligned,
  2     7         2 tnolst fixed bin (17) ;
  2     8 
  2     9 
  2    10 	/* end of the include file LSTCOM */
  2    11 
       49 
       50 
  3     1 /* Begin include file alm_options.incl.pl1.
  3     2*   This file defines the external cells used to pass options to the various modules of the assembler.
  3     3*   Created on 03/17/72 at 01:39:44 by R F Mabee.
  3     4*   Last modified on 07/23/72 at 22:02:34 by R F Mabee. */
  3     5 
  3     6  declare	1 eb_data_$alm_options external static aligned,
  3     7 	  2 tnewcall fixed binary,		/* Use new call/save/return operators. */
  3     8 	  2 tnewmachine fixed binary,		/* Use followon hardware instruction set. */
  3     9 	  2 tnewobject fixed binary,		/* Use new object segment format. */
  3    10 	  2 tcheckcompatibility fixed binary,	/* Check for instructions changed in followon. */
  3    11 	  2 tquietsw fixed binary,		/* Suppress online printout of error messages. */
  3    12 	  2 tfirstreftrap fixed binary,	/* A first reference trap procedure was given. */
  3    13 	  2 tnoxref fixed binary;		/* Zero if cross reference if to be produced. */
  3    14 
  3    15 /* End of include file alm_options.incl.pl1  */
       51 
       52 
       53 	if tnolst ^= 0 then return; /* no listing wanted */
       54 	strstart = lstlen + 1;
       55 	strlen = length(remark) + 1;
       56 	strmaxlen = 4*eb_data_$listing_max_length - lstlen;
       57 	if strlen > strmaxlen then do;
       58 		lstlen = lstlen + strmaxlen;
       59 		substr(listing_segment, strstart, strmaxlen) = substr(remark, 1, strmaxlen);
       60 		call new_list_seg;
       61 		lstlen = strlen - strmaxlen;
       62 		substr(listing_segment, 1, lstlen) = substr(remark || NL, strmaxlen+1, lstlen);
       63 		return;
       64 	  end;
       65 	lstlen = lstlen + strlen;
       66 	substr(listing_segment, strstart, strlen) = remark || NL;
       67 	return;
       68 
       69 new_list_seg:	entry;
       70 	eb_data_$list_component = eb_data_$list_component + 1;
       71 	call msf_manager_$get_ptr(eb_data_$segnfo.list_fcb, eb_data_$list_component, "1"b, eb_data_$segnfo.list, 0, ec);
       72 	eb_data_$segnfo.lstlen = 0;
       73 	if ec ^= 0 then  if ec ^= error_table_$segknown then do;
       74 		if tquietsw ^= 1 then call com_err_(ec, eb_data_$who_am_I, "Listing segment.");
       75 		call utils_$abort;
       76 	  end;
       77 end prlst_;
	SOURCE FILES USED IN THIS COMPILATION.

LINE      NUMBER  DATE MODIFIED     NAME			PATHNAME
             0    10/17/88  0938.4  prlst_.pl1                        >spec>install>1170>prlst_.pl1
47           1    11/12/86  1103.0  segnfo.incl.pl1                   >ldd>include>segnfo.incl.pl1
49           2    05/06/74  1742.2  lstcom.incl.pl1                   >ldd>include>lstcom.incl.pl1
51           3    05/06/74  1740.2  alm_options.incl.pl1              >ldd>include>alm_options.incl.pl1
	NAMES DECLARED IN THIS COMPILATION.

IDENTIFIER	     OFFSET    LOC STORAGE CLASS   DATA TYPE		ATTRIBUTES AND REFERENCES
								(* indicates a set context)

NAMES DECLARED BY DECLARE STATEMENT.
NL                              000247 constant        char(1)                  initial packed unaligned dcl 44 ref 62 66
com_err_                        000022 constant        entry                    external dcl 42 ref 74
eb_data_$alm_options            000032 external static structure                level 1 dcl 3-6
eb_data_$list_component         000010 external static fixed bin(17,0)          dcl 37 set ref 70* 70 71*
eb_data_$listing_max_length     000012 external static fixed bin(19,0)          dcl 38 ref 56
eb_data_$lstcom                 000030 external static structure                level 1 dcl 2-6
eb_data_$segnfo                 000026 external static structure                level 1 dcl 1-11
eb_data_$who_am_I               000014 external static char(12)                 packed unaligned dcl 39 set ref 74*
ec                              000103 automatic       fixed bin(35,0)          dcl 35 set ref 71* 73 73 74*
error_table_$segknown           000016 external static fixed bin(35,0)          dcl 40 ref 73
length                                                 builtin function         dcl 32 ref 55
list                      4     000026 external static pointer                  level 2 dcl 1-11 set ref 59 62 66 71*
list_fcb                  6     000026 external static pointer                  level 2 dcl 1-11 set ref 71*
listing_segment                        based           char                     packed unaligned dcl 34 set ref 59* 62* 66*
lstlen                   14     000026 external static fixed bin(26,0)          level 2 dcl 1-11 set ref 54 56 58* 58 61* 62 62 65*
                                                                                  65 72*
msf_manager_$get_ptr            000024 constant        entry                    external dcl 43 ref 71
remark                                 parameter       char                     packed unaligned dcl 31 ref 30 55 59 62 66
strlen                          000101 automatic       fixed bin(21,0)          dcl 33 set ref 55* 57 59 61 62 65 66 66
strmaxlen                       000102 automatic       fixed bin(21,0)          dcl 33 set ref 56* 57 58 59 59 61 62
strstart                        000100 automatic       fixed bin(21,0)          dcl 33 set ref 54* 59 66
substr                                                 builtin function         dcl 32 set ref 59* 59 62* 62 66*
tnolst                          000030 external static fixed bin(17,0)          level 2 dcl 2-6 ref 53
tquietsw                  4     000032 external static fixed bin(17,0)          level 2 dcl 3-6 ref 74
utils_$abort                    000020 constant        entry                    external dcl 41 ref 75

NAMES DECLARED BY EXPLICIT CONTEXT.
new_list_seg                    000147 constant        entry                    external dcl 69 ref 60
prlst_                          000013 constant        entry                    external dcl 30

THERE WERE NO NAMES DECLARED BY CONTEXT OR IMPLICATION.

STORAGE REQUIREMENTS FOR THIS PROGRAM.

	Object	Text	Link	Symbol	Defs	Static
Start          0       0       412         446     250         422
Length       670     250        34         206     142           0

BLOCK NAME	         STACK SIZE     TYPE		WHY NONQUICK/WHO SHARES STACK FRAME
prlst_                              102 external procedure  is an external procedure.  

STORAGE FOR AUTOMATIC VARIABLES.

STACK FRAME                 LOC IDENTIFIER                  BLOCK NAME
prlst_                   000100 strstart                    prlst_
                         000101 strlen                      prlst_
                         000102 strmaxlen                   prlst_
                         000103 ec                          prlst_

THE FOLLOWING EXTERNAL OPERATORS ARE USED BY THIS PROGRAM.
alloc_char_temp     call_ext_in         call_ext_out_desc   call_ext_out        return_mac          shorten_stack
ext_entry           ext_entry_desc

THE FOLLOWING EXTERNAL ENTRIES ARE CALLED BY THIS PROGRAM.
com_err_                      msf_manager_$get_ptr          utils_$abort

THE FOLLOWING EXTERNAL VARIABLES ARE USED BY THIS PROGRAM.
eb_data_$alm_options          eb_data_$list_component       eb_data_$listing_max_length   eb_data_$lstcom
eb_data_$segnfo               eb_data_$who_am_I             error_table_$segknown




   LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC   
     30 000010        53 000026        54 000030        55 000034        56 000037        57 000043        58 000045
     59 000046        60 000055        61 000061        62 000066        63 000111        65 000113        66 000115
     67 000144        69 000146        70 000154        71 000156        72 000202        73 000205        74 000211
     75 000241        77 000246


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
