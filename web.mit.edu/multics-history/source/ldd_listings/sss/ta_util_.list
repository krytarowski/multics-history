	COMPILATION LISTING OF SEGMENT ta_util_
	Compiled by: Multics PL/I Compiler, Release 28d, of October 4, 1983
	Compiled at: Honeywell Multics Op. - System M
	Compiled on: 02/16/84  1257.2 mst Thu
	    Options: optimize map

        1 /* ***********************************************************
        2*   *                                                         *
        3*   * Copyright, (C) Honeywell Information Systems Inc., 1982 *
        4*   *                                                         *
        5*   * Copyright (c) 1972 by Massachusetts Institute of        *
        6*   * Technology and Honeywell Information Systems, Inc.      *
        7*   *                                                         *
        8*   *********************************************************** */
        9 
       10 
       11 ta_util_: proc; return;
       12 
       13 /* This module handles random utility functions for tape_archive.
       14*
       15*   Written 06/29/77 by C. D. Tavares.
       16*   Last modified 09/24/79 by CDT to make it understand ".." and ".".
       17**/
       18 





       19 
       20 get_next_token: entry (input_line) returns (char (168));
       21 
       22 dcl  input_line char (*) parameter;
       23 
       24 dcl  output_token char (168) varying,
       25      i fixed bin;
       26 
       27 dcl (search, index, ltrim, length, substr) builtin;
       28 
       29 dcl  TAB_SP char (2) static options (constant) initial ("	 ");
       30 
       31 	output_token = "";
       32 
       33 	input_line = ltrim (input_line, TAB_SP);
       34 
       35 	if substr (input_line, 1, 1) = """" then do;
       36 	     do while (substr (input_line, 1, 1) = """");
       37 		i = index (substr (input_line, 2), """") + 1;
       38 		if i = 0 then i = length (input_line);
       39 		output_token = output_token || substr (input_line, 2, i-1);
       40 		if i = length (input_line) then input_line = "";
       41 		else input_line = substr (input_line, i+1);
       42 	     end;
       43 
       44 	     return (substr (output_token, 1, length (output_token) - 1));
       45 	end;
       46 
       47 	if substr (input_line, 1, 1) = "." then do;
       48 	     if substr (input_line, 1, 2) = ".." then do;
       49 		input_line = substr (input_line, 3);
       50 		return ("..");
       51 	     end;
       52 
       53 	     else do;				/* single dot */
       54 		output_token = input_line;
       55 		input_line = "";
       56 		return (output_token);
       57 	     end;
       58 	end;
       59 
       60 	i = search (input_line, TAB_SP) - 1;
       61 	if i = -1 then i = length (input_line);
       62 	output_token = substr (input_line, 1, i);
       63 	if i = length (input_line) then input_line = "";
       64 	else input_line = substr (input_line, i+1);
       65 
       66 	return (output_token);
       67      end ta_util_;
	SOURCE FILES USED IN THIS COMPILATION.

LINE      NUMBER  DATE MODIFIED     NAME			PATHNAME
             0    02/16/84  1249.5  ta_util_.pl1                      >spec>on>mtape>ta_util_.pl1
	NAMES DECLARED IN THIS COMPILATION.

IDENTIFIER	     OFFSET    LOC STORAGE CLASS   DATA TYPE		ATTRIBUTES AND REFERENCES
								(* indicates a set context)

NAMES DECLARED BY DECLARE STATEMENT.
TAB_SP                                 constant        char(2)                  initial unaligned dcl 29 ref 33 60
i                               000153 automatic       fixed bin(17,0)          dcl 24 set ref 37* 38 38* 39 40 41 60* 61 61* 62 63
                                                                                  64
index                                                  builtin function         dcl 27 ref 37
input_line                             parameter       char                     unaligned dcl 22 set ref 20 33* 33 35 36 37 38 39 40
                                                                                  40* 41* 41 47 48 49* 49 54 55* 60 61 62 63 63* 64*
                                                                                  64
length                                                 builtin function         dcl 27 ref 38 40 44 61 63
ltrim                                                  builtin function         dcl 27 ref 33
output_token                    000100 automatic       varying char(168)        dcl 24 set ref 31* 39* 39 44 44 54* 56 62* 66
search                                                 builtin function         dcl 27 ref 60
substr                                                 builtin function         dcl 27 ref 35 36 37 39 41 44 47 48 49 62 64

NAMES DECLARED BY EXPLICIT CONTEXT.
get_next_token                  000032 constant        entry                    external dcl 20
ta_util_                        000011 constant        entry                    external dcl 11

THERE WERE NO NAMES DECLARED BY CONTEXT OR IMPLICATION.

STORAGE REQUIREMENTS FOR THIS PROGRAM.

	Object	Text	Link	Symbol	Defs	Static
Start          0       0       774        1004     740        1004
Length      1142     740        10         121      33           0

BLOCK NAME	         STACK SIZE     TYPE		WHY NONQUICK/WHO SHARES STACK FRAME
ta_util_                            112 external procedure  is an external procedure.  

STORAGE FOR AUTOMATIC VARIABLES.

STACK FRAME                 LOC IDENTIFIER                  BLOCK NAME
ta_util_                 000100 output_token                ta_util_
                         000153 i                           ta_util_

THE FOLLOWING EXTERNAL OPERATORS ARE USED BY THIS PROGRAM.
return              signal              ext_entry           ext_entry_desc

NO EXTERNAL ENTRIES ARE CALLED BY THIS PROGRAM.

NO EXTERNAL VARIABLES ARE USED BY THIS PROGRAM.




   LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC   
     11 000010        11 000020        20 000026        31 000046        33 000047        35 000074        36 000102
     37 000110        38 000123        39 000126        40 000142        41 000152        42 000161        44 000162
     47 000201        48 000203        49 000207        50 000214        54 000227        55 000236        56 000242
     60 000256        61 000267        62 000273        63 000302        64 000312        66 000321


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
