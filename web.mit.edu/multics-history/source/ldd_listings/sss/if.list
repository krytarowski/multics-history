ASSEMBLY LISTING OF SEGMENT >spec>h>bos.3.12>if.alm                          
ASSEMBLED ON:	11/18/82  0944.6 mst Thu
OPTIONS USED:	list 
ASSEMBLED BY:	ALM Version  6.4  April 1981    
ASSEMBLER CREATED:	11/03/82  1423.6 mst Wed

                                     1  " ***********************************************************
                                     2  " *                                                         *
                                     3  " * Copyright, (C) Honeywell Information Systems Inc., 1982 *
                                     4  " *                                                         *
                                     5  " ***********************************************************
                                     6  " IF command for BOS.
                                     7  " Modified 10/7/76 by Noel I. Morris
                                     8  
                                     9  
                                    10  "  ******************************************************
                                    11  "  *                                                    *
                                    12  "  *                                                    *
                                    13  "  * Copyright (c) 1972 by Massachusetts Institute of   *
                                    14  "  * Technology and Honeywell Information Systems, Inc. *
                                    15  "  *                                                    *
                                    16  "  *                                                    *
                                    17  "  ******************************************************
                                    18  
                                    19  
    000000                          20  	name	if
                                    21  
                                    22  " Usage (in BOS):
                                    23  "	IF <NOT | ""> key <EQ num | NEQ num | ""> COMMAND ARG1 ... ARGn
                                    24  "
                                    25  " Recognized keys are:
                                    26  "	FDUMP				(fdump state)
                                    27  "	SHUT				(shutdown state)
                                    28  "	SWITCH mask			(processor switches)
                                    29  "	FLAG flag_number			(flag bits)
                                    30  "	SSENB				(Multics storage system enabled)
                                    31  "	RTB <MANUAL | CRASH | SHUT | CALL>	(reason for BOS entry)
                                    32  
                                    33  
                                    34  	include	bosequ
                                   1-1  " Begin include file ...... bosequ.incl.alm
                                   1-2  " Modified 8/25/76 by N. I. Morris
                                   1-3  " Modified 8/79 by R.J.C. Kissel to expand BOS.
                                   1-4  " Modified November 1981 by C. Hornig to add pgmorg.
                                   1-5  " Modified October 1982 by J. Bongiovanni to take it out
                                   1-6  
                        000000     1-7  	bool	ds,0		descriptor segment
                        000001     1-8  	bool	tmp,1		temp seg
                        000002     1-9  	bool	bf,2		buffer segment for save/restor
                        000003    1-10  	bool	pgm,3		program in control
                        000004    1-11  	bool	xs1,4		spare segment
                        000005    1-12  	bool	xs2,5		spare segment
                        000005    1-13  	bool	fgb,5		flagbox segment
                        000006    1-14  	bool	com,6		common
                        000007    1-15  	bool	mem,7		all memory
                                  1-16  
                        000017    1-17  	equ	arglen,15		max number of args from scan
                                  1-18  
                        004000    1-19  	bool	runcom_bit,4000	runcom bit in dir entry
                        002000    1-20  	bool	firmware_bit,2000	firmware bit in dir entry
                                  1-21  
                        012000    1-22  	bool	utilorg,12000	origin of utility package
                                  1-23  
                                  1-24  " End of include file ...... bosequ.incl.alm
                                    35  
                                    36  " 
                                    37  
    000000  0a   000251 7420 00     38  	stx2	x2_save
    000001  aa   012271 7020 00     39  	tsx2	init_io		" initialize things
    000002  aa   012210 7020 00     40  	tsx2	cvinit
                                    41  
    000003  0a   000251 2220 00     42  	ldx2	x2_save
    000004  aa  7 00000 2211 12     43  	ldx1	mem|0,2
                                    44  
    000005  aa  7 00001 2351 11     45  test_arg:	lda	mem|1,1		" first arg
    000006  aa   000000 6270 00     46  	eax7	0		" initialize for search
    000007  aa   016300 5202 02     47  	rpt	ntable/2,2,tze	" search table
    000010  0a   000014 1150 17     48  	cmpa	table,7
    000011  0a   000211 6064 00     49  	ttn	unrecognized_operand
                                    50  
    000012  aa   777777 7160 17     51  	xec	-1,7		" execute table entry
    000013  0a   000132 7100 00     52  	tra	check_number	" and test result
                                    53  
                                    54  
    000014                          55  table:
    000014  aa  202 020 454 663     56  	bci	"   not"
    000015  0a   000032 7100 00     57  	tra	if_not
                                    58  
    000016  aa  202 062 306 463     59  	bci	"  shut"
    000017  0a   000035 7100 00     60  	tra	check_shutdown_state
                                    61  
    000020  aa  202 624 644 447     62  	bci	" fdump"
    000021  aa  6 02023 2351 00     63  	lda	com|fdump_state
                                    64  
    000022  aa  626 631 632 330     65  	bci	"switch"
    000023  0a   000064 7100 00     66  	tra	if_switch
                                    67  
    000024  aa  202 026 432 127     68  	bci	"  flag"
    000025  0a   000056 7100 00     69  	tra	check_flag
                                    70  
    000026  aa  206 262 254 522     71  	bci	" ssenb"
    000027  0a   000070 7100 00     72  	tra	if_ssenb
                                    73  
    000030  aa  202 020 516 322     74  	bci	"   rtb"
    000031  0a   000073 7100 00     75  	tra	if_rtb
                                    76  
                        000016      77  	equ	ntable,*-table
                                    78  
                                    79  
    000032  0a   000250 4500 00     80  if_not:	stz	eqsw		" complement EQ switch
    000033  aa   000001 6210 11     81  	eax1	1,1		" step to next parameter
    000034  0a   000005 7100 00     82  	tra	test_arg
                                    83  
                                    84  
                                    85  "
    000035                          86  check_shutdown_state:
    000035  aa   012306 7020 00     87  	tsx2	find_root		" Get devt word for root.
    000036  0a   000235 7100 00     88  	tra	root_err
    000037  0a   000260 7550 00     89  	sta	root_devt
                                    90  
    000040  aa   000000 2350 07     91  	lda	LABEL_ADDR,dl	" Get record address of disk label.
    000041  aa   012216 7020 00     92  	tsx2	mulbos		" Convert to BOS sector address.
    000042  0a   000260 0000 00     93  	arg	root_devt
    000043  0a   000235 7100 00     94  	tra	root_err
                                    95  
    000044  0a   000400 3750 00     96  	ana	=o777777770000	" Leave only the sector address.
    000045  0a   000401 0350 00     97  	adla	=v24/label.root/64,12/1
    000046  aa   012211 7020 00     98  	tsx2	rdev		" Read root volume label.
    000047  0a   000260 0000 00     99  	arg	root_devt
    000050  0a   000300 0110 00    100  	nop	label_buffer
    000051  0a   000235 7100 00    101  	tra	root_err
                                   102  
    000052  0a   000300 2350 00    103  	lda	label_buffer+label.root-label.root/64*64 " See if it's really the root.
    000053  0a   000235 6050 00    104  	tpl	root_err		" If not, error.
                                   105  
    000054  0a   000302 2350 00    106  	lda	label_buffer+label.shutdown_state-label.shutdown_state/64*64 
    000055  0a   000132 7100 00    107  	tra	check_number	" Get shutdown state.
                                   108  
                                   109  
    000056                         110  check_flag:
    000056  aa   400000 2350 03    111  	lda	=o400000,du	" get high-order bit
    000057  aa   000001 6210 11    112  	eax1	1,1		" step arg index
    000060  aa  7 00021 2361 11    113  	ldq	mem|arglen+1+1,1	" get bit position
    000061  aa   777777 7710 06    114  	arl	-1,ql		" shift bit to position
    000062  aa  5 00000 3751 00    115  	ana	fgb|fgbx.flags	" mask the flagbox
    000063  0a   000132 7100 00    116  	tra	check_number	" and test the result
                                   117  
                                   118  
    000064                         119  if_switch:
    000064  aa   000000 2310 00    120  	rsw	0		" read switches
    000065  aa   000001 6210 11    121  	eax1	1,1		" step parameter index
    000066  aa  7 00001 3751 11    122  	ana	mem|1,1		" mask the switches
    000067  0a   000132 7100 00    123  	tra	check_number
                                   124  
                                   125  
    000070  aa  5 00003 2351 00    126  if_ssenb:	lda	fgb|fgbx.rtb	" check ssenb bit
    000071  aa   400000 3750 03    127  	ana	fgbx.ssenb,du
    000072  0a   000132 7100 00    128  	tra	check_number
                                   129  
                                   130  " 
                                   131  
    000073  aa   000001 6210 11    132  if_rtb:	eax1	1,1		" step parameter index
    000074  aa  7 00001 2351 11    133  	lda	mem|1,1		" get RTB keyword
    000075  aa   000000 6270 00    134  	eax7	0		" search table of keywords
    000076  aa   010300 5202 03    135  	rpt	nrtbtbl/3,3,tze
    000077  0a   000116 1150 17    136  	cmpa	rtbtbl,7
    000100  0a   000211 6064 00    137  	ttn	unrecognized_operand
                                   138  
    000101  aa  5 00003 2351 00    139  	lda	fgb|fgbx.rtb	" get RTB flags
    000102  aa   000000 2360 07    140  	ldq	0,dl		" clar Q
    000103  aa   000006 7730 00    141  	lrl	6		" transmogrify the bos_entry code
    000104  aa   000001 7360 00    142  	qls	1		" 0 => 1,: 1 => 2,: 2 => 4
    000105  0a   000107 6010 00    143  	tnz	*+2
    000106  aa   010000 2760 03    144  	orq	=1b23,du
    000107  aa   000006 7370 00    145  	lls	6		" transmogrified code back in A
    000110  aa   777776 6750 17    146  	era	-2,7		" test bits
    000111  aa   777777 3750 17    147  	ana	-1,7
    000112  0a   000114 6000 00    148  	tze	*+2
    000113  aa   000001 3350 07    149  	lca	1,dl
    000114  0a   000402 6750 00    150  	era	=-1
    000115  0a   000132 7100 00    151  	tra	check_number
                                   152  
    000116                         153  rtbtbl:
    000116  aa  442 145 642 143    154  	bci	"manual"		" (bos_entry ^= 1)
    000117  aa   000000 000000     155  	vfd	18/0
    000120  aa   000000 000002     156  	vfd	18/0,18/2
                                   157  
    000121  aa  202 351 216 230    158  	bci	" crash"		" ^call & (bos_entry ^= 0)
    000122  aa   200000 000000     159  	vfd	18/fgbx.call_bos
    000123  aa   200000 000001     160  	vfd	18/fgbx.call_bos,18/1
                                   161  
    000124  aa  202 062 306 463    162  	bci	"  shut"		" shut & (bos_entry = 1)
    000125  aa   100000 000000     163  	vfd	18/fgbx.shut
    000126  aa   100000 000005     164  	vfd	18/fgbx.shut,18/5
                                   165  
    000127  aa  202 023 214 343    166  	bci	"  call"		" call_bos & (bos_entry = 1)
    000130  aa   200000 000000     167  	vfd	18/fgbx.call_bos
    000131  aa   200000 000005     168  	vfd	18/fgbx.call_bos,18/5
                                   169  
                        000014     170  	equ	nrtbtbl,*-rtbtbl
                                   171  
                                   172  " 
                                   173  
    000132                         174  check_number:
    000132  0a   000256 7550 00    175  	sta	unknown
                                   176  
    000133  aa  7 00002 2351 11    177  	lda	mem|2,1		" can be either EQ or NEQ
    000134  aa  7 00003 2361 11    178  	ldq	mem|3,1		" number to compare to
    000135  0a   000403 1150 00    179  	cmpa	=h    eq
    000136  0a   000145 6000 00    180  	tze	cmp_eq
    000137  0a   000404 1150 00    181  	cmpa	=h   neq
    000140  0a   000143 6000 00    182  	tze	cmp_neq
                                   183  
    000141  aa   000000 2360 07    184  	ldq	0,dl		" neither EQ nor NEQ
    000142  aa   777776 6210 11    185  	eax1	-2,1		" Step index backwards.
    000143  aa   000001 3350 07    186  cmp_neq:	lca	1,dl		" NEQ -- complement sense of test
    000144  0a   000250 6550 00    187  	ersa	eqsw
                                   188  
    000145  0a   000256 6760 00    189  cmp_eq:	erq	unknown		" compare against unknown
    000146  0a   000150 6000 00    190  	tze	*+2
    000147  aa   000001 3360 07    191  	lcq	1,dl
    000150  0a   000250 6760 00    192  	erq	eqsw		" set sense of compare
    000151  0a   000153 6010 00    193  	tnz	ifso		" nonzero => true
    000152  0a   000206 7100 00    194  	tra	ifnot		" zero -> false
                                   195  
                                   196  " 
                                   197  "		Set up for chaining to next command.
                                   198  
    000153  aa   000001 3350 07    199  ifso:	lca	1,dl
    000154  aa  7 00004 1151 11    200  	cmpa	mem|4,1
    000155  0a   000225 6000 00    201  	tze	not_enough_args
                                   202  
    000156  0a   000251 2220 00    203  	ldx2	x2_save
    000157  aa  7 00000 7201 12    204  	lxl0	mem|0,2		" get location of command line
    000160  0a   000253 7400 00    205  	stx0	lineloc		" save it
    000161  0a   000252 2400 00    206  	orsx0	linedesc		" place address in descriptor
                                   207  
    000162  aa  7 00044 2361 11    208  	ldq	mem|2*(arglen+1)+4,1" get descriptor for command
    000163  aa   077777 3760 03    209  	anq	=o077777,du	" remove segment tag
    000164  0a   000253 1360 00    210  	sblq	lineloc		" compute offset in line
    000165  aa   000022 7720 00    211  	qrl	18		" in QL
    000166  aa   000006 4020 07    212  	mpy	6,dl		" get character offset
    000167  0a   000254 7560 00    213  	stq	off		" and save
                                   214  
    000170  aa  7 00044 2351 11    215  	lda	mem|2*(arglen+1)+4,1" get command descriptor again
    000171  0a   000255 7550 00    216  	sta	desc		" save descriptor
    000172  aa   000017 7710 00    217  	arl	15		" character position in AL
    000173  aa   000007 3750 07    218  	ana	=o7,dl		" mask it
    000174  0a   000254 0350 00    219  	adla	off		" compute character offset
    000175  aa   000000 5310 00    220  	neg	0		" negate
    000176  aa   000124 0350 07    221  	adla	84,dl		" compute characters remaining in line
    000177  0a   000255 7510 03    222  	stca	desc,03		" insert length in descriptor
                                   223  
    000200  aa  0 20120 1005 20    224  	mlr	(pr,id),(pr,id),fill(20) " move the line down
    000201  0a   000255 0000 00    225  	arg	desc
    000202  0a   000252 0000 00    226  	arg	linedesc
                                   227  
    000203  0a   000251 2220 00    228  	ldx2	x2_save
    000204  aa   000000 2350 07    229  	lda	0,dl		" indicate command line to be rescanned
    000205  aa  7 00001 7101 12    230  	tra	mem|1,2
                                   231  
                                   232  
    000206  aa   000001 3350 07    233  ifnot:	lca	1,dl
    000207  0a   000251 2220 00    234  	ldx2	x2_save
    000210  aa  7 00001 7101 12    235  	tra	mem|1,2
                                   236  "
    000211                         237  unrecognized_operand:
    000211  0a   000402 1150 00    238  	cmpa	=-1
    000212  0a   000225 6000 00    239  	tze	not_enough_args
    000213  0a   000257 7550 00    240  	sta	geword
    000214  aa   012241 7020 00    241  	tsx2	erpt
    000215  aa  027 165 156 162    242  	acc	"unrecognized keyword ^g"
    000216  aa  145 143 157 147
    000217  aa  156 151 172 145
    000220  aa  144 040 153 145
    000221  aa  171 167 157 162
    000222  aa  144 040 136 147
    000223  0a   000257 0000 00    243  	arg	geword
    000224  0a   000206 7100 00    244  	tra	ifnot
                                   245  
    000225                         246  not_enough_args:
    000225  aa   012241 7020 00    247  	tsx2	erpt
    000226  aa  024 156 157 164    248  	acc	"not enough arguments"
    000227  aa  040 145 156 157
    000230  aa  165 147 150 040
    000231  aa  141 162 147 165
    000232  aa  155 145 156 164
    000233  aa  163 000 000 000
    000234  0a   000206 7100 00    249  	tra	ifnot
                                   250  
    000235  aa   012241 7020 00    251  root_err:	tsx2	erpt
    000236  aa  035 165 156 141    252  	acc	"unable to locate root volume."
    000237  aa  142 154 145 040
    000240  aa  164 157 040 154
    000241  aa  157 143 141 164
    000242  aa  145 040 162 157
    000243  aa  157 164 040 166
    000244  aa  157 154 165 155
    000245  aa  145 056 000 000
    000246  0a   000206 7100 00    253  	tra	ifnot
                                   254  
    000247                         255  ttyrequest:
    000247  0a   000206 7100 00    256  	tra	ifnot		" we can never get here, I hope
                                   257  
                                   258  
                                   259  
    000250  aa   777777 777777     260  eqsw:	dec	-1
    000251  aa   000000 000000     261  x2_save:	zero
    000252  aa   700000 020124     262  linedesc:	desc6a	mem|0,84
    000253  aa   000000 000000     263  lineloc:	zero
    000254  aa   000000 000000     264  off:	zero
    000255  aa   000000 000000     265  desc:	zero
    000256  aa   000000 000000     266  unknown:	zero
    000257  aa   000000 000000     267  geword:	zero
    000260                         268  root_devt:bss	,1
                                   269  
    000261  aa   000000 0110 03    270  	sixtyfour
    000262  aa   000000 0110 03
    000263  aa   000000 0110 03
    000264  aa   000000 0110 03
    000265  aa   000000 0110 03
    000266  aa   000000 0110 03
    000267  aa   000000 0110 03
    000270  aa   000000 0110 03
    000271  aa   000000 0110 03
    000272  aa   000000 0110 03
    000273  aa   000000 0110 03
    000274  aa   000000 0110 03
    000275  aa   000000 0110 03
    000276  aa   000000 0110 03
    000277  aa   000000 0110 03
    000300                         271  label_buffer:
    000300                         272  	bss	,64
                                   273  
                                   274  
                                   275  " 
                                   276  
                                   277  	include	fgbx
                                   2-1  
                                   2-2  "BEGIN INCLUDE FILE fgbx.incl.alm
                                   2-3  
                                   2-4  "	Reconstructed by BSG 8/30/78 from a listing of Noel's;
                                   2-5  "	Apparently, the version of 10/07/76 got lost.
                                   2-6  "	Modified 8/79 by R.J.C. Kissel to add 32 words for FNP blast message.
                                   2-7  "	Modified 7/82 BIM -- 8 words for sentinel, and sentinel
                                   2-8  "	macro.
                                   2-9  
                                  2-10  "
                                  2-11  "	Structure fgbx
                                  2-12  "
                        000100    2-13  	equ	fgbx_size,64
                                  2-14  
                        000000    2-15  	equ	fgbx.flags_word,0
                        400000    2-16  	bool	fgbx.flags,400000		"DU
                                  2-17  
                        000001    2-18  	equ	fgbx.slt_segno,1		"UPPER
                                  2-19  
                        000002    2-20  	equ	fgbx.cpus,2		"LEVEL 2
                                  2-21  
                        000034    2-22  	equ	fgbx.ports_shift,28
                        000571    2-23  	equ	fgbx.ports_mask,000377
                        000025    2-24  	equ	fgbx.tags_shift,21
                        000007    2-25  	equ	fgbx.tags_mask,000007
                                  2-26  	
                        000003    2-27  	equ	fgbx.rtb,3		"LEVEL 2
                                  2-28  
                        400000    2-29  	bool	fgbx.ssenb,400000		"DU
                        200000    2-30  	bool	fgbx.call_bos,200000	"DU
                        100000    2-31  	bool	fgbx.shut,100000		"DU
                        040000    2-32  	bool	fgbx.mess,040000		"DU
                        020000    2-33  	bool	fgbx.alert,020000		"DU
                        000000    2-34  	equ	fgbx.bos_entry_shift,0
                        000077    2-35  	bool	fgbx.bos_entry_mask,000077
                                  2-36  
                        000004    2-37  	equ	fgbx.sentinel,4		"DOUBLE
                        000014    2-38  	equ	fgbx.sst_sdw,12		"DOUBLE
                        000016    2-39  	equ	fgbx.hc_dbr,14		"DOUBLE
                        000020    2-40  	equ	fgbx.message,16		"DOUBLE
                        000040    2-41  	equ	fgbx.fnp_blast,32		"DOUBLE
                                  2-42  
                                  2-43  	macro	flagbox_sentinel
                              1   2-44  	aci	"Flagbox && Toehold Valid",32
                              2   2-45  &end
                                  2-46  
                                  2-47       "END INCLUDE FILE fgbx.incl.alm
                                   278  
                                   279  
                                   280  
                                   281  	include	disk_pack
                                   3-1  
                                   3-2  
                                   3-3       "BEGIN INCLUDE FILE disk_pack.incl.alm
                                   3-4  
                                   3-5  
                                   3-6  	"Created 04/02/82  1735.7 est Fri by convert_include_file,
                                   3-7  	"   Version of 12/01/81  1540.3 est Tue.
                                   3-8  
                                   3-9  	"Made from >cdd>include>x>disk_pack.incl.pl1,
                                  3-10  	"   modified 04/02/82  1145.0 est Fri
                                  3-11  
                                  3-12  
                        000000    3-13  	equ	LABEL_ADDR,0		" MANIFEST
                        000001    3-14  	equ	VOLMAP_ADDR,1		" MANIFEST
                        000004    3-15  	equ	DUMPER_BIT_MAP_ADDR,4	" MANIFEST
                        000006    3-16  	equ	VTOC_MAP_ADDR,6		" MANIFEST
                        000010    3-17  	equ	VTOC_ORIGIN,8		" MANIFEST
                        000003    3-18  	equ	SECTORS_PER_VTOCE,3		" MANIFEST
                        000005    3-19  	equ	VTOCES_PER_RECORD,5		" MANIFEST
                        001750    3-20  	equ	DEFAULT_HCPART_SIZE,1000	" MANIFEST
                        076036    3-21  	equ	MAX_VTOCE_PER_PACK,31774	" MANIFEST
                                  3-22  
                                  3-23       "END INCLUDE FILE disk_pack.incl.alm
                                   282  
                                   283  	include	fs_vol_label
                                   4-1  
                                   4-2  
                                   4-3       "BEGIN INCLUDE FILE fs_vol_label.incl.alm
                                   4-4  
                                   4-5  
                                   4-6  	"Created 03/27/82  1422.1 est Sat by convert_include_file,
                                   4-7  	"   Version of 12/01/81  1540.3 est Tue.
                                   4-8  
                                   4-9  	"Made from >udd>m>bongo>htd>nsd>include>fs_vol_label.incl.pl1,
                                  4-10  	"   modified 03/27/82  1421.0 est Sat
                                  4-11  
                                  4-12  "
                                  4-13  "	Structure label
                                  4-14  "
                        002000    4-15  	equ	label_size,1024
                                  4-16  
                                  4-17  
                        000000    4-18  	equ	label.gcos,0
                        000500    4-19  	equ	label.Multics,320
                        000510    4-20  	equ	label.version,328
                        000511    4-21  	equ	label.mfg_serial,329
                        000521    4-22  	equ	label.pv_name,337
                        000531    4-23  	equ	label.lv_name,345
                        000541    4-24  	equ	label.pvid,353
                        000542    4-25  	equ	label.lvid,354
                        000543    4-26  	equ	label.root_pvid,355
                        000544    4-27  	equ	label.time_registered,356	" DOUBLE
                        000546    4-28  	equ	label.n_pv_in_lv,358
                        000547    4-29  	equ	label.vol_size,359
                        000550    4-30  	equ	label.vtoc_size,360
                                  4-31  
                        000551    4-32  	equ	label.not_used_word,361
                        400000    4-33  	bool	label.not_used,400000	" DU
                        000551    4-34  	equ	label.private_word,361
                        200000    4-35  	bool	label.private,200000	" DU
                        000551    4-36  	equ	label.flagpad_word,361
                        000000    4-37  	equ	label.flagpad_shift,0
                                  4-38  
                        000552    4-39  	equ	label.max_access_class,362	" DOUBLE
                        000554    4-40  	equ	label.min_access_class,364	" DOUBLE
                        000556    4-41  	equ	label.password,366		" DOUBLE
                        000600    4-42  	equ	label.time_mounted,384	" DOUBLE
                        000602    4-43  	equ	label.time_map_updated,386	" DOUBLE
                        000604    4-44  	equ	label.volmap_version,388
                        000606    4-45  	equ	label.time_salvaged,390	" DOUBLE
                        000610    4-46  	equ	label.time_of_boot,392	" DOUBLE
                        000612    4-47  	equ	label.time_unmounted,394	" DOUBLE
                        000614    4-48  	equ	label.last_pvtx,396
                        000617    4-49  	equ	label.err_hist_size,399
                        000620    4-50  	equ	label.time_last_dmp,400	" DOUBLE
                        000626    4-51  	equ	label.time_last_reloaded,406	" DOUBLE
                        000700    4-52  	equ	label.root,448		" LEVEL 2
                                  4-53  
                        400000    4-54  	bool	label.here,400000		" DU
                                  4-55  
                        000701    4-56  	equ	label.root_vtocx,449
                        000702    4-57  	equ	label.shutdown_state,450
                        000704    4-58  	equ	label.disk_table_vtocx,452
                        000705    4-59  	equ	label.disk_table_uid,453
                        000706    4-60  	equ	label.esd_state,454
                        000707    4-61  	equ	label.volmap_record,455
                        000710    4-62  	equ	label.size_of_volmap,456
                        000711    4-63  	equ	label.vtoc_map_record,457
                        000712    4-64  	equ	label.size_of_vtoc_map,458
                        000713    4-65  	equ	label.volmap_unit_size,459
                        000714    4-66  	equ	label.vtoc_origin_record,460
                        000715    4-67  	equ	label.dumper_bit_map_record,461
                        000716    4-68  	equ	label.vol_trouble_count,462
                        001003    4-69  	equ	label.nparts,515
                        001004    4-70  	equ	label.parts,516		" LEVEL 2
                                  4-71  
                        001004    4-72  	equ	label.part,516
                        001005    4-73  	equ	label.frec,517
                        001006    4-74  	equ	label.nrec,518
                                  4-75  
                                  4-76       "END INCLUDE FILE fs_vol_label.incl.alm
                                   284  
                                   285  	include	bos_tv
                                   5-1  " 
                                   5-2  " Begin include file ...... bos_tv.incl.alm
                                   5-3  " Created in November 1971 by N. I. Morris.
                                   5-4  " Modified 9/9/76 by Noel I. Morris
                                   5-5  " Modified by Sherman D. Sprague 02/11/81 for DPS8 support.
                                   5-6  " Modified November 1981 by C. Hornig to remove iom_connect_rel.
                                   5-7  " Modified January 1982 by J. Bongiovanni to add getport_info
                                   5-8  " Modified May 1982 by Sherman D. Sprague to add getmpc.
                                   5-9  
                                  5-10  " BOS Utility Package Transfer Vector.
                                  5-11  
                        012000    5-12  	equ	pagectl,utilorg
                        012001    5-13  	equ	line,pagectl+1
                        012040    5-14  	equ	arg,line+31
                        012060    5-15  	equ	darg,arg+arglen+1
                        012100    5-16  	equ	earg,darg+arglen+1
                        012120    5-17  	equ	fltscu,earg+arglen+1
                                  5-18  
                        012200    5-19  	equ	tv_org,utilorg+128
                                  5-20  
                        012200    5-21  	equ	scan,tv_org+0
                        012201    5-22  	equ	arg_count,tv_org+1
                        012202    5-23  	equ	nextline,tv_org+2
                        012203    5-24  	equ	nlraw,tv_org+3
                        012204    5-25  	equ	search,tv_org+4
                        012205    5-26  	equ	makefil,tv_org+5
                        012206    5-27  	equ	ldcom,tv_org+6
                        012207    5-28  	equ	getsec,tv_org+7
                        012210    5-29  	equ	cvinit,tv_org+8
                        012211    5-30  	equ	rdev,tv_org+9
                        012212    5-31  	equ	wdev,tv_org+10
                        012213    5-32  	equ	phybos,tv_org+11
                        012214    5-33  	equ	bosphy,tv_org+12
                        012215    5-34  	equ	phyadd,tv_org+13
                        012216    5-35  	equ	mulbos,tv_org+14
                        012217    5-36  	equ	bosmul,tv_org+15
                        012220    5-37  	equ	lookup_devmodel,tv_org+16
                        012221    5-38  	equ	makesdw,tv_org+17
                        012222    5-39  	equ	argbos,tv_org+18
                        012223    5-40  	equ	argmul,tv_org+19
                        012224    5-41  	equ	amdvt,tv_org+20
                        012225    5-42  	equ	amfirst,tv_org+21
                        012226    5-43  	equ	amlast,tv_org+22
                        012227    5-44  	equ	cvnamla,tv_org+23
                        012230    5-45  	equ	sect_per_cyl_list,tv_org+24
                        012231    5-46  	equ	sect_per_dev_list,tv_org+25
                        012232    5-47  	equ	rec_per_dev_list,tv_org+26
                        012233    5-48  	equ	amaxio,tv_org+27
                        012234    5-49  	equ	rdsec,tv_org+28
                        012235    5-50  	equ	wtsec,tv_org+29
                        012236    5-51  	equ	disk_brief,tv_org+30
                        012237    5-52  	equ	itaper,tv_org+31
                        012240    5-53  	equ	itapew,tv_org+32
                        012241    5-54  	equ	erpt,tv_org+33
                        012242    5-55  	equ	ercv,tv_org+34
                        012243    5-56  	equ	erbuf,tv_org+35
                        012244    5-57  	equ	type,tv_org+36
                        012245    5-58  	equ	ttyinit,tv_org+37
                        012246    5-59  	equ	readcd,tv_org+38
                        012247    5-60  	equ	readtty,tv_org+39
                        012250    5-61  	equ	getprt,tv_org+40
                        012251    5-62  	equ	punch,tv_org+41
                        012252    5-63  	equ	octwd,tv_org+42
                        012253    5-64  	equ	geas,tv_org+43
                        012254    5-65  	equ	geastab,tv_org+44
                        012255    5-66  	equ	asge,tv_org+45
                        012256    5-67  	equ	asgetab,tv_org+46
                        012257    5-68  	equ	ljust,tv_org+47
                        012260    5-69  	equ	rjust,tv_org+48
                        012261    5-70  	equ	bzel,tv_org+49
                        012262    5-71  	equ	stripa,tv_org+50
                        012263    5-72  	equ	stripg,tv_org+51
                        012264    5-73  	equ	getconf,tv_org+52
                        012265    5-74  	equ	getmore,tv_org+53
                        012266    5-75  	equ	getperiph,tv_org+54
                        012267    5-76  	equ	rdclock,tv_org+55
                        012270    5-77  	equ	cvclock,tv_org+56
                        012271    5-78  	equ	init_io,tv_org+57
                        012272    5-79  	equ	connect_iom,tv_org+58
                        012273    5-80  	equ	getmpc,tv_org+59
                        012274    5-81  	equ	check_status,tv_org+60
                        012275    5-82  	equ	get_special_interrupt,tv_org+61
                        012276    5-83  	equ	get_status_interrupt,tv_org+62
                        012277    5-84  	equ	xio_wait,tv_org+63
                        012300    5-85  	equ	initint,tv_org+64
                        012301    5-86  	equ	wantflt,tv_org+65
                        012302    5-87  	equ	intno,tv_org+66
                        012303    5-88  	equ	intrpts1,tv_org+67
                        012304    5-89  	equ	hexwd,tv_org+68
                        012305    5-90  	equ	find_disk,tv_org+69
                        012306    5-91  	equ	find_root,tv_org+70
                        012307    5-92  	equ	find_part,tv_org+71
                        012310    5-93  	equ	check_status_no_stat,tv_org+72
                        012311    5-94  	equ	check_special_status,tv_org+73
                        012312    5-95  	equ	check_cpu_type,tv_org+74
                        012313    5-96  	equ	getportinfo,tv_org+75
                                  5-97  
                                  5-98  " End of include file ...... bos_tv.incl.alm
                                  5-99  
                                   286  
                                   287  	include	bos_common
                                   6-1  "
                                   6-2  " Begin include file ...... bos_common.incl.alm
                                   6-3  " Modified on 8/31/76 by N. I. Morris
                                   6-4  " Modified on 9/01/80 by Sherman D. Sprague for DPS8 operation
                                   6-5  " Modified on 5/26/82 by Sherman D. Sprague to lengthen config size
                                   6-6  "	MACHINE CONDITIONS AREA
                                   6-7  "		Its length is "storlen".
                                   6-8  
                        000000     6-9  	equ	amptwregs,0	Ass. Mem  PTW registers
                        000100    6-10  	equ	amptwptr,64	Ass. Mem  PTW pointers
                        000200    6-11  	equ	amsdwregs,128	Ass. Mem  SDW registers
                        000400    6-12  	equ	amsdwptr,256	Ass. Mem  SDW pointers
                        000500    6-13  	equ	ouhist,320	operations hist regs
                        000700    6-14  	equ	cuhist,448	control unit hist regs
                        001100    6-15  	equ	eishist,576	eis hist regs
                        001300    6-16  	equ	aphist,704	appending unit hist regs
                        001500    6-17  	equ	prs,832		pointer regs
                        001520    6-18  	equ	regs,848		sreg
                        001530    6-19  	equ	low_order_port,856	port to read clock from
                        001532    6-20  	equ	mctime,858	bootload memory clock
                        001540    6-21  	equ	scu,864
                        001550    6-22  	equ	mcm,872		memory masks 8 ports 
                        001570    6-23  	equ	dbr,888
                        001572    6-24  	equ	intrpts,890	waiting interrupts
                        001573    6-25  	equ	bar,891		bar
                        001574    6-26  	equ	modereg,892	processor & cache mode registers
                        001576    6-27  	equ	faultreg,894	processor fault register
                        001600    6-28  	equ	ptrlen,896	pointer-lengths EIS 0 mod 8
                        001610    6-29  	equ	coreblocks,904	array of port information
                                  6-30  "				Bits  0-17 => num 1st 64-word block
                                  6-31  "				Bits 18-35 => num of 64-word blocks
                                  6-32  "				(-1) => no mem on this port
                        001620    6-33  	equ	lowport_cfg,912	Saved CFG from bootload SCU
                                  6-34  
                        002000    6-35  	equ	storlen,1024
                                  6-36  
                                  6-37  
                                  6-38  
                                  6-39  "	BOS COMMAND DIRECTORY
                                  6-40  "		Its length is "dirlen".
                                  6-41  
                        002000    6-42  	equ	dir,1024		( 0-23) => sector # of first sector on BOS disk
                                  6-43  "				(24-35) => # of sectors in BOS common
                        002001    6-44  	equ	used,dir+1	( 0-23) => # of next available sector on BOS disk
                        002002    6-45  	equ	useable,dir+2	( 0-23) => first unavailable sector on BOS disk
                        002003    6-46  	equ	corearea,dir+3	( 0-23) => starting sector of Multics core image
                                  6-47  "				(24-35) => # of sectors in Multics core image
                        002004    6-48  	equ	setuparea,dir+4	Sector and length of setup
                        002005    6-49  	equ	utilarea,dir+5	where utility package is kept
                        002010    6-50  	equ	iom_mxbase,dir+8	IOM IMW area address
                        002011    6-51  	equ	iom_mbbase,dir+9	IOM mailbox base
                        002012    6-52  	equ	bos_dvt,dir+10	BOS disk loc: (o3/iom,o6/chn,o9/drive,o18/devtype)
                        002013    6-53  	equ	unitgroup,dir+11	disk unitgroup (device no. or area no.)
                        002014    6-54  	equ	diskchanno,dir+12	channel to be used for disk
                        002015    6-55  	equ	tapechanno,dir+13	channel # for tapes
                        002016    6-56  	equ	rdrchanno,dir+14	channel number for card reader
                        002017    6-57  	equ	ttychanno,dir+15	channel # for operator's tty
                        002020    6-58  	equ	quietsw,dir+16	if on, don't print card and macro commands
                        002021    6-59  	equ	inputsw,dir+17	read from tty, cards, macros
                        002022    6-60  	equ	macroloc,dir+18	disk addr, buffer index of macro file
                        002023    6-61  	equ	fdump_state,dir+19	completion flag for last FDUMP
                        002024    6-62  	equ	d355_state,dir+20	= 1 if DataNet 355 loaded successfully
                        002025    6-63  	equ	skipsw,dir+21	if on, skip runcom lines
                        002026    6-64  	equ	ttypmtsw,dir+22	if on, prompt
                        002027    6-65  	equ	curtcmd,dir+23	current bos command
                        002030    6-66  	equ	readysw,dir+24	if on, print ready message
                        002032    6-67  	equ	cmdlst,dir+26	list of commands
                                  6-68  
                        000300    6-69  	equ	dirlen,192
                                  6-70  
                                  6-71  
                                  6-72  
                                  6-73  "	MACRO BUFFER AREA
                                  6-74  
                        002300    6-75  	equ	macrobuf,dir+dirlen  io buffer for macro files
                        002400    6-76  	equ	macroline,macrobuf+64  runcom command line
                        002416    6-77  	equ	macroargs,macroline+14  argument descriptors for runcom
                                  6-78  
                                  6-79  
                                  6-80  
                                  6-81  "	CONFIGURATION CARD AREA
                                  6-82  "		Its length is 2048 words.
                                  6-83  
                        002500    6-84  	equ	conf,macrobuf+128	start of configuration info
                        006500    6-85  	equ	econf,conf+2048	end of configuration info
                        000020    6-86  	equ	confl,16		length of each line
                                  6-87  
                                  6-88  
                        006500    6-89  	equ	seg6length,econf	length of bos_common area segment
                                  6-90  
                                  6-91  " End of include file ...... bos_common.incl.alm
                                  6-92  
                                   288  
                                   289  	end
LITERALS
     
    000400  aa   777777 770000 
    000401  aa   000000 070001 
    000402  aa   777777 777777 
    000403  aa   202020 202550 
    000404  aa   202020 452550 
NAME DEFINITIONS FOR ENTRY POINTS AND SEGDEFS

    000405  5a   000003 000000 
    000406  5a   000016 600000 
    000407  aa   000000 000000 
    000410  55   000007 000002 
    000411  5a   000002 400003 
    000412  55   000006 000007 
    000413  aa  002 151 146 000
    000414  55   000002 000003 
    000415  6a   000000 400002 
    000416  55   000012 000003 
    000417  aa  014 163 171 155         symbol_table
    000420  aa  142 157 154 137
    000421  aa  164 141 142 154
    000422  aa  145 000 000 000

DEFINITIONS HASH TABLE

    000423  aa   000000 000015 
    000424  aa   000000 000000 
    000425  aa   000000 000000 
    000426  aa   000000 000000 
    000427  aa   000000 000000 
    000430  aa   000000 000000 
    000431  aa   000000 000000 
    000432  5a   000007 000000 
    000433  aa   000000 000000 
    000434  aa   000000 000000 
    000435  aa   000000 000000 
    000436  aa   000000 000000 
    000437  aa   000000 000000 
    000440  aa   000000 000000 

NO EXTERNAL NAMES

NO TRAP POINTER WORDS

TYPE PAIR BLOCKS

    000441  aa   000001 000000 
    000442  aa   000000 000000 

INTERNAL EXPRESSION WORDS

    000443  aa   000000 000000 
LINKAGE INFORMATION
      
    000000  aa   000000 000000 
    000001  0a   000405 000000 
    000002  aa   000000 000000 
    000003  aa   000000 000000 
    000004  aa   000000 000000 
    000005  aa   000000 000000 
    000006  22   000010 000010 
    000007  a2   000000 000000 
SYMBOL INFORMATION
     
SYMBOL TABLE HEADER
     
    000000  aa   000000 000001 
    000001  aa   163171 155142 
    000002  aa   164162 145145 
    000003  aa   000000 000004 
    000004  aa   000000 111316 
    000005  aa   510113 575622 
    000006  aa   000000 111341 
    000007  aa   203316 632371 
    000010  aa   141154 155040 
    000011  aa   040040 040040 
    000012  aa   000024 000040 
    000013  aa   000034 000040 
    000014  aa   000044 000100 
    000015  aa   000100 000002 
    000016  aa   000064 000000 
    000017  aa   000000 000256 
    000020  aa   000000 000211 
    000021  aa   000000 000241 
    000022  aa   000244 000211 
    000023  aa   000064 000000 
    000024  aa   101114 115040 
    000025  aa   126145 162163 
    000026  aa   151157 156040 
    000027  aa   040066 056064 
    000030  aa   040040 101160 
    000031  aa   162151 154040 
    000032  aa   061071 070061 
    000033  aa   040040 040040 
    000034  aa   110157 154155 
    000035  aa   163164 145144 
    000036  aa   164056 123171 
    000037  aa   163115 141151 
    000040  aa   156164 056155 
    000041  aa   040040 040040 
    000042  aa   040040 040040 
    000043  aa   040040 040040 
    000044  aa   154151 163164 
    000045  aa   040040 040040 
    000046  aa   040040 040040 
    000047  aa   040040 040040 
    000050  aa   040040 040040 
    000051  aa   040040 040040 
    000052  aa   040040 040040 
    000053  aa   040040 040040 
    000054  aa   040040 040040 
    000055  aa   040040 040040 
    000056  aa   040040 040040 
    000057  aa   040040 040040 
    000060  aa   040040 040040 
    000061  aa   040040 040040 
    000062  aa   040040 040040 
    000063  aa   040040 040040 
    000064  aa   000000 000001 
    000065  aa   000000 000007 
    000066  aa   000122 000027 
    000067  aa   113400 407747 
    000070  aa   000000 111341 
    000071  aa   201702 200000 
    000072  aa   000130 000040 
    000073  aa   113400 407711 
    000074  aa   000000 111341 
    000075  aa   174302 600000 
    000076  aa   000140 000032 
    000077  aa   112375 747471 
    000100  aa   000000 111240 
    000101  aa   207531 200000 
    000102  aa   000147 000037 
    000103  aa   110044 377547 
    000104  aa   000000 111005 
    000105  aa   417017 600000 
    000106  aa   000157 000042 
    000107  aa   110044 377556 
    000110  aa   000000 111005 
    000111  aa   417043 600000 
    000112  aa   000170 000040 
    000113  aa   110235 072677 
    000114  aa   000000 111024 
    000115  aa   524460 600000 
    000116  aa   000200 000044 
    000117  aa   113400 407706 
    000120  aa   000000 111341 
    000121  aa   174300 600000 
    000122  aa   076163 160145          >spec>h>bos.3.12>if.alm
    000123  aa   143076 150076 
    000124  aa   142157 163056 
    000125  aa   063056 061062 
    000126  aa   076151 146056 
    000127  aa   141154 155040 
    000130  aa   076163 160145          >spec>h>bos.3.12>bosequ.incl.alm
    000131  aa   143076 150076 
    000132  aa   142157 163056 
    000133  aa   063056 061062 
    000134  aa   076142 157163 
    000135  aa   145161 165056 
    000136  aa   151156 143154 
    000137  aa   056141 154155 
    000140  aa   076154 144144          >ldd>include>fgbx.incl.alm
    000141  aa   076151 156143 
    000142  aa   154165 144145 
    000143  aa   076146 147142 
    000144  aa   170056 151156 
    000145  aa   143154 056141 
    000146  aa   154155 040040 
    000147  aa   076154 144144          >ldd>include>disk_pack.incl.alm
    000150  aa   076151 156143 
    000151  aa   154165 144145 
    000152  aa   076144 151163 
    000153  aa   153137 160141 
    000154  aa   143153 056151 
    000155  aa   156143 154056 
    000156  aa   141154 155040 
    000157  aa   076154 144144          >ldd>include>fs_vol_label.incl.alm
    000160  aa   076151 156143 
    000161  aa   154165 144145 
    000162  aa   076146 163137 
    000163  aa   166157 154137 
    000164  aa   154141 142145 
    000165  aa   154056 151156 
    000166  aa   143154 056141 
    000167  aa   154155 040040 
    000170  aa   076154 144144          >ldd>bos>include>bos_tv.incl.alm
    000171  aa   076142 157163 
    000172  aa   076151 156143 
    000173  aa   154165 144145 
    000174  aa   076142 157163 
    000175  aa   137164 166056 
    000176  aa   151156 143154 
    000177  aa   056141 154155 
    000200  aa   076163 160145          >spec>h>bos.3.12>bos_common.incl.alm
    000201  aa   143076 150076 
    000202  aa   142157 163056 
    000203  aa   063056 061062 
    000204  aa   076142 157163 
    000205  aa   137143 157155 
    000206  aa   155157 156056 
    000207  aa   151156 143154 
    000210  aa   056141 154155 
               MULTICS ASSEMBLY CROSS REFERENCE LISTING

   Value        Symbol                   Source file   Line number

       12233    amaxio                   bos_tv:        48.
       12224    amdvt                    bos_tv:        41.
       12225    amfirst                  bos_tv:        42.
       12226    amlast                   bos_tv:        43.
         100    amptwptr                 bos_common:    10.
           0    amptwregs                bos_common:     9.
         400    amsdwptr                 bos_common:    12.
         200    amsdwregs                bos_common:    11.
        1300    aphist                   bos_common:    16.
       12040    arg                      bos_tv:        14,   15.
       12222    argbos                   bos_tv:        39.
          17    arglen                   if:           113,  208,  215,
                                         bosequ:        17,
                                         bos_tv:        15,   16,   17.
       12223    argmul                   bos_tv:        40.
       12201    arg_count                bos_tv:        22.
       12255    asge                     bos_tv:        66.
       12256    asgetab                  bos_tv:        67.
        1573    bar                      bos_common:    25.
           2    bf                       bosequ:         9.
       12217    bosmul                   bos_tv:        36.
       12214    bosphy                   bos_tv:        33.
        2012    bos_dvt                  bos_common:    52.
       12261    bzel                     bos_tv:        70.
       12312    check_cpu_type           bos_tv:        95.
          56    check_flag               if:            69,  110.
         132    check_number             if:            52,  107,  116,  123,  128,  151,  174.
          35    check_shutdown_state     if:            60,   86.
       12311    check_special_status     bos_tv:        94.
       12274    check_status             bos_tv:        81.
       12310    check_status_no_stat     bos_tv:        93.
        2032    cmdlst                   bos_common:    67.
         145    cmp_eq                   if:           180,  189.
         143    cmp_neq                  if:           182,  186.
           6    com                      if:            63,
                                         bosequ:        14.
        2500    conf                     bos_common:    84,   85.
          20    confl                    bos_common:    86.
       12272    connect_iom              bos_tv:        79.
        2003    corearea                 bos_common:    46.
        1610    coreblocks               bos_common:    29.
         700    cuhist                   bos_common:    14.
        2027    curtcmd                  bos_common:    65.
       12270    cvclock                  bos_tv:        77.
       12210    cvinit                   if:            40,
                                         bos_tv:        29.
       12227    cvnamla                  bos_tv:        44.
        2024    d355_state               bos_common:    62.
       12060    darg                     bos_tv:        15,   16.
        1570    dbr                      bos_common:    23.
        1750    DEFAULT_HCPART_SIZE      disk_pack:     20.
         255    desc                     if:           216,  222,  225,  265.
        2000    dir                      bos_common:    42,   44,   45,   46,   48,   49,   50,   51,   52,   53,   54,   55,
                                                        56,   57,   58,   59,   60,   61,   62,   63,   64,   65,   66,   67,   75.
         300    dirlen                   bos_common:    69,   75.
        2014    diskchanno               bos_common:    54.
       12236    disk_brief               bos_tv:        51.
           0    ds                       bosequ:         7.
           4    DUMPER_BIT_MAP_ADDR      disk_pack:     15.
       12100    earg                     bos_tv:        16,   17.
        6500    econf                    bos_common:    85,   89.
        1100    eishist                  bos_common:    15.
         250    eqsw                     if:            80,  187,  192,  260.
       12243    erbuf                    bos_tv:        56.
       12242    ercv                     bos_tv:        55.
       12241    erpt                     if:           241,  247,  251,
                                         bos_tv:        54.
        1576    faultreg                 bos_common:    27.
        2023    fdump_state              if:            63,
                                         bos_common:    61.
           5    fgb                      if:           115,  126,  139,
                                         bosequ:        13.
       20000    fgbx.alert               fgbx:          33.
          77    fgbx.bos_entry_mask      fgbx:          35.
           0    fgbx.bos_entry_shift     fgbx:          34.
      200000    fgbx.call_bos            if:           159,  160,  167,  168,
                                         fgbx:          30.
           2    fgbx.cpus                fgbx:          20.
      400000    fgbx.flags               if:           115,
                                         fgbx:          16.
           0    fgbx.flags_word          fgbx:          15.
          40    fgbx.fnp_blast           fgbx:          41.
          16    fgbx.hc_dbr              fgbx:          39.
       40000    fgbx.mess                fgbx:          32.
          20    fgbx.message             fgbx:          40.
         571    fgbx.ports_mask          fgbx:          23.
          34    fgbx.ports_shift         fgbx:          22.
           3    fgbx.rtb                 if:           126,  139,
                                         fgbx:          27.
           4    fgbx.sentinel            fgbx:          37.
      100000    fgbx.shut                if:           163,  164,
                                         fgbx:          31.
           1    fgbx.slt_segno           fgbx:          18.
      400000    fgbx.ssenb               if:           127,
                                         fgbx:          29.
          14    fgbx.sst_sdw             fgbx:          38.
           7    fgbx.tags_mask           fgbx:          25.
          25    fgbx.tags_shift          fgbx:          24.
         100    fgbx_size                fgbx:          13.
       12305    find_disk                bos_tv:        90.
       12307    find_part                bos_tv:        92.
       12306    find_root                if:            87,
                                         bos_tv:        91.
        2000    firmware_bit             bosequ:        20.
       12120    fltscu                   bos_tv:        17.
       12253    geas                     bos_tv:        64.
       12254    geastab                  bos_tv:        65.
       12264    getconf                  bos_tv:        73.
       12265    getmore                  bos_tv:        74.
       12273    getmpc                   bos_tv:        80.
       12266    getperiph                bos_tv:        75.
       12313    getportinfo              bos_tv:        96.
       12250    getprt                   bos_tv:        61.
       12207    getsec                   bos_tv:        28.
       12275    get_special_interrupt    bos_tv:        82.
       12276    get_status_interrupt     bos_tv:        83.
         257    geword                   if:           240,  243,  267.
       12304    hexwd                    bos_tv:        89.
         206    ifnot                    if:           194,  233,  244,  249,  253,  256.
         153    ifso                     if:           193,  199.
          32    if_not                   if:            57,   80.
          73    if_rtb                   if:            75,  132.
          70    if_ssenb                 if:            72,  126.
          64    if_switch                if:            66,  119.
       12300    initint                  bos_tv:        85.
       12271    init_io                  if:            39,
                                         bos_tv:        78.
        2021    inputsw                  bos_common:    59.
       12302    intno                    bos_tv:        87.
        1572    intrpts                  bos_common:    24.
       12303    intrpts1                 bos_tv:        88.
        2011    iom_mbbase               bos_common:    51.
        2010    iom_mxbase               bos_common:    50.
       12237    itaper                   bos_tv:        52.
       12240    itapew                   bos_tv:        53.
         705    label.disk_table_uid     fs_vol_label:        59.
         704    label.disk_table_vtocx   fs_vol_label:        58.
         715    label.dumper_bit_map_record    fs_vol_label:        67.
         617    label.err_hist_size      fs_vol_label:        49.
         706    label.esd_state          fs_vol_label:        60.
           0    label.flagpad_shift      fs_vol_label:        37.
         551    label.flagpad_word       fs_vol_label:        36.
        1005    label.frec               fs_vol_label:        73.
           0    label.gcos               fs_vol_label:        18.
      400000    label.here               fs_vol_label:        54.
         614    label.last_pvtx          fs_vol_label:        48.
         542    label.lvid               fs_vol_label:        25.
         531    label.lv_name            fs_vol_label:        23.
         552    label.max_access_class   fs_vol_label:        39.
         511    label.mfg_serial         fs_vol_label:        21.
         554    label.min_access_class   fs_vol_label:        40.
         500    label.Multics            fs_vol_label:        19.
      400000    label.not_used           fs_vol_label:        33.
         551    label.not_used_word      fs_vol_label:        32.
        1003    label.nparts             fs_vol_label:        69.
        1006    label.nrec               fs_vol_label:        74.
         546    label.n_pv_in_lv         fs_vol_label:        28.
        1004    label.part               fs_vol_label:        72.
        1004    label.parts              fs_vol_label:        70.
         556    label.password           fs_vol_label:        41.
      200000    label.private            fs_vol_label:        35.
         551    label.private_word       fs_vol_label:        34.
         541    label.pvid               fs_vol_label:        24.
         521    label.pv_name            fs_vol_label:        22.
         700    label.root               if:            97,  103,
                                         fs_vol_label:        52.
         543    label.root_pvid          fs_vol_label:        26.
         701    label.root_vtocx         fs_vol_label:        56.
         702    label.shutdown_state     if:           106,
                                         fs_vol_label:        57.
         710    label.size_of_volmap     fs_vol_label:        62.
         712    label.size_of_vtoc_map   fs_vol_label:        64.
         620    label.time_last_dmp      fs_vol_label:        50.
         626    label.time_last_reloaded       fs_vol_label:        51.
         602    label.time_map_updated   fs_vol_label:        43.
         600    label.time_mounted       fs_vol_label:        42.
         610    label.time_of_boot       fs_vol_label:        46.
         544    label.time_registered    fs_vol_label:        27.
         606    label.time_salvaged      fs_vol_label:        45.
         612    label.time_unmounted     fs_vol_label:        47.
         510    label.version            fs_vol_label:        20.
         707    label.volmap_record      fs_vol_label:        61.
         713    label.volmap_unit_size   fs_vol_label:        65.
         604    label.volmap_version     fs_vol_label:        44.
         547    label.vol_size           fs_vol_label:        29.
         716    label.vol_trouble_count  fs_vol_label:        68.
         711    label.vtoc_map_record    fs_vol_label:        63.
         714    label.vtoc_origin_record       fs_vol_label:        66.
         550    label.vtoc_size          fs_vol_label:        30.
           0    LABEL_ADDR               if:            91,
                                         disk_pack:     13.
         300    label_buffer             if:           100,  103,  106,  271.
        2000    label_size               fs_vol_label:        15.
       12206    ldcom                    bos_tv:        27.
       12001    line                     bos_tv:        13,   14.
         252    linedesc                 if:           206,  226,  262.
         253    lineloc                  if:           205,  210,  263.
       12257    ljust                    bos_tv:        68.
       12220    lookup_devmodel          bos_tv:        37.
        1620    lowport_cfg              bos_common:    33.
        1530    low_order_port           bos_common:    19.
        2416    macroargs                bos_common:    77.
        2300    macrobuf                 bos_common:    75,   76,   84.
        2400    macroline                bos_common:    76,   77.
        2022    macroloc                 bos_common:    60.
       12205    makefil                  bos_tv:        26.
       12221    makesdw                  bos_tv:        38.
       76036    MAX_VTOCE_PER_PACK       disk_pack:     21.
        1550    mcm                      bos_common:    22.
        1532    mctime                   bos_common:    20.
           7    mem                      if:            43,   45,  113,  122,  133,  177,  178,  200,  204,  208,  215,  230,
                                                       235,  262,
                                         bosequ:        15.
        1574    modereg                  bos_common:    26.
       12216    mulbos                   if:            92,
                                         bos_tv:        35.
       12202    nextline                 bos_tv:        23.
       12203    nlraw                    bos_tv:        24.
         225    not_enough_args          if:           201,  239,  246.
          14    nrtbtbl                  if:           135,  170.
          16    ntable                   if:            47,   77.
       12252    octwd                    bos_tv:        63.
         254    off                      if:           213,  219,  264.
         500    ouhist                   bos_common:    13.
       12000    pagectl                  bos_tv:        12,   13.
           3    pgm                      bosequ:        10.
       12215    phyadd                   bos_tv:        34.
       12213    phybos                   bos_tv:        32.
        1500    prs                      bos_common:    17.
        1600    ptrlen                   bos_common:    28.
       12251    punch                    bos_tv:        62.
        2020    quietsw                  bos_common:    58.
       12267    rdclock                  bos_tv:        76.
       12211    rdev                     if:            98,
                                         bos_tv:        30.
        2016    rdrchanno                bos_common:    56.
       12234    rdsec                    bos_tv:        49.
       12246    readcd                   bos_tv:        59.
       12247    readtty                  bos_tv:        60.
        2030    readysw                  bos_common:    66.
       12232    rec_per_dev_list         bos_tv:        47.
        1520    regs                     bos_common:    18.
       12260    rjust                    bos_tv:        69.
         260    root_devt                if:            89,   93,   99,  268.
         235    root_err                 if:            88,   94,  101,  104,  251.
         116    rtbtbl                   if:           136,  153,  170.
        4000    runcom_bit               bosequ:        19.
       12200    scan                     bos_tv:        21.
        1540    scu                      bos_common:    21.
       12204    search                   bos_tv:        25.
           3    SECTORS_PER_VTOCE        disk_pack:     18.
       12230    sect_per_cyl_list        bos_tv:        45.
       12231    sect_per_dev_list        bos_tv:        46.
        6500    seg6length               bos_common:    89.
        2004    setuparea                bos_common:    48.
        2025    skipsw                   bos_common:    63.
        2000    storlen                  bos_common:    35.
       12262    stripa                   bos_tv:        71.
       12263    stripg                   bos_tv:        72.
          14    table                    if:            48,   55,   77.
        2015    tapechanno               bos_common:    55.
           5    test_arg                 if:            45,   82.
           1    tmp                      bosequ:         8.
        2017    ttychanno                bos_common:    57.
       12245    ttyinit                  bos_tv:        58.
        2026    ttypmtsw                 bos_common:    64.
         247    ttyrequest               if:           255.
       12200    tv_org                   bos_tv:        19,   21,   22,   23,   24,   25,   26,   27,   28,   29,   30,   31,
                                                        32,   33,   34,   35,   36,   37,   38,   39,   40,   41,   42,   43,
                                                        44,   45,   46,   47,   48,   49,   50,   51,   52,   53,   54,   55,
                                                        56,   57,   58,   59,   60,   61,   62,   63,   64,   65,   66,   67,
                                                        68,   69,   70,   71,   72,   73,   74,   75,   76,   77,   78,   79,
                                                        80,   81,   82,   83,   84,   85,   86,   87,   88,   89,   90,   91,
                                                        92,   93,   94,   95,   96.
       12244    type                     bos_tv:        57.
        2013    unitgroup                bos_common:    53.
         256    unknown                  if:           175,  189,  266.
         211    unrecognized_operand     if:            49,  137,  237.
        2002    useable                  bos_common:    45.
        2001    used                     bos_common:    44.
        2005    utilarea                 bos_common:    49.
       12000    utilorg                  bosequ:        22,
                                         bos_tv:        12,   19.
           1    VOLMAP_ADDR              disk_pack:     14.
           5    VTOCES_PER_RECORD        disk_pack:     19.
           6    VTOC_MAP_ADDR            disk_pack:     16.
          10    VTOC_ORIGIN              disk_pack:     17.
       12301    wantflt                  bos_tv:        86.
       12212    wdev                     bos_tv:        31.
       12235    wtsec                    bos_tv:        50.
         251    x2_save                  if:            38,   42,  203,  228,  234,  261.
       12277    xio_wait                 bos_tv:        84.
           4    xs1                      bosequ:        11.
           5    xs2                      bosequ:        12.


NO FATAL ERRORS


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
