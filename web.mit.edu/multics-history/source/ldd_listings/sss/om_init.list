	COMPILATION LISTING OF SEGMENT om_init
	Compiled by: Multics PL/I Compiler, Release 28d, of October 4, 1983
	Compiled at: Honeywell Multics Op. - System M
	Compiled on: 01/03/85  1645.0 mst Thu
	    Options: optimize list

        1 /* ***********************************************************
        2*   *                                                         *
        3*   * Copyright, (C) Honeywell Information Systems Inc., 1983 *
        4*   *                                                         *
        5*   *********************************************************** */
        6 /* format: style2,ind3 */
        7 om_init:
        8    proc (p_number_of_entries, p_table_ptr, p_code);
        9 
       10 /* DESCRIPTION:
       11*
       12*         Sets  up an empty table of pointers to opening info structures.  The
       13*     table is allocated in the area pointed to  by  dm_data_$opening_area_ptr.
       14*     The table is set up as a hash of p_number_of_entries buckets.
       15**/
       16 
       17 /* HISTORY:
       18*
       19*Written by Matthew Pierret, 07/26/82.
       20*Modified:
       21*08/11/82 by Matthew Pierret:  Changed opening_table to be 0-originned.
       22*04/12/83 by Matthew Pierret:  Changed to use OPENING_TABLE_VERSION_2, which is
       23*            0-originned.  This is necessary because hash_index can return a
       24*            value of 0.
       25*11/14/84 by Stanford S. Cox:  MAIN:  Chg to init opening_table.version.
       26**/
       27 
       28 /* START OF DECLARATIONS */
       29 /* Parameter */
       30 
       31       dcl	    p_number_of_entries    fixed bin (17) parameter;
       32       dcl	    p_table_ptr	       ptr parameter;
       33       dcl	    p_code	       fixed bin (35) parameter;
       34 
       35 /* Automatic */
       36 
       37       dcl	    work_area_ptr	       ptr;
       38 
       39 /* Based */
       40 
       41       dcl	    work_area	       area (sys_info$max_seg_size) based (work_area_ptr);
       42 
       43 /* Builtin */
       44 
       45       dcl	    null		       builtin;
       46 
       47 /* Constant */
       48 /* Entry */
       49 
       50       dcl	    get_dm_free_area_      entry () returns (ptr);
       51 
       52 /* External */
       53 
       54       dcl	    sys_info$max_seg_size  ext fixed bin (35);
       55 
       56 /* END OF DECLARATIONS */
       57 
       58       p_code = 0;
       59 
       60       work_area_ptr = get_dm_free_area_ ();
       61 
       62       ot_upper_bound = p_number_of_entries - 1;
       63 
       64       alloc opening_table in (work_area);
       65 
       66       opening_table.hash_entry_ptr = null;
       67 
       68       p_table_ptr = opening_table_ptr;
       69       opening_table.version = OPENING_TABLE_VERSION_2;
       70 
       71       return;
       72 
  1     1 /* BEGIN INCLUDE FILE dm_om_table.incl.pl1 */
  1     2 
  1     3 
  1     4 /* 
  1     5*Modified:
  1     6*08/11/82 by Matthew Pierret:  Changed hash_entry_ptr array to be 0-originned.
  1     7*04/12/83 by Matthew Pierret:  Changed to version 2, which should have been done
  1     8*            on 08/11/82.
  1     9*10/29/84 by Stanford S. Cox:  Changed to not init version.
  1    10*12/04/84 by Stanford S. Cox:  Added HASH_UPPER_BOUND.
  1    11**/
  1    12 /* format: style2,ind3 */
  1    13 
  1    14      dcl	   1 opening_table	      aligned based (opening_table_ptr),
  1    15 	     2 version	      char (8),
  1    16 	     2 upper_bound	      fixed bin (35),
  1    17 	     2 hash_entry_ptr     (0:ot_upper_bound refer (opening_table.upper_bound)) ptr;
  1    18 
  1    19      dcl	   opening_table_ptr      ptr;
  1    20      dcl	   OPENING_TABLE_VERSION_2
  1    21 			      init ("opentbl2") char (8) aligned int static options (constant);
  1    22      dcl	   ot_upper_bound	      fixed bin (35);
  1    23      dcl HASH_UPPER_BOUND fixed bin (17) int static options (constant) init (10000);
  1    24 
  1    25 /* END INCLUDE FILE dm_om_table.incl.pl1 */
       73 
       74 
       75 
       76    end om_init;
	SOURCE FILES USED IN THIS COMPILATION.

LINE      NUMBER  DATE MODIFIED     NAME			PATHNAME
             0    01/03/85  1150.0  om_init.pl1                       >spec>temp>famis1>om_init.pl1
73           1    01/03/85  1005.4  dm_om_table.incl.pl1              >spec>temp>famis1>dm_om_table.incl.pl1
	NAMES DECLARED IN THIS COMPILATION.

IDENTIFIER	     OFFSET    LOC STORAGE CLASS   DATA TYPE		ATTRIBUTES AND REFERENCES
								(* indicates a set context)

NAMES DECLARED BY DECLARE STATEMENT.
OPENING_TABLE_VERSION_2         000000 constant        char(8)                  initial dcl 1-20 ref 69
get_dm_free_area_               000010 constant        entry                    external dcl 50 ref 60
hash_entry_ptr            4            based           pointer                  array level 2 dcl 1-14 set ref 66*
null                                                   builtin function         dcl 45 ref 66
opening_table                          based           structure                level 1 dcl 1-14 set ref 64
opening_table_ptr               000102 automatic       pointer                  dcl 1-19 set ref 64* 66 68 69
ot_upper_bound                  000104 automatic       fixed bin(35,0)          dcl 1-22 set ref 62* 64 64
p_code                                 parameter       fixed bin(35,0)          dcl 33 set ref 7 58*
p_number_of_entries                    parameter       fixed bin(17,0)          dcl 31 ref 7 62
p_table_ptr                            parameter       pointer                  dcl 32 set ref 7 68*
upper_bound               2            based           fixed bin(35,0)          level 2 dcl 1-14 set ref 64* 66
version                                based           char(8)                  level 2 dcl 1-14 set ref 69*
work_area                              based           area                     dcl 41 ref 64
work_area_ptr                   000100 automatic       pointer                  dcl 37 set ref 60* 64

NAMES DECLARED BY DECLARE STATEMENT AND NEVER REFERENCED.
HASH_UPPER_BOUND                       internal static fixed bin(17,0)          initial dcl 1-23
sys_info$max_seg_size                  external static fixed bin(35,0)          dcl 54

NAME DECLARED BY EXPLICIT CONTEXT.
om_init                         000014 constant        entry                    external dcl 7

THERE WERE NO NAMES DECLARED BY CONTEXT OR IMPLICATION.

STORAGE REQUIREMENTS FOR THIS PROGRAM.

	Object	Text	Link	Symbol	Defs	Static
Start          0       0       142         154     107         152
Length       334     107        12         143      33           0

BLOCK NAME	         STACK SIZE     TYPE		WHY NONQUICK/WHO SHARES STACK FRAME
om_init                              77 external procedure  is an external procedure.  

STORAGE FOR AUTOMATIC VARIABLES.

STACK FRAME                 LOC IDENTIFIER                  BLOCK NAME
om_init                  000100 work_area_ptr               om_init
                         000102 opening_table_ptr           om_init
                         000104 ot_upper_bound              om_init

THE FOLLOWING EXTERNAL OPERATORS ARE USED BY THIS PROGRAM.
call_ext_out        return              mpfx2               ext_entry           alloc_based

THE FOLLOWING EXTERNAL ENTRIES ARE CALLED BY THIS PROGRAM.
get_dm_free_area_

NO EXTERNAL VARIABLES ARE USED BY THIS PROGRAM.


CONSTANTS
000000  aa  157 160 145 156	open
000001  aa  164 142 154 062	tbl2

000106  aa     777777777777

000002  aa     404000000043

000003  aa     464000000000

000004  aa     404000000021

000006  aa     077777000043
000007  aa     000001000000

BEGIN PROCEDURE om_init
ENTRY TO om_init                                            STATEMENT 1 ON LINE 7
om_init:
   proc (p_number_of_entries, p_table_ptr, p_code);

000010  at     000003000004
000011  tt     000003000002
000012  ta     000010000000
000013  da     000027300000
000014  aa   000120 6270 00	eax7 	80
000015  aa  7 00034 3521 20	epp2 	pr7|28,*
000016  aa  2 01045 2721 00	tsp2 	pr2|549		ext_entry
000017  aa     000006000000
000020  aa     000000000000
						STATEMENT 1 ON LINE 58
      p_code = 0;

000021  aa  6 00032 3735 20	epp7 	pr6|26,*
000022  aa  7 00006 4501 20	stz  	pr7|6,*		p_code
						STATEMENT 1 ON LINE 60
      work_area_ptr = get_dm_free_area_ ();

000023  aa  6 00100 3521 00	epp2 	pr6|64		work_area_ptr
000024  aa  6 00110 2521 00	spri2	pr6|72
000025  aa  6 00106 6211 00	eax1 	pr6|70
000026  aa   004000 4310 07	fld  	2048,dl
000027  la  4 00010 3521 20	epp2 	pr4|8,*		get_dm_free_area_
000030  aa  0 00623 7001 00	tsx0 	pr0|403		call_ext_out
						STATEMENT 1 ON LINE 62
      ot_upper_bound = p_number_of_entries - 1;

000031  aa  6 00032 3735 20	epp7 	pr6|26,*
000032  aa  7 00002 2361 20	ldq  	pr7|2,*		p_number_of_entries
000033  aa   000001 1760 07	sbq  	1,dl
000034  aa  6 00104 7561 00	stq  	pr6|68		ot_upper_bound
						STATEMENT 1 ON LINE 64
      alloc opening_table in (work_area);

000035  aa  6 00104 3361 00	lcq  	pr6|68		ot_upper_bound
000036  aa   000044 7770 00	llr  	36
000037  aa   000044 7330 00	lrs  	36
000040  aa   000046 0330 04	adl  	38,ic		000106 = 777777777777
000041  aa   000000 5330 00	negl 	0
000042  aa  6 00112 7571 00	staq 	pr6|74
000043  aa   000002 2360 07	ldq  	2,dl
000044  aa  6 00112 3521 00	epp2 	pr6|74
000045  aa  0 00671 7001 00	tsx0 	pr0|441		mpfx2
000046  aa   000004 0330 07	adl  	4,dl
000047  aa  6 00100 3521 20	epp2 	pr6|64,*		work_area
000050  aa  0 01402 7001 00	tsx0 	pr0|770		alloc_based
000051  aa   777764 7100 04	tra  	-12,ic		000035
000052  aa  6 00102 2521 00	spri2	pr6|66		opening_table_ptr
000053  aa  6 00104 2361 00	ldq  	pr6|68		ot_upper_bound
000054  aa  2 00002 7561 00	stq  	pr2|2		opening_table.upper_bound
						STATEMENT 1 ON LINE 66
      opening_table.hash_entry_ptr = null;

000055  aa  2 00002 3361 00	lcq  	pr2|2		opening_table.upper_bound
000056  aa   000044 7770 00	llr  	36
000057  aa   000044 7330 00	lrs  	36
000060  aa   000026 0330 04	adl  	22,ic		000106 = 777777777777
000061  aa   000000 5330 00	negl 	0
000062  aa  6 00112 7571 00	staq 	pr6|74
000063  aa   000001 2360 07	ldq  	1,dl
000064  aa  6 00105 7561 00	stq  	pr6|69
000065  aa   000000 0110 03	nop  	0,du
000066  aa  6 00105 2361 00	ldq  	pr6|69
000067  aa   000001 7360 00	qls  	1
000070  aa   000000 6270 06	eax7 	0,ql
000071  aa   777715 2370 04	ldaq 	-51,ic		000006 = 077777000043 000001000000
000072  aa  6 00102 3735 20	epp7 	pr6|66,*		opening_table_ptr
000073  aa  7 00002 7571 17	staq 	pr7|2,7		opening_table.hash_entry_ptr
000074  aa  6 00105 2361 00	ldq  	pr6|69
000075  aa  6 00105 0541 00	aos  	pr6|69
000076  aa  6 00113 1161 00	cmpq 	pr6|75
000077  aa   777767 6040 04	tmi  	-9,ic		000066
						STATEMENT 1 ON LINE 68
      p_table_ptr = opening_table_ptr;

000100  aa  6 00032 3715 20	epp5 	pr6|26,*
000101  aa  5 00004 6535 20	spri7	pr5|4,*		p_table_ptr
						STATEMENT 1 ON LINE 69
      opening_table.version = OPENING_TABLE_VERSION_2;

000102  aa   777676 2370 04	ldaq 	-66,ic		000000 = 157160145156 164142154062
000103  aa  7 00000 7551 00	sta  	pr7|0		opening_table.version
000104  aa  7 00001 7561 00	stq  	pr7|1		opening_table.version
						STATEMENT 1 ON LINE 71
      return;

000105  aa  0 00631 7101 00	tra  	pr0|409		return
						STATEMENT 1 ON LINE 76
   end om_init;

  END PROCEDURE om_init


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
