	COMPILATION LISTING OF SEGMENT trace_repeat_
	Compiled by: Multics PL/I Compiler, Release 28d, of October 4, 1983
	Compiled at: Honeywell Multics Op. - System M
	Compiled on: 10/23/84  1251.2 mst Tue
	    Options: optimize map

        1 /* ***********************************************************
        2*   *                                                         *
        3*   * Copyright, (C) Honeywell Information Systems Inc., 1983 *
        4*   *                                                         *
        5*   *********************************************************** */
        6 
        7 /*  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */
        8 /*									*/
        9 /*      Written in June 1983 by Jeffrey D. Ives.					*/
       10 /*									*/
       11 /*  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */
       12 
       13 
       14 /* format: style2,^inddcls,ifthendo,^indnoniterdo,thendo,^inditerdo,ind2,dclind5,idind32 */
       15 
       16 trace_repeat_:
       17   proc (number_of_times_i, entry_to_return_elapsed_time_o, return_to_entry_elapsed_time_o);
       18 
       19     entry_to_return_elapsed_time = 0;
       20     return_to_entry_elapsed_time = 0;
       21 
       22     do number_of_times = 0 to number_of_times_i;
       23       entry_clock_reading = clock ();
       24 
       25       call trace_repeat_dummy_ (return_clock_reading);
       26 
       27       if number_of_times ^= 0 /* Waste the first entry reading.		*/
       28       then do;
       29         return_to_entry_elapsed_time = return_to_entry_elapsed_time + (entry_clock_reading - old_return_clock_reading);
       30         entry_to_return_elapsed_time = entry_to_return_elapsed_time + (return_clock_reading - entry_clock_reading);
       31       end;
       32 
       33       old_return_clock_reading = return_clock_reading;
       34     end;
       35 
       36     entry_to_return_elapsed_time_o = entry_to_return_elapsed_time;
       37     return_to_entry_elapsed_time_o = return_to_entry_elapsed_time;
       38 
       39     return;
       40 
       41 /* START OF DECLARATIONS */
       42 /* format: ^insnl,^delnl */
       43 
       44 /* Parameters */
       45 dcl  entry_to_return_elapsed_time_o  fixed bin (53) parm;
       46 dcl  number_of_times_i	       fixed bin (34) parm;
       47 dcl  return_to_entry_elapsed_time_o  fixed bin (53) parm;
       48 
       49 /* Automatic */
       50 dcl  entry_clock_reading	       fixed bin (53);
       51 dcl  entry_to_return_elapsed_time    fixed bin (53);
       52 dcl  number_of_times	       fixed bin;
       53 dcl  old_return_clock_reading	       fixed bin (53);
       54 dcl  return_clock_reading	       fixed bin (53);
       55 dcl  return_to_entry_elapsed_time    fixed bin (53);
       56 
       57 /* Static */
       58 
       59 /* Conditions */
       60 
       61 /* Based */
       62 
       63 /* External Variables */
       64 
       65 /* External Entries */
       66 dcl  trace_repeat_dummy_	       entry (fixed bin (53));
       67 
       68 /* format: insnl,delnl */
       69 /* END OF DECLARATIONS */
       70 
       71   end trace_repeat_;
	SOURCE FILES USED IN THIS COMPILATION.

LINE      NUMBER  DATE MODIFIED     NAME			PATHNAME
             0    10/23/84  1219.1  trace_repeat_.pl1                 >special_ldd>online>6972-10/23/84>trace_repeat_.pl1
	NAMES DECLARED IN THIS COMPILATION.

IDENTIFIER	     OFFSET    LOC STORAGE CLASS   DATA TYPE		ATTRIBUTES AND REFERENCES
								(* indicates a set context)

NAMES DECLARED BY DECLARE STATEMENT.
entry_clock_reading             000100 automatic       fixed bin(53,0)          dcl 50 set ref 23* 29 30
entry_to_return_elapsed_time    000102 automatic       fixed bin(53,0)          dcl 51 set ref 19* 30* 30 36
entry_to_return_elapsed_time_o         parameter       fixed bin(53,0)          dcl 45 set ref 16 36*
number_of_times                 000104 automatic       fixed bin(17,0)          dcl 52 set ref 22* 27*
number_of_times_i                      parameter       fixed bin(34,0)          dcl 46 ref 16 22
old_return_clock_reading        000106 automatic       fixed bin(53,0)          dcl 53 set ref 29 33*
return_clock_reading            000110 automatic       fixed bin(53,0)          dcl 54 set ref 25* 30 33
return_to_entry_elapsed_time    000112 automatic       fixed bin(53,0)          dcl 55 set ref 20* 29* 29 37
return_to_entry_elapsed_time_o         parameter       fixed bin(53,0)          dcl 47 set ref 16 37*
trace_repeat_dummy_             000010 constant        entry                    external dcl 66 ref 25

NAME DECLARED BY EXPLICIT CONTEXT.
trace_repeat_                   000010 constant        entry                    external dcl 16

NAME DECLARED BY CONTEXT OR IMPLICATION.
clock                                                  builtin function         ref 23

STORAGE REQUIREMENTS FOR THIS PROGRAM.

	Object	Text	Link	Symbol	Defs	Static
Start          0       0       122         134      64         132
Length       302      64        12         131      35           0

BLOCK NAME	         STACK SIZE     TYPE		WHY NONQUICK/WHO SHARES STACK FRAME
trace_repeat_                        82 external procedure  is an external procedure.  

STORAGE FOR AUTOMATIC VARIABLES.

STACK FRAME                 LOC IDENTIFIER                  BLOCK NAME
trace_repeat_            000100 entry_clock_reading         trace_repeat_
                         000102 entry_to_return_elapsed_time
                                                            trace_repeat_
                         000104 number_of_times             trace_repeat_
                         000106 old_return_clock_reading    trace_repeat_
                         000110 return_clock_reading        trace_repeat_
                         000112 return_to_entry_elapsed_time
                                                            trace_repeat_

THE FOLLOWING EXTERNAL OPERATORS ARE USED BY THIS PROGRAM.
call_ext_out        return              ext_entry           clock

THE FOLLOWING EXTERNAL ENTRIES ARE CALLED BY THIS PROGRAM.
trace_repeat_dummy_

NO EXTERNAL VARIABLES ARE USED BY THIS PROGRAM.




   LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC   
     16 000004        19 000015        20 000017        22 000020        23 000027        25 000031        27 000040
     29 000042        30 000046        33 000052        34 000054        36 000056        37 000061        39 000063


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
