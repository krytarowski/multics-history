	COMPILATION LISTING OF SEGMENT display_doc
	Compiled by: Multics PL/I Compiler, Release 28d, of October 4, 1983
	Compiled at: Honeywell Multics Op. - System M
	Compiled on: 11/01/84  1404.5 mst Thu
	    Options: optimize map

        1 /* ***********************************************************
        2*   *                                                         *
        3*   * Copyright, (C) Honeywell Information Systems Inc., 1983 *
        4*   *                                                         *
        5*   *********************************************************** */
        6 /* format: style2 */
        7 display_doc:
        8      proc (p_io_ptr, p_mrds_dbi, p_manual_number, p_display_info_ptr, p_topics_string, p_code);
        9 
       10 /* HISTORY:
       11*Written by Jim Paradise, fall 1981.
       12*Modified:
       13*03/05/81 by M. Pierret for new format (no manual_data_rel).
       14*10/19/81 by M. Pierret to accept p_topics_string, and display that string
       15*            at the end of the header with a "Topic(s) selected:" prefix.
       16*03/30/83 by M. Pierret: Changed to use new format database which includes
       17*            the info_rel relation, and to use format_document_$string to
       18*            to format text fields for printing.
       19*04/22/83 by Matthew Pierret:  Changed to remove the comment block surrounding
       20*            the code which displays short names.  This code was commented out
       21*            so that short names would not be displayed.  Now, explain_doc and
       22*            where_doc have been changed to turn the
       23*            display_info.short_name_flag off by default.  This change allows
       24*            short names to be displayed by over-riding the default with
       25*            control args.
       26*05/13/83 by J. Siwila:  Removed one of the blank lines inserted before manual
       27*            information is displayed.  Now there is only one line inserted 
       28*            between the command line and the display and between separate
       29*            manuals in a single display.
       30*06/15/83 by J. Siwila:  Substituted p_topics_string for topics_string so that
       31*            char is * rather than 128.
       32*09/01/83 by Matthew Pierret: Changed to allow display of leading blank line to
       33*            be optional, to display "Short names" field at left margin, to
       34*            trim of trailing NL from description and audience.
       35*09/29/83 by Matthew Pierret: Fixed bug which prevented the display of more than
       36*            one short name.  Changed to correctly set the version_number and
       37*            syllable_size of format_document_options and to not adjust (right
       38*            justify) text.
       39**/
       40 
       41 /*
       42*DESCRIPTION:
       43*        Given an internal manual identification number, this routine displays
       44*   information about that manual according to constraints set in display_info.
       45*   The following information is displayed as follows:
       46*
       47*     Title:  Multics Commands and Active Functions
       48*     Order No.:  AG92-05 
       49*   { Short names:  commands, commands_afs, caf }
       50*     Release Supported:  MR10.1
       51*   { Topics selected:  create_mrds_dsm, list_comp_dsm }
       52*
       53*   { Description: ... }
       54*
       55*   { Audience: ...... }
       56*
       57*   { Table of contents: ... }
       58*
       59*   { New features: ........ }
       60*
       61*   Those enclosed in {} are optionally displayed according to display_doc_info.
       62**/
       63 
       64 /* START OF DECLARATIONS */
       65 /* Parameters */
       66 
       67 	dcl     p_io_ptr		 ptr;		/* points to iocb to use for output */
       68 	dcl     p_mrds_dbi		 fixed bin (35);	/* is the database opening index of the online_doc database */
       69 	dcl     p_manual_number	 fixed bin;	/* is the identifier of the manual to be dislayed. */
       70 	dcl     p_display_info_ptr	 ptr;		/* is a pointer to a display_info structure, which specifies which fields to display. */
       71 	dcl     p_topics_string	 char (*) varying;	/* is a string of one or more topics selected by where_doc. */
       72 	dcl     p_code		 fixed bin (35);	/* is a standard system error code. */
       73 
       74 /* Automatic */
       75 
       76 	dcl     io_ptr		 ptr;
       77 
       78 	dcl     manual_number	 fixed bin;
       79 	dcl     mrds_dbi		 fixed bin (35);
       80 	dcl     code		 fixed bin (35);
       81 
       82 	dcl     print_short_name	 char (64) varying;
       83 	dcl     title_string	 char (128) varying;
       84 	dcl     first_short_name_flag	 bit (1);
       85 	dcl     (input_string, formatted_string)
       86 				 char (1024);
       87 	dcl     output_string	 char (1024) varying;
       88 	dcl     formatted_string_length
       89 				 fixed bin (21);
       90 	dcl     1 local_format_document_options
       91 				 aligned like format_document_options;
       92 
       93 /* Builtin */
       94 
       95 	dcl     (addr, after, before, index, length, string, substr, translate)
       96 				 builtin;
       97 
       98 /* Constant */
       99 
      100 	dcl     NL		 char (1) internal static options (constant) init ("
      101 ");
      102 
      103 /* Entry */
      104 
      105 	dcl     dsl_$retrieve	 entry options (variable);
      106 	dcl     ioa_$ioa_switch	 entry options (variable);
      107 	dcl     ioa_$ioa_switch_nnl	 entry options (variable);
      108 	dcl     format_document_$string
      109 				 entry (char (*), char (*), fixed bin (21), ptr, fixed bin (35));
      110 
      111 /* END OF DECLARATIONS */
      112 
      113 /* format: ^indblkcom,indcomtxt */
      114 
      115 	io_ptr = p_io_ptr;
      116 	mrds_dbi = p_mrds_dbi;
      117 	manual_number = p_manual_number;
      118 	display_info_ptr = p_display_info_ptr;
      119 
      120 	if display_info.header.full_name_flag | display_info.header.order_number_flag
      121 	     | display_info.header.revision_flag | display_info.header.release_supported_flag
      122 	then do;
      123 		call dsl_$retrieve (mrds_dbi, "-range (x full_name_rel) -select x -where x.manual_number = .V.",
      124 		     manual_number, full_name_rel, code);
      125 		if code ^= 0
      126 		then goto ERROR;
      127 	     end;
      128 
      129 	if display_info.display_leading_blank_line
      130 	then call ioa_$ioa_switch (io_ptr, "");
      131 
      132 	if display_info.header.full_name_flag
      133 	then do;
      134 		title_string = translate (full_name_rel.full_name, " ", "_");
      135 		call ioa_$ioa_switch (io_ptr, "Title:  ^a", title_string);
      136 	     end;
      137 
      138 	if display_info.header.order_number_flag
      139 	then call ioa_$ioa_switch (io_ptr, "Order No.:  ^a^[-^3a^]", full_name_rel.order_number,
      140 		(full_name_rel.revision ^= " "), full_name_rel.revision);
      141 
      142 	if display_info.header.short_name_flag
      143 	then do;
      144 		call dsl_$retrieve (mrds_dbi, "-range (x short_name_rel) -select x -where x.manual_number = .V.",
      145 		     manual_number, short_name_rel, code);
      146 		if code ^= 0
      147 		then goto ERROR;
      148 
      149 		first_short_name_flag = "1"b;
      150 		print_short_name = translate (short_name_rel.short_name, " ", "_");
      151 DISPLAY_EACH_SHORT_NAME:
      152 		do while (code = 0);
      153 		     call dsl_$retrieve (mrds_dbi, "-another", manual_number, short_name_rel, code);
      154 
      155 		     call ioa_$ioa_switch_nnl (io_ptr, "^[Short name^[s^]:  ^;^s, ^]^a", first_short_name_flag,
      156 			(code = 0), print_short_name);
      157 		     if code = 0
      158 		     then print_short_name = translate (short_name_rel.short_name, " ", "_");
      159 		     first_short_name_flag = "0"b;
      160 
      161 		end DISPLAY_EACH_SHORT_NAME;
      162 	     end;
      163 
      164 	if display_info.header.short_name_flag
      165 	then call ioa_$ioa_switch_nnl (io_ptr, "^/");
      166 
      167 	if display_info.header.release_supported_flag
      168 	then call ioa_$ioa_switch (io_ptr, "Release Supported:  ^a", full_name_rel.release_supported);
      169 
      170 	if display_info.header.topics_flag
      171 	then call ioa_$ioa_switch (io_ptr, "Topic^[s^] selected:  ^a", (index (p_topics_string, ", ") ^= 0),
      172 		p_topics_string);
      173 
      174 
      175 	if description_flag | audience_flag | table_of_contents_flag | new_features_flag
      176 	then do;
      177 		call dsl_$retrieve (mrds_dbi, "-range (x info_rel) -select x -where x.manual_number = .V.",
      178 		     manual_number, info_rel, code);
      179 		if code ^= 0
      180 		then goto ERROR;
      181 	     end;
      182 
      183 	format_document_options_ptr = addr (local_format_document_options);
      184 	format_document_options.version_number = format_document_version_2;
      185 	format_document_options.indentation = 5;
      186 	format_document_options.line_length = 70;
      187 	format_document_options.syllable_size = 0;
      188 	string (format_document_options.switches) = "0"b;
      189 	format_document_options.switches.galley_sw = "1"b;
      190 	format_document_options.switches.literal_sw = "1"b;
      191 
      192 	if description_flag
      193 	then do;
      194 		input_string = info_rel.description;
      195 		call format_document_$string (substr (input_string, 1, length (info_rel.description)),
      196 		     formatted_string, formatted_string_length, format_document_options_ptr, code);
      197 		if substr (formatted_string, formatted_string_length, 1) = NL
      198 		then output_string = substr (formatted_string, 1, formatted_string_length - 1);
      199 		else output_string = substr (formatted_string, 1, formatted_string_length);
      200 		call ioa_$ioa_switch (io_ptr, "^/Description:^/^a", output_string);
      201 	     end;
      202 
      203 	if audience_flag
      204 	then do;
      205 		input_string = info_rel.audience;
      206 		call format_document_$string (substr (input_string, 1, length (info_rel.audience)), formatted_string,
      207 		     formatted_string_length, format_document_options_ptr, code);
      208 		if substr (formatted_string, formatted_string_length, 1) = NL
      209 		then output_string = substr (formatted_string, 1, formatted_string_length - 1);
      210 		else output_string = substr (formatted_string, 1, formatted_string_length);
      211 
      212 		call ioa_$ioa_switch (io_ptr, "^/Audience:^/^a", output_string);
      213 	     end;
      214 
      215 	if table_of_contents_flag
      216 	then do;
      217 		input_string = info_rel.table_of_contents;
      218 		call ioa_$ioa_switch (io_ptr, "^/Table of Contents:");
      219 		do while (index (input_string, NL) ^= 0);
      220 		     output_string = before (input_string, NL);
      221 		     input_string = after (input_string, NL);
      222 		     call ioa_$ioa_switch (io_ptr, "^vx^a", format_document_options.indentation, output_string);
      223 		end;
      224 		if input_string ^= ""
      225 		then call ioa_$ioa_switch (io_ptr, "^vx^a", format_document_options.indentation, input_string);
      226 	     end;
      227 
      228 	if new_features_flag
      229 	then do;
      230 		input_string = info_rel.new_features;
      231 		call ioa_$ioa_switch (io_ptr, "^/New Features:");
      232 		do while (index (input_string, NL) ^= 0);
      233 		     output_string = before (input_string, NL);
      234 		     input_string = after (input_string, NL);
      235 		     call ioa_$ioa_switch (io_ptr, "^vx^a", format_document_options.indentation, output_string);
      236 		end;
      237 		if input_string ^= ""
      238 		then call ioa_$ioa_switch (io_ptr, "^vx^a", format_document_options.indentation, input_string);
      239 	     end;
      240 
      241 	p_code = 0;
      242 	return;
      243 
      244 ERROR:
      245 	p_code = code;
      246 	return;
      247 
  1     1 /* BEGIN INCLUDE FILE display_doc_info.incl.pl1 */
  1     2 
  1     3 /* this file contains the declarations for the flags, etc. needed by
  1     4*display_doc.
  1     5*
  1     6*HISTORY:
  1     7*Written by Jim Paradise, 09/29/80
  1     8*Modified:
  1     9*81-03-05 by M. Pierret to lengthen to two words.
  1    10*81-10-19 by M. Pierret changing name from display_doc_data to display_doc_info,
  1    11*            display_flags to display_info. Added topics_flag for displaying
  1    12*	  selected topics (for wdoc).
  1    13*83-09-01 by M. Pierret adding display_leading_blank_line.
  1    14*83-09-20 by M. Pierret removing one bit from pad1.
  1    15*-----------------------------------------------------------------------------*/
  1    16 /* format: style2 */
  1    17 
  1    18      dcl	   display_info_ptr	      ptr;
  1    19 
  1    20      dcl	   1 display_info	      aligned based (display_info_ptr),
  1    21 	     2 header	      unal,
  1    22 	       3 order_number_flag
  1    23 			      bit (1),
  1    24 	       3 revision_flag    bit (1),
  1    25 	       3 full_name_flag   bit (1),
  1    26 	       3 short_name_flag  bit (1),
  1    27 	       3 release_supported_flag
  1    28 			      bit (1),
  1    29 	       3 topics_flag      bit (1),
  1    30 	     2 pad1	      bit (30) unal,
  1    31 	     2 text	      unal,
  1    32 	       3 description_flag bit (1),
  1    33 	       3 audience_flag    bit (1),
  1    34 	       3 table_of_contents_flag
  1    35 			      bit (1),
  1    36 	       3 new_features_flag
  1    37 			      bit (1),
  1    38 	     2 display_leading_blank_line
  1    39 			      bit (1) unal,
  1    40 	     2 pad2	      bit (31) unal;
  1    41 
  1    42 /* END INCLUDE FILE display_doc_info.incl.pl1 */
      248 
      249 
  2     1 /* ***************************************************
  2     2*   *                                                 *
  2     3*   * BEGIN online_doc.incl.pl1                       *
  2     4*   *      created: 09/28/83  0931.7 edt Wed          *
  2     5*   *           by: create_mrds_dm_include (3.0)      *
  2     6*   *                                                 *
  2     7*   * Data model >udd>d>dbmt>ndb>mcp>od>online_doc.db *
  2     8*   *      created: 09/28/83  0921.1 edt Wed          *
  2     9*   *      version: 4                                 *
  2    10*   *           by: Pierret.Multics.a                 *
  2    11*   *                                                 *
  2    12*   *************************************************** */
  2    13 
  2    14 dcl 1 entry_name_rel aligned,
  2    15       2 entry_name character (64) varying aligned,                                                          /* Key */
  2    16       2 manual_number real fixed binary (17,0) unaligned;                                                   /* Key, Index */
  2    17 
  2    18 dcl 1 full_name_rel aligned,
  2    19       2 manual_number real fixed binary (17,0) unaligned,                                                   /* Key */
  2    20       2 full_name character (64) varying aligned,
  2    21       2 order_number character (4) nonvarying unaligned,                                                    /* Index */
  2    22       2 revision character (3) nonvarying unaligned,
  2    23       2 release_supported character (8) nonvarying unaligned;
  2    24 
  2    25 dcl 1 info_rel aligned,
  2    26       2 manual_number real fixed binary (17,0) unaligned,                                                   /* Key */
  2    27       2 description character (1024) varying aligned,
  2    28       2 audience character (1024) varying aligned,
  2    29       2 table_of_contents character (1024) varying aligned,
  2    30       2 new_features character (1024) varying aligned;
  2    31 
  2    32 dcl 1 name_rel aligned,
  2    33       2 name character (64) varying aligned,                                                                /* Key */
  2    34       2 manual_number real fixed binary (17,0) unaligned;                                                   /* Key */
  2    35 
  2    36 dcl 1 short_name_rel aligned,
  2    37       2 manual_number real fixed binary (17,0) unaligned,                                                   /* Key */
  2    38       2 short_name character (64) varying aligned;                                                          /* Key */
  2    39 
  2    40 /* END of online_doc.incl.pl1    ***************************************************************/
      250 
      251 
  3     1 /*	BEGIN INCLUDE FILE   format_document_options.incl.pl1	     
  3     2*
  3     3*     Modified 82.10.18 by Paul W. Benjamin to add dont_compress_sw and upgrade
  3     4*			to version_2.
  3     5*     Modified 83.02.15 by PWB to add break_word_sw and max_line_length_sw.
  3     6*     Modified 83.03.01 by PWB to add dont_break_indented_lines_sw.
  3     7*     Modified 83.03.03 by PWB to add sub_err_sw.
  3     8*     Modified 83.06.07 by PWB to add dont_fill_sw.
  3     9*     Modified 83.06.09 by PWB to add hyphenation_sw and syllable_size.
  3    10**/
  3    11 
  3    12 dcl 1 format_document_options aligned based (format_document_options_ptr),
  3    13       2 version_number        fixed bin,		/* input */
  3    14                                                             /* must be format_document_version_2 */
  3    15       2 indentation           fixed bin,		/* input */
  3    16 						/* all lines must be indented by this value */
  3    17       2 line_length           fixed bin,		/* input */
  3    18 						/* initial line length */
  3    19       2 switches,
  3    20         3 pgno_sw             bit (1) unal,		/* input */
  3    21 						/* end each page with a centered page number */
  3    22         3 adj_sw              bit (1) unal,		/* input */
  3    23 						/* adjust mode initially on */
  3    24                                                             /* only meaningful if dont_fill_sw = "0"b */
  3    25         3 galley_sw           bit (1) unal,		/* input */
  3    26 						/* galley mode -- no page breaks */
  3    27         3 error_sw            bit (1) unal,		/* input */
  3    28 						/* report all errors on error_output */
  3    29         3 literal_sw          bit (1) unal,		/* input */
  3    30 						/* "1"b - interpret all lines as text */
  3    31 						/* "0"b - lines that start with "." are controls */
  3    32         3 file_sw             bit (1) unal,		/* output */
  3    33 						/* has meaning for non-zero storage system status codes */
  3    34 						/* "1"b code refers to output file */
  3    35 						/* "0"b code refers to input file */
  3    36         3 dont_compress_sw    bit (1) unal,		/* input */
  3    37 						/* "1"b - don't compress white space */
  3    38 						/* "0"b - compress white space when filling */
  3    39         3 break_word_sw      bit (1) unal,		/* input */
  3    40 						/* "1"b - break a word rather than exceed line_length */
  3    41 						/* "0"b - write an overlength line if no spaces found */
  3    42         3 max_line_length_sw  bit (1) unal,		/* input */
  3    43 						/* "1"b - line_length cannot be exceeded */
  3    44 						/* "0"b - line_length can be exceeded (by .pdw controls) */
  3    45         3 dont_break_indented_lines_sw			/* input */
  3    46 			bit (1) unal,		/* don't break a line that begins with whitespace */
  3    47 						/* when it is the last line, or the next line is */
  3    48 						/* null or the next line begins with whitespace */
  3    49         3 sub_err_sw	bit (1) unal,		/* input */
  3    50 						/* quietly call sub_err_ with diagnostic errors */
  3    51         3 dont_fill_sw        bit (1) unal,                 /* input */
  3    52                                                             /* "1"b - fill mode off initially */
  3    53                                                             /* "0"b - fill mode on initially */
  3    54         3 hyphenation_sw      bit (1) unal,
  3    55         3 mbz                 bit (23) unal,		/* input */
  3    56 						/* MUST be zero */
  3    57       2 syllable_size
  3    58 			fixed bin;		/* input */
  3    59 						/* smallest portion of word */
  3    60 						/* to be left by hyphenation */
  3    61 
  3    62 dcl  format_document_options_ptr ptr;
  3    63 dcl  format_document_version_2 fixed bin int static options (constant) init (2);
  3    64 dcl  format_document_version_1 fixed bin int static options (constant) init (1);
  3    65 	
  3    66 /*	END INCLUDE FILE   format_document_options.incl.pl1	     */
      252 
      253 
      254      end display_doc;
	SOURCE FILES USED IN THIS COMPILATION.

LINE      NUMBER  DATE MODIFIED     NAME			PATHNAME
             0    11/01/84  1303.8  display_doc.pl1                   >special_ldd>online>6675-11/01/84>display_doc.pl1
248          1    10/10/83  1419.3  display_doc_info.incl.pl1         >ldd>include>display_doc_info.incl.pl1
250          2    10/10/83  1419.3  online_doc.incl.pl1               >ldd>include>online_doc.incl.pl1
252          3    11/01/84  1301.3  format_document_options.incl.pl1  >special_ldd>online>6675-11/01/84>format_document_options.incl.pl1
	NAMES DECLARED IN THIS COMPILATION.

IDENTIFIER	     OFFSET    LOC STORAGE CLASS   DATA TYPE		ATTRIBUTES AND REFERENCES
								(* indicates a set context)

NAMES DECLARED BY DECLARE STATEMENT.
NL                              002111 constant        char(1)                  initial unaligned dcl 100 ref 197 208 219 220 221
                                                                                  232 233 234
addr                                                   builtin function         dcl 95 ref 183
after                                                  builtin function         dcl 95 ref 221 234
audience                402     001630 automatic       varying char(1024)       level 2 dcl 2-25 set ref 205 206 206
audience_flag             1(01)        based           bit(1)                   level 3 packed unaligned dcl 1-20 ref 175 203
before                                                 builtin function         dcl 95 ref 220 233
code                            000104 automatic       fixed bin(35,0)          dcl 80 set ref 123* 125 144* 146 151 153* 155 157
                                                                                  177* 179 195* 206* 244
description               1     001630 automatic       varying char(1024)       level 2 dcl 2-25 set ref 194 195 195
description_flag          1            based           bit(1)                   level 3 packed unaligned dcl 1-20 ref 175 192
display_info                           based           structure                level 1 dcl 1-20
display_info_ptr                001600 automatic       pointer                  dcl 1-18 set ref 118* 120 120 120 120 129 132 138
                                                                                  142 164 167 170 175 175 175 175 192 203 215 228
display_leading_blank_line
                          1(04)        based           bit(1)                   level 2 packed unaligned dcl 1-20 ref 129
dsl_$retrieve                   000010 constant        entry                    external dcl 105 ref 123 144 153 177
first_short_name_flag           000167 automatic       bit(1)                   unaligned dcl 84 set ref 149* 155* 159*
format_document_$string         000016 constant        entry                    external dcl 108 ref 195 206
format_document_options                based           structure                level 1 dcl 3-12
format_document_options_ptr     003660 automatic       pointer                  dcl 3-62 set ref 183* 184 185 186 187 188 189 190
                                                                                  195* 206* 222 224 235 237
format_document_version_2              constant        fixed bin(17,0)          initial dcl 3-63 ref 184
formatted_string                000570 automatic       char(1024)               unaligned dcl 85 set ref 195* 197 197 199 206* 208
                                                                                  208 210
formatted_string_length         001571 automatic       fixed bin(21,0)          dcl 88 set ref 195* 197 197 199 206* 208 208 210
full_name                 1     001602 automatic       varying char(64)         level 2 dcl 2-18 set ref 134
full_name_flag            0(02)        based           bit(1)                   level 3 packed unaligned dcl 1-20 ref 120 132
full_name_rel                   001602 automatic       structure                level 1 dcl 2-18 set ref 123*
galley_sw                 3(02)        based           bit(1)                   level 3 packed unaligned dcl 3-12 set ref 189*
header                                 based           structure                level 2 packed unaligned dcl 1-20
indentation               1            based           fixed bin(17,0)          level 2 dcl 3-12 set ref 185* 222* 224* 235* 237*
index                                                  builtin function         dcl 95 ref 170 219 232
info_rel                        001630 automatic       structure                level 1 dcl 2-25 set ref 177*
input_string                    000170 automatic       char(1024)               unaligned dcl 85 set ref 194* 195 195 205* 206 206
                                                                                  217* 219 220 221* 221 224 224* 230* 232 233 234*
                                                                                  234 237 237*
io_ptr                          000100 automatic       pointer                  dcl 76 set ref 115* 129* 135* 138* 155* 164* 167*
                                                                                  170* 200* 212* 218* 222* 224* 231* 235* 237*
ioa_$ioa_switch                 000012 constant        entry                    external dcl 106 ref 129 135 138 167 170 200 212 218
                                                                                  222 224 231 235 237
ioa_$ioa_switch_nnl             000014 constant        entry                    external dcl 107 ref 155 164
length                                                 builtin function         dcl 95 ref 195 195 206 206
line_length               2            based           fixed bin(17,0)          level 2 dcl 3-12 set ref 186*
literal_sw                3(04)        based           bit(1)                   level 3 packed unaligned dcl 3-12 set ref 190*
local_format_document_options   001572 automatic       structure                level 1 dcl 90 set ref 183
manual_number                   000102 automatic       fixed bin(17,0)          dcl 78 set ref 117* 123* 144* 153* 177*
mrds_dbi                        000103 automatic       fixed bin(35,0)          dcl 79 set ref 116* 123* 144* 153* 177*
new_features           1404     001630 automatic       varying char(1024)       level 2 dcl 2-25 set ref 230
new_features_flag         1(03)        based           bit(1)                   level 3 packed unaligned dcl 1-20 ref 175 228
order_number             22     001602 automatic       char(4)                  level 2 packed unaligned dcl 2-18 set ref 138*
order_number_flag                      based           bit(1)                   level 3 packed unaligned dcl 1-20 ref 120 138
output_string                   001170 automatic       varying char(1024)       dcl 87 set ref 197* 199* 200* 208* 210* 212* 220*
                                                                                  222* 233* 235*
p_code                                 parameter       fixed bin(35,0)          dcl 72 set ref 7 241* 244*
p_display_info_ptr                     parameter       pointer                  dcl 70 ref 7 118
p_io_ptr                               parameter       pointer                  dcl 67 ref 7 115
p_manual_number                        parameter       fixed bin(17,0)          dcl 69 ref 7 117
p_mrds_dbi                             parameter       fixed bin(35,0)          dcl 68 ref 7 116
p_topics_string                        parameter       varying char             dcl 71 set ref 7 170 170*
print_short_name                000105 automatic       varying char(64)         dcl 82 set ref 150* 155* 157*
release_supported        23(27) 001602 automatic       char(8)                  level 2 packed unaligned dcl 2-18 set ref 167*
release_supported_flag
                          0(04)        based           bit(1)                   level 3 packed unaligned dcl 1-20 ref 120 167
revision                 23     001602 automatic       char(3)                  level 2 packed unaligned dcl 2-18 set ref 138 138*
revision_flag             0(01)        based           bit(1)                   level 3 packed unaligned dcl 1-20 ref 120
short_name                1     003635 automatic       varying char(64)         level 2 dcl 2-36 set ref 150 157
short_name_flag           0(03)        based           bit(1)                   level 3 packed unaligned dcl 1-20 ref 142 164
short_name_rel                  003635 automatic       structure                level 1 dcl 2-36 set ref 144* 153*
string                                                 builtin function         dcl 95 set ref 188*
substr                                                 builtin function         dcl 95 ref 195 195 197 197 199 206 206 208 208 210
switches                  3            based           structure                level 2 dcl 3-12 set ref 188*
syllable_size             4            based           fixed bin(17,0)          level 2 dcl 3-12 set ref 187*
table_of_contents      1003     001630 automatic       varying char(1024)       level 2 dcl 2-25 set ref 217
table_of_contents_flag
                          1(02)        based           bit(1)                   level 3 packed unaligned dcl 1-20 ref 175 215
text                      1            based           structure                level 2 packed unaligned dcl 1-20
title_string                    000126 automatic       varying char(128)        dcl 83 set ref 134* 135*
topics_flag               0(05)        based           bit(1)                   level 3 packed unaligned dcl 1-20 ref 170
translate                                              builtin function         dcl 95 ref 134 150 157
version_number                         based           fixed bin(17,0)          level 2 dcl 3-12 set ref 184*

NAMES DECLARED BY DECLARE STATEMENT AND NEVER REFERENCED.
entry_name_rel                         automatic       structure                level 1 dcl 2-14
format_document_version_1              internal static fixed bin(17,0)          initial dcl 3-64
name_rel                               automatic       structure                level 1 dcl 2-32

NAMES DECLARED BY EXPLICIT CONTEXT.
DISPLAY_EACH_SHORT_NAME         000532 constant        label                    dcl 151
ERROR                           001705 constant        label                    dcl 244 set ref 125 146 179
display_doc                     000221 constant        entry                    external dcl 7

THERE WERE NO NAMES DECLARED BY CONTEXT OR IMPLICATION.

STORAGE REQUIREMENTS FOR THIS PROGRAM.

	Object	Text	Link	Symbol	Defs	Static
Start          0       0      2200        2220    2112        2210
Length      2462    2112        20         226      65           0

BLOCK NAME	         STACK SIZE     TYPE		WHY NONQUICK/WHO SHARES STACK FRAME
display_doc                        2012 external procedure  is an external procedure.  

STORAGE FOR AUTOMATIC VARIABLES.

STACK FRAME                 LOC IDENTIFIER                  BLOCK NAME
display_doc              000100 io_ptr                      display_doc
                         000102 manual_number               display_doc
                         000103 mrds_dbi                    display_doc
                         000104 code                        display_doc
                         000105 print_short_name            display_doc
                         000126 title_string                display_doc
                         000167 first_short_name_flag       display_doc
                         000170 input_string                display_doc
                         000570 formatted_string            display_doc
                         001170 output_string               display_doc
                         001571 formatted_string_length     display_doc
                         001572 local_format_document_options
                                                            display_doc
                         001600 display_info_ptr            display_doc
                         001602 full_name_rel               display_doc
                         001630 info_rel                    display_doc
                         003635 short_name_rel              display_doc
                         003660 format_document_options_ptr display_doc

THE FOLLOWING EXTERNAL OPERATORS ARE USED BY THIS PROGRAM.
r_e_as              r_ne_as             alloc_cs            call_ext_out_desc   return              shorten_stack
ext_entry_desc

THE FOLLOWING EXTERNAL ENTRIES ARE CALLED BY THIS PROGRAM.
dsl_$retrieve                 format_document_$string       ioa_$ioa_switch               ioa_$ioa_switch_nnl

NO EXTERNAL VARIABLES ARE USED BY THIS PROGRAM.




   LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC   
      7 000213       115 000234       116 000240       117 000242       118 000244       120 000247       123 000252
    125 000304       129 000306       132 000327       134 000332       135 000350       138 000377       142 000452
    144 000455       146 000510       149 000512       150 000514       151 000532       153 000536       155 000570
    157 000627       159 000647       161 000652       164 000653       167 000675       170 000731       175 001005
    177 001011       179 001044       183 001046       184 001050       185 001052       186 001054       187 001056
    188 001057       189 001060       190 001062       192 001064       194 001070       195 001074       197 001134
    199 001154       200 001164       203 001210       205 001214       206 001220       208 001260       210 001300
    212 001310       215 001335       217 001341       218 001345       219 001370       220 001401       221 001415
    222 001433       223 001463       224 001464       228 001520       230 001524       231 001530       232 001551
    233 001563       234 001577       235 001615       236 001645       237 001646       241 001702       242 001704
    244 001705       246 001707


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
