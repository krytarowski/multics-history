	COMPILATION LISTING OF SEGMENT !BBBJPKPmkzjCGQ
	Compiled by: Multics PL/I Compiler, Release 28d, of October 4, 1983
	Compiled at: Honeywell Multics Op. - System M
	Compiled on: 11/16/84  1121.5 mst Fri
	    Options: table map

        1 /* ***********************************************************
        2*   *                                                         *
        3*   * Copyright, (C) Honeywell Information Systems Inc., 1984 *
        4*   *                                                         *
        5*   *********************************************************** */
        6 /* format: off */

        7 
        8 /*
        9*
       10*     This module creates the segment "report_writer_info_dirs_" which
       11*     contains the pathnames of directories containing info segments
       12*     provided with the report_writer_ (except for the subroutine info
       13*     segment report_writer_.info).
       14*
       15*     The following directories are provided:
       16*
       17*     >doc>ss>report_writer_info_dirs
       18*	contains all the report_writer_ request's info segments
       19*
       20*     >doc>ss>report_writer_info_dirs>standard_requests
       21*	contains links to all the report_writer_ request's info segments
       22*
       23*     >doc>ss>report_writer_info_dirs>clv_request
       24*	contains a link to the report_writer_ column_value request's info segment
       25*
       26*     >doc>ss>report_writer_info_dirs>di_request
       27*	contains a link to the report_writer_ display request's info segment
       28*
       29*     >doc>ss>report_writer_info_dirs>dib_request
       30*	contains a link to the report_writer_ display_builtins request's info segment
       31*
       32*     >doc>ss>report_writer_info_dirs>lsfo_request
       33*	contains a link to the report_writer_ list_format_options request's info segment
       34*
       35*     >doc>ss>report_writer_info_dirs>rsfo_request
       36*	contains a link to the report_writer_ restore_format_options request's info segment
       37*
       38*     >doc>ss>report_writer_info_dirs>sfo_request
       39*	contains a link to the report_writer_ set_format_options request's info segment
       40*
       41*     >doc>ss>report_writer_info_dirs>svfo_request
       42*	contains a link to the report_writer_ save_format_options request's info segment
       43*
       44*     Known Bugs:
       45*
       46*     Other Problems:
       47*
       48*     History:
       49*
       50*     Written - Al Dupuis - October 1984.
       51*
       52**/
       53 
       54 report_writer_info_dirs_: proc;

       55 
       56 	report_writer_info_dir_data.standard_requests 
       57 	     = ">doc>ss>report_writer_info_dirs>standard_requests";
       58 	report_writer_info_dir_data.clv_request
       59 	     = ">doc>ss>report_writer_info_dirs>clv_request";
       60 	report_writer_info_dir_data.di_request
       61 	     = ">doc>ss>report_writer_info_dirs>di_request";
       62 	report_writer_info_dir_data.dib_request
       63 	     = ">doc>ss>report_writer_info_dirs>dib_request";
       64 	report_writer_info_dir_data.lsfo_request
       65 	     = ">doc>ss>report_writer_info_dirs>lsfo_request";
       66 	report_writer_info_dir_data.rsfo_request
       67 	     = ">doc>ss>report_writer_info_dirs>rsfo_request";
       68 	report_writer_info_dir_data.sfo_request
       69 	     = ">doc>ss>report_writer_info_dirs>sfo_request";
       70 	report_writer_info_dir_data.svfo_request
       71 	     = ">doc>ss>report_writer_info_dirs>svfo_request";

       72 
       73 	cds_data.sections (1).p = addr (report_writer_info_dir_data);
       74 	cds_data.sections (1).len = currentsize (report_writer_info_dir_data);
       75 	cds_data.sections (1).struct_name = "report_writer_info_dir_data";

       76 
       77 	cds_data.sections (2).p = null;
       78 	cds_data.sections (2).len = 0;
       79 	cds_data.sections (2).struct_name = "";

       80 
       81 	cds_data.seg_name = REPORT_WRITER_INFO_DIRS_;
       82 	cds_data.num_exclude_names = 0;
       83 	cds_data.exclude_array_ptr = null;

       84 
       85 	unspec (cds_data.switches) = OFF;
       86 	cds_data.switches.have_text = ON;

       87 
       88 	call create_data_segment_ (addr (cds_data), code);
       89 	if code ^= 0 then
       90 	call com_err_ (code, REPORT_WRITER_INFO_DIRS_);

       91 
       92 	return;
       93 
       94 dcl OFF bit (1) aligned internal static options (constant) init ("0"b);
       95 dcl ON bit (1) aligned internal static options (constant) init ("1"b);

       96 
       97 dcl REPORT_WRITER_INFO_DIRS_ char (32) internal static options (constant) init ("report_writer_info_dirs_");

       98 
       99 dcl addr builtin;

      100 
      101 dcl 1 cds_data aligned like cds_args;
      102 dcl code fixed bin (35);
      103 dcl com_err_ entry() options(variable);
      104 dcl create_data_segment_ entry (ptr, fixed bin(35));
      105 dcl currentsize builtin;

      106 
      107 dcl null builtin;

      108 
      109 dcl 1 report_writer_info_dir_data aligned,
      110       2 standard_requests char (168),
      111       2 clv_request char (168),
      112       2 di_request char (168),
      113       2 dib_request char (168),
      114       2 lsfo_request char (168),
      115       2 rsfo_request char (168),
      116       2 sfo_request char (168),
      117       2 svfo_request char (168);

      118 
      119 dcl unspec builtin;
      120 
  1     1 /* BEGIN INCLUDE FILE cds_args.incl.pl1 */
  1     2 
  1     3 dcl 1 cds_args based aligned,
  1     4     2 sections (2),
  1     5       3 p ptr,					/* pointer to data for text/static section */
  1     6       3 len fixed bin (18),				/* size of text/static section */
  1     7       3 struct_name char (32),			/* name of declared structure for this section */
  1     8     2 seg_name char (32),				/* name to create segment by */
  1     9     2 num_exclude_names fixed bin,			/* number of names in exclude array */
  1    10     2 exclude_array_ptr ptr,				/* pointer to array of exclude names */
  1    11     2 switches,					/* control switches */
  1    12       3 defs_in_link bit (1) unal,			/* says put defs in linkage */
  1    13       3 separate_static bit (1) unal,			/* says separate static section is wanted */
  1    14       3 have_text bit (1) unal,			/* ON if text section given */
  1    15       3 have_static bit (1) unal,			/* ON if static section given */
  1    16       3 pad bit (32) unal;
  1    17 
  1    18 dcl  exclude_names (1) char (32) based;			/* pointed to be cds_args.exclude_array_ptr */
  1    19 
  1    20 /* END INCLUDE FILE cds_args.incl.pl1 */
      121 



      122 
      123      end report_writer_info_dirs_;
	SOURCE FILES USED IN THIS COMPILATION.

LINE      NUMBER  DATE MODIFIED     NAME			PATHNAME
             0    11/16/84  1107.6  !BBBJPKPmkzjCGQ.pl1               >special_ldd>online>7001-11/16/84>report_writer_info_dirs_.cds
121          1    04/01/76  2209.5  cds_args.incl.pl1                 >ldd>include>cds_args.incl.pl1
	NAMES DECLARED IN THIS COMPILATION.

IDENTIFIER	     OFFSET    LOC STORAGE CLASS   DATA TYPE		ATTRIBUTES AND REFERENCES
								(* indicates a set context)

NAMES DECLARED BY DECLARE STATEMENT.
OFF                             000274 constant        bit(1)                   initial dcl 94 ref 85
ON                              000010 constant        bit(1)                   initial dcl 95 ref 86
REPORT_WRITER_INFO_DIRS_        000000 constant        char(32)                 initial unaligned dcl 97 set ref 81 89*
addr                                                   builtin function         dcl 99 ref 73 88 88
cds_args                               based           structure                level 1 dcl 1-3
cds_data                        000100 automatic       structure                level 1 dcl 101 set ref 88 88
clv_request              52     000146 automatic       char(168)                level 2 dcl 109 set ref 58*
code                            000145 automatic       fixed bin(35,0)          dcl 102 set ref 88* 89 89*
com_err_                        000012 constant        entry                    external dcl 103 ref 89
create_data_segment_            000014 constant        entry                    external dcl 104 ref 88
currentsize                                            builtin function         dcl 105 ref 74
di_request              124     000146 automatic       char(168)                level 2 dcl 109 set ref 60*
dib_request             176     000146 automatic       char(168)                level 2 dcl 109 set ref 62*
exclude_array_ptr        42     000100 automatic       pointer                  level 2 dcl 101 set ref 83*
have_text                44(02) 000100 automatic       bit(1)                   level 3 packed unaligned dcl 101 set ref 86*
len                       2     000100 automatic       fixed bin(18,0)          array level 3 dcl 101 set ref 74* 78*
lsfo_request            250     000146 automatic       char(168)                level 2 dcl 109 set ref 64*
null                                                   builtin function         dcl 107 ref 77 83
num_exclude_names        40     000100 automatic       fixed bin(17,0)          level 2 dcl 101 set ref 82*
p                               000100 automatic       pointer                  array level 3 dcl 101 set ref 73* 77*
report_writer_info_dir_data     000146 automatic       structure                level 1 dcl 109 set ref 73 74
rsfo_request            322     000146 automatic       char(168)                level 2 dcl 109 set ref 66*
sections                        000100 automatic       structure                array level 2 dcl 101
seg_name                 30     000100 automatic       char(32)                 level 2 dcl 101 set ref 81*
sfo_request             374     000146 automatic       char(168)                level 2 dcl 109 set ref 68*
standard_requests               000146 automatic       char(168)                level 2 dcl 109 set ref 56*
struct_name               3     000100 automatic       char(32)                 array level 3 dcl 101 set ref 75* 79*
svfo_request            446     000146 automatic       char(168)                level 2 dcl 109 set ref 70*
switches                 44     000100 automatic       structure                level 2 dcl 101 set ref 85*
unspec                                                 builtin function         dcl 119 set ref 85*

NAME DECLARED BY DECLARE STATEMENT AND NEVER REFERENCED.
exclude_names                          based           char(32)                 array unaligned dcl 1-18

NAME DECLARED BY EXPLICIT CONTEXT.
report_writer_info_dirs_        000160 constant        entry                    external dcl 54

THERE WERE NO NAMES DECLARED BY CONTEXT OR IMPLICATION.

STORAGE REQUIREMENTS FOR THIS PROGRAM.

	Object	Text	Link	Symbol	Defs	Static
Start          0       0       354         372     275         364
Length      1520     275        16        1112      56           0

BLOCK NAME	         STACK SIZE     TYPE		WHY NONQUICK/WHO SHARES STACK FRAME
report_writer_info_dirs_            456 external procedure  is an external procedure.  

STORAGE FOR AUTOMATIC VARIABLES.

STACK FRAME                 LOC IDENTIFIER                  BLOCK NAME
report_writer_info_dirs_ 000100 cds_data                    report_writer_info_dirs_
                         000145 code                        report_writer_info_dirs_
                         000146 report_writer_info_dir_data report_writer_info_dirs_

THE FOLLOWING EXTERNAL OPERATORS ARE USED BY THIS PROGRAM.
call_ext_out_desc   call_ext_out        return              ext_entry

THE FOLLOWING EXTERNAL ENTRIES ARE CALLED BY THIS PROGRAM.
com_err_                      create_data_segment_

NO EXTERNAL VARIABLES ARE USED BY THIS PROGRAM.




   LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC   
     54 000157        56 000165        58 000170        60 000173        62 000176        64 000201        66 000204
     68 000207        70 000212        73 000215        74 000217        75 000221        77 000224        78 000226
     79 000227        81 000232        82 000235        83 000236        85 000237        86 000240        88 000242
     89 000254        92 000273


Object Segment >special_ldd>online>7001-11/16/84>report_writer_info_dirs_
Created on 11/16/84  1121.8 mst Fri
by GJohnson.SysMaint.m
using create_data_segment_, Version II of Thursday, November 01, 1984

        Object    Text    Defs    Link    Symb  Static
Start        0       0     520     632     642     642
Length    1046     520     112      10     170       0


10 Definitions:


segname:    report_writer_info_dirs_

text|52         clv_request
text|124        di_request
text|176        dib_request
text|250        lsfo_request
text|322        rsfo_request
text|374        sfo_request
text|0          standard_requests
text|446        svfo_request
symb|0          symbol_table


No Links.





                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
