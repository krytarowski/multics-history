	COMPILATION LISTING OF SEGMENT lm_salvage_lock_seg_
	Compiled by: Multics PL/I Compiler, Release 28e, of February 14, 1985
	Compiled at: Honeywell Multics Op. - System M
	Compiled on: 04/04/85  0947.6 mst Thu
	    Options: optimize map

        1 /* ***********************************************************
        2*   *                                                         *
        3*   * Copyright, (C) Honeywell Information Systems Inc., 1983 *
        4*   *                                                         *
        5*   *********************************************************** */
        6 lm_salvage_lock_seg_:
        7 	procedure (Code);
        8 
        9 declare Code fixed bin (35);
       10 declare dm_misc_util_$log entry options (variable);
       11 
       12 	Code = 0;
       13 	call dm_misc_util_$log (INFORM_SV, "lm_salvage_lock_seg_: Lock seg salvage requested.");
  1     1 /* BEGIN INCLUDE FILE dm_log_sv_codes.incl.pl1 */
  1     2 
  1     3 /* format: ^indcom */
  1     4 
  1     5 /* DESCRIPTION:
  1     6*   These are the severity codes used by the dms daemon when calling its logger.
  1     7*   The severity is ranked thusly:
  1     8*
  1     9*   severity log write situation
  1    10*   -------- --- ----- ---------
  1    11*          0 no  yes   standard output, query, etc.
  1    12*          1 yes yes   fatal error, terminate dms daemon.
  1    13*          2 yes yes   nonfatal error.
  1    14*          3 yes yes   informative message.
  1    15*          4 yes no    log information only.
  1    16**/
  1    17 
  1    18 /* HISTORY:
  1    19*
  1    20*Written by M. Pandolf, 10/06/82.
  1    21*Modified:
  1    22*12/10/84 by R. Michael Tague: Rename and reformat description/history.
  1    23*01/13/85 by Lee A. Newcomb:  Renamed to dm_log_sv_codes from
  1    24*            dm_daemon_sv_codes as the severity codes for the DM log are not
  1    25*            restrained to the DM Daemon's use.
  1    26*01/24/85 by Lee A. Newcomb:  Fixed to say dm_log_sv_codes.incl.pl1 in the
  1    27*            BEGIN and END INCLUDE comments, instead of dm_daemon_sv_codes.==.
  1    28**/
  1    29 
  1    30 /* format: style5 */
  1    31 
  1    32      dcl	   (PRINT_SV, QUERY_SV)    fixed bin internal static
  1    33 			       options (constant) init (0);
  1    34      dcl	   (CRASH_SV, FATAL_SV)    fixed bin internal static
  1    35 			       options (constant) init (1);
  1    36      dcl	   ERROR_SV	       fixed bin internal static
  1    37 			       options (constant) init (2);
  1    38      dcl	   INFORM_SV	       fixed bin internal static
  1    39 			       options (constant) init (3);
  1    40      dcl	   LOG_SV		       fixed bin internal static
  1    41 			       options (constant) init (4);
  1    42 
  1    43 /* END INCLUDE FILE dm_log_sv_codes.incl.pl1 */
       14 
       15 
       16 /* This is just a stub until check_lock_seg can be written */
       17 
       18 	end lm_salvage_lock_seg_;
	SOURCE FILES USED IN THIS COMPILATION.

LINE      NUMBER  DATE MODIFIED     NAME			PATHNAME
             0    04/04/85  0827.0  lm_salvage_lock_seg_.pl1          >spec>on>7192.pbf-04/04/85>lm_salvage_lock_seg_.pl1
14           1    03/06/85  1031.1  dm_log_sv_codes.incl.pl1          >ldd>include>dm_log_sv_codes.incl.pl1
	NAMES DECLARED IN THIS COMPILATION.

IDENTIFIER	     OFFSET    LOC STORAGE CLASS   DATA TYPE		ATTRIBUTES AND REFERENCES
								(* indicates a set context)

NAMES DECLARED BY DECLARE STATEMENT.
Code                                   parameter       fixed bin(35,0)          dcl 9 set ref 6 12*
INFORM_SV                       000000 constant        fixed bin(17,0)          initial dcl 1-38 set ref 13*
dm_misc_util_$log               000010 constant        entry                    external dcl 10 ref 13

NAMES DECLARED BY DECLARE STATEMENT AND NEVER REFERENCED.
CRASH_SV                               internal static fixed bin(17,0)          initial dcl 1-34
ERROR_SV                               internal static fixed bin(17,0)          initial dcl 1-36
FATAL_SV                               internal static fixed bin(17,0)          initial dcl 1-34
LOG_SV                                 internal static fixed bin(17,0)          initial dcl 1-40
PRINT_SV                               internal static fixed bin(17,0)          initial dcl 1-32
QUERY_SV                               internal static fixed bin(17,0)          initial dcl 1-32

NAME DECLARED BY EXPLICIT CONTEXT.
lm_salvage_lock_seg_            000024 constant        entry                    external dcl 6

THERE WERE NO NAMES DECLARED BY CONTEXT OR IMPLICATION.

STORAGE REQUIREMENTS FOR THIS PROGRAM.

	Object	Text	Link	Symbol	Defs	Static
Start          0       0       112         124      53         122
Length       310      53        12         150      37           0

BLOCK NAME	         STACK SIZE     TYPE		WHY NONQUICK/WHO SHARES STACK FRAME
lm_salvage_lock_seg_                 88 external procedure  is an external procedure.  

THE FOLLOWING EXTERNAL OPERATORS ARE USED BY THIS PROGRAM.
call_ext_out_desc   return              ext_entry

THE FOLLOWING EXTERNAL ENTRIES ARE CALLED BY THIS PROGRAM.
dm_misc_util_$log

NO EXTERNAL VARIABLES ARE USED BY THIS PROGRAM.




   LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC   
      6 000021        12 000031        13 000033        18 000052


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
