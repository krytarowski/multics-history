	COMPILATION LISTING OF SEGMENT bjm_per_process_init_
	Compiled by: Multics PL/I Compiler, Release 28e, of February 14, 1985
	Compiled at: Honeywell Multics Op. - System M
	Compiled on: 03/05/85  0859.2 mst Tue
	    Options: optimize map

        1 /* ***********************************************************
        2*   *                                                         *
        3*   * Copyright, (C) Honeywell Information Systems Inc., 1983 *
        4*   *                                                         *
        5*   *********************************************************** */
        6 
        7 /* format: style4,indattr,ifthenstmt,ifthen,^indcomtxt,idind33 */
        8 
        9 bjm_per_process_init_:
       10      procedure ();
       11 
       12 /* bjm_per_process_init_ - the before journal manager per process data
       13*   initialization procedure.
       14*
       15*   this procedure fills in the necessary cells in the data segment
       16*   dm_data_.  it implicitly creates the table bj_ppt, which is the
       17*   per process before journal table.  if all is successful, it returns
       18*   with a zero code.
       19**/
       20 
       21 /* HISTORY:
       22*Written by M. Pandolf, 07/10/82.
       23*Modified:
       24*02/25/83 by M. Pandolf to be used as a first ref trap.
       25*03/04/83 by Jeffrey D. Ives, add validation level setting.
       26*08/05/83 by Lee A. Newcomb:  removed obsolete status codes in
       27*	  calls to dm_per_system_ entries.
       28*09/07/83 by L. A. Newcomb: renamed so an "_" ends the proc name.
       29*12/06/83 by L. A. Newcomb:  Renamed before_journal_manager_static_ to
       30*            bjm_data_ and moved some cells from dm_data_ to bjm_data_.
       31*11/22/84 by Lee A. Newcomb:  Removed obsolete dm_common_init_ references.
       32**/
       33 
       34 /*  set up dm_data_ */
       35 
       36 	call cu_$level_get (saved_validation_level);
       37 	on cleanup call cu_$level_set (saved_validation_level);
       38 	call cu_$level_set (get_ring_ ());
       39 
       40 /* allocate the per process table according to data management protocol */
       41 
       42 	allocate bj_ppt
       43 	     in (dm_data_$area_ptr -> per_process_dms_area)
       44 	     set (bjm_data_$bj_ppt_ptr);
       45 
       46 /* initialize the per process table */
       47 
       48 	bj_ppt_ptr = bjm_data_$bj_ppt_ptr;
       49 
       50 	unspec (bj_ppt) = "0"b;
       51 
       52 	bj_ppt.max_n_entries = dm_system_data_$bj_max_n_journals;
       53 	bj_ppt.n_entries_used = 0;
       54 	bj_ppt.highest_ix_used = 0;
       55 	bj_ppt.process_id = get_process_id_ ();
       56 	bj_ppt.process_ix = -1;
       57 
       58 	bj_ppt.version = BJ_PPT_VERSION_1;
       59 
       60 /* fill pointers to other data bases */
       61 
       62 	call dm_per_system_$initiate (BJ_PST, "", bjm_data_$bj_pst_ptr);
       63 	if bjm_data_$bj_pst_ptr = null ()
       64 	then do;
       65 	     call sub_err_ (code, ME, "s", null (), retval, "Cannot access before journal system table.");
       66 	     goto exit;
       67 	end;
       68 
       69 	dm_data_$bj_txt_ptr =
       70 	     ptr (addr (dm_system_data_$bj_txt_relp), dm_system_data_$bj_txt_relp);
       71 
       72 	call get_temp_segment_ (BJ_MGR, bjm_data_$bj_rollback_buffer_ptr, code);
       73 	if code ^= 0
       74 	then do;
       75 	     call sub_err_ (code, ME, "s", null (), retval, "Cannot get temporary space for rollbacks.");
       76 	     goto exit;
       77 	end;
       78 
       79 /* finished */
       80 
       81 exit:
       82 	call cu_$level_set (saved_validation_level);
       83 
       84 	return;
       85 
       86 
       87 /* DECLARATIONS */
       88 
       89 /* Automatic */
       90 
       91 dcl  code			        fixed bin (35);	/* local copy of status code */
       92 dcl  retval		        fixed bin (35) init (0); /* needed for sub_err_ call */
       93 dcl  saved_validation_level	        fixed bin init (0);
       94 dcl  cleanup		        condition;
       95 
       96 /* Static, External */
       97 
       98 dcl  dm_data_$area_ptr	        pointer external static;
       99 dcl  bjm_data_$bj_ppt_ptr	        pointer external static;
      100 dcl  bjm_data_$bj_pst_ptr	        pointer external static;
      101 dcl  dm_data_$bj_txt_ptr	        pointer external static;
      102 dcl  dm_system_data_$bj_txt_relp      bit (18) external static;
      103 dcl  bjm_data_$bj_rollback_buffer_ptr pointer external static;
      104 
      105 
      106 /* Based */
      107 
      108 dcl  per_process_dms_area	        area based;
      109 
      110 /* Constant */
      111 
      112 dcl  BJ_MGR		        char (32) internal static options (constant)
      113 			        init ("before_journal_manager_");
      114 dcl  ME			        char (32) internal static options (constant)
      115 			        init ("before journal process init");
      116 
      117 /* Entry */
      118 
      119 dcl  cu_$level_get		        entry (fixed bin);
      120 dcl  cu_$level_set		        entry (fixed bin);
      121 dcl  get_ring_		        entry () returns (fixed bin (3));
      122 
      123 dcl  dm_per_system_$initiate	        entry (char (*), char (*), pointer);
      124 dcl  get_process_id_	        entry () returns (bit (36));
      125 dcl  get_temp_segment_	        entry (char (*), ptr, fixed bin (35));
      126 dcl  sub_err_		        entry () options (variable);
      127 
      128 /* Builtin */
      129 
      130 dcl  (
      131      addr, ptr, rel, unspec
      132      )			        builtin;
      133 
      134 /* Include Files */
      135  	/* BEGIN dm_bj_static.incl.pl1 */
  1     2 /*
  1     3*Modified: 
  1     4*10/04/82 by Lee A. Newcomb:  To change from internal static to external
  1     5*	  static.
  1     6**/
  1     7 
  1     8 dcl dm_system_data_$bj_max_n_journals		fixed bin ext static;
  1     9 dcl dm_system_data_$bj_max_n_processes		fixed bin ext static;
  1    10 dcl dm_system_data_$max_n_transactions     fixed bin ext static;
  1    11 
  1    12 	/* END dm_bj_static.incl.pl1 */
  1    13 
      135 
      136  /*  BEGIN INCLUDE FILE:	dm_bj_ppt.incl.pl1	*/
  2     2 /*
  2     3*Layout of the per-process before journal table and entries.
  2     4*
  2     5*Written by Andre Bensoussan June/July 1982
  2     6*Modified:
  2     7*09/29/82 by Lee A. Newcomb:  To make two default oid cells, pad ppte's
  2     8*	  to account for all used space, and use dm_system_data_ for
  2     9*	  determining dimension of bj_ppt.e.
  2    10**/
  2    11 /* format: style4,indattr,idind33,^indcomtxt */
  2    12 
  2    13 dcl  BJ_PPT_VERSION_1	        fixed bin int static options (constant) init (1);
  2    14 dcl  BJ_PPTE_VERSION_1	        fixed bin int static options (constant) init (1);
  2    15 
  2    16 dcl  bj_ppt_ptr		        ptr;
  2    17 
  2    18 dcl  1 bj_ppt		        based (bj_ppt_ptr) aligned,
  2    19        2 version		        fixed bin,
  2    20        2 max_n_entries	        fixed bin,		/* should be = dm_system_data_$bj_max_n_journals */
  2    21        2 n_entries_used	        fixed bin,		/* # of BJs open in this process */
  2    22        2 highest_ix_used	        fixed bin,		/* max. # of BJs ever opened in this process */
  2    23        2 default_bj,				/* for selecting a txn def. BJ by write_before_mark protocol */
  2    24          3 user_set_oid	        bit (36),		/* explicit user setting via $set_default_bj */
  2    25          3 last_opened_oid	        bit (36),		/* implicit if no user setting, set by open and close */
  2    26 						/* if both zero, use system default BJ */
  2    27        2 process_id		        bit (36),		/* so we don't have to keep calling for it. */
  2    28        2 process_ix		        fixed bin,		/* index into bj_check_in_table */
  2    29        2 mod_list_area	        (100) fixed bin (35), /* for keeping track of ppt mods, not curr. used */
  2    30 
  2    31        2 e		        dim (dm_system_data_$bj_max_n_journals refer (bj_ppt.max_n_entries))
  2    32 			        like bj_ppte;	/* an entry for each BJ open in this process */
  2    33 						/* always make sure bj_ppt.e is on a even word boundary */
  2    34 
  2    35 /* now specify the format of each per-process BJ table entry */
  2    36 
  2    37 dcl  bj_ppte_ptr		        ptr;
  2    38 
  2    39 dcl  1 bj_ppte		        based (bj_ppte_ptr) aligned,
  2    40        2 version		        fixed bin,		/* better be the same for all entries in a bj_ppt */
  2    41        2 bj_uid		        bit (36),		/* UID of the BJ page file */
  2    42        2 pf_oid		        bit (36),		/* OID of the BJ page file */
  2    43        2 n_opening		        fixed bin,		/* how many openings this process has done for this BJ */
  2    44        2 bj_pste_ptr	        ptr,		/* "link" to per-system BJ table entry */
  2    45        2 open_time		        fixed bin (71);	/* used to fill in bj_ppt.default_bj.last_opened_oid */
  2    46 						/* if the last opened BJ is closed */
  2    47 
  2    48 /* END INCLUDE FILE:	bj_ppt.incl.pl1	*/
      136 
      137  /* BEGIN INCLUDE FILE dm_bj_names.incl.pl1 */
  3     2 
  3     3 dcl  SYSTEM_BJ char (32) internal static options (constant)
  3     4      init ("dm_default_bj");
  3     5 
  3     6 /* SYSTEM_BJ is the name of the before journal to be used by processes
  3     7*   which have not set up their own journals for data management.       */
  3     8 
  3     9 
  3    10 dcl  BJ_PST char (16) internal static options (constant) init ("bj_pst_segment");
  3    11 
  3    12 /* BJ_PST is the name of the system wide before journal registration table */
  3    13 
  3    14 /* END INCLUDE FILE dm_bj_names.incl.pl1 */
      137 
      138 
      139 
      140      end bjm_per_process_init_;
	SOURCE FILES USED IN THIS COMPILATION.

LINE      NUMBER  DATE MODIFIED     NAME			PATHNAME
             0    03/05/85  0758.3  bjm_per_process_init_.pl1         >spec>on>7138.pbf>bjm_per_process_init_.pl1
135          1    01/07/85  0857.8  dm_bj_static.incl.pl1             >ldd>include>dm_bj_static.incl.pl1
136          2    01/07/85  0857.6  dm_bj_ppt.incl.pl1                >ldd>include>dm_bj_ppt.incl.pl1
137          3    01/07/85  0857.4  dm_bj_names.incl.pl1              >ldd>include>dm_bj_names.incl.pl1
	NAMES DECLARED IN THIS COMPILATION.

IDENTIFIER	     OFFSET    LOC STORAGE CLASS   DATA TYPE		ATTRIBUTES AND REFERENCES
								(* indicates a set context)

NAMES DECLARED BY DECLARE STATEMENT.
BJ_MGR                          000014 constant        char(32)                 initial unaligned dcl 112 set ref 72*
BJ_PPT_VERSION_1                       constant        fixed bin(17,0)          initial dcl 2-13 ref 58
BJ_PST                          000000 constant        char(16)                 initial unaligned dcl 3-10 set ref 62*
ME                              000004 constant        char(32)                 initial unaligned dcl 114 set ref 65* 75*
addr                                                   builtin function         dcl 130 ref 69
bj_ppt                                 based           structure                level 1 dcl 2-18 set ref 42 50*
bj_ppt_ptr                      000112 automatic       pointer                  dcl 2-16 set ref 48* 50 52 53 54 55 56 58
bj_ppte                                based           structure                level 1 dcl 2-39
bjm_data_$bj_ppt_ptr            000012 external static pointer                  dcl 99 set ref 42* 48
bjm_data_$bj_pst_ptr            000014 external static pointer                  dcl 100 set ref 62* 63
bjm_data_$bj_rollback_buffer_ptr
                                000022 external static pointer                  dcl 103 set ref 72*
cleanup                         000104 stack reference condition                dcl 94 ref 37
code                            000100 automatic       fixed bin(35,0)          dcl 91 set ref 65* 72* 73 75*
cu_$level_get                   000024 constant        entry                    external dcl 119 ref 36
cu_$level_set                   000026 constant        entry                    external dcl 120 ref 37 38 81
dm_data_$area_ptr               000010 external static pointer                  dcl 98 ref 42
dm_data_$bj_txt_ptr             000016 external static pointer                  dcl 101 set ref 69*
dm_per_system_$initiate         000032 constant        entry                    external dcl 123 ref 62
dm_system_data_$bj_max_n_journals
                                000042 external static fixed bin(17,0)          dcl 1-8 ref 42 42 52
dm_system_data_$bj_txt_relp     000020 external static bit(18)                  unaligned dcl 102 set ref 69 69
get_process_id_                 000034 constant        entry                    external dcl 124 ref 55
get_ring_                       000030 constant        entry                    external dcl 121 ref 38 38
get_temp_segment_               000036 constant        entry                    external dcl 125 ref 72
highest_ix_used           3            based           fixed bin(17,0)          level 2 dcl 2-18 set ref 54*
max_n_entries             1            based           fixed bin(17,0)          level 2 dcl 2-18 set ref 42* 50 52*
n_entries_used            2            based           fixed bin(17,0)          level 2 dcl 2-18 set ref 53*
per_process_dms_area                   based           area(1024)               dcl 108 ref 42
process_id                6            based           bit(36)                  level 2 dcl 2-18 set ref 55*
process_ix                7            based           fixed bin(17,0)          level 2 dcl 2-18 set ref 56*
ptr                                                    builtin function         dcl 130 ref 69
retval                          000101 automatic       fixed bin(35,0)          initial dcl 92 set ref 65* 75* 92*
saved_validation_level          000102 automatic       fixed bin(17,0)          initial dcl 93 set ref 36* 37* 81* 93*
sub_err_                        000040 constant        entry                    external dcl 126 ref 65 75
unspec                                                 builtin function         dcl 130 set ref 50*
version                                based           fixed bin(17,0)          level 2 dcl 2-18 set ref 58*

NAMES DECLARED BY DECLARE STATEMENT AND NEVER REFERENCED.
BJ_PPTE_VERSION_1                      internal static fixed bin(17,0)          initial dcl 2-14
SYSTEM_BJ                              internal static char(32)                 initial unaligned dcl 3-3
bj_ppte_ptr                            automatic       pointer                  dcl 2-37
dm_system_data_$bj_max_n_processes     external static fixed bin(17,0)          dcl 1-9
dm_system_data_$max_n_transactions     external static fixed bin(17,0)          dcl 1-10
rel                                                    builtin function         dcl 130

NAMES DECLARED BY EXPLICIT CONTEXT.
bjm_per_process_init_           000071 constant        entry                    external dcl 9
exit                            000407 constant        label                    dcl 81 set ref 66 76

NAME DECLARED BY CONTEXT OR IMPLICATION.
null                                                   builtin function         ref 63 65 65 75 75

STORAGE REQUIREMENTS FOR THIS PROGRAM.

	Object	Text	Link	Symbol	Defs	Static
Start          0       0       630         674     417         640
Length      1140     417        44         230     210           0

BLOCK NAME	         STACK SIZE     TYPE		WHY NONQUICK/WHO SHARES STACK FRAME
bjm_per_process_init_               126 external procedure  is an external procedure.  
on unit on line 37                   68 on unit               

STORAGE FOR AUTOMATIC VARIABLES.

STACK FRAME                 LOC IDENTIFIER                  BLOCK NAME
bjm_per_process_init_    000100 code                        bjm_per_process_init_
                         000101 retval                      bjm_per_process_init_
                         000102 saved_validation_level      bjm_per_process_init_
                         000112 bj_ppt_ptr                  bjm_per_process_init_

THE FOLLOWING EXTERNAL OPERATORS ARE USED BY THIS PROGRAM.
call_ext_out_desc   call_ext_out        return              enable              ext_entry           int_entry
alloc_based

THE FOLLOWING EXTERNAL ENTRIES ARE CALLED BY THIS PROGRAM.
cu_$level_get                 cu_$level_set                 dm_per_system_$initiate       get_process_id_
get_ring_                     get_temp_segment_             sub_err_

THE FOLLOWING EXTERNAL VARIABLES ARE USED BY THIS PROGRAM.
bjm_data_$bj_ppt_ptr          bjm_data_$bj_pst_ptr          bjm_data_$bj_rollback_buffer_ptr
dm_data_$area_ptr             dm_data_$bj_txt_ptr           dm_system_data_$bj_max_n_journals
dm_system_data_$bj_txt_relp




   LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC   
      9 000070        92 000076        93 000077        36 000100        37 000106        38 000132        42 000152
     48 000166        50 000167        52 000201        53 000203        54 000204        55 000205        56 000216
     58 000220        62 000222        63 000243        65 000250        66 000312        69 000313        72 000320
     73 000341        75 000343        76 000406        81 000407        84 000416


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
