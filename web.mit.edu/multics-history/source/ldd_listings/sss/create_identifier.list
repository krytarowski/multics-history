	COMPILATION LISTING OF SEGMENT create_identifier
	Compiled by: Multics PL/I Compiler, Release 33e, of October 6, 1992
	Compiled at: CGI                             
	Compiled on: 2000-05-05_1823.95_Fri_mdt
	    Options: optimize map

        1 /* ***********************************************************
        2*   *                                                         *
        3*   * Copyright, (C) Honeywell Information Systems Inc., 1982 *
        4*   *                                                         *
        5*   *********************************************************** */
        6 
        7 /* ******************************************************
        8*   *                                                    *
        9*   *                                                    *
       10*   * Copyright (c) 1972 by Massachusetts Institute of   *
       11*   * Technology and Honeywell Information Systems, Inc. *
       12*   *                                                    *
       13*   *                                                    *
       14*   ****************************************************** */
       15 
       16 create_identifier:
       17 	procedure returns(ptr);
       18 /*	returns a ptr to the token_node whose string is created by the
       19*	concatenation of "cp." and a decimal integer. */
       20 /*	Modified on:	11 August 1970 by P. Green for Version II */
       21 /*	Modified on:	 5 January 1971 by BLW for in-line conversion */
       22 
       23 dcl	substr builtin,
       24 	bindec$vs entry(fixed bin(15)) returns(char(12) varying),
       25 	pl1_stat_$compiler_created_index fixed bin(15) ext static;
       26 dcl	create_token ext entry(char(*) aligned,bit(9) aligned) returns(ptr);
       27 
  1     1 /* BEGIN INCLUDE FILE ... token_types.incl.pl1 */
  1     2 
  1     3 dcl (	no_token		initial("000000000"b),	/*	token types		*/
  1     4 	identifier	initial("100000000"b),
  1     5 	isub		initial("010000000"b),
  1     6 	plus		initial("001000001"b),
  1     7 	minus		initial("001000010"b),
  1     8 	asterisk		initial("001000011"b),
  1     9 	slash		initial("001000100"b),
  1    10 	expon		initial("001000101"b),
  1    11 	not		initial("001000110"b),
  1    12 	and		initial("001000111"b),
  1    13 	or		initial("001001000"b),
  1    14 	cat		initial("001001001"b),
  1    15 	eq		initial("001001010"b),
  1    16 	ne		initial("001001011"b),
  1    17 	lt		initial("001001100"b),
  1    18 	gt		initial("001001101"b),
  1    19 	le		initial("001001110"b),
  1    20 	ge		initial("001001111"b),
  1    21 	ngt		initial("001010000"b),
  1    22 	nlt		initial("001010001"b),
  1    23 	assignment	initial("001010010"b),
  1    24 	colon		initial("001010011"b),
  1    25 	semi_colon	initial("001010100"b),
  1    26 	comma		initial("001010101"b),
  1    27 	period		initial("001010110"b),
  1    28 	arrow		initial("001010111"b),
  1    29 	left_parn		initial("001011000"b),
  1    30 	right_parn	initial("001011001"b),
  1    31 	percent		initial("001011100"b),
  1    32 	bit_string	initial("000100001"b),
  1    33 	char_string	initial("000100010"b),
  1    34 	bin_integer	initial("000110001"b),
  1    35 	dec_integer	initial("000110011"b),
  1    36 	fixed_bin		initial("000110000"b),
  1    37 	fixed_dec		initial("000110010"b),
  1    38 	float_bin		initial("000110100"b),
  1    39 	float_dec		initial("000110110"b),
  1    40 	i_bin_integer	initial("000111001"b),
  1    41 	i_dec_integer	initial("000111011"b),
  1    42 	i_fixed_bin	initial("000111000"b),
  1    43 	i_fixed_dec	initial("000111010"b),
  1    44 	i_float_bin	initial("000111100"b),
  1    45 	i_float_dec	initial("000111110"b)) bit (9) aligned internal static options (constant);
  1    46 
  1    47 dcl (	is_identifier		initial ("100000000"b),	/*	token type masks		*/
  1    48 	is_isub			initial ("010000000"b),
  1    49 	is_delimiter		initial ("001000000"b),
  1    50 	is_constant		initial ("000100000"b),
  1    51 	is_arith_constant		initial ("000010000"b),	/* N.B. not really a mask...s/b "000110000"b */
  1    52 	is_arithmetic_constant	initial ("000110000"b),
  1    53 	is_imaginary_constant	initial ("000111000"b),
  1    54 	is_float_constant		initial ("000110100"b),
  1    55 	is_decimal_constant		initial ("000110010"b),
  1    56 	is_integral_constant 	initial ("000110001"b)
  1    57 	) bit(9) internal static aligned options(constant);
  1    58 
  1    59 /* END INCLUDE FILE ... token_types.incl.pl1 */
       28 
       29 	pl1_stat_$compiler_created_index = pl1_stat_$compiler_created_index+1;
       30 	return(create_token("cp."||bindec$vs(pl1_stat_$compiler_created_index),identifier));
       31 end create_identifier;
	SOURCE FILES USED IN THIS COMPILATION.

LINE      NUMBER  DATE MODIFIED     NAME			PATHNAME
             0    05/05/00  1823.9  create_identifier.pl1             >udd>sm>ds>w>ml>create_identifier.pl1
28           1    11/30/78  1327.4  token_types.incl.pl1              >ldd>incl>token_types.incl.pl1
	NAMES DECLARED IN THIS COMPILATION.

IDENTIFIER	     OFFSET    LOC STORAGE CLASS   DATA TYPE		ATTRIBUTES AND REFERENCES
								(* indicates a set context)

NAMES DECLARED BY DECLARE STATEMENT.
bindec$vs                       000010 constant        entry                    external dcl 23 ref 30
create_token                    000014 constant        entry                    external dcl 26 ref 30
identifier                      000000 constant        bit(9)                   initial dcl 1-3 set ref 30*
pl1_stat_$compiler_created_index
                                000012 external static fixed bin(15,0)          dcl 23 set ref 29* 29 30*

NAMES DECLARED BY DECLARE STATEMENT AND NEVER REFERENCED.
and                                    internal static bit(9)                   initial dcl 1-3
arrow                                  internal static bit(9)                   initial dcl 1-3
assignment                             internal static bit(9)                   initial dcl 1-3
asterisk                               internal static bit(9)                   initial dcl 1-3
bin_integer                            internal static bit(9)                   initial dcl 1-3
bit_string                             internal static bit(9)                   initial dcl 1-3
cat                                    internal static bit(9)                   initial dcl 1-3
char_string                            internal static bit(9)                   initial dcl 1-3
colon                                  internal static bit(9)                   initial dcl 1-3
comma                                  internal static bit(9)                   initial dcl 1-3
dec_integer                            internal static bit(9)                   initial dcl 1-3
eq                                     internal static bit(9)                   initial dcl 1-3
expon                                  internal static bit(9)                   initial dcl 1-3
fixed_bin                              internal static bit(9)                   initial dcl 1-3
fixed_dec                              internal static bit(9)                   initial dcl 1-3
float_bin                              internal static bit(9)                   initial dcl 1-3
float_dec                              internal static bit(9)                   initial dcl 1-3
ge                                     internal static bit(9)                   initial dcl 1-3
gt                                     internal static bit(9)                   initial dcl 1-3
i_bin_integer                          internal static bit(9)                   initial dcl 1-3
i_dec_integer                          internal static bit(9)                   initial dcl 1-3
i_fixed_bin                            internal static bit(9)                   initial dcl 1-3
i_fixed_dec                            internal static bit(9)                   initial dcl 1-3
i_float_bin                            internal static bit(9)                   initial dcl 1-3
i_float_dec                            internal static bit(9)                   initial dcl 1-3
is_arith_constant                      internal static bit(9)                   initial dcl 1-47
is_arithmetic_constant                 internal static bit(9)                   initial dcl 1-47
is_constant                            internal static bit(9)                   initial dcl 1-47
is_decimal_constant                    internal static bit(9)                   initial dcl 1-47
is_delimiter                           internal static bit(9)                   initial dcl 1-47
is_float_constant                      internal static bit(9)                   initial dcl 1-47
is_identifier                          internal static bit(9)                   initial dcl 1-47
is_imaginary_constant                  internal static bit(9)                   initial dcl 1-47
is_integral_constant                   internal static bit(9)                   initial dcl 1-47
is_isub                                internal static bit(9)                   initial dcl 1-47
isub                                   internal static bit(9)                   initial dcl 1-3
le                                     internal static bit(9)                   initial dcl 1-3
left_parn                              internal static bit(9)                   initial dcl 1-3
lt                                     internal static bit(9)                   initial dcl 1-3
minus                                  internal static bit(9)                   initial dcl 1-3
ne                                     internal static bit(9)                   initial dcl 1-3
ngt                                    internal static bit(9)                   initial dcl 1-3
nlt                                    internal static bit(9)                   initial dcl 1-3
no_token                               internal static bit(9)                   initial dcl 1-3
not                                    internal static bit(9)                   initial dcl 1-3
or                                     internal static bit(9)                   initial dcl 1-3
percent                                internal static bit(9)                   initial dcl 1-3
period                                 internal static bit(9)                   initial dcl 1-3
plus                                   internal static bit(9)                   initial dcl 1-3
right_parn                             internal static bit(9)                   initial dcl 1-3
semi_colon                             internal static bit(9)                   initial dcl 1-3
slash                                  internal static bit(9)                   initial dcl 1-3
substr                                                 builtin function         dcl 23

NAME DECLARED BY EXPLICIT CONTEXT.
create_identifier               000011 constant        entry                    external dcl 16

THERE WERE NO NAMES DECLARED BY CONTEXT OR IMPLICATION.

STORAGE REQUIREMENTS FOR THIS PROGRAM.

	Object	Text	Link	Symbol	Defs	Static
Start          0       0       150         166      71         160
Length       352      71        16         147      57           0

BLOCK NAME	         STACK SIZE     TYPE		WHY NONQUICK/WHO SHARES STACK FRAME
create_identifier                    94 external procedure  is an external procedure.  

THE FOLLOWING EXTERNAL OPERATORS ARE USED BY THIS PROGRAM.
alloc_char_temp     call_ext_out_desc   call_ext_out        return_mac          ext_entry

THE FOLLOWING EXTERNAL ENTRIES ARE CALLED BY THIS PROGRAM.
bindec$vs                     create_token

THE FOLLOWING EXTERNAL VARIABLES ARE USED BY THIS PROGRAM.
pl1_stat_$compiler_created_index




   LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC      LINE    LOC   
     16 000006        29 000016        30 000017


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
