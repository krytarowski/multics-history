/* Begin amu_mc.incl.pl1 */

dcl number_val_args fixed bin (17) init (23) static options (constant);

dcl valid_mc_arg (24) char (8) init 
("-dump",		    /*  mc from bos dump */
"-lg",		    /*  all of the info stored at the given pointer */
"-scu","-ppr","-tpr","-inst",   /*  scu data or trs or psr (if scu then not psr nor tsr) */
"-reg",		    /*  basic ou regs */
"-misc","-code","-flt","-tm", /* misc line of mc data if misc then not others */
"-eis",		    /* eis info if MIF flag in scu_data */	
"-prs","-pr0","-pr1","-pr2","-pr3","-pr4","-pr5","-pr6","-pr7", /* pointer regs if prs then not the others */
"-vbf","-oct","-set")  /* control args */
 static options (constant);

/* the next structuers all all the same real data word and a dcl'ed in
     many ways to make the code easer to write and undersand, only time
     will tell if this is the correct end result. If any are changed they 
     all must by changed, The bit order must corespond to valid_mc_arg */


	
dcl 1 arg_bits based (arg_bits_ptr) aligned,
    2 request_arg(number_val_args) bit (1) unal;

dcl 1 what_prs based (arg_bits_ptr) aligned,
    2 pad bit (13) unal,
    2 pregs (0:7) bit (1) unal,
    2 padr bit (16);
	

dcl 1 arg_bits_def based (arg_bits_ptr),
    2 dump bit (1) unal,
    2 all bit (1) unal,
    2 scu bit (1) unal,
    2 ppr bit (1) unal,
    2 tpr bit (1) unal,
    2 inst bit (1) unal,
    2 regs bit (1) unal,
    2 xreg (0:7) bit (1) unal,
    2 areg bit (1) unal,
    2 qreg bit (1) unal,
    2 mis bit (1) unal,
    2 mc_err bit (1) unal,
    2 flt bit (1) unal,
    2 tm bit (1) unal,
    2 eis bit (1) unal,
    2 prs bit (1) unal,
    2 pr (0:7) bit (1) unal,
    2 long bit (1) unal,
    2 set_ptr bit (1) unal,
    2 mc_stored bit (1) unal,
    2 rest_bits bit (1) unal;   /* bits to fill out the word **/
	
	

dcl arg_bits_ptr ptr;
	
/* End amu_mc.incl.pl1 */


*/
                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group Bull including Bull HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell Bull Inc., Groupe Bull
and Bull HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture for 
managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, Bull or Bull HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by Bull HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved

*/
