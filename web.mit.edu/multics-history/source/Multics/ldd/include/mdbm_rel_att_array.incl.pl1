/* BEGIN mdbm_rel_att_array.incl.pl1 -- odf 8/21/78 */
/* modified by Jim Gray - - June/July 1979 to add key/varying attr counts and comments
   Modified by Jim Gray - - April 1980, to add submodel's total_view bit to rel_names.
   Modified by Lindsey Spratt - - August 1980, to add security permission bits to rel/att_names.
   Modified by Jim Gray - - 80-11-06, to change s_perm = append_tuple_perm,
   d_perm = delete_tuple_perm, r_perm = status_perm, m_perm = unused_perm.

   81-01-23 Jim Gray : added bit to att_names so that the resultant can
   be build for partial view submodels, and know whether the last varying attr
   is a character or bit string type, for determining the bit offset of end of tuple.

   81-05-28 Jim Gray : removed structures for foreign key interface.



   NOTE: These structures are used as the parameters in the "mus_get_" routines
   that are called by mu_sec_make_res, to return the users view of
   either the model or submodel he has opened with. */

dcl 1 rel_names based (rns_ptr),			/* array of relations in a file to be readied */
    2 num fixed bin,				/* nbr. of relations in this file */
    2 item (num_rels_init refer (rel_names.num)),
      3 sm char (32),				/* submodel name of relation */
      3 dm char (32),				/* data model name */
      3 natts fixed bin,				/* nbr. of attrs. in this relation */
      3 ri_ptr ptr,					/* points to rel_info in file_model */
      3 total_view bit (1) unal,			/* ON --> all attrs in model rel present */
      3 status_perm bit (1) unal,			/* ON --> opener has permission to look at relation */
      3 append_tuple_perm bit (1) unal,			/* ON --> opener has permission to store into this relation */
      3 delete_tuple_perm bit (1) unal,			/* ON --> opener has permission to delete tuples */
      3 unused_perm bit (1) unal,			/* unused perm */
      3 pad bit (31) unal ;				/* for future use */

dcl 1 att_names based (ans_ptr),			/* array of attributes in a relation */
    2 num fixed bin,				/* attributes in a relation */
    2 num_key_attrs fixed bin,			/* number of key attributes in model/submodel relation */
    2 num_varying_attrs fixed bin,			/* count of varying bit/char data type attrs */
    2 last_model_attr_char_var bit (1) unal,		/* on => last attr in model view is char varying */
    2 mbz bit (35) unal,				/* for future use */
    2 item (num_atts_init refer (att_names.num)),
      3 sm char (32),				/* submodel name */
      3 dm char (32),				/* data model name */
      3 ai_ptr ptr,					/* points to attr_info in file_model */
      3 di_ptr ptr,					/* points to domain_info in file_model */
      3 rai_ptr ptr,				/* points to attr info in resultant model */
      3 r_perm bit (1) unal,				/* ON --> opener has permission to retrieve attribute */
      3 u_perm bit (1) unal,				/* ON --> opener has permission to update attribute */
      3 pad bit (34) unal;				/* future use */

dcl  num_rels_init fixed bin;
dcl  num_atts_init fixed bin;

dcl  rns_ptr ptr;
dcl  ans_ptr ptr;

/* END mdbm_rel_att_array.incl.pl1 */



*/
                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group Bull including Bull HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell Bull Inc., Groupe Bull
and Bull HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture for 
managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, Bull or Bull HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by Bull HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved

*/
