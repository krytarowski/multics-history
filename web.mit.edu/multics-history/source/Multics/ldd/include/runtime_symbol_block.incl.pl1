/* 	BEGIN INCLUDE FILE ... runtime_symbol_block.incl.pl1 */

/* 	copied from runtime_symbol.incl.pl1 and updated January 1983 by Melanie Weaver */

     dcl	   1 symbol_block	      aligned based,
	     2 flag	      unal bit (1),		/* always "1"b for Version II */
	     2 quick	      unal bit (1),		/* "1"b if quick block */
	     2 fortran	      unal bit (1),		/* "1"b if fortran program */
	     2 standard	      unal bit (1),		/* "1"b if program has std obj segment */
	     2 owner_flag	      unal bit (1),		/* "1"b if block has valid owner field */
	     2 skip	      unal bit (1),
	     2 type	      unal fixed bin (6) unsigned, /* = 0 for a block node */
	     2 number	      unal fixed bin (6) unsigned, /* begin block number */
	     2 start	      unal fixed bin (18) unsigned, /* rel ptr to start of symbols */
	     2 name	      unal fixed bin (18) unsigned, /* rel ptr to name of proc */
	     2 brother	      unal fixed bin (18) unsigned, /* rel ptr to brother block */
	     2 father	      unal fixed bin (18) unsigned, /* rel ptr to father block */
	     2 son	      unal fixed bin (18) unsigned, /* rel ptr to son block */
	     2 map	      unal,
	       3 first	      fixed bin (18) unsigned,/* rel ptr to first word of map */
	       3 last	      fixed bin (18) unsigned,/* rel ptr to last word of map */
	     2 entry_info	      unal fixed bin (18) unsigned, /* info about entry of quick block */
	     2 header	      unal fixed bin (18) unsigned, /* rel ptr to symbol header */
	     2 chain	      (4) unal fixed bin (18) unsigned, /* chain(i) is rel ptr to first symbol
					   	   on start list with length >= 2**i */
	     2 token	      (0:5) unal fixed bin (18) unsigned, /* token(i) is rel ptr to first token
					  	   on list with length >= 2 ** i */
	     2 owner	      unal fixed bin (18) unsigned; /* rel ptr to owner block */

     dcl	   1 with_symbol_block    aligned based,	/* version for PASCAL with blocks (type = 5) */
	     2 common_block_info  aligned like symbol_block,
	     2 with_string	      unal fixed bin (18) unsigned,
						/* rel ptr to string used in with statement */
	     2 real_level_1	      unal fixed bin (18) unsigned;
						/* rel ptr to original level 1 record node */

     dcl	   1 symbol_token	      aligned based,
	     2 next	      unal fixed bin (18) unsigned, /* rel ptr to next token */
	     2 dcl	      unal fixed bin (18) unsigned, /* rel ptr to first dcl of this token */
	     2 name,				/* ACC */
	       3 size	      unal unsigned fixed bin (9), /* number of chars in token */
	       3 string	      unal char (name_size refer (symbol_token.size));

     dcl	   name_size	      fixed bin (9) unsigned; /* number of chars in token */

/*	END INCLUDE FILE ... runtime_symbol_block.incl.pl1 */


*/
                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group Bull including Bull HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell Bull Inc., Groupe Bull
and Bull HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture for 
managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, Bull or Bull HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by Bull HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved

*/
