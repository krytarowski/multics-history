/* BEGIN INCLUDE FILE...ls_process_info.incl.pl1 */

/****^  HISTORY COMMENTS:
  1) change(85-04-01,Coren), approve(87-07-14,MCR7679), audit(87-03-18,GDixon),
     install(87-08-04,MR12.1-1056):
     Initial coding.
  2) change(87-04-23,GDixon), approve(87-07-14,MCR7679),
     audit(87-07-14,Parisek), install(87-08-04,MR12.1-1056):
      A) Add line_type to ls_process_info structure.
      B) Make process_group_id unaligned.
                                                   END HISTORY COMMENTS */

/* This include file describes the information returned by validate_user_ to
   login_server_connection_, and maintained for the life of the process or the
   connection (whichever is shorter). */

dcl ls_process_info_ptr pointer;

dcl 1 ls_process_info aligned based (ls_process_info_ptr),
    2 version char (8),				/* "lspiNNNN" */
    2 process_group_id char (32) unal,			/* Person.Project.tag */
    2 start_event_channel fixed bin (71),		/* event channel for sending initial wakeup to user process */
    2 authorization bit (72),				/* process's AIM authorization */
    2 initializer_handle bit (72),			/* "handle" used in request messages with the Initializer about this connection */
    2 server_handle bit (72),				/* "handle" for reading responses from the Initializer */
    2 process_id bit (36),
    2 initial_ring fixed bin,				/* initial ring of process */
    2 usage_type fixed bin,				/* login, dial, etc.; see active_connection_info.incl.pl1 */
    2 flags,
      3 fatal_error bit (1) unaligned,			/* "1"b when process has taken a fatal error */
      3 terminal_info_set bit (1) unaligned,		/* terminal_type and terminal_id are valid */
      3 pad bit (34) unaligned,
    2 terminal_type char (32),			/* terminal type established during login dialogue */
    2 terminal_id char (4),				/* similarly for terminal ID */
    2 line_type fixed bin;				/* similarly for line type. */

dcl LS_PROCESS_INFO_V1 char (8) internal static options (constant) initial ("lspi0001");


/* The following structure describes the option flags passed to validate_user_ */

dcl  ls_validate_options_ptr pointer;

dcl 1 ls_validate_options aligned based (ls_validate_options_ptr),
    2 version char (8),				/* "lsvoNNNN" */
    2 flags,
      3 brief bit (1) unaligned,			/* "1"b => don't print greeting message */
      3 not_first bit (1) unaligned,			/* "1"b => this is not first dialogue for this connection */
      3 mbz bit (34) unaligned;

dcl LS_VALIDATE_OPTIONS_V1 char (8) internal static options (constant) initial ("lsvo0001");

/* END INCLUDE FILE...ls_process_info.incl.pl1 */


*/
                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group Bull including Bull HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell Bull Inc., Groupe Bull
and Bull HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture for 
managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, Bull or Bull HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by Bull HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved

*/
