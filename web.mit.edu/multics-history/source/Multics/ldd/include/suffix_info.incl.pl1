/* BEGIN INCLUDE FILE: suffix_info.incl.pl1 */
/* format: style3,indcomtxt,idind30 */
/**** Jay Pattin 2/13/83
      M. Pandolf 1984.11.30 to set FS_OBJECT_TYPE_MSF to -multisegment_file

      The include file copy_flags.incl.pl1 must be included in any program using this include file.

      This structure is returned by the suffix_XXX_$suffix_info subroutines */

declare   suffix_info_ptr               ptr;

declare   1 suffix_info                 aligned based (suffix_info_ptr),
            2 version                   char (8),
            2 type                      char (32) unaligned,
            2 type_name                 char (32) unaligned,          /* Singular name of the object type, e.g. "mailbox" */
            2 plural_name               char (32) unaligned,          /* Plural of above, e.g. "mailboxes" */
            2 flags                     unaligned,
              3 standard_object         bit (1) unaligned,  /* ON if not an extended object (no suffix_XXX_) */
              3 extended_acl            bit (1) unaligned,  /* ON if uses extended ACLs, off if regular ACLs */
              3 has_switches            bit (1) unaligned,  /* ON if supports switches for objects */
              3 mbz1                    bit (33) unaligned,
            2 modes                     char (36),          /* correspondence between bits and chars for extended modes */
            2 max_mode_len              fixed bin,          /* maximum number of modes on an object */
            2 num_ring_brackets         fixed bin,          /* number of ring brackets on object */
            2 copy_flags                like copy_flags,    /* See copy_flags.incl.pl1 */
            2 info_pathname             char (168) unaligned;
                                                            /* pathname of info segment containing more info */

declare   SUFFIX_INFO_VERSION_1         char (8) static options (constant) init ("SUFFIX01");

/* This information is returned by the suffix_XXX_$list_switches subroutines */

declare   switch_list_ptr               ptr,
          alloc_switch_count            fixed bin,
          alloc_switch_name_count       fixed bin;

declare   1 switch_list                 aligned based (switch_list_ptr),
            2 version                   char (8),           /* SWITCH_LIST_VERSION_1 */
            2 switch_count              fixed bin,          /* total number of switches */
            2 switch_name_count         fixed bin,          /* total number of names */
            2 switches                  (alloc_switch_count refer (switch_list.switch_count)),
              3 name_index              fixed bin,          /* index of first name for this switch */
              3 name_count              fixed bin,          /* number of names for this switch */
              3 default_value           bit (1) aligned,    /* default setting for this switch */
              3 mbz1                    bit (36) aligned,   /* reserved for future use */
            2 names                     (alloc_switch_name_count refer (switch_list.switch_name_count)) char (32);

declare   SWITCH_LIST_VERSION_1         char (8) static options (constant) init ("SWLIST01");

declare   (
          FS_OBJECT_TYPE_SEGMENT        init ("-segment"),
          FS_OBJECT_TYPE_DIRECTORY      init ("-directory"),
          FS_OBJECT_TYPE_MSF            init ("-multisegment_file"),
          FS_OBJECT_TYPE_DM_FILE        init ("-dm_file"),
          FS_OBJECT_TYPE_LINK           init ("-link")
          )                             char (32) unaligned int static options (constant);

/* END INCLUDE FILE: suffix_info.incl.pl1 */


*/
                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group Bull including Bull HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell Bull Inc., Groupe Bull
and Bull HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture for 
managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, Bull or Bull HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by Bull HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved

*/
