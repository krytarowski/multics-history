/* BEGIN INCLUDE FILE mcs_echo_neg.incl.pl1  Bernard Greenberg 1/20/79 */



/****^  HISTORY COMMENTS:
  1) change(86-04-23,Coren), approve(86-04-23,MCR7300),
     audit(86-05-19,Beattie), install(86-07-08,MR12.0-1089):
               Changed version to 2, increased size of break table,
               included named constant for break table size.
                                                   END HISTORY COMMENTS */


/* This include file defines the callable entrypoints and argument data
   structures for ring 0 echo negotiation */

/* format: style2,linecom,^indnoniterdo,indcomtxt,^inditerdo,dclind5,idind25 */
     dcl	echo_neg_datap	     ptr;
     dcl	echo_neg_data_version_2  fixed bin static options (constant) init (2);
     dcl	ECHO_NEG_BREAK_TABLE_SIZE
			     fixed bin internal static options (constant) init (255);

     dcl	1 echo_neg_data	     based (echo_neg_datap) aligned,
						/* Echo negotiation data */
	  2 version	     fixed bin,
	  2 break		     (0:255) bit (1) unaligned,
						/* Break table, 1 = break */
	  2 pad		     bit (7) unaligned,
	  2 rubout_trigger_chars (2) unaligned,		/* Characters that cause rubout action */
	    3 char	     char (1) unaligned,
	  2 rubout_sequence_length
			     fixed bin (4) unsigned unaligned,
						/* Length of rubout sequence, output */
	  2 rubout_pad_count     fixed bin (4) unsigned unaligned,
						/* Count of pads needed */
	  2 buffer_rubouts	     bit (1) unaligned,	/* 1 = put rubouts and rubbed out in buffer */
	  2 rubout_sequence	     char (12) unaligned;	/* Actual rubout sequence */

/*** VERSION 1 STRUCTURE DECLARATION FOR COMPATIBILITY (TO BE REMOVED FOR MR12) ***/

     dcl	echo_neg_data_version_1  fixed bin static options (constant) init (1);

     dcl	1 v1_echo_neg_data	     based (echo_neg_datap) aligned,
						/* Echo negotiation data */
	  2 version	     fixed bin,
	  2 break		     (0:127) bit (1) unaligned,
						/* Break table, 1 = break */
	  2 pad		     bit (7) unaligned,
	  2 rubout_trigger_chars (2) unaligned,		/* Characters that cause rubout action */
	    3 char	     char (1) unaligned,
	  2 rubout_sequence_length
			     fixed bin (4) unsigned unaligned,
						/* Length of rubout sequence, output */
	  2 rubout_pad_count     fixed bin (4) unsigned unaligned,
						/* Count of pads needed */
	  2 buffer_rubouts	     bit (1) unaligned,	/* 1 = put rubouts and rubbed out in buffer */
	  2 rubout_sequence	     char (12) unaligned;	/* Actual rubout sequence */
/*** END VERSION 1 STRUCTURE ****/

     dcl	(
	hcs_$tty_read_echoed,
	hcs_$echo_negotiate_get_chars
	)		     entry (fixed bin, ptr, fixed bin (21), fixed bin (21), fixed bin (21), fixed bin (21),
			     fixed bin, fixed bin, fixed bin (35));
						/*
						   call  hcs_$echo_negotiate_get_chars
						   (devx, datap, offset, nelem, NRETURNED, NECHOED_RETURNED, screen_left, STATE, CODE);
						*/

/* END INCLUDE FILE mcs_echo_neg.incl.pl1 */


*/
                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group Bull including Bull HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell Bull Inc., Groupe Bull
and Bull HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture for 
managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, Bull or Bull HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by Bull HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved

*/
