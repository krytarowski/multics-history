/* BEGIN INCLUDE FILE ... mseg_operation_data.incl.pl1 */
/* Created:  April 1985 by G. Palter */

/* format: style3,linecom */


/* Description of a message segment primitive operation (mseg_) */

declare	1 mseg_operation_data
			aligned based (mseg_operation_data_ptr),
	  2 operation_id				/* identifies which operation is being performed */
			fixed binary (9) unaligned unsigned,
	  2 required_data	unaligned,		/* which parts of mseg_operation must the caller supply */
	    3 pathname	bit (1) unaligned,
	    3 mseg_ptr	bit (1) unaligned,
	    3 mseg_index	bit (1) unaligned,
	    3 access_info	bit (1) unaligned,
	    3 md_ptr	bit (1) unaligned,
	    3 message_info	bit (1) unaligned,
	    3 wakeup_state	bit (1) unaligned,
	    3 wakeup_state_version
			bit (1) unaligned,
	    3 pad		bit (1) unaligned,
	  2 begin_flags	unaligned,		/* controls mseg_utils_$begin_operation ... */
	    3 lock_segment	bit (1) unaligned,		/* ON => lock the segment */
	    3 dont_check_lock_results			/* ON => caller (delete_seg) will check that the lock is OK */
			bit (1) unaligned,
	    3 check_header_consistency		/* ON => check that the header looks OK */
			bit (1) unaligned,
	    3 initialize_header			/* ON => initialize the header if the segment's empty */
			bit (1) unaligned,
	    3 check_count_consistency			/* ON => check that the message count and chains are OK */
			bit (1) unaligned,
	    3 pad		bit (4) unaligned,
	  2 finish_flags	unaligned,		/* controls mseg_utils_$(finish abort)_operation */
	    3 truncate_if_possible			/* ON => truncate if the segment is empty */
			bit (1) unaligned,
	    3 already_salvaged			/* ON => we've already tried to salvage this segment once */
			bit (1) unaligned,
	    3 unlock_segment			/* ON => unlock the segment */
			bit (1) unaligned,
	    3 pad		bit (6) unaligned;

declare	mseg_operation_data_ptr
			pointer;


/* Data in mseg_operations_ used only by mseg_utils_ */

declare	mseg_operations_$names
			(26) character (64) varying external;
%page;
/* Named constants used in mseg_operations_.cds to build the above data structures */

/* format: idind31 */

declare	(
     /*** Individual required fields */
	MSEG_REQUIRE_PATHNAME	 initial ("400"b3),
	MSEG_REQUIRE_MSEG_PTR	 initial ("200"b3),
	MSEG_REQUIRE_MSEG_INDEX	 initial ("100"b3),
	MSEG_REQUIRE_ACCESS_INFO	 initial ("040"b3),
	MSEG_REQUIRE_MD_PTR		 initial ("020"b3),
	MSEG_REQUIRE_MESSAGE_INFO	 initial ("010"b3),
	MSEG_REQUIRE_WAKEUP_STATE	 initial ("004"b3),
	MSEG_REQUIRE_WAKEUP_STATE_VERSION
				 initial ("002"b3)
	)			 bit (9) aligned static options (constant);

declare	(
     /*** Commonly used groupings of required fields */
	MSEG_REQUIRED_FOR_MESSAGE	 initial ("250"b3), /* mseg_ptr, access_info, message_info */
	MSEG_REQUIRED_FOR_SEGMENT	 initial ("200"b3), /* mseg_ptr */
	MSEG_REQUIRED_FOR_FS_INTERFACE initial ("400"b3)	/* pathname */
	)			 bit (9) aligned static options (constant);

declare	(
     /*** Individual begin_operation flags */
	MSEG_LOCK_SEGMENT		 initial ("400"b3),
	MSEG_DONT_CHECK_LOCK_RESULTS	 initial ("200"b3),
	MSEG_CHECK_HEADER_CONSISTENCY	 initial ("100"b3),
	MSEG_INITIALIZE_HEADER	 initial ("040"b3),
	MSEG_CHECK_COUNT_CONSISTENCY	 initial ("020"b3)
	)			 bit (9) aligned static options (constant);

declare	(
     /*** Commonly used groupings of begin_operation flags */
	MSEG_BEGIN_FOR_MESSAGE	 initial ("520"b3), /* lock, check header, check count */
	MSEG_BEGIN_FOR_SEGMENT	 initial ("500"b3), /* lock, check header */
	MSEG_BEGIN_FOR_FS_INTERFACE	 initial ("000"b3)	/* no actions need be taken */
	)			 bit (9) aligned static options (constant);

declare	(
     /*** Individual finish_operation flags */
	MSEG_TRUNCATE_IF_POSSIBLE	 initial ("400"b3),
	MSEG_ALREADY_SALVAGED	 initial ("200"b3),
	MSEG_UNLOCK_SEGMENT		 initial ("100"b3)
	)			 bit (9) aligned static options (constant);

declare	(
     /*** Commonly used groupings of finish_operation flags */
	MSEG_FINISH_FOR_MESSAGE	 initial ("400"b3), /* truncate if possible */
	MSEG_FINISH_FOR_SEGMENT	 initial ("400"b3), /* truncate if possible */
	MSEG_FINISH_FOR_FS_INTERFACE	 initial ("000"b3)	/* no actions need be taken */
	)			 bit (9) aligned static options (constant);

/* END INCLUDE FILE ... mseg_operation_data.incl.pl1 */


*/
                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group Bull including Bull HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell Bull Inc., Groupe Bull
and Bull HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture for 
managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, Bull or Bull HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by Bull HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved

*/
