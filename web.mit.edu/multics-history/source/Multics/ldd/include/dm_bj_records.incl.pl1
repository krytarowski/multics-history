/* format: style4,indattr,idind33,^indcomtxt */

/* BEGIN INCLUDE FILE:	dm_bj_records.incl.pl1	*/
/*
Before journal records - images and marks

Designed by Andre Bensoussan 02/03/82
Written by Mike Pandolf 07/07/82
Modified:
10/01/82 by Lee A. Newcomb:  To add n_txn to all records so rollback after
	  crash knows how many transactions were active at crash time.
15feb83  by M. Pandolf: To add fm_handler_rec for both rollback and postcommit
	  handler used exclusively by file_manager_, add BEGIN_COMMIT mark,
	  and add PREFORM_BEGIN mark (for housekeeping, never written).
05apr83 by M. Pandolf to add BEGIN_MARK for bj_txte.last_completed_operation
*/


dcl  bj_rec_hdr_ptr		        ptr;		/* pointer to various bj records */

dcl  1 bj_rec_hdr		        aligned based (bj_rec_hdr_ptr),
       2 type		        char (4),		/* see types below */
       2 tid		        bit (36),		/* transaction id for this record */
       2 process_id		        bit (36),		/* of process initiating this transaction */
       2 prev_rec_id	        bit (36),		/* of record in this transaction */
       2 prev_rec_byte_size	        fixed bin (24),	/* of record in this transaction */
       2 tx_rec_no		        fixed bin (35),	/* number of this record in transaction list */
       2 n_txn		        fixed bin;		/* number of active txn's in the BJ containing this txn */
						/* with at least one record written in the BJ.  This is */
						/* used for rollback after crash */
						/* N.B. commits and abort marks do not count themselves */

/* before journal records for the various record types */

dcl  1 bj_committed_rec	        aligned like bj_rec_hdr based (bj_rec_hdr_ptr);

dcl  1 bj_begin_commit_rec	        aligned like bj_rec_hdr based (bj_rec_hdr_ptr);

dcl  1 bj_aborted_rec	        aligned like bj_rec_hdr based (bj_rec_hdr_ptr);

dcl  1 bj_rolled_back_rec	        aligned based (bj_rec_hdr_ptr),
       2 header		        like bj_rec_hdr,
       2 checkpoint_no	        fixed bin (35),
       2 last_rolled_back_rec_id      bit (36);

dcl  1 bj_rollback_handler_rec        aligned based (bj_rec_hdr_ptr),
       2 header		        like bj_rec_hdr,
       2 name_len		        fixed bin (24),
       2 info_len		        fixed bin (24),
       2 proc_name		        char (bj_rollback_name_len refer (bj_rollback_handler_rec.name_len)),
       2 info_bits		        bit (bj_rollback_info_len refer (bj_rollback_handler_rec.info_len));

/* dm_bj_records.incl.pl1 CONTINUED NEXT PAGE */
%page;
/* dm_bj_records.incl.pl1 CONTINUATION FROM PREVIOUS PAGE */

dcl  1 bj_before_image	        aligned based (bj_rec_hdr_ptr),
       2 header		        like bj_rec_hdr,
       2 fm_uid		        bit (36),
       2 fm_oid		        bit (36),
       2 ci_no		        fixed bin (35),
       2 n_parts		        fixed bin (17),
       2 image_len		        fixed bin (24),
       2 part		        dim (bj_before_image_n_parts refer (bj_before_image.n_parts)),
         3 byte_offset	        fixed bin (24),
         3 byte_length	        fixed bin (24),
       2 image		        char (bj_before_image_len refer (bj_before_image.image_len));

dcl  1 bj_fm_handler_rec	        aligned based (bj_rec_hdr_ptr),
       2 header		        like bj_rec_hdr,
       2 fm_uid		        bit (36),
       2 fm_oid		        bit (36),
       2 prev_fm_handler_rec_id       bit (36),
       2 info_len		        fixed bin,
       2 info_bytes		        char (bj_fm_handler_info_len refer (bj_fm_handler_rec.info_len));

/* extent definers */

dcl  bj_rollback_name_len	        fixed bin (24);
dcl  bj_rollback_info_len	        fixed bin (24);
dcl  bj_before_image_n_parts	        fixed bin;
dcl  bj_before_image_len	        fixed bin (24);
dcl  bj_fm_handler_info_len	        fixed bin (24);

/* record type identifiers */

dcl  1 BJ_RECORD_TYPE	        int static options (constant) aligned,
     ( 2 BEGIN_COMMIT	        init ("bcom"),
       2 PERFORM_COMMIT	        init ("pcom"),
       2 COMMITTED		        init ("comm"),
       2 ABORTED		        init ("abor"),
       2 ROLLED_BACK	        init ("roll"),
       2 HANDLER		        init ("hand"),
       2 FM_ROLLBACK_HANDLER	        init ("fmrb"),
       2 FM_POSTCOMMIT_HANDLER        init ("fmpc"),
       2 BEGIN_MARK		        init ("begi"),
       2 BEFORE_IMAGE	        init ("befo")) char (4);

/* END INCLUDE FILE:	dm_bj_records.incl.pl1	*/


*/
                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group Bull including Bull HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell Bull Inc., Groupe Bull
and Bull HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture for 
managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, Bull or Bull HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by Bull HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved

*/
