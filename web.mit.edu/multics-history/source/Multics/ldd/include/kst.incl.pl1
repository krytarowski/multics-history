/*  START OF:	kst.incl.pl1			  *  *  *  *  *  */

/*
Modified March 1976 by R. Bratt 
Modified November 1984 to remove hdr, Keith Loepere. */


/****^  HISTORY COMMENTS:
  1) change(86-08-08,GDixon), approve(86-08-08,MCR7388),
     audit(86-09-02,Farley), install(86-09-08,MR12.0-1150):
     Add warning on use of kste.entryp.
                                                   END HISTORY COMMENTS */


dcl  pds$kstp ext ptr,
    (kstp, kstep) ptr;

dcl 1 kst aligned based (kstp),			/* KST header declaration */
    2 lowseg fixed bin (17),				/* lowest segment number described by kst */
    2 highseg fixed bin (17),				/* highest segment number described by kst */
    2 highest_used_segno fixed bin (17),		/* highest segment number yet used  */
    2 lvs fixed bin (8),				/* number of private LVs this process is connected to */
    2 time_of_bootload fixed bin (71),			/* bootload time during prelinking */
    2 garbage_collections fixed bin (17) unaligned,	/* KST garbage collections */
    2 entries_collected fixed bin (17) unaligned,		/* KST entries recovered by garbage collection */
    2 free_list bit (18) unaligned,			/* relative pointer to first free kste */
    2 prelinked_ring (7) bit (1) unaligned,		/* rings prelinked in process */
    2 template bit (1) unaligned,			/* this is a template kst if set */
    2 allow_256K_connect bit (1) unaligned,		/* can use 256K segments */
    2 unused_2 bit (9) unaligned,
    2 uid_hash_bucket (0 : 127) bit (18) unaligned,	/* hash buckets */
    2 kst_entry (0 refer (kst.lowseg):0 refer (kst.highseg)) aligned like kste, /* kst entries */
    2 lv (1:256) bit (36),				/* private logical volume connection list */
    2 end_of_kst bit (36);

dcl 1 kste based (kstep) aligned,			/* KST entry declaration */
    2 fp bit (18) unaligned,				/* forward rel pointer */
    2 segno fixed bin (17) unaligned,			/* segment number of this kste */
    2 usage_count (0:7) fixed bin (8) unaligned,		/* outstanding initiates/ring */
    2 entryp ptr unaligned,				/* branch pointer */
						/* See WARNING below for requirements to use entryp. */
    2 uid bit (36) aligned,				/* unique identifier */
    2 access_information unaligned,
      3 dtbm bit (36),				/* date time branch modified */
      3 extended_access bit (33),			/* extended access from the branch */
      3 access bit (3),				/* rew */
      3 ex_rb (3) bit (3),				/* ring brackets from branch */
    2 pad1 bit (3) unaligned,
    2 flags unaligned,
      3 dirsw bit (1),				/* directory switch */
      3 allow_write bit (1),				/* set if initiated with write permission */
      3 priv_init bit (1),				/* privileged initiation */
      3 tms bit (1),				/* transparent modification switch */
      3 tus bit (1),				/* transparent usage switch */
      3 tpd bit (1),				/* transparent paging device switch */
      3 audit bit (1),				/* audit switch */
      3 explicit_deact_ok bit (1),			/* set if I am willing to have a user force deactivate */
      3 pad bit (3),
    2 infcount fixed bin (12) unaligned;		/* _i_f dirsw _t_h_e_n inferior count _e_l_s_e lv index */


/* *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */
/*							       */
/* WARNING: Before using kste.entryp to get a pointer to the directory       */
/* entry associated with the kst entry, you must first validate its value    */
/* by calling sum$getbranch or sum$getbranch_root_my.  This call also locks  */
/* the containing directory.  The containing directory must remain locked    */
/* during the entire period when kste.entryp and the directory entry are     */
/* being referenced.  Once the directory is unlocked, kste.entryp can no     */
/* longer be used to get a pointer to the entry within the unlocked	       */
/* directory since the dir entry could have been moved within the directory  */
/* by another processor.					       */
/*							       */
/* If you only need a pointer to the directory containing the associated     */
/* dir entry (but not to the dir entry itself), you can use:	       */
/*    pointer (kste.entryp, 0)				       */
/* without calling sum to lock the directory and validate entryp.  GDixon    */
/*							       */
/* *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */

/*  END OF:	kst.incl.pl1			  *  *  *  *  *  */


*/
                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group Bull including Bull HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell Bull Inc., Groupe Bull
and Bull HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture for 
managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, Bull or Bull HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by Bull HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved

*/
