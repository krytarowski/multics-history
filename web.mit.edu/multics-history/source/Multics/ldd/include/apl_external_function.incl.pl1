/* ====== BEGIN INCLUDE SEGMENT	apl_external_function.incl.pl1 ============================ */

/* This include segment contains all of the Version 2 apl declarations necessary for an external apl
   function to interface to apl. */

/* automatic */

declare	data_elements fixed binary (21);	/* number of elements for arrays */

/* entries */

declare	apl_allocate_words_ entry (fixed binary (19), unaligned pointer);
		/* param 1	(input)	number of words to allocate */
		/* param 2	(output)	word-aligned packed pointer to allocated bead,
					with general_bead.size and general_bead.reference_count set. */

declare	apl_free_words_ entry (fixed binary (19), unaligned pointer);
		/* param 1	(input)	number of words to free */
		/* param 2	(input)	word-aligned packed pointer to bead to be freed. */

declare	apl_free_bead_ entry (unaligned pointer);
		/* param 1	(input)	word-aligned packed pointer to bead to be freed. */
		/*			if reference count is non-zero, a system error will result. */

declare	apl_get_value_stack_ entry (fixed binary (19));
		/* param 1	(input)	number of words needed in a value stack. */
		/* (implicit)	(output)	sets ws_info.value_stack_ptr to point to new value stack. */

declare	apl_subsystem_ entry (fixed bin (35), bit (*) aligned, char (*), char (*), char (*), char (*),
		fixed bin (35));
		/* param 1	(input)	user number */
		/* param 2	(input)	control switches (1 like ws_info.switches) */
		/* param 3	(input)	initial ws pathname */
		/* param 4	(input)	terminal conversion table to use */
		/* param 5	(output)	user-specified signoff lock ("*" = no lock) */
		/* param 6	(output)	0 = normal termination,
					apl_error_table_$off_hold = )OFF HOLD,
					apl_error_table_$cant_load_ws = could not load initial ws */

declare	apl_system_error_ entry (fixed bin (35));
		/* param 1	(input)	status code of error to be printed. */
		/*			system errors will not return to caller. */

/* external static */

declare	(apl_error_table_$cant_load_ws,	/* status code returned by apl_subsystem_ if ws not found */
	apl_error_table_$domain,		/* status code for DOMAIN ERROR */
	apl_error_table_$function,		/* status code for FUNCTION ERROR - IN EXTERNAL FUNCTION */
	apl_error_table_$index,		/* status code for INDEX ERROR */
	apl_error_table_$length,		/* status code for LENGTH ERROR */
	apl_error_table_$no_type_bits,	/* status code for SYSTEM ERROR - VALUE HAS NO TYPE BITS */
	apl_error_table_$rank,		/* status code for RANK ERROR */
	apl_error_table_$result_size,		/* status code for RESULT SIZE ERROR - OBJECT WOULD BE LARGER THAN A SEGMENT */
	apl_error_table_$system_error,	/* status code for SYSTEM ERROR */
	apl_error_table_$off_hold)		/* status code returned by apl_subsystem_ after )OFF HOLD */
	fixed binary (35) external static;

/* include files */

%include apl_number_data;
%include apl_ws_info;
%include apl_bead_format;
%include apl_value_bead;
%include apl_operators_argument;

/* ------ END INCLUDE SEGMENT		apl_external_function.incl.pl1 ---------------------------- */


*/
                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group Bull including Bull HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell Bull Inc., Groupe Bull
and Bull HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture for 
managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, Bull or Bull HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by Bull HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved

*/
