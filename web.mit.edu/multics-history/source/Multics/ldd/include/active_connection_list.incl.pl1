/*  BEGIN:   active_connection_list.incl.pl1		  *  *  *  *  *  */

/****^  HISTORY COMMENTS:
  1) change(85-04-01,Coren), approve(87-06-24,MCR7681), audit(87-03-26,GDixon),
     install(87-08-04,MR12.1-1056):
     Initial coding.
  2) change(87-03-31,GDixon), approve(87-06-24,MCR7681),
     audit(87-06-24,Hartogs), install(87-08-04,MR12.1-1056):
      A) Add CONNECTION_LIST_HASH_SIZE named constant.
      B) Add initializer_of_list lock element to the table header.
      C) Add force_accounting_flush_entry element to list entries.
  3) change(87-05-13,Brunelle), approve(87-06-24,MCR7681),
     audit(87-06-24,Hartogs), install(87-08-04,MR12.1-1056):
     Add .owner_group_id field.
                                                   END HISTORY COMMENTS */

/* *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */
/*							       */
/* This include file defines the inner-ring system-wide table of network     */
/* connections that have been assigned to user processes, either by login    */
/* servers or as a result of dial_out operations.  This table is maintained  */
/* via gate entries: privileged ones, used by login servers, to add and      */
/* delete connections assigned to user processes; and by highly privileged   */
/* gates used by the Initializer to obtain connection data for all login     */
/* servers.						       */
/*							       */
/* *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */

dcl active_connection_list_ptr pointer;
dcl actl_hash_table_size fixed bin;

dcl 1 active_connection_list aligned based (active_connection_list_ptr),
    2 header,
      3 version char (8),				/* "actlNNNN" */
      3 lock bit (36) aligned,			/* to guard against simultaneous updates */
      3 initializer_of_list bit (36) aligned,		/* lock ID of process which initialized the list. */
      3 no_of_connections fixed bin,
      3 first_connection_offset bit (18),
      3 last_connection_offset bit (18),
      3 header_pad (7) fixed bin (35),
    2 hash_table,
      3 size fixed bin,
      3 entries (actl_hash_table_size refer (active_connection_list.hash_table.size)) bit (18) unaligned,
    2 connection_area area (connection_area_size);	/* where connection entries are allocated */

dcl connection_area_size fixed bin (18) unsigned;

dcl act_ptr pointer;

dcl 1 active_connection aligned based (act_ptr),
    2 version char (8),				/* "actNNNNN" */
    2 connection_name char (32),			/* ID of the connection */
    2 service_type char (32),				/* network service type of this connection */
    2 user_process_id bit (36) aligned,			/* process to which this connection is assigned */
    2 user_group_id char (32),			/* person.project.tag */
    2 owner_process_id bit (36) aligned,		/* login server process, if any */
    2 owner_group_id char (32),			/* person.project.tag */
    2 owner_terminate_event_channel fixed bin (71),	/* to wake up owner on process termination */
    2 owner_initializer_id bit (72) aligned,		/* for communicating with initializer on termination if owner is dead */
    2 force_disconnect_entry char (64),			/* name of the entrypoint used to force disconnection */
    2 force_accounting_flush_entry char (64),		/* name of the entrypoint used to force account update */
    2 connection_handle fixed bin (35),			/* handle used in calling service entries */
    2 prev_connection bit (18) unaligned,		/* offset of previous connection in list */
    2 next_connection bit (18) unaligned,		/* offset of next connection in list */
    2 prev_hash bit (18) unaligned,			/* offset of previous connection sharing hash table entry */
    2 next_hash bit (18) unaligned,			/* offset of next connection sharing hash table entry */
    2 prev_connection_for_user bit (18) unaligned,	/* offset of previous connection for this user */
    2 next_connection_for_user bit (18) unaligned,	/* offset of next connection for this user */
    2 prev_connection_for_owner bit (18) unaligned,	/* offset of previous connection for this owner */
    2 next_connection_for_owner bit (18) unaligned,	/* offset of next connection for this owner */
    2 usage_type fixed bin,				/* login, dial_out, etc. -- see ls_usage_types.incl.pl1 */
    2 flags,
      3 delegated bit (1) unaligned,			/* assigned to user by owner */
      3 mbz_bits bit (35) unaligned;

dcl ACTL_VERSION_1 char (8) internal static options (constant) initial ("actl0001");
dcl ACT_VERSION_1 char (8) internal static options (constant) initial ("act00001");
dcl ACT_HASH_TABLE_SIZE fixed bin int static options(constant) init(23);
						/* This constant must be odd, to cause allocation */
						/* area to begin on a doubleword boundary. */


/*  END OF:  active_connection_list.incl.pl1		  *  *  *  *  *  */


*/
                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group Bull including Bull HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell Bull Inc., Groupe Bull
and Bull HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture for 
managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, Bull or Bull HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by Bull HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved

*/
