/* BEGIN INCLUDE FILE ... data_type_info_.incl.pl1

   attributes of each Multics data type.  You may not rely on the dimension never exceeding 64
   James R. Davis 6 Apr 79
   Modified JMAthane June 83 to add "type" bit field 
   Upped bound from 64 to 80 10/18/83 S. Herbst
   Added "hex" and "generic" bits 01/23/84 S. Herbst
   Upped bound from 80 to 86 01/81/84 R. Gray
   Upper bound from 86 to 87 JMAthane (for Pascal strings type dtype)
*/

     
/****^  HISTORY COMMENTS:
  1) change(86-09-05,JMAthane), approve(86-09-05,MCR7525),
     audit(86-09-11,Martinson), install(86-11-12,MR12.0-1208):
     The data_type_info array now has 87 entries instead of 86 due to
     introduction of pascal_string_type_dtype.
                                                   END HISTORY COMMENTS */

dcl	   data_type_info_$version_number fixed bin external static;
     dcl	   data_type_info_this_version fixed bin internal static options (constant) init (1);

     dcl	   1 data_type_info_$info (87) aligned external static,
	     2 computational      bit (1) unal,
	     2 arithmetic	      bit (1) unal,
	     2 arithmetic_attributes unal,		/* only valid if arithmetic */
	       3 fixed	      bit (1) unal,		/* PL/I type */
	       3 complex	      bit (1) unal,		/* PL/I mode */
	       3 decimal	      bit (1) unal,		/* PL/I base */
	       3 signed	      bit (1) unal,
	       3 trailing_sign    bit (1) unal,		/* only valid if signed */
	       3 decimal_attributes unal,		/* only valid if decimal */
	         4 packed_dec     bit (1) unal,		/* 4 bits per digit or 9 */
	         4 digit_aligned  bit (1) unal,		/* valid for packed_dec only */
	         4 overpunched    bit (1) unal,
	     2 char_string	      bit (1) unal,		/* valid for non-arithmetic */
	     2 bit_string	      bit (1) unal,		/* valid for non-arithmetic */
	     2 varying	      bit (1) unal,		/* for bit or char only */
	     2 type	      bit (1) unal,		/* this symbol is a type */
	     2 hex	      bit (1) unal,		/* a hexadecimal type (eg., hex floating point) */
	     2 generic	      bit (1) unal,		/* eg., real_flt_dec_generic_dtype */
	     2 pad	      bit (20) unal;

     dcl	   data_type_info_$ninebit_sign_chars char (2) external static;
     dcl	   data_type_info_$ninebit_digit_chars char (10) external static;
     dcl	   data_type_info_$ninebit_overpunched_sign_chars char (22) external static;

     dcl	   data_type_info_$max_decimal_precision fixed bin external static;
     dcl	   data_type_info_$max_float_binary_precision fixed bin external static;
     dcl	   data_type_info_$max_fixed_binary_precision fixed bin external static;


/* END INCLUDE FILE ... data_type_info_.incl.pl1 */


*/
                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group Bull including Bull HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell Bull Inc., Groupe Bull
and Bull HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture for 
managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, Bull or Bull HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by Bull HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved

*/
