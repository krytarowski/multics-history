	/* START OF:	rdc_stack_fcns_.incl.pl1	  *  *  *  *  *  *  */

	/*  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  */
	/*							*/
	/* N__a_m_e:  rdc_stack_fcns_.incl.pl1				*/
	/*							*/
	/*      This include segment is used by compilers generated by the	*/
	/* reduction_compiler.  It includes code for manipulating the 	*/
	/* reduction label stack.					*/
	/*							*/
	/* S__t_a_t_u_s							*/
	/*							*/
	/* 0) Created:  April, 1974 by G. C. Dixon			*/
	/*							*/
	/*  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  */

RD_STACK:	if STACK_DEPTH > 0 then do;
	     NRED = STACK (STACK_DEPTH);
	     go to RD_TEST_REDUCTION;
	     end;
	else
	     go to RD_NEXT_REDUCTION;

RD_STACK_POP:
	if STACK_DEPTH > 0 then do;
	     NRED = STACK (STACK_DEPTH);
	     STACK_DEPTH = max (STACK_DEPTH-1, 0);
	     go to RD_TEST_REDUCTION;
	     end;
	else
	     go to RD_NEXT_REDUCTION;

/*  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  **  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  */


PUSH:	procedure (N);				/* invoked to push reduction number 'N' onto	*/
						/* the reduction stack.			*/
     dcl	N			fixed bin;

     dcl (addr, dimension, length, null)
				builtin;

     dcl	cu_$cl			entry,
	iox_$put_chars		entry (ptr, ptr, fixed bin, fixed bin(35)),
	iox_$error_output		ptr ext static,
	lex_error_		entry options(variable);

     dcl	brief_error		char(4) varying initial ("") int static,
	long_error		char(234) varying int static init(
"An internal stack (the reduction stack) has overflowed.
The translation has failed.  Contact translator maintenance
personnel for assistance.
     Processing reduction: ^d
     Reduction being stacked: ^d
     Maximum stack depth: ^d"),
	non_restart_error		char(33) int static init ("Translation cannot be restarted.
");

	if STACK_DEPTH >= dimension (STACK, 1) then do;
	     call lex_error_ (0, "0"b, 4, 0, null, null, "11"b, long_error, brief_error, NRED, N,
			  dimension(STACK,1));
get_to_cl:     call cu_$cl();
	     call iox_$put_chars (iox_$error_output, addr(non_restart_error), length(non_restart_error), 0);
	     go to get_to_cl;
	     end;					/* stack overflow is a non-recoverable error.	*/
	else
	     STACK_DEPTH = STACK_DEPTH + 1;
	STACK (STACK_DEPTH) = N;

	end PUSH;

/*  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  **  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  */

	/* END OF:	rdc_stack_fcns_.incl.pl1	  *  *  *  *  *  *  */


*/
                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group Bull including Bull HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell Bull Inc., Groupe Bull
and Bull HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture for 
managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, Bull or Bull HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by Bull HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved

*/
