/*  START OF:	forum_structures.incl.pl1		  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * 	*/

declare	forum_control_ptr		ptr,
	proceedings_ptr		ptr;

declare	1 forum_control		aligned based (forum_control_ptr),
	  2 forum_lock		bit (36),		/* Proceedings lock.				*/
	  2 next_trans_loc		fixed bin (35),	/* Characters in proceedings.				*/
	  2 flags			unaligned,
	     3 mbz0		bit (3) unaligned,	/* Already wasted on acl stuff at MIT */
	     3 msg_init		bit (1) unaligned,	/* On if message info is valid			*/
	     3 am_init		bit (1) unaligned,	/* next value is valid */
	     3 am_print_acl_msg	bit (1) unaligned,	/* what administrator says */
	     3 cm_init		bit (1) unaligned,  /* next value is valid */
	     3 cm_print_acl_msg	bit (1) unaligned,  /* what chairman says */
	     3 adjourned		bit (1) unaligned,  /* temporarily out of service, per chairman request */
	     3 mbz1		bit (9) unaligned, /* Future expansion					*/
	  2 no_transactions		fixed bin unaligned,/* Transaction sequence number.			*/
	  2 message_loc		fixed bin unaligned,/* location of chairman message in proceedings seg	*/
	  2 no_attendees		fixed bin unaligned,/* Number of participants.				*/
	  2 mbz2			bit (18) unaligned,
	  2 no_deleted		fixed bin unaligned,
	  2 chairman		unaligned,
	    3 person_id		char (22),
	    3 project_id		char (9),
	  2 attendee		(500),		/* Attendee data. */
	    3 person_id		char (22) unaligned,
	    3 project_id		char (11) unaligned,
	    3 attending		bit (1) unaligned,
	    3 deleted		bit (1) unaligned,
	    3 interesting		bit (1) unaligned,	/* tentative, not used yet */
	    3 notify		bit (1) unaligned,
	    3 removed		bit (1) unaligned,	/* on if set_participate_off used */
	    3 write_allowed		bit (1) unaligned,
	    3 acl_change_pending	bit (1) unaligned,
	    3 message_changed	bit (1) unaligned,
	    3 unused_flags		bit (1) unaligned,	/* Spare flag. */
	    3 last_time_attended	fixed bin (71),	/* date/time last attended				*/
	    3 lock_id		bit (36) aligned,	/* Used to check validity of attending.			*/
	    3 highest_trans_seen	fixed bin,
	    3 process_id		bit (36),
	    3 public_wakeup_chan	fixed bin (71),	/* Transaction channel.				*/
	  2 transactions		(0 refer (forum_control.no_transactions)) aligned like one_transaction;

declare	1 one_transaction		aligned based,
	2 person_id		char (22) unaligned,
	2 project_id		char (11) unaligned,
	2 deleted			bit (1) unaligned,	/* logically removed				*/
	2 gone			bit (1) unaligned,	/* physically removed via compaction			*/
	2 unfilled		bit (1) unaligned,	/* on if trans entered unfilled			*/
	2 deleted_by_author		bit (1) unaligned,	/* as opposed to deleted by chairman */
	2 unused			bit (23) unaligned,
	2 prior_ref_index		fixed bin,	/* index to trans I refer to				*/
	2 next_ref_index		fixed bin,	/* index to trans referring to me			*/
	2 subject			char (72) unaligned,
	2 time			fixed bin (71),	/* date-time of entry				*/
	2 offset			fixed bin (35),	/* Where text of transaction begins			*/
	2 length			fixed bin (21);	/* in bytes					*/

declare	ipc_message		fixed bin (71) based (msg_ptr),	/* message for inter-process calls	*/
	msg_ptr			ptr static;

declare	1 forum_message		aligned,		/* what we're trying to tell other process(es)		*/
	  2 forum_uid		bit (36) aligned,	/* what forum					*/
	  2 index			fixed bin;	/* who did it?					*/

/*  END OF:	forum_structures.incl.pl1		  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * 	*/


*/
                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group Bull including Bull HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell Bull Inc., Groupe Bull
and Bull HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture for 
managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, Bull or Bull HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by Bull HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved

*/
