

/* STATIC DATA */

dcl 1 iocb_arg static,
     2 pt ptr init(null()),	/* initialized to address of basic structure */
     2 zeros bit(144) init(""b);
dcl 1 temp_arg static,
     2 pt ptr init(null()),	/* always null */
     2 type fixed bin init(3),
     2 zeros bit(108) init(""b);
dcl 1 status_arg static,
     2 pt ptr init(null()),	/* always null */
     2 type fixed bin init(3),
     2 off1 fixed bin init(40),
     2 zeros bit(72) init(""b);
dcl 1 fsb_arg static,
     2 pt ptr init(null()),	/* always null */
     2 type fixed bin init(3),
     2 off1 fixed bin,	/* set each time to wd offset in fsb */
     2 off2 fixed bin init(0),  /* not used */
     2 bits bit(36) init("0000000000000000000001001"b);	/* pr1 */

dcl 1 mpout static,
     2 n fixed bin init(4),
     2 pt1 ptr,
     2 pt2 ptr,
     2 pt3 ptr,
     2 pt4 ptr;
dcl file_key_desc char(40) based;
dcl 1 num_type9 static,
     2 header (4) fixed bin init(112,0,0,9),
     2 repl_ptr (2) ptr init((2)null()),
     2 fill1  bit(108) init(""b),
     2 file_key_info,
	3 fb1 (3) fixed bin init(0,0,0),
	3 size fixed bin init(0),
	3 places_left fixed bin,
	3 places_right fixed bin init(0),
	3 flags1 bit(36) init("010000100100000001000000000100000000"b),
	3 flags2 bit(36) init(""b),
	3 seg fixed bin init(0),
	3 off fixed bin,
     2 fill2 (7) fixed bin init(0,0,0,0,0,0,0);
dcl 1 alpha_type9 static,
     2 header (4) fixed bin init(112,0,0,9),
     2 repl_ptr (2) ptr init((2)null()),
     2 fill1  bit(108) init(""b),
     2 file_key_info,
	3 fb1 (3) fixed bin init(0,0,0),
	3 size fixed bin init(0),
	3 fb2 (2) fixed bin init(0,0),
	3 flags1 bit(36) init("010000100100000000010000000100000000"b),
	3 flags2 bit(36) init(""b),
	3 seg fixed bin init(0),
	3 off fixed bin,
     2 fill2 (7) fixed bin init(0,0,0,0,0,0,0);
dcl 1 fkey_type9 static,
     2 header (4) fixed bin init(112,0,0,9),
     2 repl_ptr (2) ptr init((2)null()),
     2 fill1  bit(108) init(""b),
     2 file_key_info,
	3 fb1 (3) fixed bin init(0,0,0),
	3 size fixed bin init(0),
	3 fb2 (2) fixed bin init(0,0),
	3 flags1 bit(36) init(""b),
	3 flags2 bit(36) init(""b),
	3 seg fixed bin,
	3 off fixed bin,
     2 fill2 (7) fixed bin init(0,0,0,0,0,0,0);
dcl 1 type19 static,
     2 size fixed bin init(38),
     2 line fixed bin init(0),
     2 column fixed bin init(0),
     2 type fixed bin init(19),
     2 verb fixed bin init(18),	 	/* verb number */
     2 e fixed bin init(1),
     2 h fixed bin init(0),
     2 i fixed bin init(0),
     2 j fixed bin init(0),
     2 a bit(3) init(""b),
     2 b bit(1) init(""b),
     2 c bit(1) init(""b),
     2 d bit(2) init(""b),
     2 f bit(2) init(""b),
     2 g bit(2) init(""b),
     2 k bit(5) init(""b);

dcl 1 ioerror static,
     2 cobol_code fixed bin,
     2 retry_tag fixed bin,
     2 is_tag fixed bin,
     2 ns_tag fixed bin,
     2 type1_ptr ptr,
     2 mode fixed bin;

dcl mcode_off fixed bin static init(40);

dcl fsb_keylen_sw fixed bin static init(24);	/* offset 6 */
dcl fsb_key fixed bin static init(28);		/* offset 7 */
dcl fsb_key_wdoff fixed bin static init(7);
dcl delete_errno fixed bin static init(30);	/* Unable to delete record */
dcl seek_errno fixed bin static init(29);	/* Unable to seek key for delete */
dcl delete_seq_errno fixed bin static init(28);  /* Invalid delete attempted - previous I/O operation was not read */
dcl output_errno fixed bin static init(42); /* Invalid I/O operation. Attempt to delete in a file not opened as i-o */


/* EXTERNAL ENTRY NAMES */

dcl cobol_ioop_util$set_icode entry;
dcl cobol_gen_ioerror$finish_up entry(ptr, ptr);
dcl cobol_reg_manager$after_op entry(fixed bin);
dcl cobol_gen_ioerror entry(ptr, ptr);
dcl cobol_call_op entry(fixed bin, fixed bin);
dcl cobol_set_fsbptr entry(ptr);
dcl cobol_ioop_util$lda_du entry(fixed bin);
dcl cobol_ioop_util$set_x5 entry(fixed bin);
dcl cobol_alloc$stack entry(fixed bin,fixed bin,fixed bin);
dcl cobol_read_ft entry(fixed bin,ptr);
dcl cobol_read_rand entry(fixed bin,char(5),ptr);
dcl cobol_define_tag entry(fixed bin);

/* sub-generators */
dcl cobol_move_gen entry(ptr);
dcl cobol_io_util$file_desc entry(fixed bin(24));
dcl cobol_io_util$move_direct entry(bit(3) aligned,fixed bin,fixed bin,fixed bin,bit(18) aligned);
dcl cobol_io_util$bypass_error entry(fixed bin,fixed bin);
dcl cobol_io_util$bypass_mode_error entry(fixed bin,bit(2) aligned);
dcl cobol_io_util$bypass_seqerror entry(fixed bin);
dcl cobol_io_util$compare_key entry(fixed bin, ptr);
dcl cobol_io_util$fsb_key_loc entry(fixed bin);

/* BUILTIN FUNCTIONS */

dcl	(substr,mod,binary,fixed,addr,addrel,rel,length,
	string,unspec,null,index)		builtin;


%include cobol_file_table;
%include cobol_file_key;
%include cobol_type1;
%include cobol_type12;
%include cobol_type19;
%include cobol_;



*/
                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group Bull including Bull HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell Bull Inc., Groupe Bull
and Bull HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture for 
managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, Bull or Bull HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by Bull HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved

*/
