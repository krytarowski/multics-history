/* BEGIN INCLUDE FILE:  dm_ci_header.incl.pl1 */

/* DESCRIPTION:

        This include file contains various structures which make up the
   header and trailer of a control interval.
   
   ****  NOTE:  The include file dm_ci.incl.pl1 is heavily dependent ****
   ****  on this include file.  When changing this include file,     ****
   ****  check dm_ci.incl.pl1 to see if it is affected.              ****
*/

/* HISTORY:
Written by Jeffrey D. Ives, 03/02/82.
  (Design by Andre Bensoussan and Jeffrey D. Ives)
Modified:
11/02/84 by Matthew Pierret:  Re-organized so that dm_ci.incl.pl1 and
            dm_ci_header.incl.pl1 do not duplicate structures or constants.
*/

/* format: style2,ind3 */

/* ci_header is the first four words of a control interval. Its contents
   are used to verify that a control interval is in an expected format,
   to identify the control interval and the file to which the control
   interval belongs, and to maintain information for the synchronization
   of disk I/O between DM file control intervals and associated before
   journal control intervals.  The first two words are the time stamp for
   synchronization; the latter two identify the control interval. */

     dcl	   ci_header_ptr	      ptr;
     dcl	   1 ci_header	      aligned based (ci_header_ptr),
	     2 stamp	      like ci_stamp,
	     2 id		      like ci_id;

/* ci_trailer is the last two words of a control interval and must match
   the first two words (ci_header.stamp). */

     dcl	   ci_trailer_ptr	      ptr;
     dcl	   1 ci_trailer	      like ci_header.stamp aligned based (ci_trailer_ptr);


/* ci_stamp is a two-word date/time modified stamp, consisting of:
     version: a 9-bit version string for the structure
     bj_idx:  before journal index for I/O synchronization
     time_modified:  Multics clock time of last modification */

     dcl	   1 ci_stamp	      aligned based,
	     3 version	      bit (9) unal,
	     3 bj_idx	      fixed bin (9) uns unal,
	     3 time_modified      fixed bin (53) unal;

     dcl	   CI_HEADER_STAMP_VERSION_1
			      bit (9) aligned static options (constant) init ("641"b3);

/* ci_id is a two-word identification of the control interval, which
   rarely changes and consists of:
     uid:   DM file unique identifier
     size_code:  the control interval size in bytes, in an encoded
                 form (see ci_size_code below).
     num:   the control interval number.  0 is the number of the first
            control interval of a file. */

     dcl	   1 ci_id	      aligned based,
	     3 uid	      bit (36),
	     3 size_code	      bit (9) unal,
	     3 num	      fixed bin (27) uns unal;

/* ci_size_code is the structure which defines the content of ci_id.size_code.
   The size in bytes of a control interval is equal to 
   (2 ** ci_size_code.exponent * (64 + 8 * ci_size_code.addon)).  */

     dcl	   1 ci_size_code	      aligned based,
	     2 exponent	      fixed bin (6) uns unal,
	     2 addon	      fixed bin (3) uns unal;

/* ci_header_chunks is a structure which can be used to update the
   ci_stamp or ci_id in one memory cycle. */

     dcl	   1 ci_header_chunks     aligned based (ci_header_ptr),
	     2 stamp	      fixed bin (71),
	     2 id		      fixed bin (71);

/* ci_trailer_chunk is a structure which can e used to update the
   ci_trailer in one memory cycle. */

     dcl	   1 ci_trailer_chunk     aligned based,
	     2 stamp	      fixed bin (71);


/*  END INCLUDE FILE:  dm_ci_header.incl.pl1  */


*/
                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group Bull including Bull HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell Bull Inc., Groupe Bull
and Bull HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture for 
managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, Bull or Bull HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by Bull HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved

*/
