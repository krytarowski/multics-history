/* BEGIN INCLUDE FILE - dm_im_cursor.incl.pl1 */

/* DESCRIPTION:

          This structure specifies a DM file, an index collection in that DM
file, and a position (key) in that index collection.

*/

/* HISTORY:

Written by Lindsey Spratt, 03/29/82
Modified:
08/09/82 by Matthew Pierret: Changed collection_id from "fixed bin (17)" to
            "bit (35) aligned".
08/26/82 by Lindsey Spratt:  Changed to version 2.  Added the is_valid and
	  is_at_end_of_index flags.  Changed the key_check_value to fixed
	  bin (35).  Added the IM_HASH_BIAS, which is used to increment the
	  value developed by hash_index_, and IM_HASH_NUMBER_OF_BUCKETS,
	  which is a unique number used by hash_index_ to develop the
	  key_check_value.
02/23/83 by Lindsey Spratt: Changed to keep the current key value in the
	  cursor.  Also, implemented the ability to have the cursor
	  positioned before or after the index.  
10/23/84 by Lindsey L. Spratt:  Added a description section.
*/

/* format: style2,ind3 */
     dcl	   1 index_cursor	      based (index_cursor_ptr),
	     2 type	      fixed bin (17) unaligned,
	     2 version	      fixed bin (17) unaligned,
	     2 file_opening_id    bit (36) aligned,
	     2 collection_id      bit (36) aligned,
	     2 key_id_string      bit (36) aligned,	/* Is the location of the current key, */
						/* if flags.current_key_exists is on. Is the location */
						/* of the end of the index if flags.is_at_end_of_index */
						/* is on, which is only available via an operation */
						/* requiring the "previous" key.  Is the location of */
						/* the "next" key, otherwise. */
	     2 area_ptr	      ptr,		/* Area in which the cursor and key_string area allocated. */
						/* Must be a freeing area. */
	     2 current_key_string_ptr
			      ptr,		/* Points to the value of the current key. */
	     2 current_key_string_length
			      fixed bin (24) unal,	/* Is the length of the current key in bits. */
	     2 pad	      bit (12) unal,
	     2 flags	      aligned,
	       3 is_at_beginning_of_index
			      bit (1) unaligned,	/* Only the "next" key is defined. */
	       3 is_at_end_of_index
			      bit (1) unaligned,	/* Only the "previous" key is defined. */
	       3 current_key_exists
			      bit (1) unaligned,	/* If on, indicates that the "current" key is identified */
						/* by the key_id_string.  If off, the "current" position */
						/* is undefined, and the key_id_string identifies the */
						/* previous or next key, depending on whether */
						/* flags.is_at_end_of_index is off or on, respectively. */
	       3 is_valid	      bit (1) unaligned,	/* If off, the index_manager_ was interrupted while */
						/* setting the cursor position and the cursor is not */
						/* to be trusted for relative position operations. */
	       3 pad	      bit (32) unal;


     dcl	   index_cursor_ptr	      ptr;

     dcl	   INDEX_CURSOR_VERSION_3 fixed bin (17) init (3) internal static options (constant);
     dcl	   INDEX_CURSOR_TYPE      init (2) fixed bin (17) internal static options (constant);

/* END INCLUDE FILE - dm_im_cursor.incl.pl1 */


*/
                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group Bull including Bull HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell Bull Inc., Groupe Bull
and Bull HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture for 
managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, Bull or Bull HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by Bull HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved

*/
