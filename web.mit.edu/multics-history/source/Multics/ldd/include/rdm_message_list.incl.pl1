/* BEGIN INCLUDE FILE ... rdm_message_list.incl.pl1 */
/* Created:  September 1983 by G. Palter */

/* Definition of per-message data maintained by read_mail:  This list is maintined in parallel to the mailbox structure by
   read_mail's interface to the mail_system_ mailbox manager (rdm_mailbox_interface_).  It serves two purposes:
      (1) It provides a place to store read_mail-specific per-message data (ie: the processed flag).
      (2) It provides the ability to provide arbitrary mappings between read_mail message numbers and the actual indeces
	within the mailbox structure.  This mapping allows read_mail to preserve its message numbers for an invocation
	even if messages are expunged which causes them to disappear from the mailbox structure (NB: the "expunge"
	request is not yet implemented).  This mapping also allows read_mail to present the messages in the mailbox to
	the user in a different order than they actually appear in the mailbox (eg: sorted by date/time created) */

dcl  1 message_list aligned based (rdm_invocation.message_list_ptr),
       2 n_messages fixed binary,			/* # of messages known to read_mail at present */
       2 pad bit (36),
       2 messages (message_list_n_messages refer (message_list.n_messages)),
         3 message_idx fixed binary,			/* index of this message in the mailbox structure */
         3 flags,
	 4 processed bit (1) unaligned,		/* ON => this message may be deleted without query */
	 4 pad bit (35) unaligned,
         3 search_text,				/* describes copy of messages used for regexp searches */
	 4 search_text_ptr pointer,			/* ... -> the saved printed represetnation */
	 4 search_text_lth fixed binary (21);		/* ... length of said representation in characters */

dcl  message_list_n_messages fixed binary;

/* END INCLUDE FILE ... rdm_message_list.incl.pl1 */


*/
                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group Bull including Bull HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell Bull Inc., Groupe Bull
and Bull HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture for 
managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, Bull or Bull HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by Bull HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved

*/
