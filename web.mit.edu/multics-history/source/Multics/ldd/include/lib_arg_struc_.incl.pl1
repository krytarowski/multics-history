/* START OF	lib_arg_struc_.incl.pl1		  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  */

	/*  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */
	/*									*/
	/* NAME:  lib_arg_struc_.incl.pl1						*/
	/*									*/
	/*      This include segment defines structures used by the library maintenance tools	*/
	/* to process their input arguments.  These structures are the arguments to the		*/
	/* lib_args_ subroutine.							*/
	/*									*/
	/* STATUS									*/
	/*									*/
	/* 0) Created on:   May 25, 1976 by   Gary C. Dixon				*/
	/* 1) Modified:     October 24, 1983 by Jim Lippard to add page_length		*/
	/*									*/
	/*  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */


%include lib_args_;

     dcl	Parg_struc		ptr;		/* ptr to the structure described below.	*/

     dcl	1 arg_struc		structure based (Parg_struc),
	  2 version		fixed bin,	/* version number (currently 1).		*/
	  2 program		char(32) varying,	/* name of calling program. 			*/
	  2 Parg_list		ptr,		/* ptr to calling program's argument list. 	*/
	  2 Iarg_list		fixed bin,	/* first arg of calling program's argument list	*/
						/*   to be processed.			*/
	  2 Larg_list		fixed bin,	/* total number of arguments in calling pgm's list*/
	  2 put_error		entry options(variable),
						/* program to call to output an error.		*/
	  2 Srequirements_allowed	bit(72) aligned,	/* bits on if control argument associated with	*/
						/*   that bit is acceptable to the program. 	*/
	  2 Scontrol_allowed	bit(36) aligned,	/* bits on if control operation associated with	*/
						/*   that bit is acceptable to the program. 	*/
	  2 Srequirements_initial	bit(72) aligned,	/* bits on indicating initial settings for 	*/
						/*   Srequirements. 			*/
	  2 Scontrol_initial	bit(36) aligned,	/* bits on indicating initial settings for	*/
						/*   Scontrol.  				*/
	  2 descriptor		char(168) varying,	/* name of library descriptor to be used. 	*/
	  2 footing		char(45) varying,	/* footing to be used on output pages. 		*/
	  2 heading		char(120) varying,	/* heading to be used on 1st output page.	*/
	  2 into_path		char(168) varying,	/* path into which library entries to be fetched.	*/
	  2 output_file		char(168) varying,	/* path of output file to be written.		*/
	  2 page_length		fixed bin,	/* length of output page			*/
	  2 time			fixed bin;	/* grace period (in days) for library_cleanup.	*/
     dcl	1 Sreq_allowed		aligned like Svalid_req based (addr(arg_struc.Srequirements_allowed));
						/* allowed requirements switches.		*/
     dcl	1 Sreq_init		aligned like Svalid_req based (addr(arg_struc.Srequirements_initial));
						/* initial values for requirements switches.	*/
     dcl	1 Sc_allowed		aligned like Sc based (addr(arg_struc.Scontrol_allowed));
						/* allowed control switches.			*/
     dcl	1 Sc_init			aligned like Sc based (addr(arg_struc.Scontrol_initial));
						/* initial values for control switches.		*/
     dcl	Varg_struc_1		fixed bin int static init (1);

/* END OF		lib_arg_struc_.incl.pl1		  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  */


*/
                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group Bull including Bull HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell Bull Inc., Groupe Bull
and Bull HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture for 
managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, Bull or Bull HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by Bull HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved

*/
