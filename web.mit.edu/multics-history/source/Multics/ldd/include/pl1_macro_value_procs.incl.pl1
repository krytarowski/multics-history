/* BEGIN INCLUDE FILE ... pl1_macro_value_procs.incl.pl1 */
bit_value:
     procedure (token_num) returns (bit (253) varying );
	declare token_num		 fixed binary;
	declare b_length		 fixed binary;

/* this assumes that the caller has checked that the token_type  bit_string 
   and we remove the trailing b and dequote to gewt all 1's and 0's */

	b_length = token (token_num).string_size - 3;
	return (bit (dequote_string_ (substr (token (token_num).string_ptr ->
	       based_chars, 1, b_length + 2)), b_length));

     end bit_value;

arith_value:
     procedure (token_num) returns (fixed binary (35));
	declare token_num		 fixed binary;

/* assumes caller has checked type of token */

	return (fixed (substr (token (token_num).string_ptr -> based_chars, 1, token (token_num).string_size), 35));
     end arith_value;

char_value:
     procedure (token_num) returns (char (256) varying);
	declare token_num		 fixed binary;

	return (dequote_string_ (substr (token (token_num).string_ptr -> based_chars, 1, token (token_num).string_size)));

     end char_value;

requote_string_:
     procedure (instring) returns (char (256) varying);
	declare instring		 char (*);	/* INPUT: string to be requoted */
	declare outstring		 char (256);
	declare (inlength, outlength, indx, scan)
				 fixed binary (21);
	declare (index, length, substr)
				 builtin;

	inlength = length (instring);
	outlength = 1;
	indx = 1;
	substr (outstring, 1, 1) = QUOTE;

	do while (indx <= inlength);
	     scan = index (substr (instring, indx), QUOTE);
						/* how many chars till the QUOTE */
	     if scan = 0				/* no more QUOTES, just rest of string */
	     then do;				/* copy the remainder  */
		     substr (outstring, outlength + 1, inlength - indx + 1) = substr (instring, indx);
		     outlength = outlength + inlength - indx + 1;
		     indx = inlength + 1;
		end;
	     else do;				/* tack on till the QUOTE and a QUOTEQUOTE */
		     substr (outstring, outlength + 1, scan - 1) = substr (instring, indx, scan - 1);
		     outlength = outlength + scan;
		     substr (outstring, outlength, 2) = QUOTEQUOTE;
		     outlength = outlength + 1;
		     indx = indx + scan;
		end /* else clause */;
	end /* while loop */;

/* take on the final  QUOTE and return */

	outlength = outlength + 1;
	substr (outstring, outlength, 1) = QUOTE;
	return (substr (outstring, 1, outlength));

     end requote_string_;

dequote_string_:
     procedure (instring) returns (char (256) varying);
	declare instring		 char (*);	/* INPUT: string to be requoted */
	declare outstring		 char (256);
	declare NULLSTRING		 char (0) internal static options (constant) initial ("");
	declare (inlength, outlength, indx, scan)
				 fixed binary (21);
	declare (index, length, substr)
				 builtin;

	inlength = length (instring);

	if inlength < 2 then return (NULLSTRING);
	if substr (instring,1,1) ^= QUOTE | substr (instring, inlength,1) ^= QUOTE
	then return (NULLSTRING);

	outlength = 0;
	indx = 2;


	do while (indx <= inlength - 1);
	     scan = index (substr (instring, indx, inlength - indx), QUOTE) -1 ;
						/* how many chars till the QUOTE */
	     if scan = -1				/* no more QUOTES, just rest of string */
	     then do;				/* copy the remainder  */
		     substr (outstring, outlength + 1, inlength - indx) = substr (instring, indx, inlength -indx);
		     outlength = outlength + inlength - indx;
		     indx = inlength + 1;
		end;
	     else do;				/* tack on till the QUOTE and replace QUOTE with QUOTEQUOTE */
		     substr (outstring, outlength + 1, scan ) = substr (instring, indx, scan );
		     outlength = outlength + scan;
		     indx = indx + scan;
		     if substr (instring,indx, 2) ^= QUOTEQUOTE
		     then return (NULLSTRING);
		      substr (outstring, outlength+1, 1 )= QUOTE;indx = indx + 2;
		     outlength = outlength + 1;
		end /* else clause */;
	end /* while loop */;

	return (substr (outstring, 1, outlength));

     end dequote_string_;

/* END INCLUDE FILE ... pl1_macro_value_procs.incl.pl1 */


*/
                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group Bull including Bull HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell Bull Inc., Groupe Bull
and Bull HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture for 
managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, Bull or Bull HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by Bull HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved

*/
