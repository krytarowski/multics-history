/* Begin include file checker_dcls_.incl.pl1 BIM 7/82 */
/* Modified for loaded by Keith Loepere, December 1983 */
/* format: style3,idind30 */

dcl	checker_data_$temp_ptrs	(4) ptr external static;
dcl	checker_data_$slt_ptr	ptr external static;
dcl	checker_data_$area_ptr	ptr external static;
dcl	checker_area		area (sys_info$max_seg_size) based (checker_data_$area_ptr);

dcl	checker_data_$name_table_ptr	ptr external static;
dcl	checker_data_$buffer_ptr	ptr external static;
dcl	checker_data_$meter_ptr	ptr external static;

dcl	checker_data_$input_iocbp	ptr ext static;
dcl	checker_data_$output_iocbp	ptr ext static;


dcl	checker_data_$last_wired_collection
				fixed bin external static;
dcl	checker_data_$last_text_wired_collection
				fixed bin external static;
dcl	checker_data_$last_supervisor_collection
				fixed bin external static;

dcl       1 checker_data_$collection_names (0:10) external static,
	2 major fixed bin,
	2 minor fixed bin;

dcl	checker_data_$loaded	(0:10) external static bit (1) aligned;

dcl	checker_data_$n_temp_ptrs	fixed bin external static;

dcl       checker_data_$severity	fixed bin external static;

dcl	1 meters			aligned based (checker_data_$meter_ptr),
	  2 sizes			aligned,
	    3 wired_ai_linkage_size	fixed bin,
	    3 paged_ai_linkage_size	fixed bin,
	    3 wired_wi_linkage_size	fixed bin,
	    3 paged_wi_linkage_size	fixed bin,
	    3 wired_as_linkage_size	fixed bin,
	    3 paged_as_linkage_size	fixed bin,
	    3 wired_ws_linkage_size	fixed bin,
	    3 paged_ws_linkage_size	fixed bin,
	    3 wired_definitions_size	fixed bin,
	    3 paged_definitions_size	fixed bin,
	  2 wired_nt_size		fixed bin,
	  2 paged_nt_size		fixed bin,
            2 overflown aligned,
	    3 (wired_ai_linkage, paged_ai_linkage, wired_wi_linkage,
	       paged_wi_linkage, wired_as_linkage, paged_as_linkage,
	       wired_ws_linkage, paged_ws_linkage,
	       wired_definitions, paged_definitions,
	       wired_nt, paged_nt,
	       wired_storage) bit (1) unaligned,
	  2 counts		aligned,
	    3 wired_sdw_count	fixed bin,
	    3 paged_sdw_count	fixed bin,
	    3 wired_slte_count	fixed bin,
	    3 paged_slte_count	fixed bin,
	  2 wired_nt_used		fixed bin,
	  2 paged_nt_used		fixed bin,
	  2 used			aligned,
	    3 wired_ai_linkage_used	fixed bin,
	    3 paged_ai_linkage_used	fixed bin,
	    3 wired_wi_linkage_used	fixed bin,
	    3 paged_wi_linkage_used	fixed bin,
	    3 wired_as_linkage_used	fixed bin,
	    3 paged_as_linkage_used	fixed bin,
	    3 wired_ws_linkage_used	fixed bin,
	    3 paged_ws_linkage_used	fixed bin,
	    3 wired_definitions_used	fixed bin,
	    3 paged_definitions_used	fixed bin,
	  2 per_collection		(0:10) aligned,
	    3 read		bit (1) aligned,
	    3 mark		aligned,
	      4 major		fixed bin,
	      4 minor		fixed bin,
	    3 first_segment		fixed bin (18),
	    3 last_segment		fixed bin (18),
	    3 segment_count		fixed bin (17),
	    3 words_used		fixed bin (35),	/* for wired */
	    3 pages_used		fixed bin (35),	/* for paged */
	    3 wired_pages_used	fixed bin (35),	/* for both! */
	    3 perm_segment_count	fixed bin,	/* stay forever */
	    3 temp_segment_count	fixed bin,	/* one collection */
	    3 init_segment_count	fixed bin,	/* all of initialization */
	    3 user_ring_segment_count fixed bin,
	    3 user_ring_segment_pages fixed bin,
	    3 ai_linkage_used	fixed bin,
	    3 wi_linkage_used	fixed bin,
	    3 as_linkage_used	fixed bin,
	    3 ws_linkage_used	fixed bin,
	    3 definitions_used	fixed bin,
	    3 name_table_used	fixed bin,
	  2 per_segment		(0:1024) aligned,
	    3 collection		fixed bin,
	    3 next		fixed bin (18),
	    3 link_ptr		pointer unaligned,
	    3 defs_ptr		pointer unaligned;

declare	segment_links_ptr		pointer;
declare	1 segment_links		aligned based (segment_links_ptr),
	  2 n_links		fixed bin,
	  2 per_link (a_n_links refer (segment_links.n_links)) aligned,
	    3 expression_relps        fixed bin (18) uns unal,
	    3 modifiers               bit (6) unal;

						/* rel pointers into def section stored in area */

declare	a_n_links			fixed bin;

declare	segment_defs_ptr		pointer;
declare	1 segment_defs		based (segment_defs_ptr) aligned,
	  2 length		fixed bin,
	  2 definitions		(a_defs_length refer (segment_defs.length)) bit (36) aligned;

declare	a_defs_length		fixed bin;

declare (CHECKER_WARNING init (1), /* */
         CHECKER_ERROR   init (2), /* */
         CHECKER_SEVERE  init (3), /* */
         CHECKER_FATAL   init (4)) fixed bin int static options (constant);

declare ERROR_NAMES (1:4) char (16) init ("WARNING", "ERROR", "SEVERE ERROR", "FATAL ERROR") int static options (constant);

/* End include file checker_dcls_.incl.pl1 */


*/
                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group Bull including Bull HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell Bull Inc., Groupe Bull
and Bull HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture for 
managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, Bull or Bull HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by Bull HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved

*/
