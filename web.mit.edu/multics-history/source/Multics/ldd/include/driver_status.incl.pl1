/* BEGIN INCLUDE FILE...driver_status.incl.pl1 */



/****^  HISTORY COMMENTS:
  1) change(88-01-27,Brunelle), approve(), audit(), install():
     Ancient History
     Coded by Robert S. Coren August 1973
     Modified by J. Whitmore to structure data for the Access Isolation Mechanism
     Modified by J. C. Whitmore, 5/78, for IO Daemon extensions
     Modified by J. C. Whitmore, 8/79, to add the generic_type variable
  2) change(88-08-19,Brunelle), approve(88-08-19,MCR7911),
     audit(88-09-29,Wallman), install(88-10-28,MR12.2-1199):
     Upgraded for version 5 iod tables.  Changed the minor_args ftom string to
     text_offset. Changed acct_ptr to acct_entry.  Added have_accounting bit
     to denote accounting ^= nothing.
                                                   END HISTORY COMMENTS */


/* status data for a logical device driver */

/* format: style4 */

dcl  driver_status_ptr ptr;
dcl  1 driver_status aligned based (driver_status_ptr),
       2 req_type_label char (32),			/* string to describe the request type */
       2 dev_name_label char (32),			/* string to describe the device */
       2 device_id char (32),				/* minor device name used by this logical driver */
       2 device_class_id char (32),			/* device class name used by this logical driver */
       2 coord_chan fixed bin (71),			/* ipc event channel for signals to coord. */
       2 driver_chan fixed bin (71),			/* ipc event channel for signals from coord. */
       2 last_wake_time fixed bin (71),			/* time last wakeup sent to coord */
       2 request_pending bit (36),			/* locking word for communication with coord */
						/* 0 = ready for a request  */
						/* driver pid = don't bug me */
						/* coord  pid = got a request */
       2 status_flags,
         3 attached bit (1) unal,			/* minor device is attached for i/o */
         3 busy bit (1) unal,				/* driver doing request..tell coord when done */
         3 ready bit (1) unal,			/* driver is ready to handle requests */
         3 acknowledge bit (1) unal,			/* coordinator must reply to all wakeups */
         3 have_accounting bit (1) unal,		/* ON if accounting ^= nothing */
         3 pad bit (31) unal,
       2 list_index fixed bin,			/* index of this driver in the driver ptr list */
       2 dev_index fixed bin,				/* index in iod_device_tab of this minor device */
       2 maj_index fixed bin,				/* index in iod_device_tab of the corresponding major device */
       2 dev_class_index fixed bin,			/* index of device_class entry */
       2 minor_args unaligned like text_offset,		/* descriptive string for this minor device */
       2 min_banner bit (72) aligned,			/* min banner access class for marking output */
       2 acct_entry entry (char (*), char (*), ptr, fixed bin (35)) variable, /* entry variable to accounting procedure */
						/* for this logical driver */
       2 rqti_ptr ptr,				/* pointer to the request type info seg */
       2 dev_out_iocbp ptr,				/* iocb pointer for dev_out_stream */
       2 dev_in_iocbp ptr,				/* iocb pointer for dev_in_stream */
       2 dev_out_stream char (32),			/* output stream for minor device */
       2 dev_in_stream char (32),			/* input stream for minor device */
       2 elem_size fixed bin,				/* element size for the stream */
       2 message_type fixed bin,			/* expected format of user request */
       2 form_wait_time fixed bin (71),			/* average time needed to write ctl term msg */
       2 forms_validation_ptr ptr,			/* forms validation data */
       2 dev_ptr1 ptr,				/* another one */
       2 dev_fb1 fixed bin,				/* a spare fixed bin variable for the driver */
       2 dev_fb2 fixed bin,				/* and another */
       2 dev_fb3 fixed bin,				/* and another */
       2 dev_fb4 fixed bin,				/* and the last spare fixed bin */
       2 dev_fb71 fixed bin (71),			/* a spare fixed bin  71  variable */
       2 dev_ctl_ptr ptr,				/* pointer to control structure for this device */
       2 bit_rate_est fixed bin (35),			/* output rate estimate - bits per second */
       2 defer_time_limit fixed bin (35),		/* max time allowed for a request - in seconds (0 = no limit) */
       2 generic_type char (32),			/* generic type of this minor device */
       2 status_pad (2) fixed bin (35),			/* save some room for later */
       2 descriptor like request_descriptor,		/* copy of request descriptor */
       2 desc_pad (13) fixed bin,
       2 message fixed bin;				/* place-holder for copy of request message */


/* END INCLUDE FILE...driver_status.incl.pl1 */


*/
                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group Bull including Bull HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell Bull Inc., Groupe Bull
and Bull HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture for 
managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, Bull or Bull HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by Bull HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved

*/
