/*	BEGIN INCLUDE FILE probe_references.incl.pl1	*/

/****^  HISTORY COMMENTS:
  1) change(88-09-20,WAAnderson), approve(88-09-20,MCR7952),
     audit(88-09-30,JRGray), install(88-10-24,MR12.2-1184):
     Added new field (c_symbol) for C-Probe support.
  2) change(88-10-28,WAAnderson), approve(88-10-28,MCR7952),
     audit(88-10-31,RWaters), install(88-11-11,MR12.2-1210):
     Added new field (c_sub_c_ptr) for C-Probe_support.
                                                   END HISTORY COMMENTS */

/*	Split out of probe_tokens, 04/22/79 WOS 	*/
/*       modified for probe variables Feb 19 80 JRD         */
/*   Modified June 83 JMAthane to add "type_ptr" and "builtin" fields */

     dcl	   1 reference_node	      aligned based,	/* information about a reference */
	     2 symbol_ptr	      pointer aligned,	/* to symbol table entry for reference */
	     2 type_ptr	      pointer aligned,	/* to symbol table entry for type (null if none) */
	     2 address_ptr	      pointer aligned,	/* to location of variable */
	     2 base_addr	      pointer aligned,	/* pointer on which whole symbol is based */
	     2 source_info_ptr    pointer aligned,	/* to symbol structure for reference */

	     2 name	      char (256) unaligned varying, /* symbol name */

	     2 type	      fixed bin (35),	/* data type */
	     2 descriptor	      fixed bin (35),	/* type || packed */
	     2 precision	      fixed bin (35),	/* scale and precision */
	     2 flags,
	       3 packed	      bit (1) unal,		/* data is in packed format */
	       3 constant	      bit (1) unal,		/* data is really a constant */
	       3 cross_section    bit (1) unal,		/* reference is an array cross-section */
	       3 function	      bit (1) unal,		/* reference is function value */
	       3 octal	      bit (1) unal,		/* indicates that this is the octal bif */
	       3 star_extent      bit (1) unal,		/* reference is a star subscript for father */
	       3 have_generation  bit (1) unal,		/* this reference has an explicitly specified generation */
	       3 pseudo_var	      bit (1) unal,		/* it is ok to assign to it */
	       3 probe_variable   bit (1) unal,
	       3 path	      bit (1) unal,		/* it's a pathname/virtual entry */
	       3 builtin	      bit (1) unal,		/* probe builtinvalue */
	       3 c_ptr_to_char    bit (1)  unal,
                 3 c_sub_c_ptr      bit (1)  unal,
	       3 pad2	      bit (23) unal,

	     2 optional_info,			/* information which may or may not be present */
	       3 argument_list    pointer unaligned,	/* pointer to reference_arg_list */
	       3 subscript_ptr    pointer unaligned,	/* pointer to reference_subscripts */
	       3 n_arguments      fixed bin,		/* number of arguments in argument list */
	       3 n_subscripts     fixed bin,		/* number of subscripts present */

	     2 constant_token_ptr pointer unaligned,	/* pointer to constant token if this is a constant */
	     2 subscript_refs_ptr pointer unaligned,	/* pointer to array of subscript reference node pointers */
	     2 invocation_level   fixed bin,		/* invocation level number ("[-17]") for this reference */
	     2 probe_var_info_ptr ptr unal,		/* only if flags.probe_variable */
               2 c_symbol_ptr  ptr unal,
	     2 pad1	      (9) pointer unaligned,
	     2 end_of_reference_node pointer aligned;


     dcl	   1 reference_arg_list   aligned based,	/* argument list; based on reference.argument_list */
	     2 number	      fixed bin,		/* number of arguments actually present */
	     2 node	      (16) pointer aligned;	/* reference node pointers for each argument */


     dcl	   1 reference_subscripts aligned based,	/* subscript array; based on reference.subscript_ptr */
	     2 number	      fixed bin,		/* number actually present */
	     2 value	      (2, 16) fixed bin (24); /* values for lower and upper bound for each */


     dcl	   1 subscript_reference_ptrs aligned based,	/* array of pointers to subscript reference nodes */
	     2 ptr	      (2, 16) pointer aligned;

/*	END INCLUDE FILE probe_references.incl.pl1	*/


*/
                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group Bull including Bull HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell Bull Inc., Groupe Bull
and Bull HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture for 
managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, Bull or Bull HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by Bull HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved

*/
