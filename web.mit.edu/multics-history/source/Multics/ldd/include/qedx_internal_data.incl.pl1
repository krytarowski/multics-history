/* BEGIN INCLUDE FILE ... qedx_internal_data.incl.pl1 */
/* Created:  January 1983 by G. Palter */

/* Data used by a single invocation of qedx or qedx_ */

dcl 1 qid aligned based (qid_ptr),
      2 editor_name character (72) unaligned,		/* name of the editor (eg: "send_mail (qedx)") */
      2 editor_area_ptr pointer,			/* -> area used to allocate data */
      2 qedx_info_ptr pointer,			/* -> caller's definition of this qedx invocation */
      2 edx_util_data_ptr pointer,			/* -> data used by edx_util_ */
      2 regexp_data_ptr pointer,			/* -> data used by qx_search_file_ */
      2 flags,
        3 no_rw_path bit (1) unaligned,
        3 query_if_modified bit (1) unaligned,
        3 pad bit (34) unaligned,
      2 b0 like b,					/* buffer 0 */
      2 tw like b;					/* typewriter buffer */

dcl  qid_ptr pointer;

dcl  editor_area area based (qid.editor_area_ptr);


/* Description of an element of the buffer recursion stack */

dcl 1 sv based aligned,
      2 prev pointer,				/* pointer to previous element in stack */
      2 bp pointer,					/* pointer to control block for this element */
      2 (ti, te) fixed binary (21);			/* saved copies of buffer read indexes */
%page;
/* Description of a single qedx buffer:  Buffers are managed in two sections, a top and a bottom.  The gap between the
   sections is the end of the current line, and permits easy insertion and deletion of text, without extraineous data
   movement.

   An empty section is indicated when the pointers are out-of-sequence.  For example for the bottom section if lb
   (last_bottom) is < 1 then the bottom is empty.  If ft (first_top) is > (file_end) then the top is empty.

   In addition only one temporary file is needed to support operations on the buffers

   Line and range pointers:
   li	- Start index of current line.
   le	- End index of current line. Points to NL.

   lli	- Start index of last line of range.
   lle	- End index of last line of range. Points to NL.

   fli	- Start index of first line of range.
   fle	- End index of first line of range.

   Gapped buffer standards:
   1	- Start index of buffer.
   ilb	- End index of first part of buffer.  Should point to NL.
   ift	- Start index of second part of buffer.
   ife	- End index of buffer.  Should be one of: 1024*4*4,  1024*4*16, 1024*4*64, or 1024*4*255;

   Gapped standards permit the range to split across the gap, but a line of text cannot split across the gap.  Therefore
   when the gap is moved one should also move li and le if they are in the moved section of buffer.

   The gap, when processing insert, delete, change, substitute, is either immediately before, or immediately after the
   range specified.  This is dependant upon the type of operation.  I/O such as writing and printing of buffer contents,
   or searching and line indexing is done without moving the gap, and is done in sections as appropriate for the current
   operational positioning and the current gap position */

dcl 1 b based (bp) aligned,
      2 name character (16),				/* buffer name */
      2 next pointer,				/* pointer to next buffer control block (if any) */
      2 dp pointer,					/* pointer to beginning of buffer data */
      2 default_path character (256),			/* default output pathname for this buffer */
      2 lb fixed binary (21),				/* index of last character of bottom section */
      2 ft fixed binary (21),				/* index of first character of top section */
      2 de fixed binary (21),				/* index of last character in buffer */
      2 li fixed binary (21),				/* index of first character of current line */
      2 le fixed binary (21),				/* index of last character of current line */
      2 ti fixed binary (21),				/* index of next char. to be read from buffer */
      2 te fixed binary (21),				/* index of last char. of line being read from buffer */
      2 tw_sw bit (1),				/* typewriter buffer switch (OFF for normal buffers) */
      2 callers_idx fixed binary,			/* index in caller's qedx_info.buffers of this buffer */
      2 flags,
        3 modified bit (1) unaligned,			/* buffer has been modified since last write */
        3 default_was_region bit (1) unaligned,		/* default pathname was originally caller's region */
        3 default_is_region bit (1) unaligned,		/* default pathname is currently caller's region */
        3 default_locked bit (1) unaligned,		/* default pathname can not be changed by r/w requests */
        3 default_untrusted bit (1) unaligned,		/* buffer pathname is not trustworthy */
        3 pad bit (31) unaligned;

dcl  bp pointer;

/* END INCLUDE FILE ... qedx_internal_data.incl.pl1 */


*/
                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group Bull including Bull HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell Bull Inc., Groupe Bull
and Bull HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture for 
managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, Bull or Bull HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by Bull HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved

*/
