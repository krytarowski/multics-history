/*	BEGINNING OF INCLUDE FILE  ...  et_setup_data.incl.pl1
   *
   *	Created  Jan, 73  by  Bill Silver.
   *
   *
   * 	This include file defines the data that is needed to set up a test of an  eis
   *	instruction.  The area where this data actually resides is in  "et".
*/


dcl  et_data_ptr ptr;				/* Pointer to the  et_data  area.  */


dcl 1 et_setup_data based (et_data_ptr) aligned,

    2 next_instruction_x fixed bin,			/* Index in script file of where the next
						   *  instruction test begins.  */

    2 name char (6),				/* Mnemonic name of the instruction
						   *  being tested. */

    2 test_count fixed bin,				/* The number of the current test. */

    2 note char (64),				/* A NOTE containing a description of the test. */

    2 loop_count fixed bin,				/* Number of times to execute the same
						   *  variation of an instruction.  */

    2 instr_offset fixed bin,				/* Indicates the position of the eis
						   *  instruction within the instruction
						   *  area in  etx. */

    2 instr_num fixed bin,				/* The index of the current instruction's
						   *  entry in the  et_instr_data$instruction
						   *  array.  */

    2 instr_type fixed bin,				/* 1  =  alphanumeric   2  =  numeric
						   *  3  =  bit  string    4  =  conversion  */

    2 instr_word bit (36),				/* The instruction word of the  eis
						   *  instruction to be tested.  */

    2 descriptors (3) bit (36),			/* The three possible descriptor words
						   *  of the eis instruction.  */

    2 ind_words (3) bit (36),				/* The three possible indirect words that
						   *  may follow the eis instruction.  */

    2 desc_ptrs (3) ptr,				/* An array of pointers to where any
						   *  indirect descriptors must be placed.  */

    2 mf_ptrs (3) ptr,				/* Pointers to the  mf  fields for each descriptor.
						   *  If an entry is null then there is no descriptor
						   *  associated with this entry.  */

    2 num_chars (3) fixed bin,			/* For each descriptor a code indicating what
						   *  type of "ta" or "tn" field it may have.  It
						   *  implies the number of characters in a word.
						   *   1 - descriptor must reference word boundary.
						   *   4 - any legal "ta" or "tn" field.
						   *       Implies 9 bit  characters as default.
						   *  36 - descriptor may reference  bits.
						   *  -1 - must use "ta" field of descriptor 1
						   *   0 - no descriptor.  */

    2 data_ptrs (5) ptr,				/* An array of pointers to where
						   *  the data for the corresponding
						   *  descriptor will go.  It points to
						   *  the first word of the data.
						   *  Entry (4) is for the test data.
						   *  Entry (5) is for the result data.  */

    2 data_lens (5) fixed bin,			/* An array of lengths of the data fields.
						   *  They will always be in units of chars. */

    2 data_offsets (5) fixed bin,			/* An array of character offsets.  They specify
						   *  the character position of the string  in
						   *  the first word of the string.  */

    2 page_faults (14) bit (1) unal,			/* A table of flags which indicate pages
						   *  which should take a page fault during
						   *  execution of the eis instruction. */

    2 page_ptrs (14) ptr,				/* A pointer to each page that is used
						   *  by the instruction.  Pages not used will
						   *  have null entries.  */

    2 truncation_flag fixed bin,			/* Indicates whether or not the instruction is
						   *  going to take a truncation fault.
						   *  1  =>  yes,   0  =>  no.  */

    2 pointers (0:7) ptr,				/* The values of the pointer registers
						   *  before the execution of the eis instr. */

    2 regs,					/* Index, A, and Q registers. */
      3 x (0:7) fixed bin (17) unaligned,
      3 A fixed bin (35),
      3 Q fixed bin (35),
      3 pad (2) bit (36),

    2 ir_word bit (36);				/* The settings of the indicator
						   *  registers after the eis instruction
						   *  has been executed.  */



/*	END of INCLUDE FILE  ...  et_setup_data.incl.pl1	*/


*/
                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group Bull including Bull HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell Bull Inc., Groupe Bull
and Bull HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture for 
managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, Bull or Bull HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by Bull HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved

*/
