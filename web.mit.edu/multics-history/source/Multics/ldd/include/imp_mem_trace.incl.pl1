
/*  BEGIN INCLUDE FILE  imp_mem_trace.incl.pl1  */

     declare
          1 mt aligned based,                               /* Sixteen word long tracing structure            */
             2 mtseq fixed binary (35),                     /* tracing sequence number                        */
             2 mttype character (4),                        /* Tracing type.  Argument to tracing subroutine. */
             2 mttime fixed binary (71),                    /* Clock time trace was entered.                  */
             2 mtstate character (4),                       /* Abbreviated form of imp_data$dcm.state         */
             2 mtread_mode character (4),
             2 mtwrite_mode character (4),

             2 flags unaligned,                             /* copies of flags in imp_data$dcm.xxx            */
                3 mtdummy1 bit (2),
                3 mtread_buffer_full bit (1),
                3 mtdummy2 bit (3),
                3 mtdummy3 bit (3),
                3 mtdummy4 bit (2),
                3 mtpolling_on bit (1),
                3 mtdummy5 bit (2),
                3 mtpolling_needed bit (1),
                3 mtdummy bit (3),
                3 mtwakeup_ncp_on_write_buf_empty bit (18) unaligned,

             2 offsets unaligned,                           /* copy of imp_data$dcm.xxx buffer offsets        */
                3 mtrin bit (18),
                3 mtrout bit (18),
                3 mtwin bit (18),
                3 mtwout bit (18),

             2 mtdriver_state fixed binary (17),            /* driver state                                   */
             2 mtdriver_column fixed binary (17),           /* driver column                                  */
             2 mtspecial bit (144) aligned;                 /* Area that is special to each trace type.       */

     declare
          1 mtsinterrupt aligned based,                     /* Structure special to interrupt types.          */
             2 mtinterrupt_sequence_number fixed binary (35),
             2 mtz unaligned,
                3 mtdevice character (1),
                3 mttype character (1),
                3 mtlistx bit (18),
             2 mtstatus fixed binary (71);

     declare
          1 mtsext_interrupt aligned based,
             2 mtz fixed binary (71),
             2 mtstatus character (8) unaligned;

     declare
          1 mtsconnect aligned based,                       /* For connects.                        */
             2 mtpcw bit (36) aligned,
             2 mtz unaligned,
                3 mtdevice character (1),
                3 mtdummy character (1),
                3 mtlist_index bit (18),
             2 mtstatus character (8) unaligned;

     declare
          1 mtsmessage aligned based,
             2 mtmessage character (16) unaligned;          /* Get first four words of messages               */

     declare
          1 mtschange_state aligned based,                  /* For state changs                     */
             2 mtprevious_state character (8) unaligned;    /* Save the previous state.             */

/*  END INCLUDE FILE imp_mem_trace.incl.pl1  */



*/
                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group Bull including Bull HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell Bull Inc., Groupe Bull
and Bull HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture for 
managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, Bull or Bull HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by Bull HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved

*/
