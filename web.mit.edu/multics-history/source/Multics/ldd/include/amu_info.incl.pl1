/*	BEGIN INCLUDE FILE amu_info.incl.pl1		*/

dcl 1 amu_info aligned based (amu_info_ptr),
    2 version char (8) aligned,			/* AMU_INFO_VERSION */
    2 flags aligned,
      3 early_dump bit(1) unal,
      3 pad  bit(35) unal,
    2 type fixed bin unal,				/* One of the types below */
    2 time_created fixed bin (71) aligned,		/* time created -- for debugging purposes */
    2 chain,					/* a chain of all the amu_info's which exist */
      3 prev pointer unaligned,
      3 next pointer unaligned,

    2 area_ptr pointer,				/* pointer to area used for allocating things */

    2 translation_table_ptr pointer,			/* pointer to address map -- always present */
						/*   SEE: amu_translation.incl.pl1 */
    2 fdump_info_ptr pointer, 			
						/* pointer to FDUMP info, present if looking at an FDUMP */
						/*   SEE: amu_fdump_info.incl.pl1 */
						/* old_uid_table pointer if looking at a SAVED PROC. */
						/* See: amu_old_uid_table			*/
	

    2 hardcore_info_ptr pointer,			/* pointer to hardcore information -- always present */
						/*   SEE: amu_hardcore_info.incl.pl1 */
    2 copy_chain pointer,				/* pointer to info about segment copies */
						/*   SEE: amu_copy_info.incl.pl1 */
    2 process_info_ptr pointer,			/* pointer to process info for this translation */
						/*   SEE: amu_process_info.incl.pl1 */
    2 process_idx fixed bin,				/* index of process in translation-specifc process table */

    2 proc_idx_hold fixed bin,			/* a place to keep the index when a changing to another proc */

    2 error_info,					/* various info about how amu_error_ is to behave */
      3 error_flags aligned,
        4 handler_exists bit (1) unaligned,		/* set to indicate existence of an amu_error handler */
        4 in_subsystem bit (1) unaligned,		/* This amu_info belongs to an ssu_ maintained subsystem */
        4 pad bit (34) unaligned,
      3 sci_ptr pointer,				/* sci_ptr for subsystem, if in_subsystem = "1"b */
    2 definitions_info_ptr ptr;

dcl  amu_area area based (amu_info.area_ptr);

dcl  amu_info_ptr pointer;

dcl (FDUMP_TYPE		init (1037),		/* the various legitimate types of amu_info's */
     FDUMP_PROCESS_TYPE	init (1038),
     ONLINE_TYPE		init (1039),
     ONLINE_PROCESS_TYPE	init (1040),
     NETWORK_FDUMP_TYPE	init (1041),
     NETWORK_ONLINE_TYPE	init (1042),
     SAVED_PROC_TYPE	init (1043),
     INDIRECT_TYPE		init (1044)) fixed bin internal static options (constant);

dcl  AMU_INFO_VERSION_1 char (8) internal static options (constant) init ("amu_v1");
dcl  AMU_INFO_VERSION char (8) internal static options (constant) init ("amu_v1");
dcl  AMU_INFO_VERSION_2 char (8) internal static options (constant) init ("amu_v2");

dcl  PDIR_SUFFIX		char(4) init("pdir") int static options(constant);

/*	END INCLUDE FILE amu_info.incl.pl1		*/


*/
                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group Bull including Bull HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell Bull Inc., Groupe Bull
and Bull HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture for 
managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, Bull or Bull HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by Bull HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved

*/
