/* BEGIN INCLUDE FILE lisp_iochan.incl.pl1 */

/* This include file describes the format of the 'iochan' block,
   which is used to implement lisp file-objects.  The iochan
   is the central data base of the i/o system.  When open
   is used, an iochan is created in lisp static storage.
   When the lisp environment is booted, 2 iochans for input and
   output on the tty are created.  Iochans are saved and restored
   by the save mechanism */

	/* open i/o channel information */

dcl 1 iochan based aligned,		/* format of a file object */
    2 ioindex fixed bin(24),			/* 0-origin character position in block */
    2 iolength fixed bin(24),			/* size of block in chars - actual(in), max(out) */
    2 ioptr pointer,			/* -> block */
    2 thread pointer,			/* list of all iochans open; from lisp_static_vars_$iochan_list */
    2 fcbp pointer,				/* for tssi_ */
    2 aclinfop pointer,			/* .. */
    2 component fixed bin,			/* .. */
    2 charpos fixed bin,			/* 0-origin horizontal position on line */
    2 linel fixed bin,			/* (out) line length, 0 => oo */
    2 flags unaligned,
      3 seg bit(1),				/* 1 => msf, 0 => stream */
      3 read bit(1),			/* 0 => openi, 1 => not */
      3 write bit(1),			/* 0 => openo, 1 => not */
      3 gc_mark bit(1),			/* for use by the garbage collector */
      3 interactive bit(1),			/* 1 => input => this is the tty
					        output => flush buff after each op */
      3 must_reopen bit(1),			/* 1 => has been saved and not reopend yet */
      3 nlsync bit(1),			/* 1 => there is a NL in the buffer (output streams only) */
      3 charmode bit(1),			/* enables instant ios_$write */
      3 extra_nl_done bit(1),			/* 1 => last char output was extra NL for chrct */
      3 fixnum_mode bit(1),			/* to be used with in and out functions */
      3 image_mode bit(1),			/* just suppresses auto-cr */
      3 not_yet_used bit(25),
    2 function fixed bin(71),			/* EOF function (input), or endpagefn (output) <<< gc-able >>> */
    2 namelist fixed bin(71),			/* list of names, car is directory pathname    <<< gc-able >>> */
    2 name char(32) unaligned,		/* stream name or entry name */
    2 pagel fixed bin,			/* number of lines per page */
    2 linenum fixed bin,			/* current line number, starting from 0 */
    2 pagenum fixed bin,			/* current page number, starting from 0 */

    flag_reset_mask bit(36) aligned static init(	/* anded into flags with each char */
     "111011110111111111"b);

/* END INCLUDE FILE lisp_iochan.incl.pl1 */


*/
                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group Bull including Bull HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell Bull Inc., Groupe Bull
and Bull HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture for 
managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, Bull or Bull HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by Bull HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved

*/
