/* BEGIN INCLUDE FILE ...  g115_device_data.incl.pl1 ... 9-7-79 */


/* This structure describes all the data specific to a tty channel used for the G115 protocol.
   There is one device data block per channel chained together in a list.  Chaining and allocation
   of each data block is managed by g115_.pl1
*/

dcl  device_data_p ptr init (null);

dcl 1 g115_device_data aligned based (device_data_p),
    2 fwd_ptr ptr,					/* forward pointer in chain of these structures */
    2 back_ptr ptr,					/* backward pointer   "      "    "      "	*/
    2 tty_name char (32),				/* name of the device channel for devx */
    2 devx fixed bin,				/* Ring 0 device index for the device */
    2 attach_count fixed bin,				/* number of switches currently active */
    2 dial_mgr_ev_chan fixed bin (71),			/* IPC channel for dial manager */
    2 as_ev_chan fixed bin (71),			/* IPC event channel from answering service */
    2 wait_list,					/* IPC wait list to block on for hardcore tty dim */
      3 nchan fixed bin,				/* this must be 2 and must be on an even word */
      3 dummy_word fixed bin,
      3 tty_ev_channel fixed bin (71),			/* because the compiler wants this on even word */
      3 timeout_ev_channel fixed bin (71),
    2 control_bits,
      3 as_priv_no_block bit (1) unal,			/* ON for answering service reads and writes */
      3 write_split bit (1) unal,			/* ON if split records are to be sent to device */
      3 write_compress bit (1) unal,			/* ON if compressed records are to be sent */
      3 hangup_signalled bit (1) unal,			/* ON if a hangup control is sent */
    2 delay fixed bin (35),				/* runout delay for L6 bug */
    2 fmt_code,					/* the current data and operator msg format codes */
      3 data bit (9) unal,				/* format code for data transfer to remote terminal */
      3 control bit (9) unal,				/* format code for operator messages (teleprinter) */
    2 process_id bit (36),				/* process id for sending wakeups to ourselves */
    2 padding (14) fixed bin,				/* for the future */
    2 buffer_areap ptr,				/* ptr to area for buffer allocation */
    2 first_bp ptr,					/* ptr to first input buffer of chain */
    2 last_bp ptr,					/* ptr to last  input buffer of chain */
    2 template_ptr ptr,				/* ptr to template output buffer */
    2 level fixed bin,				/* write recursion (or quit) level index */
    2 outp (100) ptr;				/* pointers to output buffers in buffer area
						   indexed by level */

dcl  buffer_area based (g115_device_data.buffer_areap) area (262144); /* area for input and output buffers */

/* END INCLUDE FILE ... g115_device_data.incl.pl1 */


*/
                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group Bull including Bull HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell Bull Inc., Groupe Bull
and Bull HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture for 
managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, Bull or Bull HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by Bull HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved

*/
