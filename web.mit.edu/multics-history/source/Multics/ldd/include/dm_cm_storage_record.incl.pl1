/* BEGIN INCLUDE FILE dm_cm_storage_record.incl.pl1 */

/* DESCRIPTION:

        A storage record is an extension to the collection_header structure.
   It is expected to be more volatile than collection_header and has a 
   different format depending on the control interval storage method in use
   for the collection.  A storage record is stored as an element in the 
   file's Header Collection with the element identifier 
   collection_header.storage_record_element_id.
   
        The unblocked_storage_record contains the control interval numbers
   of the first and last control intervals of a collection.  Unblocked
   control intervals are chained together, so all control intervals can be 
   found by starting at one end and following the chain forward or backward.
   
        The blocked_storage_record is not yet used, as the Blocked Control
   Interval Storage Method is not yet implemented.
*/

/* HISTORY:
Written by Matthew Pierret, 09/24/84.
Modified:
*/

/* format: style2,ind3,ll79 */

     dcl	   1 unblocked_storage_record
			      aligned
			      based (unblocked_storage_record_ptr),
	     2 first_control_interval
			      fixed bin (24) uns,
	     2 last_control_interval
			      fixed bin (24) uns;

     dcl	   1 blocked_storage_record
			      aligned based (blocked_storage_record_ptr),
	     2 last_control_interval
			      fixed bin (24) uns,
	     2 number_of_blocks   fixed bin (17) unal,
	     2 number_of_control_intervals_per_block
			      fixed bin (17) unal,
	     2 allocation_map_element_id
			      bit (36) aligned;

     dcl	   unblocked_storage_record_ptr
			      ptr init (null ());
     dcl	   blocked_storage_record_ptr
			      ptr init (null ());

/* END INCLUDE FILE dm_cm_storage_record.incl.pl1 */


*/
                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group Bull including Bull HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell Bull Inc., Groupe Bull
and Bull HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture for 
managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, Bull or Bull HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by Bull HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved

*/
