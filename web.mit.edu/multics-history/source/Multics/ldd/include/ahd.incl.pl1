/*	BEGIN INCLUDE FILE ... ahd.incl.pl1 ... last modified 81*01*20 */
/* format: style1  */

     dcl	   active_hardcore_datap  ptr;

     dcl	   1 ahd		      aligned based (active_hardcore_datap), /* declaration of active_hardcore_data */
	     2 user_unlock_lock   bit (36),		/* lock set when unlocking invalid user lock */
						/* per-system constants */
	     2 pdir_quota	      fixed bin (35),	/* max system quota on pdr */
	     2 cold_boot_switch   bit (36),		/* indicates if boot is cold or warm */
	     2 dir_arearp	      fixed bin (35),	/* offset of allocation area */
	     2 metering_interval  fixed bin (35),	/* 30 days in fs time */
	     2 nalloc_sizes	      fixed bin (35),	/* no. of allocation sizes in dir */
	     2 alloc_sizes	      bit (0) aligned,	/* Some ALM programs reference as an array */
	     2 aclsize	      fixed bin (35),	/* Size of an ACL entry */
	     2 ensize	      fixed bin (35),	/* Size of an entry name */
	     2 elcsize	      fixed bin (35),	/* entry/link common size */
	     2 esize	      fixed bin (35),	/* Size of an entry */
	     2 link_max	      fixed bin,		/* Largest size of a link */
	     2 ht_sizes	      (3) fixed bin,	/* Hash table blocks for sizes 2,  3,  and 4 */
	     2 dir_hdrsize	      fixed bin (35),	/* Number of words in directory header */
	     2 num_hash_table_sizes fixed bin (35),	/* Number of hash table sizes */
	     2 hash_table_sizes   (4) fixed bin (35),	/* Hash table sizes */
	     2 n_dir_sizes	      fixed bin,		/* Number of directory sizes */
	     2 dir_sizes	      (10) fixed bin (18),	/* Directory sizes- must include default in aard */
	     2 pad_dir_size	      fixed bin,		/* meters */
	     2 link_meters	      (72) fixed bin (35),	/* meters of linker */
	     2 lock_meters,				/* meters for dir locks */
	       3 lock	      bit (36),		/* lock for lock meters */
	       3 total_waits      fixed bin,		/* no. of times waited for lock */
	       3 total_time_waiting fixed bin (52),	/* time spent waiting for locks */
	       3 max_time_waiting fixed bin (52),	/* most time waiting for locks */
	       3 l_meters	      (0:2),		/* meters for locks for reading writing and modifying */
	         4 total_locks    fixed bin,		/* no. of locks for this purpose */
	         4 total_pf	      fixed bin,		/* pfs taken while locked for this purpose */
	         4 total_cpu      fixed bin (71),	/* time spent locked for this purpose */
	         4 max_cpu	      fixed bin (71),	/* most time spent locked for this purpose */
	         4 max_pf	      fixed bin,		/* pfs taken while most time spent */
	         4 total_dirpf    fixed bin,		/* dir pfs taken while locked */
	         4 max_dirpf      fixed bin,		/* dir pfs taken while most time spent locked */
	         4 padl	      fixed bin,
	     2 max_hashes	      fixed bin (35),	/* longest hash search */
	     2 hashes	      (12) fixed bin (35),	/* histogram of length of hash searches */
	     2 total_cpu_ac	      fixed bin (71),	/* time of access computations */
	     2 max_cpu_ac	      fixed bin (71),	/* time of longest access computation */
	     2 total_ac	      fixed bin (35),	/* no. of access computations */
	     2 total_pf_ac	      fixed bin (35),	/* pfs while computing access */
	     2 max_pf_ac	      fixed bin (35),	/* most pfs during access computation */
	     2 pf_long_ac	      fixed bin (35),	/* pfs for longest access computation */
	     2 nacls_long_ac      fixed bin (35),	/* no. ACL entries searched during longest access computation */
	     2 max_acls_ac	      fixed bin (35),	/* most ACL entries searched during access computation */
	     2 acls_ac	      (0:12) fixed bin (35),	/* histogram of ACL entries searched during access computations */
	     2 pad2	      (2) fixed bin,
	     2 system_free_seg_lock bit (36),		/* Control for system_free_seg */
	     2 system_free_seg_uid bit (36),		/* SFS wait event */
	     2 system_free_seg_notify_sw bit (1),	/* anybody waiting */
	     2 system_free_seg_count fixed bin,		/* use count */
	     2 system_free_seg_size fixed bin,		/* current size */
	     2 auditing_meters    bit (0) aligned,	/* meters of protection auditing performance */
	     2 audit_ck_freq      (0:11) fixed bin (35),	/* histogram of ckecks of audit select flags */
	     2 audit_cnt	      (0:11) fixed bin (35),	/* counts of audit messages of different classes */
	     2 audit_time	      (0:11) fixed bin (71),	/* meters of cpu time spent auditing */
	     2 audit_pf	      (0:11) fixed bin (35),	/* meters of page faults spent auditing */
	     2 pad3	      (28) fixed bin,

						/* system default search rules data for initiate_search_rules */
	     2 search_rules_lock,			/* Lock on default search rules */
	       3 pid	      bit (36),
	       3 event	      fixed bin (35),
	       3 notify_sw	      bit (1),
	     2 n_sr_tags	      fixed bin,		/* Number of search rule tags */
	     2 n_sys_rules	      fixed bin,		/* Number of search rules */
	     2 sr_tag	      (36),		/* array of rule tags */
	       3 name	      char (32),		/* tag name */
	       3 flag	      bit (36),		/* tag key */
	     2 search_rule	      (50),		/* array of dir names */
	       3 name	      char (168),		/* dir name */
	       3 flag	      bit (36);		/* which tags want this dir */

/*   	END INCLUDE FILE ... ahd.incl.pl1 */


*/
                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group Bull including Bull HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell Bull Inc., Groupe Bull
and Bull HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture for 
managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, Bull or Bull HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by Bull HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved

*/
