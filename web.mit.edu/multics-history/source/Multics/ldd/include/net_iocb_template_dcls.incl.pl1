
/*             "net_iocb_template_dcls.incl.pl1" -- include file to declare     */
/*        the format of the IOCB.  This include file exists because the one     */
/*        provided by the system mis-declared all of the entry variables in     */
/*        the IOCB.                                                             */

/*        Originally created by D. M. Wells on 9 September, 1974.               */

     declare
          1 iocb_template aligned based,                    /* I/O Control Block                              */
             2 version fixed binary (17),                   /* version number of structure -- currently 1     */
             2 name character (32) unaligned,               /* I/O name of the control block                  */

             2 actual_iocb_ptr pointer,                     /* IOCB ultimately SYNed to.                      */

                                        /* Data above this point should not be altered by an I/O switch.      */

             2 attach_descrip_ptr pointer,                  /* pointer to a printable attach description      */
             2 attach_data_ptr pointer,                     /* ptr to (per switch) attachment data structure  */
             2 open_descrip_ptr pointer,                    /* pointer to printable open description          */
             2 open_data_ptr pointer,                       /* ptr to (per switch) opening data structure     */

             2 event_channel fixed binary (71),             /* event channel for asynchronous I/O             */

             2 detach_iocb entry (ptr, fixed bin (35)),                         /* detach_iocb (p, code)      */
             2 open entry (ptr, fixed bin (17), bit (1), fixed bin (35)),
                                                            /* open (p, mode, append, code)                   */
             2 close entry (ptr, fixed bin (35)),                               /* close (p, code)            */
             2 get_line entry (ptr, ptr, fixed bin (24), fixed bin (24), fixed bin (35)),
                                                            /* get_line (p, bufptr, buflen, actlen, code)     */
             2 get_chars entry (ptr, ptr, fixed bin (24), fixed bin (24), fixed bin (35)),
                                                            /* get_chars (p, bufptr, buflen, actlen, code)    */
             2 put_chars entry (ptr, ptr, fixed bin (24), fixed bin (35)),
                                                            /* put_chars (p, bufptr, buflen, code)            */
             2 modes entry (ptr, char (*), char (*), fixed bin (35)),
                                                            /* modes (p, newmode, oldmode, code)              */
             2 position entry (ptr, fixed bin (1), fixed bin (24), fixed bin (35)),
                                                            /* position (p, type, movement)                   */
             2 control entry (ptr, char (*), ptr, fixed bin (35)),
                                                            /* control (p, order, infptr, code)               */
             2 read_record entry (ptr, ptr, fixed bin (24), fixed bin (24), fixed bin (35)),
                                                            /* read_record (p, bufptr, buflen, actlen, code)  */
             2 write_record entry (ptr, ptr, fixed bin (24), fixed bin (35)),
                                                            /* write_record (p, bufptr, buflen, code)         */
             2 rewrite_record entry (ptr, ptr, fixed bin (24), fixed bin (35)),
                                                            /* rewrite_record (p, bufptr, buflen, code)       */
             2 delete_record entry (ptr, fixed bin (35)),                       /* delete_record (p, code)    */
             2 seek_key entry (ptr, char (256) varying, fixed bin (24), fixed bin (35)),
                                                            /* seek_key (p, key, len, code)                   */
             2 read_key entry (ptr, char (256) varying, fixed bin (24), fixed bin (35)),
                                                            /* read_key (p, key, len, code)                   */
             2 read_length entry (ptr, fixed bin (24), fixed bin (35)),         /* read_length (p, len, code) */

                                        /* Hidden information -- user should not use these                    */

             2 ios_compatibility pointer,                   /* pointer to old IOSIM's IOS transfer vector     */
             2 syn_inhibits bit (36) aligned,               /* operations inhibited by syn_                   */
             2 syn_father pointer,                          /* IOCB immediately syn_'ed to                    */
             2 syn_brother pointer,                         /* Next IOCB syn_'ed as this one is               */
             2 syn_son pointer;                             /* first IOCB syn_'ed to this one                 */

/*        end of include file "net_iocb_template_dcls.incl.pl1"                 */



*/
                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group Bull including Bull HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell Bull Inc., Groupe Bull
and Bull HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture for 
managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, Bull or Bull HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by Bull HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved

*/
