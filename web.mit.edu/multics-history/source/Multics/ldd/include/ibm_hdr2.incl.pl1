/*  BEGIN INCLUDE FILE:  ibm_hdr2.incl.pl1                  */
/*  Modified by J. A. Bush 04/26/83 for use by mtape_ */

/* format: style4 */

dcl  ibm_hdr2P ptr;					/* pointer on which ibm_hdr2 is based */

dcl  1 ibm_hdr2 unaligned based (ibm_hdr2P),
       2 label_id char (4),				/* HDR2/EOF2/EOV2 */
       2 format char (1),				/* U/F/V */
       2 blksize char (5),				/* equivalent to ANSI block length - 32760 maximum */
       2 lrecl char (5),				/* equivalent to ANSI record length - 32760 maximum */
						/* for VS and VBS, 0 means lrecl > 32756 */
       2 density char (1),				/* no ANSI equivalent */
						/* 2 = 800 bpi; 3 = 1600 cpi; 4 = 6250 cpi */
       2 dataset_position char (1),			/* no ANSI equivalent */
						/* 0 = no volume switch has occurred */
						/* 1 = volume switch has occurred */
       2 jobstep_id char (17),			/* no ANSI equivalent */
       2 recording_technique char (2),			/* no ANSI equivalent - "  " = 9 track */
       2 control_characters char (1),			/* no ANSI equivalent */
       2 reserved1 char (1),				/* " " */
       2 block_attribute char (1),			/* no ANSI equivalent */
						/* "B" - records are blocked */
						/* "S" - records are spanned */
						/* "R" - records are blocked and spanned */
						/* " " - records are neither blocked nor spanned */
       2 reserved2 char (41);				/* " " */

dcl  1 ibm_system_use unaligned based (addr (ibm_hdr2.reserved2)), /* mtape IBM overlay */
       2 mode char (1),				/* 1 - ASCII, 9 mode; 2 - EBCDIC, 9 mode; 3 - binary */
       2 next_volname char (6);			/* Next volume id in EOV2 label */

dcl  IBM_L2_ID (3) char (4) int static options (constant) init
	("HDR2", "EOV2", "EOF2");
dcl  (IBM_HDR2 init (1),
     IBM_EOV2 init (2),
     IBM_EOF2 init (3)) fixed bin int static options (constant);

/*  END INCLUDE FILE:  ibm_hdr2.incl.pl1                    */


*/
                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group Bull including Bull HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell Bull Inc., Groupe Bull
and Bull HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture for 
managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, Bull or Bull HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by Bull HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved

*/
