/*  BEGIN:   tty_attach_data_.incl.pl1			  *  *  *  *  *  */


/****^  HISTORY COMMENTS:
  1) change(81-01-01,Margulies), approve(), audit(), install():
     Created from internal declarations.
  2) change(85-12-01,Negaret), approve(87-07-23,MCR7742),
     audit(87-07-23,GDixon), install(87-08-04,MR12.1-1056):
     Add network_type and tty_handle.
                                                   END HISTORY COMMENTS */


/* format: style2 */

/* INTERNAL INTERFACE -- SUBJECT TO CHANGE */

     dcl	   attach_data_ptr	      pointer;
     dcl	   1 attach_data	      aligned based (attach_data_ptr),
	     2 attach_descrip     character (128) varying,
	     2 open_descrip	      character (64) varying,
	     2 device_id	      character (32) unaligned,
						/* given in atd */
	     2 device_used	      character (32) unaligned,
						/* aquired by dm_ */
	     2 dial_phone	      character (64) varying,
	     2 dial_id	      character (32) unaligned,
	     2 resource_desc      character (256) unaligned,
	     2 network_type	      fixed bin,
	     2 tty_index	      fixed bin,
	     2 tty_handle	      fixed bin (35),
	     2 operation_hlock    fixed bin,		/* if this is nonzero detach may not free this structure */
	     2 flags	      aligned,
	       3 assigned_ev_channel
			      bit (1) unaligned,	/* we got the channel as fast channel */
	       3 created_ev_channel
			      bit (1) unaligned,	/* we got it as slow channel */
	       3 have_ev_channel  bit (1) unaligned,	/* there is a channel to use */
	       3 login_channel    bit (1) unaligned,	/* we are login channel */
	       3 phone_given      bit (1) unaligned,	/* dial_out */
	       3 accept_dial      bit (1) unaligned,	/* wait for terminal to dial */
	       3 must_release     bit (1) unaligned,	/* we must call release channel */
	       3 no_block	      bit (1) unaligned,	/* never block */
	       3 async_close      bit (1) unaligned,	/* close with hlock nonzero */
	       3 async_detach     bit (1) unaligned,	/* detach_iocb with hlock nonzero */
	       3 hangup	      bit (1) unaligned,
	       3 async_hangup     bit (1) unaligned,	/* channel was hungup (and released) by AS */
	       3 have_user_hangup_proc
			      bit (1) unaligned,	/* user has supplied a hangup procedure */
	       3 pad	      bit (23) unaligned,
	     2 dial_manager_event aligned like event_wait_channel,
	     2 event_wait	      aligned like event_wait_channel,
	     2 user_hangup_proc,			/* user supplied hangup procedure */
	       3 procedure	      entry (pointer) variable,
	       3 data_ptr	      pointer,
	     2 mode_string_info   aligned,
	       3 max_mode_length  fixed bin (35),
	       3 mode_string      char (tty_max_mode_length refer (attach_data.max_mode_length)) unaligned,
	     2 temp_mode_string   char (tty_max_mode_length refer (attach_data.max_mode_length)) unaligned;

     declare tty_max_mode_length    fixed bin (21);

%include event_wait_channel;

/*  END OF:  tty_attach_data_.incl.pl1			  *  *  *  *  *  */


*/
                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group Bull including Bull HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell Bull Inc., Groupe Bull
and Bull HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture for 
managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, Bull or Bull HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by Bull HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved

*/
