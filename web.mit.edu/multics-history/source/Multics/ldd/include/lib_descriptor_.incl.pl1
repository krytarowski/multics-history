/* START OF:	lib_descriptor_.incl.pl1		  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  */

	/*  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */
	/*									*/
	/* N__a_m_e:  lib_descriptor_.incl.pl1						*/
	/*									*/
	/*      This include segment defines the structures which are included in the library	*/
	/* descriptor segments used as data bases by Multics library maintenance tools.		*/
	/*									*/
	/* S__t_a_t_u_s									*/
	/*									*/
	/* 0) Created by:  G. C. Dixon  in  April, 1974.					*/
	/* 1) Modified by: G. C. Dixon  in  May, 1976.					*/
	/*									*/
	/*  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */

     dcl	1 descriptor		aligned based (P.descriptor),
						/* structure which defines the location within	*/
						/*   the descriptor of description aggregates.	*/
	  2 version		fixed bin,	/*    version number of this descriptor. (= 2)	*/
	  2 name			char(32),		/*    name of this descriptor.		*/
	  2 command_default_values,			/*    aggregate:  default values to be used for	*/
						/*       commands which reference the descriptor.	*/
	    3 O			fixed bin(19),	/*       offset of aggregate from P.descriptor.	*/
	  2 roots,				/*    aggregate:  root nodes of the library.	*/
	    3 O			fixed bin(19);	/*       offset of aggregate from P.descriptor.	*/
     dcl	Vdescriptor_2		fixed bin int static options(constant) init (2);

     dcl	1 command_default_values 	based (P.command_default_values),
						/* array of structures which defines the	*/
						/*    default values which are applied to	*/
						/*    each command which uses the library	*/
						/*    descriptor.  There is one array element	*/
						/*    for each command.			*/
	  2 N			fixed bin,	/* count of commands.			*/
	  2 group (0 refer (command_default_values.N)),	/* array of structures.			*/
	    3 S			unaligned,	/*    switches:				*/
	      4 unsupported		bit(1),		/*       on if the command described by this	*/
						/*          element of the array of structures is	*/
						/*          _n_o_t supported by this descriptor.	*/
	    3 library_names,			/*    names of the default libraries which are to	*/
						/*       be used for this command, if the user	*/
						/*       omits the library name.		*/
	      4 O			fixed bin(19),	/*       offset of the names structure.		*/
	    3 search_names,				/*    star names which identify the library	*/
						/*       entries to be search for, if the user	*/
						/*       omits the search name.		*/
	      4 O			fixed bin(19);	/*       offset of the names structure.		*/

     dcl	1 library_names		based (Plibrary_names),
						/* array of default library names for one command.*/
	  2 N			fixed bin,	/*   count of names.			*/
	  2 group (0 refer (library_names.N)),		/*   array of names.			*/
	    3 V			char(32) aligned,	/*     a name.				*/
	    3 C			fixed bin(35);	/*     code from check_star_name_$entry for name.	*/

     dcl	1 search_names		based (Psearch_names),
						/* array of default search names for one command.	*/
	  2 N			fixed bin,	/*   count of names.			*/
	  2 group (0 refer (search_names.N)),		/*   array of names.			*/
	    3 V			char(32) aligned,	/*     a name.				*/
	    3 C			fixed bin(35);	/*     code from check_star_name_$entry for name.	*/
 
%include lib_commands_;

     dcl	1 roots			based (P.roots),	/* array of structures, each structure of which	*/
						/*    defines the names, absolute path name, type,*/
						/*    and search procedure for a root of the	*/
						/*    library defined by this descriptor.	*/
	  2 N			fixed bin,	/* count of roots				*/
	  2 root (0 refer (roots.N)),			/* array of roots.				*/
	    3 name,				/*    names by which this root may be referenced.	*/
	      4 O			fixed bin(19),	/*       offset of name array.		*/
	    3 path		char(168) varying,	/*    absolute path name of the root directory or	*/
						/*       archive segment.			*/
	    3 type		fixed bin,	/*    type of root.  2 = directory, 4 = archive.	*/
	    3 search_proc_name	char(65) varying,	/*    name of procedure used to search root.	*/
	    3 search_proc		entry (ptr, char(168) varying, ptr, bit(72) aligned, bit(36) aligned,
 				       fixed bin, fixed bin, ptr, entry,
				       ptr, ptr, fixed bin(35)) variable;
						/*    entry point of the program which knows how	*/
						/*       to search for library entries in this 	*/
						/*       root.				*/

     dcl	1 root_names		based (Proot_names),
						/* array of root names for one root.		*/
	  2 N			fixed bin,	/*     count of names.			*/
	  2 root_name (0 refer (root_names.N))		/*     array of names.			*/
	 			char(32);

     dcl	1 P			aligned,		/* structure containing pointers to the aggregates*/
						/*    defined above.			*/
	  2 descriptor		ptr,
	  2 command_default_values	ptr,
	  2 roots			ptr,
	Plibrary_names		ptr,
	Psearch_names		ptr,
	Proot_names		ptr;

/* END OF:	lib_descriptor_.incl.pl1		  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  */


*/
                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group Bull including Bull HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell Bull Inc., Groupe Bull
and Bull HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture for 
managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, Bull or Bull HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by Bull HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved

*/
