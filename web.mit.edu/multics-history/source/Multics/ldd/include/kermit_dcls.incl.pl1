/*  START OF:	kermit_dcls.incl.pl1		  *  *  *  *  *  */
  
  /********************************************************************/
  /*							*/
  /*n	kermit_dcls					*/
  /*							*/
  /*d	This include file contains the declarations of the external	*/
  /*d	kermit entrypoints that are called by other modules within	*/
  /*d	kermit as well as an explanation of the parameters.	*/
  /*							*/
  /*l	Written:	84-10-11	by Dean Elhard			*/
  /*							*/
  /********************************************************************/
  
  dcl kermit_comm_mgr_$flush_input
			entry
	(ptr,			/* kermit info ptr		*/
	fixed bin(35));		/* error code		*/
  
  dcl kermit_comm_mgr_$reset_line_modes
			entry
	(ptr,			/* kermit info ptr		*/
	fixed bin(35));		/* error code		*/
  
  dcl kermit_comm_mgr_$set_line_modes
			entry
	(ptr,			/* kermit info ptr		*/
	fixed bin(35));		/* error code		*/
  
  dcl kermit_get_filenames_	entry
	(ptr,			/* kermit info ptr		*/
	 char(*),			/* argument		*/
	 ptr,			/* filename ptr		*/
	 char(*),			/* reason			*/
	 fixed bin(35));		/* error code		*/
  
  dcl kermit_log_mgr_$close_log
			entry
	(ptr,			/* kermit info ptr		*/
	 fixed bin (35));		/* error code		*/
  
  dcl kermit_log_mgr_$disable	entry
  	(ptr,			/* kermit info ptr		*/
	 fixed bin (35));		/* error code		*/
  
  dcl kermit_log_mgr_$display_stats
			entry	/* statistics command	*/
  	(ptr,			/* sci ptr		*/
	 ptr);			/* kermit info ptr		*/
  
  dcl kermit_log_mgr_$enable	entry
	(ptr,			/* kermit info ptr		*/
	 fixed bin (35));		/* error code		*/
  
  dcl kermit_log_mgr_$log_message
			entry 
	(ptr,			/* kermit info ptr		*/
	 ptr);			/* log info ptr		*/
  
  dcl kermit_log_mgr_$open_log
			entry 
	(ptr,			/* kermit info ptr		*/
	 char (*) varying,		/* log file name		*/
	 fixed bin (35));		/* error code		*/
  
  dcl kermit_log_mgr_$start	entry	/* start log command	*/
  	(ptr,			/* sci ptr		*/
	 ptr);			/* kermit info ptr		*/
  
  dcl kermit_log_mgr_$stop	entry	/* stop log command		*/
	(ptr,			/* sci ptr		*/
	 ptr);			/* kermit info ptr		*/
  
  dcl kermit_mode_mgr_$get	entry	/* get modes command	*/
	(ptr,			/* sci ptr		*/
	 ptr);			/* kermit info ptr		*/
  
  dcl kermit_mode_mgr_$retrieve
			entry
	(ptr,			/* kermit info ptr		*/
	 fixed bin,		/* permanent/temporary select	*/
	 (*) fixed bin,		/* mode selector array	*/
	 ptr,			/* mode value ptr		*/
	 fixed bin (35));		/* error code		*/
  
  dcl kermit_mode_mgr_$set	entry	/* set modes command	*/
	(ptr,			/* sci ptr		*/
	 ptr);			/* kermit info ptr		*/
  
  dcl kermit_mode_mgr_$store	entry
	(ptr,			/* kermit info ptr		*/
	 fixed bin,		/* permanent/temporary select	*/
	 (*) fixed bin,		/* mode selector array	*/
	 ptr,			/* mode value ptr		*/
	 fixed bin (35));		/* error code		*/
  
  dcl kermit_pad_$receive	entry
	(ptr,			/* kermit info ptr		*/
	 char (1),		/* packet type		*/
  	 ptr,			/* buffer pointer		*/
	 fixed bin (21),		/* buffer length		*/
	 fixed bin,		/* sequence number		*/
	 fixed bin (21),		/* chars received		*/
	 fixed bin (21),		/* packet size		*/
	 bit (1),			/* CR/NL split flag		*/
	 fixed bin (35));		/* error code		*/
  
  dcl kermit_pad_$send	entry
  	(ptr,			/* kermit info ptr		*/
	 char (1),		/* packet type		*/
	 ptr,			/* data ptr		*/
	 fixed bin (21),		/* data length		*/
	 fixed bin,		/* sequence number		*/
	 fixed bin (21),		/* chars transmitted	*/
	 fixed bin (21),		/* packet length		*/
	 fixed bin (35));		/* error code		*/
  
  dcl kermit_receive_$receive_from_remote
			entry
	(ptr,			/* kermit info ptr		*/
	 fixed bin,		/* initial state		*/
	 fixed bin,                   /* initial sequence number    */
	 char (*),		/* user filename (first file)	*/
	 bit (1),			/* =1 if user gave filename	*/
	 fixed bin,		/* number of files received	*/
	 fixed bin (35));		/* error code		*/

  dcl kermit_send_$send_to_remote
			entry 
	(ptr,			/* kermit info ptr		*/
	 ptr,			/* filenames area ptr	*/
	 char (*),		/* user filename (first file)	*/
	 bit (1),			/* =1 if user gave filename	*/
	 fixed bin,                   /* number of files sent       */
	 fixed bin (35));		/* error code		*/


  dcl kermit_server_
			entry 
	(ptr,			/* kermit info ptr		*/
	 ptr);			/* filenames area ptr	*/


  dcl kermit_xfer_modes_$check_params
			entry
	(ptr,			/*  kermit info ptr		*/
	 ptr,			/*  remote parameters	*/
	 fixed bin (21),		/*  remote parameters length	*/
	 ptr,                         /*  local parameters          */
	 fixed bin (35));		/*  error code		*/

  dcl kermit_xfer_modes_$init 
			entry
	(ptr,			/*  ptr to kermit info	*/
	 fixed bin (35));		/*  error code		*/

  dcl kermit_xfer_modes_$get_local_params
			entry
	(ptr,			/*  kermit info ptr		*/
	 ptr,			/*  local parameters	*/
 	 fixed bin (21),		/*  local parameters length	*/
	 ptr,			/*  encoded parameters	*/
	 fixed bin (21),		/*  encoded parameters length */
	 fixed bin (35));		/*  error code		*/

  dcl kermit_xfer_modes_$process_params
			entry
	(ptr,			/*  kermit info ptr		*/
	 ptr,			/*  remote parameters	*/
	 fixed bin (21),		/*  remote parameters length	*/
	 ptr,                         /*  local parameters          */
	 fixed bin (35));		/*  error code		*/

/*  END OF:	kermit_dcls.incl.pl1		  *  *  *  *  *  */


*/
                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group Bull including Bull HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell Bull Inc., Groupe Bull
and Bull HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture for 
managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, Bull or Bull HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by Bull HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved

*/
