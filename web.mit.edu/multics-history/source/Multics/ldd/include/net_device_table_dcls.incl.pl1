
/*             "net_device_table_dcls.incl.pl1" -- include file to declare the  */
/*        structures used within the device driver tables used by the Network   */
/*        IOSIMS.                                                               */

/*        Originally created by D. M. Wells 1974, April 22.                     */

     declare
          1 device_table_header aligned based,
             2 allocation_area_ptr pointer,                    /* non-null => ptr to area in which struc alloc   */
             2 version_number fixed binary (17),
             2 table_length fixed binary (18),                    /* number of words to be copied to copy struc     */

             2 conversion_entry entry (ptr, ptr, fixed bin (24), fixed bin (24),
                         ptr, fixed bin (24), fixed bin (24), bit (36) aligned),

             2 normal_table_rel bit (18) unaligned,          /* rel offset to normal output table              */
             2 edited_table_rel bit (18) unaligned,          /* rel offset to edited output table              */

             2 output_format_rel bit (18) unaligned,          /* rel offset to output formatting characters     */
             2 output_noopt_format_rel bit (18) unaligned,          /* rel offset to easy set of output chars         */

             2 output_padding_rel bit (18) unaligned,          /* rel offset to output padding requirements      */
             2 output_padding_info bit (18) unaligned,

             2 input_table_rel bit (18) unaligned,          /* rel offset to input table                      */
             2 input_movement_table_rel bit (18) unaligned,

             2 default_line_length fixed binary (24),          /* line length to use at beginning                */
             2 default_page_length fixed binary (24),          /* page length to use at beginning                */

             2 tab_table_rel bit (18) unaligned,                    /* rel offset to string of tab locations          */
             2 tab_table_length fixed binary (17) unaligned,          /* length of tab location string        */

             2 line_overflow_descriptor aligned like output_descriptor_template,          /* for long lines   */
             2 page_overflow_descriptor aligned like output_descriptor_template,          /* for long pages   */

             2 escape_char bit (9) unaligned,                    /* char to be used for output octal escapes       */
             2 highest_char bit (9) unaligned,                    /* all chars bigger get ignored                   */
             2 up_shift_char bit (9) unaligned,                    /* char to get into upper case                    */
             2 down_shift_char bit (9) unaligned,                    /* char to get inoo lower case                    */

             2 padding_char bit (9) unaligned,                    /* char to use for padding requirements           */
             2 extra bit (27) unaligned,

             2 info_bits unaligned,
                3 shifting_terminal bit (1);                    /* on if this terminal needs to be shifted        */


     declare
          1 output_descriptor_template aligned based,
             2 horizontal_movement bit (5) unaligned,
             2 vertical_movement bit (5) unaligned,
             2 special_functions bit (3) unaligned,
             2 ignore_this_character bit (1) unaligned,
             2 function_description bit (4) unaligned,
             2 description_data bit (18) unaligned;

     declare
          1 sequence_template aligned based,
             2 count fixed binary (8) unaligned,
             2 byte (1 : 1) bit (9) unaligned;

     declare
          1 input_descriptor_template aligned based,
             2 match_character bit (9) unaligned,
             2 translated_character bit (9) unaligned,
             2 escape_list_rel bit (18) unaligned,

             2 horizontal_movement bit (5) unaligned,
             2 vertical_movement bit (5) unaligned,
             2 special_functions bit (3) unaligned,
             2 ignore_this_character bit (1) unaligned,
             2 function_descriptor bit (4) unaligned,
             2 padding bit (18) unaligned;

     declare
          1 input_escape_list aligned based,
             2 count fixed binary (17),
             2 escape_entry (1 : 1) like input_descriptor_template;

     declare
          1 output_format_template aligned based,
             2 SP_descriptor like output_descriptor_template,
             2 HT_descriptor like output_descriptor_template,
             2 EOL_descriptor like output_descriptor_template,

             2 BS_descriptor like output_descriptor_template,
             2 RHT_descriptor like output_descriptor_template,
             2 CR_descriptor like output_descriptor_template,

             2 NL_descriptor like output_descriptor_template,
             2 VT_descriptor like output_descriptor_template,
             2 NP_descriptor like output_descriptor_template,

             2 LF_descriptor like output_descriptor_template,
             2 VTcol_descriptor like output_descriptor_template,
             2 FF_descriptor like output_descriptor_template,

             2 RNL_descriptor like output_descriptor_template,
             2 RVT_descriptor like output_descriptor_template,
             2 RNP_descriptor like output_descriptor_template,

             2 RLF_descriptor like output_descriptor_template,
             2 RVTcol_descriptor like output_descriptor_template,
             2 RFF_descriptor like output_descriptor_template,

             2 CR_over_BS_columns fixed binary (24),
             2 BS_over_CR_columns fixed binary (24);


/*        end of include file "net_device_table_dcls.incl.pl1"                  */



*/
                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group Bull including Bull HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell Bull Inc., Groupe Bull
and Bull HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture for 
managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, Bull or Bull HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by Bull HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved

*/
