/* BEGIN mdbm_scope_info.incl.pl1 -- odf 8/8/78 */

/* WARNING
          If the scope_info or scope_flags structure is changed then the
          mrds_data_ item saved_res_version MUST be incremented to invalidate
          all existing saved resultants
*/

/* Modified by Jim Gray - - 80-11-17, to add back store/delete/modify permissions */

/* 80-12-10 Jim Gray : change name of store to append_tuple, delete to delete_tuple,
   modify to modify_attr, retrieve to read_attr, remvoe update, put level 4
   qualifiers for permit/prevent modes and to put pads in standard format */

/* 80-12-11 Jim Gray : added submodel version of file/rel name for convenience */

/* 80-12-22 Jim Gray : added like referenced structure so linus_scope_data.incl
   could make use of it for compatibility. */

/* 81-1-11 Jim Gray : added touched bit to scope_flags, so that
   the fact that null scope has been set can be displayed */

/* 85-04-14 Thanh Nguyen: Made scope_flags to be aligned so we could access the
   prevent flags from any pointer which directly pointed to scope_flags itself
   (i.e rm_rel_info.scope_flags_ptr). */

/* this structure is to be allocated in the mrds_dbcb.incl.pl1 static area,
   and is used to maintain the scope mechanism for file access.
   It contains the scope permit/prevent operations that this user
   has set in his view for this opening instance. */

dcl 1 scope_info aligned based (scope_ptr),		/* array of scope tuples for this user */
    2 mbz1 bit (144),				/* Reserved for future use */
    2 nfiles fixed bin,				/* Number of scope tuples in user's scope */
    2 active_scopes fixed bin,			/* number of scopes currently active for a given user */
    2 scope (max_file_init refer (scope_info.nfiles)),	/* defines user's scope of access to files */
      3 name char (30) aligned,			/* filename */
      3 sm_name char (32),				/* name of file(rel) in submodel */
      3 flags like scope_flags ;


declare 1 scope_flags aligned based,			/* common layout of scope flag bits */
        2 permits,					/* modes to permit this user */
	3 read_attr bit (1) unal,			/* read_attr access to this file in scope */
	3 append_tuple bit (1) unal,			/* append_tuple concnrrency permission */
	3 delete_tuple bit (1) unal,			/* delete_tuple concurrency permission on rel */
	3 modify_attr bit (1) unal,			/* modify_attr concurrency permission */
	3 mbz2 bit (10) unal,			/* for expansion of permit ops */
        2 prevents,					/* modes to be denyed to other users */
	3 read_attr bit (1) unal,			/* on if user has prevent on read_attr for this file */
	3 append_tuple bit (1) unal,			/* prevent of append_tuple concurrency */
	3 delete_tuple bit (1) unal,			/* prevent of delete_tuple concurrency */
	3 modify_attr bit (1) unal,			/* prevent of modify_attr concurrency */
	3 mbz3 bit (10) unal,			/* for future prevent concurrency modes */
        2 touched bit (1) unal,			/* on => scope set for this relation */
        2 mbz4 bit (7) unal ;				/* for future flags */

dcl  max_file_init fixed bin;				/* nbr. of files in data base */
dcl  scope_ptr ptr init (null ());			/* points to scope_info array */
dcl  scope_rdy bit (6) unal init ("000011"b) int static options (constant); /* scope file ready modes (5 or 6) */
dcl  scope_rdy_array (6) bit (1) unal based;		/* array format of scope_rdy string */

/* END mdbm_scope_info.incl.pl1 */


*/
                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group Bull including Bull HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell Bull Inc., Groupe Bull
and Bull HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture for 
managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, Bull or Bull HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by Bull HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved

*/
