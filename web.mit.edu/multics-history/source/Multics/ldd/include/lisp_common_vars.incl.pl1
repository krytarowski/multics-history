/* Include file lisp_common_vars.incl.pl1;
   describes the external static variables which may be referenced
   by lisp routines.
   D. Reed 4/1/71 */

dcl 1 lisp_static_vars_$lisp_static_vars_ external,
      2 cclist_ptr	ptr,	/* pointer to list of constants kept
			by compiled programs */
     2 garbage_collect_soon bit(1) aligned,	/* if this is on we should garbage collect soon */

     lisp_static_vars_$err_recp ptr ext aligned,	/* pointer to error data */
     err_recp ptr defined (lisp_static_vars_$err_recp),
    eval_frame ptr defined (lisp_static_vars_$eval_frame),	/* info kept by eval if *rset t */
    lisp_static_vars_$eval_frame ptr ext static,
     lisp_static_vars_$prog_frame ptr ext aligned,
     lisp_static_vars_$err_frame ptr ext aligned,
     lisp_static_vars_$catch_frame ptr ext aligned,
     lisp_static_vars_$unwp_frame ptr ext aligned,
     lisp_static_vars_$stack_ptr ptr ext aligned,
     lisp_static_vars_$t_atom fixed bin(71) ext aligned,
     lisp_static_vars_$top_level label ext,	/* top level read_eval_print loop */
     lisp_static_vars_$unmkd_ptr ptr ext aligned,
     lisp_static_vars_$binding_top ptr ext aligned,
     lisp_static_vars_$obarray fixed bin(71) aligned ext,
     obarray fixed bin(71)  defined (lisp_static_vars_$obarray),
     lisp_static_vars_$array_atom fixed bin(71) aligned ext,
     array_atom fixed bin(71) defined (lisp_static_vars_$array_atom),
     binding_top ptr defined (lisp_static_vars_$binding_top),
     unmkd_ptr ptr defined (lisp_static_vars_$unmkd_ptr),
     stack_ptr ptr defined (lisp_static_vars_$stack_ptr),
     lisp_static_vars_$nil ext static fixed bin(71) aligned,
     nil fixed bin(71) defined (lisp_static_vars_$nil),
     lisp_static_vars_$tty_input_chan ext static ptr,	/* used by the reader */
     lisp_static_vars_$tty_output_chan ext static ptr,	/*used by print*/
     tty_input_chan ptr def (lisp_static_vars_$tty_input_chan),
     tty_output_chan ptr def (lisp_static_vars_$tty_output_chan),
    lisp_static_vars_$iochan_list external pointer,		/* list of all open iochans */
    nil_ptr ptr based(addr(lisp_static_vars_$nil)) aligned,
     prog_frame ptr def (lisp_static_vars_$prog_frame),		/* 3 ptrs for use of lisp_prog_fns_ */
     err_frame ptr def (lisp_static_vars_$err_frame),		/* they point out frames in unmkd pdl */
     catch_frame ptr def (lisp_static_vars_$catch_frame),
     unwp_frame ptr def (lisp_static_vars_$unwp_frame),
     t_atom_ptr ptr aligned based(addr(lisp_static_vars_$t_atom)),
     t_atom fixed bin(71) defined (lisp_static_vars_$t_atom);		/* pointer to atom t */
dcl lisp_static_vars_$user_intr_array(20) fixed bin(71) aligned ext static,	/* -> atoms whose values are intr service functions */
    user_intr_array (20) fixed bin(71) aligned def (lisp_static_vars_$user_intr_array),
    lisp_static_vars_$star_rset fixed bin(71) aligned ext static,
    star_rset fixed bin(71) aligned def (lisp_static_vars_$star_rset);


/* end include file lisp_common_vars.incl.pl1 */


*/
                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group Bull including Bull HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell Bull Inc., Groupe Bull
and Bull HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture for 
managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, Bull or Bull HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by Bull HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved

*/
