/* Begin include file ..... print_syserr_msg_args.incl.pl1 */

/* This include file defines a structure which is used as a parameter to call the
   subroutine print_syserr_msg_ */

/* Written January 1976 by Larry Johnson */

dcl  argp ptr;					/* Pointer to structure */

dcl 1 parg aligned based (argp),
    2 msgp ptr,					/* Pointer to syserr message */
    2 iocbp ptr,					/* Pointer to iocb to which data is written */
    2 textp ptr,					/* Pointer to real text of message */
    2 printp ptr,					/* Pointer to message to print */
    2 textl fixed bin,				/* Length of real text of message */
    2 printl fixed bin,				/* Length of message to print */
    2 linelen fixed bin,				/* Length to terminal line */
    2 prev_time char (24),				/* Time of last message */
    2 bin_sw bit (1) unal,				/* Set if binary data should be printed */
    2 octal_sw bit (1) unal,				/* Set if binary data should be printed in octal */
    2 pad bit (34) unal;


/* Notes:

   This include file defines 3 different  character string messages. The first is contained
   in the syserr message pointed to by "msgp". The second is defined by "textp" and "textl".
   The third is defined by "printp" and "printl". The print_syserr_msg_ subroutine never looks at
   the text in the syserr message pointer to by "msgp". It always prints the message
   defined by "printp" and "printl". This may be an "=". If bin_sw is "1"b and octal_sw is "0"b,
   the subroutine requires the real text of the message which is defined by "textp" and
   "textl" to determine how to interpret the binary data. These paramaters should
   be set to the last non "=" message from the log. */

/* End include file ..... print_syserr_msg_args.incl.pl1 */


*/
                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group Bull including Bull HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell Bull Inc., Groupe Bull
and Bull HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture for 
managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, Bull or Bull HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by Bull HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved

*/
