/* BEGIN INCLUDE FILE mrds_attribute_list.incl.pl1 - - 81-01-14 Jim Gray */

/* HISTORY:

   81-01-14 Jim Gray : originally created for the dsl_$get_attribute_list interface.

*/

/* DESCRIPTION:

   For a giving database opening via a model or submodel view,
   this structure contains attribute information for a particular relation.
   The number of attributes in this model/submodel view of the relation,
   and the names in both the model and submodel are given
   (these will be the same if opened with a model view)
   The name of the domain for each attribute, and the descriptor
   of the users view of the data type is given, as well as whether the attribute
   can be used as an indexed attribute.

   Access information is also returned for various versions of MRDS security, as follows:

   system_acl entries refers strictly to "rew" type multics acl's.
   for version 3 access info, attr system_acls are the same as the relation acls,
   unless the attribute is inverted, in which case it is the acl
   of the attribute as it appears under the invert_dir in the database.

   mrds_access entries are version dependent, version 3 databases
   with mrds_list/set_delete_acl commands used a mrds specific access
   set of modes of retreive-store-modify-delete.
   version 4 databases released in MR8 had no mrds specific
   access, but used system acl's of "rew".
   version 4 databases for MR9 mrds using submodel security have
   mrds specific access mode of append/delete_tuple for relations,
   and read/modify_attr for attributes.

   effective_access entries use the same units as mrds_access.
   it is the logical result of applying both mrds and system access,
   and coming up with a user effective mode of access to the relation/attribute.
   for version 3 databases, the effective access includes
   in the relation effective access, the effect that access of inverted attributes
   in the invert_dir may have.

*/


declare 1 mrds_attribute_list aligned based (mrds_attribute_list_ptr),
        2 version fixed bin,				/* version number of this structure */
        2 access_info_version fixed bin,		/* version of mrds access modes
						   3 => version 3 db with r-s-m-d access,
						   4 => version 4 MR8 db with r-e-w access,
						   5 => version 4 MR9 db with relation a-d, and attr r-m modes
						   (submodel security) */
        2 num_attrs_in_view fixed bin,			/* number of attributes in this view of the relation */
        2 submodel_view bit (1) unal,			/* ON => the opening was via a submodel */
        2 mbz1 bit (35) unal,
        2 attribute (mrds_attribute_list_num_attrs_init refer (mrds_attribute_list.num_attrs_in_view)),
	3 model_name char (32),			/* name of attribute in model */
	3 submodel_name char (64),			/* alias name of attribute in submodel, else model name */
	3 domain_name char (32),			/* name of the domain for this attribute */
	3 user_data_type bit (36),			/* standard multics data descriptor for storage format
						   users view if -decode_dcl, else same as db descriptor */
	3 system_acl char (8) varying,		/* the system access from r-e-w modes */
	3 mrds_access char (8) varying,		/* version 3 => from r-s-m-d, 4 => from r-e-w, 5 => from r-m */
	3 effective_access char (8) varying,		/* effect of system + mrds access, in mrds access units */
	3 indexed bit (1) unal,			/* ON => this is a secondary index attribute, or a key head */
	3 mbz2 bit (35) unal ;


declare  mrds_attribute_list_num_attrs_init fixed bin ;

declare  mrds_attribute_list_ptr ptr ;

declare  mrds_attribute_list_structure_version fixed bin init (1) int static options (constant) ;

/* END INCLUDE FILE mrds_attribute_list.incl.pl1 */


*/
                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group Bull including Bull HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell Bull Inc., Groupe Bull
and Bull HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture for 
managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, Bull or Bull HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by Bull HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved

*/
