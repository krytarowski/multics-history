	/* Include file bndtbl.incl.pl1 */


/****^  HISTORY COMMENTS:
  1) change(85-09-24,Elhard), approve(85-09-24,MCR7198),
     audit(86-06-30,Weaver), install(86-07-16,MR12.0-1094):
     Added link_regeneration_table and eliminated the use of "p" as a pointer
     to base structures on..
                                                   END HISTORY COMMENTS */

	/* DIVERSE BINDER TABLES */

	/* Modified Oct 1978 by David Spector for hash coding snt and strm */
	/* Modified Dec 1978 by David Spector for making repatch table
	   automatically extensible */
	
declare	(sntp, adnp, odnp, rptp, rptep, strmp, lrtp) pointer;

	/* The SEGNAME table  -  segnames and synonyms of all components */

declare	1 snt aligned based(sntp),
	2 hash_table (0:210) unaligned ptr,	/* prime length */
	2 max_size fixed bin,		/* size limit of allocated segname table */
	2 n_names fixed bin,		/* number of segname-table entries used */
	2 entry(1000) like seg;

	/* declaration of a SEGNAME entry */

declare	1 seg aligned based,		/* redeclaration of a single segname */
	  2 name char(33) aligned,		/* segname in ACC string format */
	  2 lng fixed bin,			/* length of segname, incl ACC count */
	  2 addname fixed bin,		/* 1-> add name to bound segment */
	  2 defrel bit(18),			/* offset in defs of new definition */
	  2 comp pointer,			/* pointer to associated component table */
	  2 hash_thread ptr;		/* thread to next "seg" in bucket */


	/* the ADDNAME table  - list of names specified by "Addname" statement */

declare	1 an aligned based(adnp),
	2 max_size fixed bin,		/* size limit of addname table */
	2 n_an fixed bin,			/* number of names to add */
	2 syn(1000) char(32) aligned;		/* contains the names to be added */


	/* The ODDNAME table  -  scratchpad memory to suppress redundant error messages */

declare	1 od aligned based(odnp),
	2 max_size fixed bin,		/* max size of table */
	2 n_odds fixed bin,			/* current size of table */
	2 entry(1000),
	  3 name char(289) aligned;


	/* The REPATCH table  -  of halfwords to be relocated at a later time */

declare	1 rpt aligned based(rptp),
	2 thread unaligned ptr,			/* To next rpt (null at end) */
	2 npt fixed bin,
	2 entry(1000) like rpte aligned;


declare	1 rpte aligned based(rptep),		/* declaration of single repatch table entry */
	2 poffset bit(18) unaligned,		/* offset into text of word to be patched */
	2 pexpr bit(18) unaligned,		/* value to add to patched halfword */
	2 halfword char(3) aligned,		/* designates wordhalf to be patched */
	2 pbase char(1) unaligned,		/* section designator of word to be patched */
	2 code char(1) unaligned;		/* code of section base to be used as patch value */


	/* The STRINGMAP table - to avoid redundant strings in definition section */

declare	1 strm aligned based(strmp),
	2 hash_table (0:862) fixed bin(17),	/* prime length */
	2 max_size fixed bin,
	2 nstr fixed bin,
	2 entry(2048) unaligned,
	  3 map bit(18),			/* rel pointer to string in def section */
	  3 hash_thread fixed bin(17);	/* index of next strm.entry in hash bucket */

	/* The LINK_REGENERATION table - to flag links which have and  */
	/* have not been regenerated to insure generation of all links */
	
declare	1 lrt		aligned based (lrtp),
	  2 count		fixed bin,
	  2 start_offset	fixed bin (18) unsigned,
	  2 regenerated (0 refer (lrt.count))
			bit (18) unaligned;

declare	UNRESOLVED	bit (18) static options (constant) init ("000000"b3);
declare	INTERNALLY_RESOLVED	bit (18) static options (constant) init ("777777"b3);


*/
                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group Bull including Bull HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell Bull Inc., Groupe Bull
and Bull HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture for 
managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, Bull or Bull HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by Bull HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved

*/
