/*	BEGIN INCLUDE FILE probe_static_info.incl.pl1	*/

/* *	This include file describes per-process information about probe, such
   *	as various options available and the info directories and modes.
   *
   *	Created: 06/06/79 W. Olin Sibert */

dcl 1 probe_static_info aligned based (probe_info.static_info_ptr), /* per-process data about probe */
    2 probe_info_version fixed bin,			/* same as probe_info.probe_info_version */

    2 version aligned,
      3 major_version fixed bin,
      3 minor_version fixed bin,
      3 version_string char (32) unaligned,		/* like "4.3f, patch 1" */

    2 name char (32) unaligned,			/* "probe" */
    2 prompt character (40) varying,			/* prompt for reading requests */
    2 switches,
      3 brief_sw bit (1) unaligned,			/* briefer break messages, no header (default OFF) */
      3 no_handle_faults_sw bit (1) unaligned,		/* don't handle bad ptr faults (default OFF) */
      3 recursive_breaks_sw bit (1) unaligned,		/* don't ignore recursive breaks in probe */
      3 prompt_on_sw bit (1) unaligned,			/* prompt for request lines */
      3 switch_pad bit (32) unaligned,

    2 scratch_segment_ptr pointer,			/* pointer to probe_scratch_ -- always valid */
    2 break_segment_ptr pointer,			/* pointer to Person.breaks -- valid only if needed */

    2 seg_info_offset_ptr pointer,			/* pointer to seg_info_offset array */

    2 probe_segno bit (18),				/* segment number of probe itself */
   2 last_break_segno bit (18),			/* segment number of last interrupted program */

    2 stack_info aligned,				/* information about the stack trace in probe_scratch_ */
      3 level_chain pointer unaligned,			/* first level frame entry pointer */
      3 max_level fixed bin,				/* number of stack levels */
      3 flags aligned,
       (4 good_stack,
        4 traced_with_all,				/* whether the stack trace includes support frames */
        4 pad1 (34)) bit (1) unaligned,

    2 modes_ptr pointer unaligned,			/* pointer to modes -- same as probe_info.modes_ptr */

    2 request_table_info aligned,			/* info for request definitions */
      3 array_ptr pointer,				/* pointer to array of request table pointers */
      3 array_size fixed bin, 			/* number of elements in use */
      3 array_max_size fixed bin,			/* max number of elements in array */
      3 using_internal_array bit (1) aligned,		/* whether or not we are using the array in probe_static_info */

    2 io_switches,					/* switches probe does its I/O on */
      3 input_switch pointer,
      3 output_switch pointer,
      3 (private_input_sw, private_output_sw) bit (1) aligned,
						/* created by ids, ods and should be destroyed */

    2 info_directory_info aligned,			/* info about info directories */
      3 array_ptr pointer,
      3 array_size fixed bin,
      3 array_max_size fixed bin,
      3 using_internal_array bit (1) aligned,

    2 exclude_name_info aligned,			/* info for exclude array used in printing values */
      3 array_ptr pointer,
      3 array_size fixed bin,
      3 array_max_size fixed bin,
      3 using_internal_array bit (1) aligned,

    2 null_seg_info_ptr pointer unaligned,		/* pointer to the "null" seg_info block */

    2 initial_arrays,				/* initial versions of various arrays */
      3 request_table_ptr_array (10) pointer aligned,
      3 info_directory_name_array (3) char (168) unaligned,
      3 exclude_name_array (6) char (32) unaligned,

    2 metering_info,					/* last values for "mode meter" */
      3 last_clock fixed bin (71),
      3 last_vclock fixed bin (71),
      3 last_page_faults fixed bin,

    2 end_of_probe_static_info fixed bin;


dcl 1 probe_seg_info_array aligned based (probe_static_info.seg_info_offset_ptr),
    2 count fixed bin,				/* number of entries in seg_info_offset array */
    2 seg_info_offset (0 : seg_info_offset_count refer (probe_seg_info_array.count)) bit (18) aligned;

dcl  seg_info_offset_count fixed bin;			/* one less than the number of info_offsets */

dcl  probe_request_tables (probe_static_info.request_table_info.array_max_size) /* array of request table pointers */
     pointer aligned based (probe_static_info.request_table_info.array_ptr);

dcl  probe_info_directories (probe_static_info.info_directory_info.array_max_size) /* array of info directories */
     char (168) unaligned based (probe_static_info.info_directory_info.array_ptr);

dcl  probe_exclude_names (probe_static_info.exclude_name_info.array_max_size) /* array of exclude names */
     char (168) unaligned based (probe_static_info.exclude_name_info.array_ptr);

/*	END INCLUDE FILE probe_static_info.incl.pl1	*/


*/
                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group Bull including Bull HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell Bull Inc., Groupe Bull
and Bull HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture for 
managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, Bull or Bull HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by Bull HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved

*/
