
/*  BEGIN INCLUDE FILE ... cobol_perform_list.incl.pl1		 */
/*  Last modified July 17, 1974 by AEG			   */


declare 1 perform_list aligned based(  cobol_$perform_list_ptr),
	2 n fixed bin aligned,
	2 perf (0 refer(perform_list.n)) aligned,
	  3 proc_num fixed bin aligned,
	  3 priority fixed bin aligned,
	  3 target_a_segno fixed bin aligned,
	  3 target_a_offset fixed bin(24) aligned,
	  3 int_tag_no fixed bin aligned;


/*
perform_list_ptr is a pointer upon which the structure
	       perform_list is based.  It is declared in
	         cobol_.incl.pl1.

n	       is the number of COBOL procedures which
	       terminate perform ranges.

perf	       is an array of perform_list.n structures which
	       contain information about end of perform range
	       procedures.

proc_num	       is a tag number by which the end of perform
	       range procedure is identified.

priority	       is the COBOL segment number of the section con-
	       taining COBOL procedure proc_num.

target_a_segno and target_a_offset are the artificial MCOBOL seg-
	       ment number and character offset, respectively,
	       of a 36-bit variable, allocated in the COBOL 
	       data segment on a word boundary, which contains 
	       transfer address information for the alterable  
	       GO contained in COBOL procedure proc_num.

int_tag_no       is an internal tag number assigned to the in-
	       struction to which control is transferred by the
	       end of perform range alterable GO when the pro-
	       cedure which it terminates is not being performed.


						   */
/*  END INCLUDE FILE ... cobol_perform_list.incl.pl1		 */



*/
                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group Bull including Bull HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell Bull Inc., Groupe Bull
and Bull HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture for 
managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, Bull or Bull HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by Bull HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved

*/
