/*	BEGIN INCLUDE FILE ... pvt.incl.pl1 ... last modified January 1982 */


/* The physical volume table (PVT) is a wired-down table.
   It has one entry for each spindle present, be it for
   Storage System or "I/O" use.
*/

     dcl	   pvt$		      ext,
	   pvtp		      ptr;


     dcl	   1 pvt		      based (pvtp) aligned,

	     2 n_entries	      fixed bin (17),	/* number of PVT entries */
	     2 max_n_entries      fixed bin (17),	/* max number of PVT entries */
	     2 n_in_use	      fixed bin (17),	/* number of PVT entries in use */
	     2 rwun_pvtx	      fixed bin,		/* rewind_unloading pvtx */
	     2 shutdown_state     fixed bin,		/* state of previous shutdown */
	     2 esd_state	      fixed bin,		/* state of ESD, >0 iff in ESD */
	     2 prev_shutdown_state fixed bin,		/* shutdown state of previous bootload */
	     2 prev_esd_state     fixed bin,		/* ESD state of previous bootload */

	     2 time_of_bootload fixed bin (71),		/* Time of bootload */
	     2 root_lvid	      bit (36) aligned,	/* Logical volume ID of Root Logical Volume (RLV) */
	     2 root_pvid	      bit (36) aligned,	/* Physical volume ID of Root Physical Volume (RPV) */
	     2 root_pvtx	      fixed bin,		/* Index to PVTE for Root Physical Volume (RPV) */
	     2 root_vtocx	      fixed bin,		/* VTOCE index for root (>) */
	     2 disk_table_vtocx   fixed bin,		/* VTOCE index for disk table on RPV */
	     2 disk_table_uid     bit (36) aligned,	/* File System UID for disk_table */

	     2 rpvs_requested     bit (1) aligned,	/* RPVS keyword given on BOOT */
	     2 rpv_needs_salv     bit (1) aligned,	/* RPV required (not requested) salvage */
	     2 rlv_needs_salv     bit (1) aligned,	/* RLV required (not requested) salvage */
	     2 volmap_lock_wait_constant bit (36) aligned,/* For constructing wait event: OR pvte_rel into lower */
	     2 volmap_idle_wait_constant bit (36) aligned,/* For constructing wait event: OR pvte_rel into lower */
	     2 vtoc_map_lock_wait_constant bit (36) aligned, /* For constructing wait event: OR pvte_rel into lower */
	     2 n_volmap_locks_held fixed bin (17),	/* Current number of volmap locks held */
	     2 n_vtoc_map_locks_held fixed bin (17),	/* Current number of VTOC Map locks held */

	     2 last_volmap_time   fixed bin (71),	/* Time a volmap was last locked/unlocked */
	     2 last_vtoc_map_time fixed bin (71),	/* Time a VTOC Map was last locked/unlocked */
	     2 total_volmap_lock_time fixed bin (71),	/* Total time volmap's were locked (integral) */
	     2 total_vtoc_map_lock_time fixed bin (71),	/* Total time VTOC Maps were locked (integral) */

	     2 n_volmap_locks     fixed bin (35),	/* Number times a volmap was locked */
	     2 n_vtoc_map_locks   fixed bin (35),	/* Number times a vtoc_map was locked */
	     2 volmap_lock_nowait_calls fixed bin (35),	/* Number calls to lock volmap, no wait */
	     2 volmap_lock_nowait_fails fixed bin (35),	/* Number times lock failed */
	     2 volmap_lock_wait_calls fixed bin (35),	/* Number calls to lock volmap, wait */
	     2 volmap_lock_wait_fails fixed bin (35),	/* Number times lock failed */
	     2 pad (2) bit (36) aligned,

	     2 array	      fixed bin (71);	/* Array of PVTE's -- must be double-word aligned */



/*	END INCLUDE FILE ...pvt.incl.pl1 */


*/
                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group Bull including Bull HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell Bull Inc., Groupe Bull
and Bull HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture for 
managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, Bull or Bull HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by Bull HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved

*/
