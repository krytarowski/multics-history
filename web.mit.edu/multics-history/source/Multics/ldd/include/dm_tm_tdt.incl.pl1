/*  START OF:	dm_tm_tdt.incl.pl1		*/

/* Transaction Definition Table for transaction_manager_ */
/* This structure is used to reference the TDT. The process_id field for the
   i'th TDT entry, for example, is usually referenced as tm_tdt.process_id (i).
   A TDT entry is in use by a process when its process_id field is nonzero.
   An entry is reserved by using the stacq builtin to set process_id, if and
   only if it is already zero. The entry is being used for a transaction when
   tm_tdt.txn_id (i) is nonzero. The possible values of tm_tdt.state (i) are
   listed in dm_tm_states.incl.pl1. If state = 0, no operation has been
   performed yet on the transaction. */


/* HISTORY:
Designed by Matt Pierret, 01/26/82.
Coded by Steve Herbst, 07/27/82.
Modified:
08/05/82 by Steve Herbst: Added tm_tdt.operation and padded last_uid to full word.
08/05/82 by Steve Herbst: Changed creator_process_id to bit (36).
08/16/82 by Steve Herbst: Added contents of dm_tm_tdt_entry.incl.pl1.
09/09/82 by Steve Herbst: Removed in_use flag from TDT entry and rearranged fields.
09/20/82 by Steve Herbst: Removed tm_tdt.operation.
11/01/82 by Steve Herbst: Added event_channel and error_sw to tm_tdt_entry.
11/05/82 by Steve Herbst: Added suspended_sw and error_code to tm_tdt_entry.
11/11/82 by Steve Herbst: Deleted tm_tdt_entry.alloc_complete.
11/23/82 by Steve Herbst: Compacted, changed some numbers to unsigned.
12/14/82 by Steve Herbst: Added tm_tdt_entry.daemon_error_sw.
01/11/83 by Steve Herbst: Added owner_name, abandoned_sw & kill_sw to tm_tdt_entry.
01/24/83 by Steve Herbst: Replaced daemon_error_sw with daemon_adjust_count.
01/25/83 by Steve Herbst: Moved abandoned_sw from transaction portion to entry header portion.
05/13/83 by Steve Herbst: Version 3, changed all fixed bin (18) unal uns numbers to fixed bin (17) unaligned.
05/26/83 by Steve Herbst: Added rollback_count and checkpoint_id.
*/

dcl	tm_tdt_ptr	ptr;
dcl	tdt_max_count	fixed bin;

dcl TM_TDT_VERSION_3 char (8) int static options (constant) init ("TM-TDT 3");


dcl  1	tm_tdt		aligned based (tm_tdt_ptr),
      2	version char (8),				/* = "TM-TDT 3" */
      2	lock fixed bin (71),			/* (currently not used) */
      2	last_uid		bit (27) aligned,		/* last transaction uid assigned */
      2	flags,
       3	no_begins		bit (1) unaligned,		/* ON => only priv process can begin transaction */
       3	mbz1		bit (35) unaligned,
      2	entry_count	fixed bin,		/* number of slots allocated */
      2	mbz2		fixed bin,		/* for even word boundary */
      2	entry  (tdt_max_count refer (tm_tdt.entry_count))
			like tm_tdt_entry;



/* TDT entries: */

dcl	tm_tdt_entry_ptr	ptr;

dcl  1	tm_tdt_entry	aligned based (tm_tdt_entry_ptr),
      2	event_channel	fixed bin (71),		/* for communication with the process */
      2	process_id	bit (36) aligned,		/* process for which this entry is reserved */
      2	owner_name	char (32),		/* person.project of owner process */
      2	entry_flags,
       3	abandoned_sw	bit (1) unaligned,		/* ON => owner has called tm_$abandon on this entry */
       3	mbz3		bit (35) unaligned,
      2	transaction	unaligned,
       3	txn_id		bit (36) aligned,		/* unique identifier assigned at begin time */
       3	date_time_created	fixed bin (71) aligned,
       3	mode		fixed bin (17) unaligned,	/* mode specified with transaction begin */
       3	state		fixed bin (17) unaligned,	/* state transaction is currently in */
       3  error_code	fixed bin (35) aligned,	/* goes along with error_sw and error state */
       3 	checkpoint_id	fixed bin (17) unaligned,	/* identifier of the current rollback checkpoint */
       3	rollback_count	fixed bin (17) unaligned,	/* number of times bjm_$rollback has been called */
       3	daemon_adjust_count	fixed bin (17) unaligned,	/* number of times daemon has tried to adjust since user */
       3	return_idx	fixed bin (17) unaligned,	/* parent transaction, or zero */
       3	flags,
        4 dead_process_sw	bit (1) unaligned,		/* ON => treat process as dead even if it isn't yet */
        4 suspended_sw	bit (1) unaligned,		/* ON => suspended by tm_$suspend_txn */
        4 error_sw		bit (1) unaligned,		/* ON => state is one of the error states */
        4 kill_sw		bit (1) unaligned,		/* ON => being processed by tm_$kill */
        4	mbz4		bit (29) unaligned,
       3	post_commit_flags,
        4 (fmgr,
	 bjmgr,
	 ajmgr)	 	 bit (1) unaligned,
       3	mbz4		fixed bin;


/*  END OF:	dm_tm_tdt.incl.pl1		*/


*/
                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group Bull including Bull HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell Bull Inc., Groupe Bull
and Bull HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture for 
managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, Bull or Bull HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by Bull HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved

*/
