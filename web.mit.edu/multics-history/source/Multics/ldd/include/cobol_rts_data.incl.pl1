
/* EXTERNAL_NAMES */

dcl	iox_$user_input ptr ext;


dcl	cobol_error_	entry(fixed bin,fixed bin(35),fixed bin,fixed bin,char(*),ptr);
dcl	cobol_error_$use	entry(fixed bin,fixed bin(35),fixed bin,fixed bin,char(*),ptr);
dcl	cobol_control_$cobol_rts_control_ entry(ptr);

dcl	sort_$initiate	entry(char(*),ptr,ptr,char(*),float bin(27),fixed bin(35));
dcl	sort_$noexit	entry ext;


dcl	error_table_$end_of_info	fixed bin(35) ext;
dcl	error_table_$key_duplication	fixed bin(35) ext;
dcl	error_table_$long_record	fixed bin(35) ext;
dcl	error_table_$short_record	fixed bin(35) ext;
dcl	error_table_$no_record fixed bin(35) external;
dcl	error_table_$key_order fixed bin(35) external;
dcl	error_table_$incompatible_attach fixed bin(35) external;
dcl	error_table_$noentry fixed bin(35) external;
dcl 	error_table_$file_busy fixed bin(35) external;
dcl 	error_table_$no_operation fixed bin(35) external;
dcl	error_table_$bad_file fixed bin(35) external;
dcl	error_table_$not_detached fixed bin(35) static ext;
dcl	error_table_$not_open fixed bin(35) static ext;
dcl	error_table_$not_closed fixed bin(35) static ext;
dcl	error_table_$no_key fixed bin(35) static ext;

dcl	sort_$return	entry(ptr,fixed bin(21),fixed bin(35));

dcl	sort_$terminate	entry(fixed bin(35));

dcl	sort_$commence	entry(fixed bin(35));

dcl	cu_$cl	entry;

dcl	cobol_stop_run_	entry(ptr,fixed bin,fixed bin,fixed bin),
	signal_		entry(char(*),ptr,ptr);
declare iox_$attach_ptr entry(ptr,char(*),ptr,fixed bin(35));
declare iox_$attach_name entry(char(*),ptr,char(*),ptr,fixed bin(35));
declare iox_$close entry(ptr,fixed bin(35));
declare iox_$control entry(ptr,char(*),ptr,fixed bin(35));
declare iox_$delete_record entry(ptr,fixed bin(35));
declare iox_$detach_iocb entry(ptr,fixed bin(35));
declare iox_$find_iocb entry(char(*),ptr,fixed bin(35));
declare iox_$get_chars entry(ptr,ptr,fixed bin(21),fixed bin(21),fixed bin(35));
declare iox_$get_line entry(ptr,ptr,fixed bin(21),fixed bin(21),fixed bin(35));
declare iox_$modes entry(ptr,char(*),char(*),fixed bin(35));
declare iox_$move_attach entry(ptr,ptr,fixed bin(35));
declare iox_$open entry(ptr,fixed bin,bit(1) aligned,fixed bin(35));
declare iox_$position entry(ptr,fixed bin,fixed bin(21),fixed bin(35));
declare iox_$put_chars entry(ptr,ptr,fixed bin(21),fixed bin(35));
declare iox_$read_key entry(ptr,char(256) varying,fixed bin(21),fixed bin(35));
declare iox_$read_length entry(ptr,fixed bin(21),fixed bin(35));
declare iox_$read_record entry(ptr,ptr,fixed bin(21),fixed bin(21),fixed bin(35));
declare iox_$rewrite_record entry(ptr,ptr,fixed bin(21),fixed bin(35));
declare iox_$seek_key entry(ptr,char(256) varying,fixed bin(21),fixed bin(35));
declare iox_$write_record entry(ptr,ptr,fixed bin(21),fixed bin(35));
dcl	iox_$attach_iocb entry(ptr,char(*),fixed bin(35));

dcl	cobol_control_$cancel	entry(char(*),fixed bin,fixed bin,fixed bin);


dcl	clock_	entry returns(fixed bin(71)),
	date_time_	entry(fixed bin(71),char(*)),
	decode_clock_value_	entry(fixed bin(71),fixed bin,fixed bin,fixed bin,fixed bin(71),
		fixed bin,char(3) aligned);

dcl	cobol_su_$tally	entry(ptr,fixed bin),
	cobol_su_$replace	entry(ptr);

dcl	hcs_$terminate_name	entry(char(*),fixed bin(35));
dcl	get_pdir_	entry returns(char(168));
dcl	hcs_$make_seg	entry(char(*),char(*),char(*),fixed bin(5),ptr,fixed bin(35));
dcl	hcs_$truncate_seg	entry(ptr,fixed bin(18),fixed bin(35));

dcl	cobol_mcs_$receive	entry(ptr,fixed bin,ptr,fixed bin,fixed bin(35)),
	cobol_mcs_$receive_wait	entry(ptr,fixed bin,ptr,fixed bin,fixed bin(35));

dcl	cmcs_error_table_$no_message	fixed bin(35) ext;

dcl	cobol_mcs_$accept	entry(ptr,fixed bin(35));

dcl	cobol_mcs_$purge	entry(ptr,fixed bin(35));

dcl	cobol_mcs_$send	entry(ptr,ptr,char(4),char(1),bit(36),fixed bin(35));

dcl	cobol_mcs_$enable_input_terminal	entry(ptr,char(*),fixed bin(35)),
	cobol_mcs_$enable_input_queue	entry(ptr,char(*),fixed bin(35)),
	cobol_mcs_$enable_output	entry(ptr,char(*),fixed bin(35));


dcl	cobol_mcs_$disable_input_terminal	entry(ptr,char(*),fixed bin(35)),
	cobol_mcs_$disable_input_queue	entry(ptr,char(*),fixed bin(35)),
	cobol_mcs_$disable_output	entry(ptr,char(*),fixed bin(35));

/* BUILTIN FUNCTIONS */

dcl	(substr,mod,binary,fixed,addr,addrel,rel,length,
	string,unspec,null,index)		builtin;

%include cobol_stack_frame;
%include cobol_control;
%include cobol_fixed_static;
%include cobol_fsb_type_1;
%include cobol_fsbskel;
%include cobol_file_desc_1;
%include rs_info;
%include ak_info;


*/
                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group Bull including Bull HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell Bull Inc., Groupe Bull
and Bull HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture for 
managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, Bull or Bull HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by Bull HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved

*/
