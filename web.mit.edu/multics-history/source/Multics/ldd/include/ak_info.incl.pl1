/* ak_info -- include file for info structures used by the following vfile_
   control orders: "add_key", "delete_key", "get_key", and "reassign_key".
   Created by M. Asherman 3/23/76
   Modified 5/13/77 to add separate gk_info structure */

     dcl	   1 ak_info	      based (ak_info_ptr),
	     2 header	      like ak_header,
	     2 key	      char (ak_key_len refer (ak_info.header.key_len));

     dcl	   1 ak_header	      based (ak_info_ptr),
	     2 flags	      aligned,
	       3 input_key	      bit (1) unal,		/* set if key is input arg */
	       3 input_desc	      bit (1) unal,		/* set if descriptor is an input arg */
	       3 mbz	      bit (34) unal,	/* not used for the present */
	     2 descrip	      fixed (35),		/* record designator */
	     2 key_len	      fixed;

     dcl	   ak_info_ptr	      ptr;
     dcl	   ak_key_len	      fixed;


     dcl	   1 rk_info	      based (rk_info_ptr),
	     2 header	      like rk_header,
	     2 key	      char (rk_key_len refer (rk_info.header.key_len));

     dcl	   1 rk_header	      based (rk_info_ptr),
	     2 flags	      aligned,
	       3 input_key	      bit (1) unal,		/* same as above */
	       3 input_old_desc   bit (1) unal,		/* set if specified entry has initial descrip
						   given by old_descrip */
	       3 input_new_desc   bit (1) unal,		/* set if new val for descrip is input in this struc */
	       3 mbz	      bit (33) unal,
	     2 old_descrip	      fixed (35),		/* used if first flag is set */
	     2 new_descrip	      fixed (35),		/* used only if second flag is set */
	     2 key_len	      fixed;

     dcl	   rk_info_ptr	      ptr;
     dcl	   rk_key_len	      fixed;


     dcl	   1 gk_info	      based (gk_info_ptr),	/* structure for get_key order */
	     2 header	      like gk_header,
	     2 key	      char (gk_key_len refer (gk_info.header.key_len));
						/* may be Input as well as Output */

     dcl	   1 gk_header	      based (gk_info_ptr),
	     2 flags	      aligned,
	       3 input_key	      bit (1) unal,		/* if set, use key in this structure */
	       3 input_desc	      bit (1) unal,		/* if set, descriptor given in this structure */
	       3 desc_code	      fixed (2) unal,	/* 0=any, 1=current -- applies when input_desc="0"b */
	       3 position_specification
			      unal,
	         4 current	      bit (1) unal,		/* otherwise next */
	         4 rel_type	      fixed (2) unal,	/* as in seek_head, if input_key = "1"b */
	         4 head_size      fixed bin (9) unsigned unaligned,
						/* size of head for initial seek */
	       3 reset_pos	      bit (1) unal,		/* if set, final position unchanged by this operation */
	       3 pad	      bit (8) unal,
	       3 version	      fixed (8) unal,
	     2 descrip	      fixed (35),		/* Output, except when input_desc="1"b */
	     2 key_len	      fixed;		/* Input when input_key="1"b, also Output in all cases */

     dcl	   gk_info_ptr	      ptr;
     dcl	   gk_key_len	      fixed;

     dcl	   gk_info_version_0      internal static fixed options (constant) init (0);

/* end ak_info.incl.pl1 */


*/
                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group Bull including Bull HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell Bull Inc., Groupe Bull
and Bull HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture for 
managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, Bull or Bull HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by Bull HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved

*/
