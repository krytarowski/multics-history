/*  BEGIN:   sc_subsystem_info_.incl.pl1		  *  *  *  *  *  */

/* format:style3,idind30 */

/* Created  1984-10-24  BIM */
/* Modified 1985-01-07, BIM: access control flags that track admin and X */
/* Modified 1985-02-18, E. Swenson to save away abort_line procedure. */


/****^  HISTORY COMMENTS:
  1) change(87-02-17,GDixon), approve(87-07-03,MCR7680),
     audit(87-07-13,Parisek), install(87-08-04,MR12.1-1056):
     Correct formatting problems.  Add sc_subsystem_info.flags.dont_mask_calls
     switch.
  2) change(87-07-03,GDixon), approve(87-07-03,MCR7680),
     audit(87-07-13,Parisek), install(87-08-04,MR12.1-1056):
     Removed dont_mask_calls flag.  It is no longer needed to correctly perform
     masking on a per-request basis.
                                                   END HISTORY COMMENTS */


declare	sc_subsystem_info_ptr	pointer;
declare	1 sc_subsystem_info		aligned based (sc_subsystem_info_ptr),
	  2 restriction_flags	bit (36) aligned,	/* copied from mc atep or fabricated */
	  2 flags			aligned,
	    3 no_real_tty		bit (1) unaligned,	/* for sc_admin_command_ */
	    3 print_ready		bit (1) unal,	/* on for all except the system console,	*/
						/*  instructs sc_process_command_line_ to deal	*/
						/*  with the prompt				*/
	    3 the_system_console	bit (1) unal,	/* syserr messages are printed here (but console	*/
						/*  recover doesn't try to fix this) copied here	*/
						/*  from the mc_ate to save other looking in there*/
	    3 printer_offed		bit (1) unal,	/* suppress logging */
	    3 pad			bit (32) unaligned,
	  2 source_name		char (32) unaligned,
	  2 area_ptr		pointer,
	  2 mc_atep		pointer,		/* needed to play with attachments */
	  2 real_iocb		pointer,		/* for sc_signal_io_handler_ */
	  2 hangup_entry		entry (pointer) variable,
						/* called on io_no_permission. */
	  2 real_execute_line	entry (ptr, ptr, fixed bin (21), fixed bin (35)),
	  2 real_locate_request	entry (ptr, char (*), ptr, fixed bin (35)),
	  2 access_control_name	char (32) unaligned,
	  2 real_invoke_request	entry,		/* since MR11 ssu_ lacks the ability to	abort a	*/
						/*  single request, we have an invoke_request that*/
						/*  handles a condition to unwind the request	*/
	  2 abort_request_label	label,		/* go here (nonlocally) to unwind a single request */
	  2 real_abort_line		entry options (variable);

declare	sc_ss_area		area based (sc_subsystem_info.area_ptr);

/* The following defines the user flags for the request table. */

declare	sc_rf_ptr			pointer;
declare	1 sc_request_flags		unaligned based (sc_rf_ptr),
	  2 dont_parse_arguments	bit,		/* reply, intercom */
	  2 obsolete		bit,		/* warn opr to not use it */
	  2 dont_mask_calls		bit,		/* this runs without masking ev calls */
	  2 requires_as		bit,		/* not before AS */
	  2 requires_no_as		bit,		/* only before AS */
	  2 complete_disks_first	bit,		/* try to mount disks */
	  2 no_login_needed		bit,		/* sign_on */
	  2 pad			bit (5),
	  2 restriction_type	fixed bin (6) unsigned;
						/* index into restriction flag string */


/*  END OF:  sc_subsystem_info_.incl.pl1		  *  *  *  *  *  */


*/
                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group Bull including Bull HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell Bull Inc., Groupe Bull
and Bull HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture for 
managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, Bull or Bull HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by Bull HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved

*/
