/* BEGIN INCLUDE FILE ... mseg_operation.incl.pl1 */

/* format: style3,idind30,linecom */

/**** Created 1985-04-16, BIM: from Pandolf's  mseg_access_operation */

/**** NOTES:
      The caller of mseg_ must set mseg_operation.access_operation to record
      the type of access checking it has performed and which mseg_ should
      perform when needed (i.e., for those entrypoints which operate on
      messages like mseg_$read_message).

      mseg_operation.operation is reserved explicitly for use by mseg_ and
      its underlying modules.

      You must also include entry_access_info, mseg_message_info, and
      mbx_wakeup_state along with this include file. */

dcl	mseg_operation_ptr		pointer;
dcl	MSEG_OPERATION_VERSION_1	fixed bin internal static options (constant) init (1);
dcl	MSEG_TYPE_MBX		fixed bin init (1) internal static options (constant);
dcl	MSEG_TYPE_MS		fixed bin init (2) internal static options (constant);

dcl	1 mseg_operation		based (mseg_operation_ptr) aligned,
	  2 version		fixed binary,	/* current version is MSEG_OPERATION_VERSION_1 */
	  2 type			fixed binary,	/* MBX or MS */
	  2 access_operation	fixed binary,	/* type of access checks required for the operation */
	  2 operation		bit (36) aligned,	/* for use by mseg_ and underlying modules */
	  2 caller		aligned,		/* always collected in gate target */
	    3 validation_level	fixed bin (3),
	    3 privileges		bit (18) aligned,	/* factored for speed */
	    3 pad_align_double	fixed bin (71),	/* just to force alignment */
	    3 authorization		bit (72) aligned,	/* must be 2word aligned */
	    3 max_authorization	bit (72) aligned,
	    3 group_id		char (32) unaligned,
	  2 flags			aligned,
	    3 mseg_pathname_valid	bit (1) unaligned,
	    3 mseg_ptr_valid	bit (1) unaligned,
	    3 mseg_index_valid	bit (1) unaligned,
	    3 access_info_valid	bit (1) unaligned,
	    3 md_ptr_valid		bit (1) unaligned,
	    3 message_info_valid	bit (1) unaligned,	/* note -- for some operations not all fields are used */
	    3 wakeup_state_valid	bit (1) unaligned,
	    3 suppress_access_checks	bit (1) unaligned,	/* set by privileged interfaces, suppresses ALL access checking */
	    3 call_admin_gate	bit (1) unaligned,	/* we is in ring 1, boss */
	    3 only_own_access	bit (1) unaligned,	/* the user had o rather than r/d */
	    3 add_message_info_all_valid
				bit (1) unaligned,	/* Believe ALL the fields in message info on an add */
	    3 pad			bit (24) unaligned,
	  2 dir_name		char (168) unaligned,
	  2 entryname		char (32) unaligned,
	  2 mseg_ptr		pointer,
	  2 md_ptr		pointer,		/* message descriptor */
	  2 mseg_index		fixed bin,
	  2 access_info		aligned like entry_access_info,
	  2 message_info		aligned like mseg_message_info,
	  2 wakeup_state		aligned like mseg_wakeup_state;

/* END INCLUDE FILE ... mseg_operation.incl.pl1 */


*/
                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group Bull including Bull HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell Bull Inc., Groupe Bull
and Bull HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture for 
managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, Bull or Bull HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by Bull HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved

*/
