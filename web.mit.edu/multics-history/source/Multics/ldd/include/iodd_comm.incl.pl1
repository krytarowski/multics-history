/* ..... BEGIN INCLUDE FILE  ...  iodd_comm.incl.pl1  ..... */

/* structure used by a driver to send a command/request to the coordinator */

dcl  comm_ptr ptr;

dcl 1 iodd_comm aligned based (comm_ptr),
     2 ack_chan fixed bin (71),			/* IPC event channel for coord to return status code */
     2 type fixed bin,				/* command/request type code
						   0 = reserved [done & wait (direct - special ev chan)]
						   1 = reserved [done & next   (also direct)]
						   2 = restart - single or series
						   3 = save - single or series
						   4 = reserved [driver logout (direct)]
						   5 = reserved [get cmd ev chan (direct)]
						   6 = next_req - run a given request next
						   7 = restart_q - back to first messages in my queues
						*/
     2 type_ext bit (36),				/* defined by each command type */
     2 minor_idx fixed bin,				/* index of minor device sending this request */
     2 dvc_idx fixed bin,				/* index of associated device class */
     2 request_no fixed bin,				/* request number for save/restart */
     2 queue_no fixed bin,				/* specified queue for next_req */
     2 user_id char (32),				/* sender id for next_req */
     2 req_id char (24),				/* request id from -id arg */
     2 pad_space (3) fixed bin,
     2 data_len fixed bin,				/* length of following string */
     2 data char (256 refer (iodd_comm.data_len));		/* data for command type if needed */

dcl restart fixed bin int static options (constant) init (2);
dcl save fixed bin int static options (constant) init (3);
dcl next_req fixed bin int static options (constant) init (6);
dcl restart_q fixed bin int static options (constant) init (7);


/* ..... END INCLUDE FILE  ...  iodd_comm.incl.pl1  ..... */


*/
                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group Bull including Bull HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell Bull Inc., Groupe Bull
and Bull HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture for 
managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, Bull or Bull HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by Bull HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved

*/
