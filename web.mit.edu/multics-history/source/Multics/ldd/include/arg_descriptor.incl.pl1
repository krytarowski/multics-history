/* BEGIN INCLUDE FILE ... arg_descriptor.incl.pl1

   James R. Davis 1 Mar 79 */
/* Modified June 83 JMAthane for extended arg descriptor format */

     dcl	   1 arg_descriptor	      based (arg_descriptor_ptr) aligned,
	     2 flag	      bit (1) unal,
	     2 type	      fixed bin (6) unsigned unal,
	     2 packed	      bit (1) unal,
	     2 number_dims	      fixed bin (4) unsigned unal,
	     2 size	      fixed bin (24) unsigned unal;

     dcl	   1 fixed_arg_descriptor based (arg_descriptor_ptr) aligned,
	     2 flag	      bit (1) unal,
	     2 type	      fixed bin (6) unsigned unal,
	     2 packed	      bit (1) unal,
	     2 number_dims	      fixed bin (4) unsigned unal,
	     2 scale	      fixed bin (11) unal,
	     2 precision	      fixed bin (12) unsigned unal;

     dcl	   1 extended_arg_descriptor based (arg_descriptor_ptr) aligned,
	     2 flag	      bit (1) unal,		/* = "1"b */
	     2 type	      fixed bin (6) unsigned unal, /* = 58 */
	     2 packed	      bit (1) unal,		/* significant if number_dims ^= 0 */
	     2 number_dims	      fixed (4) unsigned unal,/* number of variable dimensions */
	     2 size	      bit (24) unal,
	     2 dims	      (0 refer (extended_arg_descriptor.number_dims)), /* part referenced by called generated code */
	       3 low	      fixed bin (35),
	       3 high	      fixed bin (35),
	       3 multiplier	      fixed bin (35),	/* in bits if packed, in words if not */
	     2 real_type	      fixed bin (18) unsigned unal,
	     2 type_offset	      fixed bin (18) unsigned unal; /* offset rel to symbol tree to symbol node for type, if any */

     dcl	   arg_descriptor_ptr     ptr;

     dcl	   extended_arg_type      fixed bin init (58);

/* END INCLUDE file .... arg_descriptor.incl.pl1  */


*/
                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group Bull including Bull HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell Bull Inc., Groupe Bull
and Bull HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture for 
managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, Bull or Bull HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by Bull HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved

*/
