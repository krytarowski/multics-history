/* BEGIN INCLUDE FILE gtss_prgdes_.incl.pl1 */
/*
  Created: Kepner  04/12/78
  Modified:  Ron Barstad  82-08-11  to change size of prgdes array for 4js3
  Modified:  Ron Barstad  83-05-19  change size of prgdes array for update 7
*/

/*
   "     This  structure  describes  the  timesharing  subsystem   program
   "     descriptors.
   "
   "     Anywhere  fixed bin(17) unal appears it should be noted that GCOS
   "     can potentially make use of all 18 bits  and  caution  should  be
   "     exercised.   These  items  should  be  changed  to  fixed bin(18)
   "     usigned unal when this feature is added to the PL/I compiler.
   "
   "     ss_name  subsystem name
   "
   "     program_size  actual program size to be used in execution.
   "
   "     load_size  the size remaining when all leading and trailing zeros
   "               have been eliminated. This is used to reduce  the  size
   "               of the original copy of the program.
   "
   "     entry_point  address relative to zero  that  contains  the  first
   "               executable instruction.
   "
   "     parameters  flags defining attributes of the subsystem. The  flag
   "               bits  are defined below. Assume bits are numbered 1-18.
   "		 1	cache
   "		 2	.BSCF
   "		 3	special size request
   "		 4	drl t.exec permission.
   "		 5	drl t.cmov permission
   "		 6	special product offering.
   "		 7	high use program file,  #p
   "		 8	special file switch (perm/temp) allowed.
   "		 9	ss not callable at system level.
   "		10	subsystem allowed use of get-specific.
   "		11	execute permission allowed for file i/o.
   "		12	subsystem can read system master catalog.
   "		13	basic or databasic
   "		14	subsystem uses common command list.
   "		15	low use subsystem (# q file)
   "		16	subsystem must be patched when loaded.
   "		17	master subsystem.
   "		18	privileged subsystem.
   "
   "	seek_address  the word offset in the multisegment file
   "		component where the object code for this subsystem is
   "		stored.
   "
   "     initial_load_address  The address of the first  nonzero  word  in
   "               the program.
   "
   "     cmd_lang_offset   The  word  offset   into   gtss_prgdes_ext_$primitives
   "               (suitable  for use with addrel) of the command language
   "               list for this subsystem.
   "
   "     cmd_lang_len  Number of command names for this subsystem.
   "
   "     statistics
   "
   "     bci_catalog_name  The GECALL name for the subsystem.
   "
   "	library	an integer which indicates which multisegment file
   "		contains the object code for this subsystem.
   "
   "	component	an integer which indicates which component of the
   "		multisegment file contains the object code for this
   "		subsystem.
   "
   "     ss_name_len  The number of nonblank characters in the  subsystem
   "		name.
*/

dcl 1 gtss_prgdes_ext_$prgdes (302) aligned ext,
    2 ss_name char (4) aligned,
    2 program_size fixed bin (17) unal,
    2 load_size fixed bin (17) unal,
    2 entry_point fixed bin (17) unal,
    2 parameters bit (18) unal,
    2 seek_address bit(18) unal,
    2 initial_load_address fixed bin (17) unal,
    2 cmd_lang_offset fixed bin (17) unal,
    2 cmd_lang_len fixed bin (17) unal,
    2 statistics,
      3 calls fixed bin (17) unal,
      3 loads fixed bin (17) unal,
      3 filler (3) bit (36) unal,
    2 bci_catalog_name bit (36) aligned,
    2 library fixed bin (17) unal,
    2 component fixed bin (17) unal,
    2 ss_name_len fixed bin (17) aligned;



/* This overlay structure is used to pass the user visible portion
   of the program descriptor to the subsystem via DRL PRGDES. */
dcl 1 prgdes_ov (302) aligned based (addr (gtss_prgdes_ext_$prgdes)),
    2 first_9_words char (36),			/* user visible portion */
    2 filler char (12);

/*   END INCLUDE FILE gtss_prgdes_.incl.pl1 */


*/
                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group Bull including Bull HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell Bull Inc., Groupe Bull
and Bull HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture for 
managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, Bull or Bull HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by Bull HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved

*/
