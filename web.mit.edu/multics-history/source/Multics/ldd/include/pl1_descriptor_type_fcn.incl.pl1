/* BEGIN INCLUDE FILE ... pl1_descriptor_type_fcn.incl.pl1 */

/* Program to convert symbol_node information into a descriptor type code.
   Written 780614 by PG
	Modified: 25 Apr 1979 by PCK to implement 4-bit decimal
*/

pl1_descriptor_type:
     procedure (bv_type, bv_prec) returns (fixed bin);

/* parameters */

dcl (	bv_type bit (36),
	bv_prec fixed bin (24)) parameter;

/* automatic */

dcl	prec fixed bin (24),
	dtype fixed bin;

/* builtins */

dcl	string builtin;

/* include files */

%include pl1_symbol_type;
%include std_descriptor_types;
%include system;

/* program */

	string (type) = bv_type;
	prec = bv_prec;

	if type.structure
	then dtype = structure_dtype;
	else

	if type.real
	then if type.fixed
	     then if type.binary
		then if type.unsigned
		     then if prec <= max_p_fix_bin_1
			then dtype = real_fix_bin_1_uns_dtype;
			else dtype = real_fix_bin_2_uns_dtype;
		     else if prec <= max_p_fix_bin_1
			then dtype = real_fix_bin_1_dtype;
			else dtype = real_fix_bin_2_dtype;
		else if type.unaligned
		     then dtype = real_fix_dec_4bit_bytealigned_ls_dtype;
		     else dtype = real_fix_dec_9bit_ls_dtype;
	     else if type.binary
		then if prec <= max_p_flt_bin_1
		     then dtype = real_flt_bin_1_dtype;
		     else dtype = real_flt_bin_2_dtype;
		else if type.unaligned
		     then dtype = real_flt_dec_4bit_bytealigned_dtype;
		     else dtype = real_flt_dec_9bit_dtype;
	else

	if type.complex
	then if type.fixed
	     then if type.binary
		then if prec <= max_p_fix_bin_1
		     then dtype = cplx_fix_bin_1_dtype;
		     else dtype = cplx_fix_bin_2_dtype;
		else if type.unaligned
		     then dtype = cplx_fix_dec_4bit_bytealigned_ls_dtype;
		     else dtype = cplx_fix_dec_9bit_ls_dtype;
	     else if type.binary
		then if prec <= max_p_flt_bin_1
		     then dtype = cplx_flt_bin_1_dtype;
		     else dtype = cplx_flt_bin_2_dtype;
		else if type.unaligned
		     then dtype = cplx_flt_dec_4bit_bytealigned_dtype;
		     else dtype = cplx_flt_dec_9bit_dtype;
	else

	if type.bit
	then if type.varying
	     then dtype = varying_bit_dtype;
	     else dtype = bit_dtype;
	else

	if type.char
	then if type.varying
	     then dtype = varying_char_dtype;
	     else dtype = char_dtype;
	else

	if type.ptr
	then dtype = pointer_dtype;
	else

	if type.offset
	then dtype = offset_dtype;
	else

	if type.area
	then dtype = area_dtype;
	else

	if type.label
	then dtype = label_dtype;
	else

	if type.entry
	then dtype = entry_dtype;
	else

	if type.file
	then dtype = file_dtype;
	else

	if type.picture
	then dtype = char_dtype;
	else dtype = 0;

	return (dtype);

     end /* pl1_descriptor_type */;

/* END INCLUDE FILE ... pl1_descriptor_type_fcn.incl.pl1 */


*/
                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group Bull including Bull HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell Bull Inc., Groupe Bull
and Bull HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture for 
managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, Bull or Bull HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by Bull HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved

*/
