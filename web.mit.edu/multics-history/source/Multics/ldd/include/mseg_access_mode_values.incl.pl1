/* BEGIN INCLUDE FILE ... mseg_access_mode_values.incl.pl1 */


/****^  HISTORY COMMENTS:
  1) change(85-04-01,Palter), approve(), audit(), install():
     Initial coding.
  2) change(87-04-08,GDixon), approve(87-07-14,MCR7706),
     audit(87-07-14,Parisek), install(87-08-04,MR12.1-1056):
     Add mseg queue access values for queue users and administrators.
                                                   END HISTORY COMMENTS */


/* format: style3,linecom */

/* Definition of the extended access modes implemented by the message segment primitives (mseg_) */

declare	(
     /*** The individual modes */
	MSEG_A_ACCESS	initial ("400000000000"b3),	/* add a message */
	MSEG_D_ACCESS	initial ("200000000000"b3),	/* delete/update any message, accept wakeups, etc. */
	MSEG_R_ACCESS	initial ("100000000000"b3),	/* read any message */
	MSEG_O_ACCESS	initial ("040000000000"b3),	/* read/delete your own messages */
	MSEG_S_ACCESS	initial ("020000000000"b3),	/* get the message count, salvaged flag, etc. */
	MSEG_W_ACCESS	initial ("010000000000"b3),	/* send a normal wakeup when adding a message */
	MSEG_U_ACCESS	initial ("004000000000"b3)	/* send an urgent wakeup when adding a message */
	)		bit (36) aligned static options (constant);

declare	(
     /*** Common combinations of the modes */
	MSEG_NULL_ACCESS	initial ("000000000000"b3),	/* no access at all */
	MSEG_FULL_ACCESS	initial ("774000000000"b3)	/* all possible access */
	)		bit (36) aligned static options (constant);

/* format: idind40 */

declare	(
     /*** Initial extended access modes of a newly created mailbox -- The following constants yield the following ACL:
	     adrosw  Person_id.*.*  (or anonymous.Project_id.*)
	     aow	   *.SysDaemon.*
	     aow	   *.*.*		*/
	MSEG_MBX_INITIAL_ACL		dimension (3) static options (constant)
					initial ("770000000000"b3, "450000000000"b3, "450000000000"b3),
	MSEG_MBX_CREATOR_INITIAL_ACCESS	defined (MSEG_MBX_INITIAL_ACL (1)),
	MSEG_MBX_SYSDAEMON_INITIAL_ACCESS	defined (MSEG_MBX_INITIAL_ACL (2)),
	MSEG_MBX_OTHERS_INITIAL_ACCESS	defined (MSEG_MBX_INITIAL_ACL (3))
	)				bit (36) aligned;

declare	(
     /*** Initial extended access modes of a newly created queue message segment -- The following constants yield the
	following ACL:
	     adros   Person_id.*.*  (or anonymous.Project_id.*)
	     ao	   *.SysDaemon.*
	     null	   *.*.*		*/
	MSEG_QUEUE_INITIAL_ACL		dimension (3) static options (constant)
					initial ("760000000000"b3, "440000000000"b3, "000000000000"b3),
	MSEG_QUEUE_CREATOR_INITIAL_ACCESS	defined (MSEG_QUEUE_INITIAL_ACL (1)),
	MSEG_QUEUE_SYSDAEMON_INITIAL_ACCESS	defined (MSEG_QUEUE_INITIAL_ACL (2)),
	MSEG_QUEUE_OTHERS_INITIAL_ACCESS	defined (MSEG_QUEUE_INITIAL_ACL (3))
	)				bit (36) aligned;

declare   (
     /*** Extended access modes of queue segment users and administrators:
	    ao	Queue_User.*.*
	    aros  Queue_Admin.*.*     */
	MSEG_QUEUE_USER_ACCESS		initial ("440000000000"b3),
	MSEG_QUEUE_ADMIN_ACCESS		initial ("560000000000"b3))
					bit (36) aligned int static options(constant);

/* END INCLUDE FILE ... mseg_access_mode_values.incl.pl1 */


*/
                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group Bull including Bull HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell Bull Inc., Groupe Bull
and Bull HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture for 
managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, Bull or Bull HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by Bull HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved

*/
