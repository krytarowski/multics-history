/* ====== BEGIN INCLUDE SEGMENT	apl_bead_format.incl.pl1 ================================== */

declare 1 general_bead  		aligned based,	/* The Venerable Bead		*/
	2 type 			unaligned,
	  3 bead_type		unaligned,
	    4 operator		bit (1),		/* ON if operator bead		*/
	    4 symbol		bit (1),		/* ON if symbol bead		*/
	    4 value		bit (1),		/* ON if value bead			*/
	    4 function		bit (1),		/* ON if function bead		*/
	    4 group		bit (1),		/* ON if group bead			*/
	    4 label		bit (1),		/* ON if label bead			*/
	    4 shared_variable	bit (1),		/* ON if shared variable bead 	*/
	    4 lexed_function	bit (1),		/* ON if lexed function bead  	*/
	  3 data_type		unaligned,
	    4 list_value		bit (1),		/* ON if a list value bead		*/
	    4 character_value	bit (1),		/* ON if a character value bead	*/
	    4 numeric_value		bit (1),		/* ON if a numeric value bead		*/
	    4 integral_value	bit (1),		/* ON if an integral value bead	*/
	    4 zero_or_one_value	bit (1),		/* ON if a boolean value bead		*/
	    4 complex_value		bit (1),		/* ON if a complex, numeric value bead   */
	  3 unused_bits		bit (4) unaligned,	/* pad to 18 bits (for future use)	*/
	2 size			bit (18) unaligned,	/* Number of words this bead occupies
						   (used by bead storage manager)	*/
	2 reference_count 		fixed binary (29);	/* Number of pointers which point
						   to this bead (used by bead manager)	*/


/* constant strings for initing type field in various beads */

declare (
	operator_type		init("100000000000000000"b),
	symbol_type		init("010000000000000000"b),
    	value_type		init("001000000000000000"b),
	function_type		init("000100000000000000"b),
	group_type		init("000010000000000000"b),
	label_type		init("001001000011000000"b),
	shared_variable_type	init("001000100000000000"b),
	lexed_function_type		init("000000010000000000"b),

	list_value_type		init("000000001000000000"b),
	character_value_type 	init("001000000100000000"b),
	numeric_value_type		init("001000000010000000"b),
	integral_value_type		init("001000000011000000"b),
	zero_or_one_value_type	init("001000000011100000"b),
	complex_value_type		init("001000000000010000"b),

	not_integer_mask		init("111111111110011111"b),		/* to clear integral, zero_or_one bits */
	not_zero_or_one_mask	init("111111111111011111"b)		/* to clear zero_or_one bit */
        ) bit(18) internal static;

/* ------ END INCLUDE SEGMENT		apl_bead_format.incl.pl1 ---------------------------------- */


*/
                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group Bull including Bull HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell Bull Inc., Groupe Bull
and Bull HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture for 
managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, Bull or Bull HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by Bull HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved

*/
