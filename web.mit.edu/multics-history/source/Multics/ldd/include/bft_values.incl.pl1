/*  BEGIN INCLUDE FILE: bft_values.incl.pl1		  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * 	*/


/****^  HISTORY COMMENTS:
  1) change(87-07-15,Flegel), approve(87-07-15,MCR7580),
     audit(87-07-30,RBarstad), install(87-08-07,MR12.1-1075):
     Created.
  2) change(87-10-23,Flegel), approve(87-10-23,MCR7787),
     audit(88-01-27,RWaters), install(88-02-24,MR12.2-1028):
     Converted to use with new queueing strategy;  added data_block structure;
                                                   END HISTORY COMMENTS */

/* format: style4,indattr,ifthen,^indcomtxt,thendo,^indproc,^indblkcom,initcol1,declareind8,dclind4,struclvlind3,comcol55 */

dcl bft_minor_$add_to_fetch_queue fixed bin int static options (constant) init (64);
dcl bft_minor_$add_to_store_queue fixed bin int static options (constant) init (65);
dcl bft_minor_$check_file_length fixed bin int static options (constant) init (66);
dcl bft_minor_$initiate_fetch fixed bin int static options (constant) init (67);
dcl bft_minor_$bft_shut_down fixed bin int static options (constant) init (68);
dcl bft_minor_$position_file_pointer fixed bin int static options (constant) init (69);
dcl bft_minor_$receive_data fixed bin int static options (constant) init (70);
dcl bft_minor_$receive_eof fixed bin int static options (constant) init (71);
dcl bft_minor_$recover_fetch fixed bin int static options (constant) init (72);
dcl bft_minor_$recover_store fixed bin int static options (constant) init (73);
dcl bft_minor_$read_error fixed bin int static options (constant) init (74);
dcl bft_minor_$initiate_store fixed bin int static options (constant) init (75);
dcl bft_minor_$write_error fixed bin int static options (constant) init (76);
dcl bft_minor_$send_data   fixed bin int static options (constant) init (77);
dcl bft_minor_$cancel_request fixed bin int static options (constant) init (78);
dcl bft_minor_$expand_pc_path fixed bin int static options (constant) init (80);
dcl bft_minor_$full_pc_path fixed bin int static options (constant) init (81);


dcl BFT_MINOR_CAPS	       fixed bin int static options (constant) init (13);
dcl BFT_INBUFFER_SIZE      fixed bin int static options (constant) init (128);
dcl BFT_OUTBUFFER_SIZE     fixed bin int static options (constant) init (128);
dcl BFT_BLOCK_SIZE	       fixed bin (21) int static options (constant) init (110);
dcl BFT_FIRST	       char (1) int static options (constant) init (" ");
dcl BFT_NEXT	       char (1) int static options (constant) init ("!");
dcl DELIM_CHAR	       char (1) based (addr (DEL));
dcl DEL		       bit (9) unaligned internal static
		       options (constant) init ("011111111"b);

dcl 01 bft_values_struct,
       02 destination_filename char (164),
       02 source_filename  char (164);

/* New declarations for queueing */

dcl BFT_PC_to_MULTICS     fixed bin internal static options (constant)
		      init (32);
dcl BFT_MULTICS_to_PC     fixed bin internal static options (constant)
		      init (33);
dcl BFT_DATA_BLOCK_VERSION_1 char (8) internal static options (constant)
		      init ("VERSION1");
dcl BFT_INBUFF_LENGTH     fixed bin internal static options (constant)
		      init (128);
dcl BFT_OUTBUFF_LENGTH    fixed bin internal static options (constant)
		      init (128);

dcl data_block_ptr	      ptr;		    /* Data to be kept around */
dcl 01 data_block	      based (data_block_ptr),
       02 version	      char (8),		    /* Version ID */
       02 pc_bft_num      fixed bin,		    /* Major of PC:BFT */
       02 inbuff_len      fixed bin,		    /* Input buffer length */
       02 outbuff_len     fixed bin,		    /* Output buffer length */
       02 receive_iocb_ptr ptr,		    /* IOCB of receiving file */
       02 send_iocb_ptr   ptr,		    /* IOCB of sending file */
       02 system_free_area_ptr ptr,		    /* Pointer to sys free */
       02 fetch_pending   ptr,		    /* Fetch waiting for PC path */
       02 store_pending   ptr,		    /* Store waiting for PC path */
       02 queue_ptr	      ptr,		    /* BFT queue segment */
       02 flags,
	03 shut_down_sw bit (1) unal,		    /* BFT is shutting down */
	03 pad	      bit (35) unal;

/* Structure to contain transfer requests awaiting a PC path expansion */

dcl 01 pending	      based,
       02 multics_path    char (168),		    /* Multics path */
       02 pc_path	      char (66),		    /* PC path */
       02 flags	      bit(36),		    /* Transfer modes */
       02 switches,
	03 processing_sw bit (1) unal,	    /* Waiting for PC answer */
	03 first_sw     bit (1) unal,		    /* First match requested */
	03 pad	      bit (34) unal,
       02 priority	      fixed bin,		    /* Priority */
       02 id	      fixed bin,		    /* Request ID */
       02 next	      ptr;		    /* Next in chain */

/*  END INCLUDE FILE: bft_values.incl.pl1		  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * 	*/


*/
                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group Bull including Bull HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell Bull Inc., Groupe Bull
and Bull HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture for 
managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, Bull or Bull HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by Bull HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved

*/
