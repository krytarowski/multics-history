/* Begin include file ..... tape_ioi_hw_status.incl.pl1 */

/* This structure defines the data returned by tape_ioi_$hardware_status */

/* format: style4,delnl,insnl,indattr,ifthen,declareind10,dclind10 */
/* Written May 1982 by Chris Jones */
/* Modified 15 June 1982 by Chris Jones to add reformatted status constants */

dcl	ths_ptr		   ptr;

dcl	1 ths		   aligned based (ths_ptr),
	  2 version	   fixed bin,
	  2 description	   char (256) varying,
	  2 major		   fixed bin,
	  2 minor		   bit (36),
	  2 iom		   bit (72),
	  2 lpw		   bit (72);

dcl	THS_VERSION_1	   fixed bin static options (constant) init (1);
dcl	THS_VERSION	   fixed bin static options (constant) init (1);

/* The following are used to describe the status in a non-hardware specific way. */

/* Major Status */

dcl	SUBSYSTEM_READY	   fixed bin static options (constant) init (0);
dcl	DEVICE_BUSY	   fixed bin static options (constant) init (1);
dcl	DEVICE_ATTENTION	   fixed bin static options (constant) init (2);
dcl	DEVICE_DATA_ALERT	   fixed bin static options (constant) init (3);
dcl	END_OF_FILE	   fixed bin static options (constant) init (4);
dcl	COMMAND_REJECT	   fixed bin static options (constant) init (5);
dcl	MPC_DEVICE_ATTENTION   fixed bin static options (constant) init (10);
dcl	MPC_DEVICE_DATA_ALERT  fixed bin static options (constant) init (11);
dcl	MPC_COMMAND_REJECT	   fixed bin static options (constant) init (13);
dcl	POWER_OFF		   fixed bin static options (constant) init (16);
dcl	SYSTEM_FAULT	   fixed bin static options (constant) init (17);
dcl	IOM_CENTRAL	   fixed bin static options (constant) init (18);
dcl	IOM_CHANNEL	   fixed bin static options (constant) init (19);
dcl	TIME_OUT		   fixed bin static options (constant) init (20);

/* Minor Status */

/* Minor status for SUBSYSTEM_READY */

dcl	WRITE_PROTECTED	   bit (36) aligned static options (constant)
			   init ("100000000000000000000000000000000000"b);
dcl	AT_BOT		   bit (36) aligned static options (constant)
			   init ("010000000000000000000000000000000000"b);
dcl	TWO_BIT_FILL	   bit (36) aligned static options (constant)
			   init ("001000000000000000000000000000000000"b);
dcl	FOUR_BIT_FILL	   bit (36) aligned static options (constant)
			   init ("000100000000000000000000000000000000"b);
dcl	SIX_BIT_FILL	   bit (36) aligned static options (constant)
			   init ("000010000000000000000000000000000000"b);
dcl	ASCII_ALERT	   bit (36) aligned static options (constant)
			   init ("000001000000000000000000000000000000"b);

/* Minor status for DEVICE_BUSY */

dcl	REWINDING		   bit (36) aligned static options (constant)
			   init ("100000000000000000000000000000000000"b);
dcl	RESERVED		   bit (36) aligned static options (constant)
			   init ("010000000000000000000000000000000000"b);
dcl	ALTERNATE_CHANNEL	   bit (36) aligned static options (constant)
			   init ("001000000000000000000000000000000000"b);
dcl	LOADING		   bit (36) aligned static options (constant)
			   init ("000100000000000000000000000000000000"b);

/* Minor status for DEVICE_ATTENTION */

/* WRITE_PROTECTED declared above with SUBSYSTEM_READY status */

dcl	NO_SUCH_HANDLER	   bit (36) aligned static options (constant)
			   init ("010000000000000000000000000000000000"b);
dcl	HANDLER_IN_STANDBY	   bit (36) aligned static options (constant)
			   init ("001000000000000000000000000000000000"b);
dcl	HANDLER_CHECK	   bit (36) aligned static options (constant)
			   init ("000100000000000000000000000000000000"b);
dcl	BLANK_TAPE_ON_WRITE	   bit (36) aligned static options (constant)
			   init ("000010000000000000000000000000000000"b);

/* Minor status for DEVICE_DATA_ALERT */

dcl	TRANSFER_TIMING_ALERT  bit (36) aligned static options (constant)
			   init ("100000000000000000000000000000000000"b);
dcl	BLANK_TAPE_ON_READ	   bit (36) aligned static options (constant)
			   init ("010000000000000000000000000000000000"b);
dcl	BIT_DURING_ERASE	   bit (36) aligned static options (constant)
			   init ("001000000000000000000000000000000000"b);
dcl	TRANSMISSION_PARITY_ALERT
			   bit (36) aligned static options (constant)
			   init ("000100000000000000000000000000000000"b);
dcl	LATERAL_PARITY_ALERT   bit (36) aligned static options (constant)
			   init ("000010000000000000000000000000000000"b);
dcl	LONGITUDINAL_PARITY_ALERT
			   bit (36) aligned static options (constant)
			   init ("000001000000000000000000000000000000"b);
dcl	END_OF_TAPE	   bit (36) aligned static options (constant)
			   init ("000000100000000000000000000000000000"b);

/* Minor status for END_OF_FILE */

dcl	DATA_ALERT_CONDITION   bit (36) aligned static options (constant)
			   init ("100000000000000000000000000000000000"b);

/* Minor status for COMMAND_REJECT */

dcl	READ_AFTER_WRITE	   bit (36) aligned static options (constant)
			   init ("100000000000000000000000000000000000"b);
/**** AT_BOT declared above with SUBSYSTEM_READY status */
dcl	BAD_IDCW_PARITY	   bit (36) aligned static options (constant)
			   init ("001000000000000000000000000000000000"b);
dcl	BAD_DEVICE_CODE	   bit (36) aligned static options (constant)
			   init ("000100000000000000000000000000000000"b);
dcl	BAD_OP_CODE	   bit (36) aligned static options (constant)
			   init ("000010000000000000000000000000000000"b);
dcl	BAD_DENSITY	   bit (36) aligned static options (constant)
			   init ("000001000000000000000000000000000000"b);
dcl	NINE_TRACK_ERROR	   bit (36) aligned static options (constant)
			   init ("000000100000000000000000000000000000"b);

/* Minor status for MPC_DEVICE_ATTENTION */

dcl	CONFIG_SWITCH_ERROR	   bit (36) aligned static options (constant)
			   init ("100000000000000000000000000000000000"b);
dcl	MULTIPLE_DEVICES	   bit (36) aligned static options (constant)
			   init ("010000000000000000000000000000000000"b);
dcl	ILLEGAL_DEVICE_ID	   bit (36) aligned static options (constant)
			   init ("001000000000000000000000000000000000"b);
dcl	INCOMPATIBLE_MODE	   bit (36) aligned static options (constant)
			   init ("000100000000000000000000000000000000"b);
dcl	TCA_MALFUNCTION	   bit (36) aligned static options (constant)
			   init ("000010000000000000000000000000000000"b);
dcl	MTH_MALFUNCTION	   bit (36) aligned static options (constant)
			   init ("000001000000000000000000000000000000"b);
dcl	MULTIPLE_BOT	   bit (36) aligned static options (constant)
			   init ("000000100000000000000000000000000000"b);

/* Minor status for MPC_DEVICE_DATA_ALERT */

dcl	BYTE_LOCKED_OUT	   bit (36) aligned static options (constant)
			   init ("100000000000000000000000000000000000"b);
dcl	INCONSISTENT_COMMAND   bit (36) aligned static options (constant)
			   init ("010000000000000000000000000000000000"b);
dcl	SUM_CHECK_ERROR	   bit (36) aligned static options (constant)
			   init ("001000000000000000000000000000000000"b);
/**** TRANSMISSION_PARITY_ALERT declared above with DEVICE_DATA_ALERT */
dcl	ID_BURST_WRITE_ERROR   bit (36) aligned static options (constant)
			   init ("000010000000000000000000000000000000"b);
dcl	PREAMBLE_ERROR	   bit (36) aligned static options (constant)
			   init ("000001000000000000000000000000000000"b);
dcl	MARGINAL_CONDITION	   bit (36) aligned static options (constant)
			   init ("000000100000000000000000000000000000"b);
dcl	MULTI_TRACK_ERROR	   bit (36) aligned static options (constant)
			   init ("000000010000000000000000000000000000"b);
dcl	SKEW_ERROR	   bit (36) aligned static options (constant)
			   init ("000000001000000000000000000000000000"b);
dcl	POSTAMBLE_ERROR	   bit (36) aligned static options (constant)
			   init ("000000000100000000000000000000000000"b);
dcl	NRZI_CCC_ERROR	   bit (36) aligned static options (constant)
			   init ("000000000010000000000000000000000000"b);
dcl	CODE_ALERT	   bit (36) aligned static options (constant)
			   init ("000000000001000000000000000000000000"b);

/* Minor status for MPC_COMMAND_REJECT */

dcl	ILLEGAL_PROCEDURE	   bit (36) aligned static options (constant)
			   init ("100000000000000000000000000000000000"b);
dcl	ILLEGAL_LC_NUMBER	   bit (36) aligned static options (constant)
			   init ("010000000000000000000000000000000000"b);
dcl	ILLEGAL_SUSPENDED_LC_NUMBER
			   bit (36) aligned static options (constant)
			   init ("001000000000000000000000000000000000"b);
dcl	CONTINUE_BIT_NOT_SET   bit (36) aligned static options (constant)
			   init ("000100000000000000000000000000000000"b);

/* Minor status for POWER_OFF */

/* There are no minor statuses defined for POWER_OFF. */

/* Minor status for SYSTEM_FAULT */

/* Minor status for IOM_CENTRAL */

dcl	LPW_TRO		   bit (36) aligned static options (constant)
			   init ("100000000000000000000000000000000000"b);
dcl	CONSECUTIVE_TDCWS	   bit (36) aligned static options (constant)
			   init ("010000000000000000000000000000000000"b);
dcl	BOUNDARY_ERROR	   bit (36) aligned static options (constant)
			   init ("001000000000000000000000000000000000"b);
dcl	EXT_CHANGE_WHILE_RESTRICTED
			   bit (36) aligned static options (constant)
			   init ("000100000000000000000000000000000000"b);
dcl	IDCW_WHILE_RESTRICTED  bit (36) aligned static options (constant)
			   init ("000010000000000000000000000000000000"b);
dcl	CP_SIZE_DISCREPANCY	   bit (36) aligned static options (constant)
			   init ("000001000000000000000000000000000000"b);
dcl	BUS_PARITY_FROM_CHANNEL
			   bit (36) aligned static options (constant)
			   init ("000000100000000000000000000000000000"b);

/* Minor status for IOM_CHANNEL */

dcl	CONNECT_WHILE_BUSY	   bit (36) aligned static options (constant)
			   init ("100000000000000000000000000000000000"b);
dcl	BAD_PCW_CHANNEL_INST   bit (36) aligned static options (constant)
			   init ("010000000000000000000000000000000000"b);
dcl	INCORRECT_DCW	   bit (36) aligned static options (constant)
			   init ("001000000000000000000000000000000000"b);
dcl	INCOMPLETE_COMMAND_SEQUENCE
			   bit (36) aligned static options (constant)
			   init ("000100000000000000000000000000000000"b);
dcl	PARITY_ERROR_AT_PRPH_INTERFACE
			   bit (36) aligned static options (constant)
			   init ("000010000000000000000000000000000000"b);
dcl	BUS_PARITY_TO_CHANNEL  bit (36) aligned static options (constant)
			   init ("000001000000000000000000000000000000"b);

/* Minor status for TIME_OUT */

/* There are no minor statuses defined for TIME_OUT. */

/* End include file ..... tape_ioi_hw_status.incl.pl1 */


*/
                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group Bull including Bull HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell Bull Inc., Groupe Bull
and Bull HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture for 
managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, Bull or Bull HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by Bull HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved

*/
