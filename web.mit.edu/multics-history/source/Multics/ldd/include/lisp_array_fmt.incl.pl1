	/***** BEGIN INCLUDE FILE lisp_array_fmt.incl.pl1 *****/

/* This include file defines the format of the "new" LISP arrays.
   Written 74.05.13 by DAM */

	/* Info block in static space.  pointed at by array ptr */

dcl 1 array_info aligned based structure,		/* 8 words long */
    2 ndims fixed bin(17) unaligned,			/* number of dimensions */
    2 gc_mark bit(18) unaligned,			/* alternating bits for garbage coll. */
    2 call_array_operator bit(36),			/* tspbp instruction to array opr */
    2 array_data_ptr pointer,				/* -> array_data structure */
    2 array_load_sequence(3) bit(36),			/* lda, ldq, tra bp|0 */
    2 type fixed bin(17) unaligned,			/* type of array, see dcl below */
    2 minus_2_times_ndims fixed bin(17) unaligned;	/* for convenience of array opr */

	/* Codes for the different types of arrays:
     Name		Value		arg to *array to create one      */

dcl (S_expr_array init(0),		/* t */
     Un_gc_array init(1),		/* nil */
     Fixnum_array init(2),		/* fixnum */
     Flonum_array init(3),		/* flonum */
     Readtable_array init(4),		/* readtable */
     Obarray_array init(5),		/* obarray */
     Dead_array init(6)		/* (*rearray a) */
    ) fixed bin(17) static;

	/* Block of array data and dimensions, in garbage-collected Lists space */

dcl 1 array_data aligned based structure,
      2 dope_vector(ZERO),		/* address by dope_vector(i-ndims).  no way to dcl in PL/I */
        3 bounds fixed bin(35),	/* 0 <_ subscript < bounds */
        3 multiplier fixed bin(35),	/* multiplier in polynomial-type subscript calc. */
      2 data(0:1000) fixed bin(71);	/* single or double words depending on type of array */

dcl ZERO fixed bin static init(0);	/* Circumvent a compiler bug causing reference through null pointer in get_array_size$multf */

	/***** END INCLUDE FILE lisp_array_fmt.incl.pl1 *****/


*/
                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group Bull including Bull HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell Bull Inc., Groupe Bull
and Bull HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture for 
managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, Bull or Bull HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by Bull HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved

*/
