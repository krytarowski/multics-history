/* BEGIN INCLUDE FILE ... terminal_io_record.incl.pl1 */
/* Created:  November 1979 by G. Palter */
/* Modified: 26 March 1982 by G. Palter to make the structure more compatible with use of the like attribute */


/* Record format used by I/O modules designed for communcation with remote I/O daemon stations */

dcl 1 terminal_io_record aligned based (terminal_io_record_ptr),
      2 header,
        3 version fixed binary,
        3 device_type fixed binary,			/* type of device sending/receiving this record --
						   reader/printer/punch/teleprinter */
        3 slew_control,				/* slew control data: used for printer and teleprinter only */
	4 slew_type fixed binary (18) unaligned unsigned,	/* type of slewing operation before/after this line --
						   by-count/top-of-form/inside-page/outside-page/to-channel */
	4 slew_count fixed binary (18) unaligned unsigned,/* # of lines if by count; channel # if to channel */
        3 flags,
	4 binary bit (1) unaligned,			/* ON => data in record should be written in binary mode */
	4 preslew bit (1) unaligned,			/* ON => perform above slew before printing data;
						   OFF => perform above slew after printing data */
	4 pad bit (34) unaligned,
        3 element_size fixed binary,			/* # of bits in a data element */
        3 n_elements fixed binary (24),			/* # of elements in the record */
      2 data,					/* force word alignment */
        3 bits (terminal_io_record_n_elements refer (terminal_io_record.n_elements))
	  bit (terminal_io_record_element_size refer (terminal_io_record.element_size)) unaligned;

dcl  terminal_io_record_ptr pointer;

dcl  terminal_io_record_element_size fixed binary;	/* used for allocating terminal_io_record structures */
dcl  terminal_io_record_n_elements fixed binary (24);


/* Manifest constants */

dcl  terminal_io_record_version_1 fixed binary static options (constant) initial (1);

dcl (TELEPRINTER_DEVICE	initial (1),
     READER_DEVICE		initial (2),
     PRINTER_DEVICE		initial (3),
     PUNCH_DEVICE		initial (4))
	fixed binary static options (constant);

dcl (SLEW_BY_COUNT		initial (1),
     SLEW_TO_TOP_OF_PAGE	initial (2),
     SLEW_TO_INSIDE_PAGE	initial (3),		/* skip to top of next inside page (head sheet) */
     SLEW_TO_OUTSIDE_PAGE	initial (4),		/* skip to top of next outside page (tail sheet) */
     SLEW_TO_CHANNEL	initial (5))		/* skip to specified channel stop */
	fixed binary static options (constant);


/* Data in record as a character string (terminal_io_record.element_size = 9) */

dcl  terminal_io_record_data_chars character (terminal_io_record.n_elements) unaligned
	based (addr (terminal_io_record.bits));

dcl  terminal_io_record_data_chars_varying_max_len fixed binary (21);  /* Set this before using the varying string. */
dcl  terminal_io_record_data_chars_varying character (terminal_io_record_data_chars_varying_max_len) varying
	based (addr (terminal_io_record.n_elements));	/* varying string consists of length and data */


/* Data in record as a bit string (terminal_io_record.element_size = 1) */

dcl terminal_io_record_data_bits bit (terminal_io_record.n_elements) unaligned based (addr (terminal_io_record.bits));

/* END INCLUDE FILE ... terminal_io_record.incl.pl1 */


*/
                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group Bull including Bull HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell Bull Inc., Groupe Bull
and Bull HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture for 
managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, Bull or Bull HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by Bull HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved

*/
