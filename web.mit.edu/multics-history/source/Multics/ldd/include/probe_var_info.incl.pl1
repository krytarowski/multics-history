/* BEGIN INCLUDE FILE ... probe_var_info.incl.pl 

   describes a probe variable.  This str pointed to by the probe_var_info_ptr
   of a reference node.
   Jim Davis 19 Feb 80
*/


/****^  HISTORY COMMENTS:
  1) change(88-09-20,WAAnderson), approve(88-09-20,MCR7952),
     audit(88-09-30,JRGray), install(88-10-24,MR12.2-1184):
     Added info for new types used by C.
                                                   END HISTORY COMMENTS */


/* Added probe_variable.unaligned_sw and pointer_unal type 12/04/81 S. Herbst */
/* Added address-type constants (ADDRESS_ALLOC_TYPE, etc.) 03/12/84 S. Herbst */

dcl (ADDRESS_ALLOC_TYPE init (1),
     ADDRESS_EXTERNAL_TYPE init (2),
     ADDRESS_GIVEN_TYPE init (3)) fixed bin int static options (constant);

dcl 1 probe_variable aligned based (probe_variable_ptr),
      2 next ptr unal,			         /* threaded */
      2 name char (64) varying,
      2 declared_type char (64) varying,	         /* what user TYPE */
      2 type fixed bin,			         /* Multics type */
      2 unaligned_sw bit (1) aligned,
      2 address ptr unal,			         /* to the data */
      2 pad (5) ptr unal;

dcl probe_variable_integer fixed bin (35) based (probe_variable.address);
dcl probe_variable_pointer pointer aligned based (probe_variable.address);
dcl probe_variable_pointer_unal pointer unaligned based (probe_variable.address);
dcl probe_variable_float float bin (27) based (probe_variable.address);
dcl probe_variable_char  char(1) based (probe_variable.address);
dcl probe_variable_double float bin (63) based (probe_variable.address);
dcl probe_variable_long fixed bin(71) based (probe_variable.address);

dcl probe_variable_ptr pointer unal;

/* END INCLUDE FILE ... probe_var_info.incl.pl1 */



*/
                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group Bull including Bull HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell Bull Inc., Groupe Bull
and Bull HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture for 
managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, Bull or Bull HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by Bull HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved

*/
