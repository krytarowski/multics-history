/* BEGIN INCLUDE FILE ... hasp_rcb_byte.incl.pl1 */
/* Created:  October 1979 by G. Palter from hasp_block_record_data.incl because only the RCB is used by priv_hasp_mpx */

/* HASP Record Control Byte (RCB) */

dcl 1 hasp_rcb_byte unaligned based (hasp_rcb_byte_ptr),
    2 pad1 bit (1) unaligned,				/* padding supplied by MCS */
    2 not_eob bit (1) unaligned,			/* ON => not end-of-block indicator */
    2 stream fixed binary (3) unaligned unsigned,		/* identifies which device record is from or what control
						    function depending on contents of type field below */
    2 type fixed binary (4) unaligned unsigned;		/* type of record */

dcl  hasp_rcb_byte_ptr pointer;

dcl (HASP_RCB_TYPE_CONTROL		initial (0),	/* RCB of some form of a control record */
     HASP_RCB_TYPE_CONSOLE_OUTPUT	initial (1),	/* RCB of message from host to workstation console */
     HASP_RCB_TYPE_CONSOLE_INPUT	initial (2),	/* RCB of input line from workstation console to host */
     HASP_RCB_TYPE_READER_INPUT	initial (3),	/* RCB of card from workstation card reader */
     HASP_RCB_TYPE_PRINT_OUTPUT	initial (4),	/* RCB ofprint line from host */
     HASP_RCB_TYPE_PUNCH_OUTPUT	initial (5))	/* RCB of card from host to workstation card punch */
	fixed binary (4) unsigned static options (constant);

dcl (HASP_RCB_STREAM_RTS		initial (1),	/* RCB of request-to-send control record */
     HASP_RCB_STREAM_RTS_ACK		initial (2),	/* RCB of acknowledgement to request-to-send control record */
     HASP_RCB_STREAM_BAD_BCB		initial (6),	/* RCB of bad-BCB control record */
     HASP_RCB_STREAM_CONTROL		initial (7))	/* RCB of "general" control record (escape) */
	fixed binary (3) unsigned static options (constant);

/* END INCLUDE FILE ... hasp_rcb_byte.incl.pl1 */


*/
                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group Bull including Bull HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell Bull Inc., Groupe Bull
and Bull HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture for 
managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, Bull or Bull HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by Bull HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved

*/
