	/* INCLUDE FILE lisp_io.incl.pl1   */

	/* data structures used by the lisp i/o system */

%include lisp_iochan;

	/* masks for checking iochan.flags, seeing if  lisp_io_control_$fix_not_ok_iochan should be called */

dcl not_ok_to_read bit(36) static init("0100010001"b),	/* mask for checking iochan.flags on input */
    not_ok_to_write bit(36) static init("0010010001"b);/* mask for checking iochan.flags on output */
dcl not_ok_to_read_fixnum bit(36) static init("0100010000"b),
    not_ok_to_write_fixnum bit(36) static init("0010010000"b);


	/* miscellaneous global, static variables and atoms used by the I/O system */

dcl lisp_static_vars_$read_print_nl_sync bit(36)  ext,
    read_print_nl_sync bit(36) defined (lisp_static_vars_$read_print_nl_sync),
    lisp_static_vars_$ibase ext fixed bin(71),
    ibase fixed bin(71) defined (lisp_static_vars_$ibase),

    lisp_static_vars_$quote_atom ext fixed bin (71),
    quote_atom fixed bin(71) defined (lisp_static_vars_$quote_atom),

    lisp_static_vars_$base ext fixed bin(71),
    base fixed bin(71) defined ( lisp_static_vars_$base),

    lisp_static_vars_$stnopoint ext fixed bin(71),
    stnopoint fixed bin(71) defined (lisp_static_vars_$stnopoint),

     lisp_static_vars_$tty_atom ext fixed bin(71),
     tty_atom fixed bin(71) defined (lisp_static_vars_$tty_atom),
     lisp_static_vars_$status_gctwa ext fixed bin(71),
     status_gctwa fixed bin(71) defined (lisp_static_vars_$status_gctwa),

    lisp_static_vars_$s_atom ext fixed bin(71),
    s_atom fixed bin(71) defined (lisp_static_vars_$s_atom),

    lisp_static_vars_$readtable ext fixed bin(71),
    readtable fixed bin(71) defined (lisp_static_vars_$readtable),

    lisp_static_vars_$plus_status ext fixed bin(71),
    plus_status fixed bin(71) defined (lisp_static_vars_$plus_status);

%include lisp_control_chars;
	/* END INCLUDE FILE lisp_io.incl.pl1 */



*/
                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group Bull including Bull HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell Bull Inc., Groupe Bull
and Bull HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture for 
managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, Bull or Bull HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by Bull HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved

*/
