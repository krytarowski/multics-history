/* BEGIN INCLUDE FILE...ls_ssu_info.incl.pl1 */

/****^  HISTORY COMMENTS:
  1) change(85-03-01,Coren), approve(87-06-25,MCR7679), audit(87-03-18,GDixon),
     install(87-08-04,MR12.1-1056):
     Initial coding.
  2) change(87-03-05,GDixon), approve(87-06-25,MCR7679),
     audit(87-07-14,Parisek), install(87-08-04,MR12.1-1056):
      A) Added info directories to ls_ssu_info structure.  This allows them to
         be changed while running in a test environment.
      B) Add init(0) attribute to ls_ssu_info.n_endpoints.
  3) change(87-06-25,GDixon), approve(87-06-25,MCR7679),
     audit(87-07-14,Parisek), install(87-08-04,MR12.1-1056):
     Add ls_cp_info.flags.call_probe to allow debug_mode messages without
     stopping in probe.
                                                   END HISTORY COMMENTS */

/* defines the info structure used by the "login_server" subsystem */

dcl ls_ssu_info_ptr pointer;

dcl 1 ls_ssu_info aligned based (ls_ssu_info_ptr),
    2 version char (8),				/* "lssiNNNN" */
    2 sci_ptr pointer,
    2 answer_table_ptr pointer,
    2 installation_parms_ptr pointer,
    2 flags,
      3 debug_mode bit (1) unaligned,			/* "1"b => debugging environment */
      3 call_probe bit (1) unaligned,			/* "1"b => call probe when control point reports error */
      3 trace bit (1) unaligned,			/* "1"b => make tracing calls */
      3 pad bit (33) unaligned,
    2 n_endpoints fixed bin init(0),			/* number of endpoints for which service has been started */
    2 first_endpoint_ptr pointer,			/* head of list of endpoint names */
    2 last_endpoint_ptr pointer,			/* tail of list */
    2 login_info_dir char (168) unal,			/* info dir for login requests */
    2 connect_info_dir char (168) unal;			/* info dir for connect requests */

dcl LS_SSU_INFO_V1 char (8) internal static options (constant) initial ("lssi0001");


dcl ls_endpoint_listp pointer;

dcl 1 ls_endpoint_list based (ls_endpoint_listp) aligned,	/* element in linked list of active endpoints */
    2 version char (8),				/* "lselNNNN" */
    2 name char (32),				/* name of endpoint as supplied to start_login_service request */
    2 prev_endpoint pointer,				/* preceding entry in list */
    2 next_endpoint pointer,				/* next endpoint in list */
    2 service_entries_ptr pointer,			/* points to login_service_entries structure for this endpoint */
    2 restart_event_channel fixed bin (71),		/* event channel for signalling new start_login_service on dormant endpoint */
    2 control_point_id bit (36),			/* control point that listens on specified endpoint */
    2 n_connections fixed bin,			/* number of connections created on this endpoint */
    2 flags,
      3 awaiting_destruction bit (1) unaligned,		/* "1"b => destroy control point when n_connections goes to 0 */
      3 mbz bit (35) unaligned;

dcl LS_ENDPOINT_LIST_V1 char (8) internal static options (constant) initial ("lsel0001");

dcl LS_SS_VERSION char (4) internal static options (constant) initial ("1.0 ");

/* END INCLUDE FILE...ls_ssu_info.incl.pl1 */


*/
                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group Bull including Bull HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell Bull Inc., Groupe Bull
and Bull HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture for 
managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, Bull or Bull HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by Bull HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved

*/
