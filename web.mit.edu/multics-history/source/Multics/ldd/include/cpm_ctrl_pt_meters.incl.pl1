/* BEGIN INCLUDE FILE ... cpm_ctrl_pt_meters.incl.pl1 */

/****^  HISTORY COMMENTS:
  1) change(86-08-12,Kissel), approve(86-08-12,MCR7473),
     audit(86-10-08,Fawcett), install(86-11-03,MR12.0-1206):
     Written to support control point management in March 1985 by G. Palter.
                                                   END HISTORY COMMENTS */

/* format: style3,linecom */

/* NOTE: The include file references structures contained in the following independent include file --
	process_usage.incl.pl1	*/


/* Definition of control point metering data -- A set of metering data is kept independently for each control point which
   provides usage statistics for that control point.  In addition, another set of metering data is kept to record the
   overhead involved in the control point scheduler */

dcl	1 control_point_meters
			aligned based (cpm_ptr),
	  2 n_schedules	fixed binary,		/* # of times the control point has been run or
						   # of times the scheduler has been invoked */
	  2 pad		fixed binary,
	  2 real_time	fixed binary (71),		/* ... real time used by the control point or scheduler */
	  2 usage		like process_usage;		/* ... CPU, memory, etc. */

dcl	cpm_ptr		pointer;


/* Definition of the structure used in calls to cpm_$get_control_point_meters and cpm_$get_scheduler_meters */

dcl	1 control_point_meters_argument
			aligned based (cpma_ptr),
	  2 version	character (8) unaligned,
	  2 meters	like control_point_meters;

dcl	CONTROL_POINT_METERS_ARGUMENT_VERSION_1
			character (8) static options (constant) initial ("cpma_001");

dcl	MAX_NUMBER_OF_METERS
			fixed bin internal static options (constant) init (9);

dcl	cpma_ptr		pointer;

/* END INCLUDE FILE ... cpm_ctrl_pt_meters.incl.pl1 */


*/
                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group Bull including Bull HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell Bull Inc., Groupe Bull
and Bull HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture for 
managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, Bull or Bull HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by Bull HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved

*/
