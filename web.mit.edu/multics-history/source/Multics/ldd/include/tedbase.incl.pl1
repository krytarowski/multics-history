/* BEGIN INCLUDE FILE ..... tedbase.incl.pl1 ..... 02/09/82 J Falksen       */

dcl NORMAL	fixed bin (24) int static init (0),
    SAFE		fixed bin (24) int static init (1),
    COM		fixed bin (24) int static init (2),
    RESTART	fixed bin (24) int static init (3);

dcl rc_close	fixed bin (24) int static init (100);
dcl rc_fail	fixed bin (24) int static init (10);
dcl rc_nop	fixed bin (24) int static init (2);
dcl rc_keyerr	fixed bin (24) int static init (1);

/*** the request line as both string and character		       */
dcl rl_b		fixed bin (21);	/* where current req begins	       */
dcl rl_i		fixed bin (21) defined (dbase.rl.l.le);
dcl rl_l		fixed bin (21) defined (dbase.rl.l.re);
dcl rl_c		(rl_l) char (1) based (dbase.rl.sp);
dcl rl_s		char (rl_l) based (dbase.rl.sp);

dcl 1 seg_des	based,		/* segment descriptor	       */
      2 sp	ptr,		/* -> segment		       */
      2 sn	fixed bin,	/* sequence # in dbase	       */
      2 pn	fixed bin,	/* part #, if in pool	       */
      2 ast	fixed bin,	/* size of aste		       */
      2 mbz	fixed bin;	/* --reserved		       */

      

dcl dbase_p	ptr;
dcl dbase_vers_3	fixed bin int static init (3);
dcl 1 dbase	based (dbase_p),
      2 version	fixed bin,
      2 recurs	fixed bin,	/* recursion level at which active   */
      2 bwd	ptr,		/* links active db's together	       */
      2 cba_p	ptr,		/* contains addr (cb (1))	       */
      2 eval_p	ptr,		/* contains cb (2).sp	       */
      2 rl,			/* describes the request buffer      */
        3 part1	like seg_des,	/* ..its segment		       */
        3 part2	like buf_des,	/* ..its limits		       */
      2 seg_p	(-1:72) ptr,	/* list of segment pointers	       */
				/* seg_p(-1)is a temp for restart    */
				/* seg_p(0) is the database	       */
				/* seg_p(1) is the 1K/4K pool	       */
				/* seg_p(2) is reserved for 16K pool */
				/* seg_p(3) is reserved for call_stk */
      2 inuse_seg	bit (72) aligned,	/* which segments (1:72) are in use  */
				/* seg_p(0) is ALWAYS in use	       */
      2 inuse_1K	bit (16) aligned,	/* which 1K buffers are in use       */
      2 inuse_4K	bit (12) aligned,	/* which 4K buffers are in use       */
      2 inuse_16K	bit (4) aligned,	/* which 16K buffers are in use      */
      2 reset	label,		/* where to go on a reset condition  */
      2 time	fixed bin (71),	/* time request id is based on       */
      2 seg_ct	fixed bin,	/* how many segments in use	       */
				/* seg_p (0)--database	       */
				/* seg_p (1)--4K pool (64K total)    */
				/* seg_p (2)--16K pool (64K total)   */
      2 argct	fixed bin,	/* how many args to ted	       */
      2 S_count	fixed bin,	/* # matches on last substitute      */
      2 not_read_ct fixed bin,	/* how many "not-read" files	       */
      2 at_break	fixed bin,	/* 1-break pending, 2-break entered  */
      2 bufnum	fixed bin,	/* how many buffer control blocks    */
      2 lock        bit (36),		/* to find if active (set LAST!)     */
      2 cb_c_r	bit (18) aligned,	/* offset of current buffer	       */
      2 cb_w_r	bit (18) aligned,	/* offset of buffer being worked on  */
      2 sws,
        3 flow_sw	bit (1) unal,	/* -label specified		       */
        3 break_sw	bit (1) unal,	/* -break specified		       */
        3 edit_sw	bit (1) unal,	/* -trace_edit specified	       */
        3 input_sw	bit (1) unal,	/* -trace_input		       */
        3 old_style bit (1) unal,	/* 1-old-style escapes allowed       */
        3 remote_sw bit (1) unal,	/* 1-not in home_dir	       */
        3 read_sw   bit (1) unal,	/* 1-always read files	       */
        3 lit_sw    bit (1) unal,	/* 1-expressions are literal	       */
        3 fill	bit (28) unal,
      2 tedname	char (32) var,	/* name under which ted_ was called  */
      2 comment     char (256)var,	/* user ident of environment	       */
      2 err_msg	char (168)var,
      2 regexp	char (500),	/* holds the remembered regular expr */
				/*  is placed here to get word       */
				/*  alignment		       */
      2 dir_db	char (168),	/* where work segments live	       */
      2 person      char (22),	/* who started		       */
      2 project     char (9),		/* ...this environment	       */
      2 nulreq	char (2),		/* what is null request (p|P|!p)     */
      2 err_go	char (16),	/* label to go to on error	       */
      2 rq_id       char (19),	/* request id for this	       */
      2 stk_info,
        3 curp	ptr,		/* pointer to current buffer	       */
        3 top	ptr,		/* pointer to top of stack	       */
        3 level	fixed bin (21),	/* recursion depth		       */
        3 next	fixed bin (21);
      /* next space available in stack     */
      

/* END INCLUDE FILE ..... tedbase.incl.pl1 .....			       */


*/
                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group Bull including Bull HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell Bull Inc., Groupe Bull
and Bull HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture for 
managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, Bull or Bull HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by Bull HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved

*/
