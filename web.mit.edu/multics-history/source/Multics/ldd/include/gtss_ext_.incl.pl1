/* BEGIN INCLUDE FILE gtss_ext_.incl.pl1 */
/*
  Created: (Wardd Multics)  05/20/78 1307.6 mst Sat 
  Modified: Ward            1981     add suspended_process dcl
  Modified: Ron Barstad  83-07-21  Fixed level number on mcfc to 3
  Modified: Ron Barstad  83-07-25  Fixed derail range in statistics to 4js3 number
*/
dcl  gtss_ext_$aem                   fixed bin static ext	/* >0 Print "additional" error information. */;
dcl  gtss_ext_$bad_drl_rtrn          static ext label	/* Default for drl_rtrn. */;
dcl  gtss_ext_$db                    (72)bit(1)unal static ext;
dcl  gtss_ext_$deferred_catalogs_ptr ptr ext;
dcl  gtss_ext_$dispose_of_drl        static ext label	/* quit handlers for some derails use this label to abort */;
dcl  gtss_ext_$drl_rtrn              (4)static ext label	/* where to return at subsystem end */;
dcl  gtss_ext_$drm_path              char(168)static ext	/* gtss_expand_pathname_stores drm_path */;
dcl  gtss_ext_$drun_jid              char (5) static ext	/* valid only for DRUN executing under absentee */;
dcl  gtss_ext_$event_channel         fixed bin (71) static ext	/* used for DABT signals */;
dcl  gtss_ext_$finished              static ext label	/* Return to gtss for normal conclusion. */;
dcl  gtss_ext_$gdb_name              char(8)ext	/* Name H* module to debug. */;
dcl  gtss_ext_$get_line              entry(ptr,ptr,fixed bin(21),fixed bin(21),fixed bin(35))variable ext /* Build mode input procedure. */;
dcl  gtss_ext_$gtss_slave_area_seg   (4) ext static ptr	/* pointer to gtss slave area segment */;
dcl  gtss_ext_$hcs_work_area_ptr     ptr ext static		/* Temp seg for acl lists. */;
dcl  gtss_ext_$homedir               char (64) static ext /* user's home dir */;
dcl  gtss_ext_$last_k_was_out        bit (1)aligned ext static	/* "1"b => last tty output was output. */;
dcl  gtss_ext_$pdir                  char (168) varying ext static	/* pathname of process directory */;
dcl  gtss_ext_$popup_from_pi         static ext label	/* transfer to this label after pi simulates popup primitive */;
dcl  gtss_ext_$process_type          fixed bin (17) static ext;
dcl  gtss_ext_$put_chars             entry(ptr,ptr,fixed bin(24),fixed bin(35)) variable ext	/* Terminal output procedure. */;
dcl  gtss_ext_$restart_from_pi       static ext label	/* transfer to this label after pi restores machine conditions */;
dcl  gtss_ext_$restart_seg_ptr       ptr static ext	/* points to DRUN restart file when exec under absentee */;
dcl  gtss_ext_$sig_ptr               ext static ptr	/* saved ptr to signal_ */;
dcl  gtss_ext_$stack_level_          fixed bin ext static;
dcl  gtss_ext_$suspended_process     bit(1) ext static;
dcl  gtss_ext_$SYstarstar_file_no    fixed bin (24) static ext;
dcl  gtss_ext_$user_id               char (26)var ext;
dcl  gtss_ext_$work_area_ptr         ptr ext;

dcl  1 gtss_ext_$CFP_bits aligned static external
     , 3 no_input_yet bit (1) unaligned         /* used in gtss_CFP_input_, gtss_read_starCFP_ */
     , 3 rtn_bits bit (4) unaligned             /* used in gtss_CFP_input_, gtss_CFP_output_ */
     , 3 cpos_called bit (1) unaligned          /* used in gtss_CFP_input_, gtss_drl_t_cfio_, gtss_abandon_CFP_ */
     , 3 cout_called bit (1) unaligned          /* used in gtss_read_starCFP_, gtss_abandon_CFP_ */
     , 3 build_mode bit (1) unaligned	        /* used in gtss_build_, gtss_dsd_process_ */
     ;

dcl 1 gtss_ext_$com_reg aligned static ext,
       3 tsdmx,
         4 dst fixed bin (18) unsigned unaligned,
         4 dit fixed bin (18) unsigned unaligned,
       3 tsdpt fixed bin (36) unsigned unaligned,
       3 tsddt fixed bin (36) unsigned unaligned,
       3 tsdid bit (72) unaligned,
       3 tsdsd bit (36) unaligned,
       3 tsdst fixed bin (36) unsigned unaligned,
       3 tsdjb fixed bin (35) unaligned,
       3 tsdgt,
         4 ust_loc fixed bin (18) unsigned unaligned,
         4 gating_ctl fixed bin (18) unsigned unaligned,
       3 tcdfr bit (36) unaligned;

dcl 1 gtss_ext_$flags aligned static ext
     , 3 dispose_of_drl_on_pi	bit (01) unal	/* 1 => drl that should be aborted after quit-pi sequence */
     , 3 drl_in_progress	bit (01) unal	/* 1 => drl handler executing; 0 => gcos code executing */
     , 3 popup_from_pi	bit (01) unal	/* 1 => derail processor will simulate Gcos break instead of returning */
     , 3 unfinished_drl	bit (01) unal	/* 1 => subsystem is handling breaks and quit was raised during a drl */
     , 3 ss_time_limit_set	bit (01) unal	/* 1 => exec time limit set for subsystem */
     , 3 timer_ranout	bit (01) unal	/* 1 => user is executing timer runout code */
     , 3 gtss_com_err_sw      bit (01) unal       /* 1 => stop com_err_ string from going to terminal */   
     , 3 available		bit (65) unal
     ;


dcl 1 gtss_ext_$statistics aligned static ext,		/* Derail usage statistics */
      3 total_time (-10:71)fixed bin (71),
      3 count (-10:71)fixed bin (17);

/* 	Declaration of Available File Table
   */
dcl 1 gtss_ext_$aft aligned ext,			/* aft structure */

      3 start_list (0:102) fixed bin (24),		/* >0 => 1st aft_entry row to start of next entry chain. */

      3 aft_entry (20),
        4 altname char (8),				/* altname name for attaching this file */
        4 next_entry fixed bin (24),			/* Next aft_entry in hash chain. */
        4 previous_add fixed bin (24),			/* Previously added entry. */
        4 next_add fixed bin (24),			/* Entry added after this one. */
        4 used bit (1) unal,				/* "1"b => aft_entry contains AFT value. */
        4 forced bit(1) unal,				/* "1"b => gtss_verify_access_ forced access on this file. */

      3 free_space fixed bin (24),			/* Index of start of free space list for aft entries. */
      3 first_added fixed bin (24),			/* >0  => start of chain in add order. */
      3 last_added fixed bin (24)			/* >0 => end of chain in added order. */;

dcl  gtss_ext_$ppt                   ptr ext /*  switch name for tapein drl */;
/**	Data structure to provide access to installed
   subsystems fast library load.
   **/
dcl 1 gtss_ext_$fast_lib aligned ext
     , 3 fast_lib_fcb ptr				/* Pointer to msf fcb.	*/
     , 3 fast_lib_ncp fixed bin (24)			/* Number of components. */
     , 3 comp_ptr (0:9)ptr				/* Pointer to component. */
     , 3 comp_wds (0:9)fixed bin (24)			/* Component length (words). */
     ;

/* Pointers to segments to regulate multipler
   callers to files. Same segments are used to regulate
   all simulator callers.
*/
dcl 1 gtss_ext_$mcfc	aligned ext,
      3 multics_lock_id	bit(36),
      3 wait_time		fixed bin,
      3 files_ptr		ptr,
      3 names_ptr		ptr,
      3 callers_ptr		(0:3)ptr
;

/*   END INCLUDE FILE gtss_ext_.incl.pl1 */


*/
                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group Bull including Bull HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell Bull Inc., Groupe Bull
and Bull HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture for 
managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, Bull or Bull HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by Bull HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved

*/
