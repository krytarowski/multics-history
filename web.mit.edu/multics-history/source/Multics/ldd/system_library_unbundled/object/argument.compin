.* ***********************************************************
.* *                                                         *
.* *                                                         *
.* * Copyright, (C) Honeywell Information Systems Inc., 1981 *
.* *                                                         *
.* *                                                         *
.* ***********************************************************
.*	ARG/CTLARG/DCL/MESSAGE/REQUEST EMITTER
.*
.*	..argument        "argument" ...
.*	..arg 	        "argument" ...
.*	..controlargument "long control arg" "short control arg" ...
.*	..ctlarg	        "long control arg" "short control arg" ...
.*	..message	        "message" "alternate message"
.*	..msg	        "message" "alternate message"
.*	..request	        "request" "request_name"
.*	..rqst	        "request" "request_name"
.*	..subroutine_entry "declaration" "call"
.*	..subr_entry "declaration" "call"
.*
.ts %ArgCount% > 0
.go ARG_OK
.err No arguments given.
.rt

.la ARG_OK
.ts "%InputFileName%" ^= "request" & "%InputFileName%" ^= "rqst"
.ur .spt %LABELSPACE%
.ur .go %InputFileName%
.rt				;.* return if no label

.la message
.la msg
.srv IARG 1
.tbb h
.la MSG_LOOP
.ur .unl %PAR_INDENT%
.ur .ur |%.fnt ascii 9%%%Arg%IARG%%%%.fnt%|
.srv IARG %IARG% + 1
.ts %IARG% <= %ArgCount%
.go MSG_LOOP
.tbe
.rt

.la argument
.la arg
.la controlargument
.la ctlarg
.la subroutine_entry
.la subr_entry
.srv IARG 1			;.* set input arg counter
.tbb h				;.* start text header
.*				;.* process input args
.la ARG_LOOP
.ur .unl %PAR_INDENT%		;.* hang 1 level
.ur .ur .srv BOLD_START %%%%[index "%%Arg%IARG%%%" "~"]%%%% ;.* bold part?
.ts %BOLD_START% > 0
.go ARG_BOLD			;.* yes
.*
.ur .ur %.fnt HR%%%Arg%IARG%%%%.fnt%    ;.* no bold - whole arg in HR
.brf
.go ARG_COUNT			;.* done with arg
.*
.la ARG_BOLD			;.* arg has bold part(s)
.srv ARGNDX 1			;.* init arg scan index 
.fnt HR				;.* use Helvetica
.srv ARG_LINE "%PAD%"		;.* clear output line
.ur .ur .srv ARG_LEN %%%%[length "%%Arg%IARG%%%"]%%%% ;.* length of input arg
.*				;.* pick out bold part(s)
.la BOLD_LOOP
.ts %BOLD_START% > 1		;.* any prior HR part?
.ur .ur .ur .srv ARG_LINE "%ARG_LINE%
.+%%%%{"%%Arg%IARG%%%"(%ARGNDX%,%%{%BOLD_START%-1}%%)}%%%%"
.ur .srv ARGNDX %%{%ARGNDX% + %BOLD_START%}%%
.*				;.* take bold part, replace ~ with FCS
.ur .ur .ur .srv BOLD_END
.+ %%%%%%[index "%%%%{"%%Arg%IARG%%%"(%ARGNDX%)}%%%%" "~"]%%%%%%
.ts %BOLD_END% > 0			;.* is there one?
.go TAKE_BOLD			;.* yes
.*
.err Missing bold part delimiter (~)
.go ARG_FINI

.la TAKE_BOLD
.ur .ur .srv ARG_LINE "%ARG_LINE%%.fnt HBI%
.+%%%%{"%%Arg%IARG%%%"(%ARGNDX%,%%{%BOLD_END%-1}%%)}%%%%%.fnt%"
.ur .srv ARGNDX %%{%ARGNDX% + %BOLD_END%}%% ;.* step over delim
.ts %ARGNDX% > %ARG_LEN%		;.* any more?
.go ARG_FINI			;.* no
.*
.ur .ur .ur .srv BOLD_START
.+ %%%%%%[index "%%%%{"%%Arg%IARG%%%"(%ARGNDX%)}%%%%" "~"]%%%%%%
.ts %BOLD_START% > 0		;.* another bold part?
.go BOLD_LOOP			;.* yes
.*				    last HR part
.ur .ur .srv ARG_LINE "%ARG_LINE%%%%%{"%%Arg%IARG%%%"(%ARGNDX%)}%%%%"
.*
.la ARG_FINI
.ur %ARG_LINE%
.brf
.fnt				;.* restore font
.*
.la ARG_COUNT
.srv IARG %IARG% + 1
.ts %IARG% <= %ArgCount%
.go ARG_LOOP
.ur .inl +%PAR_INDENT%
.tbe
.rt

.la request
.la rqst
.ts %ArgCount% = 2
.go RQST_ARGS_OK
.err Two arguments needed.
.rt

.la RQST_ARGS_OK
.brb
.brn 6
.ur .ur .inl %%{2 * %PAR_INDENT%}%%
.ur .hla 2 0 |%.fnt HBR 12%%Arg1%%.fnt%||%.fnt HBR 12%%%RIGHT_SLUG%%%.fnt%|
.srv RIGHT_SLUG "%Arg1%"
.*
.spt 2
.ur .ur .tlh %LABELSPACE% -%%{2 * %PAR_INDENT%}%% |%.fnt HBR%%Arg1% %Arg2%%.fnt%|
.rt


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
