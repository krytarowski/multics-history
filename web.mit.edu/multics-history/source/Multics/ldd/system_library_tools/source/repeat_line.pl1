/* ******************************************************
   *                                                    *
   *                                                    *
   * Copyright (c) 1972 by Massachusetts Institute of   *
   * Technology and Honeywell Information Systems, Inc. *
   *                                                    *
   *                                                    *
   ****************************************************** */

/* REPEAT --- program to test console output functions.

   Usage: repeat_line # string

	# = number of repetitions (default is 10, or previous value in process)
	string = initial test string (default is QBF, or previous stored value)

   Coded by C Garman.
   Edited 15 Sept 1970 for different handling of @ in new TTY DIM

   */

repeat_line: rpl: repeat: rpt: proc;

dcl (savec char(300) aligned,
     (n init(0), nwrite init(10)) fixed bin(17)) static;

dcl (pstr, pline) ptr,
    nstr fixed bin(17),
    ((str char(nstr), str1 char(1)) based(pstr)) unaligned,
    (i, saven, run init(0), cu_err) fixed bin(17),
    line char(300) aligned;

dcl cu_$arg_ptr entry(fixed bin, ptr, fixed bin, fixed bin),
    (ios_$read_ptr, ios_$write_ptr) entry(ptr, fixed bin, fixed bin),
    cv_dec_check_ entry(char(*), fixed bin, fixed bin),
    (ioa_, ioa_$rs) entry options(variable);

dcl (addr, char) builtin;

/* 
   */
	if n = 0
	then call ioa_$rs(
     "The ^Rquick^B brown ^Rfox^B jumps ^Rover^B the ^Rlazy^B dog^R.^B^/^-^a^/^-^a^/^-^a", savec, n,
		" !""#$%&'()*+,-./0123456789:;<=>?",
		"@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\]^_",
		"`abcdefghijklmnopqrstuvwxyz{|}~");

	pline = addr(line);

	call cu_$arg_ptr(1, pstr, nstr, cu_err);

	if cu_err = 0
	then do;

	     call cv_dec_check_(str, cu_err, i);

	     if cu_err = 0
	     then if i > 0
		then nwrite = i;

	     call cu_$arg_ptr(2, pstr, nstr, cu_err);

	     if cu_err = 0
	     then do;

		if nstr = 1
		then if str1 = "*"
		     then go to copy_saved_line;

		call ioa_$rs("^a", savec, n, str);

		go to copy_saved_line;

		end;

	     end;

	do while (run = 0);

	call ioa_("Type line (or _q or <NL>):");

	saven = n;			/* Save # of chars in saved buffer */
	call ios_$read_ptr(pline, 300, n);

	if n > 2
	then do;

save_line:     savec = line;

print_it:      saven = n;			/* May be redundant, but who cares */

	     do i = 1 to nwrite;

	     call ios_$write_ptr(pline, 0, saven);

	     end;

	     end;

	else if n = 1
	     then do;

		n = saven;			/* Restore char count */

copy_saved_line:
		line = savec;
		go to print_it;

		end;

	     else if char(line, 1) ^= "q"
		then go to save_line;
		else run = run + 1;

	end;

/* If we got a "q", restore count */

	n = saven;

end repeat_line;


*/
                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group Bull including Bull HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell Bull Inc., Groupe Bull
and Bull HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture for 
managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, Bull or Bull HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by Bull HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved

*/
