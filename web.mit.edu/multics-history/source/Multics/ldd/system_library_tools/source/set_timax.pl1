/* ***********************************************************
   *                                                         *
   * Copyright, (C) Honeywell Information Systems Inc., 1982 *
   *                                                         *
   * Copyright (c) 1972 by Massachusetts Institute of        *
   * Technology and Honeywell Information Systems, Inc.      *
   *                                                         *
   *********************************************************** */


set_timax: stm: proc;

/* program to set timax to allow higher usage of the processor by the user

   Usage:	set_timax n

   where "n" is the number of seconds to set timax to.  (A value
   of "0" will set it to the default: tc_data|timax.)

   coded by Roger Roach - April 26, 1971
   modified December, 1978 - P. B. Kelley - to call get_process_id_() 
							*/

dcl  arg char (arglen) based (argptr), argptr pointer,
    (arglen, ret_length, timax) fixed bin,
     code fixed bin (35),
     fnum float bin (27),
     ret_string char (120),
     ring_0_message char (ret_length) based (addr (ret_string)),
     bad_char char (1);

dcl  cu_$arg_ptr ext entry (fixed bin, ptr, fixed bin, fixed bin (35)),
     cv_float_ ext entry (char (*), fixed bin (35), float bin (27)),
     hphcs_$pxss_set_timax ext entry (bit (36), fixed bin),
    (com_err_, ioa_, ioa_$rs, phcs_$ring_0_message) ext entry options (variable),
     get_process_id_ ext entry returns (bit(36));
dcl  processid bit(36);
dcl  linkage_error condition;

	call cu_$arg_ptr (1, argptr, arglen, code);

	if code ^= 0 then do;
	     call com_err_ (code, "set_timax");
	     return;
	end;

	call cv_float_ (arg, code, fnum);

	if code ^= 0 then do;
	     bad_char = substr (arg, code, 1);
	     call com_err_ (0, "set_timax", "illegal character ""^a"" in argument ""^a"".", bad_char, arg);
	     return;
	end;

	timax = fnum * 1000000;

	if timax > 0
	     then call ioa_ ("setting timax to ^.1f seconds.", fnum);
	     else call ioa_ ("resetting timax to default.");

	processid = get_process_id_ ();

	on linkage_error begin;
	     revert linkage_error;
	     call com_err_ (0, "set_timax", "Insufficient access to reset timax.");
	     go to out;
	end;

	call hphcs_$pxss_set_timax (processid, timax);

	revert linkage_error;

	if timax > 0 then do;
	     call ioa_$rs ("setting timax to ^.1f seconds.", ret_string, ret_length, fnum);
	     call phcs_$ring_0_message (ring_0_message);
	end;
	else call phcs_$ring_0_message ("setting timax to default.");

out:
	return;

     end;


*/
                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group Bull including Bull HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell Bull Inc., Groupe Bull
and Bull HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture for 
managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, Bull or Bull HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by Bull HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved

*/
