<root>			<consistent> <dont-care>

<consistent>		<consistent-declaration>
			<consistent-literal-constant>
			<consistent-description>

<consistent-declaration>	<condition set>
			<builtin set>
			<generic set>
			<named constant set>
			<variable set>
			<defined-variable set>

<condition set>		external condition

<builtin set>		internal builtin

<generic set>		internal generic

<named constant set>	internal label constant dimension
			internal format constant
			<scope> <entry> constant
			<scope> file <consistent file description> constant

<scope>			internal
			external

<entry>			<function>
			<subroutine>

<function>		entry options options-variable <reducibility> returns

<reducibility>		reducible
			irreducible

<subroutine>		entry options options-variable irreducible

<consistent file description>	<stream description>
			<record description>

<stream description>	stream input
			stream output print environment interactive

<record description>	record <input-output-update> <access description> environment stringvalue

<input-output-update>	input
			output
			update

<access description>	<sequential description>
			<direct description>

<sequential description>	sequential keyed

<direct description>	direct keyed

<variable set>		variable <scope-storage-class-extents> <data-description>

<scope-storage-class-extents>	internal automatic
			internal based
			<scope> controlled
			internal member
			internal parameter
			internal static options options-constant
			external static
			internal return-value
			internal temporary

<data-description>		dimension <alignment> <data type> initial
			dimension <alignment> structure like

<alignment>		aligned
			unaligned

<data type>		<computational-type>
			<non-computational-type>

<computational-type>	<arithmetic>
			<string>
			<picture>

<arithmetic>		<base> <mode> <scale> signed precision
			real fixed binary unsigned precision

<base>			binary
			decimal

<mode>			real
			complex

<scale>			fixed
			float

<string>			<string-type> nonvarying
			<string-type> varying

<string-type>		bit
			character

<picture>			picture <mode>

<non-computational-type>	area
			<entry>
			file
			format local
			label local
			<locator>

<locator>			offset
			pointer

<defined-variable set>	variable internal defined <defined-data-description>

<defined-data-description>	dimension <alignment> <defined-data-types>
			dimension <alignment> structure position like

<defined-data-types>	<arithmetic>
			<picture>
			picture position
			<string-type> nonvarying position
			<string-type> varying
			<non-computational-type>

<consistent-literal-constant>	<literals> constant

<literals>		<arithmetic>
			<string-type>
			arg-descriptor
			storage-block

<consistent-description>	dimension parameter-desc <alignment> <data type> member
			dimension parameter-desc <alignment> structure like

<dont-care>		reserved-1 reserved-2 reserved-3 reserved-4 unused-1 abnormal
eof


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
