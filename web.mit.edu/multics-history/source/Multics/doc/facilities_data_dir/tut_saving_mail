     Both the send_mail and read_mail "commands" enable you to file mail away
for future reference.  The send_mail command enables you to save mail you are
sending to others, and read_mail enables you to save mail you've received.

     You save mail by using "requests" once you've started interacting with
the command, and both commands use the same requests for saving mail.  For
instance, whether you're dealing with mail you've written or received, the
copy request puts a copy of it in another mailbox, as in the following
example:

read_mail: copy 2 high_priority

The 2 refers to the number assigned to the piece of mail.

     The read_mail command automatically reads from your regular mailbox
unless you specify another mailbox by way of an "argument" to the command.  For
example:

read_mail high_priority

This, of course, is what you must do to read from one of the mailboxes you are
using to save mail.  You can also go to another mailbox from within read_mail
by using the execute request.  This request, whose short name is the letter e,
treats the rest of the line like a command.  So, if in response to a "prompt"
you type:

read_mail: e read_mail high_priority

you will go into the mailbox named high_priority.

     Below are listed some of the requests (with their short names) that
enable you to save mail:

copy (cp)  copies mail into another mailbox.

save (sv)  copies mail into a save mailbox (one with .sv.mbx suffixes).

forward (fwd)  sends mail to another user's mailbox (available only in
               read_mail).

write (w)  creates a segment and copies mail into it.

append  copies mail to the end of an existing segment.


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
