08/24/81 edit_error_list

Syntax:	edit_error_list NAME {-control_args}, eel NAME {-control_args}

Function:
The edit_error_list command performs the functions necessary to
create and maintain a Multics "Standard" Error List.  In the
default mode of operation, edit_error_list enters a request loop
where it reads user requests from the terminal until the quit
request causes it to exit.


Arguments:
NAME
   is an error list name.  If NAME does not have a suffix of
   error_list, then one is assumed.  However, the suffix error_list
   must be the last component of the segment.  If NAME contains a
   "<" or a ">" then it will be used as the pathname of the
   error_list.  Otherwise, the error_list search list will be used
   to find NAME.  The default error_list search list is
   >doc>iis>error_lists.


Control arguments:
-abbrev, -ab
   enables abbrev processing within edit_error_list. If this
   argument is specified and the -profile control argument is
   not given, then the users default (Personid.profile) profile 
   is used.
-profile PATH, -pf PATH
   causes abbrev processing using PATH. The suffix ".profile"
   need not be given, however, ".profile" must be the last
   component of PATH.
-request STR, -rq STR
   specifies an initial request line to be executed prior to
   entering the request loop.
-request_loop, -rql
   specifies that the edit_error_list request loop be entered.
   This is the default.


-quit
   exits after performing any operations specified by control
   arguments.  The default is to enter the request loop.
-prompt STR
   changes the prompt for edit_error_list request lines to STR.  If
   STR is "", the user is not prompted.
-no_prompt
   stops prompting for edit_error_list requests.  The default
   prompt is "eel(N):", where N is the recursion level
   if greater than one.  Equivalent to -prompt "".
-tr PATH
   causes eel to search PATH for a TR number. If a TR number is
   found, eel will search the specified error list for entries that
   contain the TR number. The "latest" entry containing the TR number is
   made "current". This control argment is useful with the read_mail
   apply request.
     apply eel ERROR_LIST_NAME -tr PATH


Request Line Syntax:
    A edit_error_list request line beginning with a ".." causes
the rest of the line to be passed to the command processor.

    The semicolon is used to separate multiple requests on a
line.


Notes:
For the sake of simplicity and flexibility, edit_error_list operates
on listin files (See AZ98 Section 7 for the description of lister and
listin files).  In order to implement certain requests, the comment
feature of lister will be employed.  Specifically, the
next_entry_number request has been implemented to store its value in
lister comments.  It is imperative for the proper operation of
edit_error_list that these comments not be moved, changed or deleted
except via the appropriate edit_error_list request.  In addition, a
"control segment" named NAME.ctl_seg is created when an error list is
created to store certain per error list variables.  Access to
NAME.error_list and NAME.ctl_seg should be rw for those persons who
will update the error list, and r for those persons allowed to use
the display_error_list command.

   The "interface" employed by edit_error_list with the MTRS is via
the answer_trouble_report command.


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
