09/05/87  tr_query, trq


Syntax: trq  {tr_ids} {-control_args}


Function:
The tr_query command allows a user to reference TRs selected from and
maintained in the TR database.  tr_query enters a request loop where
it reads user requests from the terminal until the quit request
causes it to exit.


Arguments:
tr_ids
   may be a list:  tr_id1 tr_id2 tr_id3... tr_idN
   tr_query selects the records specified by tr_ids.  Valid TR_IDS
   are TR numbers that have the form phxNNNNN, trNNNNN, TRNNNNN or
   NNNNN.  Insignificant digits need not be given.  For example, the
   following TR_IDS all identify the same report: TR891 00891 phx891
   phx00891 891.


Control Arguments:
-brief, -bf
   supresses the message "N records selected".
-input_file PATH, -if PATH
   specifies that the selection expression be obtained from an ASCII
   file designated by path.  A suffix of .trsl is assumed if not
   specified.  The user inputs the selection expression on one or more
   lines.
-long, -lg
   prints the message "N records selected" after a selection occurs.
   This is the default.


-abbrev, -ab
   enables abbreviation expansion and editing of request lines.
-no_abbrev, -nab
   disables abbreviation expansion and editing of request lines.
-profile PATH, -pf PATH
   specifies the pathname of the profile to use for abbreviation
   expansion.  The suffix "profile" is added if necessary.  This
   control argument implies -abbrev.


-prompt STR
   changes the prompt for tr_query request lines to STR.  If STR is
   "", the user is not prompted.  -prompt accepts "STR^[(^d)^]:  "
   which takes the form STR(N):, where N is the recursion level if
   greater than one.  The default prompt is "tr_query(N):  ", where N
   is the recursion level if greater than one. 
-no_prompt
   stops prompting for tr_query requests.  Equivalent to -prompt "".


-request STR, -rq STR
   specifies an initial request line to be executed prior to entering
   the request loop.  For example:

      -request "select submitter=Grey; print; quit"
-quit
   stops execution after processing the requests given with the
   -request control argument.
-request_loop, -rql
   enters the request loop after processing any requests given in the
   -request control argument.  This is the default.


Notes: Request lines use () for iteration, "" for quoting, and [] to
invoke tr_query active requests, listed below ("List of active
requests").  Any request line which begins with ".." will be passed
directly to the Multics command processor with the leading ".."
stripped off.  This is the recommended method for executing Multics
commands from within the tr_query subsysem, as the execute request is
cumbersome.


List of Requests: (in alphabetical order)
   Below is a list of tr_query requests.  For further information on
   these requests, use the tr_query "help" request.  For detailed
   information about the tr_query subsystem and its requests, see
   tr_query.gi.info.

abbrev, ab                       
   Turns abbrev on in a tr_query invocation.
answer 
   Provides preset answers to questions asked by another request.
append, app                      
   Appends the specified TRs to a given segment.
do
   Perform substitution into a request line before execution.
edit, ed
   Enters an editor to edit the current selection expression.
edm
   Enters edm to edit the current selection expression.
emacs                            
   Enters emacs to edit the current selection expression.


execute, e                       
   Execute a Multics command line.
help, h                          
   Print information on selected help topics.
if
   Conditionally executes one of two request lines depending on the
   value of an active string.
list, ls                         
   Lists the current selected TRs.
list_field_values, lfv           
   Lists the valid field values for given field names.
list_help, lh                    
   Print information on available help topics.
list_requests, lr
   List brief information about tr_query requests.


preface, prf                     
   Prefaces the specified TRs to a given segment.
print, pr, p                     
   Prints TRs from the current subset as specified.
print_selection_expression, pse  
   Prints the selection expression.
qedx
   Enters qedx to edit the current selection expression.
quit, q                          
   Exits the tr_query request loop.
ready, rdy                       
   Prints Multics ready message.
ready_off, rdf                   
   Turns off the Multics ready message.


ready_on, rdn                    
   Turns on the Multics ready message.
save, sv                         
   Saves the specified TRs numbers in given a segment.
save_selection_expression, sse   
   Saves the current selection expresion in a given segment.
select, sel, sl                  
   Selects TR reports from the TR database.
set_editor, sed                  
   Sets the editor to be invoked by the edit request.
set_output, so                   
   Lets the user set his own default output format
teco                             
   Enters teco to edit the current selection expression.


ted                              
   Enters ted to edit the current selection expression.
tr_edit                          
   Enters the editor specified by tr_edit to edit the selection
   expression.
write, w                         
   Writes the specified TRs to a given segment.
?
   Lists short and long names of trq requests.
.
   Prints information about the current state of tr_query.


List of Active Requests:
execute, e 
   executes a Multics command as an active string, and return its
   value.
do 
   Returns the request line after performing substitution into the
   line.  This request is identical to the Multics do active function.
if
   Returns one of two character strings to the subsystem request
   processor depending on the value of an active string.
list, ls
   returns the TR numbers of the current subset which would have been
   listed by the list request.


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
