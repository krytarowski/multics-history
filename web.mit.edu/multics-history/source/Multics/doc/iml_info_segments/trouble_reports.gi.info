09/06/87  Trouble Reporting

These trouble reporting commands are available on Multics-

enter_problem_report, epr
   for reporting problems in using Multics.
enter_question, eq
   for asking questions about Multics.
enter_suggestion, es
   for suggesting changes to Multics.
add_to_trouble_report, attr
   for adding information to an existing report.
answer_trouble_report, atr
   for use by developers to answer trouble reports.
answer_linked_trs, altr
   for use by developers to answer a set of linked TRs reporting the
   same problem.


display_tr, dtr
   for printing reports which have been entered, or searching for
   reports by area of system affected.
tr_query, trq
   for searching for reports by site, submittor, type, priority, area,
   etc.
print_tr_mail, ptrm
   prints transactions of a TR mailed to you in reverse order (ie, most
   recent first).
tr_number
   command/af which provides a canonical TR number.


print_tr_registration, ptrr
   prints the TR registration for a given user.
update_tr_registration, utrr
   to update your TR registration information


The commands operate by gathering pertinent information and submitting
it as mail to a trouble reports mailbox, >udd>TR>mbx>new_reports.mbx.
The commands format the information, check its accuracy, and assign a
trouble report number before mailing the report.  The send_mail command
should not be used to submit trouble reports.


The commands are self-explanatory in their operation, and include an
internal help facility describing requests for entering, printing,
editing and submitting the information in a report.  Use the Multics
help command to print a brief description of the commands, themselves.


Use enter_problem_report to report any problems in using these
commands.


The remainder of this file describes how to use the TR commands to
perform often-requested functions.


Obtaining documentation for TR system:
The TR system is documented by a series of info segments named below.

In >doc>iis
  tr.info		this info segment
  tr.states.info    documents state values used in TR answers
  tr.priorities.info
		documents priorities for problem reports
  tr.changes.info   documents changes made to TR system
  tr.status.info	documents known problems/suggestions in TR system itself
 (epr es eq attr atr altr).info
	          documents the commands
 (epr es eq attr atr altr).gi.info
		gives general information on use of the commands
 (ptrr utrr dtr ptrm tr_number).info
		documents the commands


In >doc>iis>tr_system
  (epr es eq attr atr altr).*.info
		detailed documentation for the requests available
		in this command's request loop


Edit your TR registration record:
When first using the TR commands, they gather information about you for
future use in trouble reports.  This information can be edited at any
time in the future by using the update_tr_registration command.  Just
type:

  utrr

Note that this will not enter a problem report, but just edits the
registration.


Entering problem reports with prompting for info:
The simplest usage of the trouble reporting commands prompts the user
for the information to be included in the trouble report.  Once all
prompts have been answered, the entire report can be printed, edited
and submitted using requests in the epr request loop.  To enter a
problem report via prompting, type:

  epr


epr begins by asking questions (prompting).  Some questions require
one-line answers.  The prompts for such questions leave the terminal
positioned on the same line as the prompt.  The answer ends with a
newline character.


Other questions require multi-line answers.  The prompts for such
questions leave the terminal positioned on the line following the
prompt.  The answer ends with a line containing just a period.


The commands are designed to prompt for information when the user may
not know how to enter a problem, question or suggestion.  To this end,
the commands ask some questions which may not be applicable to your
particular problem, question or suggestion.  To skip over such
questions, just give the answer delimiter (type a newline for one-line
answers, or type a line containing just a period for multi-line
answers).


During prompting, any answer can be edited by ending the answer with
\f.  The editor given in your TR registration is entered with the text
of the answer.  After the revised answer is written out from the
editor, the revised answer is validated and prompting for other
information continues.  

If you end an answer with \q, then the answer is validated and further
prompting stops.  The request loop is entered, allowing the user to
enter requests to print, alter or enter the information given so far.


Once all questions have been answered, epr enters the request loop and
prompts for requests by typing "epr:".  At this point, you can type ?
for a list of available requests and type "help request_name" for
information about any request.  Requests are available for printing and
editing the report, and for submitting the report.


The enter request submits the report.  It can optionally store the
report in a mailbox for your future reference.  For example,

  enter -save my_trs

submits the report, saves a copy in my_trs.sv.mbx in the working
directory, and exits the epr command.  Note that "send -ack" does not
give you an acknowledgment when the TR administrator reads the report.
It invokes send_mail to send the report to another user (with
acknowledgment), and then send_mail reports an error when it finds no
user addresses have been specified.


Entering problem reports with brief prompting:
The TR commands can be invoked in a brief mode of operation which asks
only essential questions.  To enter a problem report in brief mode,
type:

   epr -rql -rq "add -rqd" -bf

After answering the required questions, epr enters the request loop.
You can use the add request to add other (nonrequired) fields pertinent
to your report.  Use the list_fields (lfl) request to print a list of
fields which can be supplied.


Entering problem reports via editor:
Some users prefer to enter problem reports by filling in a report
template using an editor.  The command

   epr -rql -rq edit

enters the editor with a template report.  (The user's choice of editor
is given in the TR registration information.) The user can essentially
fill in the blanks, save the file and quit out of the editor.  At this
point, epr enters its request loop and the send request can be used to
submit the report.  Many users like this method of TR entry, because it
allows editing of the data as it is typed in.


How Site SAs can specify site and release:
For most users, the name of the site and release to which the problem
report applies default to the current site and release name.  However,
Site SAs must specify these values in their reports.  To avoid being
asked these values in each report, the values for site and release
reflecting the site you represent can be stored in an input file.  For
example

  site:	  Ford
  release:  MR9.1

To invoke epr using this file with prompting for the remaining
questions, type:

  epr -if my_site_defaults 

This could be stored as an abbreviation to save repetitive typing.  To
invoke epr with this file and use editor to answer remaining questions,
type:

  epr -if my_site_defaults -rq edit


How developers can answer trouble reports with no prompting: In many
cases, trouble reports can be answered by giving state and
error_list_info values without any additional information.  The
following command line does this:

  atr TRnumber -st STATE -eli pl1 1234 -rql -rq send

or from within read_mail, use the apply request as

  ap -dl atr -st STATE -eli pl1 1234 -rql -rq send


How developers can transfer a report to another developer:
In some cases, a trouble report is sent to the wrong developer.  If you
know who the report should be sent to, type:

  ! attr TRnumber
    added info:
  ! Transfer this report to developer_name.
  ! .
    attr:  ! send

If you don't know which developer is responsible for the report, type:

  ! attr TRnumber
    added info:
  ! I am not responsible for this area of the system.
  ! .
    attr:  ! send


How developers can change type of a report:
To change the type of a report as it is being answered, the developer
can use atr as follows:

     atr TRnnnn -type new_type -state new_state -eli error_list_info

This form specifies the new type, and a new state appropriate to that
type, plus error list information.  It is also possible to specify the
new type from atr request level, after the answer (and perhaps, a state
appropriate to the old type) have already been entered.  To do this,
use the replace request:

     rp type

You will then be prompted for the new type.  If the state given
previously is not appropriate to the new type, you will be prompted for
a new state as well.  Also, if the type is being changed from
suggestion or question to a problem, you will be prompted for a problem
priority.


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
