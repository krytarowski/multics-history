01/07/81  Severity Indicators


Severity indicators can be thought of as integers that represent the highest
level of error encountered in the invocation of a command or exec_com.
They are usually referenced by the same name as the command or exec_com
and are described in documentation under the heading of "Severity."

The severity command or active function can be used to display or test
the value of a specified severity indicator.  The
set_severity_indicator command can be used to assign a value to a
severity indicator from command level.  This is useful in exec_coms
that wish to implement severity indicators.


Severity Indicators in PL/I:  In PL/I a severity indicator X is
referenced by declaring an external fixed bin (35) variable with the
name X_severity_.  For example:

dcl X_severity_ fixed bin (35) ext;
X_severity_ = 0;


Severity Indicators in FORTRAN:  In FORTRAN a severity indicator X is
referenced by declaring a labelled common block with the name
X_severity_.  For example:

integer a
common /X_severity_/a
a = 0


Severity Indicators in command language:  In the command language of Multics
severity indicators can be referenced using the severity command/active
function and set using the set_severity_indicator command.  For example to set
and then display the severity indicator X the user would enter:

set_severity_indicator X 12
severity X

and the value of 12 would be displayed.


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
