05/27/88  canonicalize, canon

Syntax as a command:  canon path1 {path2} {-control_args}


Function:  ensures that the contents of a single segment (SSF) or
a multisegment file (MSF) are in canonical form.


Arguments:
path1
   is the pathname of the input single segment or multisegment file.
path2
   is the pathname of the output single segment or multisegment file.
   If path2 is omitted, path1 is overwritten with the canonicalized
   contents of the input single segment or multisegment file.


Control arguments:
-force, -fc
   causes the output file to be overwritten without querying.
-no_force, -nfc
   causes canonicalize to query before overwriting an existing
   segment.  (Default)
-input_tabs -every X, -itabs -ev X
   replaces tabs with the appropriate number of spaces, assuming that
   tabs stops are at 1+n*X (where n= 1, 2, 3, ...).
-input_tabs n1,n2,...,n20, -itabs n1,n2,...,n20
   replaces tabs with the appropriate number of spaces, assuming that
   tab stops are as specified.


-output_tabs -every X, -otabs -ev X
   inserts tabs at 1+n*X (where n= 1, 2, 3, ...).
-output_tabs n1,n2,...,n20, -otabs n1,n2,...,n20
   inserts tabs at the tab stops specified.  Up to 20 tab stops can be
   given.  No spaces are allowed in the list.
-no_output_tabs, -notabs
   does not insert tabs into output.  (Default)


-temp_file PATH, -tf PATH
   specifies the temporary file used to build the canonicalized data
   during operation of the command.  By default, canon uses a uniquely
   named file in the process directory.  However, when canonicalizing
   a large file, there may not be enough quota in the process directory
   to hold a copy of the file.  This control argument allows selection
   of a directory with more quota, and naming of the temporary file.
   If canonicalization is interrupted (by quitting, by a process
   failure or system crash), the temporary file may contain the only
   consistent copy of the data.  The equal convention may be used to
   specify a temporary file name similar to the original file name.
   For example, "-tf ===.canon" creates a temporary file in the working
   directory named after the original file, with a .canon suffix.


Notes:  The command ensures that all characters in a print position are
sorted in the proper order and removes all ASCII carriage return (015)
characters.  When the -otabs control argument is specified, the
canonicalize command replaces blank spaces with the appropriate tab
stops.  Conversely, if the -otabs argument is not specified, horizontal
tab stops are replaced by the correct number of blank spaces.


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
