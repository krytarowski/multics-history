12/28/82  mvt_

The mvt_ subroutine provides for extremely efficient translation of
character strings using translations which are not known at compile
time.


Entry points in mvt_:
   (List is generated by the help command)


:Entry: mvt_: 12/06/82  mvt_ (entry)


Syntax:
declare mvt_ entry (ptr, ptr, fixed bin(21), char(512) aligned);
call mvt_ (input_string_ptr, output_string_ptr, string_lth,
     translate_table);


Arguments:
input_string_ptr
   is a pointer to the unaligned string to be translated.  (Input)
output_string_ptr
   is a pointer to the string where the results of the translation will
   be placed.  (Input)
string_lth
   is the length of both the input string and the output string in
   characters.  (Input)
translate_table
   is the translation table which defines the actual translation.  See
   mvt_$make_translation_table for a description of how to create this
   table.  (Input)


:Entry:  make_translation_table:  12/06/82 mvt_$make_translation_table


Function:  This entry point creates the translation table used by the
mvt_ subroutine given the second and third arguments which would be
supplied to the PL/I translate builtin function.


Syntax:
declare mvt_$make_translation_table entry (char(*), char(*), char(512)
     aligned);
call mvt_$make_translation_table (translated_list, untranslated_list,
     translate_table);


Arguments:
translated_list
   is the second argument to the PL/I translate builtin and specifies
   the result of translating any occurrence of the corresponding
   characters in untranslated_list present in the input string of the
   mvt_ entry described above.  (Input)
untranslated_list
   is the third argument to the PL/I translate builtin and specifies
   the list of characters which will be translated if found in the
   input string.  (Input)
translate_table
   is set to the translate table which defines the desired translation.
   (Output)


Notes:  The table constructed by this subroutine will cause any
occurence of the N'th character in untranslated_list present in the
input string of mvt_ to be converted into the N'th character in
translated_list.  See the description of the PL/I translate builtin for
more information.

If the PL/I builtin would have been used with only two arguments, use
the value of the collate9 builtin for the untranslated_list argument.


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
