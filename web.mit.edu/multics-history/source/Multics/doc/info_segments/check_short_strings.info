06/18/80	check_short_strings

Syntax:  check_short_strings path


Function:	 checks a program for some particular cases of invalid PL/I that will
no longer happen to work in PL/I Release 26.


Arguments:
path
   is the pathname of a PL/I source segment; the pl1 suffix may be omitted.


Notes:  For information on how PL/I release 26 differs from previous releases,
please see pl1_code_changes.info.  Check_short_strings only checks for some
entry misdeclarations; it does not check for misdeclarations in based variables
or external static variables.

Check_short_strings will indicate if a program misdeclares an entry so there is
a mismatch in the alignment attribute for short bit string or short character
parameters or return values, and the invalid program would have happened to
work with PL/I release 25 and will not work in PL/I release 26.  Programs with
this type of misdeclaration declare an entry to have an unaligned short string
parameter or return value, the called program actually has the parameter or
return value declared aligned, and the argument passed to the entry is a member
of a structure and starts on the first bit of a word.  If the argument is a
level one variable, the values of any pad bits to the right of the value of the
variable are not used for data.  If the argument doesn't start on the first bit
of the word, the programs fail with PL/I release 25 and check_short_strings
will not indicate this.  Check_short_strings is designed to only catch invalid
programs that happened to work with release 25 and won't work with release 26.


Check_short_strings compiles the program in the process directory.  It then
checks all call statements and function references to see if a short string
argument is a member of a structure and starts on a word boundary.  If this is
the case, it initiates the called program using the search rules and checks the
called program's argument descriptors to see if the corresponding parameter or
return value is aligned.  If so, it prints a message.


Check_short_strings must be able to find PL/I release 26 via the search rules.


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
