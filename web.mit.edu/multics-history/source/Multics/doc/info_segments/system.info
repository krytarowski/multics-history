01/14/87 system

Syntax as a command:  system key


Syntax as an active function:  [system key]


Function:  returns various installation-dependent system parameters.
The return value is requoted and therefore handled as a single
argument.


List of keys:
all
   prints all the information available in alphabetical order sorted by
   keyword name.  You can't use it in the active function.
company
   is the company name.
date_time_last_down
   is the date and time that service was last interrupted by shutdown
   or crash.
date_time_last_up
   is the date and time that the system was brought up.
date_time_next_down
   is the date and time that service will next be shut down if
   specified by the operator.
date_time_next_up
   is the date and time that the system will next be brought up if
   specified by the operator.
date_time_shift_change
   is the date and time at which the current shift number will change
   to next_shift.
default_absentee_queue
   is the default absentee queue.
department
   is the computer center department name.
ds_company
   is the company name, with the characters of the name double spaced.
ds_department
   is the computer center department name, with the characters of the
   name double spaced.
installation_id
   is the installation identification.
last_down_reason
   is the reason for the last system service interruption if known.
   The reason can be:
      shutdown  normal system shutdown
      crash     system crash (no number assigned)
      N         number of system crash
max_rate_structure_number
   returns the largest valid rate structure number.  If it is zero,
   there are no rate structures defined at this site other than the
   default one in installation_parms.
max_units
   is the current maximum number of load units, in the form "nnn.n".
max_users
   is the current maximum number of users.
n_units
   is the current number of logged-in load units including daemon and
   absentee, in the form "nnn.n".
n_users
   is the current number of logged-in users including daemon and
   absentee.
next_shift
   is the next shift number.
rate_structure_name {rs_number}
   returns the name of the rate structure corresponding to rs_number.
   If you give no number, the names of all rate structures defined at
   the site are returned in ascending order by rate structure number,
   separated by blanks, in a single string.
rate_structure_number {rs_name}
   returns the number corresponding to rs_name.
reason_down
   is the reason for next shutdown if specified by the operator.
session_type
   returns the type of Multics session currently in force.  This will
   be "init" (during answering service initialization), "special"
   (during special session), "normal" (during normal service), and
   "shut" (during shutdown).
shift
   is the current shift number.
sysid
   is the system identifier as written on the hardcore system tape
   currently running.  Normally this is the Multics release number
   (e.g., MR10.2).  This information is different from the one obtained
   with version_id.
trusted_path_login
   returns "true" if logout -hd and new_proc -auth are disabled,
   "false" otherwise.
version_id
   is the version identifier as written on the MULT tape that was used
   to bring up the current system.  You might set this to "37-19.3",
   which is an internal version number.  This information is different
   from the one obtained with sysid.


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
