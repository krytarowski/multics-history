04/27/84  dpunch, dpn

Syntax as a command:  dpn {-control_args} {paths}


Function:  queues specified segments and/or multisegment files for
punching by the Multics card punch.  It is similar to dprint.

Use enter_output_request; it has functionally replaced dpunch.


Arguments:
paths
   are pathnames of segments and/or multisegment files.  The star
   convention is not allowed.


Control arguments:
-7punch, -7p
   punches the specified paths using 7-punch conversion.  It can be
   overruled by either -mcc or -raw.
-brief, -bf
   suppresses the message "j requests signalled, k already queued.
   (request_type queue)."  This control argument cannot be overruled
   later in the command line.  (See -request_type and -queue below.)
-copy N, -cp N
   punches N copies (N <= 4) of specified paths.  It can be overruled
   by a subsequent -copy.  If pathi is to be deleted after punching,
   all N copies are punched first.  If this control argument is not
   specified, one copy is made.


-defer_until_process_termination, -dupt
   does not process the request until the requesting process
   terminates.  Process termination is caused by the logout command,
   new_proc, or a fatal process error.
-delete, -dl
   deletes (after punching) all specified paths.
-destination STR, -ds STR
   uses the string STR to determine where to deliver the deck.  If not
   specified, the default is your Project_id.  This control argument
   can be overruled by a subsequent -destination.
-header STR, -he STR
   identifies subsequent output by the string STR.  If not specified,
   the default is your Person_id.  This control argument can be
   overruled by a subsequent -header.


-mcc
   punches the specified paths using character conversion.  It can be
   overruled by either -raw or -7punch.  (Default)
-notify, -nt
   sends a confirming message when the requested output is done,
   showing the pathname and charge.
-queue N, -q N
   punches specified paths in priority queue N (N <= 4).  It can be
   overruled by a subsequent -queue.  If not specified, the default
   queue for the request type is assumed.  (See "Notes" below.)


-raw
   punches the specified paths using no conversion.  It can be
   overruled by either -mcc or -7punch.
-request_type STR, -rqt STR
   places specified paths in the queue for requests of the type
   identified by the string STR (see "Notes" below).  If not specified,
   the default request type is "punch."


Access required:  You require r access to the segment or multisegment
file.

The process that performs the punching (as obtained by
print_request_types) must have at least r access to the file and at
least s access to the containing directory to verify that you also have
at least r access to the file.

If -delete is specified, the I/O coordinator (normally IO.SysDaemon.z)
must have at least m access to the containing directory and at least s
access to the parent directory of the containing directory to verify
that you also have at least m access to the containing directory.


Notes:  If you invoke dpunch without any arguments, the system prints a
message giving the status of the default punch queue.

If control arguments are present, they affect only paths specified
after their appearance on the command line.  If control arguments are
specified without a following pathi argument, they are ignored for this
invocation of the command and a warning message is printed.


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
