10/17/84  list_iacl_dir, lid

Syntax as a command:  lid {path} {User_ids} {-control_args}


Syntax as an active function:  [lid {path} {User_ids} {-control_args}]


Function:  lists some or all the entries on a directory initial access
control list (initial ACL) of a specified directory.


Arguments:
path
   specifies the directory in which the directory initial ACL should be
   listed.  If path is -working_directory (-wd) or omitted, your
   working directory is assumed; if omitted, you can't specify
   User_ids.  The star convention is allowed.
User_ids
   are access control names of the form Person_id.Project_id.tag.  All
   access names matching the given User_ids are listed.  If you don't
   give User_id, the entire initial ACL is listed.


Control arguments:
-brief, -bf
   suppresses the message "User name not on ACL of path."  If you
   invoke lid as an active function and User_id is not on the initial
   ACL, the null string is returned.
-chase
   chases links matching a star name.  The default is to chase a link
   only when specified by a nonstarred pathname.
-no_chase
   does not chase links.
-ring N, -rg N
   identifies the ring number whose directory initial ACL is to be
   listed.  It can appear anywhere on the line and affects the whole
   line.  If present, follow it by N (where 0 <= N <= 7).  If omitted,
   your ring is assumed.


Access required:  You must have status permission on the containing
directory.


Notes:  If you invoke list_iacl_dir without any arguments, the entire
initial ACL for your working directory is listed.

A directory initial ACL contains the ACL entries to be placed on
directories created in the specified directory.

For information on initial ACLs, see the Programmer's Reference Manual.
For a description of the matching strategy for User_ids, see the
set_acl command.


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
