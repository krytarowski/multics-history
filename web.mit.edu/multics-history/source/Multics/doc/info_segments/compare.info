02/07/85  compare

Syntax as a command:
   compare path1{|offset1} path2{|offset2} {-control_args}


Syntax as an active function:
   [compare path1{|offset1} path2{|offset2} {-control_args}]


Function: compares two files (segments, multisegment files, or archive
components) and lists their differences.  The comparison is a
word-by-word check and can be made with a mask so that only specified
parts of each word are compared.  The active function returns true if
the compared portions are identical, false otherwise.


Arguments:
path1, path2
   are the pathnames of the files to be compared.  The equal convention
   is allowed for path2.  Either can be an archive component pathname.
offset1, offset2
   are octal offsets within the files if they are segments or archive
   components.  If you omit them, the entire contents are compared.
   The comparison begins at the word specified or at the first word of
   the segment if you specify no offset.


Control arguments:
-brief, -bf
   prints only the first and last words of each block of discrepancies
   that is four or more words in length (see "Notes").
-inhibit_error, -ihe
   causes the active function to return "false" rather than produce an
   error if one of the files to be compared does not exist.  An error
   still occurs if neither file exists.
-length N, -ln N
   makes the comparison continue for no more than N (octal) words.
-long, -lg
   prints all discrepancy words (see "Notes").  (Default)
-mask N
   uses the octal mask N in the comparison.  If N is less than 12 octal
   digits, it is padded on the left with zeros.


-no_inhibit_error, -nihe
   suppresses the effect of -inhibit_error.
-short, -sh
   prints a single line for each block of discrepancies:
       120 words at:  1631
      1100 words at: 33404
   (See "Notes.")
-totals, -tt
   prints a single line for the entire comparison:
      17 differences, 3140 words total.


Notes: The maximum number of words to be compared is the word count of
the first segment minus its offset or the word count of the second
segment minus its offset, whichever is greater.  If you supply -length,
comparison stops after the specified number of words.  If the segments
are of unequal length, the remaining words of the longer segment are
printed as discrepancies.  The word count of a segment is computed by
dividing the bit count plus 35 by 36.  If the word count minus the
offset is less than zero, an error message is printed and the command
is aborted.  Any discrepancies found by the command are listed in the
following format:
   offset      contents        offset             contents
      4      404000000002        4              000777000023
      6      404000000023        6              677774300100


To compare segments containing only ASCII character string data, use
the compare_ascii command.

Multisegment files (MSFs) are compared component by component, with
headers of the form "Component <n>:".  Excess components of the longer
MSF are listed, the same as for excess words in a longer segment.  When
a segment is compared to an MSF, a header of the form
"Segment/component 0:" or "Component 0/segment:" is printed at the
beginning.

You can't use -brief, -long, and -short in the active function.


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
