02/02/84  signal_


Entry points in signal_:
   (List is generated by the help command)


:Entry: signal_: 02/02/84  signal_


Function: signals the occurrence of a given condition.  A description
of the condition mechanism and the way in which a handler is invoked
by the signal_ subroutine is given in the Programmer's Reference
Manual.


Syntax:
declare signal_ entry options (variable);
call signal_ (name, mc_ptr, info_ptr, wc_ptr);


Arguments:
name
   is the name (declared as a nonvarying character string) of the
   condition to be signalled.  (Input)
mc_ptr
   is a pointer (declared as an aligned pointer) to the machine
   conditions at the time the condition was raised.  This argument is
   used by system programs only in order to signal hardware faults.  In
   user programs, this argument should be null if a third argument is
   supplied.  This argument is optional.  (Input)


info_ptr
   is a pointer (declared as an aligned pointer) to information
   relating to the condition being raised.  The structure of the
   information is dependent upon the condition being signalled;
   however, conditions raised with the same name should provide the
   information in the same structure.  All structures must begin with a
   standard header.  The format for the header as well as the
   structures provided with system conditions are described in the
   Programmer's Reference Manual.  This argument is intended for use in
   signalling conditions other than hardware faults.  This argument is
   optional.  (Input)


wc_ptr
   is a pointer (declared as an aligned pointer) to the machine
   conditions at the time a lower ring was entered to process a fault.
   This argument is used only by the system and only in the case where
   a condition that occurred in a lower ring is being signalled in the
   outer ring and when the lower ring has been entered to process a
   fault occurring in the outer ring.  This argument is optional.


Notes:  If the signal_ subroutine returns to its caller, indicating
that the handler has returned to it, the calling procedure should retry
the operation that caused the condition to be signalled.

The PL/I signal statement differs from the signal_ subroutine in that
the above parameters cannot be provided in the signal statement.  Also,
for PL/I-defined conditions, a call to the signal_ subroutine is not
equivalent to a PL/I signal statement since information about these
conditions is kept internally.


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
