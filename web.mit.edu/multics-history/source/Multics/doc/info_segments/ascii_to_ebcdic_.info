02/13/84  ascii_to_ebcdic_

The ascii_to_ebcdic_ subroutine performs isomorphic (one-to-one
reversible) conversion from ASCII to EBCDIC.  The input data is a
string of valid ASCII characters.  A valid ASCII character is defined
as a 9-bit byte with an octal value in the range
0 <= octal_value <= 177.

Calling ascii_to_ebcdic_ is as efficient as using the PL/I translate
builtin, since conversion is performed by a single MVT instruction and
the procedure runs in the stack frame of its caller.


Entry points in ascii_to_ebcdic_:
   (List is generated by the help command)


:Entry: ascii_to_ebcdic_: 02/13/84  ascii_to_ebcdic_


Function: This entry point accepts an ASCII character string and
generates an EBCDIC character string of equal length.


Syntax:
declare ascii_to_ebcdic_ entry (char(*), char(*));
call ascii_to_ebcdic_ (ascii_in, ebcdic_out);


Arguments:
ascii_in
   is a string of ASCII characters to be converted.  (Input)
ebcdic_out
   is the EBCDIC equivalent of the input string.  (Output)


:Entry:  ae_table:  02/13/84 ascii_to_ebcdic_$ae_table


Function:  This entry point defines the 128-character translation table
used to perform conversion from ASCII to EBCDIC.  The mappings
implemented by the ascii_to_ebcdic_ and ebcdic_to_ascii_ subroutines
are isomorphic; i.e., every valid character has a unique mapping, and
mappings are reversible.  (See the ebcdic_to_ascii_ subroutine.)  The
result of an attempt to convert a character that is not in the ASCII
character set is undefined.


Syntax:
declare ascii_to_ebcdic_$ae_table char(128) external static;


Notes:  Refer to the Subroutines manual for the isomorphic
ascii/ebcdic conversion table.


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
