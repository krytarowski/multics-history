08/02/84  gcos_extract_module, gcem

Syntax as a command:  gcem control_path input_path output_path
   {-control_arg}


Function:  This command extracts one or more modules from a (tape
format) GCOS system-loadable file, or a simulator-format software
library, placing them in an output file.  The names of the modules to
be extracted are given in a control file.


Arguments:
control_path
   is the pathname of a segment containing the names of the modules to
   be extracted (in lowercase ASCII), each on a separate line.  This
   segment can be created by the gcos_library_summary command, using
   the -brief control argument and preceding it by the file_output
   command, and then editing the resulting segment to remove the names
   of unwanted modules; or the segment can be created directly by any
   of the Multics editors.
input_path
   is the pathname of a file containing GCOS modules.  It can be a file
   copied from a GCOS total system tape with gcos_pull_tapefile, or it
   may be a simulator-format library produced by gcos_build_library.


output_path
   is the pathname of the output file into which the extracted modules
   are to be written.  If the file already exists, it is appended to,
   enabling the construction of a single library from several smaller
   ones.
control_arg
   can be -brief which inhibits printing the name of each module
   copied.


Notes:  The names of each module copied are printed on user_output,
unless the -brief control argument is given.  The names of any
requested modules that are not found in the input file are printed on
error_output.

This command cannot be used to manipulate a random system-loadable file
(GCOS format **, Q* or H* file).


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
