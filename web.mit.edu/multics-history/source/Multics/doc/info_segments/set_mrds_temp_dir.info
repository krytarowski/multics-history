08/02/84  set_mrds_temp_dir, smtd

Syntax as a command:  smtd directory_path


Function:  In the next call to dsl_$open this command changes the
current pathname of the directory that is used for temporary storage.
The temporary storage used is for the "resultant model" built during
open time, for temporary relation storage, and for intermediate search
results.  The initial default for this directory is the process_dir.
This command need only be used prior to the particular opening where a
very large resultant model is built, large temporary relations are to
be defined, or searches involving many tuples in several relations are
to be done.  A record quota overflow in the process directory during a
call to dsl_$open, dsl_$retrieve, or dsl_$define_temp_rel indicates
this need.


Arguments:
directory_path
   is the relative or absolute pathname of a directory with more quota
   than the current temporary directory.  The initial default is to use
   the process directory.


Notes:  The temporary directory may be changed between calls to
dsl_$open, thus resulting in different temporary directories for each
opening.  These may be displayed via display_mrds_temp_dir.

This command should only be used to avoid a record quota overflow in
the process directory upon a call to dsl_$open, dsl_$retrieve, or
dsl_$define_tem_rel.  If a record quota overflow occurs in one of these
calls, do a new_process, then set_mrds_temp_dir with a pathname of a
directory that has more quota.  If another record quota overflow occurs
in that directory, set_mrds_temp_dir can be used again giving a
directory with even more quota.

See dsl_$set_temp_dir for a subroutine interface.


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
