

06/11/86  mrpg

Syntax:  mrpg path {pl1_control_args}


Function:  The mrpg command invokes the MRPG to translate a segment
containing MRPG source statements into a segment containing PL/I source
statements.  Then the PL/I compiler is automatically invoked to
translate the segment containing PL/I source statements into a standard
Multics object segment.  PL/I control arguments may be supplied with
the mrpg command.  These PL/I control arguments are passed on by the
MRPG to the PL/I compiler.  The results are placed in the user's
working directory.  The mrpg command cannot be called recursively.  For
information on PL/I, refer to the PL/I manuals.


Arguments:
path
   is the pathname of the MRPG source segment that is to be translated
   by the MRPG.  If path does not have a suffix of mrpg, then one is
   assumed.  However, the suffix mrpg must be the last component of
   the name of the source segment given.
PL/I control_arguments (optional)
   can be chosen from the list of control arguments for the pl1
   command in the MPM Commands.  No checking is done by the MRPG
   on the supplied PL/I control arguments.


Notes:  The PL/I source segment produced by the MRPG is placed in the
user's working directory.  This segment's name is the same as the name
of the segment supplied as input to the MRPG except that the mrpg
suffix is replaced with a pl1 suffix.


The PL/I source segment is not deleted by the MRPG.


The object segment produced by the PL/I compiler is placed in the
user's working directory.  This segment's name is the same as the name
of the original source segment with the mrpg suffix omitted.







                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
