06/01/78 PL/I decimal data and the command hunt_dec.

The command hunt_dec is a tool to aid the user when the new
PL/I compiler implementing packed decimal is made available.
This will be an incompatible change because the layout of
variables containg both the unaligned and decimal attributes will
be changed.  Therefore, it is necessary for the user to find
those PL/I programs which currently use "unaligned decimal" so
that the appropriate program and data base changes can be mode
before recompiling the program using the new compiler.


Classification algorithm:
The algorithm hunt_dec uses to classify PL/I object segments
is simple.  The text section is scanned for EIS decimal
arithmetic instructions generated by the PL/I compiler.  If none
are found the object segment is classified as "no decimal".  If
decimal instructions are found, they and their descriptors are
examined for address modification and nonzero digit offsets.  If
either is present, the object segment is classified as "decimal
unaligned", otherwise it is classified as "decimal aligned".


Validity of classification:
The validity of the classification algorithm rests upon
knowledge of how the PL/I compiler generates machine code.  Below
is a table listing the reliability of the algorithm for the
different classifications.


CLASSIFICATION                RELIABILITY

unaligned decimal             Always correct.

aligned decimal               Fails when an unaligned decimal
                              variable happens to falls on a word
                              boundary.  For example,
                                   dcl 1 record aligned,
                                        2 item1 fixed bin(17),
                                        2 item2 fixed dec(3)
                                        unaligned;   .
                              The variable, item2, is unaligned
                              decimal.  But, since it is located
                              one word from the beginning of the
                              structure the instruction accessing
			it appears to be accessing ALIGNED
                              decimal data.

no decimal                    If fixed decimal variables are
                              present in the source program but
                              are never referenced or do not have
                              the initial attribute, no EIS fixed
                              decimal instructions are generated
                              by the compiler.

     The important point to be made is that the hunt_dec command
will correctly identify PL/I object segments that use unaligned
decimal data most of the time while letting a few segments slip
by misclassified as aligned decimal or no decimal.


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
