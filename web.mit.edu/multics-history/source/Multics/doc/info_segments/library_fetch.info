02/10/86  library_fetch, lf

Syntax as a command:  lf {search_names} {-control_args}


Function: fetches entries from a library.  It functionally replaces
get_library_segment.  You can fetch segments, archives, archive
components, multisegment files (MSFs), and MSF components.


Arguments:
search_names
   are star names identifying the library entries to be fetched.
   Defaults differ for each library descriptor.


Control arguments:
-all, -a
   includes in the output file complete status information for fetched
   entries.
-all_matches, -amch
   fetches all matching entries.  (Default, if you supply more than one
   search name, any star names, or -components)
-brief, -bf
   suppresses printing of information about fetched entries.  (Default)
-chase
   fetches through links.
-components, -comp
   fetches library entries contained in, or with, a matching entry; it
   implies -all_matches.


-container, -cont
   fetches the library entry containing a matching library entry,
   rather than the matching entry itself.
-default, -dft
   includes in the output file default status information for fetched
   entries.
-entry, -et
   fetches matching library entries only.  (Default)
-descriptor desc_name, -desc desc_name
   specifies the descriptor defining the libraries to be searched.
-first_match, -fmch
   fetches the first matching entry only.  (Default, if you specify
   only one search name)


-into path
   fetches library entries into the specified pathname (absolute or
   relative).  The directory portion of the pathname identifies the
   directory into which each library entry is copied; the final
   entryname of the pathname renames each library entryname being
   placed on the copy.  You can give an equal name as the final
   entryname of the path.  Use -into only once in a command line.  If
   not given, matching entries are copied into your working directory
   and no renaming occurs.
-library library_name, -lb library_name
   fetches entries in the specified library.  You can use star names.
   You can supply up to 100 -library control arguments; if you give
   none, any default library names specified in the library descriptor
   are used.


-long, -lg
   prints information about fetched entries.
-match
   puts entrynames that match a search name on the fetched entry.
   (Default)
-name, -nm
   puts all the entrynames on the fetched library entry.
-no_chase
   does not fetch through links.  (Default)
-omit
   does not fetch library entries awaiting deletion.  (Default)
-output_file filename, -of filename
   appends status of fetched library entries to named file.


-primary, -pri
   puts first entryname on fetched library entry.
-retain, -ret
   fetches library entries awaiting deletion.
-search_name search_name
   gives search_name that looks like a control argument.  You can
   supply one or more -search_name control arguments.


Notes: You can give any combination of the control arguments governing
naming (-name, -primary, and -match).  However, select only one from
each group of the following: -chase or -no_chase; -long or -brief;
-container, -components, or -entry; -retain or -omit; and -all or
-default.

You must use -output_file if you give -all or -default.


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
