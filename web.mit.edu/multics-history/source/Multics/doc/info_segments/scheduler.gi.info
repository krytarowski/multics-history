:Info: scheduler.gi: 02/26/82 scheduler

     The module in the system that determines when a process is to run
and how long it will run.  It also notifies processes of events that
have occurred such as timers, I/O events, and signals from other
processes.


:Info: search_rules.gi: 02/26/82 search rules

     A list of directories that are searched to find a command,
subroutine, or data item referenced symbolically.  Each directory is
examined, in order, to find the given external name.  Search rules are
not used when a segment is addressed by its pathname, which explicitly
specifies the directory containing the segment.


:Info: segment.gi: 02/26/82 segment

     Basic unit of information within the Multics storage system.
Each segment has access attributes, at least one name, and may contain
data, programs, or be empty (null).


:Info: short_name.gi: 03/05/82 short name

     The shortened version of a command or control argument name, used
interchangeably with the full name.  The short names are listed in
individual command descriptions.


:Info: shriek_name.gi: 02/26/82 shriek name

     A name, generated from a system clock value, that is guaranteed
to be different from any other name so generated (e.g.,
!BBBnZNlqLQddRJg).  See the description of the unique command.


:Info: snap.gi: 02/26/82 snap (to snap a link)

     The process of finding that segment (and entry point in the
segment) that is referenced by a link pair and replacing the link pair
with a pointer to that entry point.  This is part of the dynamic
linking mechanism, by which external symbolic references (subroutine
calls, PL/I external variables) are resolved while the program is
running.


:Info: source_segment.gi: 03/05/82 source segment

     A program that exists on line in language form.  It must be
converted to an object segment by compilation before it can be
executed.


:Info: standard_service_system.gi: sss.gi: SSS.gi: 02/26/82 standard_system_service (SSS)

     A group of commands and subroutines that are provided as part of
the standard Multics system.  They are located in the directories
>system_library_standard, >system_library_unbundled, and
>system_library_1.


:Info: stack.gi: 02/26/82 stack

     A pushdown list where active procedures maintain private regions
used for temporary variables and interprocedure communication.


:Info: status_code.gi: 02/26/82 status code

     A value returned by a subroutine indicating either the success of
or the reason for failure to accomplish the requested action.
Associated with standard system error codes are certain predefined
messages that tell what happened.


:Info: storage_system.gi: 03/05/82 storage system

     The combination of hardware and software that Multics uses for
storing information.  The information is grouped into segments and
catalogued in directories.  See also directory_hierarchy.info.


:Info: subsystem.gi: 02/26/82 subsystem

     A collection of programs that provide a special environment for
some particular purpose, such as editing, calculation, or data
management.  It may perform its own command processing, file handling,
and accounting.  A subsystem is said to be closed if:

     1.  all necessary operations can be handled within the
         subsystem

     2.  no way exists to use the normal Multics environment from
         within the subsystem


:Info: switch.gi: 02/26/82 switch

     A path in the I/O system through which information is sent.  (See
attach and detach.)


:Info: SysDaemon.gi: sysdaemon.gi: 02/26/82 SysDaemon

     One of several system service processes that perform such tasks
as process creation, backup, network control, and printing segments on
the line printer.


:Info: system_administrator.gi: 02/26/82 system administrator

     A person who has the access to register users, create projects,
perform accounting runs, and perform other functions necessary for the
administration of the system.


:Info: system_control_dir.gi: sc1.gi: system_control_1.gi: 02/26/82 system_control_dir (sc1, system_control_1)

     The directory that contains those segments and directories used
to control the operation of the system including the answer table, who
table, person name table, project PDTs, etc.




                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
