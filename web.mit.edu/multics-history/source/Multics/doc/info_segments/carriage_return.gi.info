:Info: carriage_return.gi: 02/04/82 carriage return

     A "carriage return" means that the typing mechanism moves to the
first column of the next line.  On the Multics system, this action
is the result of the ASCII line-feed character.  The terminal type
determines which keys the user presses to perform the equivalent
action (e.g., RETURN, LINE SPACE, or NL).


:Info: character.gi: 02/04/82 character

     A hardware-related unit of information that on the Multics system
is 9 bits or 6 bits.  The Multics system native-mode character set is
9-bit ASCII, although the hardware does support additional character
sets.


:Info: closed_subsystem.gi: 02/04/82 closed subsystem

     A separate environment that bears no resemblance to and has no
knowledge of the Multics system itself.


:Info: command.gi: 02/04/82 command

     A program designed to be called by typing its name at a terminal.
Most commands are system-maintained, but any user program that takes
only character-string input arguments and no output arguments can be
used as a command.


:Info: command_level.gi: 02/04/82 command level

     The process state in which lines input from a user's terminal
are interpreted by the system as a command (i.e., the line is sent to
the command processor).  A user is at command level at login when a
command completes or encounters an error, or is stopped by issuing the
quit signal.  Command level is normally indicated by a ready message.


:Info: command_line.gi: 03/05/82 command line

     The line on which command instructions are given to Multics; it
includes a command name, arguments to that command, if any, and a
newline.


:Info: command_processor.gi: 02/04/82 command processor

The program that interprets the lines input at command level and calls
the appropriate programs, after processing parentheses and active
functions.


:Info: control_argument.gi: 02/04/82 control argument

     An argument to a command that specifies the command's execution
in some way.  System control arguments begin with a hyphen, such as
-all, -long, or -hold.  The meaning of each control argument accepted
by a specific command is given as part of the description of the
command.  Many control arguments have standard abbreviations such as
-lg for -long.  See control_arguments.gi.info for a list of commonly
used control arguments and their short names.


:Info: crash.gi: 02/04/82 crash

     There are two types of crash:  FNP crash and system.

     An FNP crash is an unplanned termination of service from the
front-end network processor causing a disconnection of the process.
The process can be saved and reconnected with the -save_on_disconnect
control argument to the login command, or the save_on_disconnect
command.  See also process_preservation.gi.info.

     A system crash is an unplanned termination of system availability
caused by problems in hardware and/or software, often signalled by the
message: MULTICS NOT IN OPERATION.  Processes cannot be reconnected
after a system crash.  See damaged_segments.gi.info.


:Info: cursor.gi: 03/05/82 cursor

     The blinking square or underscore that marks your current
position on a video terminal.


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
