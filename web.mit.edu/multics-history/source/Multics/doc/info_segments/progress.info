02/20/85  progress, pg

Syntax as a command:  pg {command_line} {-control_arg}


Function: executes a specified command line and prints information
about how its execution is progressing in terms of CPU time, real time,
and page faults.


Arguments:
command_line
   is any string that is executable as a command line.  If given, no
   control arguments to progress can appear on the same line except for
   -brief.


Control arguments: you can supply only one control argument.
-brief command_line, -bf command_line
   prints only the message at completion of the specified command_line.
-cput N
   prints incremental messages every N seconds of virtual CPU time.
   (Default: 10)
-off
   suppresses the incremental messages printed during execution of a
   command line previously initiated, but does not suppress the message
   printed when that command line is finished (see "Notes on Output
   Messages" below).  You can use -off to suppress messages while
   debugging.
-on
   restores the printing of incremental messages during execution of
   the command line.


-output_switch name, -os name
   directs output from the progress command to be printed on the I/O
   switch named name.  (Default: user_i/o)
-realt N
   prints incremental messages every N seconds of real time instead of
   virtual CPU time.


Notes on output messages: After every 10 seconds of virtual CPU time
(assuming the default triggering value is used), progress prints out a
message of the form:
   ct/rt = pt%, ci/ri = pi% (pfi)
where:
   ct
      is the number of virtual CPU seconds used by the command line so
      far.
   rt
      is the total real seconds used so far.
   pt
      is the ratio of virtual to real time used by the command so far.
   ci
      is the incremental virtual CPU time (since the last message).


   ri
      is the incremental real time.
   pi
      is ci expressed as a percentage of ri.
   pfi
      is the number of page faults per second of virtual CPU time
      (since the last message).

When the command line finishes, progress prints the following message--
   finished: ct/rt = pt% (pft)
where:
   pft
      is the number of page faults per second of virtual CPU time for
      the execution of the entire command.


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
