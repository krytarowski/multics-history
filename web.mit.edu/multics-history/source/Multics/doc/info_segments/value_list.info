09/12/86  value_list, vls

Syntax as a command:  vls {name} {-control_args}


Syntax as an active function:  [vls {name} {-control_args}]


Function: lists one or more name-value pairs as set by value_set and
value_get -call.


Arguments:
name
   is a character string.  It can be -name STR to specify a name
   beginning with a minus sign, to distinguish it from a control
   argument.  (See "Notes.")


Control arguments:
-all, -a
   lists variables set by value_$set_data in addition to the variables
   set by value_$set and the value commands.  These are listed in the
   form
      foo              (N words)
   Word counts alone are listed for data variables since their values
   have meaning only to the caller of value_.  If you give no -all, the
   default is to omit the data variables.
-brief, -bf
   suppresses the error messages allowed by -long.
-data
   lists only the values set by value_$set_data.


-depth N, -dh N
   lists the latest N-1 pushed values for any variable in addition to
   the current value.  Any further pushed values result in the message
   "(M more pushed values)".  The default is to print the latest value
   followed by the message "(M pushed values)".  In the active
   function, -depth returns only the latest N values.
-exclude STR, -ex STR
   lists all values except those for names that match STR.  The
   character string STR is searched for in names: if it is surrounded
   by slashes (/), it is interpreted as a qedx regular expression to
   match names; otherwise it is interpreted as a starname.  Only
   per-process values are listed if you supply -perprocess, and only
   permanent ones if you give -permanent.  (See "Notes.")


-long, -lg
   allows the error messages "Name not found" and "No match for..."
   for individual name and -match arguments.  (Default)
-match STR
   lists all values for names that match STR.  The character string STR
   is searched for in names: if it is surrounded by slashes (/), it is
   interpreted as a qedx regular expression to match names; otherwise
   it is interpreted as a starname.  Only per-process values are listed
   if you supply -perprocess, and only permanent ones if you give
   -permanent.  (See "Notes.")
-pathname path, -pn path
   specifies a value segment other than the current default one,
   without changing the default (see "Notes on value segment").  You
   are allowed multiple -pathname control arguments to list values in
   more than one value segment.


-permanent, -perm
   lists only values stored in the value segment.
-perprocess, -pp
   lists only per-process values.
-value, -val
   lists values only.
-variable, -var
   lists variable names only.


Access required: You require read access on the value segment, except
for per-process values.


Notes: The list is sorted alphabetically by name, the per-process
value first where both exist.

By default, this command lists both variable names and values, and both
per-process and permanent values interspersed, the per-process names
preceded by "(P)".

Either -value or -variable is required by the active function.  The
active function returns the selected names or values separated by
spaces.


The -match and -exclude control arguments are applied in the order
specified.  Successive -match control arguments add to the set of names
processed (union), and successive -exclude control arguments narrow
down the set (intersection).  They are incompatible with the name
argument and can appear multiple times together.

See value_defined, value_delete, value_get, value_path, value_set, and
value_set_path.


Notes on value segment: The value segment searched is either the one
supplied by -pathname or the current default value segment.  The
default segment is initially
   [home_dir]>[user name].value
but you can change it by value_set_path.  Use of -pathname does not
change the default segment.


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
