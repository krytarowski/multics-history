

:Info: impure_procedure.gi: 02/10/82 impure procedure

     A procedure that modifies itself.  Such a procedure is not
recommended.


:Info: info_segments.gi: info_segs.gi: help_files.gi: 02/10/82 info segments (info segs)

     The segments whose contents are printed by invoking the
help command.  These segments, sometimes called help files, give
information about the system.  The system info segments are kept
in the directory >documentation>info_segments (>doc>info).  The
info segments that are peculiar to an installation are kept in
>doc>iml_info_segments (>doc>iml_info).  See the description of the
help command.


:Info: initial_acl.gi: iacl.gi: IACL.gi: 02/10/82 initial access-control list (IACL)

     A list that specifies what the access-control list of a newly
created segment or directory will be.  There are separate initial
access control lists for segments and directories for each ring.


:Info: initializer.gi: 02/10/82 Initializer

     The system control process that logs users in and out and
keeps accounting statistics.  This is the only process that
creates and destroys other processes.  Its access identifier is
Initializer.SysDaemon.z.


:Info: iml.gi: IML.gi: 02/10/82 IML (Installation-Maintained Library)

     The library of programs maintained by a particular installation.
It is kept in the directory >system_library_auth_maint (>am).


:Info: interactive.gi: 03/05/82 interactive

     A mode of operation in which you and the computer exchange
information directly and immediately, through a terminal.  Multics is
primarily an interactive system.


:Info: i/o_module.gi: io_module.gi: 02/10/82 I/O module

     A program that processes input and output requests directed to a
given switch.  It may perform operations on other switches, or call
the supervisor.


:Info: i/o_switch.gi: io_switch.gi: 02/10/82 I/O switch

     A  path in  the I/O  system through  which information  is sent. 


:Info: io.sysdaemon.gi: IO.SysDaemon.gi: 02/10/82 IO.SysDaemon

     The User_id of the system process that does dprinting and
dpunching.


:Info: known_segment.gi: 03/05/82 known segment

     A segment is known to a process when it has been uniquely
associated with a segment number in that process.  A segment can be
made known through dynamic linking, by the initiate command, or by
explicit call to the hcs_$initiate or hcs_$initiate_count subroutines.
The segment number assigned remains with that segment for the life of
the process unless a user explicitly makes the segment unknown.  Once
a segment is known by a given segment number, all program references
using that number are interpreted by the system hardware and
associated software as references to that segment. 


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
