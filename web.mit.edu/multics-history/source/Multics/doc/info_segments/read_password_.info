02/08/84  read_password_


Entry points in read_password_:
   (List is generated by the help command)


:Entry: read_password_: 02/08/84  read_password_

Function: reads a single line from the users' terminal (actually from
the user_input I/O switch).  It attempts to hide the input line by
turning the printing mechanism off before reading and turning it back
on afterwards.  If the printing mechanism cannot be turned off, then a
mask consisting of several layers of printing designed to "black out"
the page is printed.  One of the layers of printing is pseudo-randomly
generated so that it will be different each time the subroutine is
called, thus making it difficult to analyze the layers of
overprinting.  The mask is 12 characters long.


Syntax:
declare read_password_ entry (char(*), char(*));
call read_password_ (prompt, password);


Arguments:
prompt
   is a message to be printed before the password is read.  It can be
   any length.  A newline character is always printed after the
   prompting message.  (Input)
password
   is the password that the user typed.  It can be up to 120 characters
   long.  (Output)


Notes:  The password is processed as follows -- tab characters are
translated to blanks.  Leading blanks are removed.  Characters after
any embedded blanks are removed.  If the resulting password is all
blank, a single asterisk ("*") is returned, otherwise the password is
returned.


:Entry:  switch:  02/08/84 read_password_$switch


Function:  This entry is similar to read_password_, but it allows the
caller to specify the I/O switches to be used to print the prompt and
read the password.


Syntax:
declare read_password_$switch entry (ptr, ptr, char(*), char(*),
     fixed bin(35));
call read_password_$switch (output_switch, input_switch, prompt,
     password, code);


Arguments:
output_switch
   is a pointer to the I/O switch on which the prompt, and if necessary
   the password mask, is printed.  (Input)
input_switch
   is a pointer to the I/O switch from which the password is read.
   (Input)
prompt
   is a message to be printed before the password is read.  It can be
   any length.  A newline character is always printed after the
   prompting message.  (Input)


password
   is the password that the user typed.  It can be up to 120 characters
   long.  (Output)
code
   is a standard system status code which is non-zero only if a
   password could not be read.  (Output)


Notes:  The password is processed as follows -- tab characters are
translated to blanks.  Leading blanks are removed.  Characters after
any embedded blanks are removed.  If the resulting password is all
blank, a single asterisk ("*") is returned; otherwise the password is
returned.


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
