02/12/85  describe_entry_type, dset

Syntax as a command:  dset type {-control_args}


Syntax as an active function:  [dset type -control_arg]


Function: prints or returns information about a file system entry
type.


Arguments:
type
   identifies a storage system entry type.  Use the list_entry_types
   command to obtain a list of entry type values.


Control arguments:
-all, -a
   prints all information about the entry type, which includes name,
   plural name, access modes, supported attributes, and the default
   values and all names for switches.  You can't use -all in the active
   function.
-attributes, -attr
   prints or returns the names of the storage system attributes that
   this entry type supports.  These are the attributes that can be
   copied or moved by the copy and move commands.
-default NAME
   prints or returns the default value of the specified switch for this
   entry type.  You can give only one -default argument.  This control
   argument is incompatible with -all and -switches.


-extended_acl, -xacl
   returns "true" if the entry type supports extended ACLs, "false"
   otherwise.  You can use it only in the active function.
-info_pathname, -ipn
   prints or returns the pathname of an info segment containing more
   information about the entry type, if such an info segment is
   available.
-modes
   prints or returns the acceptable access modes for the specified
   entry type.


-name, -nm
   prints or returns the name of an entry of the selected entry type.
-plural_name, -plnm
   prints the plural name of the specified entry type.
-switches
   prints the names and default values of all switches supported by the
   entry type given.


Notes: When invoked with no control arguments, the command prints the
name, plural name, modes, attributes, info seg pathname, switch names
and default values.


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
