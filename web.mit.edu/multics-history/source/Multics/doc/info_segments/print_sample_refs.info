07/12/83  print_sample_refs

Syntax:  print_sample_refs name {-control_arg}


Function:  interprets the three data segments produced by the
sample_refs command, and produces a printable output segment that
contains the following information:  a detailed trace of segment
references, a segment number to pathname dictionary, and histograms of
the Procedure Segment Register (PSR) and Temporary Segment Register
(TSR) segment reference distributions.  (See the description of the
sample_refs command.)


Arguments:
name
   specifies the names of the data segments to be interpreted, as well
   as the name of the output segment to be produced.  This argument can
   be either an absolute or relative pathname.  If name does not end
   with the suffix srf, it is assumed.

   The appropriate directory is searched for three segments with
   entrynames as follows:
      (entry portion of) name.srf1
      (entry portion of) name.srf2
      (entry portion of) name.srf3

   The output segment is placed in the user's working directory with
   the entryname:
      (entry portion of) name.list


Control arguments:
-brief, -bf
   specifies that the detailed trace of segment references is not to be
   generated.


Notes:  The print_sample_refs command is able to detect a reused
segment number.  The appearance of a parenthesized integer preceding a
segment number indicates reusage.


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
