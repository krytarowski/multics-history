
09/21/87  error_handlers 
Known errors in the current release of error_handlers.
#	Associated TR's
Description

15  phx09049
the message "exp(x), x > 88.028, not allowed" is not very helpful in
cases where the exp function was used implicitly

14  phx16162
The code in find_condition_info_ depends on the value of an
uninitialized flag.  This can cause a fault_tag_1 when the stack frame
pointer is null and there is no condition frame.

13  phx15846
com_err_ should be able to print messages longer than 256 characters.

9  phx05920
There are too many quotation marks around the word start in the error
message for square root of a negative number.  Also, sqrt should be
changed to square route in the message.

8  phx11622
Default error handlers takes faults if the current working directory is
deleted.  THis is nondelux.

7  phx03742
The error message involving sqrt of a negative number prints the wrong
line number.  This was on the old deh bug list, but do we really believe
that it is not a problem is stu_?  This is left here only for
completeness.

6  phx06942
There are NL's missing before and after linkage_error messages.  Perhaps
linkage_error_ is to blame?

4  phx05898
The messages for arithmetical errors often contain references to PL/I
builtins.  They should use generic terms, or mention fortran as well.
Better yet, the error handlers should be able to tell which flavor of
program took the error, but for that see the following suggestion,.

3  phx05641
The char printed for onchar=, at least when there is no message for the
oncode, is incorrect.  It is one character to the left.

2  phx05641
The message printed for a missing oncode message is mispelled.

1  phx05641
Oncode messages for oncode 376 is missing.  oncode_messages_ has to be
fixed.


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
