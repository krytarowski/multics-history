06/20/80: Known bugs in the installed (>unb>bound_fort_) new_fortran compiler.
This compiler is Release 7 of fortran (new_fortran).

265 raising a double precision number to a very small
   positive power can result in exponent overflow
   (actually in pl1_operators_).
264 the optimizer does not convert constants which are
   assigned directly to variables to the data type of the
   variable on the left hand side of the assignment
   (related to bug 262).
263 the optimizer does not protect itself from errors such
   as underflow, overflow, and zerodivide while performing
   constant folding.
262 the optimizer does not pad character constants which
   are directly assigned to variables of an arithmetic
   type.


261 the optimizer may common expressions that are not in
   fact common within loops that are entered only in the
   middle.
259 the compiler truncates the source segment and sets the
   bit count randomly when the source and object segments
   are the same.  (This is related to bug 205).
257 referencing a multi-dimensional array as a vector in an
   equivalence statement does not work if the vector
   subscript is larger than the first dimension of the
   array.  The 1966 ANSI standard explicitly allows
   multi-dimensional arrays to be referenced as vectors
   within equivalence statements; the 1977 ANSI standard
   explicitly prohibits it.
246 the compiler may not detect that too many initial
   values have been supplied in a data statement if the
   last item in the data statement is a repeated value
   whose repetition count was larger than needed.


244 the real sin intrinsic function gives a notably less
   accurate result for arguments in the range from 1/256
   to about 1/6000 (actually in pl1_operators_).
243 the real asin intrinsic function may erroneously try to
   take the square root of a negative number (actually in
   pl1_operators_).  The dasin, acos, and dacos
   intrinsics fail similarly.
238 optimizing code generator does not remove a variable
   from the machine state when its alias is set. This can
   cause problems if an equivalenced variable is used as
   the only subscript of a subscripted reference.
205 the compiler should not truncate an existing object
   segment until it has determined that it is going to try
   to make a new one, i.e. that the code generator will be
   invoked.


178 the -table option may not produce the desired results
   if the -optimize option is also used.
164 error messages may not include a line number.




                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
