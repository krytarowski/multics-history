
09/23/87  audit_ 
Known errors in the current release of audit_.
#	Associated TR's
Description

55  phx19369
audit_ modes operation should always get the modes from the audited
switch, even when the input mode string only contains audit_* modes.

54  phx18082
When using an audit file with size = N, a single iox_$put_chars of more
than N records fails when audit_ attempts to store the audit entry
(audit_ loops infinitely).

53  phx17740
"ata;daf" gets an audit_file_position_ error.

51  phx14134
Attempting to set a mode when auditing is suspended causes audit_ to
report an error directly, rather than just return an error code.

50  phx14207, phx18196
attach_audit silently leaves one at a new command level when an RQO is
encountered setting up the audit file.

48  phx17285
audit_ detach can exit with IPS signals masked.

46  , phx15947
daf gets size condition when displaying metering data.

45  phx15870, phx15879
attach_audit doesn't generate sufficiently unique switch names,
invocations in rapid succession cause it to try and use the same
switch.

42  phx14441
Setting ^audit_suspend should have no effect if auditing is not
suspended.

35  phx12131
audit_attach doesn't work on zero-length audit files.

34  phx12044
audit_use_editor_prompt mode can no longer be turned off via the modes
operation.

28  phx02985
Strings used by -fm -to -next -last -match are interpreted as qedx
expressions, this isn't mentioned in any of the documentation.

27  phx02985
The error codes returned by search_file_ are not converted into
meaningful error messages for the user. Code 1 returned by search_file_
in audit_file_position_ are erroneously converted into
error_table_$nomatch. Code 2 returned by search_file in daf is

25  phx11796
Attempt to attach_audit with an audit file on an unattached logical
file causes an OOB.

24  phx11785
No documentation of what happens when an unrecognized audit_ request is
provided. (The entire line including the bogus audit request is simply
passed through, like a normal line of input.)

22  phx10278
If the pathname for the output file for daf is bad, daf gets an
ios_error.

21  phx09948
audit_ has a bad interaction with pl1 IO, only in absentee.

20  phx09525, phx09540
daf doesn't identify which argument is unacceptable.

19  phx09645
audit should translate arguments to -class to upper class and validate
them for rectitude.

17  phx08730
!r (audit replay request) seems to cause an ios_error when a replayed
line is filled out to greater than 128 characters and passed to
listen_.

14  
daf doesn't close the vfile when doing an -of.

12  phx03788
Large audit files cause daf and the editor to loop.
Audit_file_position_ loses.

11  phx03788
Random reference to word in page 119 of audit files when records used
is much smaller "(e.g., 19)".

10  phx03788
detach_audit should set the bit count on the audit file.

9  phx06855
ata -of foo responds with error_table_$argerr instead of bad_opt.

8  phx08138
When an audit file becomes an MSF, audit_ gets a bounds fault and the
audit file is unuseable. This may have something to do with transparent
mode.

7  phx08303
truncating an audit file causes the audit file to become an MSF with a
bogus size, after its next use.

6  
daf trims trailing whitespace from entries when displaying them.

5  phx03788, phx07213
nonexistent error codes are referenced, daf references duparg and
audit_file_position_ references incompatible_operaitions.

4  phx07322
Empty audit filescan't be daf'ed (ata;daf loops)

3  
-tc arg to attach_audit trashes audit file.

2  
audit editor request parsing mishandles extra blanks.

1  
daf prefixes output with a blank.


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
