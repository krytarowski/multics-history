02/15/82  get_line_length_


Function: returns the line length currently in effect on a given I/O
switch.  If the line length is not available (for any reason), a
status code is returned, and a default line length is returned.


Entry points in get_line_length_:
   (List is generated by the help command)


:Entry:  stream:  02/08/82 get_line_length_$stream


Function:  This entry point returns the line length of a given I/O
switch, identified by name.


Syntax:
declare get_line_length_$stream entry (char(*), fixed bin(35)) returns
     (fixed bin);
line_length = get_line_length_$stream (switch_name, code);


Arguments:
switch_name
   is the name of the switch whose line length is desired.  (Input) If
   switch_name is null, the user_output I/O switch is assumed.
code
   is a standard status code.  (Output)
line_length
   is the line length of switch_name.  (Output)


:Entry:  switch:  02/08/82 get_line_length_$switch


Function:  This entry point returns the line length of a given I/O
switch, identified by pointer.


Syntax:
declare get_line_length_$switch entry (ptr, fixed bin(35)) returns
     (fixed bin);
line_length = get_line_length_$switch (switch_ptr, code);


Arguments:
switch_ptr
   is a pointer to the I/O control block of the switch whose line
   length is desired.  (Input) If switch_ptr is null, the user_output
   I/O switch is assumed.
code
   is a standard status code.  (Output)
line_length
   is the line length of switch_name.  (Output)


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
