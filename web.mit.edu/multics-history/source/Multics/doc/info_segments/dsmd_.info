06/04/80	dsmd_

Function:	 This is the subroutine interface to Multics Relational Data Store
(MRDS) data submodels.  It allows retrieving information about the submodel
definition.


Notes for dsmd_:  This entry is obsolete, see msmi_


Entry points in dsmd_:


:Entry:close_dsm:  05/16/80  dsmd_$close_dsm

Syntax:
call dsmd_$close_dsm (code) ;
dcl dsmd_$close_dsm entry (fixed bin (35)) ;


Notes:  Code is the standard status code.  It will return
mrds_error_$incorrect_dsmd_seq if the submodel was not open.



:Entry:get_dsm_header:  05/16/80  dsmd_$get_dsm_header

Syntax:
call dsmd_$get_dsm_header (area_ptr, hd_ptr, code) ;
dcl dsmd_$get_dsm_header entry (ptr, ptr, fixed bin (35)) ;


Notes:  The area_ptr points to a user defined area in which the header
structure will be allocated.

The hd_ptr points to the header information structure being returned.

Code is the standard status code.

The header structure is declared as follows:

dcl 1 dsm_header_record based,
    2 dsm_generator_version fixed bin init (1),
    2 date_time_generated fixed bin (71),
    2 database_pn char (168),
    2 name char (32),
    2 num_of_relations fixed bin (35),
    2 creator_id char (32);



:Entry:get_dsm_relations:  05/16/80  dsmd_$get_dsm_relations

Syntax:
call dsmd_$get_dsm_relations (area_ptr, drel_ptr, code) ;
dcl dsmd_$get_dsm_relations entry (ptr, ptr, fixed bin (35)) ;


Notes:  The area_ptr points to a user defined area in which the relation
information structure will be allocated.

The drel_ptr points the relation information structure that will be returned.

Code is the standard system status code.

The relation information structure is declared as follows:

dcl 1 dsm_display_rels based (drel_ptr),
    2 nrels fixed bin,
    2 relation (nrels_alloc refer (dsm_display_rels.nrels)) char (32);



:Entry:get_relation:  05/16/80  dsmd_$get_relation

Syntax:
call dsmd_$get_relation (submodel_relation_name, area_ptr, str_ptr, code) ;
dcl dsmd_$get_relation entry (char(*), ptr, ptr, fixed bin (35)) ;


Notes:  The submodel relation name is the char (32) name of the relation, as
known in the submodel.

The area_ptr points to a user defined area in which to allocate the attribute
information structure.

The str_ptr points to the attribute information structure that is being
returned.

Code is the standard system status code.  It will return error_table_$no_record
if no relation by the given name was found in the submodel, or
mrds_error_$incorrect_dsmd_seq, if the submodel was not open.

The attribute information structure is declared as follows:

dcl 1 dsm_relation_str based,
    2 key,
      3 submodel_rel_name char (32),
    2 record,
      3 model_rel_name char (32),
      3 no_attributes fixed bin,
      3 attribute_info (dsm_num_attr_alloc refer (no_attributes)),
        4 submodel_att_name char (32),
        4 model_att_name char (32);



:Entry:open_dsm_read:  05/16/80  dsmd_$open_dsm_read

Syntax:
call dsmd_$open_dsm_read (submodel_path, code) ;
dcl dsmd_$open_dsm_read entry (char (*), fixed bin(35)) ;


Notes:  Submodel_path is the relative pathname of the submodel to be opened.

Code is the standard status code.  it will return error_table_$no_entry if the
path entry given does not exist, mrds_error_$not_dsm if the path does not point
to a mrds submodel, or mrds_error_$incorrect_dsmd_seq if the submodel was not
in a closed state.





                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
