02/22/85  shortest_path

Syntax as a command:  shortest_path path {entry {component}}


Syntax as an active function:  [shortest_path path {entry {component}}]


Function: returns the shortest absolute pathname represented by the
argument if you give one argument, or the shortest absolute pathname of
the archive component or the entry in the directory specified by path
if you give two or three arguments.  The shortest name is determined by
using the shortest of each of the names on each component in the path.


Arguments:
path
   is the pathname to be expanded and returned if you don't use entry;
   otherwise this is the pathname of the directory to be used in the
   returned pathname.
entry
   is the entryname to be used in the returned pathname.
component
   is the archive component name to be used in the returned pathname.


Notes: Since the pathname returned by path is in quotes, the command
processor treats it as a single argument regardless of special
characters in the name.

When more than one name qualifies as the shortest name for a directory,
shorthest_path tries to select the name containing all lowercase
characters.  If several names still qualify, they are compared to the
primary name of the directory: the first name found with the same
first character as the primary name is chosen; this comparison is case
independent.


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
