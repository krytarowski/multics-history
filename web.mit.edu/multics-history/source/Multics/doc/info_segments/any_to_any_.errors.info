
09/23/87  any_to_any_ 
Known errors in the current release of any_to_any_.
#	Associated TR's
Description

2  phx20125
any_to_any_ invalidly permits certain characters to escape detection in
conversion of characters to a numeric form through the char_to_numeric_
entry point (through assign_, any_to_any_ and some other paths).

This occurs because the valid character detection occurs after the
incoming string has been rtrimmed.  The table used by the tctr, which
does the rtrim, is short and suitable for use only if characters exist
within the valid span of characters for numeric entry.  The problem
reported occurs when a character falls outside this range and hits a 0
byte within a following table, thus looking like a blank and getting
trimmed, rather than detected.

When this occurs the incoming string appears to be null and is then
co-erced to appear to be 0.  This error does not occur in the
char-to-bit conversion, since this is done in a separate portion of
any_to_any_.

1  phx19826
Any_to_any_, called either through assign_ or as an operator call
direct from pl1_operators_ causes an IPR fault in conversion of a
+000..000 fixed decimal value to a scaled fixed binary or scaled fixed
binary unsigned value.  This occurs since the special case of 0, with a
large precision, skips around code to correctly set the length of the
string (into x4).


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
