02/18/85  new_proc

Syntax as a command:  new_proc {-control_arg}


Function: destroys your current process and creates a new one, using
the control arguments given initially with login and -authorization.


Control arguments:
-authorization STR, -auth STR
   creates the new process at authorization STR, where STR is any
   authorization acceptable to the convert_authorization_ subroutine.
   The authorization must be less than, or equal to, both the maximum
   authorization of the process and the access class of the terminal.
   (Default: to create the new process at the same authorization)


Notes: Just before the old process is destroyed, the "finish"
condition is signaled.  After the default on unit returns, all open
files are closed.  The search rules, I/O attachments, and working
directory for the new process are as if you had just logged in.

If your initial working directory contains the segment start_up.ec and
you did not log in with -no_start_up, new_proc automatically issues the
command line "exec_com start_up new_proc interactive" in the new
process.


If your site is security conscious, it may have disabled "new_proc
-auth"; in this case if you wish to change authorization, do this:
   1. log out
   2. verify, using terminal/modem indications, that the terminal has
      dropped DTR and that the system acknowledged by dropping DSR
   3. log in at the new authorization.

This procedure is the only way to guarantee that you are communicating
with the answering service and not with a Trojan horse.

DTR and DSR are EIA RS232 control signals that are part of the
interface between your terminal and the system.


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
