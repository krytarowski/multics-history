01/30/89  translator_info_

The translator_info_ subroutine contains utility routines needed by the
various system translators.  They are centralized here to avoid
repetitions in each of the individual translators.


Entry points in translator_info_:
(List is generated by the help command)


:Entry: get_source_info: 07/21/83  translator_info_$get_source_info


Function:  This entry point returns the information about a specified
source segment that is needed for the standard object segment:  storage
system location, date-time last modified, unique ID.


Syntax:
declare translator_info_$get_source_info entry (ptr, char(*), char(*),
     fixed bin(71), bit(36) aligned, fixed bin(35));

call translator_info_$get_source_info entry (source_ptr, dir_name,
     entryname, date_time_mod, unique_id, code);


Arguments:
source_ptr
   is a pointer to the source segment about which information is
   desired.  (Input)
dir_name
   is a pathname of the directory in which the source segment is
   located.  (Output)
entryname
   is the primary name of the source segment.  (Output)


date_time_mod
   is the date-time modified of the source segment as obtained from the
   storage system.  (Output)
unique_id
   is the unique ID of the source segment as obtained from the storage
   system.  (Output)
code
   is a storage system status code.  (Output)


Notes on status code:
A status code of zero indicates that all information has been returned
normally.

A nonzero status code returned by this entry is a storage system status
code.  Because the interface to this procedure is a pointer to the
source segment, the presence of a nonzero status code probably
indicates that the storage system entry for the source segment has been
altered since the segment was initiated, i.e., the segment has been
deleted, or this process no longer has access to the segment.


Notes:
The entryname returned by this procedure is the primary name on the
source segment.  It is not necessarily the same name as that by which
the translator initiated it.


:Entry: component_get_source_info:
  01/30/88  translator_info_$component_get_source_info


Function:  This entry point returns the information about a specified
source program that is needed for the standard object program:  storage
system location, date-time last modified, unique ID.


Syntax:
declare translator_info_$component_get_source_info entry (ptr, char(*),
     char(*), char(*), fixed bin(71), bit(36) aligned, fixed bin(35));

call translator_info_$component_get_source_info (source_ptr, dir_name,
     entry_name, component_name, date_time_mod, unique_id, code);


Arguments:
source_ptr
   is a pointer to the source program about which information is
   desired.  (Input)
dir_name
   is a pathname of the directory in which the source segment is
   located.  (Output)
entry_name
   is the primary name of the source segment.  (Output)
component_name
   is the name of the archive component. If the source program is not
   a component of an archive, then this value is null "".  (Output)


date_time_mod
   is the date_time modified of the source program as obtained from the
   storage system.  (Output)
unique_id
   is the unique ID of the source segment as obtained from the storage
   system.  (Output)
code
   is a storage system status code.  (Output)


Notes on status code:
A status code of zero indicates that all information has been returned
normally.

A nonzero status code returned by this entry is a storage system status
code.  Because the interface to this procedure is a pointer to the
source program, the presence of a nonzero status code probably
indicates that the storage system entry for the source segment has been
altered since the segment was initiated, i.e., the segment has been
deleted, or this process no longer has access to the segment.


Notes:
The entryname returned by this procedure is the primary name on the
source segment.  It is not necessarily the same name as that by which
the translator initiated it.


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
