02/13/85  last_message_sender, lms

Syntax as a command:  lms {mbx_specification}


Syntax as an active function:  [lms {mbx_specification}]


Function: returns the sender of the last message received (from
send_message) in the form "Person_id.Project_id" (e.g., GBShaw.Demo).


Arguments:
mbx_specification
   specifies the mailbox on which messages are to be accepted.  If not
   given, the user's default mailbox (>udd>Project>Person>Person.mbx)
   is used.


List of mbx specifications:
-log
   specifies the user's logbox and is equivalent to
      -mailbox >udd>Project_id>Person_id>Person_id.sv.mbx
-mailbox path, -mbx path
   specifies the pathname of a mailbox.  The suffix .mbx is added if
   necessary.
-save path, -sv path
   specifies the pathname of a savebox.  The suffix .sv.mbx is added if
   necessary.


-user STR
   specifies either a user's default mailbox or an entry in the system
   mail table.
STR
   is any noncontrol argument and is first interpreted as -mailbox STR;
   if no mailbox is found, STR is then interpreted as -save STR; if no
   savebox is found, it is interpreted as -user STR.


Notes: You are cautioned against using the active function when in
polite mode.  In this mode the system holds all messages until you
finish typing a line (i.e., until the carriage is at the left margin);
therefore it is possible that while you are sending a message, your
process receive another message from another user--a message not yet
seen.  By using the active function in this situation, you can
inadvertently attribute a message to the wrong person.

See accept_messages, last_message, last_message_time, and send_message.


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
