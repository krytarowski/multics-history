02/07/85  compare_ascii, cpa

Syntax as a command:  cpa paths {-control_args}


Function: compares ASCII segments and prints any differences.

An exec_com tool called compare_pl1 compares PL/I source segments of
dissimilar formats via the format_pl1 command (see compare_pl1).


Arguments:
paths
   are the pathnames of the segments to be compared.  The equals and
   archive component pathname conventions are allowed.  Up to six
   segments can be compared, in addition to the original if one is
   supplied.  The equal convention can be used in any pathname except
   the first one on the command line, which is assumed to be the
   original unless otherwise specified.


Control arguments:
-extend
   when -output_file is given, the output is appended to the output
   file if it already exists.  (Default)
-header, -he
   prints a heading, giving the full pathname and identifying letter of
   each segment.  This heading is not printed by default.
-minchars NN
   specifies the minimum number of characters that must be identical
   for compare_ascii to assume that it has found the end of a
   difference (see "Notes").  (Default: 20)
-minlines NN
   specifies the minimum number of lines that must be identical for
   compare_ascii to assume that it has found the end of a difference
   (see "Notes").  (Default: 2)


-no_header, -nhe
   does not print the header information.  (Default)
-no_numbers, -nnb
   does not print identifying letter and line numbers preceding the
   lines from the segments being compared.  (Default: to print them)
-no_original, -no_orig
   indicates that no original segment is supplied.  If neither
   -no_original nor -original is given, the first pathname on the
   command line is assumed to be the original.
-no_output_file, -nof
   specifies that output is to be printed on the terminal.  (Default)
-no_totals, -ntt
   does not print the totals line.


-original pathA, -orig pathA
   specifies the pathname pathA of the original segment of which the
   others are modified versions.
-output_file path, -of path
   directs the output of the comparison to the file specified by path.
   The equal convention is allowed, and is applied to the original
   path.
-print_new_lines, -pnl
   prints only new lines.  New lines are lines found in one or more of
   the modified versions but not in the original.  An original must be
   supplied if this argument is used.


-totals, -tt
   prints only the totals line, giving the number of differences and
   the number of changed lines.  (Default: to print discrepancies and
   the totals line)
-truncate, -tc
   specifies that the output file be truncated before the comparison is
   written into it.


Notes: The output is organized with the assumption that the pathA
segment was edited to produce pathB.  This command prints lines that
were added, replaced, or deleted; it identifies each line by line
number within the respective segment and also by the letter A or B to
indicate which segment the line is from (A for pathA and B for pathB).

Values for minchars and minlines can be specified without being
preceded by control arguments.  The order is: minchars minlines.


The values of minchars and minlines control the size of displayed
differences.  Large values for these parameters cause small,
closely-spaced differences to be displayed as one large difference,
while very small values (such as -minlines 1 -minchars 2) will cause
small changes to be displayed individually but might also cause large
differences to be broken down into small parts, thereby giving a
misleading picture of what was actually done to produce the modified
versions.  The user should adjust these parameters to produce the most
useful results.


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
