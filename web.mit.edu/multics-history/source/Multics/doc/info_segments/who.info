03/01/85  who

Syntax as a command:  who {User_ids} {-control_args}


Syntax as an active function:  [who {User_ids} {-control_args}]


Function: lists the number, identification, and status of all users of
the system; it prints out a header and lists the name and project of
each user.  The header consists of the system name, the total number of
users, the current system load, the maximum load, the current number of
absentee users, and the maximum number of absentee users.  (See the
how_many_users command to print only the header.)


Arguments:
User_ids
   are match names, where:
   Person_id
      lists users with the name Person_id.
   .Project_id
      lists users with the project name Project_id.
   Person_id.Project.id
      lists users with the specified person and project.


Control arguments:
-absentee, -as
   lists absentee users (see "Notes").
-all, -a
   lists all the interactive, absentee, and daemon users.
-brief, -bf
   suppresses the printing of the header.  Not allowed for the active
   function.
-daemon, -dmn
   lists daemon users (see "Notes").
-interactive, -ia
   lists interactive users (see "Notes").


-long, -lg
   prints the date and time logged in, the terminal identification, and
   the load units, name, and project of each user.  The header includes
   installation identification and the time the system was brought up.
   If available, the time of the next scheduled shutdown, the time when
   service will resume after the shutdown, and the time of the previous
   shutdown are printed.  Not allowed for the active function.
-name, -nm
   sorts the output by the name (Person_id) of each user.
-project, -pj
   sorts the output by the Project_id of each user.


Notes: If you supply none of -interactive, -absentee, or -daemon and
give no User_ids, then all interactive and absentee users are listed;
but if you specify User_ids, then all matching users are listed.  If
you provide one or more of -interactive, -absentee, or -daemon, only
processes of the selected type(s) are listed; if you also select
User_ids, then only users matching those control arguments and the
User_ids are listed.

Absentee users are denoted in the list by an asterisk following
Person_id.Project_id.

If you omit -name and -project, the output is sorted on login time.
You can't use both arguments together because the sort is performed on
one key at a time.


If you supply a User_id, the header is suppressed even if you give
-long.  If you use who with no arguments, the system responds with a
two-line header followed by a list of interactive users sorted
according to login time.

Sometimes a Person_id.Project_id returned by the command is followed by
a "D" and/or an "S", where "D" refers to a disconnected process and "S"
refers to a suspended process.

You can prevent your own name from being listed by all users'
invocations of who; to do this, see your project administrator.


Notes on active function: The active function returns a list of
Person_id.Project_id pairs, requoted and separated by spaces.  You can
use control arguments to select and sort.


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
