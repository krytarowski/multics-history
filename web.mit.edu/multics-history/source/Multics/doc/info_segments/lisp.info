10/28/80	Lisp, Subsystem

Syntax:  lisp {environment} {parameters}


Function:  enter the interactive Lisp subsystem.  In this subsystem,
Lisp forms can be typed at the user's terminal and evaluated.


Arguments:
environment
   the pathname of a segment created by saving a Lisp environment.
   Such segments have names ending in ".sv.lisp", which need not be
   supplied.
parameters
   character strings which can be read by Lisp functions within this
   lisp invocation.  These may be used by the initial form of the saved
   environment, which must be specified when parameters are given.  The
   Multics Lisp implementation is described in the MACLISP reference
   manual.  Chapters 1-3 of the revision 1 manual may be obtained
   from--

      MIT Laboratory for Computer Science
      Publications, room NE43-112
      545 Technology Square
      Cambridge, MA	 02139


   The current price of the manual is $4.00, plus postage and handling.

   This manual describes most of the functions and features available
   (it was never completed) with the exception of I/O and compilation.
   These facilities were described in the now out-of-print revision 0
   (1974) of this manual.  All differences of the current
   implementation from this manual and improvements made to this
   implementation are described in the online documentation, listed
   below.	 This includes a number of very important facilities.


List of related info files:
lisp_compiler.info
   describes the use of the Lisp compiler.
lisp.changes.info
   modifications to the Lisp system that have been made.
lisp.manual_update.info
   descriptions of major features in this implementation not in the the
   Revision 0 MACLISP manual.


Notes on getting out of lisp:	 Lisp sets up a QUIT handler, which
prompts "CTRL/" for a letter or number telling it what to do.  Possible
responses are described below.  Signalling QUIT again while at this
point will suspend lisp.  This feature is designed to imitate the
handling of control characters in the ITS (pdp-10) implementation of
MACLISP, but only printing characters should be used to respond.
(Normal Multics quit-handling is available via the (status mulquit)
feature.	See lisp.changes.info.)

Evaluating the Lisp form "(quit)" will cause the invocation of lisp to
be terminated.  When in a read-eval-print loop, such as lisp "top
level", this form can simply be typed on the terminal to exit lisp.


List of CTRL/ responses:
B
   Enters a Lisp break loop, where lisp's state can be examined,
   modified, and restarted or aborted.
G
   throws control back to lisp top level, unwinding the Lisp stack.
Z
   suspends execution of lisp.  Lisp can be restarted with the "start"
   command, or the action of CTRL/G can be caused by using
   "program_interrupt" command.  This is similar in effect to
   signalling QUIT twice.
?
   Asks lisp what it is doing.  Execution continues.
.
   Does nothing.  Execution continues.	This is useful for making sure
   that lisp is in control.


Notes on lisp start up:  When lisp is invoked with no arguments, the
segment "start_up.lisp" in the user's home directory is loaded, if it
is found.	 This segment may contain the ASCII representations of Lisp
forms which will be evaluated, or it may be an object segment produced
by the Lisp compiler.


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
