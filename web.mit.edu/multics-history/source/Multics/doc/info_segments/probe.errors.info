
09/21/87  probe 
Known errors in the current release of probe.
#	Associated TR's
Description

106  none
(value) When asked to print the value of a fixed(17) aligned where the
lower 18 bits are on and some of the higher bits (but not the sign bit)
are on, prints nothing for the value.

103  phx05071
(debug) Drop in support of debug.

99  none
(display) "ds addr(foo)" displays foo not the pointer.  Should require
the * argument to indirect through the pointer.

98  phx18872
(position) With regexp as 1st probe request, produces out_of_bounds.

85  none
(before) When setting many breaks ("b /^.*$/"), goes into a loop after
several are set, printing the next one's "Break set before..." message.
Reported 07/26/84 by Fakoury.Tolts

82  phx17733
Blows up referencing runtime_symbol_info_$father.

78  none
Ring-4 gate gets wrong source_info.entry_ptr, results in wrong value
from probe_block_name_.

64  phx16904
(value) Interprets "foo based (p(3))" as p(1)->foo.  Limitation in
symbol table.

58  none
Fix probe_trace_stack_ to get block ptr if there is no statement map.
MR10.1 version worked by calling old stu_$get_runtime_block.  Current
version calls stu_$find_containing_block.  Needed by Gary Palter for
rdm debug_mode.

41  phx15479
Can't get the address of based(addr()) or defined() variables.  This is
a limitation in the symbol table.

25  phx14468
Gets confused if builtin and variable have the same name.

13  phx14172
Cannot get the source line for a PL/1 I/O statement that signalled
size.  Bug in put_field (pl1 operators), loses track of the instruction
it was at when it called plio2, which signalled size.

4  phx11733
Probe should handle language differences in input syntax.

3  phx10184
(value) Prints fixed bin unsigned numbers incorrectly.  Bug in
assign_$computational_, reported to JRGray.Calgary.


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
