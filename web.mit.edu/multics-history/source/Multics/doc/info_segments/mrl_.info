01/30/84  mrl_

Entry points in mrl_:
     (list is generated by the help command)


:Entry: mrl_: 01/30/84  mrl_

Function:  moves a character string by copying the characters from
right to left.


Syntax:
declare mrl_ entry (ptr, fixed bin(21), ptr, fixed bin(21));
call mrl_ (input_ptr, input_lth, output_ptr, output_lth);


Arguments:
input_ptr
   is a pointer to the input character string.  (Input)
input_lth
   is the length of the input string in characters.  (Input)
output_ptr
   is a pointer to the output character string.  (Input)
output_lth
   is the length of the output string in characters.  (Input)


Notes: If the output string is shorter than the input string, only the
last output_lth characters of the input string are moved.  If the
output string is longer than the input string, the output string is
padded on the left with blanks.


The following call to mrl_ --

     call mrl_ (addcharno (addr (text), start), lth,
                addcharno (addr (text), start+N), lth);

where N is a positive number is equivalent to the following PL/I loop--

     do i = lth to 1 by -1;
       substr (text, (start+N+i-1), 1) = substr (text, (start+i-1), 1);
     end;

Due to the nature of the Multics hardware, if the input and output
strings overlap and the output string is to the left of the input
string (ie: N, above, were a negative number), the results of the call
to mrl_ will be different from the results of the above PL/I loop.


Note that the following PL/I statement --

     substr (text, start+N, lth) = substr (text, start, lth);

will not work properly as the code generated by the compiler moves the
character string from left to right which destroys the contents of the
string.


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
