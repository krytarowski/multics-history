07/13/83  vfile_adjust, vfa

Syntax:  vfa path {-control_arg}


Function:  adjusts structured files left in an inconsistent state by an
interrupted opening, or unstructured files in any state.


Arguments:
path
   is the pathname of a file to be adjusted.


Control arguments:  must be specified only for unstructured files.
-set_bc
   sets the bit count of the file's last nonempty segment to the last
   nonzero byte in that segment.  Any components beyond it are deleted.
-set_nl
   appends a newline character if the last nonzero byte in the file is
   not a newline character.  The bit count of the file's last nonempty
   segment is then set to the file's last nonzero byte (which is now
   sure to be a newline character).
-use_bc {N}
   truncates the file to the byte specified by the bit count of
   multisegment file component N.  If N is not given, it is taken to be
   the last nonempty component.
-use_nl
   truncates the file after the last newline character.


Notes:  For unstructured files a control argument must specify the
desired adjustment; otherwise, no control arguments are allowed.  A
sequential or blocked file is adjusted by truncation after the last
complete record.  An indexed file is adjusted by finishing the
interrupted operation.

The adjust_bit_count command used with -character is equivalent to
vfile_adjust used with -set_bc except that the latter only operates on
a file that appears to be unstructured.

See the description of the vfile_ I/O module in the Subroutines manual
for further details.


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
