03/31/83  phcs_$read_disk_label


Entry points in phcs_$read_disk_label:
   (List is generated by the help command)


:Entry: phcs_$read_disk_label:  02/08/83 phcs_$read_disk_label


Function: This entry point is used to read the label of a storage
system disk drive.  The label is described by the structure "label,"
in the include file fs_vol_label.incl.pl1.


Syntax:
dcl phcs_$read_disk_label entry (bit (36) aligned, pointer,
     fixed bin (35));
call phcs_$read_disk_label (pvid, label_ptr, code);


Arguments:
pvid
   is the physical volume id of the disk whose label is to be read.
   (Input).  The physical volume id is used instead of the volume name
   because this is a ring zero interface, and volume names are not
   accessible by ring zero; hence, all ring zero interfaces that
   reference physical volumes use the pvid.  A pvname can be converted
   to a pvid by calling the subroutine mdc_$find_volname or can be
   returned by a previous call to find_partition_.
label_ptr
   is a pointer to the user-supplied buffer in which to read the label.
   (Input).  The label is 1024 words long and is described in
   fs_vol_label.incl.pl1.


code
   is a nonstandard status code.  (Output).  It can be:
   0
      indicates that the label was successfully read.
   error_table_$pvid_not_found
      indicates that the specified physical volume is not presently
      mounted.
   an integer between 1 and 10
      indicates that a physical disk error occurred while trying to
      read the label.  Error messages for physical disk errors are
      declared in the include file fsdisk_errors.incl.pl1, in the array
      fsdisk_error_message.


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
