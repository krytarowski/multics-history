11/26/80  fortran_77.gi.info

The FORTRAN 77 language is defined by the American National Standard
X3.9-1978.  This new standard for the FORTRAN language contains
several significant additions to the previous standard (ANSI
X3.9-1966).  Among them are:

- character string expressions, including substrings and concatenation
- an IF-THEN-ELSE construct permitting "structured" FORTRAN programs
- programmer-specified lower bounds for arrays
- direct access input/output
- list directed input/output
- DO loops whose range may be executed zero times

For the most part, the new features of FORTRAN 77 are upward
compatible with the existing Multics FORTRAN language.  Some in fact
already exist in Multics FORTRAN, and others exist but with a
different syntax.  There are several aspects of FORTRAN 77, however,
that are incompatible with the existing Multics FORTRAN language.


FORTRAN 77 on Multics:
FORTRAN 77 is being implemented on Multics by extending the current
Multics FORTRAN compiler.  The ultimate goal of the FORTRAN 77 effort
on Multics is to produce a compiler which accepts standard-conforming
FORTRAN 77 programs, which continues to accept existing Multics
FORTRAN programs with no modification, and which attempts to smooth
the transition from 1966 FORTRAN to FORTRAN 77.


In an effort to meet this goal, two new options have been introduced -
ansi66 and ansi77.  Any particular program unit is compiled with one
of these options in effect.  Program units compiled under the ansi66
option will be interpreted as they have been interpreted by Multics
FORTRAN in the past.  Program units compiled under the ansi77 option
will be interpreted according to the FORTRAN 77 standard wherever it
differs from the existing Multics FORTRAN language.


It is important to note that the ansi66/ansi77 distinction does not
affect all new features of FORTRAN 77; nor does it affect all features
of Multics FORTRAN that are extensions to the 1966 standard.  Instead,
the ansi66/ansi77 distinction serves only to control the
interpretation of constructs that have different, incompatible
meanings (or implementations) in Multics FORTRAN and FORTRAN 77.


As many features from Multics FORTRAN and from FORTRAN 77 as possible
will be available under BOTH the ansi66 and ansi77 options.  The
benefit of this approach is twofold.  First, this will allow existing
programs to use some of the new features in FORTRAN 77 without full
conversion to FORTRAN 77.  Second, this will allow programs to be
easily converted to FORTRAN 77; only the particular constructs that
are incompatible need be changed.


FORTRAN 77 availability:
The full FORTRAN 77 language will be made available in two stages.
The first stage, which has been completed, includes support of a full
character data type, and introduces the ansi66/ansi77 distinction.
The second stage, which is scheduled to be completed in the MR9
timeframe, will include the remaining features of FORTRAN 77.


Caveat - incompatible changes:
Because FORTRAN 77 is being implemented on Multics in two stages,
additional incompatibilities may be introduced under control of the
ansi77 option.  Unfortunately, it is impossible to enumerate all such
incompatibilities at this time.  Users are urged to exercise caution
when compiling programs under the ansi77 option, keeping in mind that
future incompatible changes are possible.


Further information:
For further information on the ansi66 and ansi77 options, see
fortran.new_features.info and fort_options.gi.info.  For more specific
information on the differences between the ansi66 and ansi77
languages, see fortran_77.differences.info.  For suggested conversion
procedures, see fortran_77.conversions.info.


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
