09/10/85 message_status, msgst


Syntax as a command: msgst {mbx_specification} {-control_arg}


Syntax as an active function: [msgst {mbx_specification}]


Function: prints information about mailboxes on which messages are
being accepted.


Arguments:
mbx_specification
   specifies the mailbox on which messages are to be accepted.  If not
   given, the user's default mailbox (>udd>Project>Person>Person.mbx)
   is used.


Control arguments:
-all, -a
   prints information for all mailboxes on which the user is accepting
   or deferring messages.


List of mbx specifications:
-log
   specifies the user's logbox and is equivalent to
      -mailbox >udd>Project_id>Person_id>Person_id.sv.mbx
-mailbox path, -mbx path
   specifies the pathname of a mailbox.  The suffix .mbx is added if
   necessary.
-save path, -sv path
   specifies the pathname of a savebox.  The suffix .sv.mbx is added if
   necessary.


-user STR
   specifies either a user's default mailbox or an entry in the system
   mail table.
STR
   is any noncontrol argument and is first interpreted as -mailbox STR;
   if no mailbox is found, STR is then interpreted as -save STR; if no
   savebox is found, it is interpreted as -user STR.


Notes on use as an active function:
When used as an active function, message_status returns the command
string which may be used to set the message acceptance state on the
specified mailbox to the current state.  Thus multiple acceptance
states may be pushed and popped using the value segment like so:

   value_set old_state ||[msgst] -push
   dm
   value_set old_state ||[msgst] -push
   am -call "ec message_handler"
   [value_get old_state -pop]
   [value_get old_state -pop]


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
