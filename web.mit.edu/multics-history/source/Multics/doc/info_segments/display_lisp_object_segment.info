5/20/80  display_lisp_object_segment, dlos

Usage:   dlos pathname {-control_arg}


Function:  Displays to the terminal the top level forms and function
definitions in a Lisp or Lap object segment.  The top level forms are
those forms to be executed (evaluated) when the segment is loaded into
a Lisp environment.  The top level forms and names and types of
functions being defined are displayed in the order in which they will
be executed at load time.   The constants referenced by compiled code
can be displayed optionally, as well as subr and array link information.

     This command is intended to facilitate debugging of complex
compile-time and macro systems to ascertain whether or not they have
placed what they were desired to in the object segment being
compiled.


Arguments:
pathname
   Pathname of a Lisp (lcp) or Lap compiled object segment.  If this
   is the pathname of a bound segment, the entryname portion must be
   the same as the component name about which information is desired.
   This, of course, implies (as is the case for successful use of
   such segments with Lisp) that the component name is a name on the
   bound segment.


Control arguments:
-constants, -c
   Causes the list of constants referenced by compiled functions to
   be displayed.
-array_links, -al
   Causes the list of links to arrays referenced by compiled code to
   be displayed.  The compiled array type and number of dimensions is
   printed as well.
-subr_links, -links, -link, -lk
   Causes the list of functions referenced by compiled code to be
   displayed.  The compiled number of arguments and assumed function
   type is displayed as well.
-long, -lg, -all, -a
   Equivalent to -array_links -subr_links -constants.


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
