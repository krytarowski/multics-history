08/14/84  secure_mrds_db, smdb

Syntax as a command:  smdb db_path {-control_args}


Function:  This command provides the ability to turn on (or off) the
attribute level security control features of MRDS.  This is done on a
data base basis.  The secured state of a data base can also be
displayed by this command.


Arguments:
db_path
   is the relative or absolute pathname of the data base to be secured,
   unsecured, or have its secured state displayed.  The data base
   suffix need not be given.  The path must be to a version 4 data
   base, not to a submodel.


Control arguments:
-display, -di
   causes the current data base secured state to be displayed without
   affecting that state.
-reset, -rs
   causes the specified data base to be unsecured, regardless of its
   current secured state.
-set
   causes the specified data base to be secured, regardless of its
   current secured state.  (Default)


Notes:  A data base that has been secured can be opened by a non-DBA,
only via a submodel residing in the "secure.submodels" directory
underneath the data base directory.  This allows turning on (or off)
attribute level security, which is implemented via submodel views,
using their access control modes (version 5 submodels).  Data bases
earlier than version 4 are not supported.

This command requires the user to be a DBA.  Once the data base has
been secured, commands that normally operate against the model view
requires the user to be a DBA.  In addition, once the data base has
been secured, commands using a submodel view require non-DBAs to use
secured submodels.


See the documentation for create_mrds_db -secure, create_mrds_dsm
-install, mmi_$get_secured_state, mmi_$get_authorization, and Section
7, "Security" in the Multics Relational Data Store Reference Manual
(AW53).


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
