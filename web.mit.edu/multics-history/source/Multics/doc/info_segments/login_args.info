04/21/82	login_args

Syntax:  login_args {argument_number} {-control_args}


Syntax as active function:
   [login_args {argument_number} {-control_args}]


Function:	 prints or returns information about selected login
arguments.  Login arguments may be specified on the command line which
causes the creation of the process.  For interactive processes, this is
the login, enter or enterp preaccess request; for absentee processes,
this is the enter_abs_request command.


Arguments:
argument_number
   selects a single login argument.


Control arguments:
-count, -ct
   prints or returns the number of login arguments which were supplied
   when the process creation command was entered.	 This control
   argument may not be used in combination with either argument_number
   or any other control argument.
-from argument_number, -fm argument_number
   selects all login arguments from argument_number through the last
   login argument.  See "Notes" below.


-no_requote
   prevents the requoting of arguments in the string which is returned
   or printed.  See "Notes on exec_com substitution forms".
-quote
   causes each selected argument to have embedded quotes doubled before
   it is returned or printed.  See "Notes on exec_com substitution forms".
-requote
   causes each selected argument to be requoted before it is returned
   or printed.  This is the default.  See "Notes on exec_com 
   substitution forms".


Notes:  If no argument_number is specified and -count is not specified,
the default is -from 1.

If no login arguments exist for the process, the login_args command
prints the error "There are no login arguments."	The login_args active
function returns the empty string.

If argument_number exceeds the number of login arguments for the
process, the login_args command prints the error "Argument number N
exceeds the number of login arguments (NN)."  The login_args active
function returns the empty string.


If -from is in force, explicitly or by default, the login_args command
prints each argument on a separate line, prefixed by its number, a
right parenthesis and a space.  For example, the fourth argument is
preceded by "4) ".	The login_args active function separates multiple
arguments by a single space in the return string; the return string is
not itself embedded in quotation marks.	 The login_args active function
does not insert the argument number in the return string.


Notes on exec_com substitution forms: The -from, -no_requote, -quote
and -requote control arguments allow the user to obtain return strings
which are equivalent to exec_com argument substitution forms:

login_args -control argument	       exec_com form
   no control arguments		&rf1
   argument_number			&r(argument_number)
   -from argument_number		&rf(argument_number)
   -no_requote			&f1
   argument_number -no_requote	&(argument_number)
   -from argument_number -no_requote	&f(argument_number)
   -quote				&qf1
   argument_number -quote		&q(argument_number)
   -from argument_number -quote	&qf(argument_number)
   -count				&n


Some exec_com argument forms can not be duplicated by the active
function.	 The exec_com interpreter has information about surrounding
context, and will produce different results for &q1 and "&q1".


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
