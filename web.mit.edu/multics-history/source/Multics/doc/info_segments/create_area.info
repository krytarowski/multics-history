02/08/85  create_area

Syntax as a command:  create_area virtual_pointer {-control_args}


Function: creates an area and initializes it with user-specified area
management control information.


Arguments:
virtual_pointer
   is a virtual pointer specifier to the area to be created.  If the
   segment already exists, the specified portion is still initialized
   as an area.  (See virtual_pointers.gi)


Control arguments:
-dont_free
   is used during debugging to disable the free mechanism.  This does
   not affect the allocation strategy.
-extend
   causes the area to be extensible, i.e., span more than one segment.
   This feature should be used only for perprocess, temporary areas.
-id STR
   specifies a string to be used in constructing the names of the
   components of extensible areas.
-no_freeing
   allows the area management mechanism to use a faster allocation
   strategy that never frees.


-size N
   specifies the octal size, in words, of the area being created or of
   the first component, if extensible.  If this control argument is
   omitted, the default size of the area is the maximum size allowable
   for a segment.  The minimum area is forty octal words.
-zero_on_alloc
   instructs the area management mechanism to clear blocks at
   allocation time.
-zero_on_free
   instructs the area management mechanism to clear blocks at free
   time.


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
