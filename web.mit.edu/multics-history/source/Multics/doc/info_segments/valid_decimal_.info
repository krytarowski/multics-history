03/08/85  valid_decimal_


Entry points in valid_decimal_:
   (List is generated by the help command)


:Entry:  valid_decimal_: 03/08/85  valid_decimal_


Function:
The valid_decimal_ subroutine tests decimal data for validity.


Syntax:
declare valid_decimal_ entry (fixed bin, ptr, fixed bin) returns
     (bit(1));
b = valid_decimal_ (dtype, dptr, dprec);


Arguments:
dtype
   is the data type descriptor of the decimal data.  It must be one of
   the following:  9-12, 29, 30, 35-36, 38-39, 41-46 81-84.  (Input)
dptr
   is a pointer to the data to be tested for validity.  (Input)
dprec
   is the precision of the data.  (Input)
b
   is the value returned by valid_decimal_.  It is "1"b if the data is
   valid, "0"b otherwise.  (Output)


Notes:
For decimal data to be valid, it must pass the following tests:
(1)  The precision must be > 0 and <= 59;
(2)  The data type descriptor must be one handled by valid_decimal_;
(3)  If the data is stored as nonoverpunched 9-bit characters, then if
     it has a sign, then the sign must be either "+" or "-".  The
     digits must all be one of the ASCII characters "0123456789";
(4)  If the data is stored as overpunched 9-bit characters, then the
     sign character must be either octal 173, 175, or in the range 101
     to 122.  The remaining digits must all be one of the ASCII
     characters "0123456789";
(5)  If the data is stored as 4-bit characters, then if it has a sign,
     then sign must be in the range "1010"b to "1111"b.  All digits
     must be in the range "0000"b to "1001"b.


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
