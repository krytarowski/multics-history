01/17/86  enter_retrieval_request, err

Syntax as a command:  err path {-control_args}


Function:  queues volume retrieval requests for specific segments,
directories, multisegment files (MSFs), and subtrees.


Arguments:
path
   is the pathname of a segment, directory, or node of a subtree.  The
   star convention is not allowed.


Control arguments:
-brief, -bf
   supresses printing of the ID and number of requests in queue.
-from DT, -fm DT
   specifies that the search for path and all inferior branches, if
   supplied, stops at time DT; thus, objects dumped before time DT are
   not recovered.  (See time_strings.gi for a description of valid DT
   values.)  If you give no -from, all valid dump volumes are searched.
-long_id
   prints the long ID of the request.  (Default: to print the short
   ID)
-multisegment_file, -msf
   specifies that the object named in path is a MSF and that all its
   components are to be recovered.


-new_path newpath
   specifies that if you have the correct access to retrieve the
   segment specified in path and to create a segment with the pathname
   newpath, then the object identified by path is retrieved into
   newpath.  You can't cross-retrieve directories, MSFs, or subtrees.
-notify, -nt
   notifies you by online mail of the success or failure of the
   request.  (Default: not to notify you)
-previous, -prev
   retrieves the object dumped prior to the object presently online.
   With -previous you can retrieve successively earlier copies of an
   object.  (Default: to retrieve the most recent copy)
-queue N, -q N
   queues requests in priority queue N.  (Default: 3)


-subtree, -subt
   retrieves the subtree inferior to the directory given in path as
   well as the directory.  If a subtree is found intact after a
   directory is recovered, then no further action is taken, unless you
   have provided a time interval (see "Notes").  (Default: not to
   retrieve subtrees)
-to DT
   searches for path and all inferior branches from time DT backwards;
   thus, objects dumped later than time DT are not recovered.  (See
   time_strings.gi for a description of valid DT values.)  If you don't
   select -to, time DT is assumed to be the start of the retrieval
   operation.


Access required: To retrieve a segment, you need w access to the
segment or m access to the containing directory; to retrieve a
directory, you need m access to the directory or m access to the
containing directory.


Notes: In certain cases where a directory is damaged the inferior
subtree may be unavailable until the directory is recovered.  When a
directory is recovered and -subtree is used, a check is made to see if
the subtree is available, and, if so, retrieval is assumed complete.

Retrieval requests of objects for which the online copy is more recent
or the same as the dump copy are refused, unless you use -previous,
-from, or -to.

You need not supply as a set of primary names the pathnames of the
segments and directories to be retrieved.  Any set of valid entrynames
is acceptable.

You have to log in to ring 1 to submit retrieval requests for mailboxes
and other ring 1 objects.


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
