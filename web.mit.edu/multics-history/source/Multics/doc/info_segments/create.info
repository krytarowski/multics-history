02/08/85  create, cr

Syntax as a command:  cr paths {-control_args}


Function: creates a segment in a specified directory, or in your
working directory; that is, it creates a storage system entry for an
empty segment.


Arguments:
paths
   are pathnames of segments to be created.


Control arguments:
-max_length N, -ml N
   sets the max_length of the created entry to N.  Used with
   -multisegment_file, -max_length sets future MSF components to N
   words long.
-multisegment_file, -msf
   creates an MSF with one empty component, instead of an empty
   segment.  When you foresee that you need much storage, creating an
   MSF prevents the expensive copying occurring when a segment is
   converted to an MSF.


-name STR, -nm STR
   specifies an entryname STR that begins with a minus sign, to
   distinguish it from a control argument.
-ring_brackets N1 {N2 {N3}}, -rb N1 {N2 {N3}}
   specifies the desired ring brackets for the created segment.  N3
   defaults to N2, which defaults to N1, which defaults to your
   validation level.


Access required: You must have m access to a directory to create the
segment, and you are given rw to it.


Notes: If there is a one-name segment with an identical name to the
segment you are creating, you are asked whether to delete the old
segment.  If it has multiple names, the conflicting one is removed and
a message is issued to you.  In either case, since the directory is
being changed, you must also have modify permission for the directory.

All directories specified in paths must already exist; that is, only a
single level of the storage system hierarchy can be created with this
command.

See the create_dir and link commands for the creation of directories
and links.


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
