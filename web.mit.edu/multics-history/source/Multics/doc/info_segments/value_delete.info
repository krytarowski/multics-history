10/17/84  value_delete, vdl

Syntax as a command:  vdl {name} {-control_args}


Function: causes one or more names not to have defined values, as set
by value_set or value_get -call.


Arguments:
name
   is a character string.  It can be -name STR to specify a name
   beginning with a minus sign, to distinguish it from a control
   argument.  (See "Notes.")


Control arguments:
-all, -a
   deletes data values set by value_$set_data as well as other values.
-brief, -bf
   suppresses the warning message "No match for starname."
-data
   deletes values set by value_$set_data, which you can list by giving
   -all or -data to value_list.  (Default: delete values set by
   value_set or value_$set)


-exclude STR, -ex STR
   deletes all existing values except those for names that match STR.
   If STR is surrounded by slashes (/), it is interpreted as a qedx
   regular expression to match names; otherwise, it is interpreted as a
   starname.  Only per-process values are deleted if you supply
   -perprocess, and only permanent ones if you give -permanent.  (See
   "Notes.")
-long, -lg
   allows the warning message "No match for starname."  (Default)


-match STR
   deletes all existing values for names that match STR.  If STR is
   surrounded by slashes, it is interpreted as a qedx regular
   expression to match names; otherwise, it is interpreted as a
   starname.  Only per-process values are deleted if you supply
   -perprocess, and only permanent ones if you give -permanent.  (See
   "Notes.")


-pathname path, -pn path
   specifies a value segment other than the current default one,
   without changing the default (see "Notes on Value Segment").
-permanent, -perm
   deletes only values stored in the value segment.
-perprocess, -pp
   deletes only per-process values.  The default is to delete the
   per-process value if one exists, otherwise to delete any permanent
   value.


Access required: You require rw access on the value segment except for
per-process values.


Notes: The -match and -exclude control arguments are applied in the
order specified.  Successive -match control arguments add to the set of
names processed (union), and successive -exclude control arguments
narrow down the set (intersection).  They are incompatible with the
name argument and can appear multiple times together.  (See
"Examples.")

See value_defined, value_get, value_list, value_path, value_set, and
value_set_path.


Notes on value segment: The value segment searched is either the one
specified by -pathname or the current default value segment.  The
default segment is initially
   [home_dir]>[user name].value
but you can change it by value_set_path.  Use of -pathname does not
change the default segment.


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
