02/22/85  severity

Syntax as a command:  severity command_name {-control_arg}


Syntax as an active function:  [severity command_name {-control_arg}]


Function: returns a number representing the severity of the most
recent translation or invocation of the specified command.


Arguments:
command_name
   is the name of any command that provides a severity indicator (see
   "Notes on severity indicators").


Control arguments:
-default XX, -dft XX
   specifies the default value XX to be returned if referencing a
   nonexistent or uninitialized severity indicator.


Notes: If the command specified has not defined a severity indicator
or you haven't invoked it yet, an error is indicated unless you give
-default.

The fortran command only supports the severity active function if your
site is using the new FORTRAN compiler as its standard FORTRAN
compiler.


Notes on severity indicators: Severity indicators are set by system
commands, user commands, or from command level by the
set_severity_indicator command.  They are single-precision (one word)
binary values.  The meaning of the value depends on the particular
command.  System commands supporting severity indicators explain their
values under "Severity" in the description of the command.  Under
program control you can define and set severity indicators by assigning
an integer value to an external variable.


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
