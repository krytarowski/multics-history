05/08/84  get_library_segment, gls

Syntax as a command:  gls seg_names {-control_args}


Function: finds source or object segments in the Multics system
libraries and copies them into your current working directory.  You
can specify which system libraries are to be searched and the order of
the search.  You can also search for user libraries that may not be
organized like the Multics system libraries.  (See "Notes on
operation" below.)

This command has functionally been replaced by library_fetch.


Arguments:
seg_names
   are the names of the segments to be found, including any language
   suffix.


Control arguments:
-brief, -bf
   does not print pathnames.  (Default)
-control path, -ct path
   looks in the directory specified by path to find the control
   segments.  The path argument can be -working_directory (-wd) to
   specify the current working directory (see "Notes on operation"
   below).  If -control is not specified, the command looks in the
   directory >ldd to find its control segments.
-long, -lg
   prints the pathname of the segment from which each segment is
   copied.


-rename new_name, -rn new_name
   copies the immediately preceding seg_name into your process
   directory and then into a segment in the working directory.  The
   new_name can be an equal name, in which case the equal convention is
   applied to the seg_name; otherwise, the segment created in the
   working directory is named new_name.  The new_name cannot be a
   pathname.
-sys lname
   uses the control segment "lname.control".


Notes:  If you don't give -sys, get_library_segment uses all the
control segments specified in the root directory, whose default is
>ldd.  For a complete list of the control segments, type

!  list -pn >ldd -all **.control
   hard
   standard
   unbundled
   auth_maint
   network
   languages
   tools


You can give multiple -sys in the same command invocation.  If so, all
the control segments referenced by the lnames in these arguments are
searched.  The order in which the control segments are processed and
searched is determined by the order in which the lnames appear in the
command and the directores referenced by each lname appear in the lname
control segment.

Control arguments and segment names can be interspersed throughout the
command invocation.


Notes on user libraries:  You can supply -control to extract segments
from a user library, causing the command to use a control segment with
the pathname path><keyword>.control.  This allows you to search your
own library structure, using your own search procedure or one of the
Multics system library search procedures listed below.


Notes on operation: If you don't select -control, gls searches for
segments in one or more of the Multics system libraries.  From each
keyword given in a -sys, it constructs a pathname of the form
>ldd><keyword>.control.  It uses this as the pathname of a control
segment.  This control segment tells gls which directories are to be
searched and how to search them.


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
