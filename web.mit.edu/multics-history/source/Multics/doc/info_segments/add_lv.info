04/19/84  add_lv, alv

Syntax as a command:  alv lv_name -control_arg


Function:  causes a logical volume to be accepted for paging.  This
command may be issued in ring 1 or ring 4.


Arguments:
lv_name
   is the name of a registered logical volume.


Control arguments:
-all
   is to mount all incomplete logical volumes.


Notes:  If all physical volumes for the logical volume are already
accepted, known, or assumed, the add_lv command ensures that all labels
have been read and checked, and then accepts the logical volume for
paging.


If one or more volumes are missing, the add_lv command assigns drives
for the missing volumes, prints mount messages for each missing volume
in the form:

mount pv k202 on dska_07

and sets the assigned drives into the assumed state.  The operator may
mount the physical volumes where requested or use his own judgment.  As
each physical volume is mounted, the operator issues an add_vol command
to the system; the last add_vol command causes the logical volume to be
accepted with a message of the form:

lv cp22 mounted private lv cp22 mounted


When the add_lv command is issued, all assumed drives should have the
correct packs mounted; otherwise an error message is typed.

The list_disks command lists all outstanding add_lv commands and the
del_lv command cancels an outstanding add_lv.

     User processes may initiate add_lv commands for private logical
volumes by use of the attach_lv command.  The system proceeds as though
an add_lv command had been issued by the operator.


Unless the NODT and/or NOLV keyword is included with the BOS BOOT
command, the system attempts to mount all logical volumes during
initialization that were mounted at the last shutdown.  For each
physical volume required, the system attempts to use the drive on which
the volume was mounted at the last shutdown.


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
