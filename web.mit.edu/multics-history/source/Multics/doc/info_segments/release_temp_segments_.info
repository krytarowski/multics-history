02/06/84  release_temp_segments_


Entry points in release_temp_segments_:
   (List is generated by the help command)


:Entry: release_temp_segments_: 09/25/86  release_temp_segments_

Function: returns temporary segments (acquired with the
get_temp_segment_ or get_temp_segments_ subroutine) to the free pool
of temporary segments associated with each user process.  Through the
pool concept, temporary segments can be used more than once during the
life of a process.  Since the process does not have to create a new
segment each time one is needed, overhead costs are decreased.


Syntax:
declare release_temp_segments_ entry (char(*), (*) ptr, fixed bin(35));
call release_temp_segments_ (program, ptrs, code);


Arguments:
program
   is a 32-character field identifying the program on whose behalf the
   temporary segment is to be used.  This field is displayed by the
   list_temp_segments command, and is also used by this subroutine to
   identify the caller as the owner of the temporary segment being
   released.  Besides giving the name of the command or subroutine
   invoked by the user, it can also briefly describe how the temporary
   segment is used; for example, "sort_seg (sort indexes)".  (Input)
ptrs
   is an array of pointers to the temporary segments being released.
   (Input/Output)  The pointers in the array are set to the null value
   after the segments are successfully returned to the free pool.
   This fact can be used by callers to determine if a given temporary
   segment has been released.  Null input values are not treated as
   errors; no action is performed for them.
code
   is a standard system status code.  (Output)


Notes:  A nonzero status code is returned if any segment being released
was not assigned to the given program.  See the description of the
get_temp_segments_ or the get_temp_segment_ subroutine for a
description of how to acquire temporary segments.


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
