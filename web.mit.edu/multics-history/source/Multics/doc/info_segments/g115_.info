03/31/83  g115_


Syntax for Attach Description:
   g115_ -control_args


Function: The g115_ I/O module performs stream I/O to a remote I/O
terminal that has the characteristics of the Honeywell Level 6 remote
batch facility (G115 type).  The hardware options currently supported
are defined by the control arguments described below.

Entry points in this module are not called directly by users; rather,
the module is accessed through the I/O system.


Control arguments:
   The following control arguments are optional, with the exception of
   -comm, -device, and -tty:
-ascii
   uses the ASCII character set.  This is the default.  This argument
   is accepted for compatibility with other terminal I/O modules.
-auto_call N
   specifies the phone number, N, to be called via the auto call unit
   on the specified communications channel.
-comm STR
   uses the communications I/O module specified by STR.  Currently, the
   only permissible value for STR is "rci".  This argument is required
   for compatibility with all other I/O modules used by the I/O daemon.


-device STR
   attaches the subdevice specified by STR.  STR can be printer, punch,
   reader, or teleprinter.
-physical_line_length N, -pll N
   specifies the physical line length, N, of the output device.  This
   argument is accepted for compatibility with other terminal I/O
   modules.
-terminal_type STR, -ttp STR
   STR specifies the terminal type whose conversion, translation, and
   special tables defined in the user or system terminal type table
   (TTT) are used to convert and translate input and output to and from
   the device.  If not specified, no conversion or translation is
   performed.  See "Notes" below.
-tty STR
   connects the remote I/O terminal to the communications channel named
   STR.


Open Operation:
The g115_ I/O module supports stream_input, stream_output, and
stream_input_output opening modes.


Put Chars Operation:
The put_chars entry blocks the data to be written into blocks of up to
324 characters and transmits them to the specified communications
channel.


Get Chars Operation:
The get_chars entry reads blocks of up to 324 characters and returns
the number of characters requested up to the next record separator.


List of Control Operations:
   This I/O module supports all the control operations supported by the
   tty_ I/O module, plus the following:
end_write_mode
   prevents the g115_ module from returning until all outstanding
   output has been written to the attached channel.


hangup_proc
   sets up a procedure to be called if the communications channel hangs
   up.  The hangup_proc structure has this form:
      dcl 1 hangup_proc aligned,
            2 entry entry variable,
            2 datap ptr,
            2 prior fixed bin;
   where:
   entry
      is the entry to call when a hangup is detected.
   datap
      is a pointer to data for the hangup procedure.
   prior
      is the ipc_ event call priority to be associated with hangup
      notification.


reset
   sets the edited mode of output conversion.
runout
   transmits any data stored in the output buffer.  There is no input
   structure.
select_device
   selects the subdevice (printer, punch, or teleprinter) to which
   output is next directed.  The input structure is of the form:
      dcl device char(32);


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
