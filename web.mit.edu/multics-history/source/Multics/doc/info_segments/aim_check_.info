02/13/84  aim_check_

The aim_check_ subroutine provides a number of entry points for
determining the relationship between two access attributes.  An access
attribute can be either an authorization or an access class.  See also
the read_allowed_, read_write_allowed_, and write_allowed_ subroutines.


Entry points in aim_check_:
   (List is generated by the help command)


:Entry:  equal:  02/13/84 aim_check_$equal


Function:  This entry point compares two access attributes to determine
whether they satisfy the equal relationship of the access isolation
mechanism (AIM).


Syntax:
declare aim_check_$equal entry (bit(72) aligned, bit(72) aligned)
     returns (bit(1) aligned);
returned_bit = aim_check_$equal (acc_att1, acc_att2);


Arguments:
acc_atti
   are access attributes.  (Input)
returned_bit
   is the result of the comparison.  (Output)
   "1"b   acc_att1 equals acc_att2.
   "0"b   acc_att1 does not equal acc_att2.


:Entry:  greater:  02/13/84 aim_check_$greater


Function:  This entry point compares two access attributes to determine
whether they satisfy the greater-than relationship of the AIM.


Syntax:
declare aim_check_$greater entry (bit(72) aligned, bit(72) aligned)
     returns (bit(1) aligned);
returned_bit = aim_check_$greater (acc_att1, acc_att2);


Arguments:
acc_atti
   are access attributes.  (Input)
returned_bit
   is the result of the comparison.  (Output)
   "1"b   acc_att1 is greater than acc_att2.
   "0"b   acc_att1 is not greater than acc_att2.


:Entry:  greater_or_equal:  02/13/84 aim_check_$greater_or_equal


Function:  This entry point compares two access attributes to determine
whether they satisfy either the greater-than or the equal relationships
of the AIM.


Syntax:
declare aim_check_$greater_or_equal entry (bit(72) aligned, bit(72)
     aligned) returns (bit(1) aligned);
returned_bit = aim_check_$greater_or_equal (acc_att1, acc_att2);


Arguments:
acc_atti
   are access attributes.  (Input)
returned_bit
   is the result of the comparison.  (Output)
   "1"b   acc_att1 is greater than or equal to acc_att2.
   "0"b   acc_att1 is not greater than or equal to acc_att2.


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
