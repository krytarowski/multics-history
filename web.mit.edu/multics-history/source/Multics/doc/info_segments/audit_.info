02/05/82 - audit_ I/O module


Attach description:  audit_ switch_name {-control_args}


Function: The audit_ I/O module intercepts I/O activity on a given
switch, allowing one to log and or edit this data.


Arguments:
switch_name
   is the name of an I/O switch to inserted between the existing
   switch and its I/O module.


Control arguments:
-truncate, -tc
   truncate the old audit file, if it has the same name as the new
   one.
-pathname, -pn
   use this pathname as the audit file. The default pathname is
   [homedir]>[date].audit .


Modes operation:
audit_input
   audit input lines. (DEFAULT -- on)
audit_output
   audit output lines. (DEFAULT -- on)
audit_edit
   enable audit editing. Does not put the user in the audit editor, it
   only makes it possible to enter the editor. (DEFAULT -- on)
audit_meter
   write a metering stamp before each entry in the file.  The stamp
   consists of the actual time of the metering, incremental cpu time
   since the last stamp, and the incremental page faults since the
   last stamp.
audit_file_size=n
   set the maximum number of records for the audit file to n.  The
   file is treated as a circular buffer of n records.  A file size of
   "unlimited" allows the audit file to grow indefinitely.
audit_trigger=x
   set the audit request trigger character to x.
audit_trace
   trace all control and mode calls to the module.  Mode trace
   entries are identified by a TM tag, control trace entries are 
   identified by a TC tag.
audit_truncate
   truncate the audit file.
audit_transparent
   turn off auditing of audit and audit edit requests, as well as
   their output.
audit_suspend
   turn off all modes.
audit_use_editor_prompt
   turn on prompting in the audit editor.
audit_editor_prompt_string=STR, audit_epstr=STR
   set the audit editor prompt string to STR.  The audit editor
   prompt has the default appearance "audit editor:  " ,or if the
   number of recursive invocations of the editor is greater than 1,
   "audit editor(level N):  ", where N is the depth of the current 
   invocation.  This string is used as an ioa_ control string, with
   the arguments being: a bit which is on if the level is greater
   than 1; and, the level.  The default string is
   "^/audit editor^[(^d)^]:^2x".


Notes on audit file: The default audit file pathname is
[homedir]>[date].audit .  The default file_size is unlimited.  If one
has sufficient data logged, the audit file may become a multi-segment
file.  The first 10 bytes of the file contains the header, which is
used by both the audit_ I/O module and the audit_editor.


List of entry type identifiers:
EL
   edit line, returned from audit editor.
IC
   result of a get_chars.
IL
   result of a get_line.
M
   metering data.
OC
   result of a put_chars.
TC
   control request trace.
TM
   mode request trace.


Notes: For information about the audit editor see audit_editor.info.


Notes on audit requests: The audit requests are always recognized when
auditing is on.  The three character request sequence is the trigger
character followed by the desired request followed by a new line.  The
default trigger character is an exclamation mark ("!").


List of audit requests:
!.
   print "audit" and which of input and output is being audited.
!?
   print a brief description of available audit requests.
!e
   enter the audit editor.
!E
   enter the audit editor, with the input line processed as edit
   requests.
!a
   abbrev expand the input line.  
!r
   replay the input line.  That is, display the input line without a
   new line.  Further input up to the next new line is appended to the
   redisplayed input.  This is the input line which is passed through
   the audit_ I/O module.
!t
   instructs the audit_ module not to log the input line, i.e. to make
   it transparent.
!d
   delete the line.  It prevents the input line from ever being seen.
!n
   no operation.  The input line to which this is appended is simply
   passed through the audit_ module.


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
