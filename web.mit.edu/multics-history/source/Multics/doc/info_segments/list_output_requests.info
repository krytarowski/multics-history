08/19/88  list_output_requests, lor

Syntax:  lor {request_identifier} {-control_args}


Function:  lists requests in the I/O daemon queue.


Arguments:
   request_identifier can be chosen from the following.  If no
   request_identifier is specified, all requests are listed.
path
   is the relative pathname of one or more requests to be listed.  The
   star convention is allowed.
-entry STR, -et STR
   selects only requests whose entry names match STR.  The star
   convention is allowed.  Directory portions of request pathnames are
   not used for selecting requests.
-id ID
   selects only requests whose request_ids match ID.  Type "help
   request_ids".


Control arguments:
-absolute_pathname, -absp
   prints the full pathname.
-admin {User_id}, -am {User_id}
   selects requests of all users or of the specified user.  Default is
   to list the user's own requests.  Requires r extended access to the
   queue(s) to read other users' requests.  See Notes below.
-all, -a
   searches all queues.
-brief, -bf
   prevents printing of comment and request state in normal (not -long)
   mode.
-forms {STR}
   selects only requests with special forms specified.  If you specify
   STR, only requests with special forms matching STR are chosen.


-immediate, -im
   selects only I/O requests that are not deferred.  With -position,
   ignores deferred requests when computing position.
-long, -lg
   prints all information about each selected request, including long
   request_id and full pathname.  Default is to print short request_id
   and entryname.
-long_id, -lgid
   prints the long request_id.
-position, -psn
   prints queue positions of each selected request.  With -total,
   prints a list of queue positions.  Requires r extended access to the
   queue(s), to read other users' requests.


-queue N, -q N
   searches only queue N.  If this control argument is not specified,
   all queues are searched but nothing is printed for queues from
   which no requests are selected.
-print, -pr
   specifies that the requests listed are found in the queue(s)
   associated with the default printer request type.  See Notes below.
-punch, -pch
   specifies that the requests listed are found in the queue(s)
   associated with the default punch request type.  See Notes below.
-plot
   specifies that the requests listed are found in the queue(s)
   associated with the default plotter request type.  See Notes below.


-request_type STR, -rqt STR
   searches the I/O daemon queues belonging to the specified request
   type.  See Notes below.
-total, -tt
   prints only the total number of selected requests and the total
   number in the queue.  Incompatible with -long and -brief control
   arguments.
-user User_id
   selects only requests of the specified user.  Requires r extended
   access to the queue(s).  See Notes below.


Notes: Only request types belonging to the printer, punch, or plotter
generic types can be specified by the -request_type control argument
when the -long argument is given.  A list of these request types can be
obtained by invoking the print_request_types command.


The -print, -punch, -plot and -request_type control arguments are
mutually exclusive.  Only one may be used in a given command.  If none
are given, then lor lists the default request type used by eor -print
(as displayed by the print_request_types command).


The User_id arguments specified after -admin or -user can have any of
the following forms:
   Person_id.Project_id   matches that user only
   Person_id.*            matches that person on any project
   Person_id              same as Person_id.*
   *.Project_id           matches any user on that project
   .Project_id            same as *.Project_id
   *.*                    same as -admin with no User_id following it.

If -admin User_id or -user User_id is given more than once in a
command, only the final instance is used.


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
