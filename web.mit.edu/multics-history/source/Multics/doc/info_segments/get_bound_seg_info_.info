06/13/90  get_bound_seg_info_

Function:  The get_bound_seg_info_ subroutine is used by several
object display programs concerned with bound segments to obtain
information about a segment as a bound segment as well as general
object information.


Syntax:
dcl get_bound_seg_info_ entry (ptr, fixed bin(24), ptr, ptr, ptr,
     fixed bin(35));
call get_bound_seg_info_ (obj_ptr, bit_count, oi_ptr, bm_ptr,
     sblk_ptr, code);


Arguments:
obj_ptr
   is a pointer to the beginning of the segment.  (Input)
bit_count
   is the bit count of the segment.  (Input)
oi_ptr
   is a pointer to the object format structure returned by the
   object_info_$display entry point.  (Input)  This structure is
   defined in object_info.incl.pl1.


bm_ptr
   is a pointer to the bind map.  (Output)
sblk_ptr
   is a pointer to the base of the symbol block containing the
   bindmap.  (Output)
code
   is a standard status code.  (Output)


Notes:  If obj_ptr points to an object segment but no bindmap is
found, two possible codes are returned.  One is
error_table_$not_bound, indicating that the segment is not bound.
The other is error_table_$oldobj, indicating that the segment was
bound before the binder produced internal bind maps.  If either one
of these is returned, the structure pointed to by oi_ptr contains
valid information.


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
