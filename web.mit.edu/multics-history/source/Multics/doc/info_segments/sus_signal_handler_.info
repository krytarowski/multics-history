03/31/83  sus_signal_handler_


The sus_signal_handler_ subroutine is the static condition handler for
the sus_ condition.  The standard process overseers establish this
handler by calling sct_manager_$set.  For interactive processes, the
sus_ condition typically occurs when the process is disconnected from
its login terminal channel.  For absentee processes, the sus_ condition
occurs when the operators suspend the job.

When the user reconnects to the process, sus_signal_handler_ may
attempt to execute an exec_com, according to whether
reconnect_ec_enable or reconnect_ec_disable was last called before
disconnection.


Entry points in sus_signal_handler_:
   (List is generated by the help command)


:Entry:  reconnect_ec_enable:  02/11/83
sus_signal_handler_$reconnect_ec_enable


Function:  This entry point enables searching for the segment
reconnect.ec when the user reconnects to a disconnected process.  As a
result, sus_signal_handler_ looks first in the user's home directory,
then in his project directory (>user_dir_dir>Project_name), and finally
in >system_control_dir.  When the reconnect.ec segment is found, the
command "exec_com >Directory_name>reconnect" is executed.


Syntax:
declare sus_signal_handler_$reconnect_ec_enable entry;
call sus_signal_handler_$reconnect_ec_enable ();


Notes:
The use of reconnect.ec is enabled automatically by the standard
process overseer process_overseer_.

Invocation of the reconnect.ec is not automatically enabled by the
project_start_up_ process overseer.  Thus, when using
project_start_up_, the project administrator may enable the invocation
of reconnect.ec at any point in the project_start_up.ec by using the
reconnect_ec_enable command.

The current command processor is used to execute the reconnect.ec
command.  If the user is using the abbrev command processor, any
applicable abbreviation will be expanded.


:Entry:  reconnect_ec_disable:  02/11/83
sus_signal_handler_$reconnect_ec_disable


Function:  This entry point reverses the effect of the
sus_signal_handler_$reconnect_ec_enable entry.  After reconnection to a
disconnected process, there is no attempt made to find or invoke the
exec_com "reconnect.ec".


Syntax:
declare sus_signal_handler_$reconnect_ec_disable entry;
call sus_signal_handler_$reconnect_ec_disable ();


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
