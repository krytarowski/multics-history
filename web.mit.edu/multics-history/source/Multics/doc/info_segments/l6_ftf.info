08/22/83  l6_ftf

Syntax:  l6_ftf channel_name {-control_args}


Function:  allows a process to handle file transfer requests from a
Level 6 using the L6 File Transfer Facility (FTF) protocol (referred to
as L6 TRAN, see the DPS 6 & Level 6 to Level 66 File Transmission
Facility User's Guide, Order No. CZ60).  This command continues
to listen for and carry out Level 6 requests until the user explicitly
tells it to stop.  Only sequential ASCII or sequential binary files can
be transferred to or from the Level 6.  ASCII files on Multics are
assumed to be stream files when sending and are stored as stream files
when receiving.  Binary files on Multics have a special format (see
"Notes" below).


Arguments:
channel_name
   is the name of a polled VIP subchannel over which the file transfers
   take place.  It must have the "x" prefix (i.e., b.h217.x01).


Control arguments:
-long, -lg
   prints a line describing each file transfer as it starts and as it
   completes.  The default is not to print this information.
   -target_dir (-td) restricts the pathnames of any files to be
   transferred to be relative to the target directory.  The root may be
   specified as ">"; this allows absolute pathnames to be specified.
   The default is the working directory.


Access Required:  The user must have rw access to the Access Control
Segment (ACS) of the specified channel name to use the file transfer
facility.  The user must have the "dialok" attribute turned on in the
Project Master File (PMF).  The polled VIP subchannel must have the
slave attribute in the Channel Master File (CMF).


Notes:  This command continues to listen for and process file transfer
requests from the Level 6 on the specified channel until the user types
"quit" ("q") or the channel disconnects.  The quit request can be typed
at any time but only takes effect before any file transfer has started
or between two file transfers.

Interrupting and releasing a file transfer in the middle of the
transfer may result in aborting the operation in an inconsistent state,
and causing the Level 6 task to hang.

The Polled VIP subchannel must be defined with a terminal type that
assigns "max_message_len" to a value of 1009 in its additional_info
statement.


Only sequential ASCII or sequential binary files can be transferred
from or created on the Level 6.  On Multics, ASCII files are assumed to
be or are created as stream vfiles.  Notice that blank lines in a Level
6 file actually have some character on them, usually a space or tab.
These characters end up in the Multics file.  The command takes care of
sending blank lines from Multics files to the Level 6 by sending a line
containing a single-space character.

On Multics, binary files are sequential vfiles.  Each record is assumed
to have the following format:

      dcl 1 binary_record aligned based,
            2 num_sextets fixed bin(35) aligned,
            2 sextets (0 refer binary_record.num_sextets) fixed bin(6)
              unsigned unaligned;

Each binary record is stored in a vfile_ record of size
currentsize(binary_record) * 4.


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
