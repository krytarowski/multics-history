03/05/80  apl_pickup_float_bin_2_ external function

Function:  read double-precision floating point numbers into apl.


Usage:
   )MFN PICKUP APL_PICKUP_FLOAT_BIN_2_
   V -< PICKUP 'PATH'


Arguments:
PATH
   is the pathname of a segment containing the numbers.  The bitcount
   must be set to 72 times the number of elements.

V
   is the vector of numbers that is returned.


Sample PL/I program:
sample:
     procedure;

declare	code		fixed bin (35);
declare	com_err_		entry options (variable);
declare	float		builtin;
declare	get_wdir_		entry () returns (char (168));
declare	hcs_$make_seg	entry (char (*), char (*), char (*), fixed bin (5), ptr, fixed bin (35));
declare	hcs_$set_bc	entry (char (*), char (*), fixed bin (24), fixed bin (35));
declare	idx		fixed bin;
declare	null		builtin;
declare	number_array	(130560) float bin (63) based (number_array_ptr);
declare	number_array_ptr	ptr;
declare	RW_mode		fixed bin (5) initial (01010b) internal static options (constant);
declare	working_dir	char (168);

	working_dir = get_wdir_ ();

	call hcs_$make_seg (working_dir, "number_array", "", RW_mode, number_array_ptr, code);
	if number_array_ptr = null
	then do;
		call com_err_ (code, "sample", "^a>^a", working_dir, "number_array");
		return;
	     end;

	do idx = 1 to 100;
	     number_array (idx) = float (idx, 63);
	end;

	call hcs_$set_bc (working_dir, "number_array", 72 * (idx - 1), code);
	if code ^= 0
	then call com_err_ (code, "sample", "^a>^a", working_dir, "number_array");

     end sample;


Sample FORTRAN program:
	dimension data (100)
	real*8 data
	integer i
c
	open (1, binary stream=.true., file="number_array", mode="out")
	do 10, i = 1, 100
	     data (i) = dble (float (i))
10	continue
	write (1) data
	close (1)
	end


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
