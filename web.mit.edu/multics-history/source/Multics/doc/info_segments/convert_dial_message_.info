02/08/84  convert_dial_message_

The convert_dial_message_ subroutine is used in conjunction with the
dial_manager_ subroutine to control dialed terminals.  It converts an
event message received from the answering service over a dial control
event channel into status information more easily used by the user.


Entry points in convert_dial_message_:
   (List is generated by the help command)


:Entry:  return_io_module:
02/08/84 convert_dial_message_$return_io_module


Function: processes event messages from the answering service
regarding the status of a dialed terminal or an auto call line.  In
addition to returning line status, this entry point also returns the
device name and I/O module name for use in attaching the line through
the iox_ subroutine.


Syntax:
declare convert_dial_message_$return_io_module entry (fixed bin(71),
     char(*), char(*), fixed bin, 1 aligned, 2 bit(1) unal, 2 bit(1)
     unal, 2 bit(1) unal, 2 bit(33) unal, fixed bin(35));
call convert_dial_message_$return_io_module (message, channel_name,
     io_module, n_dialed, flags, code);


Arguments:
message
   is the event message to be decoded.  (Input)
channel_name
   is the name of the channel that has dialed up or hung up.  (Output)
io_module
   is the name of the iox_ I/O module to be used with the assigned
   device.  (Output)
n_dialed
   is the number of terminals currently dialed to the process or -1.
   (Output)


flags
   is a bit string of the following structure:  (Output)
      dcl 1 flags        aligned,
            2 dialed_up  bit(1) unal,
            2 hung_up    bit(1) unal,
            2 control    bit(1) unal,
            2 pad        bit(33) unal;
   Only the first three bits have meaning, and only one can be on at a
   time.  See "Notes" below.
code
   is a standard status code.  (Output)


Notes:  The message may be either a control message or an informative
message.  Informative messages have flags.control off ("0"b), n_dialed
is set to -1, channel is set to the name of the channel involved,
io_module is set to the name of an I/O module, and either
flags.dialed_up or flags.hung_up is on, indicating that the named
channel has either just dialed up or just hung up.

Control messages have flags.control on ("1"b), and n_dialed is set to
the number of dialed terminals or -1.


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
