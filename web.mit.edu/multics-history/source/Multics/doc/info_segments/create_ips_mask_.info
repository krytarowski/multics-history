03/05/85  create_ips_mask_


The create_ips_mask_ subroutine returns a bit string that can be used
to disable specified ips (interprocess signal) interrupts (also known
as ips signals).


Entry points in create_ips_mask_:
   (List is generated by the help command)


:Entry:  create_ips_mask_:  03/05/85  create_ips_mask_


Function:
returns a bit string that can be used to disable specified ips
interrupts.


Syntax:
declare create_ips_mask_ entry (ptr, fixed bin, bit(36) aligned);
call create_ips_mask_ (array_ptr, lng, mask);


Arguments:
array_ptr
   is a pointer to an array of ips names that are declared as char(32)
   aligned.  (Input)
lng
   is the number of elements in the array pointed to by array_ptr.
   (Input)
mask
   is a mask that disables all of the ips signals named in the array.
   (See "Notes" below.)


Notes:  If any of the names are not valid ips signal names, the
condition create_ips_mask_err is signalled.  Currently, the allowed ips
names are:

     quit
     cput
     alrm
     neti
     sus_
     trm_
     wkp_
     pgt_
     system_shutdown_scheduled_
     dm_shutdown_scheduled_


If the first name in the array is -all, then a mask is returned that
masks all interrupts.

The returned mask contains a "0"b in the bit position corresponding to
each ips name in the array and a "1"b in all other bit positions.  The
bit positions are ordered as in the above list.  It should be noted
that it is necessary to complement this mask (using a statement of the
form "mask = ^mask") in cases where the requirement is for a mask with
"1" bits corresponding to specified interrupts.  An ips mask is used as
an argument to the hcs_$reset_ips_mask and hcs_$set_ips_mask entry
points.


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
