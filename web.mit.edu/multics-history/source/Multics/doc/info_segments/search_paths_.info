09/01/83  search_paths_


Entry points in search_paths_:
   (List is generated by the help command)


:Entry:  get:  09/01/83  search_paths_$get

Function: This entry point returns the search paths in a search
list.


Syntax:
declare search_paths_$get entry (char (*), bit (36), char (*), pointer,
     pointer, fixed binary, pointer, fixed binary (35));
call search_paths_$get (sl_name, sl_control, ref_path, search_seg_ptr,
     sl_info_area_ptr, sl_info_version, sl_info_ptr, code);


Arguments:
sl_name
   is the search list name.  (Input)
sl_control
   is an expansion control mask.  See the sl_control_s structure in
   "Notes" below.  (Input)
ref_path
   is the directory name used for the "-referencing_dir" search path.
   If ref_path is null, then the "-referencing_dir" search path is
   skipped.  (Input)
search_seg_ptr
   is a pointer to the search segment.  If this pointer is null, then
   the process search segment is used.  (Input)
sl_info_area_ptr
   is a pointer to an area in which sl_info can be allocated.  (Input)


sl_info_version
   is the version of the sl_info structure required.  (Input)
sl_info_ptr
   is a pointer to the sl_info structure containing the search paths in
   the search list.  (See "Notes" below).  (Input)
code
   is a standard status code.  It may be the following:
   error_table_$no_search_list the search list was not in the search
   segment.  (Output)


Notes:
The sl_control argument is defined by the sl_control_s structure
contained in sl_control_s.incl.pl1.  Expanding the "-referencing_dir"
keyword substitutes the ref_path argument for the keyword.

The sl_info structure is contained in sl_info.incl.pl1.


Arguments:
version
   is the version of the sl_info structure.
num_paths
   is the number of search paths in this structure.
change_index_p
   is a pointer to the search lists' update count.  The update count is
   a fixed binary (71) integer, and is incremented each time the search
   list is modified.  The caller can determine if the search list has
   been modified by comparing change_index in this structure with the
   value pointed to by change_index_p.


change_index
   is the current value of the search lists' update count.
type
   specifies the type of the search path.  Keywords in sl_info.incl.pl1
   define the possible values.
code
   is a standard status code for this search path.
pathname
   is the search path.



                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
