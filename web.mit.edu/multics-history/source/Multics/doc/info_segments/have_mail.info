10/17/84  have_mail

Syntax as a command:  have_mail mbx_specification {-control_args}


Syntax as an active function:
   [have_mail {mbx_specification} {-control_args}]


Function: returns "true" if there is mail in the specified mailbox.


Arguments:
mbx_specification
   specifies the mailbox to be examined.  If not given, your default
   mailbox (>udd>Project_id>Person_id>Person_id.mbx) is used.


List of mbx specifications:
-log
   specifies the user's logbox and is equivalent to
      -mailbox >udd>Project_id>Person_id>Person_id.sv.mbx
-mailbox path, -mbx path
   specifies the pathname of a mailbox.  The suffix mbx is added if
   necessary.
-save path, -sv path
   specifies the pathname of a savebox.  The suffix sv.mbx is added if
   necessary.


-user STR
   specifies either a user's default mailbox or an entry in the system
   mail table (see "Notes on mailbox selection by user" below).
STR
   is any noncontrol argument and is first interpreted as -mailbox STR.
   If no mailbox is found, it is then interpreted as -save.  If no
   savebox is found, it is then interpreted as -user STR.


Control arguments:
-interactive_messages, -im
   returns "true" if there are any interactive messages in the mailbox.
   (Default)
-mail, -ml
   returns "true" if there is any mail in the mailbox.  (Default)
-no_interactive_messages, -nim
   returns "true" only if there is mail in the mailbox, ignoring
   whether there are any interactive messages present.
-no_mail, -nml
   returns "true" only if there are interactive messages in the
   mailbox, ignoring whether there is any mail in the mailbox.


Notes on mailbox selection by user: The user's default mailbox is
specified in the form Person_id.Project_id.  For an entry in the mail
table, STR is usually in the form of Person_id (the mail table is fully
described in the Extended Mail System User's Guide, CH23).


If STR contains one period and no white space, it is interpreted as a
User_id that specifies the user's default mailbox; otherwise, it is
interpreted as the name of an entry in the mail table.  For example,
   -user Smith.SiteSA
is interpreted as a User_id that identifies a default mailbox.  On the
other hand,
   -user "John M. Morton"
   -user J.C.Meade
   -user Meade
are all interpreted as the names of entries in the mail table:  the
first because it contains white space; the second because it contains
more than one period; the third because it contains no period.


When interpreted as a User_id, the STR cannot contain any angle
brackets (<>) and must have the form Person_id.Project_id, where
"Person_id" cannot exceed 28 characters and "Project_id" 32 characters.
In this case, "-user STR" is equivalent to the mbx_specification
-mailbox >udd>Project_id>Person_id>Person_id.mbx.

When interpreted as the name of a mail table entry, STR cannot contain
any commas, colons, semicolons, backslashes (\), parentheses, angle
brackets, braces ({}), quotes, commercial at-signs (@), or white space
other than spaces.  The query of the mail table is performed in a
case-insensitive manner.  Use the display_mailing_address command to
determine the actual address corresponding to the STR.  The address in
the mail table must identify a mailbox.


Access required: If you give either -no_interactive_messages or
-no_mail, you must have rs extended access to the mailbox; otherwise,
you only need s extended access.


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
