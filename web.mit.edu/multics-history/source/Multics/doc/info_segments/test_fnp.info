02/16/84  test_fnp

Syntax:  test_fnp FNP_tag {-control_args}


Function:  tests DN66xx FNPs with the FED-supplied FNP test programs.


Arguments:
FNP_tag
   is the tag of the FNP to be tested.  This FNP must have been shut
   down or FDUMPed; it cannot be involved in testing by another
   process.  Level 6 FNPs cannot be tested with this command.


Control arguments:
-exec name
   specifies the FNP executive to be run initially.  The name can be
   either "BOS" or "IOS."  The default is BOS.
-input_switch name, -isw name
   specifies the I/O switch from which operator input is read.  The
   default switch is user_input.
-message_switch name, -msw name
   specifies the I/O switch to which messages intended for the T&D line
   printer are written.  The default switch is user_output.  The FNP
   T&D programs generate output of this form if its query "IS A PRINTER
   AVAILABLE?"  is answered affirmatively.
-output_switch name, -osw name
   specifies the I/O switch to which messages intended for the operator
   console are written.  The default switch is user_output.


Notes:  The FNP type of the FNP selected for testing is obtained from
information contained in the Channel Definition Table
(>system_control_1>cdt).  If you do not have access to this data base,
your query is issued in the form

     TEST_FNP   What is the FNP Type of FNP TAG?
     Anwser   DN6600, DN6670, DN355, or quit.


If the "quit" response in entered, control is returned to the current
command processor.

You should be familiar with the FED offline version of TST3BT.  The
test options, queries, and message diagnostics relevant to FNP testing
are produced by the FNP test programs themselves.  The documentation
for the offline version of TST3BT running under the PAS2 EXEC and the
T&D documentation for the FNP tests contain information on actual
dialogue with this program; it is the same as the dialogue with the
offline version.


The operator console of TST3BT is simulated by the Multics terminal
controlling the process running test_fnp.  By default, test output
appears on the terminal, and responses are expected from the terminal.
Normal Multics input line editing applies to all responses, and
lowercase input is acceptable.

The response "quit" to any query of test_fnp, regardless of how it was
generated, terminates the test session, releases the FNP, and returns
to command level.


The REQUEST button of the operator console is simulated by striking the
QUIT key and using the program_interrupt (pi) command to return to
test_fnp.  Normally, the REQUEST button causes an interrupt to be sent
to the FNP directing the FNP executive to enter its request loop.

The tests executed by test_fnp are sorted in the keyed sequential
vfile_ >system_library_tandd>tandd_deck_file.  These tests are loaded
from the FE distributed "FNP binary deck tapes" by the
load_tandd_library command, described in the Multics Online Test and
Diagnostics Reference Manual (AU77).


Access required:  Access to the tandd_ gate is required.  Access to
>sc1>cdt is required to obtain the correct model number of the FNP.  If
you do not have access to the CDT, the default model number is DN6678.


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
