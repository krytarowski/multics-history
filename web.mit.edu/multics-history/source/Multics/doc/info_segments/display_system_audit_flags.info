:Info: display_system_audit_flags: 12/13/84  display_system_audit_flags


Syntax:  display_system_audit_flags


Function:  Displays the system parameters that control auditing of user
access to system resources.


Notes:  See also the set_system_audit_flags command.


Examples:

! display_system_audit_flags
  Covert channel auditing enabled,
     threshold = company_sensitive,accounting,executive,payroll
  Successful access auditing disabled.
  Unsuccessful access auditing disabled.


:Info: set_system_audit_flags: 03/25/85  set_system_audit_flags


Syntax:  set_system_audit_flags -control_args


Function:  Sets the system parameters that control auditing of user
access to system resources.


Control arguments:
-covert_channel STR, -cch STR
   specifies that all operations which may be used as a covert channel
   be audited.  Sending processes whose authorization is above the
   threshold STR will be audited.  Receiving processes will be audited
   regardless of authorization.  STR is an access class string
   containing either short or long names.
-no_covert_channel, -ncch
   specifies that auditing of operations because they may be used as
   covert channels is to be turned off.


-successful_access STR, -sa STR
   specifies that all operations on system resources which are granted
   by the system are to be audited.  Only those operations involving
   resources equal to or above the threshold STR will be audited.
   STR is an access class string containing either short or long names.
-no_successful_access, -nsa
   specifies that auditing of operations on system resources which are
   granted by the system is to be turned off.


-unsuccessful_access STR, -usa STR
   specifies that all operations on system resources which are denied
   by the system are to be audited.  Only those operations involving
   resources equal to or above the threshold STR will be audited.
   STR is an access class string containing either short or long names.
-no_unsuccessful_access, -nusa
   specifies that auditing of operations on system resources which are
   denied by the system is to be turned off.


Access required:  The user must have access to the highly privileged
gate hphcs_.


Notes: Some parameter settings can result in serious degradation of
system performance.  The user should be aware of the implications
before setting the parameters.

Because some system operations may be categorized in more than one
way, they may be audited due to more than one auditing flag.  For
example, a particular operation on a system resource, which may also
be used as a covert channel will be audited due to either the covert
channel threshold or the successful access threshold or the
unsuccessful access threshold.  Further, the per-process audit flags
may further control privileged or administrative operations.

This command will change only those auditing parameters as specified
in the control arguments.  The other parameters are not modified.

See also the display_system_audit_flags command.


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
