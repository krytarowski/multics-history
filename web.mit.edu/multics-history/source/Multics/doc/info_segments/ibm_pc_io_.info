02/26/85  ibm_pc_io_


The ibm_pc_io_ I/O module is used to transfer ASCII files between a
Multics process and a microcomputer that runs the IBM PC-to-Host data
transfer protocol.  It performs 7-bit stream I/O over an asynchronous
communications channel using the data transfer protocol for the IBM
Personal Computer as defined by IBM in their Asynchronous Communication
Support Manual, Order No.  6024032.


Entry points in this module are not called directly by users; rather
the module is accessed through the I/O system, usinng the
micro_transfer command.


Attach Description:
     ibm_pc_io_ switch


Arguments:
switch
   is the name of the target I/O switch.  The switch must be open for
   stream_input_output.  The I/O module for the target switch must be
   supported by the timed_io_ module.  The user is responsible for
   setting any modes required by the protocol.  For example, modes for
   the user_i/o switch would be:
   "^8bit,breakall,^echoplex,rawi,^crecho,^lfecho,^tabecho,rawo"


Open Operation:
The ibm_pc_io_ I/O module supports the stream_input and stream_output
opening modes.


Close Operation:
When opened for stream_output, the close entry transmits any remaining
data in the internal buffer before closing the switch.  See Buffering
below.


Put Chars Operation:
The put_chars entry transmits the data one line at a time in variable
length data blocks.  The end-of-line character is a carriage return.
Lines exceeding 250 characters are transmitted in multiple blocks.  See
Notes below.


Get Chars Operation:
The get_chars entry reads protocol blocks and returns the message text
to the caller's buffer.  For further explanation of the get_chars
entry, see the iox_$get_chars entry.


Get Line Operation:
The get_line entry reads protocol blocks and returns the message text
to the caller's buffer.  Characters are returned until either a
carriage return character is placed in the buffer or the buffer is
filled.


Control Operation:
This operation is not supported.


Modes Operation:
This operation is not supported.


Buffering:
The IBM PC-to-Host protocol uses variable length data packets.  Data
not ending with a carriage return character is stored in an internal
buffer by the the ibm_pc_io_ I/O module.


Notes:  A line is a string of characters terminated by a carriage
return character, 015 (octal).  Only 250 characters can be transmitted
in each line.  When a line of text contains more than 250 characters,
it is divided and one or more carriage returns inserted before
transmission.  For example, a call to ibm_pc_io_ to transmit a 260
character line would result in two lines being transmitted, one
containing the first 249 characters plus a carriage return and the
second containing the last 11 characters.


The IBM PC-to-Host data transfer protocol does not check for errors
during transmission.


No particular line speed is guaranteed when transferring data between
Multics and a microcomputer.  Line speed is dependent on the
microcomputer and the load of the FNP and communication system for
Multics.  Due to the nature of the IBM PC-to-Host protocol, files may
not be successfully transferred to Multics over high-speed lines.  The
actual limit depends on the site configuration and current load.


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
