03/18/85  video_utils_


This subroutine provides interfaces for activating and de-activating
the video system.


Entry points in video_utils_:
   (List is generated by the help command)


:Entry: turn_on_login_channel: 03/18/85 video_utils_$turn_on_login_channel


Function: This entry removes the existing attachment of the user's
terminal, replacing it with the video system.  When this entry returns
successfully, the switch user_terminal_ is attached through tc_io_ to
the user's terminal.  The switch user_ i/o is attached through
window_io_ to a window covering the entire screen.  invoked: vertsp,
can, erkl, esc, red, and ctl_char.  In addition, if ^pl is set on
video system invocation, ^more will be set in the video system.
Similarly, the settings of the current erase and kill characters are
copied when the video system is invoked.


Syntax:
declare video_utils_$turn_on_login_channel entry (fixed bin (35),
     char (*));
call video_utils_$turn_on_login_channel (code, reason);


Arguments:
code
   is a standard system error code.  (Output)
reason
   contains information about the error, if there is one.  (Output)
   (128 characters are enough to hold any message that may be returned
   in reason.)


Notes:  If the video system is already in service on the user's
terminal, the status code video_et_$wsys_invoked is returned, and the
value of reason is not defined.

If the activation of the video system fails, the original attachment of
the terminal (through tty_) is restored, and information is returned in
reason and code.

In particular, if the switch user_i/o is not currently attached through
tty_, the code video_et_$switch_not_attached_with_tty_ is returned.
This may indicate that the user has auditing or the graphic system in
place.  The message returned in reason advises the user to remove
graphics or auditing and try again.


:Entry: turn_off_login_channel: 03/18/85 video_utils_$turn_off_login_channel


Function: This entry reverses the actions of
video_utils_$turn_on_login_channel.  That is, it removes the window
attachment of user_i/o, detaches terminal control from the user's
terminal, and attaches user_i/o to the user's terminal via tty_.  The
settings of the following modes are copied when when the video system
is revoked: vertsp, can, erkl, esc, red, and ctl_char.  If ^more is
set while in the video system, ^pl mode will be set after revoking the
video system.  (For more details on modes, see the window_io_ I/O
module.) Similarly, the settings of the current erase and kill
characters are copied when the video system is revoked.  It is the
user's responsibility to detach any windows other than user_io before
calling this entry point


Syntax:
declare video_utils_$turn_off_login_channel entry (fixed bin (35));
call video_utils_$turn_off_login_channel (code);


Arguments:
code
   is a standard system error code.  (Output) It is nonzero if and only
   if the video system can not be removed from the user's terminal.


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
