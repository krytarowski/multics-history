07/12/84  expand_device_writer, xdw

Syntax as a command:  xdw {path} {-control_args}


Function:  The expand_device_writer command is used to invoke the
Expander to expand an expansion input file into an expansion output
file.


Arguments:
path
   is the pathname of the expansion input file.  The entryname of this
   file must have the suffix xdw, but the suffix need not be given in
   the command line.  By default, the expanded expansion output file is
   written to a segment in the working directory whose name is formed
   by stripping the suffix from the input file entryname.
   Multi-segment files and the star convention are not supported.  If
   no pathname is given, input may be given to the Expander by using
   the -input_string control argument.


Control arguments:
-arguments ..., -ag ...
   all remaining parameters in the command line are arguments to be
   passed to the file or input string being expanded.
-brief, -bf
   does not display the expansion usage list when the expansion is
   complete.  (Default)
-call command_line
   if there are no errors in processing, executes the given command
   line when the expansion is complete.
-input_string string, -instr string
   expands the given string as an expansion input file.  By default,
   the expansion is displayed and no expanded output file is created.


-long, -lg
   displays the expansion usage list when the expansion is complete.
-output_file path, -of path
   writes the expanded output into the segment with the given pathname.
   This forces no_print even if -print is also given.
-no_print, -npr
   does not display the resulting expansion.  This is the default when
   path is given and is forced when -output_file is given.
-print, -pr
   dislays the resulting expansion.  This is the default
   when -input_string is given and is mutually exclusive with
   -output_file.


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
