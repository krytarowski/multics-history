03/14/84  compare_object, cob

Syntax:  cob oldpath newpath {-control_args}


Function: compares two object segments and optionally prints out the
changes made to the segment specified by oldpath to yield the segment
specified by newpath.  The assumption is that the first segment is
older than the second and that they were both produced from the same
source segment but, potentially, by different versions of a language
processor.


Arguments:
oldpath
   is the pathname of the first segment.
newpath
   is the pathname of the second segment.  The equal convention is
   allowed.


Control arguments:
-all, -a
   compares the text, definition, linkage, and any static sections.
   (Default)
-brief, -bf
   prints out by section a summary of discrepancies in the object
   segments, suppressing detailed listing of the discrepancies.
-defs
   compares the definition sections.


-link, -lk
   compares the linkage sections.
-static
   compares the static section of two segments with separate static;
   otherwise, compares the linkage sections.
-text
   compares the text sections of the two segments.


Notes: If no control arguments are given, all the sections are
compared but the static.

In comparing the lengths of the symbol sections the command uses a
heuristic to determine whether a discrepancy is serious or trivial
(e.g., caused by differences in pathnames of include files).  This
heuristic overcautions and is inaccurate for large object segments.


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
