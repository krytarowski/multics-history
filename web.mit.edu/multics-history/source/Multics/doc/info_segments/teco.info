04/20/76  teco

Syntax:  teco {path} {outpath}


Function: character-oriented text editor provides simple editing requests,
macro definitions, iterations, and conditional statements.


Arguments: 
path
   input segment.
outpath
   output segment.


Notes: This command invokes the editor, searches for a start_up macro, and
executes it. The default start_up macro reads the segment path into the buffer
and puts the pointer at the beginning of the buffer. If outpath is given, q* is
set to outpath, otherwise, it is set to path. If neither path or outpath is
given, nothing is done. For more information about the editor, see the
Tools PLM, Order No. AN51.


New Entry Point: teco$macro macro_name This entry point invokes teco, searches
for a macro whose name is macro_name and executes it. The argument macro_name
must be supplied. Additional arguments may be provided and are available to
teco commands through the pushdown stack. As an example, the command line:
    teco arg1 arg2 arg3
  is equivalent to--
    teco$macro start_up arg1 arg2 arg3
  It differs from the standard entry point in several ways.
First, if the teco commands executed encounter an error condition, the
invocation of teco is aborted with an error message. Second, if an "eq" command
is executed, teco never reachs its command level and no prompt message (Z) is
printed. Finally, if teco command level is reached without errors, the macro
mode is disabled and teco functions normally.
  This entry point is useful for application programs written in teco, such as
abbreivation editors.


New Features:
    Q-register q" is set to the value of the last quoted string seen by teco.
For the "n" command, q" is set to the actual text matched.
    The "n" command is a search command that searches forward for a qedx-type
regular expression. It is identical in syntax to the "s" command.
    The teco command edits segments of any length. The buffer size is determined
by the length of the text being edited.


Multics "e" commands:
  eb/path/ where /path/ is a quoted string, copies the segment path
    to ==.bak and then writes text to the segment path. The
    command takes arguments and interprets them like the
    "t" command, except that no arguments is equivalent to
    heb/path/.
  ec/cmd/ where /cmd/ is a quoted string, passes the quoted string
    to the Multics command processor.
  ei/path/ where /path/ is a quoted string, inserts the segment
    path immediately to the left of the text pointer.
  em/macro/ where /macro/ is a quoted string, uses the teco search
    rules to find macro.teco and executes it. Any arguments to
    the "em" command are available to the macro invoked.
  eo/path/ where /path/ is a quoted string, writes text to the
    segment path. The command takes arguments and interprets them
    like the "t" command, except that no arguments is equivalent
    to heo/path/.
  eq exits from teco.
  esn/name/ where n is a text q-register name and /name/ is a quoted
    string, calls the segment name passing it the arguments to
    the "es" command and the text q-register n. The segment
    called can modify the text q-register and return a numeric
    value.


Multics vs. PDP-10 teco:
    Multics teco treats the entire segment as a single buffer.
There are no equivalents to the PDP-10 append, yank, "n" search, or "w"
commands, or any need for them.
    Exiting from teco does not automatically write the buffer back to the
segment. The "eo" or "eb" command must be used.
    A search that fails does not change the current text pointer position.
    Multics q-register names are one character in length and can be any one of
the 95 printable ASCII characters, including blank.
    Multics quoted string are of the form:
    /string/ or qn
    where / is any character except a letter or a digit and n is a q-register
name. The form qn allows the contents of a q-register to be specified as a
quoted string.
    Multics command lines are terminated by the two character sequence dollar
sign ($) newline. The altmode character is not used in Multics.
    The Multics "s" command always gives an error message if the search fails.
    Multics teco uses | to denote the logical or operator.
    Multics teco treats -1< as an error.
    Multics teco expressions are evaluated somewhat differently.
See the documentation or use the "=" command to print out the value of a
questionable expression. Multics teco "=" command takes zero, one, or two
arguments.
    The numeric value of a text q-register is equal to the number of characters
of text.
    Multics error messages can be of two forms, long or short.
Short messages are eight characters and long ones are up to fifty characters.
The user can control error message length.


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
