08/19/88  list_retrieval_requests, lrr

Syntax as a command:  lrr {path} {-control_args}


Function: lists retrieval requests in the retrieval daemon queues.
The request identifier and entryname of each request are printed.


Arguments:
path
   is the pathname of a request to be listed.  The star convention is
   allowed.  Only requests matching this pathname are selected.  If you
   give no path, all pathnames are selected.  This argument is
   incompatible with -entry.


Control arguments:
-absolute_pathname, -absp
   prints the full pathname of each selected request, rather than the
   just entryname.
-admin {User_id}, -am {User_id}
   selects the requests of all users, or of the user specified by
   User_id.  If you don't choose -admin, only your own requests are
   selected.  This control argument is incompatible with -user.  (See
   "Access required" and "Notes" below.)
-all, -a
   searches all queues and prints the totals for each nonempty queue
   whether or not any requests are selected from it.  This control
   argument is incompatible with -queue.


-brief, -bf
   does not print the state and comment of each request.  This control
   argument is incompatible with -long and -total.
-entry STR, -et STR
   selects only requests whose entrynames match STR.  The star
   convention is allowed.  Directory portions of request pathnames are
   ignored when selecting requests.
-id ID
   selects only requests whose identifiers match the specified ID.
-long, -lg
   prints all the information pertaining to a retrieval request.  If
   you omit -long, only the full pathname of the object or subtree to
   be retrieved is printed.
-long_id, -lgid
   prints the long the request identifier.


-position, -psn
   prints the position within its queue of each selected request.  When
   used with -total, it prints a list of all the positions of the
   selected requests.  (See "Access required.")
-queue N, -q N
   searches only queue N.  If you don't select -queue, all queues are
   searched but nothing is printed for queues from which no requests
   are selected.
-total, -tt
   prints only the total number of selected requests and the total
   number of requests in the queue plus a list of positions if you
   choose -position.  If the queue is empty, it is not listed.
-user User_id
   selects only requests entered by the specified user.  (See "Access
   required" and "Notes" below.)


Access required: You must have o access to the queue(s).  You must
have r extended access to the queue(s) to use -admin, -position, or
-user, since it is necessary to read all requests in the queue(s) to
select those entered by a specified user.


Notes: The default condition is to list only pathnames for the default
queue.

The User_id arguments specified after -admin or -user can have any of
the following forms:
   Person_id.Project_id   matches that user only
   Person_id.*            matches that person on any project
   Person_id              same as Person_id.*
   *.Project_id           matches any user on that project
   .Project_id            same as *.Project_id
   *.*                    same as -admin with no User_id following it.

If you select no arguments, only your own requests are listed.  When a
user name is specified with either the -admin or -user control
arguments, then proxy requests are selected if either the user who
entered the request, or the proxy user on whose behalf it was entered,
matches the specified user name.  If -admin User_id or -user User_id is
given more than once in a command, only the final instance is used.


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
