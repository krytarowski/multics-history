09/25/79  New Graphic Character Fonts

     A clean and particularly pleasing set of fonts based on the Hershey Occi-
dental Character Sets are now available to users of the Multics Graphics Sys-
tem.  This info file gives a brief description of this repertory, describes the
available fonts, and explains how to access and use them.  In addition, persons
responsible for maintaining modules that DIRECTLY access graphic_char_table_
should read the section on conversion.


Description of the Hershey Repertory:
     The Hershey Repertory consists of about 16 distinct character sets
(fonts).  Each character is described as a series of vectors and shifts, allow-
ing it to be drawn (stroked) on a graphics terminal, plotter, or other suitable
device.  The full repertory contains various versions of the Roman, Greek, and
Cyrillic alphabets, with additional standard, italic, script, and gothic forms
for some sets.


Difference between old and new-style characters:
     The "standard" font previously available via the graphic_chars_ subroutine
(or via varying_text in the graphics_editor) is a simple, serviceable
nine-by-seven point font.  All characters have the same dimensions, and carry
with themselves a fixed inter-character spacing.  It is fast and readable; but
its appearance is distinctly mechanical, and it is not suitable for formal doc-
ument production or typesetting.

     Each character in a Hershey font has the same nominal height as its font-
mates, but its width is unique.  Each character also carries two fixed
inter-character spacings-- leading and trailing.  In addition, the characters
are described in much more detail.  Not only are they described in terms of a
64 X 64 (finer) grid, but some contain "heavy" strokes made up of several adja-
cent vectors.  The resultant effect is that of proportionally-spaced type, and
is very well suited for formal production work.


How to use the new fonts:
     Users of the graphic_chars_ subroutine can specify the desired font via a
call to graphic_chars_$set_table.  Note that no call to any other entry (in-
cluding graphic_chars_$init) will alter this selection.

     Users of the graphic editor can specify a font to be used as the default
font for all "varying_text" elements via the new "vtext_type" request.  Addi-
tionally, a specific font may be specified for any varying_text element by spe-
cifying the font to be used as the last parameter of the element.


Names of defined fonts, and what they mean:
     All graphic character tables (GCT's) now have names beginning with "gct_".
The remainder of the name specifies the complexity of the font and the style or
alphabet.

     The complexity describes the detail to which the character is drawn, usu-
ally in terms of the number of strokes used to thicken heavy portions of the
character.  There are six complexities:
   block-- equal-sized characters, like the old standard set
   simplex-- no heavy portions
   duplex-- heavy portions stroked twice
   triplex-- heavy portions stroked three times
   complex-- heavy portions contain curves
   gothic-- heavy portions done in medieval style


     Three alphabets are defined-- Roman, Cyrillic, and Greek.  The Roman al-
phabet is subdivided into several styles; namely:
   script
   italic
   italian
   german
   english

     The name of a GCT is composed of concatenations of these items, e.g.,
"gct_triplex_roman_", "gct_gothic_english_".

    Not all possible combinations are included in the Hershey Repertory, and
not all of the Hershey fonts are yet available.  For a list of available fonts,
issue the command:
          list >unb>bound_graphic_fonts_


Converting to the new GCT's:
     Maintainers and users of programs that call graphic_chars_ should see no
change in operation.  The default character table used by graphic_chars_ is
gct_block_roman_, which corresponds to the old standard character set.  Users
desiring to use the new fonts should be aware of the accomodations made by
graphic_chars_ to enable the use of proportional type.  The user-supplied para-
meter to graphic_chars_ which specifies how wide a single character is to be is
not applied to each character, but is distributed over the entire length of the
string.  The result is that regardless of font, a string will always take up
the same space on the screen, although the individual characters will vary.

     Users of the graphic editor will notice the name of the GCT appearing
whenever varying_text elements are replayed;  this will have no other effect.
As described above, the same accomodations are made to normalize individual
character widths over the length of the entire string.


Conversion from the graphic_char_table_:
     Maintainers of programs which reference the old graphic_char_table_ di-
rectly should be prepared to convert to the new-style format, which is over
four times more space-effective, and is largely similar to the old format.
Declarations for the format of new GCT's may be found in the include file
graphic_char_dcl.incl.pl1.


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
