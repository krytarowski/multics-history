02/03/84  unwinder_


Entry points in unwinder_:
   (List is generated by the help command)


:Entry: unwinder_: 02/03/84  unwinder_


Function: is used to perform a nonlocal goto on the Multics stack.  It
is not intended to be called by direct programming (i.e., an explicit
call statement in a program) but rather, by the generated code of a
translator.  For example, it is automatically invoked by a PL/I goto
statement involving a nonlocal label variable.


Syntax:
declare unwinder_ entry (label);
call unwinder_ (tag);


Arguments:
tag
   is a nonlocal label variable.  (Input)


Notes: When invoked, the unwinder_ subroutine traces the Multics stack
backward until it finds the stack frame associated with its label
variable argument or until the stack is exhausted.  In each stack
frame it passes, it invokes the handler (if any) for the cleanup
condition.  When it finds the desired stack frame, it passes control
to the procedure associated with that frame at the location indicated
by the label variable argument.  If the desired stack frame cannot be
found or if other obscure error conditions arise (e.g., the stack is
not threaded correctly), the unwinder_ subroutine signals the
unwinder_error condition.  If the target is not on the current stack,
and there is a stack in a higher ring, that stack is searched after
the current one is unwound.


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
