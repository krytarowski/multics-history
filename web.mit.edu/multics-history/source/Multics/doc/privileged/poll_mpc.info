11/06/89  poll_mpc

Syntax as a command:  poll_mpc {mpc_list} {-control_args}


Function:  initiates and controls automatic polling of MPCs.  Polling
consists of reading statistics on device usage and errors from the MPC
memory and logging it in either the syserr log or a file.  If an error
condition is detected, a message is entered in the syserr_log with a
code of 3.  This sounds the bootload console alarm and prints the
message in the bootload console log on a normally configured system.
This command sets up timers and event call handlers within the process.
Once initiated, MPC polling is performed periodically, independent of
whatever else is going on in the process.  This command is used by the
initializer or a daemon; Utility.SysDaemon is recommended.


Arguments:
mpc_list
   is a list of the names of the tape or disk MPCs to be polled.  If no
   names are listed, all tape and disk controllers are polled.


Control arguments:
-debug, -db
   prints extra debugging information each time polling is performed.
-log
   writes statistical information to the syserr log.  Access to the
   hphcs_ gate is required.  This is the default.
-output_file path, -of path
   writes statistical information to the segment specified by path.
   This report is the same as the one generated by the -stat control
   argument of the dump_mpc command.  This control argument can be used
   in conjunction with -log.
-time N, -tm N
   specifies the polling interval in minutes.  The default polling
   interval is 15 minutes.


The following control arguments modify the polling already in process
and cannot be used on the initial invocation of the poll_mpc command.
-finish
   schedules the last polling cycle immediately.  Once this cycle
   completes, polling is disabled, and a new poll_mpc command is
   required to start it again.  To stop polling without performing one
   last cycle, use both -stop and -finish.
-start, -sr
   resumes polling for the MPCs specified with the mpc_list argument.
   If no MPCs have been specified, polling of all MPCs is resumed.
   Note that the next polling does not occur immediately; it is
   performed during the next scheduled polling cycle.


-stop, -sp
   stops polling for the MPCs specified with the mpc_list argument.  If
   no MPCs have been specified, polling of all MPCs is stopped.
   Polling continues to be scheduled periodically, even though no MPCs
   are being polled.


Notes:  If polling of an individual MPC fails three consecutive times,
either because it cannot be attached or because of I/O errors, polling
of that MPC is stopped.  If three consecutive scheduled polling cycles
are missed because a previous cycle did not complete, an automatic
finish operation is performed, and no further cycles are scheduled.

When the system is reconfigured to add an MPC, if you want that MPC to
be polled you must issue "poll_mpc <mpc_name> -start".

Polling of MPCs has no effect on the users of devices connected to the
MPC.


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
