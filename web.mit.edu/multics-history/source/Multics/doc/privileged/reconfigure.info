02/27/85 reconfigure, rcf

Syntax as a command:  rcf operation type name {-control_args}


Function:  adds or deletes selected reconfigurable entities to or from
the current configuration.


Arguments:
operation
   is one of the functions listed below under "List of Operations."
type
   is one of the reconfigurable entities listed below under "List of
   Reconfigurable Entities."
name
   is the name of the item being reconfigured.  Examples of names are
   given under "List of Reconfigurable Entities."


Control arguments:
-add_all_attachments
   used only after an add operation.  This control argument causes all
   reconfigurable entities which are newly accessible to be added.
-brief, -bf
   does not print out a list of every item which is added or removed.
   This is the default.
-delete_all_attachments
   used only after a delete operation.  This control argument causes
   all reconfigurable entities which will become inaccessible to be
   deleted.
-long, -lg
   prints out a list of every item which is added or removed.


List of operations:
add
   the specified item is to be added to the current configuration.  It
   will thus become available for use.
delete, dl
   the specified item is to be deleted from the current configuration.
   It will thus become unavailable for use.


List of reconfigurable entities:
channel, chan, chnl
   a logical channel.  A channel's name is the name by which IOI knows
   it (e.g., a9, b23).
cpu
   a Central Processing Unit.  A processor's name is its tag as it
   appears on a cpu card in the config deck (e.g., a, b).  Only
   processors that are defined in the configuration deck can be added.
   You must set all of the switches correctly and initialize the
   processor before you issue this command.
device, dv, prph
   a peripheral device.  A device's name is the name by which RCP knows
   it (e.g., tapa_03, dskb_13, fnpc, opca).


iom
   an Input/Output Multiplexer.  An IOM's name is its tag as it appears
   on an iom card in the config deck (e.g., a, b).
link_adapter, la
   a link adapter or physical channel.  This is a shorthand way of
   specifying a collection of logical channels.  A link adaptor's name
   is the name of its lowest numbered channel (e.g., b28).
mpc
   a Microporgrammed Peripheral Controller.  This is a shorthand way of
   specifying a collection of link adapters (and thus, a collection of
   logical channels).  An MPC's name is its name as it appears on an
   mpc card in the config deck (e.g., mspa, mtpb).


page
   a page of memory.  A page's name is its number.  Pages are numbered
   starting at 0.  Numbers may be given in any form acceptable to the
   cv_integer_string_ function.  A range of pages may be specified by
   an expression of the form <low>:<high>.  Pages to be added must
   reside within system controllers already in the Multics
   configuration.  Pages to be removed must reside within a single
   system controller.
mem, scu
   a System Control Unit.  An SCU's name is its tag as it appears on a
   mem card in the config deck (e.g., a, b).  Only system controllers
   that are defined in the configuration deck can be added.  You must
   set all of the switches on the system controller correctly before
   you issue this command.


Access required:  Use of the reconfigure command requires re access to
the hphcs_gate.


Notes:  When you add an SCU, all of its pages are also added.  However,
when you delete all of an SCU's pages, the SCU itself is not deleted.

For more details on the dynamic reconfiguration, see the Multics System
Maintenance Procedures manual, Order No.  AM81, and the Operator's
Guide to Multics, Order No.  GB61.


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
