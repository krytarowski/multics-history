02/28/85  tune_work_class, twc

Syntax as a command:  twc -work_class N -control_args


Function:  sets or changes the scheduling parameters for a single work
class.


Arguments:
-work_class N, -wc N
   specifies the work class for which scheduling parameters are to be
   set.


Control arguments:  are the parameters to be set, and can be chosen
   from the following (at least one must be specified):
-governed STR, -gv STR
   controls the limitation of CPU resources to the work class.  STR can
   be "off," in which case there is no limitation for the work class;
   or STR can be a number between one and 100, which represents a
   percentage of total system CPU time.  In this case, the work class
   is limited to the specified percentage of total system CPU time.
-int_response N, -ir N
   is the desired response time, in decimal seconds, after an
   interaction.
-int_quantum N, -iq N
   is the quantum (time slice), in decimal seconds, given after an
   interaction.


-int_queue STR
   controls the use of the interactive scheduler queue by users in the
   work class.  STR can be "on", in which case users in the work class
   who have interacted recently are given priority over users in all
   work classes who have not interacted recently.  STR can also be
   "off", in which case users in the work class who have interacted
   recently do not receive priority.  The default is "off" for governed
   work classes and "on" for all other work classes.
-response N, -r N
   is the time, in decimal seconds, between successive quanta.
-quantum N, -q N
   is the quantum, in decimal seconds, given when an interaction has
   not just occurred.


-pin_weight N, -pw N
   sets the pin weight of the work class to N.  The default is 3 for
   the Initializer, and 0 for all other work classes.
-post_purge STR, -pp STR
   controls post purging of processes in the work class, where STR can
   be "on" or "off."  If on, processes are post purged if post purging
   is enabled for the system; if off, processes are never post purged.
-realtime STR, -realt STR
   places the work class in realtime mode if STR is "on"; removes the
   work class from realtime mode if STR is "off."
-wc_max_eligible N
   applies eligibility constraints to processes in the work class,
   where N is an integer.  If N is nonzero, no more than N processes
   are eligible at one time; if N is zero, only system-wide eligibility
   constraints are applied.


Access required:  This command requires access to hphcs_.


Notes:  If the system scheduler is in percent mode and the specified
work class is not in realtime mode, then the values of int_response,
int_quantum, response, quantum, and wc_max_eligible have no effect on
the system's operation.

If the system scheduler is in deadline mode or the specified work class
is in realtime mode, then the values of governed have no effect on the
system's operation.

This command is useful for setting scheduler parameters on a temporary
basis.  Parameters set by this command are overridden by the values in
the master group table (MGT) at shift change time, if a new MGT is
installed, or if the operator issues the command line "maxu auto."


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
