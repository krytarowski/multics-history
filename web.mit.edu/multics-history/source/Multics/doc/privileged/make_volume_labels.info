02/25/85 make_volume_labels

Syntax as a command:  make_volume_labels volume_spec {-control_args}


Function:  generates data for producing stickers to be attached to
volumes (e.g., tape reels and disk packs).  For each volume name
specified, two labels are prepared.  The first label contains the name
of the resource, and the second label contains a three-character
authentication code for the volume.  Any number of volume names may be
specified, including volume name series.


Arguments:
volume_spec
   is either a single volume name, or the sequence "volume_name1 -to
   volume_name2".  When the second sequence is specified, both
   volume_name1 and volume_name2 must end with one or more digits.
   Label data will be produced for each volume in the sequence
   specified.  Each volume name may be as long as 32 characters.  A
   volume name may not contain spaces.


Control arguments:
-auth_only
   specifies that labels containing the volume names are not to be
   generated.  If this argument is specified, only authorization code
   labels are produced.  The default is to produce both types of
   labels.
-height N
   specifies that the labels on the stock to be used are N lines in
   height, measured from the first line of one label to the first line
   of the next label.  The default for N is 9.  The data produced
   assumes printing at six lines per inch.


-name_only
   specifies that labels containing authorization codes are not to be
   generated.  If this argument is specified, only volume name labels
   are produced.  The default is to produce both types of labels.
-output_switch switchname, -osw switchname
   specifies the name of the I/O switch over which the label data is to
   be written.  If this control argument is omitted, the data will be
   written over the I/O switch named "label_stream".
-width N
   specifies that the labels on the stock to be used are N characters
   across.  The default for N is 50.


Notes:  Each sticker will contain data in a 5x5 format (see "Examples"
below).  Uppercase characters are distinguished from lowercase
characters by additional underscoring.  If the data in 5x5 format
cannot be accommodated on the size sticker specified, a warning is
printed, the data is truncated, and an indicator is appended to the
label to show that the name has been truncated.  However, all stickers
always contain a line printed in normal characters, containing both the
complete volume name and the authentication.


If the sequence "volume_name1 -to volume_name2" is specified, both
volume names must contain numeric portions, and the rightmost numeric
portion of volume-name2 must not be numerically less than that of
volume_name1.  Labels are generated for each volume in the sequence.
Only the rightmost numeric portion of the resource name is incremented.
Leading zeroes are not generated in the significant numeric portion
unless they are explicitly specified as part of volume_name1.

The I/O switch on which the labels are to be written is assumed to be
attached and opened for stream output before the command is invoked.
(See the description of the io_call command in the Multics Commands and
Active Functions manual, Order No.  AG92, for information on attaching
and detaching I/O switches.)


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
