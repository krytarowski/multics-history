04/01/86  tune_disk

Syntax as a command:  tune_disk DRIVE_NAME IO_TYPE -load N -response N
	       or:  tune_disk reset_max
	       or:  tune_disk reset_sys
	       or:  tune_disk stagnate N
	       or:  tune_disk system IO_TYPE {-max n} {-map IO_TYPE}


Function: alters disk tuning parameters.  A description of disk tuning
techniques can be found in the Multics System Maintenance Procedures
manual (AM81).


Arguments:
DRIVE_NAME
   is the name of the disk drive to be tuned; for example, dska_05.
IO_TYPE
   identifies one of the I/O types tunable by tune_disk, where IO_TYPE
   can be one of the following:
      page_read
      page_write
      vtoce_read
      vtoce_write
      test_read
      test_write


reset_max
   requests that all queue maximum depth meters be reset in the
   disk_seg data base.  The time and date at which the meters were last
   reset is also maintained in the data base.  This argument is useful
   to permit a new/lower max depth to be seen after altering tuning
   parameters or after an allocation lock has occurred.
reset_sys
   requests that all system depth counters be reset to 0.  This is
   useful after altering system depth counter mapping.  If counter
   mapping has been changed while requests were in the queue, the
   counter that had been used may be left artificially high.  Resetting
   back to 0 lets the system correct the value.


stagnate N
   specifies a change of the system-wide stagnation time period to the
   specified number of seconds.  (Maximum stagnation time period: 6)
system
   indicates modification of a system-wide optimization factor.  The
   maximum depth and/or mapping for the specified io_type will be
   altered.  If neither a maximum depth value nor a mapping is altered,
   an error message is issued.



Control arguments:
-load N, -ld N
   defines the optimization maximum queue loadpoint for the specified
   drive.  The value N is stated in terms of queue elements.  For
   blocking I/O, this value would typically reflect a point that
   preserves sufficient multiprogramming.  For nonblocking I/O, this
   would typically reflect a point before resource saturation would
   occur and cause the I/O type to become blocking.  The -load value is
   one of the two points (along with -response) that define the
   optimization line.  If you specify -load 1, the initial response
   value is the optimizing multiplier and no load optimization is
   performed.


-map IO_TYPE
   specifies that the current depth counting for the specified
   system-wide optimization entry should be done using the counter for
   io_type.  For example,
      tune_disk system PageRead -map PageWrite
   would have the depth counter for PageWrite used to accumulate the
   number of PageRead IO's currently outstanding.
-max N
   indicates that the maximum depth for the specified system-wide
   optimization entry should be set to N.  If this depth is reached,
   then full optimization of this I/O type will be done system wide for
   all drives.
-response N, -rsp N
   defines the optimization maximum response value.  This value is the
   multiplier to be used for an IO_TYPE queue load of a single request.


Access required: This command requires access to the hphcs_ gate.


Notes:  Refer to the Multics System Maintenance Procedures manual,
(AM81) for a description of disk tuning techniques.


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
