02/27/85 scavenge_vol

Syntax as a command:  scavenge_vol {pvname} {-control_args}


Syntax as an active function:  [scavenge_vol {pvname} {-control_args}]


Function:  invokes the Scavenger to scavenge one or more physical
volumes.  The Scavenger examines and validates VTOCEs, deletes
per-process and per-bootload VTOCEs from previous bootloads, recovers
lost VTOCEs, recovers lost records, and checks for reused addresses
(two VTOCES claiming the same record address).  See the Multics System
Maintenance Procedures manual, Order No.  AM81, for a description of
scavenging.

If no control arguments are specified, no default actions are taken.

The initializer command "x scav" logs in a daemon to perform a scavenge
using the scavenge_vol command.


Arguments:
pvname
   is the name of the physical volume to be scavenged.  It must be part
   of a mounted logical volume.  This argument is required unless the
   -all or -lv control argument is specified.


Control arguments:
-all, -a
   scavenges, in turn, all mounted physical volumes.
-auto
   controls scavenging of physical volumes when the -lv or -all control
   argument is specified.  When this option is used, those physical
   volumes with volume inconsistencies are scavenged.
-check
   validates the command control arguments and prints a list of
   physical volumes that would be scavenged as a result of the command
   line input, but does not actually perform the scavenge.
-debug
   should be used only by systems programmers debugging the Scavenger.
   It causes additional information to be printed on the bootload
   console during the scavenge.


-dump
   records the VTOCE image of any VTOCE found inconsistent into the
   syserr log.  The image recorded is the VTOCE prior to any correction
   by the Scavenger.
-lv lvname
   scavenges, in turn, all physical volumes belonging to the logical
   volume specified by lvname.  The logical volume must be mounted.
-no_optimize, -nopt
   disables optimization of Scavenger processing.  This causes the
   Scavenger to take longer, but reduces its effect on other users of
   the system.  With this option, VTOCE read-ahead is disabled, and the
   Scavenger periodically lowers its traffic control priority.


Access required:  Access to the hphcs_ gate is required.


Notes:  The scavenge of each volume is done entirely in ring 0.  Any
error messages are recorded into the syserr log.  It is possible to
interrupt a scavenge of a volume with the QUIT key, but it cannot be
restarted afterwards with the start or program_interrupt commands.

When the scavenge_vol command is invoked as an active function, it
returns a list of physical volumes that would be scavenged, separated
by spaces.  The -check control argument is the default for active
function usage, i.e., scavenging is not done.


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
