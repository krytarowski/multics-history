02/21/85 iod_val


Syntax as an active function:  [iod_val key]


Function:  supplies several preset driver parameters to be used in
driver admin exec_coms.  Site administrators use the iod_val active
function in conjunction with the driver x command to set up and modify
these exec_coms.


Arguments:
key
   is a character string parameter name associated with the value to be
   returned.  The key, defined during initialization of the given
   driver, may be one of the following.   For all standard drivers:
   device
      the name of the major device that the driver is running.
   station_id
      the name of the station_id that the driver is running (equivalent
      to the major device).  The default is the name of the major
      device if the station is not a remote device.


   request_type
      the name of the request type that is being run on the driver.
   channel
      the name of the iom or tty channel of the driver.
   <minor device>
      the name of the request type that is being processed on the minor
      device.
   rqt_string
      a string of request type names, separated by spaces, of all
      (printer, punch, etc) request types the driver can process.  This
      key is equivalent to the request_type key if the driver is
      running only one minor device.


For remote drivers:
   request_type
      the request type for a single printer device, if present.
   pun_rqt
      the request type for a single punch device, if present.


Notes:  If a key is given that has not been defined, the string
"undefined "  is returned.


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
