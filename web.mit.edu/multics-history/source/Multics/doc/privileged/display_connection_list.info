07/20/87  display_connection_list


Syntax as a command:  display_connection_list {-control_arg}


Function:  This command displays entries in the connection list.
Network administrators can use it to list network connections
associated with a process, or to display detailed information about a
particular connection.


Control arguments:
-brief, -bf
   prints brief information in tabular form.  (Default)
-channel CHN, -chn CHN
   selects entries whose connection channel name matches the star name
   CHN.
-long, -lg
   prints detailed information about selected entries.
-offset LOC, -ofs LOC, -at LOC
   prints the entry located at offset LOC in the active connection
   list.  These offsets are displayed by display_connect_list -brief.
-owner GROUP_ID
   selects entries owned by a process matching GROUP_ID.  In general,
   the Login_Server is the owner of all network connections.  See Notes
   below for the format of GROUP_ID.


-owner_id PROCESS_ID
   selects entries owned by the process having the given octal
   PROCESS_ID.
-user GROUP_ID
   selects entries used by a process matching GROUP_ID.  A connection
   is in use when it is logged into a process or dialed to a process.
   See Notes below for the format of GROUP_ID.
-user_id PROCESS_ID,
-process_id PROCESS_ID,
-pid PROCESS_ID
   selects entries used by the process having the given octal
   PROCESS_ID.


Access required: Access to the hpriv_connection_list_ gate is required
to use this command.


Notes:  All entries are displayed if no selection arguments are given.

The -user and -owner GROUP_ID operand is given in one of the following
formats:

          person_id.project_id.tag
          person_id.project_id
          person_id

where any of the components can be omitted or given as an asterisk (*)
to match all values in that component position.


Examples:  The following example shows the tabular form of brief
output.

! display_connection_list

  AT   CONNECTION     NET  USAGE     USER                  PROCESS ID
  210  dsa.MUL1.0002  DSA  endpoint  Login_Server.Daemon.z 004300021607
   66  dsa.MUL1.0088  DSA  login     Brunelle.SysAdmin.a   005100021710
  332  dsa.MUL1.0066  DSA  dial-in   GDixon.SysAdmin.a     005000021707
  454  dsa.MUL1.0070  DSA  endpoint  Login_Server.Daemon.z 004300021607


The following example shows the itemized form of long output.

! display_connection_list -user .SysAdmin -lg

  Offset:              000066                  Usage:  1 (login)
  Connection name:     dsa.MUL1.0088             Net:  DSA
  Connection handle:   001527000020
  User name:           Brunelle.SysAdmin.a       PID:  005100021710
  Owner name:          Login_Server.Daemon.z     PID:  004300021607
  Initializer handle:  000001000002115412724145
  Terminate event chn: 327513360274440000000115
  Disconnect entry:    dsa_session_admin_$terminate_force
  Accounting entry:    dsa_session_admin_$accounting_force

  Offset:              000332                  Usage:  2 (dial-in)
  Connection name:     dsa.MUL1.0066             Net:  DSA
  Connection handle:   004445000015
  User name:           GDixon.SysAdmin.a         PID:  005000021707
  Owner name:          Login_Server.Daemon.z     PID:  004300021607
  Initializer handle:  000001000003115412725322
  Terminate event chn: 327516062576440000000122
  Disconnect entry:    dsa_session_admin_$terminate_force
  Accounting entry:    dsa_session_admin_$accounting_force



                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
