01/14/87  print_configuration_deck, pcd

Syntax as a command:  pcd {card_names} {-control_args}


Syntax as an active function:  [pcd {card_names} {-control_args}]


Function:  displays the contents of the Multics configuration deck.
The data is kept up-to-date by the reconfiguration commands and, hence,
reflects the current configuration being used.  The active function
returns the selected cards in quotes, separated by a single space.


Arguments:
card_names
   are the names of the particular configuration cards to be displayed.
   You can give up to 32 card names (see the _M_u_l_t_i_c_s _S_y_s_t_e_m _M_a_i_n_t_e_n_a_n_c_e
   _P_r_o_c_e_d_u_r_e_s _M_a_n_u_a_l, AM81, for the names of the configuration cards).


Control arguments:
-exclude FIELD_SPECIFIERS, -ex FIELD_SPECIFIERS
   excludes particular cards or card types from being displayed.  You
   can supply one to 14 field specifiers with each -exclude and up to
   16 -exclude control arguments.  To be eligible for exclusion a card
   must contain fields that match all field specifiers selected with
   any -exclude.
-label, -lbl
   displays cards with mnemonic labels for each field.
-match FIELD_SPECIFIERS
   selects particular cards or card types to be displayed.  You can
   give one to 14 field specifiers with each -match and up to 16 -match
   control arguments.  To be eligible for selection a card must contain
   fields that match all field specifiers supplied with any -match.
-no_label, -nlbl
   does not display field labels.  (Default)
-pathname PATH, -pn PATH
   displays the configuration deck in the segment specified by PATH,
   rather than the configuration deck of the live system.


Notes:  Field specifiers can consist of a complete card field or a
partial field and an asterisk.  An asterisk matches any part of any
field; for example, the field specifier "dsk*" matches any card
containing a field beginning with the characters "dsk".  You can give
specifiers for numeric fields in octal or decimal, but if decimal they
must contain a decimal point.  You can't use asterisks in numeric field
specifiers.  All numeric field specifiers are converted to decimal and
matched against numeric card fields, which are also converted to
decimal.  Hence, the field specifier "1024."  matches a card containing
the octal field 2000, and the field specifier "1000" matches a card
containing the decimal field 512.

Selection is performed as follows.  If you give no card names, all
cards are selected; if you supply any card names, only the cards
matching those names are selected; and if more than one card exists
with a specified name, all such cards are displayed.  If you request a
nonexistent card, an error message is displayed.  If you give any
-match arguments, those eligible cards are matched against all field
specifiers of each -match argument group; however, at least one -match
group must have all its field specifiers match some field on the card
to make that card eligible.  A similar algorithm is used for any
-exclude argument groups.  So, if a card is eligible and you supply
-exclude arguments, then at least one -exclude group must have all its
field specifiers match some field on the card to make that card
ineligible.  If no match for a given card name or -match group is found
in the configuration deck, nothing is displayed for that name or group
and no error is displayed.  If you give no arguments, the complete
configuration deck is displayed.

Specify all card names before the first -match or -exclude argument.
Field specifiers following a -match or -exclude argument include all
arguments until the next -match or -exclude argument.

No action is taken for misspelled arguments or valid arguments for
which there are no corresponding configuration cards.


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
