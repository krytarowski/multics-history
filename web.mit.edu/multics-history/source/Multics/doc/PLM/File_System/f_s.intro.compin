.ifi init_plm "FS-00"
.srv section %Arg1%
.pdl 66
.ifi l0h "Introduction"
     The Multics subsystems of directory control and of address and name space
management are two intermingled subsystems within the Multics supervisor.
Together with the file system primitives, they are referred to as the file
system portion of the Multics supervisor.  They form the major user visible
portion of the Multics supervisor, as far as the user's access to the
hierarchy and the formation of the user's address space is concerned.  Both of
these subsystems are discussed in this SDN, with an attempt to separate their
functions for discussion purposes.

     Directory control is that portion of the system that concerns itself with
the structuring of the file system into directories and segments and
controlling access to those objects.  It also maintains the description of the
access to segments (whose access control is actually in the hardware).  It
lies logically above segment and page control, using their facilities to
access the contents of directories as if they were normal segments.  Directory
control is not strictly above segment control, of course, since segment
control does thread ASTEs together relative to the hierarchy structure.  (That
is to say, segment control knows the difference between directories and
segments.) Segment control has a path into directory control to compute access
modes for the segments' SDWs and to audit successful granting of access as
well as attempted access violations to the contents of the segments it
controls.

     Address and name space management is that portion of the system that
concerns itself with the introduction into, and the removal from, a user's
address space of file system objects (segments and directories).  Also, it
maintains the names by which these objects are known within the process.  That
is, it maintains the reference names for these objects, as well as maintaining
the correlation between the identity within the address space of an object
(its segment number) and the pathname of the object.

     Directory control lies under address and name space management, in
that this latter subsystem uses directory control to find and determine access
to objects.  Directory control is not strictly under address and name
space management in that directory control must bring various directories into
the user's address space just to reach them (walking down the hierarchy or
when chasing links).  These extra directories enter the user's address space
but not strictly the user's name space.

     The functions attributed to address and name space management include
maintaining the known segment table (KST) for the process and the reference
name table (RNT) for each ring.  Included within maintaining the KST is the
task of making segments known (bringing them into the address space, i.e.,
assigning them a segment number) and making them unknown and keeping track of
assigned segment numbers.

     The functions attributed to directory control are the following.
Directory control locates directories and specific entries within those
directories.  It determines users' access to the directories or entries at
hand and audits attempted access violations, if necessary.  If access is
allowed, the calling file system primitive will perform its operation on the
directories or the directory entries.  These operations consist of file system
object creation, deletion, and the getting and setting of the properties of
these objects.
.brp


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
