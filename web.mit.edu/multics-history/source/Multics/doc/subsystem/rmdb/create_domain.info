12/20/86 create_domain, crd


Syntax: crd domain_name data_type {-control_args}


Function:  creates an unreferenced domain in the currently readied data
base.


Arguments:
domain_name
   is the name of the domain to be created.
data_type
   is the underlying data type of the domain.  If the data_type
   contains spaces or parentheses, it must be quoted.  See the notes
   section below for a list of supported data types.


Control arguments:
-check_procedure path, -check_proc path
   performs data verification checks (such as ensuring valid dates)
   upon storage into the data base.  "path" may be an absolute or
   relative pathname.
-decode_declare data_type, -decode_dcl data_type
   is the underlying data type of the argument to the decode procedure
   for this domain.  See "Notes" for a list of supported data types.
-decode_procedure path, -decode_proc path
   performs data decoding upon retrieval from the data base, normally
   the inverse of the encode procedure.  "path" may be an absolute or
   relative pathname.


-encode_procedure path, -encode_proc path
   performs data encoding (such as the names of the states of the USA
   to integers 1-50) before storage in an internal data base form.
   "path" may be an absolute or relative pathname.


Notes:  Any legal PL/1 scaler data type that can be declared using
the following declaration description words is allowed in MRDS.
   aligned                    float
   binary or bin              nonvarying
   bit                        precision or prec
   character or char          real
   complex or cplx            varying or var
   decimal or dec             unaligned or unal
   fixed


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
