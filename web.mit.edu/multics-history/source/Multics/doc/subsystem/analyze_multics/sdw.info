01/21/85      sdw

Syntax:  sdw {segno/name} {segno/name}


Function:  Displays the SDW's in the current processes DSEG.


Argument:
segno/name
   is the segment number or name of interest.  The first is the
   starting segment number and the second is the ending segment
   number.  If only one is given then only one is displayed if none
   are given then all are displayed.


SDW Display:
The sdw request displays the segment number, name, memory address,
ring brackets, the maximum computed address, the entry bound address
and a bit string REWPUGCDF.


Display definitions:
ADDRESS
   is the base address of the segment or segment page table.
RNGS
   the ring brackets of the segment.
CA-MAX
   the highest computed address that may be used in referencing the
   segment without causing an out_of_segment_bounds fault. 
EBOUND
   is the entry bound or call limiter. Any external call to this
   segment must be to an offset less than the EBOUND if the entry
   bound switch (G) is off.
SEGNO
   segment number.
SEGMENT-NAME
   segment name.


Display definition of REWPUGCDF:
REWPUGCDF
   The letter will show in the sdw display of the segment if the bit
   is on.  The REWPUGCDF string is broken down as follows: 
     R is the read permission bit
     E is the execute permission bit
     W is the write permission bit
     P is the privileged bit
     U is the unpaged bit, segment is unpaged is this is on
     G is the gate indicator or entry bound bit. If off, the entry 
       bound is checked by hardware
     C is the cache enable switch.
     DF is the directed fault bit. If on, the necessary page of the
        segment is in memory. 


Example of SDW display:

 ADDRESS RNGS  CA-MAX REWPUGCDF EBOUND SEGNO SEGMENT-NAME
 6262154  000  177777 R W  G DF      0   200 str_seg
       0  000   37777 R W  G         0   300 >udd>Multics>GDixon


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
