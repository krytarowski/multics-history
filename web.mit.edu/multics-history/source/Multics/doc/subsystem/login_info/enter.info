03/07/87  enter, e, enterp, ep

Syntax:  e {anonymous_name} Project_id {-control_args}
    or:  ep {anonymous_name} Project_id {-control_args}


Function: used by anonymous users to gain access to Multics.  Either
one is actually a request to the answering service to create a process
for the anonymous user.  Anonymous users who are not to supply a
password use the enter (e) request.  Anonymous users who are to supply
a password use the enterp (ep) request.  (See "Notes on passwords"
below.)


Control arguments:
-arguments STR, -ag STR
   supplies arguments to the process.  STR can be one or more
   arguments.  All arguments following -ag on the command line are
   taken as arguments to the process.  Therefore -ag, if present, must
   be the last control argument to the enter request.  The process can
   determine the number and value of each argument with the login_args
   active function.
-brief, -bf
   suppresses messages associated with a successful login.  If the
   standard process overseer is being used, the message of the day is
   not printed.


-force
   logs the user in if at all possible, provided the user has the
   guaranteed login attribute.  Only system users who perform emergency
   repair functions have the necessary attribute.
-home_dir path, -hd path
   sets the user's home directory to the path specified, if the user's
   project administrator allows that user specify a home directory.
-long, -lg
   prints messages associated with a successful login.  If the
   standard process overseer is being used, the message of the day is
   not printed.


-modes STR, -mode STR, -md STR
   sets the I/O modes associated with the user's terminal to STR, where
   the string STR consists of modes acceptable to the tty_ I/O module.
   (See the tty_ I/O module description in the Subroutines manual for a
   complete explanation of possible modes.)  The STR string is usually
   a list of modes separated by commas; the STR string must not contain
   blanks.
-no_preempt, -np
   refuses to log the user in if login can be achieved only by
   preempting some other user in the load control group.
-no_print_off, -npf
   tells the system that the terminal cannot stop printing while a
   password is being entered.  The system prints a mask field to
   overwrite the area in which the password will be typed.


-no_start_up, -ns
   instructs the standard process overseer not to execute the user's
   start_up.ec segment, if one exists, and if the project administrator
   allows the user to avoid it.
-no_warning, -nw
   suppresses even urgent system warning and emergency messages from
   the operator, both at login and during the user's session.  Use of
   this argument is recommended only for users who are using a remote
   computer to simulate a terminal, or are typing out long memoranda,
   when the process output should not be interrupted by even the most
   serious messages.
-outer_module p, -om p
   attaches the user's terminal via the outer module named p rather
   than the user's registered outer module, if the user has the
   privilege of specifying an outer module.


-print_off, -pf
   tells the system that the terminal can stop printing while a
   password is being entered.  No password mask is printed.
-process_overseer path, -po path
   sets the user's process overseer to the procedure given by the path
   specified, if the user's project administrator allows that user to
   specify a process overseer.  If path ends in the characters
   ",direct", the specified procedure is called directly during process
   initialization rather than by the init_admin procedure provided by
   the system.  This means that the program specified by path must
   perform the tasks that would have been performed by the init_admin
   procedure.


-ring N, -rg N
   sets the user's initial ring to be ring N, if this ring number is
   greater than or equal to the user's registered initial ring and less
   than the user's registered maximum ring.
-subsystem path, -ss path
   creates the user's process using the prelinked subsystem in the
   directory specified by path.  The permission to specify a process
   overseer, which can be given by the user's project administrator,
   also governs the use of the -subsystem argument.  To override a
   default subsystem by the project administrator, type -ss "".
-terminal_id STR, -tid STR
   sets the user's terminal identification to STR, where STR may be
   from 1 to 4 characters long.  (By default, the terminal ID is
   obtained from the terminal answerback string.)


-terminal_type STR, -ttp STR
   sets the user's terminal type to STR, where STR is any terminal type
   name defined in the standard terminal type table.  (To obtain a list
   of terminal types, refer to the print_terminal_types command.)  This
   control argument overrides the default terminal type.
-warning
   causes urgent system warning and emergency messages from the
   operator to be printed on the user terminal, both at login and
   during the user's session.


Notes: If the project administrator does not allow the user to specify
the -subsystem, -outer_module, -home_dir, -process_overseer, or -ring
control arguments or if the administrator does allow one or more of
these control arguments and they are incorrectly specified by the user,
a message is printed and the login is refused.


Notes on passwords: The password is a string of one to eight
characters.  The characters can be any printing character from the
ASCII character set except space and semi-colon.  The backspace
character is also allowed and is counted as a character.  The password
used for interactive logins cannot be "quit", "help", "HELP", or "?",
because these have special meaning to the password processor.  Typing a
password of "quit" terminates the login attempt.  A response of "help",
"HELP", or "?"  produces an explanatory message, and the request for
the password is repeated.


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
