04/21/86  test_disk, td

Syntax as a command:  td key device {-control_args}


Function:  tests disks for errors.


Arguments:
key
   must be one of the following:
   w
      for writing to specified pages.
   r
      for reading specified pages.
   wr
      for writing and then rereading/checking specified pages.
   rw
      for reading and then rewriting specified pages.


device
   is a disk known to the system in the standard form <subsys>_<nn>{s},
   where:
     subsys is the disk subsystem name (dska)
     nn is the device number. (00 to 64)
     s is the subvolume name, for MSU3380 or MSU3390 (a,b, or c).
       example: dska_02 or dskb_00b.


Control arguments:
-force, -fc
   suppresses the query, "Do you wish to write on <target>".
-first_record N, -frec N
   specifies the first record to be read and/or written.  The default
   is the first record number for the device type unless a partition is
   specified (via the -partition control argument), in which case the
   default is the first record of the partition.  The keywords "first"
   and "last" may be used in place of a record number to specify the
   first or last record of the device (or partition).


-last_record N, -lrec N
   specifies the last record to be read and/or written.  The default is
   the last record number for the device type unless a partition is
   specified (via the -partition control argument), in which case the
   default is the last record of the partition.  The keywords "first"
   and "last" may be used in place of a record number to specify the
   first or last record of the device (or partition).


-n_record N, -nrec N
   specifies the number of records to be read and/or written.
   Specifying -first_record and -n_record will cause test_disk to read
   and/or write to N records, where the first record to be operated on
   is specified by -first_record.  Specifying -last_record and
   -n_record will cause test_disk to read and/or write to N records,
   where the last record to be operated on is specified by
   -last_record.  Note:  To operate on more than one record, two of the
   following control arguments must be used:  -first_record,
   -last_record, -n_record.
-partition part_name, -part part_name
   specifies a partition, where part_name is the name of the desired
   partition.  If a partition is specified, the defaults for the first
   and last page become the first and last page of the partition.


-pattern word1 word2 word3 ...  , -pat word1 word2 word3 ...
   specifies the pattern of words to be written to a record.  An
   arbitrary number of words may be specified.  The default is an all
   zero page.
-record N, -rec N
   specifies a single page to be read or written.  The keywords "first"
   and "last" may be used.


Notes:  If the disk is going to be written to, test_disk will show what
page(s) are going to be written to, then ask the operator whether or
not it should continue.  If the operator tells it to continue, it will
query the operator again if reading the disk's label shows that it is a
Multics storage system device.


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
