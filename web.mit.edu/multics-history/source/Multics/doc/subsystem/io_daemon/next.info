03/21/85 next

Syntax as a command:  next -control_args


Function:  specifies which request is to be taken from the queues next.
This allows the operator to specify priority requests and the order in
which they are to be run.


Control arguments:
-user Person_id.Project_id
   specifies the submitter of the request by user_id.  The full person
   and project names must be given.  This control argument is required.
   At least one other argument must be chosen from the request
   identifiers -entry, -path, and -id.
-entry STR, -et STR
   specifies the entryname of the request.  Starnames are not allowed.
   This control argument may not be used with the -path control
   argument.
-id ID
   specifies the match id of the request.


-path path, -pn path
   specifies the full pathname of the request.  Relative pathnames and
   starnames are not allowed.  This control argument may not be used
   with the -entry control argument.
-device STR, -dev STR
   specifies which of the driver's minor devices the command is being
   given for.  This control argument is optional for drivers with a
   single minor device, but is required for drivers with multiple minor
   devices.  It serves to identify which request type the coordinator
   will search to find the request.
-queue N, -q N
   specifies that only queue N of the request type should be searched
   to find a matching request.  This argument is optional; if not
   given, all queues will be searched.


Notes:  All requests to be run by the next command will be charged as
though they came from queue 1.

Requests chosen to run next will be run after any restarted requests
(see the restart command in this section).

This command may be given several times before a go command, to specify
the exact order that requests in the queues are processed.


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
