03/21/85 restart

Syntax as a command:  restart {arg}


Function:  used either to restart processing of the current request
after a device malfunction or to reprocess requests in the
coordinator's saved list.


Arguments:
N
   is the number of the request to be restarted.  The coordinator
   searches its saved list for a matching request.  If found, the
   request will be re-processed ahead of any other requests, including
   those from the "next" command.  If the request had been saved in the
   middle of a copy (suspended), the request will be restarted
   beginning at the top of the following page; a punch request will
   start at the beginning of that copy.
-from N
   specifies that all requests in the series beginning with request N
   are to be restarted.  This is an implicit save of all requests in
   the series.


Notes:  When the restart command is issued directly after a quit
signal, with no arguments, the driver's current request is restarted.
For print requests, the current page number, minus 5, and copy number
are displayed and the driver goes to request command level.  For punch
requests, the number of copies completed (if more than one) is
displayed and the operator is asked to note how many were good.

The user is charged for the requested number of copies only, regardless
of how many copies were produced by this command.

If the request number series of a restarted request is still active,
the driver will be switched to another series.  Each restarted request
is assigned a new request number, and any subsequent restart must be
based on the new request number.


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
