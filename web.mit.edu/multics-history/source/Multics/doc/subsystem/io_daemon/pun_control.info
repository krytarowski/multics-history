03/21/85 pun_control

Syntax as a command:  pun_control {minor_device} {control_mode}
   {-control_args}


Function:  is used by remote drivers at normal command level to set the
punch control modes.  This command does not apply to the central site
punch driver.


Arguments:
minor_device
   is the name of the punch minor device which the command is
   addressing.  This argument is optional if there is only one punch
   minor device, but is required otherwise.


control_mode
   specifies the modes to be set.  The mode name may be preceded by the
   character "^" to reset the mode.  This argument is optional.  If not
   given, the current modes for the specified minor device are printed.
   The following mode is currently defined:
   autopunch
      this mode allows the driver to process punch requests
      continuously without operator intervention.  When this mode is
      not set (i.e., ^autopunch) the driver will come to request
      command level after printing the log message and wait for the
      operator to give the "punch" command before continuing.


Control arguments:
-print
   if control_mode is not given, or if this control argument is given
   alone, the modes are printed.


Notes:  The ^autopunch mode is normally used by a remote operator to
allow the output to be directed to a particular device based on
information in the log message.  Once the proper device has been
assigned, the operator must type "punch" for the driver to continue
with the user's request.


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
