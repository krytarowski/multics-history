02/13/85 init_vol

Syntax as a command:  init_vol volume_name drive_name {-control_arg}


Function:  writes the label of a new physical volume and sets up its
VTOC and volume map.  This operation destroys any previous contents of
the physical volume.  This command can be used in ring 1 or ring 4.  It
is also automatically entered when a cold boot is done to initialize
the RPV.


Arguments:
volume_name
   is the name of a physical volume.
drive_name
   has the form <subsys>_<nn>, e.g., dska_02.


Control arguments:
-special
   enters dialogue with the user.  The -special control argument is
   recommended for all RLV volumes.
-copy
   initializes a copy of an already accepted physical volume (-copy
   also enters dialogue with the user).
-rlv
   specifies that the physical volume is to be registered as part of
   the root logical volume.  this control argument can be used only
   during a cold boot of the root physical volume at ring-1 initializer
   command level.


Notes on special mode:  Special mode is entered when -special is given
on an init_vol command line, when the rebuild_disk command is used, or
when a cold boot of the RPV is done.  In special mode, the user may
specify various parameters of the volume being initialized as other
than their default values.  Special mode uses a request loop subsystem
to allow entry of these parameters.  This includes the ability to
specify the locations and extents of partitions.

Defaults for volume initialized by init_vol or rebuild_disk command are
no partitions and VTOC size constrained by average segment length of
5.0.


Defaults for RPV initialized by cold boot sequence are partitions laid
out on pack as follows.

           partition        partition          low/high
             name       size (in records)     end of pack

           HC                 2500            low
           CONF                  4            low
           <paging region>    <all space not used by partitions>
           FILE                255            high
           BCE                2200            high
           LOG                 256            high
           DUMP               2000            high
           BOS                 270            high
           ALT              as needed         high


VTOC size constrained by average segment length of 2.0

For non-RPV packs belonging to the RLV, it is recommended that special
mode be used to set an average segment length of 4.0 since directories,
which reside on the RLV, are usually smaller than other segments.  A
smaller average segment length increases the number of VTOC entries
(VTOCES) on the pack.  Since it is easier to make the VTOC bigger than
to make it smaller, the recommended procedure is to start with 4.0 as
an average segment length.  If more VTOCES are needed later, the
rebuild_disk command can be used to define them.

When using volume backup to recover the contents of a disk pack, make
sure there are at least as many available records and total VTOC
entries as there were on the physical volume before it was damaged.


Notes on request loop of init_vol:  The following request lines may be
typed when init_vol is invoked with the -special control argument,
when the rebuild_disk command is being used, or within the cold boot
sequence.
asl FFF.FF, avg FFF.FF
   specifies the average segment length, which is used to determine the
   VTOC size.  As partitions are defined, the VTOC size is adjusted to
   maintain a VTOC entry to free page ratio producing this average
   segment length.  When operating in this mode (the default, with
   average segment length = 5.0), the parameters are said to be
   constrained by average segment length.
default
   causes all parameters to be reset to their cold boot defaults,
   including the list of partitions.  This request is only valid within
   the cold boot sequence.


end
   causes the command init_vol or rebuild_disk to proceed using the
   parameters as they stand at this point.
help
   lists all requests available within the init_vol request loop.
lace N
   specifies physical address assignment interlace; i.e., specifies
   that the system should try to place the pages of a segment N disk
   records apart on the target disk.  The default value for N is 2.
   This request is only valid in the rebuild_disk command.


list
   causes the current parameters to be listed, including partition
   data, VTOC size, number of VTOC entries and effective average
   segment length.  Issuing other requests causes these parameters to
   change.  When the request loop is entered, a list request is
   performed automatically.
nvtoce N
   specifies the VTOC size by the number of VTOC entries to be created.
   As five VTOC entries occupy each page, this number is rounded up to
   the next five before use.


   This constrains parameters by VTOC size.
part name hilow size
   where name is a 4-character or fewer partition name, hilow is either
   "high" or "low", and size is the partition size in records, defines
   a partition to be allocated on the pack.  The hilow argument
   specifies which end of the pack, with respect to device address, the
   partition shall be allocated.  Successive requests for "high"
   partitions receive successively lower addresses, and successive
   requests for "low" partitions receive successively higher addresses.
   Partitions may not be redefined without issuing the "startover"
   request.
quit
   causes the command init_vol or rebuild_disk to be aborted, without
   initializing or rebuilding any disks.  This request is not valid
   within the cold boot sequence.


startover
   causes all parameters to be reset to their defaults (init_vol
   command defaults, not cold boot defaults).  In particular, no
   partitions are defined, even in the cold boot environment.
vtoc N
   specifies the total number of pages to be allocated for the volume
   header and volume table of contents (VTOC).  All other space on the
   pack is available for paging and partitions.  When the "vtoc" or
   "nvtoce" request is given, the parameters are said to be constrained
   by VTOC size, and average segment length varies as partitions are
   defined.


Notes:  The init_vol command queries the user before destroying the
label of any pack that appears to be a validly labeled pack.  A message
giving the pack's physical volume name and time of last use is
displayed.

The init_vol command takes about 90 seconds for a model M400 disk.


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
