02/13/85 load_mpx

Syntax as a command:  load_mpx name {-control_args}


Function:  forces an immediate reload of the specified multiplexer.
Reloading a running multiplexer hangs up any users logged in over its
channels.  Therefore, if there are any such users, and the -force
control argument is not given, their number is printed, and the reload
is refused.  The multiplexer should be stopped, and the users bumped,
before the reload takes place.  (See the stop_mpx and bump commands.)
The -force control argument can be used to override this restriction.
This command can be used in ring 4 only.


Arguments:
name
   designates the multiplexer that is to be loaded.


Control arguments:
-no_start, -ns
   does not listen for calls on the channels of this multiplexer when
   the load completes.  The default is to listen to the channels.  (See
   the start_mpx command.)
-check, -ck
   check consistency between channels listed in the CDT and channels
   actually configured on the multiplexer, reporting inconsistencies.
   This control argument should be used after any change in channel
   configuration.  Not all multiplexers may implement this control
   argument.  For FNPs, inconsistencies are reported on the FNP
   console.
-force
   reloads the multiplexer even if some of its channels are in use,
   bumping users logged in on the channel.


Notes:  This command should only be used under direction of the system
programming staff.  The answering service loads multiplexers
automatically under normal circumstances.

If channels of the multiplexer have been added or deleted since the
last time the multiplexer was loaded, these additions and deletions
take effect with the next load_mpx command.


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
