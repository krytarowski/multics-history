02/18/85 reload_system_release

Syntax as a command:  reload_system_release {-control_args}


Function:  loads new release tapes into the hierarchy.  It should not
be used for recovery.  It deletes segments and directories from the
hierarchy that are not present on the tape, and replaces existing
segments and directories with their counterparts from the tape.  This
command overrides the checks employed by the reload Multics command.
In other words, it allows directories to be deleted, and it allows
segments and directories to be replaced in the hierarchy even if they
were modified after the time at which they were put on the tape.  Since
it turns off the checks employed by the reload Multics command and this
is remembered for the life of the process, and since there are no
control arguments to turn the checks back on, use of any other backup
commands in the same process as the reload_system_release command is
not recommended.  The reload_system_release command calls the
backup_load command to do the actual reloading.  These command can be
used in ring 4 only.


The reload_system_release command places its map in the directory
>reload_dir (to which the process must have sma access), and
automatically dprints it.  The reload_system_release command causes the
entire RLV to be accepted, if it isn't already accepted.  Quota on the
reloaded directories is force-set to that specified on the tape.

The reload_system_release command is one of the commands used for
hierarchy reloading and retrieving of storage system segments and
directories.  The other commands are:

      backup_load
      reload (initializer command)
      reload (Multics command)
      retrieve


You should note that argument processing for all of the hierarchy
backup commands is performed by a common argument processing procedure.
The values of all arguments are remembered in static storage and remain
in effect for the life of the process, unless changed by arguments
given in subsequent invocations of backup commands.  It should also be
noted that the dumping commands and the reloading/retrieving commands
are all part of the same hierarchy backup system, and argument values
set by the dumping commands remain in effect for the
reloading/retrieving commands and vice versa, unless overridden.
However, dumping and reloading cannot be done in the same process; use
the new_proc command between dumping and reloading.  See "Notes on
Default Arguments" below.


Control arguments:
-all
   causes segments to be retrieved from the tape regardless of their
   date/time dumped.  This control argument overrides a previously
   given DATE argument.  This is the default.
-brief_map, -bfmap
   functions like -long_map but lists the processed entries in a
   shorter format, with entries separated by blank lines instead of
   formfeeds.  The default is -long_map.
-debug
   disables those hphcs_ calls that set quotas and transparency
   switches.
-destination STR, -ds STR
   specifies a destination for printing maps and error file.  The
   default is "incremental" for maps and "error file" for error files.


-error_of
   writes error messages into a file rather than printing them.  The
   name of the error file is printed when the first error is
   encountered.  This is the default.
-error_on
   writes error messages on the user's terminal.
-first
   prevents searching a tape for additional copies of a requested
   segment or subtree after the first copy has been retrieved.
-header STR, -he STR
   specifies a heading for printing maps and error files.
-last
   indicates that the last copy of a given segment or subtree on a tape
   or set of tapes is to be retrieved.  This is the default.


-long_map, -lgmap
   writes a map file (with the suffix ".map") that lists the processed
   segments and directories in long format, with one entry to a page.
   This is the default.
-map
   writes a list of the segments and directories processed into a file.
   This is the default.
-nodebug
   enables hphcs_ calls to set quotas and the transparency switches.
   This is the default.
-nomap
   inhibits listing of the names of processed segments and directories.
-noprimary, -npri
   uses each pathname as given.  The default is -primary.


-noqcheck
   causes the hierarchy reload to be done with quota checking
   suspended.  Access to hphcs_ is required.  This is the default.
-noquota
   inhibits resetting of quotas.  See -quota.  This is the default.
-noreload
   inhibits actual hierarchy reloading of segments into the hierarchy.
   This control argument can be used with -map to create a table of
   contents of the tape.  The -noreload control argument also causes
   the names that would have been reloaded to be put into the map.
-nosetlvid
   inhibits the setting of the logical volume identifiers for each
   directory to be reloaded.


-notrim
   inhibits deletion of entries in a directory.  Entries can only be
   added or modified.
-operator STR
   indicates that STR is the user's name or initials (up to 16
   characters in length).
-primary, -pri
   replaces all directory names in each pathname with the primary
   names.  This is the default.
-pvname STR
   indicates that segments and directories may only be reloaded onto
   the physical volume specified by STR.
-qcheck
   causes quota restrictions to be enforced during the reload.


-quota
   causes the quotas on directories being reloaded to be set to the
   values they had when the directories were dumped.  Access to hphcs_
   is required.  This is the default for the reload command.
-reload
   enables actual reloading of segments into the hierarchy.  This is
   the default.
-request_type STR, -rqt STR
   specifies an output request type for printing maps and error files.
   Available request types can be listed by using the
   print_request_types command (described in the Multics Commands and
   Active Functions manual, Order No.  AG92).  The default is
   "printer".


-setlvid
   enables setting of the logical volume identifier for reloaded
   entries inferior to each directory reloaded.  This is the default.
-trim
   enables deletion of all entries in a directory not found in the copy
   of that directory being reloaded.  This causes entries deleted from
   an earlier version of the directory to be deleted when a later
   version is reloaded.  It has effect only in the case of a directory
   that is both on the tape and in the hierarchy.  This is the default.
DATE
   an argument beginning with a character other than "-", or ">" is
   assumed to be a date in a format acceptable to the
   convert_date_to_binary_ subroutine.  If it can be converted
   successfully, then the hierarchy retriever only retrieves segments
   and directories dumped at or after the given date/time.


Notes on default arguments:  The values of arguments given to any of
the hierarchy backup commands are remembered in static storage and
remain in effect for the life of the process, unless explicitly changed
during the invocation of a subsequent backup command.

The following defaults are in effect for the reloader and retriever
before any backup commands are given; they are not, however, reset to
these values at the start of each backup command, except as noted
below.

      -all		-primary
      -error_of		-reload
      -map		-setlvid
      -nodebug		-trim
      -nohold
      -noquota


The following defaults are set automatically at the time the respective
commands are executed:

      reload (initializer command), reload (Multics command),
        reload_system_release
         -quota
         -trim

      retrieve
         -all
         -noquota
         -notrim

      All of the above commands
         -map



                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
