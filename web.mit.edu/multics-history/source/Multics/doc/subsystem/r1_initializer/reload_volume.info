10/03/86 reload_volume

Syntax as a command:  reload_volume -control_args


Function:  reconstructs the contents of physical volumes using the dump
volumes produced by the volume dumper facility.  This command can be
used in ring 1 or ring 4.


Control arguments:
-disk_model STR
   where STR is the type of disk being reloaded.  STR must be one of
   the following:


         d400		d500             3381
         d402		d501
         d451		3380

   If not specified, the registration information for the physical
   volume to be reloaded is used.  This control argument is optional
   and is not allowed when more than one physical volume is being
   reloaded.


-error_on
   specifies that error messages are written to the error_output switch
   as well as the rldr_err.mm/dd/yy.hhmm.s segment.  The default is
   off.  This control argument is optional.
-input_volume_desc STR
   where STR is an attach description for the dump volumes the reloader
   reads.  The dump volume name is inserted in the specified attach
   description at the first occurrence of the string "^a" within the
   attach description.  The default attach description is:

         tape_mult_ ^a -system

   This control argument is optional.


-manual
   specifies that the dump volumes are requested by the reloader,
   rather than being automatically determined.  If there are no more
   dump volumes to read the user should type a period (.).  This
   control argument is optional.
-no_detach
   specifies that, at the completion of the reload, neither the dump
   volume nor the physical volume are detached.  The default is off.
   This control argument is optional and is not allowed when more than
   one physical volume is being reloaded.


-no_object
   specifies that segments and directories are not read from the dump
   volumes and thus not written to the physical volume.  In this case
   only the VTOC is reloaded.  The default is that segments and
   directories are read from the dump volumes.  This control argument
   is optional.
-operator STR
   specifies the name of the user doing the reload.  This control
   argument is required.


-output_volume_desc STR
   where STR is an attach description for the physical volume the
   reloader writes.  The physical volume name is inserted at the first
   occurrence of the string "^a" in the attach description, and the
   type at the second occurrence.  The default attach description is:

         rdisk_ ^a ^a -write -system

   This control argument is optional.


-pvname STR1 STR2...STRn
   specifies the name(s) of the physical volume(s) to be reloaded.
   This control argument is required and may appear more than once.
-pvname_device, -pvdv STRP1 STRD1...STRPn STRDn
   specifies the name(s) of the physical volume(s) to be reloaded, and
   what device(s) the volume(s) will be on.  STRPi and STRDi make up
   an ordered pair list of pvname (STRPi) followed by the device_name
   (STRDi) that will contain the physical volume.  This control
   argument is useful when reloading devices that have fixed media and
   is the only way to reload a physical volume to a subvolume of a
   device.  This may only be used with the default output attach
   description.  The device usage must be set for "io" by the
   set_drive_usage command.  If this control argument is used there is
   not need to use the assign_resource command.


-restart
   specifies that the reloader is restarted using control information
   contained in the control segment in the working directory (the
   suffix "control" is assumed if not specified).  This control
   argument should only be used if a system failure occurs during a
   reload sequence.  The default is off.
-save
   specifies that an already BCE restored non-initialized disk is to be
   used as output.  See "Notes" below.  This control argument is
   optional.  The use of this control argument and the specification of
   more than one physical volume implies that all specified physical
   volumes have been BCE restored.  The reload_volume command queries
   the user to confirm this fact.


-working_dir, -wd
   specifies that the volume backup databases are to be searched
   relative to the working directory.  The default is to search
   relative to the >ddd>volume_backup directory.  This control argument
   can be used to cause reloading of physical volumes that do not
   belong to the currently mounted storage system.  All specified
   physical volumes must "belong" to the same RPV.  This control
   argument is optional.


Notes:  When you're doing a volume reload of a single physical volume
which resides on a MSU 500/501 disk drive, you must use the
assign_resource command to assign the disk_drive resource on which you
want the physical volume to reside after the reload.  In order for this
assignment to succeed, the operator must have set both this disk_drive
resource and its partner on the shared spindle to "io" with the
set_drive_usage command.  Since assign_resource is only available in
ring 4, this restriction does not apply to ring 1 reloads.

The volume reloader can use either a preinitialized disk pack
(initialized by the init_vol initializer command) or a disk pack
restored by BOS, as an output medium.  If the pack is restored by BOS,
the -save control argument must be specified.


If you do a shutdown after you've done a BCE restore but before you've
done a reload_volume -save, the reload_volume -save will not work.  The
reloader uses the unmounted time in the pack's label to find out when
it should start looking for dump volumes.  A shutdown sets the
unmounted time in the label to a time which is later than that of any
dump which can be available.  If necessary, you can use the -manual
control argument in addition to the -save control argument to force the
reloader to do the reload.


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
