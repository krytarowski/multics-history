11/08/90  Standard subsystem request:  abbrev, ab

Syntax:  ab {-control_args}


Syntax as an active request:  [ab]


Function:  controls abbreviation processing within the subsystem.  As
an active request, returns "true" if abbreviation expansion of request
lines is currently enabled within the subsystem and "false" otherwise.


Control arguments:  may not be used with the active request.
-off
   specifies that abbreviations are not to be expanded.
-on
   specifies that abbreviations should be expanded. (Default)
-profile PATH
   specifies that the segment named by PATH is to be used as the
   profile segment; the suffix ".profile" is added to PATH if not
   present.  The segment named by PATH must exist.  This control
   argument implies "-abbrev".

Notes:
Most subsystems which support abbreviation processing provide command
line control arguments (-abbrev, -no_abbrev, -profile) to specify the
initial state of abbreviation processing within the subsystem.  For
example, a Multics abbreviation could be defined to invoke the
read_mail subsystem with a default profile as follows:
   .ab Rdm do "read_mail -profile [hd]>mail_system &rf1"

If invoked with no arguments, this request will enable abbreviation
processing within the subsystem using the profile that was last used in
this subsystem invocation.  If abbreviation processing was not
previously enabled, the profile in use at Multics command level is
used; this profile is normally [home_dir]>Person_id.profile.

See MPM Commands for a description of abbreviation processing.


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
