12/01/86 set_scope, ss


Syntax: ss table_name1 permit_ops1 prevent_ops1 {...  table_nameN
                       permit_opsN prevent_opsN} {-control_arg}


Syntax as an active request: [ss table_name1 permit_ops1 prevent_ops1
         {... table_nameN permit_opsN prevent_opsN} {-control_arg}]


Function:  defines a current scope of access to the data base for
nonexclusive opening modes.  This request and the del_scope request are
the means through which the user defines requirements to the linus
concurrent access control mechanism.  Every table that the user wishes
to access for a given period must be included within the user's scope
of access for that same period.  As an active request, it returns
"true" if the scope was set and "false" if the scope was not set.


Arguments:
table_namei
   the name of a nontemporary table within the data base that is to be
   included in the current scope of access.
permit_opsi
   is a character string indicating which types of data base operations
   are to be permitted the user who is setting scope for the
   corresponding table.  The character string is the concatenation of
   the codes for all operations to be permitted.
prevent_opsi
   is a character string similar to that for permit_opsi indicating
   which types of data base operations are to be denied other users for
   the corresponding table.


Control arguments:
-time seconds, -tm seconds
   specifies time in seconds that the user is willing to wait for the
   scope to become available (DEFAULT -- 900 seconds).


Notes:  Operation codes are:  "r" (retrieve), "m" (modify), "d"
(delete), "s" (store), and "n" (null).  The current scope of access
must be empty when a set_scope is requested.


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
