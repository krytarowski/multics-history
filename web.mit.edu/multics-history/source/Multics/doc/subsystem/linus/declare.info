12/01/86  declare, dcl

Syntax:  dcl fn_name fn_type


Function:  allows the user to declare a nonstandard function which may
be invoked in a subsequent query.  A nonstandard function is any
function not included in built-in functions listed in Section 2, and
may be user-written or may be provided by the local installation.  Two
types of functions may be declared:  set functions which operate on
multiple sets of values and scalar functions which operate on one
occurrence of a set of values.


Arguments:
fn_name
   is the name of the function being declared.  The fn_name must be the
   name of an object segment that can be found using the search rules
   currently in effect.
fn_type
   is the type of the function being declared.  Two types are
   permitted, set or scalar.  A set-type-function operates on multiple
   sets of selected values, whereas a scalar-type-function operates on
   one set of specified values.


Notes:  Scalar functions can accept column values as input from one
table only, provided no row designators are used.  If row designators
are specified, column names must all be qualified with the same row
designator.


Several built-in functions are provided as a standard part of linus.
It is not necessary to declare built-in functions.  If a declare
function has the same name as a built-in function, the declared
function, rather than the built-in function, is invoked when the
function name is referenced.


                                          -----------------------------------------------------------


Historical Background

This edition of the Multics software materials and documentation is provided and donated
to Massachusetts Institute of Technology by Group BULL including BULL HN Information Systems Inc. 
as a contribution to computer science knowledge.  
This donation is made also to give evidence of the common contributions of Massachusetts Institute of Technology,
Bell Laboratories, General Electric, Honeywell Information Systems Inc., Honeywell BULL Inc., Groupe BULL
and BULL HN Information Systems Inc. to the development of this operating system. 
Multics development was initiated by Massachusetts Institute of Technology Project MAC (1963-1970),
renamed the MIT Laboratory for Computer Science and Artificial Intelligence in the mid 1970s, under the leadership
of Professor Fernando Jose Corbato. Users consider that Multics provided the best software architecture 
for managing computer hardware properly and for executing programs. Many subsequent operating systems 
incorporated Multics principles.
Multics was distributed in 1975 to 2000 by Group Bull in Europe , and in the U.S. by Bull HN Information Systems Inc., 
as successor in interest by change in name only to Honeywell Bull Inc. and Honeywell Information Systems Inc. .

                                          -----------------------------------------------------------

Permission to use, copy, modify, and distribute these programs and their documentation for any purpose and without
fee is hereby granted,provided that the below copyright notice and historical background appear in all copies
and that both the copyright notice and historical background and this permission notice appear in supporting
documentation, and that the names of MIT, HIS, BULL or BULL HN not be used in advertising or publicity pertaining
to distribution of the programs without specific prior written permission.
    Copyright 1972 by Massachusetts Institute of Technology and Honeywell Information Systems Inc.
    Copyright 2006 by BULL HN Information Systems Inc.
    Copyright 2006 by Bull SAS
    All Rights Reserved
